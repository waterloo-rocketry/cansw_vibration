

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 19:41:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=3
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=3
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	text123,global,reloc=2,class=CODE,delta=1,inline
   140                           	psect	text124,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text125,global,reloc=2,class=CODE,delta=1,inline
   142                           	psect	text126,global,reloc=2,class=CODE,delta=1,inline
   143                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   144                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   146                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   147                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   148                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   149   000000                     
   150                           ; Generated 12/10/2023 GMT
   151                           ; 
   152                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   153                           ; All rights reserved.
   154                           ; 
   155                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   156                           ; 
   157                           ; Redistribution and use in source and binary forms, with or without modification, are
   158                           ; permitted provided that the following conditions are met:
   159                           ; 
   160                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   161                           ;        conditions and the following disclaimer.
   162                           ; 
   163                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   164                           ;        of conditions and the following disclaimer in the documentation and/or other
   165                           ;        materials provided with the distribution. Publication is not required when
   166                           ;        this file is used in an embedded application.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18F26K83 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184   000000                     
   185 ;; Function _SPI1_WriteBlock is unused but had its address taken
   186   000000                     
   187 ;; Function _SPI1_ReadBlock is unused but had its address taken
   188   000000                     
   189 ;; Function _SPI1_WriteByte is unused but had its address taken
   190   000000                     
   191 ;; Function _SPI1_ReadByte is unused but had its address taken
   192   000000                     
   193                           	psect	idataCOMRAM
   194   00A44A                     __pidataCOMRAM:
   195                           	callstack 0
   196                           
   197                           ;initializer for _mediaInformation
   198   00A44A  00                 	db	0
   199   00A44B  0200               	dw	512
   200   00A44D  00                 	db	0
   201   00A44E  0000               	dw	0
   202   00A450  0000               	dw	0
   203   00A452  00                 	db	0
   204                           
   205                           	psect	mediumconst
   206   00FEC2                     __pmediumconst:
   207                           	callstack 0
   208   00FEC2  00                 	db	0
   209   00FEC3                     _ExCvt:
   210                           	callstack 0
   211   00FEC3  80                 	db	128
   212   00FEC4  9A                 	db	154
   213   00FEC5  45                 	db	69
   214   00FEC6  41                 	db	65
   215   00FEC7  8E                 	db	142
   216   00FEC8  41                 	db	65
   217   00FEC9  8F                 	db	143
   218   00FECA  80                 	db	128
   219   00FECB  45                 	db	69
   220   00FECC  45                 	db	69
   221   00FECD  45                 	db	69
   222   00FECE  49                 	db	73
   223   00FECF  49                 	db	73
   224   00FED0  49                 	db	73
   225   00FED1  8E                 	db	142
   226   00FED2  8F                 	db	143
   227   00FED3  90                 	db	144
   228   00FED4  92                 	db	146
   229   00FED5  92                 	db	146
   230   00FED6  4F                 	db	79
   231   00FED7  99                 	db	153
   232   00FED8  4F                 	db	79
   233   00FED9  55                 	db	85
   234   00FEDA  55                 	db	85
   235   00FEDB  59                 	db	89
   236   00FEDC  99                 	db	153
   237   00FEDD  9A                 	db	154
   238   00FEDE  9B                 	db	155
   239   00FEDF  9C                 	db	156
   240   00FEE0  9D                 	db	157
   241   00FEE1  9E                 	db	158
   242   00FEE2  9F                 	db	159
   243   00FEE3  41                 	db	65
   244   00FEE4  49                 	db	73
   245   00FEE5  4F                 	db	79
   246   00FEE6  55                 	db	85
   247   00FEE7  A5                 	db	165
   248   00FEE8  A5                 	db	165
   249   00FEE9  A6                 	db	166
   250   00FEEA  A7                 	db	167
   251   00FEEB  A8                 	db	168
   252   00FEEC  A9                 	db	169
   253   00FEED  AA                 	db	170
   254   00FEEE  AB                 	db	171
   255   00FEEF  AC                 	db	172
   256   00FEF0  AD                 	db	173
   257   00FEF1  AE                 	db	174
   258   00FEF2  AF                 	db	175
   259   00FEF3  B0                 	db	176
   260   00FEF4  B1                 	db	177
   261   00FEF5  B2                 	db	178
   262   00FEF6  B3                 	db	179
   263   00FEF7  B4                 	db	180
   264   00FEF8  B5                 	db	181
   265   00FEF9  B6                 	db	182
   266   00FEFA  B7                 	db	183
   267   00FEFB  B8                 	db	184
   268   00FEFC  B9                 	db	185
   269   00FEFD  BA                 	db	186
   270   00FEFE  BB                 	db	187
   271   00FEFF  BC                 	db	188
   272   00FF00  BD                 	db	189
   273   00FF01  BE                 	db	190
   274   00FF02  BF                 	db	191
   275   00FF03  C0                 	db	192
   276   00FF04  C1                 	db	193
   277   00FF05  C2                 	db	194
   278   00FF06  C3                 	db	195
   279   00FF07  C4                 	db	196
   280   00FF08  C5                 	db	197
   281   00FF09  C6                 	db	198
   282   00FF0A  C7                 	db	199
   283   00FF0B  C8                 	db	200
   284   00FF0C  C9                 	db	201
   285   00FF0D  CA                 	db	202
   286   00FF0E  CB                 	db	203
   287   00FF0F  CC                 	db	204
   288   00FF10  CD                 	db	205
   289   00FF11  CE                 	db	206
   290   00FF12  CF                 	db	207
   291   00FF13  D0                 	db	208
   292   00FF14  D1                 	db	209
   293   00FF15  D2                 	db	210
   294   00FF16  D3                 	db	211
   295   00FF17  D4                 	db	212
   296   00FF18  D5                 	db	213
   297   00FF19  D6                 	db	214
   298   00FF1A  D7                 	db	215
   299   00FF1B  D8                 	db	216
   300   00FF1C  D9                 	db	217
   301   00FF1D  DA                 	db	218
   302   00FF1E  DB                 	db	219
   303   00FF1F  DC                 	db	220
   304   00FF20  DD                 	db	221
   305   00FF21  DE                 	db	222
   306   00FF22  DF                 	db	223
   307   00FF23  E0                 	db	224
   308   00FF24  E1                 	db	225
   309   00FF25  E2                 	db	226
   310   00FF26  E3                 	db	227
   311   00FF27  E4                 	db	228
   312   00FF28  E5                 	db	229
   313   00FF29  E6                 	db	230
   314   00FF2A  E7                 	db	231
   315   00FF2B  E8                 	db	232
   316   00FF2C  E9                 	db	233
   317   00FF2D  EA                 	db	234
   318   00FF2E  EB                 	db	235
   319   00FF2F  EC                 	db	236
   320   00FF30  ED                 	db	237
   321   00FF31  EE                 	db	238
   322   00FF32  EF                 	db	239
   323   00FF33  F0                 	db	240
   324   00FF34  F1                 	db	241
   325   00FF35  F2                 	db	242
   326   00FF36  F3                 	db	243
   327   00FF37  F4                 	db	244
   328   00FF38  F5                 	db	245
   329   00FF39  F6                 	db	246
   330   00FF3A  F7                 	db	247
   331   00FF3B  F8                 	db	248
   332   00FF3C  F9                 	db	249
   333   00FF3D  FA                 	db	250
   334   00FF3E  FB                 	db	251
   335   00FF3F  FC                 	db	252
   336   00FF40  FD                 	db	253
   337   00FF41  FE                 	db	254
   338   00FF42  FF                 	db	255
   339   00FF43                     __end_of_ExCvt:
   340                           	callstack 0
   341   00FF43                     _sdmmc_cmdtable:
   342                           	callstack 0
   343   00FF43  00                 	db	0
   344   00FF44  95                 	db	149
   345   00FF45  00                 	db	0
   346   00FF46  00                 	db	0
   347   00FF47  01                 	db	1
   348   00FF48  F9                 	db	249
   349   00FF49  00                 	db	0
   350   00FF4A  00                 	db	0
   351   00FF4B  08                 	db	8
   352   00FF4C  87                 	db	135
   353   00FF4D  04                 	db	4
   354   00FF4E  00                 	db	0
   355   00FF4F  09                 	db	9
   356   00FF50  AF                 	db	175
   357   00FF51  00                 	db	0
   358   00FF52  01                 	db	1
   359   00FF53  0A                 	db	10
   360   00FF54  1B                 	db	27
   361   00FF55  00                 	db	0
   362   00FF56  01                 	db	1
   363   00FF57  0C                 	db	12
   364   00FF58  C3                 	db	195
   365   00FF59  01                 	db	1
   366   00FF5A  00                 	db	0
   367   00FF5B  0D                 	db	13
   368   00FF5C  AF                 	db	175
   369   00FF5D  02                 	db	2
   370   00FF5E  00                 	db	0
   371   00FF5F  10                 	db	16
   372   00FF60  FF                 	db	255
   373   00FF61  00                 	db	0
   374   00FF62  00                 	db	0
   375   00FF63  11                 	db	17
   376   00FF64  FF                 	db	255
   377   00FF65  00                 	db	0
   378   00FF66  01                 	db	1
   379   00FF67  12                 	db	18
   380   00FF68  FF                 	db	255
   381   00FF69  00                 	db	0
   382   00FF6A  01                 	db	1
   383   00FF6B  18                 	db	24
   384   00FF6C  FF                 	db	255
   385   00FF6D  00                 	db	0
   386   00FF6E  01                 	db	1
   387   00FF6F  19                 	db	25
   388   00FF70  FF                 	db	255
   389   00FF71  00                 	db	0
   390   00FF72  01                 	db	1
   391   00FF73  20                 	db	32
   392   00FF74  FF                 	db	255
   393   00FF75  00                 	db	0
   394   00FF76  00                 	db	0
   395   00FF77  21                 	db	33
   396   00FF78  FF                 	db	255
   397   00FF79  00                 	db	0
   398   00FF7A  00                 	db	0
   399   00FF7B  26                 	db	38
   400   00FF7C  DF                 	db	223
   401   00FF7D  01                 	db	1
   402   00FF7E  00                 	db	0
   403   00FF7F  37                 	db	55
   404   00FF80  73                 	db	115
   405   00FF81  00                 	db	0
   406   00FF82  00                 	db	0
   407   00FF83  3A                 	db	58
   408   00FF84  25                 	db	37
   409   00FF85  04                 	db	4
   410   00FF86  00                 	db	0
   411   00FF87  3B                 	db	59
   412   00FF88  25                 	db	37
   413   00FF89  00                 	db	0
   414   00FF8A  00                 	db	0
   415   00FF8B  29                 	db	41
   416   00FF8C  FF                 	db	255
   417   00FF8D  04                 	db	4
   418   00FF8E  00                 	db	0
   419   00FF8F  17                 	db	23
   420   00FF90  FF                 	db	255
   421   00FF91  00                 	db	0
   422   00FF92  00                 	db	0
   423   00FF93                     __end_of_sdmmc_cmdtable:
   424                           	callstack 0
   425   00FF93                     _spiMaster:
   426                           	callstack 0
   427   00FF93  64                 	db	low _SPI1_Close
   428   00FF94  A4                 	db	high _SPI1_Close
   429   00FF95  54                 	db	low _SDFAST_open
   430   00FF96  A4                 	db	high _SDFAST_open
   431   00FF97  7C                 	db	low _SPI1_ExchangeByte
   432   00FF98  A2                 	db	high _SPI1_ExchangeByte
   433   00FF99  38                 	db	low _SPI1_ExchangeBlock
   434   00FF9A  91                 	db	high _SPI1_ExchangeBlock
   435   00FF9B  00                 	db	0
   436   00FF9C  00                 	db	0
   437   00FF9D  00                 	db	0
   438   00FF9E  00                 	db	0
   439   00FF9F  00                 	db	0
   440   00FFA0  00                 	db	0
   441   00FFA1  00                 	db	0
   442   00FFA2  00                 	db	0
   443   00FFA3  00                 	db	0
   444   00FFA4  00                 	db	0
   445   00FFA5  00                 	db	0
   446   00FFA6  00                 	db	0
   447   00FFA7  64                 	db	low _SPI1_Close
   448   00FFA8  A4                 	db	high _SPI1_Close
   449   00FFA9  5C                 	db	low _SDSLOW_open
   450   00FFAA  A4                 	db	high _SDSLOW_open
   451   00FFAB  7C                 	db	low _SPI1_ExchangeByte
   452   00FFAC  A2                 	db	high _SPI1_ExchangeByte
   453   00FFAD  38                 	db	low _SPI1_ExchangeBlock
   454   00FFAE  91                 	db	high _SPI1_ExchangeBlock
   455   00FFAF  00                 	db	0
   456   00FFB0  00                 	db	0
   457   00FFB1  00                 	db	0
   458   00FFB2  00                 	db	0
   459   00FFB3  00                 	db	0
   460   00FFB4  00                 	db	0
   461   00FFB5  00                 	db	0
   462   00FFB6  00                 	db	0
   463   00FFB7  00                 	db	0
   464   00FFB8  00                 	db	0
   465   00FFB9  00                 	db	0
   466   00FFBA  00                 	db	0
   467   00FFBB                     __end_of_spiMaster:
   468                           	callstack 0
   469   00FFBB                     _spi1_configuration:
   470                           	callstack 0
   471   00FFBB  02                 	db	2
   472   00FFBC  20                 	db	32
   473   00FFBD  00                 	db	0
   474   00FFBE  01                 	db	1
   475   00FFBF  00                 	db	0
   476   00FFC0  02                 	db	2
   477   00FFC1  20                 	db	32
   478   00FFC2  00                 	db	0
   479   00FFC3  0E                 	db	14
   480   00FFC4  00                 	db	0
   481   00FFC5  02                 	db	2
   482   00FFC6  40                 	db	64
   483   00FFC7  00                 	db	0
   484   00FFC8  00                 	db	0
   485   00FFC9  00                 	db	0
   486   00FFCA                     __end_of_spi1_configuration:
   487                           	callstack 0
   488   000000                     _OSCTUNE	set	14814
   489   000000                     _OSCFRQ	set	14815
   490   000000                     _ADERRL	set	16098
   491   000000                     _ADERRH	set	16099
   492   000000                     _ADPREVL	set	16109
   493   000000                     _ADPREVH	set	16110
   494   000000                     _ADFLTRL	set	16102
   495   000000                     _ADFLTRH	set	16103
   496   000000                     _ADACCL	set	16104
   497   000000                     _ADACCH	set	16105
   498   000000                     _ADCNT	set	16107
   499   000000                     _ADRESL	set	16111
   500   000000                     _ADRESH	set	16112
   501   000000                     _ADCON0	set	16120
   502   000000                     _ADCON1	set	16121
   503   000000                     _ADPREH	set	16119
   504   000000                     _ADPREL	set	16118
   505   000000                     _ADCAP	set	16117
   506   000000                     _ADACQH	set	16116
   507   000000                     _ADPCH	set	16113
   508   000000                     _ADRPT	set	16108
   509   000000                     _ADACCU	set	16106
   510   000000                     _ADSTPTH	set	16101
   511   000000                     _ADSTPTL	set	16100
   512   000000                     _ADUTHH	set	16097
   513   000000                     _ADUTHL	set	16096
   514   000000                     _ADLTHH	set	16095
   515   000000                     _COMSTATbits	set	16272
   516   000000                     _ECANCONbits	set	16273
   517   000000                     _PIR5	set	14757
   518   000000                     _ANSELC0	set	119552
   519   000000                     _I2C1CON0bits	set	15731
   520   000000                     _I2C1ERRbits	set	15734
   521   000000                     _I2C1PIRbits	set	15737
   522   000000                     _SPI1CON0bits	set	15636
   523   000000                     _ADCON1bits	set	16121
   524   000000                     _ADSTATbits	set	16124
   525   000000                     _ADCON2bits	set	16122
   526   000000                     _ADCON3bits	set	16123
   527   000000                     _ADCON0bits	set	16120
   528   000000                     _TRISCbits	set	16324
   529   000000                     _LATA	set	16314
   530   000000                     _TRISC2	set	130594
   531   000000                     _TRISA4	set	130580
   532   000000                     _TRISA3	set	130579
   533   000000                     _TRISA2	set	130578
   534   000000                     _LATB3	set	130523
   535   000000                     _TRISB3	set	130587
   536   000000                     _LATC6	set	130534
   537   000000                     _TRISC6	set	130598
   538   000000                     _TRISC0	set	130592
   539   000000                     _TRISC1	set	130593
   540   000000                     _LATC2	set	130530
   541   000000                     _LATA4	set	130516
   542   000000                     _LATA3	set	130515
   543   000000                     _LATA2	set	130514
   544   000000                     _BRGCON1bits	set	14083
   545   000000                     _CIOCONbits	set	14080
   546   000000                     _CANSTATbits	set	16270
   547   000000                     _CANCONbits	set	16271
   548   000000                     _T0CON0bits	set	16312
   549   000000                     _INTCON0bits	set	16338
   550   000000                     _RXM0SIDH	set	14264
   551   000000                     _BRGCON3bits	set	14085
   552   000000                     _BRGCON2bits	set	14084
   553   000000                     _RXM1SIDH	set	14268
   554   000000                     _RXM0SIDL	set	14265
   555   000000                     _TXB0CONbits	set	14304
   556   000000                     _PIE5bits	set	14741
   557   000000                     _RXB0CONbits	set	16256
   558   000000                     _RXM1SIDL	set	14269
   559   000000                     _RXB0DLCbits	set	16261
   560   000000                     _RXB0SIDL	set	16258
   561   000000                     _RXB0SIDH	set	16257
   562   000000                     _PIR1bits	set	14753
   563   000000                     _PIR5bits	set	14757
   564   000000                     _TXB0DLCbits	set	14309
   565   000000                     _TXB0SIDL	set	14306
   566   000000                     _TXB0SIDH	set	14305
   567   000000                     _RXB1CONbits	set	14320
   568   000000                     _RXB1SIDH	set	14321
   569   000000                     _TXB0D0	set	14310
   570   000000                     _PMD0	set	14784
   571   000000                     _OSCCON1	set	14809
   572   000000                     _ADLTHL	set	16094
   573   000000                     _RXB0D0	set	16262
   574   000000                     _RXB1DLCbits	set	14325
   575   000000                     _RXB1SIDL	set	14322
   576   000000                     _PIE3bits	set	14739
   577   000000                     _RXB1D0	set	14326
   578   000000                     _TRISA	set	16322
   579   000000                     _LATC	set	16316
   580   000000                     _LATB	set	16315
   581   000000                     _LATAbits	set	16314
   582   000000                     _T0CON1bits	set	16313
   583   000000                     _ADACQL	set	16115
   584   000000                     _ADCLK	set	16127
   585   000000                     _ADACT	set	16126
   586   000000                     _ADREF	set	16125
   587   000000                     _ADSTAT	set	16124
   588   000000                     _ADCON3	set	16123
   589   000000                     _ADCON2	set	16122
   590   000000                     _PIR3bits	set	14755
   591   000000                     _PIR2bits	set	14754
   592   000000                     _OSCCON3	set	14811
   593   000000                     _OSCEN	set	14813
   594   000000                     _RB1PPS	set	14857
   595   000000                     _RB2PPS	set	14858
   596   000000                     _RC1PPS	set	14865
   597   000000                     _RC3PPS	set	14867
   598   000000                     _ANSELA	set	14912
   599   000000                     _ANSELB	set	14928
   600   000000                     _ANSELC	set	14944
   601   000000                     _PMD7	set	14791
   602   000000                     _PMD6	set	14790
   603   000000                     _PMD5	set	14789
   604   000000                     _PMD4	set	14788
   605   000000                     _PMD3	set	14787
   606   000000                     _PMD2	set	14786
   607   000000                     _PMD1	set	14785
   608   000000                     _TRISC	set	16324
   609   000000                     _TRISB	set	16323
   610   000000                     _INLVLC	set	14948
   611   000000                     _SLRCONC	set	14947
   612   000000                     _ODCONC	set	14946
   613   000000                     _WPUC	set	14945
   614   000000                     _WPUE	set	14977
   615   000000                     _INLVLB	set	14932
   616   000000                     _SLRCONB	set	14931
   617   000000                     _ODCONB	set	14930
   618   000000                     _WPUB	set	14929
   619   000000                     _INLVLA	set	14916
   620   000000                     _SLRCONA	set	14915
   621   000000                     _ODCONA	set	14914
   622   000000                     _WPUA	set	14913
   623   000000                     _INLVLE	set	14980
   624   000000                     _SPI1SCKPPS	set	15072
   625   000000                     _I2C1SCLPPS	set	15075
   626   000000                     _I2C1SDAPPS	set	15076
   627   000000                     _CANRXPPS	set	15085
   628   000000                     _CLKRCON	set	15589
   629   000000                     _SPI1RXB	set	15632
   630   000000                     _SPI1TXB	set	15633
   631   000000                     _SPI1TCNTL	set	15634
   632   000000                     _SPI1CON0	set	15636
   633   000000                     _SPI1SDIPPS	set	15073
   634   000000                     _RC5PPS	set	14869
   635   000000                     _SPI1BAUD	set	15641
   636   000000                     _SPI1CLK	set	15644
   637   000000                     _SPI1CON2	set	15638
   638   000000                     _SPI1CON1	set	15637
   639   000000                     _I2C1RXB	set	15722
   640   000000                     _I2C1TXB	set	15723
   641   000000                     _I2C1CNT	set	15724
   642   000000                     _I2C1ADB1	set	15726
   643   000000                     _I2C1CON0	set	15731
   644   000000                     _I2C1STAT1bits	set	15736
   645   000000                     _I2C1ERR	set	15734
   646   000000                     _I2C1PIR	set	15737
   647   000000                     _I2C1CLK	set	15739
   648   000000                     _I2C1CON2	set	15733
   649   000000                     _I2C1CON1	set	15732
   650   000000                     _CLKRCLK	set	15590
   651   00FFCA                     STR_1:
   652   00FFCA  22                 	db	34
   653   00FFCB  2A                 	db	42
   654   00FFCC  2B                 	db	43
   655   00FFCD  2C                 	db	44
   656   00FFCE  3A                 	db	58	;':'
   657   00FFCF  3B                 	db	59	;';'
   658   00FFD0  3C                 	db	60	;'<'
   659   00FFD1  3D                 	db	61	;'='
   660   00FFD2  3E                 	db	62	;'>'
   661   00FFD3  3F                 	db	63	;'?'
   662   00FFD4  5B                 	db	91	;'['
   663   00FFD5  5D                 	db	93	;']'
   664   00FFD6  7C                 	db	124
   665   00FFD7  7F                 	db	127
   666   00FFD8  00                 	db	0
   667   00FFD9                     STR_9:
   668   00FFD9  42                 	db	66	;'B'
   669   00FFDA  45                 	db	69	;'E'
   670   00FFDB  47                 	db	71	;'G'
   671   00FFDC  49                 	db	73	;'I'
   672   00FFDD  4E                 	db	78	;'N'
   673   00FFDE  20                 	db	32
   674   00FFDF  4C                 	db	76	;'L'
   675   00FFE0  4F                 	db	79	;'O'
   676   00FFE1  47                 	db	71	;'G'
   677   00FFE2  0D                 	db	13
   678   00FFE3  0A                 	db	10
   679   00FFE4  00                 	db	0
   680   00FFE5                     STR_8:
   681   00FFE5  44                 	db	68	;'D'
   682   00FFE6  61                 	db	97	;'a'
   683   00FFE7  74                 	db	116	;'t'
   684   00FFE8  61                 	db	97	;'a'
   685   00FFE9  2E                 	db	46
   686   00FFEA  74                 	db	116	;'t'
   687   00FFEB  78                 	db	120	;'x'
   688   00FFEC  74                 	db	116	;'t'
   689   00FFED  00                 	db	0
   690   00FFEE                     STR_11:
   691   00FFEE  25                 	db	37
   692   00FFEF  6C                 	db	108	;'l'
   693   00FFF0  75                 	db	117	;'u'
   694   00FFF1  64                 	db	100	;'d'
   695   00FFF2  0D                 	db	13
   696   00FFF3  0A                 	db	10
   697   00FFF4  00                 	db	0
   698   00FFF5                     STR_5:
   699   00FFF5  46                 	db	70	;'F'
   700   00FFF6  41                 	db	65	;'A'
   701   00FFF7  54                 	db	84	;'T'
   702   00FFF8  33                 	db	51	;'3'
   703   00FFF9  32                 	db	50	;'2'
   704   00FFFA  00                 	db	0
   705   00FFFB                     STR_3:
   706   00FFFB  46                 	db	70	;'F'
   707   00FFFC  41                 	db	65	;'A'
   708   00FFFD  54                 	db	84	;'T'
   709   00FFFE  00                 	db	0
   710   00FFFF  00                 	db	0	; dummy byte at the end
   711   000000                     
   712                           ; #config settings
   713                           
   714                           	psect	cinit
   715   00990C                     __pcinit:
   716                           	callstack 0
   717   00990C                     start_initialization:
   718                           	callstack 0
   719   00990C                     __initialization:
   720                           	callstack 0
   721                           
   722                           ; Initialize objects allocated to COMRAM (9 bytes)
   723                           ; load TBLPTR registers with __pidataCOMRAM
   724   00990C  0E4A               	movlw	low __pidataCOMRAM
   725   00990E  6EF6               	movwf	tblptrl,c
   726   009910  0EA4               	movlw	high __pidataCOMRAM
   727   009912  6EF7               	movwf	tblptrh,c
   728   009914  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   729   009916  6EF8               	movwf	tblptru,c
   730   009918  EE00  F050         	lfsr	0,__pdataCOMRAM
   731   00991C  EE10 F009          	lfsr	1,9
   732   009920                     copy_data0:
   733   009920  0009               	tblrd		*+
   734   009922  006F FFD7 FFEE     	movff	tablat,postinc0
   735   009928  50E5               	movf	postdec1,w,c
   736   00992A  50E1               	movf	fsr1l,w,c
   737   00992C  E1F9               	bnz	copy_data0
   738                           
   739                           ; Clear objects allocated to BIGRAM (1109 bytes)
   740   00992E  EE00  F2B6         	lfsr	0,__pbssBIGRAM
   741   009932  EE11 F055          	lfsr	1,1109
   742   009936                     clear_0:
   743   009936  6AEE               	clrf	postinc0,c
   744   009938  50E5               	movf	postdec1,w,c
   745   00993A  50E1               	movf	fsr1l,w,c
   746   00993C  E1FC               	bnz	clear_0
   747   00993E  50E2               	movf	fsr1h,w,c
   748   009940  E1FA               	bnz	clear_0
   749                           
   750                           ; Clear objects allocated to BANK2 (182 bytes)
   751   009942  EE00  F200         	lfsr	0,__pbssBANK2
   752   009946  0EB6               	movlw	182
   753   009948                     clear_1:
   754   009948  6AEE               	clrf	postinc0,c
   755   00994A  06E8               	decf	wreg,f,c
   756   00994C  E1FD               	bnz	clear_1
   757                           
   758                           ; Clear objects allocated to BANK1 (43 bytes)
   759   00994E  EE00  F1CC         	lfsr	0,__pbssBANK1
   760   009952  0E2B               	movlw	43
   761   009954                     clear_2:
   762   009954  6AEE               	clrf	postinc0,c
   763   009956  06E8               	decf	wreg,f,c
   764   009958  E1FD               	bnz	clear_2
   765                           
   766                           ; Clear objects allocated to COMRAM (35 bytes)
   767   00995A  EE00  F02D         	lfsr	0,__pbssCOMRAM
   768   00995E  0E23               	movlw	35
   769   009960                     clear_3:
   770   009960  6AEE               	clrf	postinc0,c
   771   009962  06E8               	decf	wreg,f,c
   772   009964  E1FD               	bnz	clear_3
   773                           
   774                           ;
   775                           ; Setup IVTBASE
   776                           ;
   777   009966  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   778   009968  6ED5               	movwf	213,c
   779   00996A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   780   00996C  6ED6               	movwf	214,c
   781   00996E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   782   009970  6ED7               	movwf	215,c
   783   009972                     end_of_initialization:
   784                           	callstack 0
   785   009972                     __end_of__initialization:
   786                           	callstack 0
   787   009972  0100               	movlb	0
   788   009974  EFF1  F02B         	goto	_main	;jump to C main() function
   789                           
   790                           	psect	bssCOMRAM
   791   00002D                     __pbssCOMRAM:
   792                           	callstack 0
   793   00002D                     _ioInfo:
   794                           	callstack 0
   795   00002D                     	ds	13
   796   00003A                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   797                           	callstack 0
   798   00003A                     	ds	4
   799   00003E                     _millis_counter:
   800                           	callstack 0
   801   00003E                     	ds	4
   802   000042                     SD_SPI_AsyncWriteTasks@blockCounter:
   803                           	callstack 0
   804   000042                     	ds	2
   805   000044                     SD_SPI_AsyncReadTasks@blockCounter:
   806                           	callstack 0
   807   000044                     	ds	2
   808   000046                     _can_rcv_cb:
   809                           	callstack 0
   810   000046                     	ds	2
   811   000048                     _flags:
   812                           	callstack 0
   813   000048                     	ds	1
   814   000049                     _seen_can_message:
   815                           	callstack 0
   816   000049                     	ds	1
   817   00004A                     SD_SPI_AsyncWriteTasks@command:
   818                           	callstack 0
   819   00004A                     	ds	1
   820   00004B                     SD_SPI_AsyncWriteTasks@data_byte:
   821                           	callstack 0
   822   00004B                     	ds	1
   823   00004C                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   824                           	callstack 0
   825   00004C                     	ds	1
   826   00004D                     _CurrVol:
   827                           	callstack 0
   828   00004D                     	ds	1
   829   00004E                     _overflow_flag:
   830                           	callstack 0
   831   00004E                     	ds	1
   832   00004F                     timer0_handle_interrupt@internal_count:
   833                           	callstack 0
   834   00004F                     	ds	1
   835                           
   836                           	psect	dataCOMRAM
   837   000050                     __pdataCOMRAM:
   838                           	callstack 0
   839   000050                     _mediaInformation:
   840                           	callstack 0
   841   000050                     	ds	9
   842                           
   843                           	psect	bssBANK1
   844   0001CC                     __pbssBANK1:
   845                           	callstack 0
   846   0001CC                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   847                           	callstack 0
   848   0001CC                     	ds	4
   849   0001D0                     _ctx:
   850                           	callstack 0
   851   0001D0                     	ds	4
   852   0001D4                     	ds	3
   853   0001D7                     _width:
   854                           	callstack 0
   855   0001D7                     	ds	2
   856   0001D9                     _prec:
   857                           	callstack 0
   858   0001D9                     	ds	2
   859   0001DB                     	ds	2
   860   0001DD                     _Fsid:
   861                           	callstack 0
   862   0001DD                     	ds	2
   863   0001DF                     _FatFs@ff$F2407:
   864                           	callstack 0
   865   0001DF                     	ds	2
   866   0001E1                     _buf@can_tx_buffer$F1072:
   867                           	callstack 0
   868   0001E1                     	ds	10
   869   0001EB                     _buf:
   870                           	callstack 0
   871   0001EB                     	ds	10
   872   0001F5                     _bw:
   873                           	callstack 0
   874   0001F5                     	ds	2
   875                           
   876                           	psect	bssBANK2
   877   000200                     __pbssBANK2:
   878                           	callstack 0
   879   000200                     _dbuf:
   880                           	callstack 0
   881   000200                     	ds	32
   882   000220                     _tx_pool:
   883                           	callstack 0
   884   000220                     	ds	150
   885                           
   886                           	psect	bssBIGRAM
   887   0002B6                     __pbssBIGRAM:
   888                           	callstack 0
   889   0002B6                     _FatFs:
   890                           	callstack 0
   891   0002B6                     	ds	563
   892   0004E9                     _Fil:
   893                           	callstack 0
   894   0004E9                     	ds	546
   895                           
   896                           	psect	cstackBANK1
   897   000100                     __pcstackBANK1:
   898                           	callstack 0
   899   000100                     ??_remove_chain:
   900   000100                     ??_create_chain:
   901   000100                     dir_sdi@csz:
   902                           	callstack 0
   903   000100                     find_volume@br:
   904                           	callstack 0
   905                           
   906                           ; 16 bytes @ 0x0
   907   000100                     	ds	4
   908   000104                     dir_sdi@clst:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x4
   912   000104                     	ds	4
   913   000108                     create_chain@res:
   914                           	callstack 0
   915   000108                     dir_sdi@fs:
   916                           	callstack 0
   917   000108                     remove_chain@nxt:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x8
   921   000108                     	ds	1
   922   000109                     create_chain@scl:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x9
   926   000109                     	ds	3
   927   00010C                     remove_chain@res:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0xC
   931   00010C                     	ds	1
   932   00010D                     remove_chain@fs:
   933                           	callstack 0
   934   00010D                     create_chain@ncl:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0xD
   938   00010D                     	ds	3
   939   000110                     _find_volume$3099:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x10
   943   000110                     	ds	1
   944   000111                     create_chain@fs:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x11
   948   000111                     	ds	2
   949   000113                     create_chain@cs:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x13
   953   000113                     	ds	1
   954   000114                     _find_volume$3100:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x14
   958   000114                     	ds	2
   959   000116                     find_volume@szbfat:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x16
   963   000116                     	ds	1
   964   000117                     ??_dir_next:
   965   000117                     f_write@fp:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x17
   969   000117                     	ds	2
   970   000119                     f_write@buff:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x19
   974   000119                     	ds	1
   975   00011A                     find_volume@pt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x1A
   979   00011A                     	ds	1
   980   00011B                     f_write@btw:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1B
   984   00011B                     	ds	1
   985   00011C                     find_volume@sysect:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x1C
   989   00011C                     	ds	1
   990   00011D                     f_write@bw:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x1D
   994   00011D                     	ds	2
   995   00011F                     ??_f_write:
   996                           
   997                           ; 1 bytes @ 0x1F
   998   00011F                     	ds	1
   999   000120                     find_volume@vol:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x20
  1003   000120                     	ds	2
  1004   000122                     find_volume@nrsv:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x22
  1008   000122                     	ds	1
  1009   000123                     dir_next@ofs:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x23
  1013   000123                     	ds	1
  1014   000124                     find_volume@tsect:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x24
  1018   000124                     	ds	3
  1019   000127                     dir_next@fs:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x27
  1023   000127                     	ds	1
  1024   000128                     find_volume@stat:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x28
  1028   000128                     	ds	1
  1029   000129                     dir_next@clst:
  1030                           	callstack 0
  1031   000129                     find_volume@nclst:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x29
  1035   000129                     	ds	2
  1036   00012B                     _f_write$3415:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x2B
  1040   00012B                     	ds	2
  1041   00012D                     dir_alloc@dp:
  1042                           	callstack 0
  1043   00012D                     dir_find@dp:
  1044                           	callstack 0
  1045   00012D                     find_volume@fasize:
  1046                           	callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x2D
  1049   00012D                     	ds	2
  1050   00012F                     dir_alloc@nent:
  1051                           	callstack 0
  1052   00012F                     dir_find@fs:
  1053                           	callstack 0
  1054   00012F                     f_write@wbuff:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x2F
  1058   00012F                     	ds	2
  1059   000131                     ??_dir_alloc:
  1060   000131                     dir_find@c:
  1061                           	callstack 0
  1062   000131                     f_write@res:
  1063                           	callstack 0
  1064   000131                     find_volume@bsect:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x31
  1068   000131                     	ds	1
  1069   000132                     dir_find@res:
  1070                           	callstack 0
  1071   000132                     f_write@csect:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x32
  1075   000132                     	ds	1
  1076   000133                     follow_path@dp:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x33
  1080   000133                     	ds	1
  1081   000134                     dir_alloc@fs:
  1082                           	callstack 0
  1083   000134                     f_write@cc:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x34
  1087   000134                     	ds	1
  1088   000135                     follow_path@path:
  1089                           	callstack 0
  1090   000135                     find_volume@i:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x35
  1094   000135                     	ds	1
  1095   000136                     dir_alloc@n:
  1096                           	callstack 0
  1097   000136                     f_write@sect:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x36
  1101   000136                     	ds	1
  1102   000137                     ??_follow_path:
  1103   000137                     find_volume@fmt:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x37
  1107   000137                     	ds	1
  1108   000138                     dir_alloc@res:
  1109                           	callstack 0
  1110   000138                     find_volume@fs:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x38
  1114   000138                     	ds	1
  1115   000139                     dir_register@dp:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x39
  1119   000139                     	ds	1
  1120   00013A                     f_write@clst:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x3A
  1124   00013A                     	ds	1
  1125   00013B                     dir_register@fs:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3B
  1129   00013B                     	ds	2
  1130   00013D                     dir_register@res:
  1131                           	callstack 0
  1132   00013D                     follow_path@fs:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x3D
  1136   00013D                     	ds	1
  1137   00013E                     f_write@wcnt:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x3E
  1141   00013E                     	ds	1
  1142   00013F                     follow_path@ns:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x3F
  1146   00013F                     	ds	1
  1147   000140                     follow_path@res:
  1148                           	callstack 0
  1149   000140                     f_write@fs:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x40
  1153   000140                     	ds	1
  1154   000141                     f_open@fp:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x41
  1158   000141                     	ds	2
  1159   000143                     f_open@path:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x43
  1163   000143                     	ds	2
  1164   000145                     f_open@mode:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x45
  1168   000145                     	ds	1
  1169   000146                     ??_f_open:
  1170                           
  1171                           ; 1 bytes @ 0x46
  1172   000146                     	ds	8
  1173   00014E                     f_open@dw:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x4E
  1177   00014E                     	ds	4
  1178   000152                     f_open@sc:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x52
  1182   000152                     	ds	4
  1183   000156                     f_open@bcs:
  1184                           	callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x56
  1187   000156                     	ds	4
  1188   00015A                     f_open@cl:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x5A
  1192   00015A                     	ds	4
  1193   00015E                     f_open@ofs:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x5E
  1197   00015E                     	ds	4
  1198   000162                     f_open@clst:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x62
  1202   000162                     	ds	4
  1203   000166                     f_open@fs:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x66
  1207   000166                     	ds	2
  1208   000168                     f_open@res:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x68
  1212   000168                     	ds	1
  1213   000169                     f_open@dj:
  1214                           	callstack 0
  1215                           
  1216                           ; 40 bytes @ 0x69
  1217   000169                     	ds	40
  1218   000191                     send_status_ok@timestamp:
  1219                           	callstack 0
  1220                           
  1221                           ; 3 bytes @ 0x91
  1222   000191                     	ds	3
  1223   000194                     send_status_ok@text:
  1224                           	callstack 0
  1225                           
  1226                           ; 3 bytes @ 0x94
  1227   000194                     	ds	3
  1228   000197                     send_status_ok@time:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x97
  1232   000197                     	ds	4
  1233   00019B                     send_status_ok@board_stat_msg:
  1234                           	callstack 0
  1235                           
  1236                           ; 11 bytes @ 0x9B
  1237   00019B                     	ds	11
  1238   0001A6                     ??_main:
  1239                           
  1240                           ; 1 bytes @ 0xA6
  1241   0001A6                     	ds	4
  1242   0001AA                     main@last_accel_millis:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0xAA
  1246   0001AA                     	ds	4
  1247   0001AE                     main@sys_mode:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0xAE
  1251   0001AE                     	ds	1
  1252   0001AF                     main@buf_status:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0xAF
  1256   0001AF                     	ds	1
  1257   0001B0                     main@last_status_millis:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0xB0
  1261   0001B0                     	ds	4
  1262   0001B4                     main@x:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0xB4
  1266   0001B4                     	ds	2
  1267   0001B6                     main@y:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0xB6
  1271   0001B6                     	ds	2
  1272   0001B8                     main@z:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0xB8
  1276   0001B8                     	ds	2
  1277   0001BA                     main@msg:
  1278                           	callstack 0
  1279                           
  1280                           ; 11 bytes @ 0xBA
  1281   0001BA                     	ds	11
  1282   0001C5                     main@can_setup:
  1283                           	callstack 0
  1284                           
  1285                           ; 7 bytes @ 0xC5
  1286   0001C5                     	ds	7
  1287                           
  1288                           	psect	cstackBANK0
  1289   000060                     __pcstackBANK0:
  1290                           	callstack 0
  1291   000060                     ??_SPI1_Open:
  1292   000060                     ?_ADCC_GetSingleConversion:
  1293                           	callstack 0
  1294   000060                     ?_ld_word:
  1295                           	callstack 0
  1296   000060                     ?_mem_cmp:
  1297                           	callstack 0
  1298   000060                     ?_chk_chr:
  1299                           	callstack 0
  1300   000060                     ?_dbc_1st:
  1301                           	callstack 0
  1302   000060                     ?_dbc_2nd:
  1303                           	callstack 0
  1304   000060                     ?_get_ldnumber:
  1305                           	callstack 0
  1306   000060                     ?___wmul:
  1307                           	callstack 0
  1308   000060                     ?___lwdiv:
  1309                           	callstack 0
  1310   000060                     ?_millis:
  1311                           	callstack 0
  1312   000060                     ?_ld_dword:
  1313                           	callstack 0
  1314   000060                     ?___lmul:
  1315                           	callstack 0
  1316   000060                     ?___lldiv:
  1317                           	callstack 0
  1318   000060                     ?___llmod:
  1319                           	callstack 0
  1320   000060                     ?___xxtofl:
  1321                           	callstack 0
  1322   000060                     disk_status@pdrv:
  1323                           	callstack 0
  1324   000060                     disk_ioctl@cmd:
  1325                           	callstack 0
  1326   000060                     SPI1_ExchangeByte@data:
  1327                           	callstack 0
  1328   000060                     i2c_init@clkdiv:
  1329                           	callstack 0
  1330   000060                     i2c_write@data:
  1331                           	callstack 0
  1332   000060                     i2c_read@data:
  1333                           	callstack 0
  1334   000060                     SET_ACCEL_I2C_ADDR@addr:
  1335                           	callstack 0
  1336   000060                     can_init@timing:
  1337                           	callstack 0
  1338   000060                     srb_is_full@ctx:
  1339                           	callstack 0
  1340   000060                     srb_is_empty@ctx:
  1341                           	callstack 0
  1342   000060                     write_timestamp_2bytes@timestamp:
  1343                           	callstack 0
  1344   000060                     ld_word@ptr:
  1345                           	callstack 0
  1346   000060                     ld_dword@ptr:
  1347                           	callstack 0
  1348   000060                     st_word@ptr:
  1349                           	callstack 0
  1350   000060                     st_dword@ptr:
  1351                           	callstack 0
  1352   000060                     mem_cpy@dst:
  1353                           	callstack 0
  1354   000060                     mem_set@dst:
  1355                           	callstack 0
  1356   000060                     mem_cmp@dst:
  1357                           	callstack 0
  1358   000060                     chk_chr@str:
  1359                           	callstack 0
  1360   000060                     get_ldnumber@path:
  1361                           	callstack 0
  1362   000060                     SPI1_ExchangeBlock@block:
  1363                           	callstack 0
  1364   000060                     ___wmul@multiplier:
  1365                           	callstack 0
  1366   000060                     ___lwdiv@dividend:
  1367                           	callstack 0
  1368   000060                     memcpy@d1:
  1369                           	callstack 0
  1370   000060                     memset@dest:
  1371                           	callstack 0
  1372   000060                     fputc@c:
  1373                           	callstack 0
  1374   000060                     can_generate_timing_params@can_frequency:
  1375                           	callstack 0
  1376   000060                     write_timestamp_3bytes@timestamp:
  1377                           	callstack 0
  1378   000060                     ___lmul@multiplier:
  1379                           	callstack 0
  1380   000060                     ___lldiv@dividend:
  1381                           	callstack 0
  1382   000060                     ___llmod@dividend:
  1383                           	callstack 0
  1384   000060                     ___xxtofl@val:
  1385                           	callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x0
  1388   000060                     	ds	1
  1389   000061                     ??_SD_SPI_DelayMilliseconds:
  1390   000061                     disk_status@stat:
  1391                           	callstack 0
  1392   000061                     SPI1_Open@spi1UniqueConfiguration:
  1393                           	callstack 0
  1394   000061                     i2c_write@len:
  1395                           	callstack 0
  1396   000061                     i2c_read@len:
  1397                           	callstack 0
  1398   000061                     disk_ioctl@buff:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x1
  1402   000061                     	ds	1
  1403   000062                     ??_srb_is_full:
  1404   000062                     ??_ADCC_GetSingleConversion:
  1405   000062                     ??_ld_word:
  1406   000062                     ??_get_ldnumber:
  1407   000062                     ??_i2c_write:
  1408   000062                     ??_i2c_read:
  1409   000062                     dbc_1st@c:
  1410                           	callstack 0
  1411   000062                     dbc_2nd@c:
  1412                           	callstack 0
  1413   000062                     fputc@fp:
  1414                           	callstack 0
  1415   000062                     can_init@receive_callback:
  1416                           	callstack 0
  1417   000062                     write_timestamp_2bytes@output:
  1418                           	callstack 0
  1419   000062                     st_word@val:
  1420                           	callstack 0
  1421   000062                     mem_cpy@src:
  1422                           	callstack 0
  1423   000062                     mem_set@val:
  1424                           	callstack 0
  1425   000062                     mem_cmp@src:
  1426                           	callstack 0
  1427   000062                     chk_chr@chr:
  1428                           	callstack 0
  1429   000062                     validate@obj:
  1430                           	callstack 0
  1431   000062                     SPI1_ExchangeBlock@blockSize:
  1432                           	callstack 0
  1433   000062                     ___wmul@multiplicand:
  1434                           	callstack 0
  1435   000062                     ___lwdiv@divisor:
  1436                           	callstack 0
  1437   000062                     memcpy@s1:
  1438                           	callstack 0
  1439   000062                     memset@c:
  1440                           	callstack 0
  1441   000062                     st_dword@val:
  1442                           	callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x2
  1445   000062                     	ds	1
  1446   000063                     ??_fputc:
  1447   000063                     disk_ioctl@pdrv:
  1448                           	callstack 0
  1449   000063                     SD_SPI_DelayMilliseconds@milliseconds:
  1450                           	callstack 0
  1451   000063                     i2c_write@address:
  1452                           	callstack 0
  1453   000063                     i2c_read@address:
  1454                           	callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x3
  1457   000063                     	ds	1
  1458   000064                     ??_can_init:
  1459   000064                     ??_ld_dword:
  1460   000064                     ??_chk_chr:
  1461   000064                     ??___xxtofl:
  1462   000064                     ADCC_GetSingleConversion@channel:
  1463                           	callstack 0
  1464   000064                     ___lwdiv@counter:
  1465                           	callstack 0
  1466   000064                     can_generate_timing_params@timing:
  1467                           	callstack 0
  1468   000064                     write_timestamp_3bytes@output:
  1469                           	callstack 0
  1470   000064                     mem_cpy@cnt:
  1471                           	callstack 0
  1472   000064                     mem_set@cnt:
  1473                           	callstack 0
  1474   000064                     mem_cmp@cnt:
  1475                           	callstack 0
  1476   000064                     st_clust@fs:
  1477                           	callstack 0
  1478   000064                     get_ldnumber@i:
  1479                           	callstack 0
  1480   000064                     validate@rfs:
  1481                           	callstack 0
  1482   000064                     SD_SPI_DelayMilliseconds@timeout:
  1483                           	callstack 0
  1484   000064                     SPI1_ExchangeBlock@data:
  1485                           	callstack 0
  1486   000064                     i2c_write@timeout:
  1487                           	callstack 0
  1488   000064                     i2c_read@timeout:
  1489                           	callstack 0
  1490   000064                     ___wmul@product:
  1491                           	callstack 0
  1492   000064                     memcpy@n:
  1493                           	callstack 0
  1494   000064                     memset@n:
  1495                           	callstack 0
  1496   000064                     millis@res:
  1497                           	callstack 0
  1498   000064                     ___lmul@multiplicand:
  1499                           	callstack 0
  1500   000064                     ___lldiv@divisor:
  1501                           	callstack 0
  1502   000064                     ___llmod@divisor:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x4
  1506   000064                     	ds	1
  1507   000065                     ld_word@rv:
  1508                           	callstack 0
  1509   000065                     ___lwdiv@quotient:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x5
  1513   000065                     	ds	1
  1514   000066                     ??_can_generate_timing_params:
  1515   000066                     ??_mem_cmp:
  1516   000066                     ??_validate:
  1517   000066                     ?_get_offset_bytes:
  1518                           	callstack 0
  1519   000066                     get_ldnumber@tc:
  1520                           	callstack 0
  1521   000066                     i2c_write_reg8@reg:
  1522                           	callstack 0
  1523   000066                     i2c_read_reg8@reg:
  1524                           	callstack 0
  1525   000066                     memcpy@tmp:
  1526                           	callstack 0
  1527   000066                     get_offset_bytes@ctx:
  1528                           	callstack 0
  1529   000066                     mem_cpy@d:
  1530                           	callstack 0
  1531   000066                     mem_set@d:
  1532                           	callstack 0
  1533   000066                     st_clust@dir:
  1534                           	callstack 0
  1535   000066                     memset@p:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x6
  1539   000066                     	ds	1
  1540   000067                     ?_ld_clust:
  1541                           	callstack 0
  1542   000067                     i2c_write_reg8@val:
  1543                           	callstack 0
  1544   000067                     srb_init@ctx:
  1545                           	callstack 0
  1546   000067                     ld_clust@fs:
  1547                           	callstack 0
  1548   000067                     get_ldnumber@tt:
  1549                           	callstack 0
  1550   000067                     i2c_read_reg8@value:
  1551                           	callstack 0
  1552   000067                     memcpy@d:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x7
  1556   000067                     	ds	1
  1557   000068                     i2c_write_reg8@address:
  1558                           	callstack 0
  1559   000068                     ___llmod@counter:
  1560                           	callstack 0
  1561   000068                     ___xxtofl@sign:
  1562                           	callstack 0
  1563   000068                     get_offset_bytes@index:
  1564                           	callstack 0
  1565   000068                     mem_cpy@s:
  1566                           	callstack 0
  1567   000068                     mem_cmp@d:
  1568                           	callstack 0
  1569   000068                     create_name@dp:
  1570                           	callstack 0
  1571   000068                     build_board_stat_msg@timestamp:
  1572                           	callstack 0
  1573   000068                     build_analog_data_msg@timestamp:
  1574                           	callstack 0
  1575   000068                     st_clust@cl:
  1576                           	callstack 0
  1577   000068                     ___lmul@product:
  1578                           	callstack 0
  1579   000068                     ___lldiv@quotient:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x8
  1583   000068                     	ds	1
  1584   000069                     i2c_read_reg8@address:
  1585                           	callstack 0
  1586   000069                     ___xxtofl@exp:
  1587                           	callstack 0
  1588   000069                     srb_init@pool:
  1589                           	callstack 0
  1590   000069                     ld_clust@dir:
  1591                           	callstack 0
  1592   000069                     get_ldnumber@vol:
  1593                           	callstack 0
  1594   000069                     i2c_write_reg8@data:
  1595                           	callstack 0
  1596   000069                     memcpy@s:
  1597                           	callstack 0
  1598   000069                     ld_dword@rv:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x9
  1602   000069                     	ds	1
  1603   00006A                     i2c_read_reg8@success:
  1604                           	callstack 0
  1605   00006A                     mem_cmp@s:
  1606                           	callstack 0
  1607   00006A                     create_name@path:
  1608                           	callstack 0
  1609   00006A                     _validate$3131:
  1610                           	callstack 0
  1611   00006A                     ___xxtofl@arg:
  1612                           	callstack 0
  1613                           
  1614                           ; 4 bytes @ 0xA
  1615   00006A                     	ds	1
  1616   00006B                     ??_ld_clust:
  1617   00006B                     ?_SD_SendCmd:
  1618                           	callstack 0
  1619   00006B                     can_send@message:
  1620                           	callstack 0
  1621   00006B                     i2c_read_reg8@data:
  1622                           	callstack 0
  1623   00006B                     srb_init@pool_size:
  1624                           	callstack 0
  1625   00006B                     get_ldnumber@tp:
  1626                           	callstack 0
  1627   00006B                     SD_SendCmd@address:
  1628                           	callstack 0
  1629                           
  1630                           ; 4 bytes @ 0xB
  1631   00006B                     	ds	1
  1632   00006C                     ??_can_send:
  1633   00006C                     ??_create_name:
  1634   00006C                     ?_clst2sect:
  1635                           	callstack 0
  1636   00006C                     build_board_stat_msg@error_code:
  1637                           	callstack 0
  1638   00006C                     build_analog_data_msg@sensor_id:
  1639                           	callstack 0
  1640   00006C                     validate@res:
  1641                           	callstack 0
  1642   00006C                     fxls_init@sys_mode:
  1643                           	callstack 0
  1644   00006C                     fxls_get_prod_rev@res:
  1645                           	callstack 0
  1646   00006C                     fxls_get_whoami@res:
  1647                           	callstack 0
  1648   00006C                     ___lldiv@counter:
  1649                           	callstack 0
  1650   00006C                     srb_push@ctx:
  1651                           	callstack 0
  1652   00006C                     srb_pop@ctx:
  1653                           	callstack 0
  1654   00006C                     mem_cmp@r:
  1655                           	callstack 0
  1656   00006C                     clst2sect@fs:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0xC
  1660   00006C                     	ds	1
  1661   00006D                     vfpfcnvrt@fp:
  1662                           	callstack 0
  1663   00006D                     srb_init@element_size:
  1664                           	callstack 0
  1665   00006D                     build_board_stat_msg@error_data:
  1666                           	callstack 0
  1667   00006D                     build_analog_data_msg@sensor_data:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0xD
  1671   00006D                     	ds	1
  1672   00006E                     ?___flmul:
  1673                           	callstack 0
  1674   00006E                     srb_pop@element:
  1675                           	callstack 0
  1676   00006E                     vfpfcnvrt@fmt:
  1677                           	callstack 0
  1678   00006E                     srb_push@element:
  1679                           	callstack 0
  1680   00006E                     _create_name$2961:
  1681                           	callstack 0
  1682   00006E                     clst2sect@clst:
  1683                           	callstack 0
  1684   00006E                     ___flmul@b:
  1685                           	callstack 0
  1686                           
  1687                           ; 4 bytes @ 0xE
  1688   00006E                     	ds	1
  1689   00006F                     ??_srb_pop:
  1690   00006F                     build_board_stat_msg@error_data_len:
  1691                           	callstack 0
  1692   00006F                     vfpfcnvrt@ap:
  1693                           	callstack 0
  1694   00006F                     txb_init@pool:
  1695                           	callstack 0
  1696   00006F                     build_analog_data_msg@output:
  1697                           	callstack 0
  1698   00006F                     ld_clust@cl:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0xF
  1702   00006F                     	ds	1
  1703   000070                     ??_srb_push:
  1704   000070                     ??_SD_SendCmd:
  1705   000070                     ??_vfpfcnvrt:
  1706   000070                     build_board_stat_msg@output:
  1707                           	callstack 0
  1708   000070                     _create_name$2966:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x10
  1712   000070                     	ds	1
  1713   000071                     txb_init@pool_size:
  1714                           	callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x11
  1717   000071                     	ds	1
  1718   000072                     ??_build_board_stat_msg:
  1719   000072                     ??_clst2sect:
  1720   000072                     create_name@d:
  1721                           	callstack 0
  1722   000072                     SD_SendCmd@longTimeout:
  1723                           	callstack 0
  1724   000072                     ___flmul@a:
  1725                           	callstack 0
  1726   000072                     vfpfcnvrt@convarg:
  1727                           	callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x12
  1730   000072                     	ds	1
  1731   000073                     txb_init@can_send_fp:
  1732                           	callstack 0
  1733   000073                     srb_pop@offset:
  1734                           	callstack 0
  1735   000073                     create_name@ni:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x13
  1739   000073                     	ds	1
  1740   000074                     srb_push@offset:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x14
  1744   000074                     	ds	1
  1745   000075                     txb_init@can_tx_ready:
  1746                           	callstack 0
  1747   000075                     build_board_stat_msg@i:
  1748                           	callstack 0
  1749   000075                     create_name@p:
  1750                           	callstack 0
  1751   000075                     txb_heartbeat@msg_sent:
  1752                           	callstack 0
  1753                           
  1754                           ; 11 bytes @ 0x15
  1755   000075                     	ds	1
  1756   000076                     ??___flmul:
  1757   000076                     txb_enqueue@msg:
  1758                           	callstack 0
  1759   000076                     SD_SendCmd@timeout:
  1760                           	callstack 0
  1761   000076                     vfpfcnvrt@cp:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x16
  1765   000076                     	ds	1
  1766   000077                     create_name@i:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x17
  1770   000077                     	ds	1
  1771   000078                     vfpfcnvrt@c:
  1772                           	callstack 0
  1773   000078                     SD_SendCmd@address_bytes:
  1774                           	callstack 0
  1775   000078                     send_status_err@board_stat_msg:
  1776                           	callstack 0
  1777                           
  1778                           ; 11 bytes @ 0x18
  1779   000078                     	ds	1
  1780   000079                     ?_vfprintf:
  1781                           	callstack 0
  1782   000079                     vfprintf@fp:
  1783                           	callstack 0
  1784   000079                     create_name@sfn:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x19
  1788   000079                     	ds	1
  1789   00007A                     ___flmul@sign:
  1790                           	callstack 0
  1791   00007A                     vfprintf@fmt:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x1A
  1795   00007A                     	ds	1
  1796   00007B                     create_name@si:
  1797                           	callstack 0
  1798   00007B                     ___flmul@grs:
  1799                           	callstack 0
  1800                           
  1801                           ; 4 bytes @ 0x1B
  1802   00007B                     	ds	1
  1803   00007C                     SD_SendCmd@cmd:
  1804                           	callstack 0
  1805   00007C                     vfprintf@ap:
  1806                           	callstack 0
  1807                           
  1808                           ; 1 bytes @ 0x1C
  1809   00007C                     	ds	1
  1810   00007D                     create_name@c:
  1811                           	callstack 0
  1812   00007D                     vfprintf@cfmt:
  1813                           	callstack 0
  1814   00007D                     SD_SendCmd@response:
  1815                           	callstack 0
  1816                           
  1817                           ; 5 bytes @ 0x1D
  1818   00007D                     	ds	2
  1819   00007F                     ?_sprintf:
  1820                           	callstack 0
  1821   00007F                     ___flmul@aexp:
  1822                           	callstack 0
  1823   00007F                     sprintf@s:
  1824                           	callstack 0
  1825                           
  1826                           ; 2 bytes @ 0x1F
  1827   00007F                     	ds	1
  1828   000080                     ___flmul@bexp:
  1829                           	callstack 0
  1830                           
  1831                           ; 1 bytes @ 0x20
  1832   000080                     	ds	1
  1833   000081                     sprintf@fmt:
  1834                           	callstack 0
  1835   000081                     ___flmul@prod:
  1836                           	callstack 0
  1837                           
  1838                           ; 4 bytes @ 0x21
  1839   000081                     	ds	1
  1840   000082                     ??_SD_SPI_MediaInitialize:
  1841   000082                     SD_SPI_AsyncReadTasks@info:
  1842                           	callstack 0
  1843   000082                     SD_SPI_AsyncWriteTasks@info:
  1844                           	callstack 0
  1845                           
  1846                           ; 1 bytes @ 0x22
  1847   000082                     	ds	1
  1848   000083                     ??_SD_SPI_AsyncReadTasks:
  1849   000083                     ??_SD_SPI_AsyncWriteTasks:
  1850                           
  1851                           ; 1 bytes @ 0x23
  1852   000083                     	ds	2
  1853   000085                     ___flmul@temp:
  1854                           	callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x25
  1857   000085                     	ds	2
  1858   000087                     ?___fldiv:
  1859                           	callstack 0
  1860   000087                     sprintf@ap:
  1861                           	callstack 0
  1862   000087                     ___fldiv@b:
  1863                           	callstack 0
  1864   000087                     SD_SPI_AsyncReadTasks@response:
  1865                           	callstack 0
  1866   000087                     SD_SPI_AsyncWriteTasks@response:
  1867                           	callstack 0
  1868                           
  1869                           ; 5 bytes @ 0x27
  1870   000087                     	ds	1
  1871   000088                     sprintf@f:
  1872                           	callstack 0
  1873                           
  1874                           ; 12 bytes @ 0x28
  1875   000088                     	ds	3
  1876   00008B                     ___fldiv@a:
  1877                           	callstack 0
  1878                           
  1879                           ; 4 bytes @ 0x2B
  1880   00008B                     	ds	1
  1881   00008C                     SD_SPI_AsyncReadTasks@bData:
  1882                           	callstack 0
  1883   00008C                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1884                           	callstack 0
  1885                           
  1886                           ; 4 bytes @ 0x2C
  1887   00008C                     	ds	1
  1888   00008D                     SD_SPI_SectorRead@sector_address:
  1889                           	callstack 0
  1890   00008D                     SD_SPI_MediaInitialize@CSDResponse:
  1891                           	callstack 0
  1892                           
  1893                           ; 20 bytes @ 0x2D
  1894   00008D                     	ds	2
  1895   00008F                     ??___fldiv:
  1896                           
  1897                           ; 1 bytes @ 0x2F
  1898   00008F                     	ds	1
  1899   000090                     SD_SPI_SectorWrite@sector_address:
  1900                           	callstack 0
  1901                           
  1902                           ; 4 bytes @ 0x30
  1903   000090                     	ds	1
  1904   000091                     SD_SPI_SectorRead@buffer:
  1905                           	callstack 0
  1906                           
  1907                           ; 2 bytes @ 0x31
  1908   000091                     	ds	2
  1909   000093                     SD_SPI_SectorRead@sector_count:
  1910                           	callstack 0
  1911   000093                     ___fldiv@rem:
  1912                           	callstack 0
  1913                           
  1914                           ; 4 bytes @ 0x33
  1915   000093                     	ds	1
  1916   000094                     SD_SPI_SectorWrite@buffer:
  1917                           	callstack 0
  1918                           
  1919                           ; 2 bytes @ 0x34
  1920   000094                     	ds	1
  1921   000095                     ??_SD_SPI_SectorRead:
  1922                           
  1923                           ; 1 bytes @ 0x35
  1924   000095                     	ds	1
  1925   000096                     SD_SPI_SectorWrite@sector_count:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x36
  1929   000096                     	ds	1
  1930   000097                     SD_SPI_SectorRead@result:
  1931                           	callstack 0
  1932   000097                     ___fldiv@sign:
  1933                           	callstack 0
  1934                           
  1935                           ; 1 bytes @ 0x37
  1936   000097                     	ds	1
  1937   000098                     ??_SD_SPI_SectorWrite:
  1938   000098                     SD_SPI_SectorRead@status:
  1939                           	callstack 0
  1940   000098                     ___fldiv@new_exp:
  1941                           	callstack 0
  1942                           
  1943                           ; 2 bytes @ 0x38
  1944   000098                     	ds	1
  1945   000099                     SD_SPI_SectorRead@i:
  1946                           	callstack 0
  1947                           
  1948                           ; 2 bytes @ 0x39
  1949   000099                     	ds	1
  1950   00009A                     SD_SPI_SectorWrite@result:
  1951                           	callstack 0
  1952   00009A                     ___fldiv@grs:
  1953                           	callstack 0
  1954                           
  1955                           ; 4 bytes @ 0x3A
  1956   00009A                     	ds	1
  1957   00009B                     SD_SPI_SectorWrite@status:
  1958                           	callstack 0
  1959   00009B                     SD_SPI_SectorRead@info:
  1960                           	callstack 0
  1961                           
  1962                           ; 13 bytes @ 0x3B
  1963   00009B                     	ds	1
  1964   00009C                     SD_SPI_SectorWrite@i:
  1965                           	callstack 0
  1966                           
  1967                           ; 2 bytes @ 0x3C
  1968   00009C                     	ds	2
  1969   00009E                     ___fldiv@bexp:
  1970                           	callstack 0
  1971   00009E                     SD_SPI_SectorWrite@info:
  1972                           	callstack 0
  1973                           
  1974                           ; 13 bytes @ 0x3E
  1975   00009E                     	ds	1
  1976   00009F                     ___fldiv@aexp:
  1977                           	callstack 0
  1978                           
  1979                           ; 1 bytes @ 0x3F
  1980   00009F                     	ds	1
  1981   0000A0                     ?___fltol:
  1982                           	callstack 0
  1983   0000A0                     ___fltol@f1:
  1984                           	callstack 0
  1985                           
  1986                           ; 4 bytes @ 0x40
  1987   0000A0                     	ds	1
  1988   0000A1                     _SD_SPI_MediaInitialize$6578:
  1989                           	callstack 0
  1990                           
  1991                           ; 4 bytes @ 0x41
  1992   0000A1                     	ds	3
  1993   0000A4                     ??___fltol:
  1994                           
  1995                           ; 1 bytes @ 0x44
  1996   0000A4                     	ds	1
  1997   0000A5                     SD_SPI_MediaInitialize@c_size_mult:
  1998                           	callstack 0
  1999                           
  2000                           ; 1 bytes @ 0x45
  2001   0000A5                     	ds	1
  2002   0000A6                     SD_SPI_MediaInitialize@index:
  2003                           	callstack 0
  2004                           
  2005                           ; 1 bytes @ 0x46
  2006   0000A6                     	ds	1
  2007   0000A7                     SD_SPI_MediaInitialize@block_len:
  2008                           	callstack 0
  2009                           
  2010                           ; 1 bytes @ 0x47
  2011   0000A7                     	ds	1
  2012   0000A8                     SD_SPI_MediaInitialize@count:
  2013                           	callstack 0
  2014   0000A8                     ___fltol@sign1:
  2015                           	callstack 0
  2016   0000A8                     disk_read@buff:
  2017                           	callstack 0
  2018                           
  2019                           ; 2 bytes @ 0x48
  2020   0000A8                     	ds	1
  2021   0000A9                     ___fltol@exp1:
  2022                           	callstack 0
  2023   0000A9                     SD_SPI_MediaInitialize@c_size:
  2024                           	callstack 0
  2025                           
  2026                           ; 4 bytes @ 0x49
  2027   0000A9                     	ds	1
  2028   0000AA                     fxls_read_accel_data@x:
  2029                           	callstack 0
  2030   0000AA                     disk_read@sector:
  2031                           	callstack 0
  2032                           
  2033                           ; 4 bytes @ 0x4A
  2034   0000AA                     	ds	1
  2035   0000AB                     disk_write@buff:
  2036                           	callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x4B
  2039   0000AB                     	ds	1
  2040   0000AC                     fxls_read_accel_data@y:
  2041                           	callstack 0
  2042                           
  2043                           ; 2 bytes @ 0x4C
  2044   0000AC                     	ds	1
  2045   0000AD                     disk_write@sector:
  2046                           	callstack 0
  2047   0000AD                     SD_SPI_MediaInitialize@response:
  2048                           	callstack 0
  2049                           
  2050                           ; 5 bytes @ 0x4D
  2051   0000AD                     	ds	1
  2052   0000AE                     disk_read@count:
  2053                           	callstack 0
  2054   0000AE                     fxls_read_accel_data@z:
  2055                           	callstack 0
  2056                           
  2057                           ; 2 bytes @ 0x4E
  2058   0000AE                     	ds	2
  2059   0000B0                     ??_fxls_read_accel_data:
  2060   0000B0                     disk_read@pdrv:
  2061                           	callstack 0
  2062                           
  2063                           ; 1 bytes @ 0x50
  2064   0000B0                     	ds	1
  2065   0000B1                     disk_read@res:
  2066                           	callstack 0
  2067   0000B1                     disk_write@count:
  2068                           	callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x51
  2071   0000B1                     	ds	1
  2072   0000B2                     fxls_read_accel_data@status:
  2073                           	callstack 0
  2074   0000B2                     SD_SPI_MediaInitialize@timeout:
  2075                           	callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x52
  2078   0000B2                     	ds	1
  2079   0000B3                     disk_write@pdrv:
  2080                           	callstack 0
  2081   0000B3                     fxls_read_accel_data@x_lsb:
  2082                           	callstack 0
  2083                           
  2084                           ; 1 bytes @ 0x53
  2085   0000B3                     	ds	1
  2086   0000B4                     disk_initialize@pdrv:
  2087                           	callstack 0
  2088   0000B4                     disk_write@res:
  2089                           	callstack 0
  2090   0000B4                     fxls_read_accel_data@x_msb:
  2091                           	callstack 0
  2092                           
  2093                           ; 1 bytes @ 0x54
  2094   0000B4                     	ds	1
  2095   0000B5                     disk_initialize@stat:
  2096                           	callstack 0
  2097   0000B5                     fxls_read_accel_data@y_lsb:
  2098                           	callstack 0
  2099   0000B5                     sync_window@fs:
  2100                           	callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x55
  2103   0000B5                     	ds	1
  2104   0000B6                     fxls_read_accel_data@y_msb:
  2105                           	callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x56
  2108   0000B6                     	ds	1
  2109   0000B7                     ??_sync_window:
  2110   0000B7                     fxls_read_accel_data@z_lsb:
  2111                           	callstack 0
  2112                           
  2113                           ; 1 bytes @ 0x57
  2114   0000B7                     	ds	1
  2115   0000B8                     fxls_read_accel_data@z_msb:
  2116                           	callstack 0
  2117                           
  2118                           ; 1 bytes @ 0x58
  2119   0000B8                     	ds	15
  2120   0000C7                     sync_window@res:
  2121                           	callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x67
  2124   0000C7                     	ds	1
  2125   0000C8                     move_window@fs:
  2126                           	callstack 0
  2127   0000C8                     sync_fs@fs:
  2128                           	callstack 0
  2129   0000C8                     dir_clear@fs:
  2130                           	callstack 0
  2131                           
  2132                           ; 2 bytes @ 0x68
  2133   0000C8                     	ds	2
  2134   0000CA                     ??_sync_fs:
  2135   0000CA                     move_window@sector:
  2136                           	callstack 0
  2137   0000CA                     dir_clear@clst:
  2138                           	callstack 0
  2139                           
  2140                           ; 4 bytes @ 0x6A
  2141   0000CA                     	ds	4
  2142   0000CE                     
  2143                           ; 1 bytes @ 0x6E
  2144   0000CE                     	ds	2
  2145   0000D0                     dir_clear@ibuf:
  2146                           	callstack 0
  2147                           
  2148                           ; 2 bytes @ 0x70
  2149   0000D0                     	ds	2
  2150   0000D2                     move_window@res:
  2151                           	callstack 0
  2152   0000D2                     sync_fs@res:
  2153                           	callstack 0
  2154   0000D2                     dir_clear@sect:
  2155                           	callstack 0
  2156                           
  2157                           ; 4 bytes @ 0x72
  2158   0000D2                     	ds	1
  2159   0000D3                     ?_get_fat:
  2160                           	callstack 0
  2161   0000D3                     get_fat@obj:
  2162                           	callstack 0
  2163   0000D3                     put_fat@fs:
  2164                           	callstack 0
  2165   0000D3                     check_fs@fs:
  2166                           	callstack 0
  2167   0000D3                     f_sync@fp:
  2168                           	callstack 0
  2169                           
  2170                           ; 2 bytes @ 0x73
  2171   0000D3                     	ds	2
  2172   0000D5                     f_sync@res:
  2173                           	callstack 0
  2174   0000D5                     get_fat@clst:
  2175                           	callstack 0
  2176   0000D5                     put_fat@clst:
  2177                           	callstack 0
  2178   0000D5                     check_fs@sect:
  2179                           	callstack 0
  2180                           
  2181                           ; 4 bytes @ 0x75
  2182   0000D5                     	ds	1
  2183   0000D6                     dir_clear@szb:
  2184                           	callstack 0
  2185   0000D6                     f_sync@dir:
  2186                           	callstack 0
  2187                           
  2188                           ; 2 bytes @ 0x76
  2189   0000D6                     	ds	2
  2190   0000D8                     dir_clear@n:
  2191                           	callstack 0
  2192   0000D8                     f_sync@fs:
  2193                           	callstack 0
  2194                           
  2195                           ; 2 bytes @ 0x78
  2196   0000D8                     	ds	1
  2197   0000D9                     ??_get_fat:
  2198   0000D9                     put_fat@val:
  2199                           	callstack 0
  2200                           
  2201                           ; 4 bytes @ 0x79
  2202   0000D9                     	ds	1
  2203   0000DA                     find_volume@path:
  2204                           	callstack 0
  2205   0000DA                     f_close@fp:
  2206                           	callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x7A
  2209   0000DA                     	ds	2
  2210   0000DC                     find_volume@rfs:
  2211                           	callstack 0
  2212   0000DC                     f_close@fs:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x7C
  2216   0000DC                     	ds	1
  2217   0000DD                     ??_put_fat:
  2218                           
  2219                           ; 1 bytes @ 0x7D
  2220   0000DD                     	ds	1
  2221   0000DE                     find_volume@mode:
  2222                           	callstack 0
  2223   0000DE                     f_close@res:
  2224                           	callstack 0
  2225                           
  2226                           ; 1 bytes @ 0x7E
  2227   0000DE                     	ds	1
  2228   0000DF                     ??_find_volume:
  2229                           
  2230                           ; 1 bytes @ 0x7F
  2231   0000DF                     	ds	2
  2232   0000E1                     _get_fat$2577:
  2233                           	callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x81
  2236   0000E1                     	ds	2
  2237   0000E3                     get_fat@wc:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x83
  2241   0000E3                     	ds	2
  2242   0000E5                     get_fat@val:
  2243                           	callstack 0
  2244                           
  2245                           ; 4 bytes @ 0x85
  2246   0000E5                     	ds	2
  2247   0000E7                     f_mount@fs:
  2248                           	callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x87
  2251   0000E7                     	ds	2
  2252   0000E9                     get_fat@bc:
  2253                           	callstack 0
  2254   0000E9                     f_mount@path:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x89
  2258   0000E9                     	ds	2
  2259   0000EB                     f_mount@opt:
  2260                           	callstack 0
  2261   0000EB                     get_fat@fs:
  2262                           	callstack 0
  2263   0000EB                     _put_fat$2606:
  2264                           	callstack 0
  2265                           
  2266                           ; 2 bytes @ 0x8B
  2267   0000EB                     	ds	1
  2268   0000EC                     f_mount@res:
  2269                           	callstack 0
  2270                           
  2271                           ; 1 bytes @ 0x8C
  2272   0000EC                     	ds	1
  2273   0000ED                     _put_fat$2607:
  2274                           	callstack 0
  2275   0000ED                     dir_sdi@dp:
  2276                           	callstack 0
  2277   0000ED                     f_mount@rp:
  2278                           	callstack 0
  2279                           
  2280                           ; 2 bytes @ 0x8D
  2281   0000ED                     	ds	2
  2282   0000EF                     put_fat@p:
  2283                           	callstack 0
  2284   0000EF                     f_mount@cfs:
  2285                           	callstack 0
  2286   0000EF                     dir_sdi@ofs:
  2287                           	callstack 0
  2288                           
  2289                           ; 4 bytes @ 0x8F
  2290   0000EF                     	ds	2
  2291   0000F1                     put_fat@bc:
  2292                           	callstack 0
  2293   0000F1                     f_mount@vol:
  2294                           	callstack 0
  2295                           
  2296                           ; 2 bytes @ 0x91
  2297   0000F1                     	ds	2
  2298   0000F3                     ??_dir_sdi:
  2299   0000F3                     put_fat@res:
  2300                           	callstack 0
  2301                           
  2302                           ; 1 bytes @ 0x93
  2303   0000F3                     	ds	1
  2304   0000F4                     ?_create_chain:
  2305                           	callstack 0
  2306   0000F4                     remove_chain@obj:
  2307                           	callstack 0
  2308   0000F4                     create_chain@obj:
  2309                           	callstack 0
  2310                           
  2311                           ; 2 bytes @ 0x94
  2312   0000F4                     	ds	2
  2313   0000F6                     remove_chain@clst:
  2314                           	callstack 0
  2315   0000F6                     create_chain@clst:
  2316                           	callstack 0
  2317                           
  2318                           ; 4 bytes @ 0x96
  2319   0000F6                     	ds	4
  2320   0000FA                     dir_next@dp:
  2321                           	callstack 0
  2322   0000FA                     remove_chain@pclst:
  2323                           	callstack 0
  2324                           
  2325                           ; 4 bytes @ 0x9A
  2326   0000FA                     	ds	2
  2327   0000FC                     dir_next@stretch:
  2328                           	callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x9C
  2331   0000FC                     	ds	2
  2332   0000FE                     ??_dir_find:
  2333   0000FE                     
  2334                           ; 1 bytes @ 0x9E
  2335   0000FE                     	ds	2
  2336   000100                     
  2337                           ; 1 bytes @ 0xA0
  2338                           
  2339                           	psect	cstackCOMRAM
  2340   000001                     __pcstackCOMRAM:
  2341                           	callstack 0
  2342   000001                     ?_get_message_type:
  2343                           	callstack 0
  2344   000001                     get_message_type@msg:
  2345                           	callstack 0
  2346   000001                     get_board_unique_id@msg:
  2347                           	callstack 0
  2348   000001                     i2memcpy@d1:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x0
  2352   000001                     	ds	1
  2353   000002                     
  2354                           ; 1 bytes @ 0x1
  2355   000002                     	ds	1
  2356   000003                     ??_get_message_type:
  2357   000003                     i2memcpy@s1:
  2358                           	callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x2
  2361   000003                     	ds	2
  2362   000005                     ?_get_reset_board_id:
  2363                           	callstack 0
  2364   000005                     get_reset_board_id@msg:
  2365                           	callstack 0
  2366   000005                     i2memcpy@n:
  2367                           	callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x4
  2370   000005                     	ds	2
  2371   000007                     ??_get_reset_board_id:
  2372   000007                     i2memcpy@d:
  2373                           	callstack 0
  2374                           
  2375                           ; 2 bytes @ 0x6
  2376   000007                     	ds	1
  2377   000008                     get_reset_board_id@msg_type:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x7
  2381   000008                     	ds	1
  2382   000009                     i2memcpy@s:
  2383                           	callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x8
  2386   000009                     	ds	1
  2387   00000A                     can_msg_handler@msg:
  2388                           	callstack 0
  2389                           
  2390                           ; 1 bytes @ 0x9
  2391   00000A                     	ds	1
  2392   00000B                     ??_can_msg_handler:
  2393   00000B                     i2memcpy@tmp:
  2394                           	callstack 0
  2395                           
  2396                           ; 1 bytes @ 0xA
  2397   00000B                     	ds	2
  2398   00000D                     can_msg_handler@msg_type:
  2399                           	callstack 0
  2400                           
  2401                           ; 2 bytes @ 0xC
  2402   00000D                     	ds	2
  2403   00000F                     can_msg_handler@dest_id:
  2404                           	callstack 0
  2405                           
  2406                           ; 2 bytes @ 0xE
  2407   00000F                     	ds	2
  2408   000011                     ??_can_handle_interrupt:
  2409                           
  2410                           ; 1 bytes @ 0x10
  2411   000011                     	ds	4
  2412   000015                     can_handle_interrupt@rcvd_msg:
  2413                           	callstack 0
  2414                           
  2415                           ; 11 bytes @ 0x14
  2416   000015                     	ds	11
  2417   000020                     can_handle_interrupt@rcvd_msg_753:
  2418                           	callstack 0
  2419                           
  2420                           ; 11 bytes @ 0x1F
  2421   000020                     	ds	11
  2422   00002B                     ??_interrupt_handler:
  2423                           
  2424                           ; 1 bytes @ 0x2A
  2425   00002B                     	ds	2
  2426                           
  2427 ;;
  2428 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2429 ;;
  2430 ;; *************** function _main *****************
  2431 ;; Defined at:
  2432 ;;		line 36 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  z               2  184[BANK1 ] unsigned short 
  2437 ;;  y               2  182[BANK1 ] unsigned short 
  2438 ;;  x               2  180[BANK1 ] unsigned short 
  2439 ;;  buf_status      1  175[BANK1 ] unsigned char 
  2440 ;;  sys_mode        1  174[BANK1 ] unsigned char 
  2441 ;;  adc_value       2    0        unsigned short 
  2442 ;;  msg            11  186[BANK1 ] struct .
  2443 ;;  can_setup       7  197[BANK1 ] struct .
  2444 ;;  last_status_    4  176[BANK1 ] unsigned long 
  2445 ;;  last_accel_m    4  170[BANK1 ] unsigned long 
  2446 ;;  last_message    4    0        unsigned long 
  2447 ;;  last_flow_mi    4    0        unsigned long 
  2448 ;;  prod_rev        1    0        unsigned char 
  2449 ;;  whoami          1    0        unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:       38 bytes
  2464 ;; Hardware stack levels required when called: 19
  2465 ;; This function calls:
  2466 ;;		_ADCC_GetSingleConversion
  2467 ;;		_ADCC_Initialize
  2468 ;;		_SET_ACCEL_I2C_ADDR
  2469 ;;		_SYSTEM_Initialize
  2470 ;;		_build_analog_data_msg
  2471 ;;		_can_generate_timing_params
  2472 ;;		_can_init
  2473 ;;		_f_close
  2474 ;;		_f_mount
  2475 ;;		_f_open
  2476 ;;		_f_write
  2477 ;;		_fxls_get_prod_rev
  2478 ;;		_fxls_get_whoami
  2479 ;;		_fxls_init
  2480 ;;		_fxls_read_accel_data
  2481 ;;		_i2c_init
  2482 ;;		_i2c_read_reg8
  2483 ;;		_millis
  2484 ;;		_send_status_err
  2485 ;;		_send_status_ok
  2486 ;;		_timer0_init
  2487 ;;		_txb_heartbeat
  2488 ;;		_txb_init
  2489 ;; This function is called by:
  2490 ;;		Startup code after reset
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text0
  2495   0057E2                     __ptext0:
  2496                           	callstack 0
  2497   0057E2                     _main:
  2498                           	callstack 12
  2499   0057E2                     
  2500                           ;main.c: 38:     SYSTEM_Initialize();
  2501   0057E2  EC10  F052         	call	_SYSTEM_Initialize	;wreg free
  2502                           
  2503                           ;main.c: 39:     ADCC_Initialize();
  2504   0057E6  ECF0  F04D         	call	_ADCC_Initialize	;wreg free
  2505   0057EA                     
  2506                           ;main.c: 42:     INTCON0bits.GIE = 1;
  2507   0057EA  8ED2               	bsf	210,7,c	;volatile
  2508                           
  2509                           ;main.c: 45:     timer0_init();
  2510   0057EC  ECAB  F051         	call	_timer0_init	;wreg free
  2511   0057F0                     
  2512                           ;main.c: 46:     uint32_t last_status_millis = millis();
  2513   0057F0  EC18  F051         	call	_millis	;wreg free
  2514   0057F4  C060  F1B0         	movff	?_millis,main@last_status_millis
  2515   0057F8  C061  F1B1         	movff	?_millis+1,main@last_status_millis+1
  2516   0057FC  C062  F1B2         	movff	?_millis+2,main@last_status_millis+2
  2517   005800  C063  F1B3         	movff	?_millis+3,main@last_status_millis+3
  2518   005804                     
  2519                           ;main.c: 47:     uint32_t last_accel_millis = millis();
  2520   005804  EC18  F051         	call	_millis	;wreg free
  2521   005808  C060  F1AA         	movff	?_millis,main@last_accel_millis
  2522   00580C  C061  F1AB         	movff	?_millis+1,main@last_accel_millis+1
  2523   005810  C062  F1AC         	movff	?_millis+2,main@last_accel_millis+2
  2524   005814  C063  F1AD         	movff	?_millis+3,main@last_accel_millis+3
  2525   005818  EC18  F051         	call	_millis	;wreg free
  2526   00581C  EC18  F051         	call	_millis	;wreg free
  2527   005820                     
  2528                           ;main.c: 52:     TRISC1 = 0;
  2529   005820  92C4               	bcf	16324,1,c	;volatile
  2530   005822                     
  2531                           ;main.c: 53:     RC1PPS = 0x33;
  2532   005822  0E33               	movlw	51
  2533   005824  013A               	movlb	58	; () banked
  2534   005826  6F11               	movwf	17,b	;volatile
  2535   005828                     
  2536                           ; BSR set to: 58
  2537                           ;main.c: 56:     TRISC0 = 1;
  2538   005828  80C4               	bsf	16324,0,c	;volatile
  2539   00582A                     
  2540                           ; BSR set to: 58
  2541                           ;main.c: 57:     ANSELC0 = 0;
  2542   00582A  9160               	bcf	96,0,b	;volatile
  2543   00582C                     
  2544                           ; BSR set to: 58
  2545                           ;main.c: 58:     CANRXPPS = 0b00010000;
  2546   00582C  0E10               	movlw	16
  2547   00582E  6FED               	movwf	237,b	;volatile
  2548   005830                     
  2549                           ; BSR set to: 58
  2550                           ;main.c: 61:     can_timing_t can_setup;;main.c: 62:     can_generate_timing_params(1200
      +                          0000, &can_setup);
  2551   005830  0E00               	movlw	0
  2552   005832  0100               	movlb	0	; () banked
  2553   005834  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
  2554   005836  0E1B               	movlw	27
  2555   005838  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
  2556   00583A  0EB7               	movlw	183
  2557   00583C  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
  2558   00583E  0E00               	movlw	0
  2559   005840  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
  2560   005842  0EC5               	movlw	low main@can_setup
  2561   005844  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
  2562   005846  0E01               	movlw	high main@can_setup
  2563   005848  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
  2564   00584A  ECF4  F037         	call	_can_generate_timing_params	;wreg free
  2565   00584E                     
  2566                           ;main.c: 63:     can_init(&can_setup, can_msg_handler);
  2567   00584E  0EC5               	movlw	low main@can_setup
  2568   005850  0100               	movlb	0	; () banked
  2569   005852  6F60               	movwf	can_init@timing& (0+255),b
  2570   005854  0E01               	movlw	high main@can_setup
  2571   005856  6F61               	movwf	(can_init@timing+1)& (0+255),b
  2572   005858  0E32               	movlw	low _can_msg_handler
  2573   00585A  6F62               	movwf	can_init@receive_callback& (0+255),b
  2574   00585C  0E8E               	movlw	high _can_msg_handler
  2575   00585E  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
  2576   005860  EC83  F03B         	call	_can_init	;wreg free
  2577   005864                     
  2578                           ;main.c: 65:     txb_init(tx_pool, sizeof (tx_pool), can_send, can_send_rdy);
  2579   005864  0E20               	movlw	low _tx_pool
  2580   005866  0100               	movlb	0	; () banked
  2581   005868  6F6F               	movwf	txb_init@pool& (0+255),b
  2582   00586A  0E02               	movlw	high _tx_pool
  2583   00586C  6F70               	movwf	(txb_init@pool+1)& (0+255),b
  2584   00586E  0E00               	movlw	0
  2585   005870  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
  2586   005872  0E96               	movlw	150
  2587   005874  6F71               	movwf	txb_init@pool_size& (0+255),b
  2588   005876  0EF2               	movlw	low _can_send
  2589   005878  6F73               	movwf	txb_init@can_send_fp& (0+255),b
  2590   00587A  0E87               	movlw	high _can_send
  2591   00587C  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
  2592   00587E  0EF4               	movlw	low _can_send_rdy
  2593   005880  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
  2594   005882  0EA3               	movlw	high _can_send_rdy
  2595   005884  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
  2596   005886  ECB3  F050         	call	_txb_init	;wreg free
  2597   00588A                     
  2598                           ;main.c: 67:     can_msg_t msg;;main.c: 70:     I2C1SDAPPS = 0b01010;
  2599   00588A  0E0A               	movlw	10
  2600   00588C  013A               	movlb	58	; () banked
  2601   00588E  6FE4               	movwf	228,b	;volatile
  2602   005890                     
  2603                           ; BSR set to: 58
  2604                           ;main.c: 71:     I2C1SCLPPS = 0b01001;
  2605   005890  0E09               	movlw	9
  2606   005892  6FE3               	movwf	227,b	;volatile
  2607   005894                     
  2608                           ; BSR set to: 58
  2609                           ;main.c: 72:     RB2PPS = 0b100010;
  2610   005894  0E22               	movlw	34
  2611   005896  6F0A               	movwf	10,b	;volatile
  2612   005898                     
  2613                           ; BSR set to: 58
  2614                           ;main.c: 73:     RB1PPS = 0b100001;
  2615   005898  0E21               	movlw	33
  2616   00589A  6F09               	movwf	9,b	;volatile
  2617   00589C                     
  2618                           ; BSR set to: 58
  2619                           ;main.c: 74:     SET_ACCEL_I2C_ADDR(0x18);
  2620   00589C  0E18               	movlw	24
  2621   00589E  ECBA  F051         	call	_SET_ACCEL_I2C_ADDR
  2622   0058A2                     
  2623                           ;main.c: 75:     i2c_init(0b000);
  2624   0058A2  0E00               	movlw	0
  2625   0058A4  ECEA  F050         	call	_i2c_init
  2626   0058A8                     
  2627                           ;main.c: 78:     TRISC6 = 0;
  2628   0058A8  9CC4               	bcf	16324,6,c	;volatile
  2629   0058AA                     
  2630                           ;main.c: 79:     LATC6 = 1;
  2631   0058AA  8CBC               	bsf	16316,6,c	;volatile
  2632   0058AC  ECD6  F051         	call	_fxls_get_whoami	;wreg free
  2633   0058B0  ECE2  F051         	call	_fxls_get_prod_rev	;wreg free
  2634   0058B4                     
  2635                           ;main.c: 85:     TRISB3 = 0;
  2636   0058B4  96C3               	bcf	16323,3,c	;volatile
  2637   0058B6                     
  2638                           ;main.c: 86:     LATB3 = 0;
  2639   0058B6  96BB               	bcf	16315,3,c	;volatile
  2640   0058B8                     
  2641                           ;main.c: 88:     TRISA2 = 0;
  2642   0058B8  94C2               	bcf	16322,2,c	;volatile
  2643   0058BA                     
  2644                           ;main.c: 89:     TRISA3 = 0;
  2645   0058BA  96C2               	bcf	16322,3,c	;volatile
  2646   0058BC                     
  2647                           ;main.c: 90:     TRISA4 = 0;
  2648   0058BC  98C2               	bcf	16322,4,c	;volatile
  2649   0058BE                     
  2650                           ;main.c: 91:     TRISC2 = 0;
  2651   0058BE  94C4               	bcf	16324,2,c	;volatile
  2652   0058C0                     
  2653                           ;main.c: 93:     if (f_mount(&FatFs, "", 1) == FR_OK) {
  2654   0058C0  0EB6               	movlw	low _FatFs
  2655   0058C2  0100               	movlb	0	; () banked
  2656   0058C4  6FE7               	movwf	f_mount@fs& (0+255),b
  2657   0058C6  0E02               	movlw	high _FatFs
  2658   0058C8  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2659   0058CA  0EE4               	movlw	low (STR_9+11)
  2660   0058CC  6FE9               	movwf	f_mount@path& (0+255),b
  2661   0058CE  0EFF               	movlw	high (STR_9+11)
  2662   0058D0  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2663   0058D2  0E01               	movlw	1
  2664   0058D4  6FEB               	movwf	f_mount@opt& (0+255),b
  2665   0058D6  ECD1  F045         	call	_f_mount	;wreg free
  2666   0058DA  0900               	iorlw	0
  2667   0058DC  A4D8               	btfss	status,2,c
  2668   0058DE  EF73  F02C         	goto	u22981
  2669   0058E2  EF75  F02C         	goto	u22980
  2670   0058E6                     u22981:
  2671   0058E6  EFD9  F02C         	goto	l18840
  2672   0058EA                     u22980:
  2673   0058EA                     
  2674                           ;main.c: 94:         if (f_open(&Fil, "Data.txt", 0x04 | 0x01 | 0x02) == FR_OK) {
  2675   0058EA  0EE9               	movlw	low _Fil
  2676   0058EC  0101               	movlb	1	; () banked
  2677   0058EE  6F41               	movwf	f_open@fp& (0+255),b
  2678   0058F0  0E04               	movlw	high _Fil
  2679   0058F2  6F42               	movwf	(f_open@fp+1)& (0+255),b
  2680   0058F4  0EE5               	movlw	low STR_8
  2681   0058F6  6F43               	movwf	f_open@path& (0+255),b
  2682   0058F8  0EFF               	movlw	high STR_8
  2683   0058FA  6F44               	movwf	(f_open@path+1)& (0+255),b
  2684   0058FC  0E07               	movlw	7
  2685   0058FE  6F45               	movwf	f_open@mode& (0+255),b
  2686   005900  ECA0  F00F         	call	_f_open	;wreg free
  2687   005904  0900               	iorlw	0
  2688   005906  A4D8               	btfss	status,2,c
  2689   005908  EF88  F02C         	goto	u22991
  2690   00590C  EF8A  F02C         	goto	u22990
  2691   005910                     u22991:
  2692   005910  EFEE  F02C         	goto	l2206
  2693   005914                     u22990:
  2694   005914                     
  2695                           ;main.c: 95:             f_write(&Fil, "BEGIN LOG\r\n", 10, &bw);
  2696   005914  0EE9               	movlw	low _Fil
  2697   005916  0101               	movlb	1	; () banked
  2698   005918  6F17               	movwf	f_write@fp& (0+255),b
  2699   00591A  0E04               	movlw	high _Fil
  2700   00591C  6F18               	movwf	(f_write@fp+1)& (0+255),b
  2701   00591E  0ED9               	movlw	low STR_9
  2702   005920  6F19               	movwf	f_write@buff& (0+255),b
  2703   005922  0EFF               	movlw	high STR_9
  2704   005924  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  2705   005926  0E00               	movlw	0
  2706   005928  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  2707   00592A  0E0A               	movlw	10
  2708   00592C  6F1B               	movwf	f_write@btw& (0+255),b
  2709   00592E  0EF5               	movlw	low _bw
  2710   005930  6F1D               	movwf	f_write@bw& (0+255),b
  2711   005932  0E01               	movlw	high _bw
  2712   005934  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  2713   005936  EC69  F007         	call	_f_write	;wreg free
  2714                           
  2715                           ;main.c: 96:             f_close(&Fil);
  2716   00593A  0EE9               	movlw	low _Fil
  2717   00593C  0100               	movlb	0	; () banked
  2718   00593E  6FDA               	movwf	f_close@fp& (0+255),b
  2719   005940  0E04               	movlw	high _Fil
  2720   005942  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  2721   005944  ECAB  F04E         	call	_f_close	;wreg free
  2722   005948  EFEE  F02C         	goto	l2206
  2723   00594C                     l18832:
  2724                           
  2725                           ;main.c: 100:             if (millis() - last_status_millis > 500) {
  2726   00594C  EC18  F051         	call	_millis	;wreg free
  2727   005950  0101               	movlb	1	; () banked
  2728   005952  51B0               	movf	main@last_status_millis& (0+255),w,b
  2729   005954  0100               	movlb	0	; () banked
  2730   005956  5D60               	subwf	?_millis& (0+255),w,b
  2731   005958  0101               	movlb	1	; () banked
  2732   00595A  6FA6               	movwf	??_main& (0+255),b
  2733   00595C  51B1               	movf	(main@last_status_millis+1)& (0+255),w,b
  2734   00595E  0100               	movlb	0	; () banked
  2735   005960  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2736   005962  0101               	movlb	1	; () banked
  2737   005964  6FA7               	movwf	(??_main+1)& (0+255),b
  2738   005966  51B2               	movf	(main@last_status_millis+2)& (0+255),w,b
  2739   005968  0100               	movlb	0	; () banked
  2740   00596A  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2741   00596C  0101               	movlb	1	; () banked
  2742   00596E  6FA8               	movwf	(??_main+2)& (0+255),b
  2743   005970  51B3               	movf	(main@last_status_millis+3)& (0+255),w,b
  2744   005972  0100               	movlb	0	; () banked
  2745   005974  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2746   005976  0101               	movlb	1	; () banked
  2747   005978  6FA9               	movwf	(??_main+3)& (0+255),b
  2748   00597A  51A9               	movf	(??_main+3)& (0+255),w,b
  2749   00597C  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2750   00597E  E10B               	bnz	u23000
  2751   005980  0EF5               	movlw	245
  2752   005982  5DA6               	subwf	??_main& (0+255),w,b
  2753   005984  0E01               	movlw	1
  2754   005986  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2755   005988  A0D8               	btfss	status,0,c
  2756   00598A  EFC9  F02C         	goto	u23001
  2757   00598E  EFCB  F02C         	goto	u23000
  2758   005992                     u23001:
  2759   005992  EFD7  F02C         	goto	l18838
  2760   005996                     u23000:
  2761   005996                     
  2762                           ; BSR set to: 1
  2763                           ;main.c: 101:                 last_status_millis = millis();
  2764   005996  EC18  F051         	call	_millis	;wreg free
  2765   00599A  C060  F1B0         	movff	?_millis,main@last_status_millis
  2766   00599E  C061  F1B1         	movff	?_millis+1,main@last_status_millis+1
  2767   0059A2  C062  F1B2         	movff	?_millis+2,main@last_status_millis+2
  2768   0059A6  C063  F1B3         	movff	?_millis+3,main@last_status_millis+3
  2769   0059AA                     
  2770                           ;main.c: 102:                 send_status_err();
  2771   0059AA  ECC2  F04F         	call	_send_status_err	;wreg free
  2772   0059AE                     l18838:
  2773                           
  2774                           ;main.c: 105:             txb_heartbeat();
  2775   0059AE  EC62  F04B         	call	_txb_heartbeat	;wreg free
  2776   0059B2                     l18840:
  2777                           
  2778                           ;main.c: 99:         while (f_mount(&FatFs, "", 1) != FR_OK) {
  2779   0059B2  0EB6               	movlw	low _FatFs
  2780   0059B4  0100               	movlb	0	; () banked
  2781   0059B6  6FE7               	movwf	f_mount@fs& (0+255),b
  2782   0059B8  0E02               	movlw	high _FatFs
  2783   0059BA  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2784   0059BC  0EE4               	movlw	low (STR_9+11)
  2785   0059BE  6FE9               	movwf	f_mount@path& (0+255),b
  2786   0059C0  0EFF               	movlw	high (STR_9+11)
  2787   0059C2  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2788   0059C4  0E01               	movlw	1
  2789   0059C6  6FEB               	movwf	f_mount@opt& (0+255),b
  2790   0059C8  ECD1  F045         	call	_f_mount	;wreg free
  2791   0059CC  0900               	iorlw	0
  2792   0059CE  A4D8               	btfss	status,2,c
  2793   0059D0  EFEC  F02C         	goto	u23011
  2794   0059D4  EFEE  F02C         	goto	u23010
  2795   0059D8                     u23011:
  2796   0059D8  EFA6  F02C         	goto	l18832
  2797   0059DC                     u23010:
  2798   0059DC                     l2206:
  2799   0059DC  0004               	clrwdt		;# 
  2800   0059DE  0E00               	movlw	0
  2801   0059E0  EC20  F050         	call	_ADCC_GetSingleConversion
  2802                           
  2803                           ;main.c: 115:         if (millis() - last_status_millis > 500) {
  2804   0059E4  EC18  F051         	call	_millis	;wreg free
  2805   0059E8  0101               	movlb	1	; () banked
  2806   0059EA  51B0               	movf	main@last_status_millis& (0+255),w,b
  2807   0059EC  0100               	movlb	0	; () banked
  2808   0059EE  5D60               	subwf	?_millis& (0+255),w,b
  2809   0059F0  0101               	movlb	1	; () banked
  2810   0059F2  6FA6               	movwf	??_main& (0+255),b
  2811   0059F4  51B1               	movf	(main@last_status_millis+1)& (0+255),w,b
  2812   0059F6  0100               	movlb	0	; () banked
  2813   0059F8  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2814   0059FA  0101               	movlb	1	; () banked
  2815   0059FC  6FA7               	movwf	(??_main+1)& (0+255),b
  2816   0059FE  51B2               	movf	(main@last_status_millis+2)& (0+255),w,b
  2817   005A00  0100               	movlb	0	; () banked
  2818   005A02  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2819   005A04  0101               	movlb	1	; () banked
  2820   005A06  6FA8               	movwf	(??_main+2)& (0+255),b
  2821   005A08  51B3               	movf	(main@last_status_millis+3)& (0+255),w,b
  2822   005A0A  0100               	movlb	0	; () banked
  2823   005A0C  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2824   005A0E  0101               	movlb	1	; () banked
  2825   005A10  6FA9               	movwf	(??_main+3)& (0+255),b
  2826   005A12  51A9               	movf	(??_main+3)& (0+255),w,b
  2827   005A14  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2828   005A16  E10B               	bnz	u23020
  2829   005A18  0EF5               	movlw	245
  2830   005A1A  5DA6               	subwf	??_main& (0+255),w,b
  2831   005A1C  0E01               	movlw	1
  2832   005A1E  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2833   005A20  A0D8               	btfss	status,0,c
  2834   005A22  EF15  F02D         	goto	u23021
  2835   005A26  EF17  F02D         	goto	u23020
  2836   005A2A                     u23021:
  2837   005A2A  EF23  F02D         	goto	l18848
  2838   005A2E                     u23020:
  2839   005A2E                     
  2840                           ; BSR set to: 1
  2841                           ;main.c: 116:             last_status_millis = millis();
  2842   005A2E  EC18  F051         	call	_millis	;wreg free
  2843   005A32  C060  F1B0         	movff	?_millis,main@last_status_millis
  2844   005A36  C061  F1B1         	movff	?_millis+1,main@last_status_millis+1
  2845   005A3A  C062  F1B2         	movff	?_millis+2,main@last_status_millis+2
  2846   005A3E  C063  F1B3         	movff	?_millis+3,main@last_status_millis+3
  2847   005A42                     
  2848                           ;main.c: 117:             send_status_ok();
  2849   005A42  ECE4  F040         	call	_send_status_ok	;wreg free
  2850   005A46                     l18848:
  2851                           
  2852                           ;main.c: 123:         if (millis() - last_accel_millis > 500) {
  2853   005A46  EC18  F051         	call	_millis	;wreg free
  2854   005A4A  0101               	movlb	1	; () banked
  2855   005A4C  51AA               	movf	main@last_accel_millis& (0+255),w,b
  2856   005A4E  0100               	movlb	0	; () banked
  2857   005A50  5D60               	subwf	?_millis& (0+255),w,b
  2858   005A52  0101               	movlb	1	; () banked
  2859   005A54  6FA6               	movwf	??_main& (0+255),b
  2860   005A56  51AB               	movf	(main@last_accel_millis+1)& (0+255),w,b
  2861   005A58  0100               	movlb	0	; () banked
  2862   005A5A  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2863   005A5C  0101               	movlb	1	; () banked
  2864   005A5E  6FA7               	movwf	(??_main+1)& (0+255),b
  2865   005A60  51AC               	movf	(main@last_accel_millis+2)& (0+255),w,b
  2866   005A62  0100               	movlb	0	; () banked
  2867   005A64  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2868   005A66  0101               	movlb	1	; () banked
  2869   005A68  6FA8               	movwf	(??_main+2)& (0+255),b
  2870   005A6A  51AD               	movf	(main@last_accel_millis+3)& (0+255),w,b
  2871   005A6C  0100               	movlb	0	; () banked
  2872   005A6E  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2873   005A70  0101               	movlb	1	; () banked
  2874   005A72  6FA9               	movwf	(??_main+3)& (0+255),b
  2875   005A74  51A9               	movf	(??_main+3)& (0+255),w,b
  2876   005A76  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2877   005A78  E10B               	bnz	u23030
  2878   005A7A  0EF5               	movlw	245
  2879   005A7C  5DA6               	subwf	??_main& (0+255),w,b
  2880   005A7E  0E01               	movlw	1
  2881   005A80  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2882   005A82  A0D8               	btfss	status,0,c
  2883   005A84  EF46  F02D         	goto	u23031
  2884   005A88  EF48  F02D         	goto	u23030
  2885   005A8C                     u23031:
  2886   005A8C  EFC1  F02D         	goto	l18870
  2887   005A90                     u23030:
  2888   005A90                     
  2889                           ; BSR set to: 1
  2890                           ;main.c: 124:             fxls_init();
  2891   005A90  EC9F  F04A         	call	_fxls_init	;wreg free
  2892   005A94                     
  2893                           ;main.c: 126:             LATB3 = 1;
  2894   005A94  86BB               	bsf	16315,3,c	;volatile
  2895                           
  2896                           ;main.c: 128:                 uint8_t sys_mode;;main.c: 129:                 i2c_read_re
      +                          g8(0x18, 0x14, &sys_mode);
  2897   005A96  0E14               	movlw	20
  2898   005A98  0100               	movlb	0	; () banked
  2899   005A9A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2900   005A9C  0EAE               	movlw	low main@sys_mode
  2901   005A9E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2902   005AA0  0E01               	movlw	high main@sys_mode
  2903   005AA2  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2904   005AA4  0E18               	movlw	24
  2905   005AA6  EC5A  F04D         	call	_i2c_read_reg8
  2906                           
  2907                           ;main.c: 133:                 uint8_t buf_status;;main.c: 134:                 i2c_read_
      +                          reg8(0x18, 0x0b, &buf_status);
  2908   005AAA  0E0B               	movlw	11
  2909   005AAC  0100               	movlb	0	; () banked
  2910   005AAE  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2911   005AB0  0EAF               	movlw	low main@buf_status
  2912   005AB2  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2913   005AB4  0E01               	movlw	high main@buf_status
  2914   005AB6  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2915   005AB8  0E18               	movlw	24
  2916   005ABA  EC5A  F04D         	call	_i2c_read_reg8
  2917   005ABE                     
  2918                           ;main.c: 136:             LATB3 = 0;
  2919   005ABE  96BB               	bcf	16315,3,c	;volatile
  2920   005AC0                     
  2921                           ;main.c: 139:             uint16_t x = 0;
  2922   005AC0  0E00               	movlw	0
  2923   005AC2  0101               	movlb	1	; () banked
  2924   005AC4  6FB5               	movwf	(main@x+1)& (0+255),b
  2925   005AC6  0E00               	movlw	0
  2926   005AC8  6FB4               	movwf	main@x& (0+255),b
  2927   005ACA                     
  2928                           ; BSR set to: 1
  2929                           ;main.c: 140:             uint16_t y = 0;
  2930   005ACA  0E00               	movlw	0
  2931   005ACC  6FB7               	movwf	(main@y+1)& (0+255),b
  2932   005ACE  0E00               	movlw	0
  2933   005AD0  6FB6               	movwf	main@y& (0+255),b
  2934   005AD2                     
  2935                           ; BSR set to: 1
  2936                           ;main.c: 141:             uint16_t z = 0;
  2937   005AD2  0E00               	movlw	0
  2938   005AD4  6FB9               	movwf	(main@z+1)& (0+255),b
  2939   005AD6  0E00               	movlw	0
  2940   005AD8  6FB8               	movwf	main@z& (0+255),b
  2941   005ADA                     
  2942                           ; BSR set to: 1
  2943                           ;main.c: 144:             fxls_read_accel_data(&x, &y, &z);
  2944   005ADA  0EB4               	movlw	low main@x
  2945   005ADC  0100               	movlb	0	; () banked
  2946   005ADE  6FAA               	movwf	fxls_read_accel_data@x& (0+255),b
  2947   005AE0  0E01               	movlw	high main@x
  2948   005AE2  6FAB               	movwf	(fxls_read_accel_data@x+1)& (0+255),b
  2949   005AE4  0EB6               	movlw	low main@y
  2950   005AE6  6FAC               	movwf	fxls_read_accel_data@y& (0+255),b
  2951   005AE8  0E01               	movlw	high main@y
  2952   005AEA  6FAD               	movwf	(fxls_read_accel_data@y+1)& (0+255),b
  2953   005AEC  0EB8               	movlw	low main@z
  2954   005AEE  6FAE               	movwf	fxls_read_accel_data@z& (0+255),b
  2955   005AF0  0E01               	movlw	high main@z
  2956   005AF2  6FAF               	movwf	(fxls_read_accel_data@z+1)& (0+255),b
  2957   005AF4  EC95  F02F         	call	_fxls_read_accel_data	;wreg free
  2958   005AF8                     
  2959                           ;main.c: 146:             build_analog_data_msg(millis(), SENSOR_MAG_2, x, &msg);
  2960   005AF8  EC18  F051         	call	_millis	;wreg free
  2961   005AFC  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  2962   005B00  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  2963   005B04  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  2964   005B08  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  2965   005B0C  0E12               	movlw	18
  2966   005B0E  0100               	movlb	0	; () banked
  2967   005B10  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  2968   005B12  C1B4  F06D         	movff	main@x,build_analog_data_msg@sensor_data
  2969   005B16  C1B5  F06E         	movff	main@x+1,build_analog_data_msg@sensor_data+1
  2970   005B1A  0EBA               	movlw	low main@msg
  2971   005B1C  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  2972   005B1E  0E01               	movlw	high main@msg
  2973   005B20  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  2974   005B22  EC18  F04A         	call	_build_analog_data_msg	;wreg free
  2975   005B26                     
  2976                           ;main.c: 152:             build_analog_data_msg(millis(), SENSOR_VELOCITY, y, &msg);
  2977   005B26  EC18  F051         	call	_millis	;wreg free
  2978   005B2A  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  2979   005B2E  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  2980   005B32  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  2981   005B36  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  2982   005B3A  0E13               	movlw	19
  2983   005B3C  0100               	movlb	0	; () banked
  2984   005B3E  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  2985   005B40  C1B6  F06D         	movff	main@y,build_analog_data_msg@sensor_data
  2986   005B44  C1B7  F06E         	movff	main@y+1,build_analog_data_msg@sensor_data+1
  2987   005B48  0EBA               	movlw	low main@msg
  2988   005B4A  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  2989   005B4C  0E01               	movlw	high main@msg
  2990   005B4E  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  2991   005B50  EC18  F04A         	call	_build_analog_data_msg	;wreg free
  2992   005B54                     
  2993                           ;main.c: 157:             build_analog_data_msg(millis(), SENSOR_ARM_BATT_1, z, &msg);
  2994   005B54  EC18  F051         	call	_millis	;wreg free
  2995   005B58  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  2996   005B5C  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  2997   005B60  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  2998   005B64  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  2999   005B68  0E0F               	movlw	15
  3000   005B6A  0100               	movlb	0	; () banked
  3001   005B6C  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3002   005B6E  C1B8  F06D         	movff	main@z,build_analog_data_msg@sensor_data
  3003   005B72  C1B9  F06E         	movff	main@z+1,build_analog_data_msg@sensor_data+1
  3004   005B76  0EBA               	movlw	low main@msg
  3005   005B78  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  3006   005B7A  0E01               	movlw	high main@msg
  3007   005B7C  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3008   005B7E  EC18  F04A         	call	_build_analog_data_msg	;wreg free
  3009   005B82                     l18870:
  3010                           
  3011                           ;main.c: 187:         txb_heartbeat();
  3012   005B82  EC62  F04B         	call	_txb_heartbeat	;wreg free
  3013   005B86  EFEE  F02C         	goto	l2206
  3014   005B8A  EF0D  F000         	goto	start
  3015   005B8E                     __end_of_main:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function _txb_init *****************
  3019 ;; Defined at:
  3020 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  pool            2   15[BANK0 ] PTR void 
  3023 ;;		 -> tx_pool(150), 
  3024 ;;  pool_size       2   17[BANK0 ] unsigned int 
  3025 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  3026 ;;		 -> can_send(1), 
  3027 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()_Bool 
  3028 ;;		 -> can_send_rdy(1), 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3040 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;Total ram usage:        8 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 7
  3047 ;; This function calls:
  3048 ;;		_srb_init
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text1
  3055   00A166                     __ptext1:
  3056                           	callstack 0
  3057   00A166                     _txb_init:
  3058                           	callstack 23
  3059   00A166                     
  3060                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  3061   00A166  C073  F1D0         	movff	txb_init@can_send_fp,_ctx
  3062   00A16A  C074  F1D1         	movff	txb_init@can_send_fp+1,_ctx+1
  3063                           
  3064                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  3065   00A16E  C075  F1D2         	movff	txb_init@can_tx_ready,_ctx+2
  3066   00A172  C076  F1D3         	movff	txb_init@can_tx_ready+1,_ctx+3
  3067   00A176                     
  3068                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  3069   00A176  0EE1               	movlw	low _buf@can_tx_buffer$F1072
  3070   00A178  0100               	movlb	0	; () banked
  3071   00A17A  6F67               	movwf	srb_init@ctx& (0+255),b
  3072   00A17C  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3073   00A17E  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  3074   00A180  C06F  F069         	movff	txb_init@pool,srb_init@pool
  3075   00A184  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  3076   00A188  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  3077   00A18C  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  3078   00A190  0E00               	movlw	0
  3079   00A192  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  3080   00A194  0E0B               	movlw	11
  3081   00A196  6F6D               	movwf	srb_init@element_size& (0+255),b
  3082   00A198  ECE1  F04A         	call	_srb_init	;wreg free
  3083   00A19C  0012               	return		;funcret
  3084   00A19E                     __end_of_txb_init:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _srb_init *****************
  3088 ;; Defined at:
  3089 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  ctx             2    7[BANK0 ] PTR struct .
  3092 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3093 ;;  pool            2    9[BANK0 ] PTR void 
  3094 ;;		 -> tx_pool(150), 
  3095 ;;  pool_size       2   11[BANK0 ] unsigned int 
  3096 ;;  element_size    2   13[BANK0 ] unsigned int 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3108 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;Total ram usage:        8 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 6
  3115 ;; This function calls:
  3116 ;;		___lwdiv
  3117 ;; This function is called by:
  3118 ;;		_txb_init
  3119 ;;		_rcvb_init
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text2
  3124   0095C2                     __ptext2:
  3125                           	callstack 0
  3126   0095C2                     _srb_init:
  3127                           	callstack 23
  3128   0095C2                     
  3129                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  3130   0095C2  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  3131   0095C8  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  3132   0095CE  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  3133   0095D4  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  3134   0095DA                     
  3135                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  3136   0095DA  0100               	movlb	0	; () banked
  3137   0095DC  EE20 F002          	lfsr	2,2
  3138   0095E0  5167               	movf	srb_init@ctx& (0+255),w,b
  3139   0095E2  26D9               	addwf	fsr2l,f,c
  3140   0095E4  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3141   0095E6  22DA               	addwfc	fsr2h,f,c
  3142   0095E8  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  3143   0095EE  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  3144   0095F4                     
  3145                           ; BSR set to: 0
  3146                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  3147   0095F4  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  3148   0095F8  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  3149   0095FC  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  3150   009600  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  3151   009604  ECA0  F04B         	call	___lwdiv	;wreg free
  3152   009608  0100               	movlb	0	; () banked
  3153   00960A  EE20 F004          	lfsr	2,4
  3154   00960E  5167               	movf	srb_init@ctx& (0+255),w,b
  3155   009610  26D9               	addwf	fsr2l,f,c
  3156   009612  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3157   009614  22DA               	addwfc	fsr2h,f,c
  3158   009616  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  3159   00961C  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  3160   009622                     
  3161                           ; BSR set to: 0
  3162                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  3163   009622  EE20 F006          	lfsr	2,6
  3164   009626  5167               	movf	srb_init@ctx& (0+255),w,b
  3165   009628  26D9               	addwf	fsr2l,f,c
  3166   00962A  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3167   00962C  22DA               	addwfc	fsr2h,f,c
  3168   00962E  6ADE               	clrf	postinc2,c
  3169   009630  6ADD               	clrf	postdec2,c
  3170   009632                     
  3171                           ; BSR set to: 0
  3172                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  3173   009632  EE20 F008          	lfsr	2,8
  3174   009636  5167               	movf	srb_init@ctx& (0+255),w,b
  3175   009638  26D9               	addwf	fsr2l,f,c
  3176   00963A  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3177   00963C  22DA               	addwfc	fsr2h,f,c
  3178   00963E  6ADE               	clrf	postinc2,c
  3179   009640  6ADD               	clrf	postdec2,c
  3180   009642                     
  3181                           ; BSR set to: 0
  3182   009642  0012               	return		;funcret
  3183   009644                     __end_of_srb_init:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function ___lwdiv *****************
  3187 ;; Defined at:
  3188 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dividend        2    0[BANK0 ] unsigned int 
  3191 ;;  divisor         2    2[BANK0 ] unsigned int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  quotient        2    5[BANK0 ] unsigned int 
  3194 ;;  counter         1    4[BANK0 ] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2    0[BANK0 ] unsigned int 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        7 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 5
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_srb_init
  3215 ;;		_read_flow_sensor_data
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text3
  3220   009740                     __ptext3:
  3221                           	callstack 0
  3222   009740                     ___lwdiv:
  3223                           	callstack 23
  3224   009740  0E00               	movlw	0
  3225   009742  0100               	movlb	0	; () banked
  3226   009744  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3227   009746  0E00               	movlw	0
  3228   009748  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3229   00974A                     
  3230                           ; BSR set to: 0
  3231   00974A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3232   00974C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3233   00974E  B4D8               	btfsc	status,2,c
  3234   009750  EFAC  F04B         	goto	u20811
  3235   009754  EFAE  F04B         	goto	u20810
  3236   009758                     u20811:
  3237   009758  EFD6  F04B         	goto	l2759
  3238   00975C                     u20810:
  3239   00975C                     
  3240                           ; BSR set to: 0
  3241   00975C  0E01               	movlw	1
  3242   00975E  6F64               	movwf	___lwdiv@counter& (0+255),b
  3243   009760  EFB6  F04B         	goto	l16910
  3244   009764                     l16908:
  3245                           
  3246                           ; BSR set to: 0
  3247   009764  90D8               	bcf	status,0,c
  3248   009766  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3249   009768  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3250   00976A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3251   00976C                     l16910:
  3252                           
  3253                           ; BSR set to: 0
  3254   00976C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3255   00976E  EFBB  F04B         	goto	u20821
  3256   009772  EFBD  F04B         	goto	u20820
  3257   009776                     u20821:
  3258   009776  EFB2  F04B         	goto	l16908
  3259   00977A                     u20820:
  3260   00977A                     l16912:
  3261                           
  3262                           ; BSR set to: 0
  3263   00977A  90D8               	bcf	status,0,c
  3264   00977C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3265   00977E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3266   009780                     
  3267                           ; BSR set to: 0
  3268   009780  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3269   009782  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3270   009784  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3271   009786  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3272   009788  A0D8               	btfss	status,0,c
  3273   00978A  EFC9  F04B         	goto	u20831
  3274   00978E  EFCB  F04B         	goto	u20830
  3275   009792                     u20831:
  3276   009792  EFD0  F04B         	goto	l16920
  3277   009796                     u20830:
  3278   009796                     
  3279                           ; BSR set to: 0
  3280   009796  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3281   009798  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3282   00979A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3283   00979C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3284   00979E                     
  3285                           ; BSR set to: 0
  3286   00979E  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3287   0097A0                     l16920:
  3288                           
  3289                           ; BSR set to: 0
  3290   0097A0  90D8               	bcf	status,0,c
  3291   0097A2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3292   0097A4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3293   0097A6                     
  3294                           ; BSR set to: 0
  3295   0097A6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3296   0097A8  EFBD  F04B         	goto	l16912
  3297   0097AC                     l2759:
  3298                           
  3299                           ; BSR set to: 0
  3300   0097AC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3301   0097B0  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3302   0097B4                     
  3303                           ; BSR set to: 0
  3304   0097B4  0012               	return		;funcret
  3305   0097B6                     __end_of___lwdiv:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _txb_heartbeat *****************
  3309 ;; Defined at:
  3310 ;;		line 31 in file "canlib/util/can_tx_buffer.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  msg_sent       11   21[BANK0 ] struct .
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:       11 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 8
  3331 ;; This function calls:
  3332 ;;		_can_send
  3333 ;;		_can_send_rdy
  3334 ;;		_srb_is_empty
  3335 ;;		_srb_pop
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text4
  3342   0096C4                     __ptext4:
  3343                           	callstack 0
  3344   0096C4                     _txb_heartbeat:
  3345                           	callstack 22
  3346   0096C4                     
  3347                           ;canlib/util/can_tx_buffer.c: 32:     if (!srb_is_empty(&buf)) {
  3348   0096C4  0EE1               	movlw	low _buf@can_tx_buffer$F1072
  3349   0096C6  0100               	movlb	0	; () banked
  3350   0096C8  6F60               	movwf	srb_is_empty@ctx& (0+255),b
  3351   0096CA  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3352   0096CC  6F61               	movwf	(srb_is_empty@ctx+1)& (0+255),b
  3353   0096CE  EC02  F050         	call	_srb_is_empty	;wreg free
  3354   0096D2  0900               	iorlw	0
  3355   0096D4  A4D8               	btfss	status,2,c
  3356   0096D6  EF6F  F04B         	goto	u21851
  3357   0096DA  EF71  F04B         	goto	u21850
  3358   0096DE                     u21851:
  3359   0096DE  EF9F  F04B         	goto	l192
  3360   0096E2                     u21850:
  3361   0096E2                     
  3362                           ;canlib/util/can_tx_buffer.c: 33:         if ((*(ctx.can_tx_ready))()) {
  3363   0096E2  D802               	call	u21868
  3364   0096E4  EF7E  F04B         	goto	u21869
  3365   0096E8                     u21868:
  3366   0096E8  0005               	push	
  3367   0096EA  6EFA               	movwf	pclath,c
  3368   0096EC  0101               	movlb	1	; () banked
  3369   0096EE  51D2               	movf	(_ctx+2)& (0+255),w,b
  3370   0096F0  6EFD               	movwf	tosl,c
  3371   0096F2  51D3               	movf	(_ctx+3)& (0+255),w,b
  3372   0096F4  6EFE               	movwf	tosh,c
  3373   0096F6  6AFF               	clrf	tosu,c
  3374   0096F8  50FA               	movf	pclath,w,c
  3375   0096FA  0012               	return		;indir
  3376   0096FC                     u21869:
  3377   0096FC  0900               	iorlw	0
  3378   0096FE  B4D8               	btfsc	status,2,c
  3379   009700  EF84  F04B         	goto	u21871
  3380   009704  EF86  F04B         	goto	u21870
  3381   009708                     u21871:
  3382   009708  EF9F  F04B         	goto	l192
  3383   00970C                     u21870:
  3384   00970C                     
  3385                           ;canlib/util/can_tx_buffer.c: 34:             can_msg_t msg_sent;;canlib/util/can_tx_buf
      +                          fer.c: 35:             srb_pop(&buf, &msg_sent);
  3386   00970C  0EE1               	movlw	low _buf@can_tx_buffer$F1072
  3387   00970E  0100               	movlb	0	; () banked
  3388   009710  6F6C               	movwf	srb_pop@ctx& (0+255),b
  3389   009712  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3390   009714  6F6D               	movwf	(srb_pop@ctx+1)& (0+255),b
  3391   009716  0E75               	movlw	low txb_heartbeat@msg_sent
  3392   009718  6F6E               	movwf	srb_pop@element& (0+255),b
  3393   00971A  EC60  F045         	call	_srb_pop	;wreg free
  3394   00971E                     
  3395                           ;canlib/util/can_tx_buffer.c: 36:             (*(ctx.can_send_fp))(&msg_sent);
  3396   00971E  0E75               	movlw	low txb_heartbeat@msg_sent
  3397   009720  0100               	movlb	0	; () banked
  3398   009722  6F6B               	movwf	can_send@message& (0+255),b
  3399   009724  D802               	call	u21888
  3400   009726  EF9F  F04B         	goto	u21889
  3401   00972A                     u21888:
  3402   00972A  0005               	push	
  3403   00972C  6EFA               	movwf	pclath,c
  3404   00972E  0101               	movlb	1	; () banked
  3405   009730  51D0               	movf	_ctx& (0+255),w,b
  3406   009732  6EFD               	movwf	tosl,c
  3407   009734  51D1               	movf	(_ctx+1)& (0+255),w,b
  3408   009736  6EFE               	movwf	tosh,c
  3409   009738  6AFF               	clrf	tosu,c
  3410   00973A  50FA               	movf	pclath,w,c
  3411   00973C  0012               	return		;indir
  3412   00973E                     u21889:
  3413   00973E                     l192:
  3414   00973E  0012               	return		;funcret
  3415   009740                     __end_of_txb_heartbeat:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _srb_pop *****************
  3419 ;; Defined at:
  3420 ;;		line 58 in file "canlib/util/safe_ring_buffer.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  ctx             2   12[BANK0 ] PTR struct .
  3423 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3424 ;;  element         1   14[BANK0 ] PTR void 
  3425 ;;		 -> txb_heartbeat@msg_sent(11), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  offset          2   19[BANK0 ] unsigned int 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      _Bool 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:        9 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 7
  3444 ;; This function calls:
  3445 ;;		_get_offset_bytes
  3446 ;;		_memcpy
  3447 ;;		_srb_is_empty
  3448 ;; This function is called by:
  3449 ;;		_txb_heartbeat
  3450 ;;		_rcvb_pop_message
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text5
  3455   008AC0                     __ptext5:
  3456                           	callstack 0
  3457   008AC0                     _srb_pop:
  3458                           	callstack 22
  3459   008AC0                     
  3460                           ;canlib/util/safe_ring_buffer.c: 58: _Bool srb_pop(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 59:              void *element);canlib/util/safe_ring_buffer.c: 60: {;canlib/
      +                          util/safe_ring_buffer.c: 61:     if (srb_is_empty(ctx)) {
  3461   008AC0  C06C  F060         	movff	srb_pop@ctx,srb_is_empty@ctx
  3462   008AC4  C06D  F061         	movff	srb_pop@ctx+1,srb_is_empty@ctx+1
  3463   008AC8  EC02  F050         	call	_srb_is_empty	;wreg free
  3464   008ACC  0900               	iorlw	0
  3465   008ACE  B4D8               	btfsc	status,2,c
  3466   008AD0  EF6C  F045         	goto	u20911
  3467   008AD4  EF6E  F045         	goto	u20910
  3468   008AD8                     u20911:
  3469   008AD8  EF71  F045         	goto	l16978
  3470   008ADC                     u20910:
  3471   008ADC                     
  3472                           ;canlib/util/safe_ring_buffer.c: 62:         return 0;
  3473   008ADC  0E00               	movlw	0
  3474   008ADE  EFD0  F045         	goto	l224
  3475   008AE2                     l16978:
  3476                           
  3477                           ;canlib/util/safe_ring_buffer.c: 64:     size_t offset = get_offset_bytes(ctx, ctx->rd_i
      +                          dx);
  3478   008AE2  C06C  F066         	movff	srb_pop@ctx,get_offset_bytes@ctx
  3479   008AE6  C06D  F067         	movff	srb_pop@ctx+1,get_offset_bytes@ctx+1
  3480   008AEA  0100               	movlb	0	; () banked
  3481   008AEC  EE20 F006          	lfsr	2,6
  3482   008AF0  516C               	movf	srb_pop@ctx& (0+255),w,b
  3483   008AF2  26D9               	addwf	fsr2l,f,c
  3484   008AF4  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3485   008AF6  22DA               	addwfc	fsr2h,f,c
  3486   008AF8  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  3487   008AFE  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  3488   008B04  EC21  F04E         	call	_get_offset_bytes	;wreg free
  3489   008B08  C066  F073         	movff	?_get_offset_bytes,srb_pop@offset
  3490   008B0C  C067  F074         	movff	?_get_offset_bytes+1,srb_pop@offset+1
  3491   008B10                     
  3492                           ;canlib/util/safe_ring_buffer.c: 65:     memcpy(element, ((uint8_t *)ctx->memory_pool) +
      +                           offset, ctx->element_size);
  3493   008B10  C06E  F060         	movff	srb_pop@element,memcpy@d1
  3494   008B14  0100               	movlb	0	; () banked
  3495   008B16  6B61               	clrf	(memcpy@d1+1)& (0+255),b
  3496   008B18  0060  F1B3  FFD9   	movff	srb_pop@ctx,fsr2l
  3497   008B1E  0060  F1B7  FFDA   	movff	srb_pop@ctx+1,fsr2h
  3498   008B24  006F FF78  F06F    	movff	postinc2,??_srb_pop
  3499   008B2A  006F FF74  F070    	movff	postdec2,??_srb_pop+1
  3500   008B30  5173               	movf	srb_pop@offset& (0+255),w,b
  3501   008B32  256F               	addwf	??_srb_pop& (0+255),w,b
  3502   008B34  6F62               	movwf	memcpy@s1& (0+255),b
  3503   008B36  5174               	movf	(srb_pop@offset+1)& (0+255),w,b
  3504   008B38  2170               	addwfc	(??_srb_pop+1)& (0+255),w,b
  3505   008B3A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3506   008B3C  EE20 F002          	lfsr	2,2
  3507   008B40  516C               	movf	srb_pop@ctx& (0+255),w,b
  3508   008B42  26D9               	addwf	fsr2l,f,c
  3509   008B44  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3510   008B46  22DA               	addwfc	fsr2h,f,c
  3511   008B48  006F FF78  F064    	movff	postinc2,memcpy@n
  3512   008B4E  006F FF74  F065    	movff	postdec2,memcpy@n+1
  3513   008B54  EC50  F04E         	call	_memcpy	;wreg free
  3514   008B58                     
  3515                           ;canlib/util/safe_ring_buffer.c: 66:     if ( ++(ctx->rd_idx) >= ctx->max_elements) {
  3516   008B58  0100               	movlb	0	; () banked
  3517   008B5A  EE20 F004          	lfsr	2,4
  3518   008B5E  516C               	movf	srb_pop@ctx& (0+255),w,b
  3519   008B60  26D9               	addwf	fsr2l,f,c
  3520   008B62  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3521   008B64  22DA               	addwfc	fsr2h,f,c
  3522   008B66  EE10 F006          	lfsr	1,6
  3523   008B6A  516C               	movf	srb_pop@ctx& (0+255),w,b
  3524   008B6C  26E1               	addwf	fsr1l,f,c
  3525   008B6E  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3526   008B70  22E2               	addwfc	fsr1h,f,c
  3527   008B72  2AE6               	incf	postinc1,f,c
  3528   008B74  0E00               	movlw	0
  3529   008B76  22E5               	addwfc	postdec1,f,c
  3530   008B78  50DE               	movf	postinc2,w,c
  3531   008B7A  5CE6               	subwf	postinc1,w,c
  3532   008B7C  50DE               	movf	postinc2,w,c
  3533   008B7E  58E6               	subwfb	postinc1,w,c
  3534   008B80  A0D8               	btfss	status,0,c
  3535   008B82  EFC5  F045         	goto	u20921
  3536   008B86  EFC7  F045         	goto	u20920
  3537   008B8A                     u20921:
  3538   008B8A  EFCF  F045         	goto	l16986
  3539   008B8E                     u20920:
  3540   008B8E                     
  3541                           ; BSR set to: 0
  3542                           ;canlib/util/safe_ring_buffer.c: 67:         ctx->rd_idx = 0;
  3543   008B8E  EE20 F006          	lfsr	2,6
  3544   008B92  516C               	movf	srb_pop@ctx& (0+255),w,b
  3545   008B94  26D9               	addwf	fsr2l,f,c
  3546   008B96  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3547   008B98  22DA               	addwfc	fsr2h,f,c
  3548   008B9A  6ADE               	clrf	postinc2,c
  3549   008B9C  6ADD               	clrf	postdec2,c
  3550   008B9E                     l16986:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;canlib/util/safe_ring_buffer.c: 69:     return 1;
  3554   008B9E  0E01               	movlw	1
  3555   008BA0                     l224:
  3556   008BA0  0012               	return		;funcret
  3557   008BA2                     __end_of_srb_pop:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _srb_is_empty *****************
  3561 ;; Defined at:
  3562 ;;		line 49 in file "canlib/util/safe_ring_buffer.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  ctx             2    0[BANK0 ] PTR const struct .
  3565 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      _Bool 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        6 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 5
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_txb_heartbeat
  3588 ;;		_srb_pop
  3589 ;;		_rcvb_is_empty
  3590 ;;		_srb_peek
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text6
  3595   00A004                     __ptext6:
  3596                           	callstack 0
  3597   00A004                     _srb_is_empty:
  3598                           	callstack 23
  3599   00A004                     
  3600                           ;canlib/util/safe_ring_buffer.c: 49: _Bool srb_is_empty(const srb_ctx_t *ctx);canlib/uti
      +                          l/safe_ring_buffer.c: 50: {;canlib/util/safe_ring_buffer.c: 51:     if (ctx->wr_idx == c
      +                          tx->rd_idx) {
  3601   00A004  0100               	movlb	0	; () banked
  3602   00A006  EE20 F006          	lfsr	2,6
  3603   00A00A  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  3604   00A00C  26D9               	addwf	fsr2l,f,c
  3605   00A00E  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  3606   00A010  22DA               	addwfc	fsr2h,f,c
  3607   00A012  EE10 F008          	lfsr	1,8
  3608   00A016  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  3609   00A018  26E1               	addwf	fsr1l,f,c
  3610   00A01A  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  3611   00A01C  22E2               	addwfc	fsr1h,f,c
  3612   00A01E  50DE               	movf	postinc2,w,c
  3613   00A020  18E6               	xorwf	postinc1,w,c
  3614   00A022  E107               	bnz	u19841
  3615   00A024  50DE               	movf	postinc2,w,c
  3616   00A026  18E6               	xorwf	postinc1,w,c
  3617   00A028  A4D8               	btfss	status,2,c
  3618   00A02A  EF19  F050         	goto	u19841
  3619   00A02E  EF1B  F050         	goto	u19840
  3620   00A032                     u19841:
  3621   00A032  EF1E  F050         	goto	l16342
  3622   00A036                     u19840:
  3623   00A036                     
  3624                           ; BSR set to: 0
  3625                           ;canlib/util/safe_ring_buffer.c: 52:         return 1;
  3626   00A036  0E01               	movlw	1
  3627   00A038  EF1F  F050         	goto	l219
  3628   00A03C                     l16342:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;canlib/util/safe_ring_buffer.c: 54:         return 0;
  3632   00A03C  0E00               	movlw	0
  3633   00A03E                     l219:
  3634                           
  3635                           ; BSR set to: 0
  3636   00A03E  0012               	return		;funcret
  3637   00A040                     __end_of_srb_is_empty:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _can_send_rdy *****************
  3641 ;; Defined at:
  3642 ;;		line 114 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      _Bool 
  3649 ;; Registers used:
  3650 ;;		wreg
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 5
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;;		_txb_heartbeat
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text7
  3672   00A3F4                     __ptext7:
  3673                           	callstack 0
  3674   00A3F4                     _can_send_rdy:
  3675                           	callstack 24
  3676   00A3F4                     
  3677                           ;canlib/pic18f26k83/pic18f26k83_can.c: 115:     return TXB0CONbits.TXREQ == 0;
  3678   00A3F4  0137               	movlb	55	; () banked
  3679   00A3F6  A7E0               	btfss	224,3,b	;volatile
  3680   00A3F8  EF00  F052         	goto	u20891
  3681   00A3FC  EF03  F052         	goto	u20890
  3682   00A400                     u20891:
  3683   00A400  0E01               	movlw	1
  3684   00A402  EF04  F052         	goto	u20900
  3685   00A406                     u20890:
  3686   00A406  0E00               	movlw	0
  3687   00A408                     u20900:
  3688   00A408                     
  3689                           ; BSR set to: 55
  3690   00A408  0012               	return		;funcret
  3691   00A40A                     __end_of_can_send_rdy:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function _can_send *****************
  3695 ;; Defined at:
  3696 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  message         1   11[BANK0 ] PTR const struct .
  3699 ;;		 -> txb_heartbeat@msg_sent(11), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3711 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 6
  3718 ;; This function calls:
  3719 ;;		_memcpy
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;;		_txb_heartbeat
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text8
  3727   0087F2                     __ptext8:
  3728                           	callstack 0
  3729   0087F2                     _can_send:
  3730                           	callstack 23
  3731   0087F2                     
  3732                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
  3733   0087F2  0137               	movlb	55	; () banked
  3734   0087F4  A7E0               	btfss	224,3,b	;volatile
  3735   0087F6  EFFF  F043         	goto	u20851
  3736   0087FA  EF01  F044         	goto	u20850
  3737   0087FE                     u20851:
  3738   0087FE  EF03  F044         	goto	l16938
  3739   008802                     u20850:
  3740   008802  EF76  F044         	goto	l75
  3741   008806                     l16938:
  3742                           
  3743                           ; BSR set to: 55
  3744                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x7FF) {
  3745   008806  0100               	movlb	0	; () banked
  3746   008808  516B               	movf	can_send@message& (0+255),w,b
  3747   00880A  6ED9               	movwf	fsr2l,c
  3748   00880C  6ADA               	clrf	fsr2h,c
  3749   00880E  0E02               	movlw	2
  3750   008810  26D9               	addwf	fsr2l,f,c
  3751   008812  0E09               	movlw	9
  3752   008814  60DF               	cpfslt	indf2,c
  3753   008816  EF0F  F044         	goto	u20861
  3754   00881A  EF11  F044         	goto	u20860
  3755   00881E                     u20861:
  3756   00881E  EF76  F044         	goto	l75
  3757   008822                     u20860:
  3758   008822                     
  3759                           ; BSR set to: 0
  3760   008822  516B               	movf	can_send@message& (0+255),w,b
  3761   008824  6ED9               	movwf	fsr2l,c
  3762   008826  6ADA               	clrf	fsr2h,c
  3763   008828  52DE               	movf	postinc2,f,c
  3764   00882A  0E08               	movlw	8
  3765   00882C  5CDE               	subwf	postinc2,w,c
  3766   00882E  A0D8               	btfss	status,0,c
  3767   008830  EF1C  F044         	goto	u20871
  3768   008834  EF1E  F044         	goto	u20870
  3769   008838                     u20871:
  3770   008838  EF20  F044         	goto	l16942
  3771   00883C                     u20870:
  3772   00883C  EF76  F044         	goto	l75
  3773   008840                     l16942:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
  3777   008840  0EFC               	movlw	-4
  3778   008842  0137               	movlb	55	; () banked
  3779   008844  17E0               	andwf	224,f,b	;volatile
  3780   008846                     
  3781                           ; BSR set to: 55
  3782                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = ((message->sid) >> 3);
  3783   008846  0100               	movlb	0	; () banked
  3784   008848  516B               	movf	can_send@message& (0+255),w,b
  3785   00884A  6ED9               	movwf	fsr2l,c
  3786   00884C  6ADA               	clrf	fsr2h,c
  3787   00884E  006F FF78  F06C    	movff	postinc2,??_can_send
  3788   008854  006F FF74  F06D    	movff	postdec2,??_can_send+1
  3789   00885A  90D8               	bcf	status,0,c
  3790   00885C  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3791   00885E  336C               	rrcf	??_can_send& (0+255),f,b
  3792   008860  90D8               	bcf	status,0,c
  3793   008862  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3794   008864  336C               	rrcf	??_can_send& (0+255),f,b
  3795   008866  90D8               	bcf	status,0,c
  3796   008868  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3797   00886A  336C               	rrcf	??_can_send& (0+255),f,b
  3798   00886C  516C               	movf	??_can_send& (0+255),w,b
  3799   00886E  0137               	movlb	55	; () banked
  3800   008870  6FE1               	movwf	225,b	;volatile
  3801   008872                     
  3802                           ; BSR set to: 55
  3803                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid) & 0x7) << 5);
  3804   008872  0100               	movlb	0	; () banked
  3805   008874  516B               	movf	can_send@message& (0+255),w,b
  3806   008876  6ED9               	movwf	fsr2l,c
  3807   008878  6ADA               	clrf	fsr2h,c
  3808   00887A  50DF               	movf	indf2,w,c
  3809   00887C  6F6C               	movwf	??_can_send& (0+255),b
  3810   00887E  0E07               	movlw	7
  3811   008880  176C               	andwf	??_can_send& (0+255),f,b
  3812   008882  0E05               	movlw	5
  3813   008884  6F6D               	movwf	(??_can_send+1)& (0+255),b
  3814   008886                     u20885:
  3815   008886  90D8               	bcf	status,0,c
  3816   008888  376C               	rlcf	??_can_send& (0+255),f,b
  3817   00888A  2F6D               	decfsz	(??_can_send+1)& (0+255),f,b
  3818   00888C  EF43  F044         	goto	u20885
  3819   008890  516C               	movf	??_can_send& (0+255),w,b
  3820   008892  0137               	movlb	55	; () banked
  3821   008894  6FE2               	movwf	226,b	;volatile
  3822   008896                     
  3823                           ; BSR set to: 55
  3824                           ;canlib/pic18f26k83/pic18f26k83_can.c: 102:     TXB0DLCbits.TXRTR = 0;
  3825   008896  9DE5               	bcf	229,6,b	;volatile
  3826   008898                     
  3827                           ; BSR set to: 55
  3828                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.DLC = message->data_len;
  3829   008898  0100               	movlb	0	; () banked
  3830   00889A  516B               	movf	can_send@message& (0+255),w,b
  3831   00889C  6ED9               	movwf	fsr2l,c
  3832   00889E  6ADA               	clrf	fsr2h,c
  3833   0088A0  0E02               	movlw	2
  3834   0088A2  26D9               	addwf	fsr2l,f,c
  3835   0088A4  50DF               	movf	indf2,w,c
  3836   0088A6  6F6C               	movwf	??_can_send& (0+255),b
  3837   0088A8  0137               	movlb	55	; () banked
  3838   0088AA  51E5               	movf	229,w,b	;volatile
  3839   0088AC  0100               	movlb	0	; () banked
  3840   0088AE  196C               	xorwf	??_can_send& (0+255),w,b
  3841   0088B0  0BF0               	andlw	-16
  3842   0088B2  196C               	xorwf	??_can_send& (0+255),w,b
  3843   0088B4  0137               	movlb	55	; () banked
  3844   0088B6  6FE5               	movwf	229,b	;volatile
  3845   0088B8                     
  3846                           ; BSR set to: 55
  3847                           ;canlib/pic18f26k83/pic18f26k83_can.c: 108:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
  3848   0088B8  0EE6               	movlw	230
  3849   0088BA  0100               	movlb	0	; () banked
  3850   0088BC  6F60               	movwf	memcpy@d1& (0+255),b
  3851   0088BE  0E37               	movlw	55
  3852   0088C0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3853   0088C2  C06B  F06C         	movff	can_send@message,??_can_send
  3854   0088C6  0E03               	movlw	3
  3855   0088C8  276C               	addwf	??_can_send& (0+255),f,b
  3856   0088CA  C06C  F062         	movff	??_can_send,memcpy@s1
  3857   0088CE  6B63               	clrf	(memcpy@s1+1)& (0+255),b
  3858   0088D0  516B               	movf	can_send@message& (0+255),w,b
  3859   0088D2  6ED9               	movwf	fsr2l,c
  3860   0088D4  6ADA               	clrf	fsr2h,c
  3861   0088D6  0E02               	movlw	2
  3862   0088D8  26D9               	addwf	fsr2l,f,c
  3863   0088DA  50DF               	movf	indf2,w,c
  3864   0088DC  6F6D               	movwf	(??_can_send+1)& (0+255),b
  3865   0088DE  516D               	movf	(??_can_send+1)& (0+255),w,b
  3866   0088E0  6F64               	movwf	memcpy@n& (0+255),b
  3867   0088E2  6B65               	clrf	(memcpy@n+1)& (0+255),b
  3868   0088E4  EC50  F04E         	call	_memcpy	;wreg free
  3869   0088E8                     
  3870                           ;canlib/pic18f26k83/pic18f26k83_can.c: 111:     TXB0CONbits.TXREQ = 1;
  3871   0088E8  0137               	movlb	55	; () banked
  3872   0088EA  87E0               	bsf	224,3,b	;volatile
  3873   0088EC                     l75:
  3874   0088EC  0012               	return		;funcret
  3875   0088EE                     __end_of_can_send:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _timer0_init *****************
  3879 ;; Defined at:
  3880 ;;		line 33 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 5
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text9
  3909   00A356                     __ptext9:
  3910                           	callstack 0
  3911   00A356                     _timer0_init:
  3912                           	callstack 25
  3913   00A356                     
  3914                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 34:     PIE3bits.TMR0IE = 1;
  3915   00A356  0139               	movlb	57	; () banked
  3916   00A358  8F93               	bsf	147,7,b	;volatile
  3917                           
  3918                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 36:     T0CON0bits.EN = 0;
  3919   00A35A  9EB8               	bcf	184,7,c	;volatile
  3920                           
  3921                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 37:     T0CON0bits.MD16 = 0;
  3922   00A35C  98B8               	bcf	184,4,c	;volatile
  3923   00A35E                     
  3924                           ; BSR set to: 57
  3925                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 39:     T0CON0bits.OUTPS = 0;
  3926   00A35E  0EF0               	movlw	-16
  3927   00A360  16B8               	andwf	184,f,c	;volatile
  3928                           
  3929                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 40:     T0CON1bits.CKPS = 0;
  3930   00A362  0EF0               	movlw	-16
  3931   00A364  16B9               	andwf	185,f,c	;volatile
  3932                           
  3933                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 42:     T0CON1bits.CS = 0x5;
  3934   00A366  50B9               	movf	185,w,c	;volatile
  3935   00A368  0B1F               	andlw	-225
  3936   00A36A  09A0               	iorlw	160
  3937   00A36C  6EB9               	movwf	185,c	;volatile
  3938   00A36E                     
  3939                           ; BSR set to: 57
  3940                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 43:     T0CON1bits.ASYNC = 0;
  3941   00A36E  98B9               	bcf	185,4,c	;volatile
  3942   00A370                     
  3943                           ; BSR set to: 57
  3944                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 46:     T0CON0bits.EN = 1;
  3945   00A370  8EB8               	bsf	184,7,c	;volatile
  3946   00A372                     
  3947                           ; BSR set to: 57
  3948   00A372  0012               	return		;funcret
  3949   00A374                     __end_of_timer0_init:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _send_status_ok *****************
  3953 ;; Defined at:
  3954 ;;		line 229 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  board_stat_m   11  155[BANK1 ] struct .
  3959 ;;  time            4  151[BANK1 ] unsigned long 
  3960 ;;  text            3  148[BANK1 ] unsigned char [3]
  3961 ;;  timestamp       3  145[BANK1 ] unsigned char [3]
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;Total ram usage:       21 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 18
  3978 ;; This function calls:
  3979 ;;		_BLUE_LED_TOGGLE
  3980 ;;		_build_board_stat_msg
  3981 ;;		_f_close
  3982 ;;		_f_open
  3983 ;;		_f_write
  3984 ;;		_millis
  3985 ;;		_sprintf
  3986 ;;		_txb_enqueue
  3987 ;; This function is called by:
  3988 ;;		_main
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text10
  3993   0081C8                     __ptext10:
  3994                           	callstack 0
  3995   0081C8                     _send_status_ok:
  3996                           	callstack 12
  3997   0081C8                     
  3998                           ;main.c: 230:     can_msg_t board_stat_msg;;main.c: 231:     build_board_stat_msg(millis
      +                          (), E_NOMINAL, ((void*)0), 0, &board_stat_msg);
  3999   0081C8  EC18  F051         	call	_millis	;wreg free
  4000   0081CC  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
  4001   0081D0  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  4002   0081D4  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  4003   0081D8  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  4004   0081DC  0E00               	movlw	0
  4005   0081DE  0100               	movlb	0	; () banked
  4006   0081E0  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
  4007   0081E2  0E00               	movlw	0
  4008   0081E4  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
  4009   0081E6  0E00               	movlw	0
  4010   0081E8  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  4011   0081EA  0E00               	movlw	0
  4012   0081EC  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  4013   0081EE  0E9B               	movlw	low send_status_ok@board_stat_msg
  4014   0081F0  6F70               	movwf	build_board_stat_msg@output& (0+255),b
  4015   0081F2  0E01               	movlw	high send_status_ok@board_stat_msg
  4016   0081F4  6F71               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  4017   0081F6  EC6C  F041         	call	_build_board_stat_msg	;wreg free
  4018   0081FA                     
  4019                           ;main.c: 234:     txb_enqueue(&board_stat_msg);
  4020   0081FA  0E9B               	movlw	low send_status_ok@board_stat_msg
  4021   0081FC  0100               	movlb	0	; () banked
  4022   0081FE  6F76               	movwf	txb_enqueue@msg& (0+255),b
  4023   008200  0E01               	movlw	high send_status_ok@board_stat_msg
  4024   008202  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  4025   008204  EC79  F050         	call	_txb_enqueue	;wreg free
  4026   008208                     
  4027                           ;main.c: 236:     uint32_t time = millis();
  4028   008208  EC18  F051         	call	_millis	;wreg free
  4029   00820C  C060  F197         	movff	?_millis,send_status_ok@time
  4030   008210  C061  F198         	movff	?_millis+1,send_status_ok@time+1
  4031   008214  C062  F199         	movff	?_millis+2,send_status_ok@time+2
  4032   008218  C063  F19A         	movff	?_millis+3,send_status_ok@time+3
  4033   00821C                     
  4034                           ;main.c: 237:     uint8_t timestamp[3];;main.c: 239:     timestamp[0] = (time >> 16) & 0
      +                          xff;
  4035   00821C  C199  F191         	movff	send_status_ok@time+2,send_status_ok@timestamp
  4036   008220                     
  4037                           ;main.c: 240:     timestamp[1] = (time >> 8) & 0xff;
  4038   008220  C198  F192         	movff	send_status_ok@time+1,send_status_ok@timestamp+1
  4039   008224                     
  4040                           ;main.c: 241:     timestamp[2] = (time >> 0) & 0xff;
  4041   008224  C197  F193         	movff	send_status_ok@time,send_status_ok@timestamp+2
  4042   008228                     
  4043                           ;main.c: 243:     char text[3];;main.c: 244:     sprintf(text, "%lud\r\n", time);
  4044   008228  0E94               	movlw	low send_status_ok@text
  4045   00822A  0100               	movlb	0	; () banked
  4046   00822C  6F7F               	movwf	sprintf@s& (0+255),b
  4047   00822E  0E01               	movlw	high send_status_ok@text
  4048   008230  6F80               	movwf	(sprintf@s+1)& (0+255),b
  4049   008232  0EEE               	movlw	low STR_11
  4050   008234  6F81               	movwf	sprintf@fmt& (0+255),b
  4051   008236  0EFF               	movlw	high STR_11
  4052   008238  6F82               	movwf	(sprintf@fmt+1)& (0+255),b
  4053   00823A  C197  F083         	movff	send_status_ok@time,?_sprintf+4
  4054   00823E  C198  F084         	movff	send_status_ok@time+1,?_sprintf+5
  4055   008242  C199  F085         	movff	send_status_ok@time+2,?_sprintf+6
  4056   008246  C19A  F086         	movff	send_status_ok@time+3,?_sprintf+7
  4057   00824A  ECA0  F04F         	call	_sprintf	;wreg free
  4058   00824E                     
  4059                           ;main.c: 246:     if (f_open(&Fil, "Data.txt", 0x30 | 0x01 | 0x02) == FR_OK) {
  4060   00824E  0EE9               	movlw	low _Fil
  4061   008250  0101               	movlb	1	; () banked
  4062   008252  6F41               	movwf	f_open@fp& (0+255),b
  4063   008254  0E04               	movlw	high _Fil
  4064   008256  6F42               	movwf	(f_open@fp+1)& (0+255),b
  4065   008258  0EE5               	movlw	low STR_8
  4066   00825A  6F43               	movwf	f_open@path& (0+255),b
  4067   00825C  0EFF               	movlw	high STR_8
  4068   00825E  6F44               	movwf	(f_open@path+1)& (0+255),b
  4069   008260  0E33               	movlw	51
  4070   008262  6F45               	movwf	f_open@mode& (0+255),b
  4071   008264  ECA0  F00F         	call	_f_open	;wreg free
  4072   008268  0900               	iorlw	0
  4073   00826A  A4D8               	btfss	status,2,c
  4074   00826C  EF3A  F041         	goto	u22221
  4075   008270  EF3C  F041         	goto	u22220
  4076   008274                     u22221:
  4077   008274  EF6B  F041         	goto	l2228
  4078   008278                     u22220:
  4079   008278                     
  4080                           ;main.c: 248:         f_write(&Fil, text, sizeof (text), &bw);
  4081   008278  0EE9               	movlw	low _Fil
  4082   00827A  0101               	movlb	1	; () banked
  4083   00827C  6F17               	movwf	f_write@fp& (0+255),b
  4084   00827E  0E04               	movlw	high _Fil
  4085   008280  6F18               	movwf	(f_write@fp+1)& (0+255),b
  4086   008282  0E94               	movlw	low send_status_ok@text
  4087   008284  6F19               	movwf	f_write@buff& (0+255),b
  4088   008286  0E01               	movlw	high send_status_ok@text
  4089   008288  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  4090   00828A  0E00               	movlw	0
  4091   00828C  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  4092   00828E  0E03               	movlw	3
  4093   008290  6F1B               	movwf	f_write@btw& (0+255),b
  4094   008292  0EF5               	movlw	low _bw
  4095   008294  6F1D               	movwf	f_write@bw& (0+255),b
  4096   008296  0E01               	movlw	high _bw
  4097   008298  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  4098   00829A  EC69  F007         	call	_f_write	;wreg free
  4099                           
  4100                           ;main.c: 249:         f_write(&Fil, "\n", 1, &bw);
  4101   00829E  0EE9               	movlw	low _Fil
  4102   0082A0  0101               	movlb	1	; () banked
  4103   0082A2  6F17               	movwf	f_write@fp& (0+255),b
  4104   0082A4  0E04               	movlw	high _Fil
  4105   0082A6  6F18               	movwf	(f_write@fp+1)& (0+255),b
  4106   0082A8  0EE3               	movlw	low (STR_9+10)
  4107   0082AA  6F19               	movwf	f_write@buff& (0+255),b
  4108   0082AC  0EFF               	movlw	high (STR_9+10)
  4109   0082AE  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  4110   0082B0  0E00               	movlw	0
  4111   0082B2  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  4112   0082B4  0E01               	movlw	1
  4113   0082B6  6F1B               	movwf	f_write@btw& (0+255),b
  4114   0082B8  0EF5               	movlw	low _bw
  4115   0082BA  6F1D               	movwf	f_write@bw& (0+255),b
  4116   0082BC  0E01               	movlw	high _bw
  4117   0082BE  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  4118   0082C0  EC69  F007         	call	_f_write	;wreg free
  4119                           
  4120                           ;main.c: 250:         f_close(&Fil);
  4121   0082C4  0EE9               	movlw	low _Fil
  4122   0082C6  0100               	movlb	0	; () banked
  4123   0082C8  6FDA               	movwf	f_close@fp& (0+255),b
  4124   0082CA  0E04               	movlw	high _Fil
  4125   0082CC  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  4126   0082CE  ECAB  F04E         	call	_f_close	;wreg free
  4127   0082D2                     
  4128                           ;main.c: 252:         BLUE_LED_TOGGLE();
  4129   0082D2  EC35  F052         	call	_BLUE_LED_TOGGLE	;wreg free
  4130   0082D6                     l2228:
  4131   0082D6  0012               	return		;funcret
  4132   0082D8                     __end_of_send_status_ok:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _sprintf *****************
  4136 ;; Defined at:
  4137 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  s               2   31[BANK0 ] PTR unsigned char 
  4140 ;;		 -> send_status_ok@text(3), 
  4141 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  4142 ;;		 -> STR_11(7), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  f              12   40[BANK0 ] struct _IO_FILE
  4145 ;;  ret             2    0        int 
  4146 ;;  ap              1   39[BANK0 ] PTR void [1]
  4147 ;;		 -> ?_sprintf(2), 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2   31[BANK0 ] int 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:       21 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 9
  4164 ;; This function calls:
  4165 ;;		_vfprintf
  4166 ;; This function is called by:
  4167 ;;		_send_status_ok
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text11
  4172   009F40                     __ptext11:
  4173                           	callstack 0
  4174   009F40                     _sprintf:
  4175                           	callstack 20
  4176   009F40  0E83               	movlw	low (?_sprintf+4)
  4177   009F42  0100               	movlb	0	; () banked
  4178   009F44  6F87               	movwf	sprintf@ap& (0+255),b
  4179   009F46  C07F  F088         	movff	sprintf@s,sprintf@f
  4180   009F4A  C080  F089         	movff	sprintf@s+1,sprintf@f+1
  4181   009F4E                     
  4182                           ; BSR set to: 0
  4183   009F4E  0E00               	movlw	0
  4184   009F50  6F8C               	movwf	(sprintf@f+4)& (0+255),b
  4185   009F52  0E00               	movlw	0
  4186   009F54  6F8B               	movwf	(sprintf@f+3)& (0+255),b
  4187   009F56                     
  4188                           ; BSR set to: 0
  4189   009F56  0E00               	movlw	0
  4190   009F58  6F93               	movwf	(sprintf@f+11)& (0+255),b
  4191   009F5A  0E00               	movlw	0
  4192   009F5C  6F92               	movwf	(sprintf@f+10)& (0+255),b
  4193   009F5E                     
  4194                           ; BSR set to: 0
  4195   009F5E  0E88               	movlw	low sprintf@f
  4196   009F60  6F79               	movwf	vfprintf@fp& (0+255),b
  4197   009F62  C081  F07A         	movff	sprintf@fmt,vfprintf@fmt
  4198   009F66  C082  F07B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4199   009F6A  0E87               	movlw	low sprintf@ap
  4200   009F6C  6F7C               	movwf	vfprintf@ap& (0+255),b
  4201   009F6E  EC56  F04F         	call	_vfprintf	;wreg free
  4202   009F72  0100               	movlb	0	; () banked
  4203   009F74  518B               	movf	(sprintf@f+3)& (0+255),w,b
  4204   009F76  257F               	addwf	sprintf@s& (0+255),w,b
  4205   009F78  6ED9               	movwf	fsr2l,c
  4206   009F7A  518C               	movf	(sprintf@f+4)& (0+255),w,b
  4207   009F7C  2180               	addwfc	(sprintf@s+1)& (0+255),w,b
  4208   009F7E  6EDA               	movwf	fsr2h,c
  4209   009F80  6ADF               	clrf	indf2,c
  4210   009F82                     
  4211                           ; BSR set to: 0
  4212   009F82  0012               	return		;funcret
  4213   009F84                     __end_of_sprintf:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _vfprintf *****************
  4217 ;; Defined at:
  4218 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  4221 ;;		 -> sprintf@f(12), 
  4222 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  4223 ;;		 -> STR_11(7), 
  4224 ;;  ap              1   28[BANK0 ] PTR PTR void 
  4225 ;;		 -> sprintf@ap(1), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  cfmt            2   29[BANK0 ] PTR unsigned char 
  4228 ;;		 -> STR_11(7), 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  2   25[BANK0 ] int 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;Total ram usage:        6 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 8
  4245 ;; This function calls:
  4246 ;;		_vfpfcnvrt
  4247 ;; This function is called by:
  4248 ;;		_sprintf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text12
  4253   009EAC                     __ptext12:
  4254                           	callstack 0
  4255   009EAC                     _vfprintf:
  4256                           	callstack 20
  4257   009EAC                     
  4258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4259   009EAC  C07A  F07D         	movff	vfprintf@fmt,vfprintf@cfmt
  4260   009EB0  C07B  F07E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4263   009EB4  EF65  F04F         	goto	l16928
  4264   009EB8                     l16926:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4267   009EB8  C079  F06D         	movff	vfprintf@fp,vfpfcnvrt@fp
  4268   009EBC  0E7D               	movlw	low vfprintf@cfmt
  4269   009EBE  0100               	movlb	0	; () banked
  4270   009EC0  6F6E               	movwf	vfpfcnvrt@fmt& (0+255),b
  4271   009EC2  C07C  F06F         	movff	vfprintf@ap,vfpfcnvrt@ap
  4272   009EC6  EC5F  F032         	call	_vfpfcnvrt	;wreg free
  4273   009ECA                     l16928:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4276   009ECA  0060  F1F7  FFF6   	movff	vfprintf@cfmt,tblptrl
  4277   009ED0  0060  F1FB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4278   009ED6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4279   009ED6  6AF8               	clrf	tblptru,c
  4280   009ED8                     	endif
  4281   009ED8                     	if	0	;tblptru may be non-zero
  4282   009ED8                     	endif
  4283   009ED8  0008               	tblrd		*
  4284   009EDA  50F5               	movf	tablat,w,c
  4285   009EDC  0900               	iorlw	0
  4286   009EDE  A4D8               	btfss	status,2,c
  4287   009EE0  EF74  F04F         	goto	u20841
  4288   009EE4  EF76  F04F         	goto	u20840
  4289   009EE8                     u20841:
  4290   009EE8  EF5C  F04F         	goto	l16926
  4291   009EEC                     u20840:
  4292   009EEC                     
  4293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4294   009EEC  0E00               	movlw	0
  4295   009EEE  0100               	movlb	0	; () banked
  4296   009EF0  6F7A               	movwf	(?_vfprintf+1)& (0+255),b
  4297   009EF2  0E00               	movlw	0
  4298   009EF4  6F79               	movwf	?_vfprintf& (0+255),b
  4299   009EF6                     
  4300                           ; BSR set to: 0
  4301   009EF6  0012               	return		;funcret
  4302   009EF8                     __end_of_vfprintf:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _vfpfcnvrt *****************
  4306 ;; Defined at:
  4307 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  4310 ;;		 -> sprintf@f(12), 
  4311 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  4312 ;;		 -> vfprintf@cfmt(2), 
  4313 ;;  ap              1   15[BANK0 ] PTR PTR void 
  4314 ;;		 -> sprintf@ap(1), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  convarg         4   18[BANK0 ] struct .
  4317 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  4318 ;;		 -> STR_11(7), 
  4319 ;;  c               1   24[BANK0 ] unsigned char 
  4320 ;;  done            1    0        _Bool 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4330 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;Total ram usage:       12 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 7
  4337 ;; This function calls:
  4338 ;;		___lldiv
  4339 ;;		___llmod
  4340 ;;		_fputc
  4341 ;; This function is called by:
  4342 ;;		_vfprintf
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text13
  4347   0064BE                     __ptext13:
  4348                           	callstack 0
  4349   0064BE                     _vfpfcnvrt:
  4350                           	callstack 20
  4351   0064BE                     
  4352                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4353   0064BE  0100               	movlb	0	; () banked
  4354   0064C0  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4355   0064C2  6ED9               	movwf	fsr2l,c
  4356   0064C4  6ADA               	clrf	fsr2h,c
  4357   0064C6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4358   0064CC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4359   0064D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4360   0064D2  6AF8               	clrf	tblptru,c
  4361   0064D4                     	endif
  4362   0064D4                     	if	0	;tblptru may be non-zero
  4363   0064D4                     	endif
  4364   0064D4  0008               	tblrd		*
  4365   0064D6  50F5               	movf	tablat,w,c
  4366   0064D8  0A25               	xorlw	37
  4367   0064DA  A4D8               	btfss	status,2,c
  4368   0064DC  EF72  F032         	goto	u19771
  4369   0064E0  EF74  F032         	goto	u19770
  4370   0064E4                     u19771:
  4371   0064E4  EF8F  F033         	goto	l16310
  4372   0064E8                     u19770:
  4373   0064E8                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4376   0064E8  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4377   0064EA  6ED9               	movwf	fsr2l,c
  4378   0064EC  6ADA               	clrf	fsr2h,c
  4379   0064EE  2ADE               	incf	postinc2,f,c
  4380   0064F0  0E00               	movlw	0
  4381   0064F2  22DD               	addwfc	postdec2,f,c
  4382   0064F4                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4385   0064F4  0E00               	movlw	0
  4386   0064F6  0101               	movlb	1	; () banked
  4387   0064F8  6FD8               	movwf	(_width+1)& (0+255),b
  4388   0064FA  0E00               	movlw	0
  4389   0064FC  6FD7               	movwf	_width& (0+255),b
  4390   0064FE  C1D7  F048         	movff	_width,_flags
  4391   006502                     
  4392                           ; BSR set to: 1
  4393                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4394   006502  69D9               	setf	_prec& (0+255),b
  4395   006504  69DA               	setf	(_prec+1)& (0+255),b
  4396   006506                     
  4397                           ; BSR set to: 1
  4398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4399   006506  0100               	movlb	0	; () banked
  4400   006508  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4401   00650A  6ED9               	movwf	fsr2l,c
  4402   00650C  6ADA               	clrf	fsr2h,c
  4403   00650E  006F FF78  F076    	movff	postinc2,vfpfcnvrt@cp
  4404   006514  006F FF74  F077    	movff	postdec2,vfpfcnvrt@cp+1
  4405   00651A                     
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  4408   00651A  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4409   006520  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4410   006526                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4411   006526  6AF8               	clrf	tblptru,c
  4412   006528                     	endif
  4413   006528                     	if	0	;tblptru may be non-zero
  4414   006528                     	endif
  4415   006528  0008               	tblrd		*
  4416   00652A  006F FFD4  F078    	movff	tablat,vfpfcnvrt@c
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  4419   006530  EFA6  F032         	goto	l16272
  4420   006534                     l16264:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  4424   006534  4B76               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  4425   006536  2B77               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  4426                           
  4427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  4428   006538  EFB1  F032         	goto	l16274
  4429   00653C                     l16266:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  4433   00653C  0E69               	movlw	105
  4434   00653E  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4435                           
  4436                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  4437   006540  EFB1  F032         	goto	l16274
  4438   006544                     l16268:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  4442   006544  0E00               	movlw	0
  4443   006546  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  4446   006548  EFB1  F032         	goto	l16274
  4447   00654C                     l16272:
  4448                           
  4449                           ; BSR set to: 0
  4450   00654C  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4451                           
  4452                           ; Switch size 1, requested type "simple"
  4453                           ; Number of cases is 2, Range of values is 108 to 117
  4454                           ; switch strategies available:
  4455                           ; Name         Instructions Cycles
  4456                           ; simple_byte            7     4 (average)
  4457                           ;	Chosen strategy is simple_byte
  4458   00654E  0A6C               	xorlw	108	; case 108
  4459   006550  B4D8               	btfsc	status,2,c
  4460   006552  EF9A  F032         	goto	l16264
  4461   006556  0A19               	xorlw	25	; case 117
  4462   006558  B4D8               	btfsc	status,2,c
  4463   00655A  EF9E  F032         	goto	l16266
  4464   00655E  EFA2  F032         	goto	l16268
  4465   006562                     l16274:
  4466                           
  4467                           ; BSR set to: 0
  4468   006562  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4469   006568  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4470   00656E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4471   00656E  6AF8               	clrf	tblptru,c
  4472   006570                     	endif
  4473   006570                     	if	0	;tblptru may be non-zero
  4474   006570                     	endif
  4475   006570  0008               	tblrd		*
  4476   006572  50F5               	movf	tablat,w,c
  4477   006574  0A75               	xorlw	117
  4478   006576  A4D8               	btfss	status,2,c
  4479   006578  EFC0  F032         	goto	u19781
  4480   00657C  EFC2  F032         	goto	u19780
  4481   006580                     u19781:
  4482   006580  EF86  F033         	goto	l16306
  4483   006584                     u19780:
  4484   006584  EFF0  F032         	goto	l16282
  4485   006588                     l16276:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4489   006588  516F               	movf	vfpfcnvrt@ap& (0+255),w,b
  4490   00658A  6ED9               	movwf	fsr2l,c
  4491   00658C  6ADA               	clrf	fsr2h,c
  4492   00658E  50DF               	movf	indf2,w,c
  4493   006590  2ADF               	incf	indf2,f,c
  4494   006592  2ADF               	incf	indf2,f,c
  4495   006594  6ED9               	movwf	fsr2l,c
  4496   006596  6ADA               	clrf	fsr2h,c
  4497   006598  006F FF78  F070    	movff	postinc2,??_vfpfcnvrt
  4498   00659E  006F FF74  F071    	movff	postdec2,??_vfpfcnvrt+1
  4499   0065A4  C070  F072         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  4500   0065A8  C071  F073         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  4501   0065AC  6B74               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  4502   0065AE  6B75               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
  4505   0065B0  EFFB  F032         	goto	l16284
  4506   0065B4                     l16278:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  4510   0065B4  516F               	movf	vfpfcnvrt@ap& (0+255),w,b
  4511   0065B6  6ED9               	movwf	fsr2l,c
  4512   0065B8  6ADA               	clrf	fsr2h,c
  4513   0065BA  0E04               	movlw	4
  4514   0065BC  26DF               	addwf	indf2,f,c
  4515   0065BE  5CDF               	subwf	indf2,w,c
  4516   0065C0  6ED9               	movwf	fsr2l,c
  4517   0065C2  6ADA               	clrf	fsr2h,c
  4518   0065C4  006F FF78  F072    	movff	postinc2,vfpfcnvrt@convarg
  4519   0065CA  006F FF78  F073    	movff	postinc2,vfpfcnvrt@convarg+1
  4520   0065D0  006F FF78  F074    	movff	postinc2,vfpfcnvrt@convarg+2
  4521   0065D6  006F FF78  F075    	movff	postinc2,vfpfcnvrt@convarg+3
  4522                           
  4523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
  4524   0065DC  EFFB  F032         	goto	l16284
  4525   0065E0                     l16282:
  4526                           
  4527                           ; BSR set to: 0
  4528   0065E0  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4529                           
  4530                           ; Switch size 1, requested type "simple"
  4531                           ; Number of cases is 2, Range of values is 105 to 108
  4532                           ; switch strategies available:
  4533                           ; Name         Instructions Cycles
  4534                           ; simple_byte            7     4 (average)
  4535                           ;	Chosen strategy is simple_byte
  4536   0065E2  0A69               	xorlw	105	; case 105
  4537   0065E4  B4D8               	btfsc	status,2,c
  4538   0065E6  EFC4  F032         	goto	l16276
  4539   0065EA  0A05               	xorlw	5	; case 108
  4540   0065EC  B4D8               	btfsc	status,2,c
  4541   0065EE  EFDA  F032         	goto	l16278
  4542   0065F2  EFFB  F032         	goto	l16284
  4543   0065F6                     l16284:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  4547   0065F6  0E01               	movlw	1
  4548   0065F8  2576               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4549   0065FA  6F70               	movwf	??_vfpfcnvrt& (0+255),b
  4550   0065FC  0E00               	movlw	0
  4551   0065FE  2177               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4552   006600  6F71               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4553   006602  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4554   006604  6ED9               	movwf	fsr2l,c
  4555   006606  6ADA               	clrf	fsr2h,c
  4556   006608  0060  F1C3  FFDE   	movff	??_vfpfcnvrt,postinc2
  4557   00660E  0060  F1C7  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  4560   006614  EF77  F033         	goto	l16304
  4561   006618                     l16286:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  4565   006618  0E20               	movlw	32
  4566   00661A  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4567   00661C                     l16288:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  4571   00661C  0778               	decf	vfpfcnvrt@c& (0+255),f,b
  4572   00661E  0E00               	movlw	low _dbuf
  4573   006620  2578               	addwf	vfpfcnvrt@c& (0+255),w,b
  4574   006622  6ED9               	movwf	fsr2l,c
  4575   006624  6ADA               	clrf	fsr2h,c
  4576   006626  0E02               	movlw	high _dbuf
  4577   006628  22DA               	addwfc	fsr2h,f,c
  4578   00662A  C072  F060         	movff	vfpfcnvrt@convarg,___llmod@dividend
  4579   00662E  C073  F061         	movff	vfpfcnvrt@convarg+1,___llmod@dividend+1
  4580   006632  C074  F062         	movff	vfpfcnvrt@convarg+2,___llmod@dividend+2
  4581   006636  C075  F063         	movff	vfpfcnvrt@convarg+3,___llmod@dividend+3
  4582   00663A  0E0A               	movlw	10
  4583   00663C  6F64               	movwf	___llmod@divisor& (0+255),b
  4584   00663E  0E00               	movlw	0
  4585   006640  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4586   006642  0E00               	movlw	0
  4587   006644  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4588   006646  0E00               	movlw	0
  4589   006648  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4590   00664A  EC8E  F049         	call	___llmod	;wreg free
  4591   00664E  0100               	movlb	0	; () banked
  4592   006650  5160               	movf	?___llmod& (0+255),w,b
  4593   006652  0F30               	addlw	48
  4594   006654  6EDF               	movwf	indf2,c
  4595   006656                     
  4596                           ; BSR set to: 0
  4597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  4598   006656  C072  F060         	movff	vfpfcnvrt@convarg,___lldiv@dividend
  4599   00665A  C073  F061         	movff	vfpfcnvrt@convarg+1,___lldiv@dividend+1
  4600   00665E  C074  F062         	movff	vfpfcnvrt@convarg+2,___lldiv@dividend+2
  4601   006662  C075  F063         	movff	vfpfcnvrt@convarg+3,___lldiv@dividend+3
  4602   006666  0E0A               	movlw	10
  4603   006668  6F64               	movwf	___lldiv@divisor& (0+255),b
  4604   00666A  0E00               	movlw	0
  4605   00666C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4606   00666E  0E00               	movlw	0
  4607   006670  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4608   006672  0E00               	movlw	0
  4609   006674  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4610   006676  ECEF  F048         	call	___lldiv	;wreg free
  4611   00667A  C060  F072         	movff	?___lldiv,vfpfcnvrt@convarg
  4612   00667E  C061  F073         	movff	?___lldiv+1,vfpfcnvrt@convarg+1
  4613   006682  C062  F074         	movff	?___lldiv+2,vfpfcnvrt@convarg+2
  4614   006686  C063  F075         	movff	?___lldiv+3,vfpfcnvrt@convarg+3
  4615   00668A                     
  4616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  4617   00668A  0100               	movlb	0	; () banked
  4618   00668C  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  4619   00668E  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  4620   006690  1174               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  4621   006692  1175               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  4622   006694  B4D8               	btfsc	status,2,c
  4623   006696  EF4F  F033         	goto	u19791
  4624   00669A  EF51  F033         	goto	u19790
  4625   00669E                     u19791:
  4626   00669E  EF6C  F033         	goto	l16300
  4627   0066A2                     u19790:
  4628   0066A2                     
  4629                           ; BSR set to: 0
  4630   0066A2  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4631   0066A4  A4D8               	btfss	status,2,c
  4632   0066A6  EF57  F033         	goto	u19801
  4633   0066AA  EF59  F033         	goto	u19800
  4634   0066AE                     u19801:
  4635   0066AE  EF0E  F033         	goto	l16288
  4636   0066B2                     u19800:
  4637   0066B2  EF6C  F033         	goto	l16300
  4638   0066B6                     l16296:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  4642   0066B6  0E00               	movlw	low _dbuf
  4643   0066B8  2578               	addwf	vfpfcnvrt@c& (0+255),w,b
  4644   0066BA  6ED9               	movwf	fsr2l,c
  4645   0066BC  6ADA               	clrf	fsr2h,c
  4646   0066BE  0E02               	movlw	high _dbuf
  4647   0066C0  22DA               	addwfc	fsr2h,f,c
  4648   0066C2  50DF               	movf	indf2,w,c
  4649   0066C4  6F70               	movwf	??_vfpfcnvrt& (0+255),b
  4650   0066C6  5170               	movf	??_vfpfcnvrt& (0+255),w,b
  4651   0066C8  6F60               	movwf	fputc@c& (0+255),b
  4652   0066CA  6B61               	clrf	(fputc@c+1)& (0+255),b
  4653   0066CC  C06D  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4654   0066D0  EC81  F047         	call	_fputc	;wreg free
  4655   0066D4  0100               	movlb	0	; () banked
  4656   0066D6  2B78               	incf	vfpfcnvrt@c& (0+255),f,b
  4657   0066D8                     l16300:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  4661   0066D8  0E20               	movlw	32
  4662   0066DA  1978               	xorwf	vfpfcnvrt@c& (0+255),w,b
  4663   0066DC  A4D8               	btfss	status,2,c
  4664   0066DE  EF73  F033         	goto	u19811
  4665   0066E2  EF75  F033         	goto	u19810
  4666   0066E6                     u19811:
  4667   0066E6  EF5B  F033         	goto	l16296
  4668   0066EA                     u19810:
  4669   0066EA  EFA3  F033         	goto	l3004
  4670   0066EE                     l16304:
  4671                           
  4672                           ; BSR set to: 0
  4673   0066EE  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4674   0066F4  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4675   0066FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4676   0066FA  6AF8               	clrf	tblptru,c
  4677   0066FC                     	endif
  4678   0066FC                     	if	0	;tblptru may be non-zero
  4679   0066FC                     	endif
  4680   0066FC  0008               	tblrd		*
  4681   0066FE  50F5               	movf	tablat,w,c
  4682                           
  4683                           ; Switch size 1, requested type "simple"
  4684                           ; Number of cases is 1, Range of values is 117 to 117
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte            4     3 (average)
  4688                           ;	Chosen strategy is simple_byte
  4689   006700  0A75               	xorlw	117	; case 117
  4690   006702  B4D8               	btfsc	status,2,c
  4691   006704  EF0C  F033         	goto	l16286
  4692   006708  EF86  F033         	goto	l16306
  4693   00670C                     l16306:
  4694                           
  4695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4696   00670C  0100               	movlb	0	; () banked
  4697   00670E  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4698   006710  6ED9               	movwf	fsr2l,c
  4699   006712  6ADA               	clrf	fsr2h,c
  4700   006714  2ADE               	incf	postinc2,f,c
  4701   006716  0E00               	movlw	0
  4702   006718  22DD               	addwfc	postdec2,f,c
  4703   00671A  EFA3  F033         	goto	l3004
  4704   00671E                     l16310:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4708   00671E  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4709   006720  6ED9               	movwf	fsr2l,c
  4710   006722  6ADA               	clrf	fsr2h,c
  4711   006724  006F FF7B FFF6     	movff	postinc2,tblptrl
  4712   00672A  006F FF77 FFF7     	movff	postdec2,tblptrh
  4713   006730                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4714   006730  6AF8               	clrf	tblptru,c
  4715   006732                     	endif
  4716   006732                     	if	0	;tblptru may be non-zero
  4717   006732                     	endif
  4718   006732  0008               	tblrd		*
  4719   006734  50F5               	movf	tablat,w,c
  4720   006736  6F60               	movwf	fputc@c& (0+255),b
  4721   006738  6B61               	clrf	(fputc@c+1)& (0+255),b
  4722   00673A  C06D  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4723   00673E  EC81  F047         	call	_fputc	;wreg free
  4724   006742  EF86  F033         	goto	l16306
  4725   006746                     l3004:
  4726                           
  4727                           ; BSR set to: 0
  4728   006746  0012               	return		;funcret
  4729   006748                     __end_of_vfpfcnvrt:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _fputc *****************
  4733 ;; Defined at:
  4734 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  c               2    0[BANK0 ] int 
  4737 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  4738 ;;		 -> sprintf@f(12), 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    0[BANK0 ] int 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;Total ram usage:        8 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 6
  4757 ;; This function calls:
  4758 ;;		_putch
  4759 ;; This function is called by:
  4760 ;;		_vfpfcnvrt
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text14
  4765   008F02                     __ptext14:
  4766                           	callstack 0
  4767   008F02                     _fputc:
  4768                           	callstack 20
  4769   008F02  0100               	movlb	0	; () banked
  4770   008F04  5162               	movf	fputc@fp& (0+255),w,b
  4771   008F06  B4D8               	btfsc	status,2,c
  4772   008F08  EF88  F047         	goto	u18991
  4773   008F0C  EF8A  F047         	goto	u18990
  4774   008F10                     u18991:
  4775   008F10  EF92  F047         	goto	l15836
  4776   008F14                     u18990:
  4777   008F14                     
  4778                           ; BSR set to: 0
  4779   008F14  5162               	movf	fputc@fp& (0+255),w,b
  4780   008F16  A4D8               	btfss	status,2,c
  4781   008F18  EF90  F047         	goto	u19001
  4782   008F1C  EF92  F047         	goto	u19000
  4783   008F20                     u19001:
  4784   008F20  EF97  F047         	goto	l15838
  4785   008F24                     u19000:
  4786   008F24                     l15836:
  4787                           
  4788                           ; BSR set to: 0
  4789   008F24  5160               	movf	fputc@c& (0+255),w,b
  4790   008F26  EC49  F052         	call	_putch
  4791   008F2A  EFE3  F047         	goto	l3023
  4792   008F2E                     l15838:
  4793                           
  4794                           ; BSR set to: 0
  4795   008F2E  5162               	movf	fputc@fp& (0+255),w,b
  4796   008F30  6ED9               	movwf	fsr2l,c
  4797   008F32  6ADA               	clrf	fsr2h,c
  4798   008F34  0E0A               	movlw	10
  4799   008F36  26D9               	addwf	fsr2l,f,c
  4800   008F38  50DE               	movf	postinc2,w,c
  4801   008F3A  10DE               	iorwf	postinc2,w,c
  4802   008F3C  B4D8               	btfsc	status,2,c
  4803   008F3E  EFA3  F047         	goto	u19011
  4804   008F42  EFA5  F047         	goto	u19010
  4805   008F46                     u19011:
  4806   008F46  EFBE  F047         	goto	l15842
  4807   008F4A                     u19010:
  4808   008F4A                     
  4809                           ; BSR set to: 0
  4810   008F4A  5162               	movf	fputc@fp& (0+255),w,b
  4811   008F4C  6ED9               	movwf	fsr2l,c
  4812   008F4E  6ADA               	clrf	fsr2h,c
  4813   008F50  0E0A               	movlw	10
  4814   008F52  26D9               	addwf	fsr2l,f,c
  4815   008F54  5162               	movf	fputc@fp& (0+255),w,b
  4816   008F56  6EE1               	movwf	fsr1l,c
  4817   008F58  6AE2               	clrf	fsr1h,c
  4818   008F5A  0E03               	movlw	3
  4819   008F5C  26E1               	addwf	fsr1l,f,c
  4820   008F5E  50DE               	movf	postinc2,w,c
  4821   008F60  5CE6               	subwf	postinc1,w,c
  4822   008F62  50E6               	movf	postinc1,w,c
  4823   008F64  0A80               	xorlw	128
  4824   008F66  6F67               	movwf	(??_fputc+4)& (0+255),b
  4825   008F68  50DE               	movf	postinc2,w,c
  4826   008F6A  0A80               	xorlw	128
  4827   008F6C  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  4828   008F6E  B0D8               	btfsc	status,0,c
  4829   008F70  EFBC  F047         	goto	u19021
  4830   008F74  EFBE  F047         	goto	u19020
  4831   008F78                     u19021:
  4832   008F78  EFE3  F047         	goto	l3023
  4833   008F7C                     u19020:
  4834   008F7C                     l15842:
  4835                           
  4836                           ; BSR set to: 0
  4837   008F7C  5162               	movf	fputc@fp& (0+255),w,b
  4838   008F7E  6ED9               	movwf	fsr2l,c
  4839   008F80  6ADA               	clrf	fsr2h,c
  4840   008F82  0E03               	movlw	3
  4841   008F84  26D9               	addwf	fsr2l,f,c
  4842   008F86  006F FF78  F063    	movff	postinc2,??_fputc
  4843   008F8C  006F FF74  F064    	movff	postdec2,??_fputc+1
  4844   008F92  5162               	movf	fputc@fp& (0+255),w,b
  4845   008F94  6ED9               	movwf	fsr2l,c
  4846   008F96  6ADA               	clrf	fsr2h,c
  4847   008F98  006F FF78  F065    	movff	postinc2,??_fputc+2
  4848   008F9E  006F FF74  F066    	movff	postdec2,??_fputc+3
  4849   008FA4  5163               	movf	??_fputc& (0+255),w,b
  4850   008FA6  2565               	addwf	(??_fputc+2)& (0+255),w,b
  4851   008FA8  6ED9               	movwf	fsr2l,c
  4852   008FAA  5164               	movf	(??_fputc+1)& (0+255),w,b
  4853   008FAC  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  4854   008FAE  6EDA               	movwf	fsr2h,c
  4855   008FB0  0060  F183  FFDF   	movff	fputc@c,indf2
  4856   008FB6  5162               	movf	fputc@fp& (0+255),w,b
  4857   008FB8  6ED9               	movwf	fsr2l,c
  4858   008FBA  6ADA               	clrf	fsr2h,c
  4859   008FBC  0E03               	movlw	3
  4860   008FBE  26D9               	addwf	fsr2l,f,c
  4861   008FC0  2ADE               	incf	postinc2,f,c
  4862   008FC2  0E00               	movlw	0
  4863   008FC4  22DD               	addwfc	postdec2,f,c
  4864   008FC6                     l3023:
  4865   008FC6  0012               	return		;funcret
  4866   008FC8                     __end_of_fputc:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _putch *****************
  4870 ;; Defined at:
  4871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  c               1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  c               1    0[COMRAM] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 5
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_fputc
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text15
  4900   00A492                     __ptext15:
  4901                           	callstack 0
  4902   00A492                     _putch:
  4903                           	callstack 20
  4904   00A492  0012               	return		;funcret
  4905   00A494                     __end_of_putch:
  4906                           	callstack 0
  4907                           
  4908 ;; *************** function ___llmod *****************
  4909 ;; Defined at:
  4910 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  dividend        4    0[BANK0 ] unsigned long 
  4913 ;;  divisor         4    4[BANK0 ] unsigned long 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  counter         1    8[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  4    0[BANK0 ] unsigned long 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;Total ram usage:        9 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 5
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_vfpfcnvrt
  4936 ;;		_f_printf
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text16
  4941   00931C                     __ptext16:
  4942                           	callstack 0
  4943   00931C                     ___llmod:
  4944                           	callstack 21
  4945   00931C  0100               	movlb	0	; () banked
  4946   00931E  5164               	movf	___llmod@divisor& (0+255),w,b
  4947   009320  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4948   009322  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4949   009324  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4950   009326  B4D8               	btfsc	status,2,c
  4951   009328  EF98  F049         	goto	u18961
  4952   00932C  EF9A  F049         	goto	u18960
  4953   009330                     u18961:
  4954   009330  EFCA  F049         	goto	l2688
  4955   009334                     u18960:
  4956   009334                     
  4957                           ; BSR set to: 0
  4958   009334  0E01               	movlw	1
  4959   009336  6F68               	movwf	___llmod@counter& (0+255),b
  4960   009338  EFA4  F049         	goto	l15822
  4961   00933C                     l15820:
  4962                           
  4963                           ; BSR set to: 0
  4964   00933C  90D8               	bcf	status,0,c
  4965   00933E  3764               	rlcf	___llmod@divisor& (0+255),f,b
  4966   009340  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4967   009342  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4968   009344  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4969   009346  2B68               	incf	___llmod@counter& (0+255),f,b
  4970   009348                     l15822:
  4971                           
  4972                           ; BSR set to: 0
  4973   009348  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4974   00934A  EFA9  F049         	goto	u18971
  4975   00934E  EFAB  F049         	goto	u18970
  4976   009352                     u18971:
  4977   009352  EF9E  F049         	goto	l15820
  4978   009356                     u18970:
  4979   009356                     l15824:
  4980                           
  4981                           ; BSR set to: 0
  4982   009356  5164               	movf	___llmod@divisor& (0+255),w,b
  4983   009358  5D60               	subwf	___llmod@dividend& (0+255),w,b
  4984   00935A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  4985   00935C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4986   00935E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  4987   009360  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4988   009362  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  4989   009364  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4990   009366  A0D8               	btfss	status,0,c
  4991   009368  EFB8  F049         	goto	u18981
  4992   00936C  EFBA  F049         	goto	u18980
  4993   009370                     u18981:
  4994   009370  EFC2  F049         	goto	l15828
  4995   009374                     u18980:
  4996   009374                     
  4997                           ; BSR set to: 0
  4998   009374  5164               	movf	___llmod@divisor& (0+255),w,b
  4999   009376  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5000   009378  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5001   00937A  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5002   00937C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5003   00937E  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5004   009380  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5005   009382  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5006   009384                     l15828:
  5007                           
  5008                           ; BSR set to: 0
  5009   009384  90D8               	bcf	status,0,c
  5010   009386  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5011   009388  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5012   00938A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5013   00938C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5014   00938E                     
  5015                           ; BSR set to: 0
  5016   00938E  2F68               	decfsz	___llmod@counter& (0+255),f,b
  5017   009390  EFAB  F049         	goto	l15824
  5018   009394                     l2688:
  5019                           
  5020                           ; BSR set to: 0
  5021   009394  C060  F060         	movff	___llmod@dividend,?___llmod
  5022   009398  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5023   00939C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5024   0093A0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5025   0093A4                     
  5026                           ; BSR set to: 0
  5027   0093A4  0012               	return		;funcret
  5028   0093A6                     __end_of___llmod:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _f_write *****************
  5032 ;; Defined at:
  5033 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  fp              2   23[BANK1 ] PTR struct .
  5036 ;;		 -> Fil(546), pb$fp(3), 
  5037 ;;  buff            2   25[BANK1 ] PTR const void 
  5038 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  5039 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  5040 ;;  btw             2   27[BANK1 ] unsigned int 
  5041 ;;  bw              2   29[BANK1 ] PTR unsigned int 
  5042 ;;		 -> bw(2), putc_flush@nw(2), putc_bfd@n(2), 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  clst            4   58[BANK1 ] unsigned long 
  5045 ;;  sect            4   54[BANK1 ] unsigned long 
  5046 ;;  fs              2   64[BANK1 ] PTR struct .
  5047 ;;		 -> FatFs(563), NULL(0), 
  5048 ;;  wcnt            2   62[BANK1 ] unsigned int 
  5049 ;;  cc              2   52[BANK1 ] unsigned int 
  5050 ;;  csect           2   50[BANK1 ] unsigned int 
  5051 ;;  wbuff           2   47[BANK1 ] PTR const unsigned char 
  5052 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  5053 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  5054 ;;  res             1   49[BANK1 ] enum E68
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      enum E68
  5057 ;; Registers used:
  5058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:       43 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 14
  5071 ;; This function calls:
  5072 ;;		_clst2sect
  5073 ;;		_create_chain
  5074 ;;		_disk_read
  5075 ;;		_disk_write
  5076 ;;		_mem_cpy
  5077 ;;		_validate
  5078 ;; This function is called by:
  5079 ;;		_main
  5080 ;;		_send_status_ok
  5081 ;;		_putc_bfd
  5082 ;;		_putc_flush
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text17
  5087   000ED2                     __ptext17:
  5088                           	callstack 0
  5089   000ED2                     _f_write:
  5090                           	callstack 15
  5091   000ED2                     
  5092                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  5093   000ED2  C119  F12F         	movff	f_write@buff,f_write@wbuff
  5094   000ED6  C11A  F130         	movff	f_write@buff+1,f_write@wbuff+1
  5095   000EDA                     
  5096                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  5097   000EDA  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  5098   000EE0  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  5099   000EE6  6ADE               	clrf	postinc2,c
  5100   000EE8  6ADD               	clrf	postdec2,c
  5101   000EEA                     
  5102                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  5103   000EEA  C117  F062         	movff	f_write@fp,validate@obj
  5104   000EEE  C118  F063         	movff	f_write@fp+1,validate@obj+1
  5105   000EF2  0E40               	movlw	low f_write@fs
  5106   000EF4  0100               	movlb	0	; () banked
  5107   000EF6  6F64               	movwf	validate@rfs& (0+255),b
  5108   000EF8  0E01               	movlw	high f_write@fs
  5109   000EFA  6F65               	movwf	(validate@rfs+1)& (0+255),b
  5110   000EFC  EC4F  F040         	call	_validate	;wreg free
  5111   000F00  0101               	movlb	1	; () banked
  5112   000F02  6F31               	movwf	f_write@res& (0+255),b
  5113   000F04                     
  5114                           ; BSR set to: 1
  5115                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  5116   000F04  5131               	movf	f_write@res& (0+255),w,b
  5117   000F06  A4D8               	btfss	status,2,c
  5118   000F08  EF88  F007         	goto	u21321
  5119   000F0C  EF8A  F007         	goto	u21320
  5120   000F10                     u21321:
  5121   000F10  EF9A  F007         	goto	l17194
  5122   000F14                     u21320:
  5123   000F14                     
  5124                           ; BSR set to: 1
  5125   000F14  EE20 F00F          	lfsr	2,15
  5126   000F18  5117               	movf	f_write@fp& (0+255),w,b
  5127   000F1A  26D9               	addwf	fsr2l,f,c
  5128   000F1C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5129   000F1E  22DA               	addwfc	fsr2h,f,c
  5130   000F20  50DF               	movf	indf2,w,c
  5131   000F22  6F31               	movwf	f_write@res& (0+255),b
  5132   000F24  5131               	movf	f_write@res& (0+255),w,b
  5133   000F26  B4D8               	btfsc	status,2,c
  5134   000F28  EF98  F007         	goto	u21331
  5135   000F2C  EF9A  F007         	goto	u21330
  5136   000F30                     u21331:
  5137   000F30  EF9D  F007         	goto	l17198
  5138   000F34                     u21330:
  5139   000F34                     l17194:
  5140                           
  5141                           ; BSR set to: 1
  5142   000F34  5131               	movf	f_write@res& (0+255),w,b
  5143   000F36  EF91  F00B         	goto	l1355
  5144   000F3A                     l17198:
  5145                           
  5146                           ; BSR set to: 1
  5147                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  5148   000F3A  EE20 F00E          	lfsr	2,14
  5149   000F3E  5117               	movf	f_write@fp& (0+255),w,b
  5150   000F40  26D9               	addwf	fsr2l,f,c
  5151   000F42  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5152   000F44  22DA               	addwfc	fsr2h,f,c
  5153   000F46  B2DF               	btfsc	indf2,1,c
  5154   000F48  EFA8  F007         	goto	u21341
  5155   000F4C  EFAA  F007         	goto	u21340
  5156   000F50                     u21341:
  5157   000F50  EFAD  F007         	goto	l17206
  5158   000F54                     u21340:
  5159   000F54                     
  5160                           ; BSR set to: 1
  5161   000F54  0E07               	movlw	7
  5162   000F56  EF91  F00B         	goto	l1355
  5163   000F5A                     l17206:
  5164                           
  5165                           ; BSR set to: 1
  5166   000F5A  EE20 F010          	lfsr	2,16
  5167   000F5E  5117               	movf	f_write@fp& (0+255),w,b
  5168   000F60  26D9               	addwf	fsr2l,f,c
  5169   000F62  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5170   000F64  22DA               	addwfc	fsr2h,f,c
  5171   000F66  EE10 F010          	lfsr	1,16
  5172   000F6A  5117               	movf	f_write@fp& (0+255),w,b
  5173   000F6C  26E1               	addwf	fsr1l,f,c
  5174   000F6E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5175   000F70  22E2               	addwfc	fsr1h,f,c
  5176   000F72  006F FF98  F123    	movff	postinc1,??_f_write+4
  5177   000F78  006F FF98  F124    	movff	postinc1,??_f_write+5
  5178   000F7E  006F FF98  F125    	movff	postinc1,??_f_write+6
  5179   000F84  006F FF98  F126    	movff	postinc1,??_f_write+7
  5180   000F8A  511B               	movf	f_write@btw& (0+255),w,b
  5181   000F8C  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5182   000F8E  6F27               	movwf	(??_f_write+8)& (0+255),b
  5183   000F90  511C               	movf	(f_write@btw+1)& (0+255),w,b
  5184   000F92  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5185   000F94  6F28               	movwf	(??_f_write+9)& (0+255),b
  5186   000F96  0E00               	movlw	0
  5187   000F98  2125               	addwfc	(??_f_write+6)& (0+255),w,b
  5188   000F9A  6F29               	movwf	(??_f_write+10)& (0+255),b
  5189   000F9C  0E00               	movlw	0
  5190   000F9E  2126               	addwfc	(??_f_write+7)& (0+255),w,b
  5191   000FA0  6F2A               	movwf	(??_f_write+11)& (0+255),b
  5192   000FA2  50DE               	movf	postinc2,w,c
  5193   000FA4  5D27               	subwf	(??_f_write+8)& (0+255),w,b
  5194   000FA6  50DE               	movf	postinc2,w,c
  5195   000FA8  5928               	subwfb	(??_f_write+9)& (0+255),w,b
  5196   000FAA  50DE               	movf	postinc2,w,c
  5197   000FAC  5929               	subwfb	(??_f_write+10)& (0+255),w,b
  5198   000FAE  50DE               	movf	postinc2,w,c
  5199   000FB0  592A               	subwfb	(??_f_write+11)& (0+255),w,b
  5200   000FB2  B0D8               	btfsc	status,0,c
  5201   000FB4  EFDE  F007         	goto	u21351
  5202   000FB8  EFE0  F007         	goto	u21350
  5203   000FBC                     u21351:
  5204   000FBC  EF7F  F00B         	goto	l17326
  5205   000FC0                     u21350:
  5206   000FC0                     
  5207                           ; BSR set to: 1
  5208                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  5209   000FC0  EE20 F010          	lfsr	2,16
  5210   000FC4  5117               	movf	f_write@fp& (0+255),w,b
  5211   000FC6  26D9               	addwf	fsr2l,f,c
  5212   000FC8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5213   000FCA  22DA               	addwfc	fsr2h,f,c
  5214   000FCC  006F FF78  F11F    	movff	postinc2,??_f_write
  5215   000FD2  006F FF74  F120    	movff	postdec2,??_f_write+1
  5216   000FD8  1D1F               	comf	??_f_write& (0+255),w,b
  5217   000FDA  6F1B               	movwf	f_write@btw& (0+255),b
  5218   000FDC  1D20               	comf	(??_f_write+1)& (0+255),w,b
  5219   000FDE  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  5220   000FE0  EF7F  F00B         	goto	l17326
  5221   000FE4                     l17210:
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  5225   000FE4  EE20 F010          	lfsr	2,16
  5226   000FE8  5117               	movf	f_write@fp& (0+255),w,b
  5227   000FEA  26D9               	addwf	fsr2l,f,c
  5228   000FEC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5229   000FEE  22DA               	addwfc	fsr2h,f,c
  5230   000FF0  0EFF               	movlw	255
  5231   000FF2  14DE               	andwf	postinc2,w,c
  5232   000FF4  6F1F               	movwf	??_f_write& (0+255),b
  5233   000FF6  0E01               	movlw	1
  5234   000FF8  14DE               	andwf	postinc2,w,c
  5235   000FFA  6F20               	movwf	(??_f_write+1)& (0+255),b
  5236   000FFC  0E00               	movlw	0
  5237   000FFE  14DE               	andwf	postinc2,w,c
  5238   001000  6F21               	movwf	(??_f_write+2)& (0+255),b
  5239   001002  0E00               	movlw	0
  5240   001004  14DE               	andwf	postinc2,w,c
  5241   001006  6F22               	movwf	(??_f_write+3)& (0+255),b
  5242   001008  511F               	movf	??_f_write& (0+255),w,b
  5243   00100A  1120               	iorwf	(??_f_write+1)& (0+255),w,b
  5244   00100C  1121               	iorwf	(??_f_write+2)& (0+255),w,b
  5245   00100E  1122               	iorwf	(??_f_write+3)& (0+255),w,b
  5246   001010  A4D8               	btfss	status,2,c
  5247   001012  EF0D  F008         	goto	u21361
  5248   001016  EF0F  F008         	goto	u21360
  5249   00101A                     u21361:
  5250   00101A  EFB0  F00A         	goto	l1362
  5251   00101E                     u21360:
  5252   00101E                     
  5253                           ; BSR set to: 1
  5254                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  5255   00101E  EE20 F010          	lfsr	2,16
  5256   001022  5117               	movf	f_write@fp& (0+255),w,b
  5257   001024  26D9               	addwf	fsr2l,f,c
  5258   001026  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5259   001028  22DA               	addwfc	fsr2h,f,c
  5260   00102A  006F FF78  F11F    	movff	postinc2,??_f_write
  5261   001030  006F FF78  F120    	movff	postinc2,??_f_write+1
  5262   001036  006F FF78  F121    	movff	postinc2,??_f_write+2
  5263   00103C  006F FF78  F122    	movff	postinc2,??_f_write+3
  5264   001042  0E0A               	movlw	10
  5265   001044  EF29  F008         	goto	u21370
  5266   001048                     u21375:
  5267   001048  90D8               	bcf	status,0,c
  5268   00104A  3322               	rrcf	(??_f_write+3)& (0+255),f,b
  5269   00104C  3321               	rrcf	(??_f_write+2)& (0+255),f,b
  5270   00104E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  5271   001050  331F               	rrcf	??_f_write& (0+255),f,b
  5272   001052                     u21370:
  5273   001052  2EE8               	decfsz	wreg,f,c
  5274   001054  EF24  F008         	goto	u21375
  5275   001058  EE20 F009          	lfsr	2,9
  5276   00105C  5140               	movf	f_write@fs& (0+255),w,b
  5277   00105E  26D9               	addwf	fsr2l,f,c
  5278   001060  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5279   001062  22DA               	addwfc	fsr2h,f,c
  5280   001064  006F FF78  F123    	movff	postinc2,??_f_write+4
  5281   00106A  006F FF74  F124    	movff	postdec2,??_f_write+5
  5282   001070  0EFF               	movlw	255
  5283   001072  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5284   001074  6F25               	movwf	(??_f_write+6)& (0+255),b
  5285   001076  0EFF               	movlw	255
  5286   001078  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5287   00107A  6F26               	movwf	(??_f_write+7)& (0+255),b
  5288   00107C  511F               	movf	??_f_write& (0+255),w,b
  5289   00107E  1525               	andwf	(??_f_write+6)& (0+255),w,b
  5290   001080  6F32               	movwf	f_write@csect& (0+255),b
  5291   001082  5120               	movf	(??_f_write+1)& (0+255),w,b
  5292   001084  1526               	andwf	(??_f_write+7)& (0+255),w,b
  5293   001086  6F33               	movwf	(f_write@csect+1)& (0+255),b
  5294   001088                     
  5295                           ; BSR set to: 1
  5296                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  5297   001088  5132               	movf	f_write@csect& (0+255),w,b
  5298   00108A  1133               	iorwf	(f_write@csect+1)& (0+255),w,b
  5299   00108C  A4D8               	btfss	status,2,c
  5300   00108E  EF4B  F008         	goto	u21381
  5301   001092  EF4D  F008         	goto	u21380
  5302   001096                     u21381:
  5303   001096  EF26  F009         	goto	l1363
  5304   00109A                     u21380:
  5305   00109A                     
  5306                           ; BSR set to: 1
  5307                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  5308   00109A  EE20 F010          	lfsr	2,16
  5309   00109E  5117               	movf	f_write@fp& (0+255),w,b
  5310   0010A0  26D9               	addwf	fsr2l,f,c
  5311   0010A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5312   0010A4  22DA               	addwfc	fsr2h,f,c
  5313   0010A6  50DE               	movf	postinc2,w,c
  5314   0010A8  10DE               	iorwf	postinc2,w,c
  5315   0010AA  10DE               	iorwf	postinc2,w,c
  5316   0010AC  10DE               	iorwf	postinc2,w,c
  5317   0010AE  A4D8               	btfss	status,2,c
  5318   0010B0  EF5C  F008         	goto	u21391
  5319   0010B4  EF5E  F008         	goto	u21390
  5320   0010B8                     u21391:
  5321   0010B8  EF94  F008         	goto	l17224
  5322   0010BC                     u21390:
  5323   0010BC                     
  5324                           ; BSR set to: 1
  5325                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  5326   0010BC  EE20 F006          	lfsr	2,6
  5327   0010C0  5117               	movf	f_write@fp& (0+255),w,b
  5328   0010C2  26D9               	addwf	fsr2l,f,c
  5329   0010C4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5330   0010C6  22DA               	addwfc	fsr2h,f,c
  5331   0010C8  006F FF78  F13A    	movff	postinc2,f_write@clst
  5332   0010CE  006F FF78  F13B    	movff	postinc2,f_write@clst+1
  5333   0010D4  006F FF78  F13C    	movff	postinc2,f_write@clst+2
  5334   0010DA  006F FF78  F13D    	movff	postinc2,f_write@clst+3
  5335   0010E0                     
  5336                           ; BSR set to: 1
  5337                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  5338   0010E0  513A               	movf	f_write@clst& (0+255),w,b
  5339   0010E2  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5340   0010E4  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5341   0010E6  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5342   0010E8  A4D8               	btfss	status,2,c
  5343   0010EA  EF79  F008         	goto	u21401
  5344   0010EE  EF7B  F008         	goto	u21400
  5345   0010F2                     u21401:
  5346   0010F2  EFB4  F008         	goto	l17226
  5347   0010F6                     u21400:
  5348   0010F6                     
  5349                           ; BSR set to: 1
  5350                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  5351   0010F6  C117  F0F4         	movff	f_write@fp,create_chain@obj
  5352   0010FA  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  5353   0010FE  0E00               	movlw	0
  5354   001100  0100               	movlb	0	; () banked
  5355   001102  6FF6               	movwf	create_chain@clst& (0+255),b
  5356   001104  0E00               	movlw	0
  5357   001106  6FF7               	movwf	(create_chain@clst+1)& (0+255),b
  5358   001108  0E00               	movlw	0
  5359   00110A  6FF8               	movwf	(create_chain@clst+2)& (0+255),b
  5360   00110C  0E00               	movlw	0
  5361   00110E  6FF9               	movwf	(create_chain@clst+3)& (0+255),b
  5362   001110  ECFA  F016         	call	_create_chain	;wreg free
  5363   001114  C0F4  F13A         	movff	?_create_chain,f_write@clst
  5364   001118  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  5365   00111C  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  5366   001120  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  5367   001124  EFB4  F008         	goto	l17226
  5368   001128                     l17224:
  5369                           
  5370                           ; BSR set to: 1
  5371                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  5372   001128  C117  F0F4         	movff	f_write@fp,create_chain@obj
  5373   00112C  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  5374   001130  EE20 F014          	lfsr	2,20
  5375   001134  5117               	movf	f_write@fp& (0+255),w,b
  5376   001136  26D9               	addwf	fsr2l,f,c
  5377   001138  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5378   00113A  22DA               	addwfc	fsr2h,f,c
  5379   00113C  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  5380   001142  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  5381   001148  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  5382   00114E  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  5383   001154  ECFA  F016         	call	_create_chain	;wreg free
  5384   001158  C0F4  F13A         	movff	?_create_chain,f_write@clst
  5385   00115C  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  5386   001160  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  5387   001164  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  5388   001168                     l17226:
  5389                           
  5390                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  5391   001168  0101               	movlb	1	; () banked
  5392   00116A  513A               	movf	f_write@clst& (0+255),w,b
  5393   00116C  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5394   00116E  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5395   001170  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5396   001172  A4D8               	btfss	status,2,c
  5397   001174  EFBE  F008         	goto	u21411
  5398   001178  EFC0  F008         	goto	u21410
  5399   00117C                     u21411:
  5400   00117C  EFC2  F008         	goto	l17230
  5401   001180                     u21410:
  5402   001180  EF88  F00B         	goto	l17328
  5403   001184                     l17230:
  5404                           
  5405                           ; BSR set to: 1
  5406                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  5407   001184  053A               	decf	f_write@clst& (0+255),w,b
  5408   001186  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5409   001188  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5410   00118A  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5411   00118C  A4D8               	btfss	status,2,c
  5412   00118E  EFCB  F008         	goto	u21421
  5413   001192  EFCD  F008         	goto	u21420
  5414   001196                     u21421:
  5415   001196  EFD8  F008         	goto	l17238
  5416   00119A                     u21420:
  5417   00119A                     
  5418                           ; BSR set to: 1
  5419   00119A  EE20 F00F          	lfsr	2,15
  5420   00119E  5117               	movf	f_write@fp& (0+255),w,b
  5421   0011A0  26D9               	addwf	fsr2l,f,c
  5422   0011A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5423   0011A4  22DA               	addwfc	fsr2h,f,c
  5424   0011A6  0E02               	movlw	2
  5425   0011A8  6EDF               	movwf	indf2,c
  5426   0011AA                     l17234:
  5427                           
  5428                           ; BSR set to: 1
  5429   0011AA  0E02               	movlw	2
  5430   0011AC  EF91  F00B         	goto	l1355
  5431   0011B0                     l17238:
  5432                           
  5433                           ; BSR set to: 1
  5434                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  5435   0011B0  293A               	incf	f_write@clst& (0+255),w,b
  5436   0011B2  E10A               	bnz	u21431
  5437   0011B4  293B               	incf	(f_write@clst+1)& (0+255),w,b
  5438   0011B6  E108               	bnz	u21431
  5439   0011B8  293C               	incf	(f_write@clst+2)& (0+255),w,b
  5440   0011BA  E106               	bnz	u21431
  5441   0011BC  293D               	incf	(f_write@clst+3)& (0+255),w,b
  5442   0011BE  A4D8               	btfss	status,2,c
  5443   0011C0  EFE4  F008         	goto	u21431
  5444   0011C4  EFE6  F008         	goto	u21430
  5445   0011C8                     u21431:
  5446   0011C8  EFF1  F008         	goto	l17246
  5447   0011CC                     u21430:
  5448   0011CC                     
  5449                           ; BSR set to: 1
  5450   0011CC  EE20 F00F          	lfsr	2,15
  5451   0011D0  5117               	movf	f_write@fp& (0+255),w,b
  5452   0011D2  26D9               	addwf	fsr2l,f,c
  5453   0011D4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5454   0011D6  22DA               	addwfc	fsr2h,f,c
  5455   0011D8  0E01               	movlw	1
  5456   0011DA  6EDF               	movwf	indf2,c
  5457   0011DC                     l17242:
  5458                           
  5459                           ; BSR set to: 1
  5460   0011DC  0E01               	movlw	1
  5461   0011DE  EF91  F00B         	goto	l1355
  5462   0011E2                     l17246:
  5463                           
  5464                           ; BSR set to: 1
  5465                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  5466   0011E2  EE20 F014          	lfsr	2,20
  5467   0011E6  5117               	movf	f_write@fp& (0+255),w,b
  5468   0011E8  26D9               	addwf	fsr2l,f,c
  5469   0011EA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5470   0011EC  22DA               	addwfc	fsr2h,f,c
  5471   0011EE  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  5472   0011F4  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  5473   0011FA  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  5474   001200  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  5475                           
  5476                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  5477   001206  EE20 F006          	lfsr	2,6
  5478   00120A  5117               	movf	f_write@fp& (0+255),w,b
  5479   00120C  26D9               	addwf	fsr2l,f,c
  5480   00120E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5481   001210  22DA               	addwfc	fsr2h,f,c
  5482   001212  50DE               	movf	postinc2,w,c
  5483   001214  10DE               	iorwf	postinc2,w,c
  5484   001216  10DE               	iorwf	postinc2,w,c
  5485   001218  10DE               	iorwf	postinc2,w,c
  5486   00121A  A4D8               	btfss	status,2,c
  5487   00121C  EF12  F009         	goto	u21441
  5488   001220  EF14  F009         	goto	u21440
  5489   001224                     u21441:
  5490   001224  EF26  F009         	goto	l1363
  5491   001228                     u21440:
  5492   001228                     
  5493                           ; BSR set to: 1
  5494   001228  EE20 F006          	lfsr	2,6
  5495   00122C  5117               	movf	f_write@fp& (0+255),w,b
  5496   00122E  26D9               	addwf	fsr2l,f,c
  5497   001230  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5498   001232  22DA               	addwfc	fsr2h,f,c
  5499   001234  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  5500   00123A  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  5501   001240  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  5502   001246  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  5503   00124C                     l1363:
  5504                           
  5505                           ; BSR set to: 1
  5506                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  5507   00124C  EE20 F00E          	lfsr	2,14
  5508   001250  5117               	movf	f_write@fp& (0+255),w,b
  5509   001252  26D9               	addwf	fsr2l,f,c
  5510   001254  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5511   001256  22DA               	addwfc	fsr2h,f,c
  5512   001258  AEDF               	btfss	indf2,7,c
  5513   00125A  EF31  F009         	goto	u21451
  5514   00125E  EF33  F009         	goto	u21450
  5515   001262                     u21451:
  5516   001262  EF7A  F009         	goto	l17260
  5517   001266                     u21450:
  5518   001266                     
  5519                           ; BSR set to: 1
  5520                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  5521   001266  0E22               	movlw	34
  5522   001268  2517               	addwf	f_write@fp& (0+255),w,b
  5523   00126A  0100               	movlb	0	; () banked
  5524   00126C  6FAB               	movwf	disk_write@buff& (0+255),b
  5525   00126E  0E00               	movlw	0
  5526   001270  0101               	movlb	1	; () banked
  5527   001272  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5528   001274  0100               	movlb	0	; () banked
  5529   001276  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
  5530   001278  0101               	movlb	1	; () banked
  5531   00127A  EE20 F018          	lfsr	2,24
  5532   00127E  5117               	movf	f_write@fp& (0+255),w,b
  5533   001280  26D9               	addwf	fsr2l,f,c
  5534   001282  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5535   001284  22DA               	addwfc	fsr2h,f,c
  5536   001286  006F FF78  F0AD    	movff	postinc2,disk_write@sector
  5537   00128C  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
  5538   001292  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
  5539   001298  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
  5540   00129E  0E00               	movlw	0
  5541   0012A0  0100               	movlb	0	; () banked
  5542   0012A2  6FB2               	movwf	(disk_write@count+1)& (0+255),b
  5543   0012A4  0E01               	movlw	1
  5544   0012A6  6FB1               	movwf	disk_write@count& (0+255),b
  5545   0012A8  0101               	movlb	1	; () banked
  5546   0012AA  EE20 F001          	lfsr	2,1
  5547   0012AE  5140               	movf	f_write@fs& (0+255),w,b
  5548   0012B0  26D9               	addwf	fsr2l,f,c
  5549   0012B2  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5550   0012B4  22DA               	addwfc	fsr2h,f,c
  5551   0012B6  50DF               	movf	indf2,w,c
  5552   0012B8  ECF2  F04C         	call	_disk_write
  5553   0012BC  0900               	iorlw	0
  5554   0012BE  B4D8               	btfsc	status,2,c
  5555   0012C0  EF64  F009         	goto	u21461
  5556   0012C4  EF66  F009         	goto	u21460
  5557   0012C8                     u21461:
  5558   0012C8  EF71  F009         	goto	l17258
  5559   0012CC                     u21460:
  5560   0012CC  0101               	movlb	1	; () banked
  5561   0012CE  EE20 F00F          	lfsr	2,15
  5562   0012D2  5117               	movf	f_write@fp& (0+255),w,b
  5563   0012D4  26D9               	addwf	fsr2l,f,c
  5564   0012D6  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5565   0012D8  22DA               	addwfc	fsr2h,f,c
  5566   0012DA  0E01               	movlw	1
  5567   0012DC  6EDF               	movwf	indf2,c
  5568   0012DE  EFEE  F008         	goto	l17242
  5569   0012E2                     l17258:
  5570                           
  5571                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  5572   0012E2  0101               	movlb	1	; () banked
  5573   0012E4  EE20 F00E          	lfsr	2,14
  5574   0012E8  5117               	movf	f_write@fp& (0+255),w,b
  5575   0012EA  26D9               	addwf	fsr2l,f,c
  5576   0012EC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5577   0012EE  22DA               	addwfc	fsr2h,f,c
  5578   0012F0  0E7F               	movlw	127
  5579   0012F2  16DF               	andwf	indf2,f,c
  5580   0012F4                     l17260:
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  5584   0012F4  C140  F06C         	movff	f_write@fs,clst2sect@fs
  5585   0012F8  C141  F06D         	movff	f_write@fs+1,clst2sect@fs+1
  5586   0012FC  EE20 F014          	lfsr	2,20
  5587   001300  5117               	movf	f_write@fp& (0+255),w,b
  5588   001302  26D9               	addwf	fsr2l,f,c
  5589   001304  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5590   001306  22DA               	addwfc	fsr2h,f,c
  5591   001308  006F FF78  F06E    	movff	postinc2,clst2sect@clst
  5592   00130E  006F FF78  F06F    	movff	postinc2,clst2sect@clst+1
  5593   001314  006F FF78  F070    	movff	postinc2,clst2sect@clst+2
  5594   00131A  006F FF78  F071    	movff	postinc2,clst2sect@clst+3
  5595   001320  EC41  F046         	call	_clst2sect	;wreg free
  5596   001324  C06C  F136         	movff	?_clst2sect,f_write@sect
  5597   001328  C06D  F137         	movff	?_clst2sect+1,f_write@sect+1
  5598   00132C  C06E  F138         	movff	?_clst2sect+2,f_write@sect+2
  5599   001330  C06F  F139         	movff	?_clst2sect+3,f_write@sect+3
  5600   001334                     
  5601                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  5602   001334  0101               	movlb	1	; () banked
  5603   001336  5136               	movf	f_write@sect& (0+255),w,b
  5604   001338  1137               	iorwf	(f_write@sect+1)& (0+255),w,b
  5605   00133A  1138               	iorwf	(f_write@sect+2)& (0+255),w,b
  5606   00133C  1139               	iorwf	(f_write@sect+3)& (0+255),w,b
  5607   00133E  A4D8               	btfss	status,2,c
  5608   001340  EFA4  F009         	goto	u21471
  5609   001344  EFA6  F009         	goto	u21470
  5610   001348                     u21471:
  5611   001348  EFB0  F009         	goto	l17270
  5612   00134C                     u21470:
  5613   00134C                     
  5614                           ; BSR set to: 1
  5615   00134C  EE20 F00F          	lfsr	2,15
  5616   001350  5117               	movf	f_write@fp& (0+255),w,b
  5617   001352  26D9               	addwf	fsr2l,f,c
  5618   001354  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5619   001356  22DA               	addwfc	fsr2h,f,c
  5620   001358  0E02               	movlw	2
  5621   00135A  6EDF               	movwf	indf2,c
  5622   00135C  EFD5  F008         	goto	l17234
  5623   001360                     l17270:
  5624                           
  5625                           ; BSR set to: 1
  5626                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  5627   001360  5132               	movf	f_write@csect& (0+255),w,b
  5628   001362  2736               	addwf	f_write@sect& (0+255),f,b
  5629   001364  5133               	movf	(f_write@csect+1)& (0+255),w,b
  5630   001366  2337               	addwfc	(f_write@sect+1)& (0+255),f,b
  5631   001368  0E00               	movlw	0
  5632   00136A  2338               	addwfc	(f_write@sect+2)& (0+255),f,b
  5633   00136C  0E00               	movlw	0
  5634   00136E  2339               	addwfc	(f_write@sect+3)& (0+255),f,b
  5635   001370                     
  5636                           ; BSR set to: 1
  5637                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  5638   001370  C11B  F11F         	movff	f_write@btw,??_f_write
  5639   001374  C11C  F120         	movff	f_write@btw+1,??_f_write+1
  5640   001378  0E09               	movlw	9
  5641   00137A  6F21               	movwf	(??_f_write+2)& (0+255),b
  5642   00137C                     u21485:
  5643   00137C  90D8               	bcf	status,0,c
  5644   00137E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  5645   001380  331F               	rrcf	??_f_write& (0+255),f,b
  5646   001382  2F21               	decfsz	(??_f_write+2)& (0+255),f,b
  5647   001384  EFBE  F009         	goto	u21485
  5648   001388  C11F  F134         	movff	??_f_write,f_write@cc
  5649   00138C  C120  F135         	movff	??_f_write+1,f_write@cc+1
  5650   001390                     
  5651                           ; BSR set to: 1
  5652                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  5653   001390  5134               	movf	f_write@cc& (0+255),w,b
  5654   001392  1135               	iorwf	(f_write@cc+1)& (0+255),w,b
  5655   001394  B4D8               	btfsc	status,2,c
  5656   001396  EFCF  F009         	goto	u21491
  5657   00139A  EFD1  F009         	goto	u21490
  5658   00139E                     u21491:
  5659   00139E  EF38  F00A         	goto	l17290
  5660   0013A2                     u21490:
  5661   0013A2                     
  5662                           ; BSR set to: 1
  5663                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  5664   0013A2  5134               	movf	f_write@cc& (0+255),w,b
  5665   0013A4  2532               	addwf	f_write@csect& (0+255),w,b
  5666   0013A6  6F1F               	movwf	??_f_write& (0+255),b
  5667   0013A8  5135               	movf	(f_write@cc+1)& (0+255),w,b
  5668   0013AA  2133               	addwfc	(f_write@csect+1)& (0+255),w,b
  5669   0013AC  6F20               	movwf	(??_f_write+1)& (0+255),b
  5670   0013AE  EE20 F009          	lfsr	2,9
  5671   0013B2  5140               	movf	f_write@fs& (0+255),w,b
  5672   0013B4  26D9               	addwf	fsr2l,f,c
  5673   0013B6  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5674   0013B8  22DA               	addwfc	fsr2h,f,c
  5675   0013BA  511F               	movf	??_f_write& (0+255),w,b
  5676   0013BC  5CDE               	subwf	postinc2,w,c
  5677   0013BE  5120               	movf	(??_f_write+1)& (0+255),w,b
  5678   0013C0  58DE               	subwfb	postinc2,w,c
  5679   0013C2  B0D8               	btfsc	status,0,c
  5680   0013C4  EFE6  F009         	goto	u21501
  5681   0013C8  EFE8  F009         	goto	u21500
  5682   0013CC                     u21501:
  5683   0013CC  EFFA  F009         	goto	l17280
  5684   0013D0                     u21500:
  5685   0013D0                     
  5686                           ; BSR set to: 1
  5687                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  5688   0013D0  EE20 F009          	lfsr	2,9
  5689   0013D4  5140               	movf	f_write@fs& (0+255),w,b
  5690   0013D6  26D9               	addwf	fsr2l,f,c
  5691   0013D8  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5692   0013DA  22DA               	addwfc	fsr2h,f,c
  5693   0013DC  006F FF78  F11F    	movff	postinc2,??_f_write
  5694   0013E2  006F FF74  F120    	movff	postdec2,??_f_write+1
  5695   0013E8  5132               	movf	f_write@csect& (0+255),w,b
  5696   0013EA  5D1F               	subwf	??_f_write& (0+255),w,b
  5697   0013EC  6F34               	movwf	f_write@cc& (0+255),b
  5698   0013EE  5133               	movf	(f_write@csect+1)& (0+255),w,b
  5699   0013F0  5920               	subwfb	(??_f_write+1)& (0+255),w,b
  5700   0013F2  6F35               	movwf	(f_write@cc+1)& (0+255),b
  5701   0013F4                     l17280:
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  5705   0013F4  C12F  F0AB         	movff	f_write@wbuff,disk_write@buff
  5706   0013F8  C130  F0AC         	movff	f_write@wbuff+1,disk_write@buff+1
  5707   0013FC  C136  F0AD         	movff	f_write@sect,disk_write@sector
  5708   001400  C137  F0AE         	movff	f_write@sect+1,disk_write@sector+1
  5709   001404  C138  F0AF         	movff	f_write@sect+2,disk_write@sector+2
  5710   001408  C139  F0B0         	movff	f_write@sect+3,disk_write@sector+3
  5711   00140C  C134  F0B1         	movff	f_write@cc,disk_write@count
  5712   001410  C135  F0B2         	movff	f_write@cc+1,disk_write@count+1
  5713   001414  EE20 F001          	lfsr	2,1
  5714   001418  5140               	movf	f_write@fs& (0+255),w,b
  5715   00141A  26D9               	addwf	fsr2l,f,c
  5716   00141C  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5717   00141E  22DA               	addwfc	fsr2h,f,c
  5718   001420  50DF               	movf	indf2,w,c
  5719   001422  ECF2  F04C         	call	_disk_write
  5720   001426  0900               	iorlw	0
  5721   001428  B4D8               	btfsc	status,2,c
  5722   00142A  EF19  F00A         	goto	u21511
  5723   00142E  EF1B  F00A         	goto	u21510
  5724   001432                     u21511:
  5725   001432  EF26  F00A         	goto	l17288
  5726   001436                     u21510:
  5727   001436  0101               	movlb	1	; () banked
  5728   001438  EE20 F00F          	lfsr	2,15
  5729   00143C  5117               	movf	f_write@fp& (0+255),w,b
  5730   00143E  26D9               	addwf	fsr2l,f,c
  5731   001440  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5732   001442  22DA               	addwfc	fsr2h,f,c
  5733   001444  0E01               	movlw	1
  5734   001446  6EDF               	movwf	indf2,c
  5735   001448  EFEE  F008         	goto	l17242
  5736   00144C                     l17288:
  5737                           
  5738                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  5739   00144C  C134  F11F         	movff	f_write@cc,??_f_write
  5740   001450  C135  F120         	movff	f_write@cc+1,??_f_write+1
  5741   001454  0E09               	movlw	9
  5742   001456                     u21525:
  5743   001456  90D8               	bcf	status,0,c
  5744   001458  0101               	movlb	1	; () banked
  5745   00145A  371F               	rlcf	??_f_write& (0+255),f,b
  5746   00145C  3720               	rlcf	(??_f_write+1)& (0+255),f,b
  5747   00145E  2EE8               	decfsz	wreg,f,c
  5748   001460  EF2B  F00A         	goto	u21525
  5749   001464  C11F  F13E         	movff	??_f_write,f_write@wcnt
  5750   001468  C120  F13F         	movff	??_f_write+1,f_write@wcnt+1
  5751                           
  5752                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  5753   00146C  EF0D  F00B         	goto	l17312
  5754   001470                     l17290:
  5755                           
  5756                           ; BSR set to: 1
  5757                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  5758   001470  EE20 F018          	lfsr	2,24
  5759   001474  5117               	movf	f_write@fp& (0+255),w,b
  5760   001476  26D9               	addwf	fsr2l,f,c
  5761   001478  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5762   00147A  22DA               	addwfc	fsr2h,f,c
  5763   00147C  5136               	movf	f_write@sect& (0+255),w,b
  5764   00147E  18DE               	xorwf	postinc2,w,c
  5765   001480  E10F               	bnz	u21530
  5766   001482  5137               	movf	(f_write@sect+1)& (0+255),w,b
  5767   001484  18DE               	xorwf	postinc2,w,c
  5768   001486  E10C               	bnz	u21530
  5769   001488  5138               	movf	(f_write@sect+2)& (0+255),w,b
  5770   00148A  18DE               	xorwf	postinc2,w,c
  5771   00148C  E109               	bnz	u21530
  5772   00148E  5139               	movf	(f_write@sect+3)& (0+255),w,b
  5773   001490  18DE               	xorwf	postinc2,w,c
  5774   001492  B4D8               	btfsc	status,2,c
  5775   001494  EF4E  F00A         	goto	u21531
  5776   001498  EF50  F00A         	goto	u21530
  5777   00149C                     u21531:
  5778   00149C  EF9D  F00A         	goto	l17302
  5779   0014A0                     u21530:
  5780   0014A0                     
  5781                           ; BSR set to: 1
  5782   0014A0  EE20 F00A          	lfsr	2,10
  5783   0014A4  5117               	movf	f_write@fp& (0+255),w,b
  5784   0014A6  26D9               	addwf	fsr2l,f,c
  5785   0014A8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5786   0014AA  22DA               	addwfc	fsr2h,f,c
  5787   0014AC  EE10 F010          	lfsr	1,16
  5788   0014B0  5117               	movf	f_write@fp& (0+255),w,b
  5789   0014B2  26E1               	addwf	fsr1l,f,c
  5790   0014B4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5791   0014B6  22E2               	addwfc	fsr1h,f,c
  5792   0014B8  50DE               	movf	postinc2,w,c
  5793   0014BA  5CE6               	subwf	postinc1,w,c
  5794   0014BC  50DE               	movf	postinc2,w,c
  5795   0014BE  58E6               	subwfb	postinc1,w,c
  5796   0014C0  50DE               	movf	postinc2,w,c
  5797   0014C2  58E6               	subwfb	postinc1,w,c
  5798   0014C4  50DE               	movf	postinc2,w,c
  5799   0014C6  58E6               	subwfb	postinc1,w,c
  5800   0014C8  B0D8               	btfsc	status,0,c
  5801   0014CA  EF69  F00A         	goto	u21541
  5802   0014CE  EF6B  F00A         	goto	u21540
  5803   0014D2                     u21541:
  5804   0014D2  EF9D  F00A         	goto	l17302
  5805   0014D6                     u21540:
  5806   0014D6                     
  5807                           ; BSR set to: 1
  5808   0014D6  0E22               	movlw	34
  5809   0014D8  2517               	addwf	f_write@fp& (0+255),w,b
  5810   0014DA  0100               	movlb	0	; () banked
  5811   0014DC  6FA8               	movwf	disk_read@buff& (0+255),b
  5812   0014DE  0E00               	movlw	0
  5813   0014E0  0101               	movlb	1	; () banked
  5814   0014E2  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5815   0014E4  0100               	movlb	0	; () banked
  5816   0014E6  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  5817   0014E8  C136  F0AA         	movff	f_write@sect,disk_read@sector
  5818   0014EC  C137  F0AB         	movff	f_write@sect+1,disk_read@sector+1
  5819   0014F0  C138  F0AC         	movff	f_write@sect+2,disk_read@sector+2
  5820   0014F4  C139  F0AD         	movff	f_write@sect+3,disk_read@sector+3
  5821   0014F8  0E00               	movlw	0
  5822   0014FA  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  5823   0014FC  0E01               	movlw	1
  5824   0014FE  6FAE               	movwf	disk_read@count& (0+255),b
  5825   001500  0101               	movlb	1	; () banked
  5826   001502  EE20 F001          	lfsr	2,1
  5827   001506  5140               	movf	f_write@fs& (0+255),w,b
  5828   001508  26D9               	addwf	fsr2l,f,c
  5829   00150A  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5830   00150C  22DA               	addwfc	fsr2h,f,c
  5831   00150E  50DF               	movf	indf2,w,c
  5832   001510  EC26  F04D         	call	_disk_read
  5833   001514  0900               	iorlw	0
  5834   001516  B4D8               	btfsc	status,2,c
  5835   001518  EF90  F00A         	goto	u21551
  5836   00151C  EF92  F00A         	goto	u21550
  5837   001520                     u21551:
  5838   001520  EF9D  F00A         	goto	l17302
  5839   001524                     u21550:
  5840   001524                     
  5841                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  5842   001524  0101               	movlb	1	; () banked
  5843   001526  EE20 F00F          	lfsr	2,15
  5844   00152A  5117               	movf	f_write@fp& (0+255),w,b
  5845   00152C  26D9               	addwf	fsr2l,f,c
  5846   00152E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5847   001530  22DA               	addwfc	fsr2h,f,c
  5848   001532  0E01               	movlw	1
  5849   001534  6EDF               	movwf	indf2,c
  5850   001536  EFEE  F008         	goto	l17242
  5851   00153A                     l17302:
  5852                           
  5853                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  5854   00153A  0101               	movlb	1	; () banked
  5855   00153C  EE20 F018          	lfsr	2,24
  5856   001540  5117               	movf	f_write@fp& (0+255),w,b
  5857   001542  26D9               	addwf	fsr2l,f,c
  5858   001544  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5859   001546  22DA               	addwfc	fsr2h,f,c
  5860   001548  0060  F4DB  FFDE   	movff	f_write@sect,postinc2
  5861   00154E  0060  F4DF  FFDE   	movff	f_write@sect+1,postinc2
  5862   001554  0060  F4E3  FFDE   	movff	f_write@sect+2,postinc2
  5863   00155A  0060  F4E7  FFDE   	movff	f_write@sect+3,postinc2
  5864   001560                     l1362:
  5865                           
  5866                           ; BSR set to: 1
  5867                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  5868   001560  EE20 F010          	lfsr	2,16
  5869   001564  5117               	movf	f_write@fp& (0+255),w,b
  5870   001566  26D9               	addwf	fsr2l,f,c
  5871   001568  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5872   00156A  22DA               	addwfc	fsr2h,f,c
  5873   00156C  006F FF78  F11F    	movff	postinc2,??_f_write
  5874   001572  006F FF74  F120    	movff	postdec2,??_f_write+1
  5875   001578  0EFF               	movlw	255
  5876   00157A  151F               	andwf	??_f_write& (0+255),w,b
  5877   00157C  6F21               	movwf	(??_f_write+2)& (0+255),b
  5878   00157E  0E01               	movlw	1
  5879   001580  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5880   001582  6F22               	movwf	(??_f_write+3)& (0+255),b
  5881   001584  5121               	movf	(??_f_write+2)& (0+255),w,b
  5882   001586  0800               	sublw	0
  5883   001588  6F3E               	movwf	f_write@wcnt& (0+255),b
  5884   00158A  5122               	movf	(??_f_write+3)& (0+255),w,b
  5885   00158C  A0D8               	btfss	status,0,c
  5886   00158E  2AE8               	incf	wreg,f,c
  5887   001590  0802               	sublw	2
  5888   001592  6F3F               	movwf	(f_write@wcnt+1)& (0+255),b
  5889   001594                     
  5890                           ; BSR set to: 1
  5891                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  5892   001594  513E               	movf	f_write@wcnt& (0+255),w,b
  5893   001596  5D1B               	subwf	f_write@btw& (0+255),w,b
  5894   001598  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5895   00159A  591C               	subwfb	(f_write@btw+1)& (0+255),w,b
  5896   00159C  B0D8               	btfsc	status,0,c
  5897   00159E  EFD3  F00A         	goto	u21561
  5898   0015A2  EFD5  F00A         	goto	u21560
  5899   0015A6                     u21561:
  5900   0015A6  EFD9  F00A         	goto	l17308
  5901   0015AA                     u21560:
  5902   0015AA                     
  5903                           ; BSR set to: 1
  5904   0015AA  C11B  F13E         	movff	f_write@btw,f_write@wcnt
  5905   0015AE  C11C  F13F         	movff	f_write@btw+1,f_write@wcnt+1
  5906   0015B2                     l17308:
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  5910   0015B2  EE20 F010          	lfsr	2,16
  5911   0015B6  5117               	movf	f_write@fp& (0+255),w,b
  5912   0015B8  26D9               	addwf	fsr2l,f,c
  5913   0015BA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5914   0015BC  22DA               	addwfc	fsr2h,f,c
  5915   0015BE  006F FF78  F11F    	movff	postinc2,??_f_write
  5916   0015C4  006F FF74  F120    	movff	postdec2,??_f_write+1
  5917   0015CA  0EFF               	movlw	255
  5918   0015CC  151F               	andwf	??_f_write& (0+255),w,b
  5919   0015CE  6F21               	movwf	(??_f_write+2)& (0+255),b
  5920   0015D0  0E01               	movlw	1
  5921   0015D2  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5922   0015D4  6F22               	movwf	(??_f_write+3)& (0+255),b
  5923   0015D6  5121               	movf	(??_f_write+2)& (0+255),w,b
  5924   0015D8  2517               	addwf	f_write@fp& (0+255),w,b
  5925   0015DA  6F23               	movwf	(??_f_write+4)& (0+255),b
  5926   0015DC  5122               	movf	(??_f_write+3)& (0+255),w,b
  5927   0015DE  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5928   0015E0  6F24               	movwf	(??_f_write+5)& (0+255),b
  5929   0015E2  0E22               	movlw	34
  5930   0015E4  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5931   0015E6  0100               	movlb	0	; () banked
  5932   0015E8  6F60               	movwf	mem_cpy@dst& (0+255),b
  5933   0015EA  0E00               	movlw	0
  5934   0015EC  0101               	movlb	1	; () banked
  5935   0015EE  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5936   0015F0  0100               	movlb	0	; () banked
  5937   0015F2  6F61               	movwf	(mem_cpy@dst+1)& (0+255),b
  5938   0015F4  C12F  F062         	movff	f_write@wbuff,mem_cpy@src
  5939   0015F8  C130  F063         	movff	f_write@wbuff+1,mem_cpy@src+1
  5940   0015FC  C13E  F064         	movff	f_write@wcnt,mem_cpy@cnt
  5941   001600  C13F  F065         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  5942   001604  EC22  F04B         	call	_mem_cpy	;wreg free
  5943   001608                     
  5944                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  5945   001608  0101               	movlb	1	; () banked
  5946   00160A  EE20 F00E          	lfsr	2,14
  5947   00160E  5117               	movf	f_write@fp& (0+255),w,b
  5948   001610  26D9               	addwf	fsr2l,f,c
  5949   001612  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5950   001614  22DA               	addwfc	fsr2h,f,c
  5951   001616  0E00               	movlw	0
  5952   001618  8EDB               	bsf	plusw2,7,c
  5953   00161A                     l17312:
  5954                           
  5955                           ; BSR set to: 1
  5956   00161A  513E               	movf	f_write@wcnt& (0+255),w,b
  5957   00161C  5F1B               	subwf	f_write@btw& (0+255),f,b
  5958   00161E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5959   001620  5B1C               	subwfb	(f_write@btw+1)& (0+255),f,b
  5960   001622                     
  5961                           ; BSR set to: 1
  5962   001622  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  5963   001628  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  5964   00162E  513E               	movf	f_write@wcnt& (0+255),w,b
  5965   001630  26DE               	addwf	postinc2,f,c
  5966   001632  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5967   001634  22DD               	addwfc	postdec2,f,c
  5968   001636                     
  5969                           ; BSR set to: 1
  5970   001636  513E               	movf	f_write@wcnt& (0+255),w,b
  5971   001638  272F               	addwf	f_write@wbuff& (0+255),f,b
  5972   00163A  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5973   00163C  2330               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  5974   00163E                     
  5975                           ; BSR set to: 1
  5976   00163E  EE20 F010          	lfsr	2,16
  5977   001642  5117               	movf	f_write@fp& (0+255),w,b
  5978   001644  26D9               	addwf	fsr2l,f,c
  5979   001646  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5980   001648  22DA               	addwfc	fsr2h,f,c
  5981   00164A  513E               	movf	f_write@wcnt& (0+255),w,b
  5982   00164C  26DE               	addwf	postinc2,f,c
  5983   00164E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5984   001650  22DE               	addwfc	postinc2,f,c
  5985   001652  0E00               	movlw	0
  5986   001654  22DE               	addwfc	postinc2,f,c
  5987   001656  22DE               	addwfc	postinc2,f,c
  5988   001658                     
  5989                           ; BSR set to: 1
  5990   001658  EE20 F010          	lfsr	2,16
  5991   00165C  5117               	movf	f_write@fp& (0+255),w,b
  5992   00165E  26D9               	addwf	fsr2l,f,c
  5993   001660  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5994   001662  22DA               	addwfc	fsr2h,f,c
  5995   001664  EE10 F00A          	lfsr	1,10
  5996   001668  5117               	movf	f_write@fp& (0+255),w,b
  5997   00166A  26E1               	addwf	fsr1l,f,c
  5998   00166C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5999   00166E  22E2               	addwfc	fsr1h,f,c
  6000   001670  50DE               	movf	postinc2,w,c
  6001   001672  5CE6               	subwf	postinc1,w,c
  6002   001674  50DE               	movf	postinc2,w,c
  6003   001676  58E6               	subwfb	postinc1,w,c
  6004   001678  50DE               	movf	postinc2,w,c
  6005   00167A  58E6               	subwfb	postinc1,w,c
  6006   00167C  50DE               	movf	postinc2,w,c
  6007   00167E  58E6               	subwfb	postinc1,w,c
  6008   001680  A0D8               	btfss	status,0,c
  6009   001682  EF45  F00B         	goto	u21571
  6010   001686  EF47  F00B         	goto	u21570
  6011   00168A                     u21571:
  6012   00168A  EF5B  F00B         	goto	l17324
  6013   00168E                     u21570:
  6014   00168E                     
  6015                           ; BSR set to: 1
  6016   00168E  EE20 F00A          	lfsr	2,10
  6017   001692  5117               	movf	f_write@fp& (0+255),w,b
  6018   001694  26D9               	addwf	fsr2l,f,c
  6019   001696  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6020   001698  22DA               	addwfc	fsr2h,f,c
  6021   00169A  006F FF78  F12B    	movff	postinc2,_f_write$3415
  6022   0016A0  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  6023   0016A6  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  6024   0016AC  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  6025   0016B2  EF6D  F00B         	goto	l1384
  6026   0016B6                     l17324:
  6027                           
  6028                           ; BSR set to: 1
  6029   0016B6  EE20 F010          	lfsr	2,16
  6030   0016BA  5117               	movf	f_write@fp& (0+255),w,b
  6031   0016BC  26D9               	addwf	fsr2l,f,c
  6032   0016BE  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6033   0016C0  22DA               	addwfc	fsr2h,f,c
  6034   0016C2  006F FF78  F12B    	movff	postinc2,_f_write$3415
  6035   0016C8  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  6036   0016CE  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  6037   0016D4  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  6038   0016DA                     l1384:
  6039                           
  6040                           ; BSR set to: 1
  6041   0016DA  EE20 F00A          	lfsr	2,10
  6042   0016DE  5117               	movf	f_write@fp& (0+255),w,b
  6043   0016E0  26D9               	addwf	fsr2l,f,c
  6044   0016E2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6045   0016E4  22DA               	addwfc	fsr2h,f,c
  6046   0016E6  0060  F4AF  FFDE   	movff	_f_write$3415,postinc2
  6047   0016EC  0060  F4B3  FFDE   	movff	_f_write$3415+1,postinc2
  6048   0016F2  0060  F4B7  FFDE   	movff	_f_write$3415+2,postinc2
  6049   0016F8  0060  F4BB  FFDE   	movff	_f_write$3415+3,postinc2
  6050   0016FE                     l17326:
  6051                           
  6052                           ; BSR set to: 1
  6053   0016FE  511B               	movf	f_write@btw& (0+255),w,b
  6054   001700  111C               	iorwf	(f_write@btw+1)& (0+255),w,b
  6055   001702  A4D8               	btfss	status,2,c
  6056   001704  EF86  F00B         	goto	u21581
  6057   001708  EF88  F00B         	goto	u21580
  6058   00170C                     u21581:
  6059   00170C  EFF2  F007         	goto	l17210
  6060   001710                     u21580:
  6061   001710                     l17328:
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  6065   001710  EE20 F00E          	lfsr	2,14
  6066   001714  5117               	movf	f_write@fp& (0+255),w,b
  6067   001716  26D9               	addwf	fsr2l,f,c
  6068   001718  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6069   00171A  22DA               	addwfc	fsr2h,f,c
  6070   00171C  0E00               	movlw	0
  6071   00171E  8CDB               	bsf	plusw2,6,c
  6072   001720                     
  6073                           ; BSR set to: 1
  6074                           ;mcc_generated_files/fatfs/ff.c: 3921:  return FR_OK;
  6075   001720  0E00               	movlw	0
  6076   001722                     l1355:
  6077                           
  6078                           ; BSR set to: 1
  6079   001722  0012               	return		;funcret
  6080   001724                     __end_of_f_write:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _f_open *****************
  6084 ;; Defined at:
  6085 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  fp              2   65[BANK1 ] PTR struct .
  6088 ;;		 -> Fil(546), 
  6089 ;;  path            2   67[BANK1 ] PTR const unsigned char 
  6090 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  6091 ;;  mode            1   69[BANK1 ] unsigned char 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  dj             40  105[BANK1 ] struct .
  6094 ;;  clst            4   98[BANK1 ] unsigned long 
  6095 ;;  ofs             4   94[BANK1 ] unsigned long 
  6096 ;;  cl              4   90[BANK1 ] unsigned long 
  6097 ;;  bcs             4   86[BANK1 ] unsigned long 
  6098 ;;  sc              4   82[BANK1 ] unsigned long 
  6099 ;;  dw              4   78[BANK1 ] unsigned long 
  6100 ;;  fs              2  102[BANK1 ] PTR struct .
  6101 ;;		 -> FatFs(563), NULL(0), 
  6102 ;;  res             1  104[BANK1 ] enum E68
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      enum E68
  6105 ;; Registers used:
  6106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6112 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;Total ram usage:       80 bytes
  6117 ;; Hardware stack levels used: 1
  6118 ;; Hardware stack levels required when called: 17
  6119 ;; This function calls:
  6120 ;;		_clst2sect
  6121 ;;		_dir_register
  6122 ;;		_disk_read
  6123 ;;		_find_volume
  6124 ;;		_follow_path
  6125 ;;		_get_fat
  6126 ;;		_ld_clust
  6127 ;;		_ld_dword
  6128 ;;		_mem_set
  6129 ;;		_move_window
  6130 ;;		_remove_chain
  6131 ;;		_st_clust
  6132 ;;		_st_dword
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;;		_send_status_ok
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text18
  6140   001F40                     __ptext18:
  6141                           	callstack 0
  6142   001F40                     _f_open:
  6143                           	callstack 12
  6144   001F40                     
  6145                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  6146   001F40  0101               	movlb	1	; () banked
  6147   001F42  5141               	movf	f_open@fp& (0+255),w,b
  6148   001F44  1142               	iorwf	(f_open@fp+1)& (0+255),w,b
  6149   001F46  A4D8               	btfss	status,2,c
  6150   001F48  EFA8  F00F         	goto	u20991
  6151   001F4C  EFAA  F00F         	goto	u20990
  6152   001F50                     u20991:
  6153   001F50  EFAD  F00F         	goto	l17038
  6154   001F54                     u20990:
  6155   001F54                     
  6156                           ; BSR set to: 1
  6157   001F54  0E09               	movlw	9
  6158   001F56  EF96  F013         	goto	l1284
  6159   001F5A                     l17038:
  6160   001F5A                     
  6161                           ; BSR set to: 1
  6162   001F5A  0E3F               	movlw	63
  6163   001F5C  1745               	andwf	f_open@mode& (0+255),f,b
  6164   001F5E                     
  6165                           ; BSR set to: 1
  6166                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  6167   001F5E  0E43               	movlw	low f_open@path
  6168   001F60  0100               	movlb	0	; () banked
  6169   001F62  6FDA               	movwf	find_volume@path& (0+255),b
  6170   001F64  0E01               	movlw	high f_open@path
  6171   001F66  6FDB               	movwf	(find_volume@path+1)& (0+255),b
  6172   001F68  0E66               	movlw	low f_open@fs
  6173   001F6A  6FDC               	movwf	find_volume@rfs& (0+255),b
  6174   001F6C  0E01               	movlw	high f_open@fs
  6175   001F6E  6FDD               	movwf	(find_volume@rfs+1)& (0+255),b
  6176   001F70  C145  F0DE         	movff	f_open@mode,find_volume@mode
  6177   001F74  EC0F  F000         	call	_find_volume	;wreg free
  6178   001F78  0101               	movlb	1	; () banked
  6179   001F7A  6F68               	movwf	f_open@res& (0+255),b
  6180   001F7C                     
  6181                           ; BSR set to: 1
  6182                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  6183   001F7C  5168               	movf	f_open@res& (0+255),w,b
  6184   001F7E  A4D8               	btfss	status,2,c
  6185   001F80  EFC4  F00F         	goto	u21001
  6186   001F84  EFC6  F00F         	goto	u21000
  6187   001F88                     u21001:
  6188   001F88  EF84  F013         	goto	l1289
  6189   001F8C                     u21000:
  6190   001F8C                     
  6191                           ; BSR set to: 1
  6192                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  6193   001F8C  C166  F169         	movff	f_open@fs,f_open@dj
  6194   001F90  C167  F16A         	movff	f_open@fs+1,f_open@dj+1
  6195   001F94                     
  6196                           ; BSR set to: 1
  6197                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  6198   001F94  0E69               	movlw	low f_open@dj
  6199   001F96  6F33               	movwf	follow_path@dp& (0+255),b
  6200   001F98  0E01               	movlw	high f_open@dj
  6201   001F9A  6F34               	movwf	(follow_path@dp+1)& (0+255),b
  6202   001F9C  C143  F135         	movff	f_open@path,follow_path@path
  6203   001FA0  C144  F136         	movff	f_open@path+1,follow_path@path+1
  6204   001FA4  EC05  F031         	call	_follow_path	;wreg free
  6205   001FA8  0101               	movlb	1	; () banked
  6206   001FAA  6F68               	movwf	f_open@res& (0+255),b
  6207   001FAC                     
  6208                           ; BSR set to: 1
  6209                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  6210   001FAC  5168               	movf	f_open@res& (0+255),w,b
  6211   001FAE  A4D8               	btfss	status,2,c
  6212   001FB0  EFDC  F00F         	goto	u21011
  6213   001FB4  EFDE  F00F         	goto	u21010
  6214   001FB8                     u21011:
  6215   001FB8  EFE7  F00F         	goto	l17058
  6216   001FBC                     u21010:
  6217   001FBC                     
  6218                           ; BSR set to: 1
  6219                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  6220   001FBC  AF90               	btfss	(f_open@dj+39)& (0+255),7,b
  6221   001FBE  EFE3  F00F         	goto	u21021
  6222   001FC2  EFE5  F00F         	goto	u21020
  6223   001FC6                     u21021:
  6224   001FC6  EFE7  F00F         	goto	l17058
  6225   001FCA                     u21020:
  6226   001FCA                     
  6227                           ; BSR set to: 1
  6228                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  6229   001FCA  0E06               	movlw	6
  6230   001FCC  6F68               	movwf	f_open@res& (0+255),b
  6231   001FCE                     l17058:
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  6235   001FCE  C145  F146         	movff	f_open@mode,??_f_open
  6236   001FD2  0E1C               	movlw	28
  6237   001FD4  1746               	andwf	??_f_open& (0+255),f,b
  6238   001FD6  B4D8               	btfsc	status,2,c
  6239   001FD8  EFF0  F00F         	goto	u21031
  6240   001FDC  EFF2  F00F         	goto	u21030
  6241   001FE0                     u21031:
  6242   001FE0  EF02  F011         	goto	l17098
  6243   001FE4                     u21030:
  6244   001FE4                     
  6245                           ; BSR set to: 1
  6246                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  6247   001FE4  5168               	movf	f_open@res& (0+255),w,b
  6248   001FE6  B4D8               	btfsc	status,2,c
  6249   001FE8  EFF8  F00F         	goto	u21041
  6250   001FEC  EFFA  F00F         	goto	u21040
  6251   001FF0                     u21041:
  6252   001FF0  EF0E  F010         	goto	l17068
  6253   001FF4                     u21040:
  6254   001FF4                     
  6255                           ; BSR set to: 1
  6256                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  6257   001FF4  0E04               	movlw	4
  6258   001FF6  1968               	xorwf	f_open@res& (0+255),w,b
  6259   001FF8  A4D8               	btfss	status,2,c
  6260   001FFA  EF01  F010         	goto	u21051
  6261   001FFE  EF03  F010         	goto	u21050
  6262   002002                     u21051:
  6263   002002  EF0B  F010         	goto	l17066
  6264   002006                     u21050:
  6265   002006                     
  6266                           ; BSR set to: 1
  6267                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  6268   002006  0E69               	movlw	low f_open@dj
  6269   002008  6F39               	movwf	dir_register@dp& (0+255),b
  6270   00200A  0E01               	movlw	high f_open@dj
  6271   00200C  6F3A               	movwf	(dir_register@dp+1)& (0+255),b
  6272   00200E  EC78  F043         	call	_dir_register	;wreg free
  6273   002012  0101               	movlb	1	; () banked
  6274   002014  6F68               	movwf	f_open@res& (0+255),b
  6275   002016                     l17066:
  6276                           
  6277                           ; BSR set to: 1
  6278                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  6279   002016  8745               	bsf	f_open@mode& (0+255),3,b
  6280                           
  6281                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  6282   002018  EF26  F010         	goto	l1295
  6283   00201C                     l17068:
  6284                           
  6285                           ; BSR set to: 1
  6286                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  6287   00201C  C16D  F146         	movff	f_open@dj+4,??_f_open
  6288   002020  0E11               	movlw	17
  6289   002022  1746               	andwf	??_f_open& (0+255),f,b
  6290   002024  B4D8               	btfsc	status,2,c
  6291   002026  EF17  F010         	goto	u21061
  6292   00202A  EF19  F010         	goto	u21060
  6293   00202E                     u21061:
  6294   00202E  EF1D  F010         	goto	l1296
  6295   002032                     u21060:
  6296   002032                     
  6297                           ; BSR set to: 1
  6298                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  6299   002032  0E07               	movlw	7
  6300   002034  6F68               	movwf	f_open@res& (0+255),b
  6301                           
  6302                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  6303   002036  EF26  F010         	goto	l1295
  6304   00203A                     l1296:
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  6308   00203A  A545               	btfss	f_open@mode& (0+255),2,b
  6309   00203C  EF22  F010         	goto	u21071
  6310   002040  EF24  F010         	goto	u21070
  6311   002044                     u21071:
  6312   002044  EF26  F010         	goto	l1295
  6313   002048                     u21070:
  6314   002048                     
  6315                           ; BSR set to: 1
  6316   002048  0E08               	movlw	8
  6317   00204A  6F68               	movwf	f_open@res& (0+255),b
  6318   00204C                     l1295:
  6319                           
  6320                           ; BSR set to: 1
  6321                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  6322   00204C  5168               	movf	f_open@res& (0+255),w,b
  6323   00204E  A4D8               	btfss	status,2,c
  6324   002050  EF2C  F010         	goto	u21081
  6325   002054  EF2E  F010         	goto	u21080
  6326   002058                     u21081:
  6327   002058  EF25  F011         	goto	l1302
  6328   00205C                     u21080:
  6329   00205C                     
  6330                           ; BSR set to: 1
  6331   00205C  A745               	btfss	f_open@mode& (0+255),3,b
  6332   00205E  EF33  F010         	goto	u21091
  6333   002062  EF35  F010         	goto	u21090
  6334   002066                     u21091:
  6335   002066  EF25  F011         	goto	l1302
  6336   00206A                     u21090:
  6337   00206A                     
  6338                           ; BSR set to: 1
  6339                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  6340   00206A  C166  F067         	movff	f_open@fs,ld_clust@fs
  6341   00206E  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  6342   002072  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  6343   002076  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  6344   00207A  ECD3  F049         	call	_ld_clust	;wreg free
  6345   00207E  C067  F15A         	movff	?_ld_clust,f_open@cl
  6346   002082  C068  F15B         	movff	?_ld_clust+1,f_open@cl+1
  6347   002086  C069  F15C         	movff	?_ld_clust+2,f_open@cl+2
  6348   00208A  C06A  F15D         	movff	?_ld_clust+3,f_open@cl+3
  6349                           
  6350                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2024 - 1980) 
      +                          << 25 | (DWORD)7 << 21 | (DWORD)23 << 16));
  6351   00208E  0E0E               	movlw	14
  6352   002090  0101               	movlb	1	; () banked
  6353   002092  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6354   002094  0100               	movlb	0	; () banked
  6355   002096  6F60               	movwf	st_dword@ptr& (0+255),b
  6356   002098  0E00               	movlw	0
  6357   00209A  0101               	movlb	1	; () banked
  6358   00209C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6359   00209E  0100               	movlb	0	; () banked
  6360   0020A0  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  6361   0020A2  0E00               	movlw	0
  6362   0020A4  6F62               	movwf	st_dword@val& (0+255),b
  6363   0020A6  0E00               	movlw	0
  6364   0020A8  6F63               	movwf	(st_dword@val+1)& (0+255),b
  6365   0020AA  0EF7               	movlw	247
  6366   0020AC  6F64               	movwf	(st_dword@val+2)& (0+255),b
  6367   0020AE  0E58               	movlw	88
  6368   0020B0  6F65               	movwf	(st_dword@val+3)& (0+255),b
  6369   0020B2  EC5C  F04A         	call	_st_dword	;wreg free
  6370   0020B6                     
  6371                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  6372   0020B6  0101               	movlb	1	; () banked
  6373   0020B8  EE20 F00B          	lfsr	2,11
  6374   0020BC  5183               	movf	(f_open@dj+26)& (0+255),w,b
  6375   0020BE  26D9               	addwf	fsr2l,f,c
  6376   0020C0  5184               	movf	(f_open@dj+27)& (0+255),w,b
  6377   0020C2  22DA               	addwfc	fsr2h,f,c
  6378   0020C4  0E20               	movlw	32
  6379   0020C6  6EDF               	movwf	indf2,c
  6380   0020C8                     
  6381                           ; BSR set to: 1
  6382                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  6383   0020C8  C166  F064         	movff	f_open@fs,st_clust@fs
  6384   0020CC  C167  F065         	movff	f_open@fs+1,st_clust@fs+1
  6385   0020D0  C183  F066         	movff	f_open@dj+26,st_clust@dir
  6386   0020D4  C184  F067         	movff	f_open@dj+27,st_clust@dir+1
  6387   0020D8  0E00               	movlw	0
  6388   0020DA  0100               	movlb	0	; () banked
  6389   0020DC  6F68               	movwf	st_clust@cl& (0+255),b
  6390   0020DE  0E00               	movlw	0
  6391   0020E0  6F69               	movwf	(st_clust@cl+1)& (0+255),b
  6392   0020E2  0E00               	movlw	0
  6393   0020E4  6F6A               	movwf	(st_clust@cl+2)& (0+255),b
  6394   0020E6  0E00               	movlw	0
  6395   0020E8  6F6B               	movwf	(st_clust@cl+3)& (0+255),b
  6396   0020EA  EC02  F04F         	call	_st_clust	;wreg free
  6397   0020EE                     
  6398                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  6399   0020EE  0E1C               	movlw	28
  6400   0020F0  0101               	movlb	1	; () banked
  6401   0020F2  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6402   0020F4  0100               	movlb	0	; () banked
  6403   0020F6  6F60               	movwf	st_dword@ptr& (0+255),b
  6404   0020F8  0E00               	movlw	0
  6405   0020FA  0101               	movlb	1	; () banked
  6406   0020FC  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6407   0020FE  0100               	movlb	0	; () banked
  6408   002100  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  6409   002102  0E00               	movlw	0
  6410   002104  6F62               	movwf	st_dword@val& (0+255),b
  6411   002106  0E00               	movlw	0
  6412   002108  6F63               	movwf	(st_dword@val+1)& (0+255),b
  6413   00210A  0E00               	movlw	0
  6414   00210C  6F64               	movwf	(st_dword@val+2)& (0+255),b
  6415   00210E  0E00               	movlw	0
  6416   002110  6F65               	movwf	(st_dword@val+3)& (0+255),b
  6417   002112  EC5C  F04A         	call	_st_dword	;wreg free
  6418   002116                     
  6419                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  6420   002116  0101               	movlb	1	; () banked
  6421   002118  EE20 F003          	lfsr	2,3
  6422   00211C  5166               	movf	f_open@fs& (0+255),w,b
  6423   00211E  26D9               	addwf	fsr2l,f,c
  6424   002120  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6425   002122  22DA               	addwfc	fsr2h,f,c
  6426   002124  0E01               	movlw	1
  6427   002126  6EDF               	movwf	indf2,c
  6428   002128                     
  6429                           ; BSR set to: 1
  6430                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  6431   002128  515A               	movf	f_open@cl& (0+255),w,b
  6432   00212A  115B               	iorwf	(f_open@cl+1)& (0+255),w,b
  6433   00212C  115C               	iorwf	(f_open@cl+2)& (0+255),w,b
  6434   00212E  115D               	iorwf	(f_open@cl+3)& (0+255),w,b
  6435   002130  B4D8               	btfsc	status,2,c
  6436   002132  EF9D  F010         	goto	u21101
  6437   002136  EF9F  F010         	goto	u21100
  6438   00213A                     u21101:
  6439   00213A  EF25  F011         	goto	l1302
  6440   00213E                     u21100:
  6441   00213E                     
  6442                           ; BSR set to: 1
  6443                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  6444   00213E  EE20 F02F          	lfsr	2,47
  6445   002142  5166               	movf	f_open@fs& (0+255),w,b
  6446   002144  26D9               	addwf	fsr2l,f,c
  6447   002146  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6448   002148  22DA               	addwfc	fsr2h,f,c
  6449   00214A  006F FF78  F14E    	movff	postinc2,f_open@dw
  6450   002150  006F FF78  F14F    	movff	postinc2,f_open@dw+1
  6451   002156  006F FF78  F150    	movff	postinc2,f_open@dw+2
  6452   00215C  006F FF78  F151    	movff	postinc2,f_open@dw+3
  6453   002162                     
  6454                           ; BSR set to: 1
  6455                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  6456   002162  0E69               	movlw	low f_open@dj
  6457   002164  0100               	movlb	0	; () banked
  6458   002166  6FF4               	movwf	remove_chain@obj& (0+255),b
  6459   002168  0E01               	movlw	high f_open@dj
  6460   00216A  6FF5               	movwf	(remove_chain@obj+1)& (0+255),b
  6461   00216C  C15A  F0F6         	movff	f_open@cl,remove_chain@clst
  6462   002170  C15B  F0F7         	movff	f_open@cl+1,remove_chain@clst+1
  6463   002174  C15C  F0F8         	movff	f_open@cl+2,remove_chain@clst+2
  6464   002178  C15D  F0F9         	movff	f_open@cl+3,remove_chain@clst+3
  6465   00217C  0E00               	movlw	0
  6466   00217E  6FFA               	movwf	remove_chain@pclst& (0+255),b
  6467   002180  0E00               	movlw	0
  6468   002182  6FFB               	movwf	(remove_chain@pclst+1)& (0+255),b
  6469   002184  0E00               	movlw	0
  6470   002186  6FFC               	movwf	(remove_chain@pclst+2)& (0+255),b
  6471   002188  0E00               	movlw	0
  6472   00218A  6FFD               	movwf	(remove_chain@pclst+3)& (0+255),b
  6473   00218C  ECA4  F033         	call	_remove_chain	;wreg free
  6474   002190  0101               	movlb	1	; () banked
  6475   002192  6F68               	movwf	f_open@res& (0+255),b
  6476   002194                     
  6477                           ; BSR set to: 1
  6478                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  6479   002194  5168               	movf	f_open@res& (0+255),w,b
  6480   002196  A4D8               	btfss	status,2,c
  6481   002198  EFD0  F010         	goto	u21111
  6482   00219C  EFD2  F010         	goto	u21110
  6483   0021A0                     u21111:
  6484   0021A0  EF25  F011         	goto	l1302
  6485   0021A4                     u21110:
  6486   0021A4                     
  6487                           ; BSR set to: 1
  6488                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  6489   0021A4  C166  F0C8         	movff	f_open@fs,move_window@fs
  6490   0021A8  C167  F0C9         	movff	f_open@fs+1,move_window@fs+1
  6491   0021AC  C14E  F0CA         	movff	f_open@dw,move_window@sector
  6492   0021B0  C14F  F0CB         	movff	f_open@dw+1,move_window@sector+1
  6493   0021B4  C150  F0CC         	movff	f_open@dw+2,move_window@sector+2
  6494   0021B8  C151  F0CD         	movff	f_open@dw+3,move_window@sector+3
  6495   0021BC  ECAF  F046         	call	_move_window	;wreg free
  6496   0021C0  0101               	movlb	1	; () banked
  6497   0021C2  6F68               	movwf	f_open@res& (0+255),b
  6498   0021C4                     
  6499                           ; BSR set to: 1
  6500                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  6501   0021C4  0EFF               	movlw	255
  6502   0021C6  255A               	addwf	f_open@cl& (0+255),w,b
  6503   0021C8  6F46               	movwf	??_f_open& (0+255),b
  6504   0021CA  0EFF               	movlw	255
  6505   0021CC  215B               	addwfc	(f_open@cl+1)& (0+255),w,b
  6506   0021CE  6F47               	movwf	(??_f_open+1)& (0+255),b
  6507   0021D0  0EFF               	movlw	255
  6508   0021D2  215C               	addwfc	(f_open@cl+2)& (0+255),w,b
  6509   0021D4  6F48               	movwf	(??_f_open+2)& (0+255),b
  6510   0021D6  0EFF               	movlw	255
  6511   0021D8  215D               	addwfc	(f_open@cl+3)& (0+255),w,b
  6512   0021DA  6F49               	movwf	(??_f_open+3)& (0+255),b
  6513   0021DC  EE20 F00B          	lfsr	2,11
  6514   0021E0  5166               	movf	f_open@fs& (0+255),w,b
  6515   0021E2  26D9               	addwf	fsr2l,f,c
  6516   0021E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6517   0021E6  22DA               	addwfc	fsr2h,f,c
  6518   0021E8  0060  F51B  FFDE   	movff	??_f_open,postinc2
  6519   0021EE  0060  F51F  FFDE   	movff	??_f_open+1,postinc2
  6520   0021F4  0060  F523  FFDE   	movff	??_f_open+2,postinc2
  6521   0021FA  0060  F527  FFDE   	movff	??_f_open+3,postinc2
  6522   002200  EF25  F011         	goto	l1302
  6523   002204                     l17098:
  6524                           
  6525                           ; BSR set to: 1
  6526                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  6527   002204  5168               	movf	f_open@res& (0+255),w,b
  6528   002206  A4D8               	btfss	status,2,c
  6529   002208  EF08  F011         	goto	u21121
  6530   00220C  EF0A  F011         	goto	u21120
  6531   002210                     u21121:
  6532   002210  EF25  F011         	goto	l1302
  6533   002214                     u21120:
  6534   002214                     
  6535                           ; BSR set to: 1
  6536                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  6537   002214  A96D               	btfss	(f_open@dj+4)& (0+255),4,b
  6538   002216  EF0F  F011         	goto	u21131
  6539   00221A  EF11  F011         	goto	u21130
  6540   00221E                     u21131:
  6541   00221E  EF15  F011         	goto	l1304
  6542   002222                     u21130:
  6543   002222                     
  6544                           ; BSR set to: 1
  6545                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  6546   002222  0E04               	movlw	4
  6547   002224  6F68               	movwf	f_open@res& (0+255),b
  6548                           
  6549                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  6550   002226  EF25  F011         	goto	l1302
  6551   00222A                     l1304:
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  6555   00222A  A345               	btfss	f_open@mode& (0+255),1,b
  6556   00222C  EF1A  F011         	goto	u21141
  6557   002230  EF1C  F011         	goto	u21140
  6558   002234                     u21141:
  6559   002234  EF25  F011         	goto	l1302
  6560   002238                     u21140:
  6561   002238                     
  6562                           ; BSR set to: 1
  6563   002238  A16D               	btfss	(f_open@dj+4)& (0+255),0,b
  6564   00223A  EF21  F011         	goto	u21151
  6565   00223E  EF23  F011         	goto	u21150
  6566   002242                     u21151:
  6567   002242  EF25  F011         	goto	l1302
  6568   002246                     u21150:
  6569   002246                     
  6570                           ; BSR set to: 1
  6571                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  6572   002246  0E07               	movlw	7
  6573   002248  6F68               	movwf	f_open@res& (0+255),b
  6574   00224A                     l1302:
  6575                           
  6576                           ; BSR set to: 1
  6577                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  6578   00224A  5168               	movf	f_open@res& (0+255),w,b
  6579   00224C  A4D8               	btfss	status,2,c
  6580   00224E  EF2B  F011         	goto	u21161
  6581   002252  EF2D  F011         	goto	u21160
  6582   002256                     u21161:
  6583   002256  EF59  F011         	goto	l17116
  6584   00225A                     u21160:
  6585   00225A                     
  6586                           ; BSR set to: 1
  6587                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  6588   00225A  A745               	btfss	f_open@mode& (0+255),3,b
  6589   00225C  EF32  F011         	goto	u21171
  6590   002260  EF34  F011         	goto	u21170
  6591   002264                     u21171:
  6592   002264  EF35  F011         	goto	l17112
  6593   002268                     u21170:
  6594   002268                     
  6595                           ; BSR set to: 1
  6596   002268  8D45               	bsf	f_open@mode& (0+255),6,b
  6597   00226A                     l17112:
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  6601   00226A  EE20 F02F          	lfsr	2,47
  6602   00226E  5166               	movf	f_open@fs& (0+255),w,b
  6603   002270  26D9               	addwf	fsr2l,f,c
  6604   002272  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6605   002274  22DA               	addwfc	fsr2h,f,c
  6606   002276  EE10 F01C          	lfsr	1,28
  6607   00227A  5141               	movf	f_open@fp& (0+255),w,b
  6608   00227C  26E1               	addwf	fsr1l,f,c
  6609   00227E  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6610   002280  22E2               	addwfc	fsr1h,f,c
  6611   002282  006F FF7B FFE6     	movff	postinc2,postinc1
  6612   002288  006F FF7B FFE6     	movff	postinc2,postinc1
  6613   00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  6614   002294  006F FF7B FFE6     	movff	postinc2,postinc1
  6615   00229A                     
  6616                           ; BSR set to: 1
  6617                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  6618   00229A  EE20 F020          	lfsr	2,32
  6619   00229E  5141               	movf	f_open@fp& (0+255),w,b
  6620   0022A0  26D9               	addwf	fsr2l,f,c
  6621   0022A2  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6622   0022A4  22DA               	addwfc	fsr2h,f,c
  6623   0022A6  0060  F60F  FFDE   	movff	f_open@dj+26,postinc2
  6624   0022AC  0060  F613  FFDD   	movff	f_open@dj+27,postdec2
  6625   0022B2                     l17116:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  6629   0022B2  5168               	movf	f_open@res& (0+255),w,b
  6630   0022B4  A4D8               	btfss	status,2,c
  6631   0022B6  EF5F  F011         	goto	u21181
  6632   0022BA  EF61  F011         	goto	u21180
  6633   0022BE                     u21181:
  6634   0022BE  EF84  F013         	goto	l1289
  6635   0022C2                     u21180:
  6636   0022C2                     
  6637                           ; BSR set to: 1
  6638                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  6639   0022C2  C166  F067         	movff	f_open@fs,ld_clust@fs
  6640   0022C6  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  6641   0022CA  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  6642   0022CE  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  6643   0022D2  ECD3  F049         	call	_ld_clust	;wreg free
  6644   0022D6  0101               	movlb	1	; () banked
  6645   0022D8  EE20 F006          	lfsr	2,6
  6646   0022DC  5141               	movf	f_open@fp& (0+255),w,b
  6647   0022DE  26D9               	addwf	fsr2l,f,c
  6648   0022E0  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6649   0022E2  22DA               	addwfc	fsr2h,f,c
  6650   0022E4  0100               	movlb	0	; () banked
  6651   0022E6  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  6652   0022EC  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  6653   0022F2  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  6654   0022F8  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  6655                           
  6656                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  6657   0022FE  0E1C               	movlw	28
  6658   002300  0101               	movlb	1	; () banked
  6659   002302  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6660   002304  0100               	movlb	0	; () banked
  6661   002306  6F60               	movwf	ld_dword@ptr& (0+255),b
  6662   002308  0E00               	movlw	0
  6663   00230A  0101               	movlb	1	; () banked
  6664   00230C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6665   00230E  0100               	movlb	0	; () banked
  6666   002310  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
  6667   002312  ECE4  F047         	call	_ld_dword	;wreg free
  6668   002316  0101               	movlb	1	; () banked
  6669   002318  EE20 F00A          	lfsr	2,10
  6670   00231C  5141               	movf	f_open@fp& (0+255),w,b
  6671   00231E  26D9               	addwf	fsr2l,f,c
  6672   002320  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6673   002322  22DA               	addwfc	fsr2h,f,c
  6674   002324  0100               	movlb	0	; () banked
  6675   002326  0060  F183  FFDE   	movff	?_ld_dword,postinc2
  6676   00232C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
  6677   002332  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
  6678   002338  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
  6679   00233E                     
  6680                           ; BSR set to: 0
  6681                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  6682   00233E  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  6683   002344  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  6684   00234A  0060  F59B  FFDE   	movff	f_open@fs,postinc2
  6685   002350  0060  F59F  FFDD   	movff	f_open@fs+1,postdec2
  6686   002356                     
  6687                           ; BSR set to: 0
  6688                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  6689   002356  0101               	movlb	1	; () banked
  6690   002358  EE20 F005          	lfsr	2,5
  6691   00235C  5166               	movf	f_open@fs& (0+255),w,b
  6692   00235E  26D9               	addwf	fsr2l,f,c
  6693   002360  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6694   002362  22DA               	addwfc	fsr2h,f,c
  6695   002364  EE10 F002          	lfsr	1,2
  6696   002368  5141               	movf	f_open@fp& (0+255),w,b
  6697   00236A  26E1               	addwf	fsr1l,f,c
  6698   00236C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6699   00236E  22E2               	addwfc	fsr1h,f,c
  6700   002370  006F FF7B FFE6     	movff	postinc2,postinc1
  6701   002376  006F FF77 FFE5     	movff	postdec2,postdec1
  6702   00237C                     
  6703                           ; BSR set to: 1
  6704                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  6705   00237C  EE20 F00E          	lfsr	2,14
  6706   002380  5141               	movf	f_open@fp& (0+255),w,b
  6707   002382  26D9               	addwf	fsr2l,f,c
  6708   002384  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6709   002386  22DA               	addwfc	fsr2h,f,c
  6710   002388  0060  F517  FFDF   	movff	f_open@mode,indf2
  6711   00238E                     
  6712                           ; BSR set to: 1
  6713                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  6714   00238E  EE20 F00F          	lfsr	2,15
  6715   002392  5141               	movf	f_open@fp& (0+255),w,b
  6716   002394  26D9               	addwf	fsr2l,f,c
  6717   002396  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6718   002398  22DA               	addwfc	fsr2h,f,c
  6719   00239A  6ADF               	clrf	indf2,c
  6720   00239C                     
  6721                           ; BSR set to: 1
  6722                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  6723   00239C  EE20 F018          	lfsr	2,24
  6724   0023A0  5141               	movf	f_open@fp& (0+255),w,b
  6725   0023A2  26D9               	addwf	fsr2l,f,c
  6726   0023A4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6727   0023A6  22DA               	addwfc	fsr2h,f,c
  6728   0023A8  6ADE               	clrf	postinc2,c
  6729   0023AA  6ADE               	clrf	postinc2,c
  6730   0023AC  6ADE               	clrf	postinc2,c
  6731   0023AE  6ADD               	clrf	postdec2,c
  6732   0023B0                     
  6733                           ; BSR set to: 1
  6734                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  6735   0023B0  EE20 F010          	lfsr	2,16
  6736   0023B4  5141               	movf	f_open@fp& (0+255),w,b
  6737   0023B6  26D9               	addwf	fsr2l,f,c
  6738   0023B8  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6739   0023BA  22DA               	addwfc	fsr2h,f,c
  6740   0023BC  6ADE               	clrf	postinc2,c
  6741   0023BE  6ADE               	clrf	postinc2,c
  6742   0023C0  6ADE               	clrf	postinc2,c
  6743   0023C2  6ADD               	clrf	postdec2,c
  6744   0023C4                     
  6745                           ; BSR set to: 1
  6746                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  6747   0023C4  0E22               	movlw	34
  6748   0023C6  2541               	addwf	f_open@fp& (0+255),w,b
  6749   0023C8  0100               	movlb	0	; () banked
  6750   0023CA  6F60               	movwf	mem_set@dst& (0+255),b
  6751   0023CC  0E00               	movlw	0
  6752   0023CE  0101               	movlb	1	; () banked
  6753   0023D0  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  6754   0023D2  0100               	movlb	0	; () banked
  6755   0023D4  6F61               	movwf	(mem_set@dst+1)& (0+255),b
  6756   0023D6  0E00               	movlw	0
  6757   0023D8  6F63               	movwf	(mem_set@val+1)& (0+255),b
  6758   0023DA  0E00               	movlw	0
  6759   0023DC  6F62               	movwf	mem_set@val& (0+255),b
  6760   0023DE  0E02               	movlw	2
  6761   0023E0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  6762   0023E2  0E00               	movlw	0
  6763   0023E4  6F64               	movwf	mem_set@cnt& (0+255),b
  6764   0023E6  EC5C  F050         	call	_mem_set	;wreg free
  6765   0023EA                     
  6766                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  6767   0023EA  0101               	movlb	1	; () banked
  6768   0023EC  AB45               	btfss	f_open@mode& (0+255),5,b
  6769   0023EE  EFFB  F011         	goto	u21191
  6770   0023F2  EFFD  F011         	goto	u21190
  6771   0023F6                     u21191:
  6772   0023F6  EF84  F013         	goto	l1289
  6773   0023FA                     u21190:
  6774   0023FA                     
  6775                           ; BSR set to: 1
  6776   0023FA  EE20 F00A          	lfsr	2,10
  6777   0023FE  5141               	movf	f_open@fp& (0+255),w,b
  6778   002400  26D9               	addwf	fsr2l,f,c
  6779   002402  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6780   002404  22DA               	addwfc	fsr2h,f,c
  6781   002406  50DE               	movf	postinc2,w,c
  6782   002408  10DE               	iorwf	postinc2,w,c
  6783   00240A  10DE               	iorwf	postinc2,w,c
  6784   00240C  10DE               	iorwf	postinc2,w,c
  6785   00240E  B4D8               	btfsc	status,2,c
  6786   002410  EF0C  F012         	goto	u21201
  6787   002414  EF0E  F012         	goto	u21200
  6788   002418                     u21201:
  6789   002418  EF84  F013         	goto	l1289
  6790   00241C                     u21200:
  6791   00241C                     
  6792                           ; BSR set to: 1
  6793                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  6794   00241C  EE20 F00A          	lfsr	2,10
  6795   002420  5141               	movf	f_open@fp& (0+255),w,b
  6796   002422  26D9               	addwf	fsr2l,f,c
  6797   002424  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6798   002426  22DA               	addwfc	fsr2h,f,c
  6799   002428  EE10 F010          	lfsr	1,16
  6800   00242C  5141               	movf	f_open@fp& (0+255),w,b
  6801   00242E  26E1               	addwf	fsr1l,f,c
  6802   002430  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6803   002432  22E2               	addwfc	fsr1h,f,c
  6804   002434  006F FF7B FFE6     	movff	postinc2,postinc1
  6805   00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  6806   002440  006F FF7B FFE6     	movff	postinc2,postinc1
  6807   002446  006F FF7B FFE6     	movff	postinc2,postinc1
  6808   00244C                     
  6809                           ; BSR set to: 1
  6810                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  6811   00244C  EE20 F009          	lfsr	2,9
  6812   002450  5166               	movf	f_open@fs& (0+255),w,b
  6813   002452  26D9               	addwf	fsr2l,f,c
  6814   002454  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6815   002456  22DA               	addwfc	fsr2h,f,c
  6816   002458  006F FF78  F146    	movff	postinc2,??_f_open
  6817   00245E  006F FF74  F147    	movff	postdec2,??_f_open+1
  6818   002464  5146               	movf	??_f_open& (0+255),w,b
  6819   002466  6F48               	movwf	(??_f_open+2)& (0+255),b
  6820   002468  5147               	movf	(??_f_open+1)& (0+255),w,b
  6821   00246A  6F49               	movwf	(??_f_open+3)& (0+255),b
  6822   00246C  6B4A               	clrf	(??_f_open+4)& (0+255),b
  6823   00246E  6B4B               	clrf	(??_f_open+5)& (0+255),b
  6824   002470  0E09               	movlw	9
  6825   002472                     u21215:
  6826   002472  90D8               	bcf	status,0,c
  6827   002474  3748               	rlcf	(??_f_open+2)& (0+255),f,b
  6828   002476  3749               	rlcf	(??_f_open+3)& (0+255),f,b
  6829   002478  374A               	rlcf	(??_f_open+4)& (0+255),f,b
  6830   00247A  374B               	rlcf	(??_f_open+5)& (0+255),f,b
  6831   00247C  2EE8               	decfsz	wreg,f,c
  6832   00247E  EF39  F012         	goto	u21215
  6833   002482  C148  F156         	movff	??_f_open+2,f_open@bcs
  6834   002486  C149  F157         	movff	??_f_open+3,f_open@bcs+1
  6835   00248A  C14A  F158         	movff	??_f_open+4,f_open@bcs+2
  6836   00248E  C14B  F159         	movff	??_f_open+5,f_open@bcs+3
  6837   002492                     
  6838                           ; BSR set to: 1
  6839                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  6840   002492  EE20 F006          	lfsr	2,6
  6841   002496  5141               	movf	f_open@fp& (0+255),w,b
  6842   002498  26D9               	addwf	fsr2l,f,c
  6843   00249A  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6844   00249C  22DA               	addwfc	fsr2h,f,c
  6845   00249E  006F FF78  F162    	movff	postinc2,f_open@clst
  6846   0024A4  006F FF78  F163    	movff	postinc2,f_open@clst+1
  6847   0024AA  006F FF78  F164    	movff	postinc2,f_open@clst+2
  6848   0024B0  006F FF78  F165    	movff	postinc2,f_open@clst+3
  6849   0024B6                     
  6850                           ; BSR set to: 1
  6851                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  6852   0024B6  EE20 F00A          	lfsr	2,10
  6853   0024BA  5141               	movf	f_open@fp& (0+255),w,b
  6854   0024BC  26D9               	addwf	fsr2l,f,c
  6855   0024BE  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6856   0024C0  22DA               	addwfc	fsr2h,f,c
  6857   0024C2  006F FF78  F15E    	movff	postinc2,f_open@ofs
  6858   0024C8  006F FF78  F15F    	movff	postinc2,f_open@ofs+1
  6859   0024CE  006F FF78  F160    	movff	postinc2,f_open@ofs+2
  6860   0024D4  006F FF78  F161    	movff	postinc2,f_open@ofs+3
  6861   0024DA  EFAD  F012         	goto	l17158
  6862   0024DE                     l17146:
  6863                           
  6864                           ; BSR set to: 1
  6865                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  6866   0024DE  C141  F0D3         	movff	f_open@fp,get_fat@obj
  6867   0024E2  C142  F0D4         	movff	f_open@fp+1,get_fat@obj+1
  6868   0024E6  C162  F0D5         	movff	f_open@clst,get_fat@clst
  6869   0024EA  C163  F0D6         	movff	f_open@clst+1,get_fat@clst+1
  6870   0024EE  C164  F0D7         	movff	f_open@clst+2,get_fat@clst+2
  6871   0024F2  C165  F0D8         	movff	f_open@clst+3,get_fat@clst+3
  6872   0024F6  ECE4  F027         	call	_get_fat	;wreg free
  6873   0024FA  C0D3  F162         	movff	?_get_fat,f_open@clst
  6874   0024FE  C0D4  F163         	movff	?_get_fat+1,f_open@clst+1
  6875   002502  C0D5  F164         	movff	?_get_fat+2,f_open@clst+2
  6876   002506  C0D6  F165         	movff	?_get_fat+3,f_open@clst+3
  6877   00250A                     
  6878                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  6879   00250A  0101               	movlb	1	; () banked
  6880   00250C  5165               	movf	(f_open@clst+3)& (0+255),w,b
  6881   00250E  1164               	iorwf	(f_open@clst+2)& (0+255),w,b
  6882   002510  1163               	iorwf	(f_open@clst+1)& (0+255),w,b
  6883   002512  E107               	bnz	u21221
  6884   002514  0E02               	movlw	2
  6885   002516  5D62               	subwf	f_open@clst& (0+255),w,b
  6886   002518  B0D8               	btfsc	status,0,c
  6887   00251A  EF91  F012         	goto	u21221
  6888   00251E  EF93  F012         	goto	u21220
  6889   002522                     u21221:
  6890   002522  EF95  F012         	goto	l17152
  6891   002526                     u21220:
  6892   002526                     
  6893                           ; BSR set to: 1
  6894   002526  0E02               	movlw	2
  6895   002528  6F68               	movwf	f_open@res& (0+255),b
  6896   00252A                     l17152:
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  6900   00252A  2962               	incf	f_open@clst& (0+255),w,b
  6901   00252C  E10A               	bnz	u21231
  6902   00252E  2963               	incf	(f_open@clst+1)& (0+255),w,b
  6903   002530  E108               	bnz	u21231
  6904   002532  2964               	incf	(f_open@clst+2)& (0+255),w,b
  6905   002534  E106               	bnz	u21231
  6906   002536  2965               	incf	(f_open@clst+3)& (0+255),w,b
  6907   002538  A4D8               	btfss	status,2,c
  6908   00253A  EFA1  F012         	goto	u21231
  6909   00253E  EFA3  F012         	goto	u21230
  6910   002542                     u21231:
  6911   002542  EFA5  F012         	goto	l17156
  6912   002546                     u21230:
  6913   002546                     
  6914                           ; BSR set to: 1
  6915   002546  0E01               	movlw	1
  6916   002548  6F68               	movwf	f_open@res& (0+255),b
  6917   00254A                     l17156:
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  6921   00254A  5156               	movf	f_open@bcs& (0+255),w,b
  6922   00254C  5F5E               	subwf	f_open@ofs& (0+255),f,b
  6923   00254E  5157               	movf	(f_open@bcs+1)& (0+255),w,b
  6924   002550  5B5F               	subwfb	(f_open@ofs+1)& (0+255),f,b
  6925   002552  5158               	movf	(f_open@bcs+2)& (0+255),w,b
  6926   002554  5B60               	subwfb	(f_open@ofs+2)& (0+255),f,b
  6927   002556  5159               	movf	(f_open@bcs+3)& (0+255),w,b
  6928   002558  5B61               	subwfb	(f_open@ofs+3)& (0+255),f,b
  6929   00255A                     l17158:
  6930                           
  6931                           ; BSR set to: 1
  6932   00255A  5168               	movf	f_open@res& (0+255),w,b
  6933   00255C  A4D8               	btfss	status,2,c
  6934   00255E  EFB3  F012         	goto	u21241
  6935   002562  EFB5  F012         	goto	u21240
  6936   002566                     u21241:
  6937   002566  EFC4  F012         	goto	l17162
  6938   00256A                     u21240:
  6939   00256A                     
  6940                           ; BSR set to: 1
  6941   00256A  515E               	movf	f_open@ofs& (0+255),w,b
  6942   00256C  5D56               	subwf	f_open@bcs& (0+255),w,b
  6943   00256E  515F               	movf	(f_open@ofs+1)& (0+255),w,b
  6944   002570  5957               	subwfb	(f_open@bcs+1)& (0+255),w,b
  6945   002572  5160               	movf	(f_open@ofs+2)& (0+255),w,b
  6946   002574  5958               	subwfb	(f_open@bcs+2)& (0+255),w,b
  6947   002576  5161               	movf	(f_open@ofs+3)& (0+255),w,b
  6948   002578  5959               	subwfb	(f_open@bcs+3)& (0+255),w,b
  6949   00257A  A0D8               	btfss	status,0,c
  6950   00257C  EFC2  F012         	goto	u21251
  6951   002580  EFC4  F012         	goto	u21250
  6952   002584                     u21251:
  6953   002584  EF6F  F012         	goto	l17146
  6954   002588                     u21250:
  6955   002588                     l17162:
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  6959   002588  EE20 F014          	lfsr	2,20
  6960   00258C  5141               	movf	f_open@fp& (0+255),w,b
  6961   00258E  26D9               	addwf	fsr2l,f,c
  6962   002590  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6963   002592  22DA               	addwfc	fsr2h,f,c
  6964   002594  0060  F58B  FFDE   	movff	f_open@clst,postinc2
  6965   00259A  0060  F58F  FFDE   	movff	f_open@clst+1,postinc2
  6966   0025A0  0060  F593  FFDE   	movff	f_open@clst+2,postinc2
  6967   0025A6  0060  F597  FFDE   	movff	f_open@clst+3,postinc2
  6968   0025AC                     
  6969                           ; BSR set to: 1
  6970                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  6971   0025AC  5168               	movf	f_open@res& (0+255),w,b
  6972   0025AE  A4D8               	btfss	status,2,c
  6973   0025B0  EFDC  F012         	goto	u21261
  6974   0025B4  EFDE  F012         	goto	u21260
  6975   0025B8                     u21261:
  6976   0025B8  EF84  F013         	goto	l1289
  6977   0025BC                     u21260:
  6978   0025BC                     
  6979                           ; BSR set to: 1
  6980   0025BC  0EFF               	movlw	255
  6981   0025BE  155E               	andwf	f_open@ofs& (0+255),w,b
  6982   0025C0  6F46               	movwf	??_f_open& (0+255),b
  6983   0025C2  0E01               	movlw	1
  6984   0025C4  155F               	andwf	(f_open@ofs+1)& (0+255),w,b
  6985   0025C6  6F47               	movwf	(??_f_open+1)& (0+255),b
  6986   0025C8  0E00               	movlw	0
  6987   0025CA  1560               	andwf	(f_open@ofs+2)& (0+255),w,b
  6988   0025CC  6F48               	movwf	(??_f_open+2)& (0+255),b
  6989   0025CE  0E00               	movlw	0
  6990   0025D0  1561               	andwf	(f_open@ofs+3)& (0+255),w,b
  6991   0025D2  6F49               	movwf	(??_f_open+3)& (0+255),b
  6992   0025D4  5146               	movf	??_f_open& (0+255),w,b
  6993   0025D6  1147               	iorwf	(??_f_open+1)& (0+255),w,b
  6994   0025D8  1148               	iorwf	(??_f_open+2)& (0+255),w,b
  6995   0025DA  1149               	iorwf	(??_f_open+3)& (0+255),w,b
  6996   0025DC  B4D8               	btfsc	status,2,c
  6997   0025DE  EFF3  F012         	goto	u21271
  6998   0025E2  EFF5  F012         	goto	u21270
  6999   0025E6                     u21271:
  7000   0025E6  EF84  F013         	goto	l1289
  7001   0025EA                     u21270:
  7002   0025EA                     
  7003                           ; BSR set to: 1
  7004                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  7005   0025EA  C166  F06C         	movff	f_open@fs,clst2sect@fs
  7006   0025EE  C167  F06D         	movff	f_open@fs+1,clst2sect@fs+1
  7007   0025F2  C162  F06E         	movff	f_open@clst,clst2sect@clst
  7008   0025F6  C163  F06F         	movff	f_open@clst+1,clst2sect@clst+1
  7009   0025FA  C164  F070         	movff	f_open@clst+2,clst2sect@clst+2
  7010   0025FE  C165  F071         	movff	f_open@clst+3,clst2sect@clst+3
  7011   002602  EC41  F046         	call	_clst2sect	;wreg free
  7012   002606  C06C  F152         	movff	?_clst2sect,f_open@sc
  7013   00260A  C06D  F153         	movff	?_clst2sect+1,f_open@sc+1
  7014   00260E  C06E  F154         	movff	?_clst2sect+2,f_open@sc+2
  7015   002612  C06F  F155         	movff	?_clst2sect+3,f_open@sc+3
  7016   002616  0101               	movlb	1	; () banked
  7017   002618  5152               	movf	f_open@sc& (0+255),w,b
  7018   00261A  1153               	iorwf	(f_open@sc+1)& (0+255),w,b
  7019   00261C  1154               	iorwf	(f_open@sc+2)& (0+255),w,b
  7020   00261E  1155               	iorwf	(f_open@sc+3)& (0+255),w,b
  7021   002620  A4D8               	btfss	status,2,c
  7022   002622  EF15  F013         	goto	u21281
  7023   002626  EF17  F013         	goto	u21280
  7024   00262A                     u21281:
  7025   00262A  EF1B  F013         	goto	l17172
  7026   00262E                     u21280:
  7027   00262E                     
  7028                           ; BSR set to: 1
  7029                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  7030   00262E  0E02               	movlw	2
  7031   002630  6F68               	movwf	f_open@res& (0+255),b
  7032                           
  7033                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  7034   002632  EF84  F013         	goto	l1289
  7035   002636                     l17172:
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  7039   002636  C15E  F146         	movff	f_open@ofs,??_f_open
  7040   00263A  C15F  F147         	movff	f_open@ofs+1,??_f_open+1
  7041   00263E  C160  F148         	movff	f_open@ofs+2,??_f_open+2
  7042   002642  C161  F149         	movff	f_open@ofs+3,??_f_open+3
  7043   002646  0E0A               	movlw	10
  7044   002648  EF2B  F013         	goto	u21290
  7045   00264C                     u21295:
  7046   00264C  90D8               	bcf	status,0,c
  7047   00264E  3349               	rrcf	(??_f_open+3)& (0+255),f,b
  7048   002650  3348               	rrcf	(??_f_open+2)& (0+255),f,b
  7049   002652  3347               	rrcf	(??_f_open+1)& (0+255),f,b
  7050   002654  3346               	rrcf	??_f_open& (0+255),f,b
  7051   002656                     u21290:
  7052   002656  2EE8               	decfsz	wreg,f,c
  7053   002658  EF26  F013         	goto	u21295
  7054   00265C  5152               	movf	f_open@sc& (0+255),w,b
  7055   00265E  2546               	addwf	??_f_open& (0+255),w,b
  7056   002660  6F4A               	movwf	(??_f_open+4)& (0+255),b
  7057   002662  5153               	movf	(f_open@sc+1)& (0+255),w,b
  7058   002664  2147               	addwfc	(??_f_open+1)& (0+255),w,b
  7059   002666  6F4B               	movwf	(??_f_open+5)& (0+255),b
  7060   002668  5154               	movf	(f_open@sc+2)& (0+255),w,b
  7061   00266A  2148               	addwfc	(??_f_open+2)& (0+255),w,b
  7062   00266C  6F4C               	movwf	(??_f_open+6)& (0+255),b
  7063   00266E  5155               	movf	(f_open@sc+3)& (0+255),w,b
  7064   002670  2149               	addwfc	(??_f_open+3)& (0+255),w,b
  7065   002672  6F4D               	movwf	(??_f_open+7)& (0+255),b
  7066   002674  EE20 F018          	lfsr	2,24
  7067   002678  5141               	movf	f_open@fp& (0+255),w,b
  7068   00267A  26D9               	addwf	fsr2l,f,c
  7069   00267C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  7070   00267E  22DA               	addwfc	fsr2h,f,c
  7071   002680  0060  F52B  FFDE   	movff	??_f_open+4,postinc2
  7072   002686  0060  F52F  FFDE   	movff	??_f_open+5,postinc2
  7073   00268C  0060  F533  FFDE   	movff	??_f_open+6,postinc2
  7074   002692  0060  F537  FFDE   	movff	??_f_open+7,postinc2
  7075   002698                     
  7076                           ; BSR set to: 1
  7077                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  7078   002698  0E22               	movlw	34
  7079   00269A  2541               	addwf	f_open@fp& (0+255),w,b
  7080   00269C  0100               	movlb	0	; () banked
  7081   00269E  6FA8               	movwf	disk_read@buff& (0+255),b
  7082   0026A0  0E00               	movlw	0
  7083   0026A2  0101               	movlb	1	; () banked
  7084   0026A4  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  7085   0026A6  0100               	movlb	0	; () banked
  7086   0026A8  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  7087   0026AA  0101               	movlb	1	; () banked
  7088   0026AC  EE20 F018          	lfsr	2,24
  7089   0026B0  5141               	movf	f_open@fp& (0+255),w,b
  7090   0026B2  26D9               	addwf	fsr2l,f,c
  7091   0026B4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  7092   0026B6  22DA               	addwfc	fsr2h,f,c
  7093   0026B8  006F FF78  F0AA    	movff	postinc2,disk_read@sector
  7094   0026BE  006F FF78  F0AB    	movff	postinc2,disk_read@sector+1
  7095   0026C4  006F FF78  F0AC    	movff	postinc2,disk_read@sector+2
  7096   0026CA  006F FF78  F0AD    	movff	postinc2,disk_read@sector+3
  7097   0026D0  0E00               	movlw	0
  7098   0026D2  0100               	movlb	0	; () banked
  7099   0026D4  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  7100   0026D6  0E01               	movlw	1
  7101   0026D8  6FAE               	movwf	disk_read@count& (0+255),b
  7102   0026DA  0101               	movlb	1	; () banked
  7103   0026DC  EE20 F001          	lfsr	2,1
  7104   0026E0  5166               	movf	f_open@fs& (0+255),w,b
  7105   0026E2  26D9               	addwf	fsr2l,f,c
  7106   0026E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  7107   0026E6  22DA               	addwfc	fsr2h,f,c
  7108   0026E8  50DF               	movf	indf2,w,c
  7109   0026EA  EC26  F04D         	call	_disk_read
  7110   0026EE  0900               	iorlw	0
  7111   0026F0  B4D8               	btfsc	status,2,c
  7112   0026F2  EF7D  F013         	goto	u21301
  7113   0026F6  EF7F  F013         	goto	u21300
  7114   0026FA                     u21301:
  7115   0026FA  EF84  F013         	goto	l1310
  7116   0026FE                     u21300:
  7117   0026FE  0E01               	movlw	1
  7118   002700  0101               	movlb	1	; () banked
  7119   002702  6F68               	movwf	f_open@res& (0+255),b
  7120   002704  EF84  F013         	goto	l1289
  7121   002708                     l1310:
  7122   002708                     l1289:
  7123                           
  7124                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  7125   002708  0101               	movlb	1	; () banked
  7126   00270A  5168               	movf	f_open@res& (0+255),w,b
  7127   00270C  B4D8               	btfsc	status,2,c
  7128   00270E  EF8B  F013         	goto	u21311
  7129   002712  EF8D  F013         	goto	u21310
  7130   002716                     u21311:
  7131   002716  EF95  F013         	goto	l17180
  7132   00271A                     u21310:
  7133   00271A                     
  7134                           ; BSR set to: 1
  7135   00271A  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  7136   002720  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  7137   002726  6ADE               	clrf	postinc2,c
  7138   002728  6ADD               	clrf	postdec2,c
  7139   00272A                     l17180:
  7140                           
  7141                           ; BSR set to: 1
  7142                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  7143   00272A  5168               	movf	f_open@res& (0+255),w,b
  7144   00272C                     l1284:
  7145                           
  7146                           ; BSR set to: 1
  7147   00272C  0012               	return		;funcret
  7148   00272E                     __end_of_f_open:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function _remove_chain *****************
  7152 ;; Defined at:
  7153 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  obj             2  148[BANK0 ] PTR struct .
  7156 ;;		 -> f_open@dj(40), 
  7157 ;;  clst            4  150[BANK0 ] unsigned long 
  7158 ;;  pclst           4  154[BANK0 ] unsigned long 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  nxt             4    8[BANK1 ] unsigned long 
  7161 ;;  fs              2   13[BANK1 ] PTR struct .
  7162 ;;		 -> FatFs(563), NULL(0), 
  7163 ;;  res             1   12[BANK1 ] enum E68
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      enum E68
  7166 ;; Registers used:
  7167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7173 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Totals:         0      10      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;Total ram usage:       25 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; Hardware stack levels required when called: 13
  7180 ;; This function calls:
  7181 ;;		_get_fat
  7182 ;;		_put_fat
  7183 ;; This function is called by:
  7184 ;;		_f_open
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text19
  7189   006748                     __ptext19:
  7190                           	callstack 0
  7191   006748                     _remove_chain:
  7192                           	callstack 15
  7193   006748                     
  7194                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  7195   006748  0060  F3D3  FFD9   	movff	remove_chain@obj,fsr2l
  7196   00674E  0060  F3D7  FFDA   	movff	remove_chain@obj+1,fsr2h
  7197   006754  006F FF78  F10D    	movff	postinc2,remove_chain@fs
  7198   00675A  006F FF74  F10E    	movff	postdec2,remove_chain@fs+1
  7199   006760                     
  7200                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  7201   006760  0100               	movlb	0	; () banked
  7202   006762  51F9               	movf	(remove_chain@clst+3)& (0+255),w,b
  7203   006764  11F8               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  7204   006766  11F7               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  7205   006768  E109               	bnz	u19850
  7206   00676A  0E02               	movlw	2
  7207   00676C  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7208   00676E  A0D8               	btfss	status,0,c
  7209   006770  EFBC  F033         	goto	u19851
  7210   006774  EFBE  F033         	goto	u19850
  7211   006778                     u19851:
  7212   006778  EFD5  F033         	goto	l16356
  7213   00677C                     u19850:
  7214   00677C                     
  7215                           ; BSR set to: 0
  7216   00677C  0101               	movlb	1	; () banked
  7217   00677E  EE20 F017          	lfsr	2,23
  7218   006782  510D               	movf	remove_chain@fs& (0+255),w,b
  7219   006784  26D9               	addwf	fsr2l,f,c
  7220   006786  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7221   006788  22DA               	addwfc	fsr2h,f,c
  7222   00678A  50DE               	movf	postinc2,w,c
  7223   00678C  0100               	movlb	0	; () banked
  7224   00678E  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7225   006790  50DE               	movf	postinc2,w,c
  7226   006792  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  7227   006794  50DE               	movf	postinc2,w,c
  7228   006796  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  7229   006798  50DE               	movf	postinc2,w,c
  7230   00679A  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  7231   00679C  A0D8               	btfss	status,0,c
  7232   00679E  EFD3  F033         	goto	u19861
  7233   0067A2  EFD5  F033         	goto	u19860
  7234   0067A6                     u19861:
  7235   0067A6  EFD8  F033         	goto	l16360
  7236   0067AA                     u19860:
  7237   0067AA                     l16356:
  7238   0067AA  0E02               	movlw	2
  7239   0067AC  EFC4  F034         	goto	l970
  7240   0067B0                     l16360:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  7244   0067B0  51FA               	movf	remove_chain@pclst& (0+255),w,b
  7245   0067B2  11FB               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  7246   0067B4  11FC               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  7247   0067B6  11FD               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  7248   0067B8  B4D8               	btfsc	status,2,c
  7249   0067BA  EFE1  F033         	goto	u19871
  7250   0067BE  EFE3  F033         	goto	u19870
  7251   0067C2                     u19871:
  7252   0067C2  EF06  F034         	goto	l16376
  7253   0067C6                     u19870:
  7254   0067C6                     
  7255                           ; BSR set to: 0
  7256                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  7257   0067C6  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  7258   0067CA  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  7259   0067CE  C0FA  F0D5         	movff	remove_chain@pclst,put_fat@clst
  7260   0067D2  C0FB  F0D6         	movff	remove_chain@pclst+1,put_fat@clst+1
  7261   0067D6  C0FC  F0D7         	movff	remove_chain@pclst+2,put_fat@clst+2
  7262   0067DA  C0FD  F0D8         	movff	remove_chain@pclst+3,put_fat@clst+3
  7263   0067DE  0EFF               	movlw	255
  7264   0067E0  6FD9               	movwf	put_fat@val& (0+255),b
  7265   0067E2  0EFF               	movlw	255
  7266   0067E4  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  7267   0067E6  0EFF               	movlw	255
  7268   0067E8  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  7269   0067EA  0EFF               	movlw	255
  7270   0067EC  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  7271   0067EE  ECF0  F019         	call	_put_fat	;wreg free
  7272   0067F2  0101               	movlb	1	; () banked
  7273   0067F4  6F0C               	movwf	remove_chain@res& (0+255),b
  7274   0067F6                     
  7275                           ; BSR set to: 1
  7276                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  7277   0067F6  510C               	movf	remove_chain@res& (0+255),w,b
  7278   0067F8  B4D8               	btfsc	status,2,c
  7279   0067FA  EF01  F034         	goto	u19881
  7280   0067FE  EF03  F034         	goto	u19880
  7281   006802                     u19881:
  7282   006802  EF06  F034         	goto	l16376
  7283   006806                     u19880:
  7284   006806                     l16372:
  7285                           
  7286                           ; BSR set to: 1
  7287   006806  510C               	movf	remove_chain@res& (0+255),w,b
  7288   006808  EFC4  F034         	goto	l970
  7289   00680C                     l16376:
  7290                           
  7291                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  7292   00680C  C0F4  F0D3         	movff	remove_chain@obj,get_fat@obj
  7293   006810  C0F5  F0D4         	movff	remove_chain@obj+1,get_fat@obj+1
  7294   006814  C0F6  F0D5         	movff	remove_chain@clst,get_fat@clst
  7295   006818  C0F7  F0D6         	movff	remove_chain@clst+1,get_fat@clst+1
  7296   00681C  C0F8  F0D7         	movff	remove_chain@clst+2,get_fat@clst+2
  7297   006820  C0F9  F0D8         	movff	remove_chain@clst+3,get_fat@clst+3
  7298   006824  ECE4  F027         	call	_get_fat	;wreg free
  7299   006828  C0D3  F108         	movff	?_get_fat,remove_chain@nxt
  7300   00682C  C0D4  F109         	movff	?_get_fat+1,remove_chain@nxt+1
  7301   006830  C0D5  F10A         	movff	?_get_fat+2,remove_chain@nxt+2
  7302   006834  C0D6  F10B         	movff	?_get_fat+3,remove_chain@nxt+3
  7303   006838                     
  7304                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  7305   006838  0101               	movlb	1	; () banked
  7306   00683A  5108               	movf	remove_chain@nxt& (0+255),w,b
  7307   00683C  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7308   00683E  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7309   006840  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7310   006842  A4D8               	btfss	status,2,c
  7311   006844  EF26  F034         	goto	u19891
  7312   006848  EF28  F034         	goto	u19890
  7313   00684C                     u19891:
  7314   00684C  EF2A  F034         	goto	l16382
  7315   006850                     u19890:
  7316   006850  EFC3  F034         	goto	l16410
  7317   006854                     l16382:
  7318                           
  7319                           ; BSR set to: 1
  7320                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  7321   006854  0508               	decf	remove_chain@nxt& (0+255),w,b
  7322   006856  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7323   006858  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7324   00685A  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7325   00685C  A4D8               	btfss	status,2,c
  7326   00685E  EF33  F034         	goto	u19901
  7327   006862  EF35  F034         	goto	u19900
  7328   006866                     u19901:
  7329   006866  EF37  F034         	goto	l16388
  7330   00686A                     u19900:
  7331   00686A  EFD5  F033         	goto	l16356
  7332   00686E                     l16388:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  7336   00686E  2908               	incf	remove_chain@nxt& (0+255),w,b
  7337   006870  E10A               	bnz	u19911
  7338   006872  2909               	incf	(remove_chain@nxt+1)& (0+255),w,b
  7339   006874  E108               	bnz	u19911
  7340   006876  290A               	incf	(remove_chain@nxt+2)& (0+255),w,b
  7341   006878  E106               	bnz	u19911
  7342   00687A  290B               	incf	(remove_chain@nxt+3)& (0+255),w,b
  7343   00687C  A4D8               	btfss	status,2,c
  7344   00687E  EF43  F034         	goto	u19911
  7345   006882  EF45  F034         	goto	u19910
  7346   006886                     u19911:
  7347   006886  EF48  F034         	goto	l16396
  7348   00688A                     u19910:
  7349   00688A                     
  7350                           ; BSR set to: 1
  7351   00688A  0E01               	movlw	1
  7352   00688C  EFC4  F034         	goto	l970
  7353   006890                     l16396:
  7354                           
  7355                           ; BSR set to: 1
  7356                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  7357   006890  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  7358   006894  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  7359   006898  C0F6  F0D5         	movff	remove_chain@clst,put_fat@clst
  7360   00689C  C0F7  F0D6         	movff	remove_chain@clst+1,put_fat@clst+1
  7361   0068A0  C0F8  F0D7         	movff	remove_chain@clst+2,put_fat@clst+2
  7362   0068A4  C0F9  F0D8         	movff	remove_chain@clst+3,put_fat@clst+3
  7363   0068A8  0E00               	movlw	0
  7364   0068AA  0100               	movlb	0	; () banked
  7365   0068AC  6FD9               	movwf	put_fat@val& (0+255),b
  7366   0068AE  0E00               	movlw	0
  7367   0068B0  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  7368   0068B2  0E00               	movlw	0
  7369   0068B4  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  7370   0068B6  0E00               	movlw	0
  7371   0068B8  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  7372   0068BA  ECF0  F019         	call	_put_fat	;wreg free
  7373   0068BE  0101               	movlb	1	; () banked
  7374   0068C0  6F0C               	movwf	remove_chain@res& (0+255),b
  7375   0068C2                     
  7376                           ; BSR set to: 1
  7377                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  7378   0068C2  510C               	movf	remove_chain@res& (0+255),w,b
  7379   0068C4  B4D8               	btfsc	status,2,c
  7380   0068C6  EF67  F034         	goto	u19921
  7381   0068CA  EF69  F034         	goto	u19920
  7382   0068CE                     u19921:
  7383   0068CE  EF6B  F034         	goto	l16404
  7384   0068D2                     u19920:
  7385   0068D2  EF03  F034         	goto	l16372
  7386   0068D6                     l16404:
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  7390   0068D6  EE20 F017          	lfsr	2,23
  7391   0068DA  510D               	movf	remove_chain@fs& (0+255),w,b
  7392   0068DC  26D9               	addwf	fsr2l,f,c
  7393   0068DE  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7394   0068E0  22DA               	addwfc	fsr2h,f,c
  7395   0068E2  0EFE               	movlw	254
  7396   0068E4  24DE               	addwf	postinc2,w,c
  7397   0068E6  6F00               	movwf	??_remove_chain& (0+255),b
  7398   0068E8  0EFF               	movlw	255
  7399   0068EA  20DE               	addwfc	postinc2,w,c
  7400   0068EC  6F01               	movwf	(??_remove_chain+1)& (0+255),b
  7401   0068EE  0EFF               	movlw	255
  7402   0068F0  20DE               	addwfc	postinc2,w,c
  7403   0068F2  6F02               	movwf	(??_remove_chain+2)& (0+255),b
  7404   0068F4  0EFF               	movlw	255
  7405   0068F6  20DE               	addwfc	postinc2,w,c
  7406   0068F8  6F03               	movwf	(??_remove_chain+3)& (0+255),b
  7407   0068FA  EE20 F00F          	lfsr	2,15
  7408   0068FE  510D               	movf	remove_chain@fs& (0+255),w,b
  7409   006900  26D9               	addwf	fsr2l,f,c
  7410   006902  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7411   006904  22DA               	addwfc	fsr2h,f,c
  7412   006906  5100               	movf	??_remove_chain& (0+255),w,b
  7413   006908  5CDE               	subwf	postinc2,w,c
  7414   00690A  5101               	movf	(??_remove_chain+1)& (0+255),w,b
  7415   00690C  58DE               	subwfb	postinc2,w,c
  7416   00690E  5102               	movf	(??_remove_chain+2)& (0+255),w,b
  7417   006910  58DE               	subwfb	postinc2,w,c
  7418   006912  5103               	movf	(??_remove_chain+3)& (0+255),w,b
  7419   006914  58DE               	subwfb	postinc2,w,c
  7420   006916  B0D8               	btfsc	status,0,c
  7421   006918  EF90  F034         	goto	u19931
  7422   00691C  EF92  F034         	goto	u19930
  7423   006920                     u19931:
  7424   006920  EFA5  F034         	goto	l16408
  7425   006924                     u19930:
  7426   006924                     
  7427                           ; BSR set to: 1
  7428                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  7429   006924  EE20 F00F          	lfsr	2,15
  7430   006928  510D               	movf	remove_chain@fs& (0+255),w,b
  7431   00692A  26D9               	addwf	fsr2l,f,c
  7432   00692C  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7433   00692E  22DA               	addwfc	fsr2h,f,c
  7434   006930  2ADE               	incf	postinc2,f,c
  7435   006932  0E00               	movlw	0
  7436   006934  22DE               	addwfc	postinc2,f,c
  7437   006936  22DE               	addwfc	postinc2,f,c
  7438   006938  22DE               	addwfc	postinc2,f,c
  7439                           
  7440                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  7441   00693A  EE20 F004          	lfsr	2,4
  7442   00693E  510D               	movf	remove_chain@fs& (0+255),w,b
  7443   006940  26D9               	addwf	fsr2l,f,c
  7444   006942  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7445   006944  22DA               	addwfc	fsr2h,f,c
  7446   006946  0E00               	movlw	0
  7447   006948  80DB               	bsf	plusw2,0,c
  7448   00694A                     l16408:
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  7452   00694A  C108  F0F6         	movff	remove_chain@nxt,remove_chain@clst
  7453   00694E  C109  F0F7         	movff	remove_chain@nxt+1,remove_chain@clst+1
  7454   006952  C10A  F0F8         	movff	remove_chain@nxt+2,remove_chain@clst+2
  7455   006956  C10B  F0F9         	movff	remove_chain@nxt+3,remove_chain@clst+3
  7456                           
  7457                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  7458   00695A  EE20 F017          	lfsr	2,23
  7459   00695E  510D               	movf	remove_chain@fs& (0+255),w,b
  7460   006960  26D9               	addwf	fsr2l,f,c
  7461   006962  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7462   006964  22DA               	addwfc	fsr2h,f,c
  7463   006966  50DE               	movf	postinc2,w,c
  7464   006968  0100               	movlb	0	; () banked
  7465   00696A  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7466   00696C  50DE               	movf	postinc2,w,c
  7467   00696E  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  7468   006970  50DE               	movf	postinc2,w,c
  7469   006972  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  7470   006974  50DE               	movf	postinc2,w,c
  7471   006976  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  7472   006978  A0D8               	btfss	status,0,c
  7473   00697A  EFC1  F034         	goto	u19941
  7474   00697E  EFC3  F034         	goto	u19940
  7475   006982                     u19941:
  7476   006982  EF06  F034         	goto	l16376
  7477   006986                     u19940:
  7478   006986                     l16410:
  7479                           
  7480                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  7481   006986  0E00               	movlw	0
  7482   006988                     l970:
  7483   006988  0012               	return		;funcret
  7484   00698A                     __end_of_remove_chain:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function _follow_path *****************
  7488 ;; Defined at:
  7489 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  dp              2   51[BANK1 ] PTR struct .
  7492 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  7493 ;;  path            2   53[BANK1 ] PTR const unsigned char 
  7494 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  fs              2   61[BANK1 ] PTR struct .
  7497 ;;		 -> FatFs(563), NULL(0), 
  7498 ;;  res             1   64[BANK1 ] enum E68
  7499 ;;  ns              1   63[BANK1 ] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      enum E68
  7502 ;; Registers used:
  7503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7509 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;Total ram usage:       14 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 16
  7516 ;; This function calls:
  7517 ;;		_create_name
  7518 ;;		_dir_find
  7519 ;;		_dir_sdi
  7520 ;;		_ld_clust
  7521 ;; This function is called by:
  7522 ;;		_f_open
  7523 ;;		_f_chdir
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text20
  7528   00620A                     __ptext20:
  7529                           	callstack 0
  7530   00620A                     _follow_path:
  7531                           	callstack 12
  7532   00620A                     
  7533                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  7534   00620A  0060  F4CF  FFD9   	movff	follow_path@dp,fsr2l
  7535   006210  0060  F4D3  FFDA   	movff	follow_path@dp+1,fsr2h
  7536   006216  006F FF78  F13D    	movff	postinc2,follow_path@fs
  7537   00621C  006F FF74  F13E    	movff	postdec2,follow_path@fs+1
  7538   006222                     
  7539                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  7540   006222  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7541   006228  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7542   00622E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7543   00622E  6AF8               	clrf	tblptru,c
  7544   006230                     	endif
  7545   006230                     	if	0	;tblptru may be non-zero
  7546   006230                     	endif
  7547   006230  0008               	tblrd		*
  7548   006232  50F5               	movf	tablat,w,c
  7549   006234  0A2F               	xorlw	47
  7550   006236  B4D8               	btfsc	status,2,c
  7551   006238  EF20  F031         	goto	u19971
  7552   00623C  EF22  F031         	goto	u19970
  7553   006240                     u19971:
  7554   006240  EF51  F031         	goto	l16444
  7555   006244                     u19970:
  7556   006244  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7557   00624A  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7558   006250                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7559   006250  6AF8               	clrf	tblptru,c
  7560   006252                     	endif
  7561   006252                     	if	0	;tblptru may be non-zero
  7562   006252                     	endif
  7563   006252  0008               	tblrd		*
  7564   006254  50F5               	movf	tablat,w,c
  7565   006256  0A5C               	xorlw	92
  7566   006258  B4D8               	btfsc	status,2,c
  7567   00625A  EF31  F031         	goto	u19981
  7568   00625E  EF33  F031         	goto	u19980
  7569   006262                     u19981:
  7570   006262  EF51  F031         	goto	l16444
  7571   006266                     u19980:
  7572   006266                     
  7573                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  7574   006266  0101               	movlb	1	; () banked
  7575   006268  EE20 F013          	lfsr	2,19
  7576   00626C  513D               	movf	follow_path@fs& (0+255),w,b
  7577   00626E  26D9               	addwf	fsr2l,f,c
  7578   006270  513E               	movf	(follow_path@fs+1)& (0+255),w,b
  7579   006272  22DA               	addwfc	fsr2h,f,c
  7580   006274  EE10 F006          	lfsr	1,6
  7581   006278  5133               	movf	follow_path@dp& (0+255),w,b
  7582   00627A  26E1               	addwf	fsr1l,f,c
  7583   00627C  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7584   00627E  22E2               	addwfc	fsr1h,f,c
  7585   006280  006F FF7B FFE6     	movff	postinc2,postinc1
  7586   006286  006F FF7B FFE6     	movff	postinc2,postinc1
  7587   00628C  006F FF7B FFE6     	movff	postinc2,postinc1
  7588   006292  006F FF7B FFE6     	movff	postinc2,postinc1
  7589                           
  7590                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  7591   006298  EF7E  F031         	goto	l16450
  7592   00629C                     l16442:
  7593   00629C  0101               	movlb	1	; () banked
  7594   00629E  4B35               	infsnz	follow_path@path& (0+255),f,b
  7595   0062A0  2B36               	incf	(follow_path@path+1)& (0+255),f,b
  7596   0062A2                     l16444:
  7597   0062A2  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7598   0062A8  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7599   0062AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7600   0062AE  6AF8               	clrf	tblptru,c
  7601   0062B0                     	endif
  7602   0062B0                     	if	0	;tblptru may be non-zero
  7603   0062B0                     	endif
  7604   0062B0  0008               	tblrd		*
  7605   0062B2  50F5               	movf	tablat,w,c
  7606   0062B4  0A2F               	xorlw	47
  7607   0062B6  B4D8               	btfsc	status,2,c
  7608   0062B8  EF60  F031         	goto	u19991
  7609   0062BC  EF62  F031         	goto	u19990
  7610   0062C0                     u19991:
  7611   0062C0  EF4E  F031         	goto	l16442
  7612   0062C4                     u19990:
  7613   0062C4  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7614   0062CA  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7615   0062D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7616   0062D0  6AF8               	clrf	tblptru,c
  7617   0062D2                     	endif
  7618   0062D2                     	if	0	;tblptru may be non-zero
  7619   0062D2                     	endif
  7620   0062D2  0008               	tblrd		*
  7621   0062D4  50F5               	movf	tablat,w,c
  7622   0062D6  0A5C               	xorlw	92
  7623   0062D8  B4D8               	btfsc	status,2,c
  7624   0062DA  EF71  F031         	goto	u20001
  7625   0062DE  EF73  F031         	goto	u20000
  7626   0062E2                     u20001:
  7627   0062E2  EF4E  F031         	goto	l16442
  7628   0062E6                     u20000:
  7629   0062E6                     
  7630                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  7631   0062E6  0101               	movlb	1	; () banked
  7632   0062E8  EE20 F006          	lfsr	2,6
  7633   0062EC  5133               	movf	follow_path@dp& (0+255),w,b
  7634   0062EE  26D9               	addwf	fsr2l,f,c
  7635   0062F0  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7636   0062F2  22DA               	addwfc	fsr2h,f,c
  7637   0062F4  6ADE               	clrf	postinc2,c
  7638   0062F6  6ADE               	clrf	postinc2,c
  7639   0062F8  6ADE               	clrf	postinc2,c
  7640   0062FA  6ADD               	clrf	postdec2,c
  7641   0062FC                     l16450:
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  7645   0062FC  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7646   006302  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7647   006308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7648   006308  6AF8               	clrf	tblptru,c
  7649   00630A                     	endif
  7650   00630A                     	if	0	;tblptru may be non-zero
  7651   00630A                     	endif
  7652   00630A  0E20               	movlw	32
  7653   00630C  0008               	tblrd		*
  7654   00630E  60F5               	cpfslt	tablat,c
  7655   006310  EF8C  F031         	goto	u20011
  7656   006314  EF8E  F031         	goto	u20010
  7657   006318                     u20011:
  7658   006318  EFA9  F031         	goto	l16456
  7659   00631C                     u20010:
  7660   00631C                     
  7661                           ; BSR set to: 1
  7662                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  7663   00631C  EE20 F027          	lfsr	2,39
  7664   006320  5133               	movf	follow_path@dp& (0+255),w,b
  7665   006322  26D9               	addwf	fsr2l,f,c
  7666   006324  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7667   006326  22DA               	addwfc	fsr2h,f,c
  7668   006328  0E80               	movlw	128
  7669   00632A  6EDF               	movwf	indf2,c
  7670   00632C                     
  7671                           ; BSR set to: 1
  7672                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  7673   00632C  C133  F0ED         	movff	follow_path@dp,dir_sdi@dp
  7674   006330  C134  F0EE         	movff	follow_path@dp+1,dir_sdi@dp+1
  7675   006334  0E00               	movlw	0
  7676   006336  0100               	movlb	0	; () banked
  7677   006338  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  7678   00633A  0E00               	movlw	0
  7679   00633C  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  7680   00633E  0E00               	movlw	0
  7681   006340  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  7682   006342  0E00               	movlw	0
  7683   006344  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  7684   006346  ECF0  F029         	call	_dir_sdi	;wreg free
  7685   00634A  0101               	movlb	1	; () banked
  7686   00634C  6F40               	movwf	follow_path@res& (0+255),b
  7687                           
  7688                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  7689   00634E  EF5D  F032         	goto	l16490
  7690   006352                     l16456:
  7691                           
  7692                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  7693   006352  C133  F068         	movff	follow_path@dp,create_name@dp
  7694   006356  C134  F069         	movff	follow_path@dp+1,create_name@dp+1
  7695   00635A  0E35               	movlw	low follow_path@path
  7696   00635C  0100               	movlb	0	; () banked
  7697   00635E  6F6A               	movwf	create_name@path& (0+255),b
  7698   006360  0E01               	movlw	high follow_path@path
  7699   006362  6F6B               	movwf	(create_name@path+1)& (0+255),b
  7700   006364  EC05  F01F         	call	_create_name	;wreg free
  7701   006368  0101               	movlb	1	; () banked
  7702   00636A  6F40               	movwf	follow_path@res& (0+255),b
  7703   00636C                     
  7704                           ; BSR set to: 1
  7705                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  7706   00636C  5140               	movf	follow_path@res& (0+255),w,b
  7707   00636E  B4D8               	btfsc	status,2,c
  7708   006370  EFBC  F031         	goto	u20021
  7709   006374  EFBE  F031         	goto	u20020
  7710   006378                     u20021:
  7711   006378  EFC0  F031         	goto	l16462
  7712   00637C                     u20020:
  7713   00637C  EF5D  F032         	goto	l16490
  7714   006380                     l16462:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  7718   006380  C133  F12D         	movff	follow_path@dp,dir_find@dp
  7719   006384  C134  F12E         	movff	follow_path@dp+1,dir_find@dp+1
  7720   006388  ECAF  F03A         	call	_dir_find	;wreg free
  7721   00638C  0101               	movlb	1	; () banked
  7722   00638E  6F40               	movwf	follow_path@res& (0+255),b
  7723   006390                     
  7724                           ; BSR set to: 1
  7725                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  7726   006390  EE20 F027          	lfsr	2,39
  7727   006394  5133               	movf	follow_path@dp& (0+255),w,b
  7728   006396  26D9               	addwf	fsr2l,f,c
  7729   006398  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7730   00639A  22DA               	addwfc	fsr2h,f,c
  7731   00639C  50DF               	movf	indf2,w,c
  7732   00639E  6F3F               	movwf	follow_path@ns& (0+255),b
  7733   0063A0                     
  7734                           ; BSR set to: 1
  7735                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  7736   0063A0  5140               	movf	follow_path@res& (0+255),w,b
  7737   0063A2  B4D8               	btfsc	status,2,c
  7738   0063A4  EFD6  F031         	goto	u20031
  7739   0063A8  EFD8  F031         	goto	u20030
  7740   0063AC                     u20031:
  7741   0063AC  EF08  F032         	goto	l1173
  7742   0063B0                     u20030:
  7743   0063B0                     
  7744                           ; BSR set to: 1
  7745                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  7746   0063B0  0E04               	movlw	4
  7747   0063B2  1940               	xorwf	follow_path@res& (0+255),w,b
  7748   0063B4  A4D8               	btfss	status,2,c
  7749   0063B6  EFDF  F031         	goto	u20041
  7750   0063BA  EFE1  F031         	goto	u20040
  7751   0063BE                     u20041:
  7752   0063BE  EF5D  F032         	goto	l16490
  7753   0063C2                     u20040:
  7754   0063C2                     
  7755                           ; BSR set to: 1
  7756   0063C2  AB3F               	btfss	follow_path@ns& (0+255),5,b
  7757   0063C4  EFE6  F031         	goto	u20051
  7758   0063C8  EFE8  F031         	goto	u20050
  7759   0063CC                     u20051:
  7760   0063CC  EFFD  F031         	goto	l1175
  7761   0063D0                     u20050:
  7762   0063D0                     
  7763                           ; BSR set to: 1
  7764                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  7765   0063D0  B53F               	btfsc	follow_path@ns& (0+255),2,b
  7766   0063D2  EFED  F031         	goto	u20061
  7767   0063D6  EFEF  F031         	goto	u20060
  7768   0063DA                     u20061:
  7769   0063DA  EFF1  F031         	goto	l16476
  7770   0063DE                     u20060:
  7771   0063DE  EFA9  F031         	goto	l16456
  7772   0063E2                     l16476:
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  7776   0063E2  EE20 F027          	lfsr	2,39
  7777   0063E6  5133               	movf	follow_path@dp& (0+255),w,b
  7778   0063E8  26D9               	addwf	fsr2l,f,c
  7779   0063EA  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7780   0063EC  22DA               	addwfc	fsr2h,f,c
  7781   0063EE  0E80               	movlw	128
  7782   0063F0  6EDF               	movwf	indf2,c
  7783   0063F2                     
  7784                           ; BSR set to: 1
  7785                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  7786   0063F2  0E00               	movlw	0
  7787   0063F4  6F40               	movwf	follow_path@res& (0+255),b
  7788                           
  7789                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  7790   0063F6  EF5D  F032         	goto	l16490
  7791   0063FA                     l1175:
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  7795   0063FA  B53F               	btfsc	follow_path@ns& (0+255),2,b
  7796   0063FC  EF02  F032         	goto	u20071
  7797   006400  EF04  F032         	goto	u20070
  7798   006404                     u20071:
  7799   006404  EF5D  F032         	goto	l16490
  7800   006408                     u20070:
  7801   006408                     l16480:
  7802                           
  7803                           ; BSR set to: 1
  7804   006408  0E05               	movlw	5
  7805   00640A  6F40               	movwf	follow_path@res& (0+255),b
  7806   00640C  EF5D  F032         	goto	l16490
  7807   006410                     l1173:
  7808                           
  7809                           ; BSR set to: 1
  7810                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  7811   006410  A53F               	btfss	follow_path@ns& (0+255),2,b
  7812   006412  EF0D  F032         	goto	u20081
  7813   006416  EF0F  F032         	goto	u20080
  7814   00641A                     u20081:
  7815   00641A  EF11  F032         	goto	l16484
  7816   00641E                     u20080:
  7817   00641E  EF5D  F032         	goto	l16490
  7818   006422                     l16484:
  7819                           
  7820                           ; BSR set to: 1
  7821                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  7822   006422  EE20 F004          	lfsr	2,4
  7823   006426  5133               	movf	follow_path@dp& (0+255),w,b
  7824   006428  26D9               	addwf	fsr2l,f,c
  7825   00642A  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7826   00642C  22DA               	addwfc	fsr2h,f,c
  7827   00642E  B8DF               	btfsc	indf2,4,c
  7828   006430  EF1C  F032         	goto	u20091
  7829   006434  EF1E  F032         	goto	u20090
  7830   006438                     u20091:
  7831   006438  EF20  F032         	goto	l16488
  7832   00643C                     u20090:
  7833   00643C  EF04  F032         	goto	l16480
  7834   006440                     l16488:
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  7838   006440  C13D  F067         	movff	follow_path@fs,ld_clust@fs
  7839   006444  C13E  F068         	movff	follow_path@fs+1,ld_clust@fs+1
  7840   006448  EE20 F00E          	lfsr	2,14
  7841   00644C  5133               	movf	follow_path@dp& (0+255),w,b
  7842   00644E  26D9               	addwf	fsr2l,f,c
  7843   006450  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7844   006452  22DA               	addwfc	fsr2h,f,c
  7845   006454  006F FF78  F137    	movff	postinc2,??_follow_path
  7846   00645A  006F FF74  F138    	movff	postdec2,??_follow_path+1
  7847   006460  0EFF               	movlw	255
  7848   006462  1537               	andwf	??_follow_path& (0+255),w,b
  7849   006464  6F39               	movwf	(??_follow_path+2)& (0+255),b
  7850   006466  0E01               	movlw	1
  7851   006468  1538               	andwf	(??_follow_path+1)& (0+255),w,b
  7852   00646A  6F3A               	movwf	(??_follow_path+3)& (0+255),b
  7853   00646C  5139               	movf	(??_follow_path+2)& (0+255),w,b
  7854   00646E  253D               	addwf	follow_path@fs& (0+255),w,b
  7855   006470  6F3B               	movwf	(??_follow_path+4)& (0+255),b
  7856   006472  513A               	movf	(??_follow_path+3)& (0+255),w,b
  7857   006474  213E               	addwfc	(follow_path@fs+1)& (0+255),w,b
  7858   006476  6F3C               	movwf	(??_follow_path+5)& (0+255),b
  7859   006478  0E33               	movlw	51
  7860   00647A  253B               	addwf	(??_follow_path+4)& (0+255),w,b
  7861   00647C  0100               	movlb	0	; () banked
  7862   00647E  6F69               	movwf	ld_clust@dir& (0+255),b
  7863   006480  0E00               	movlw	0
  7864   006482  0101               	movlb	1	; () banked
  7865   006484  213C               	addwfc	(??_follow_path+5)& (0+255),w,b
  7866   006486  0100               	movlb	0	; () banked
  7867   006488  6F6A               	movwf	(ld_clust@dir+1)& (0+255),b
  7868   00648A  ECD3  F049         	call	_ld_clust	;wreg free
  7869   00648E  0101               	movlb	1	; () banked
  7870   006490  EE20 F006          	lfsr	2,6
  7871   006494  5133               	movf	follow_path@dp& (0+255),w,b
  7872   006496  26D9               	addwf	fsr2l,f,c
  7873   006498  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7874   00649A  22DA               	addwfc	fsr2h,f,c
  7875   00649C  0100               	movlb	0	; () banked
  7876   00649E  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  7877   0064A4  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  7878   0064AA  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  7879   0064B0  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  7880   0064B6  EFA9  F031         	goto	l16456
  7881   0064BA                     l16490:
  7882                           
  7883                           ; BSR set to: 1
  7884                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  7885   0064BA  5140               	movf	follow_path@res& (0+255),w,b
  7886   0064BC                     
  7887                           ; BSR set to: 1
  7888   0064BC  0012               	return		;funcret
  7889   0064BE                     __end_of_follow_path:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _ld_clust *****************
  7893 ;; Defined at:
  7894 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  fs              2    7[BANK0 ] PTR struct .
  7897 ;;		 -> FatFs(563), NULL(0), 
  7898 ;;  dir             2    9[BANK0 ] PTR const unsigned char 
  7899 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  cl              4   15[BANK0 ] unsigned long 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4    7[BANK0 ] unsigned long 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;Total ram usage:       12 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 6
  7918 ;; This function calls:
  7919 ;;		_ld_word
  7920 ;; This function is called by:
  7921 ;;		_follow_path
  7922 ;;		_f_open
  7923 ;;		_f_chdir
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text21
  7928   0093A6                     __ptext21:
  7929                           	callstack 0
  7930   0093A6                     _ld_clust:
  7931                           	callstack 22
  7932   0093A6                     
  7933                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  7934   0093A6  0E1A               	movlw	26
  7935   0093A8  0100               	movlb	0	; () banked
  7936   0093AA  2569               	addwf	ld_clust@dir& (0+255),w,b
  7937   0093AC  6F60               	movwf	ld_word@ptr& (0+255),b
  7938   0093AE  0E00               	movlw	0
  7939   0093B0  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  7940   0093B2  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  7941   0093B4  ECE3  F04F         	call	_ld_word	;wreg free
  7942   0093B8  0100               	movlb	0	; () banked
  7943   0093BA  C060  F06F         	movff	?_ld_word,ld_clust@cl
  7944   0093BE  C061  F070         	movff	?_ld_word+1,ld_clust@cl+1
  7945   0093C2  6B71               	clrf	(ld_clust@cl+2)& (0+255),b
  7946   0093C4  6B72               	clrf	(ld_clust@cl+3)& (0+255),b
  7947   0093C6                     
  7948                           ; BSR set to: 0
  7949                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  7950   0093C6  0060  F19F  FFD9   	movff	ld_clust@fs,fsr2l
  7951   0093CC  0060  F1A3  FFDA   	movff	ld_clust@fs+1,fsr2h
  7952   0093D2  0E03               	movlw	3
  7953   0093D4  18DE               	xorwf	postinc2,w,c
  7954   0093D6  A4D8               	btfss	status,2,c
  7955   0093D8  EFF0  F049         	goto	u19221
  7956   0093DC  EFF2  F049         	goto	u19220
  7957   0093E0                     u19221:
  7958   0093E0  EF0F  F04A         	goto	l15960
  7959   0093E4                     u19220:
  7960   0093E4                     
  7961                           ; BSR set to: 0
  7962                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  7963   0093E4  0E14               	movlw	20
  7964   0093E6  2569               	addwf	ld_clust@dir& (0+255),w,b
  7965   0093E8  6F60               	movwf	ld_word@ptr& (0+255),b
  7966   0093EA  0E00               	movlw	0
  7967   0093EC  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  7968   0093EE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  7969   0093F0  ECE3  F04F         	call	_ld_word	;wreg free
  7970   0093F4  0100               	movlb	0	; () banked
  7971   0093F6  5160               	movf	?_ld_word& (0+255),w,b
  7972   0093F8  6F6B               	movwf	??_ld_clust& (0+255),b
  7973   0093FA  5161               	movf	(?_ld_word+1)& (0+255),w,b
  7974   0093FC  6F6C               	movwf	(??_ld_clust+1)& (0+255),b
  7975   0093FE  6B6D               	clrf	(??_ld_clust+2)& (0+255),b
  7976   009400  6B6E               	clrf	(??_ld_clust+3)& (0+255),b
  7977   009402  C06C  F06E         	movff	??_ld_clust+1,??_ld_clust+3
  7978   009406  C06B  F06D         	movff	??_ld_clust,??_ld_clust+2
  7979   00940A  6B6C               	clrf	(??_ld_clust+1)& (0+255),b
  7980   00940C  6B6B               	clrf	??_ld_clust& (0+255),b
  7981   00940E  516B               	movf	??_ld_clust& (0+255),w,b
  7982   009410  136F               	iorwf	ld_clust@cl& (0+255),f,b
  7983   009412  516C               	movf	(??_ld_clust+1)& (0+255),w,b
  7984   009414  1370               	iorwf	(ld_clust@cl+1)& (0+255),f,b
  7985   009416  516D               	movf	(??_ld_clust+2)& (0+255),w,b
  7986   009418  1371               	iorwf	(ld_clust@cl+2)& (0+255),f,b
  7987   00941A  516E               	movf	(??_ld_clust+3)& (0+255),w,b
  7988   00941C  1372               	iorwf	(ld_clust@cl+3)& (0+255),f,b
  7989   00941E                     l15960:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  7993   00941E  C06F  F067         	movff	ld_clust@cl,?_ld_clust
  7994   009422  C070  F068         	movff	ld_clust@cl+1,?_ld_clust+1
  7995   009426  C071  F069         	movff	ld_clust@cl+2,?_ld_clust+2
  7996   00942A  C072  F06A         	movff	ld_clust@cl+3,?_ld_clust+3
  7997   00942E                     
  7998                           ; BSR set to: 0
  7999   00942E  0012               	return		;funcret
  8000   009430                     __end_of_ld_clust:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _dir_find *****************
  8004 ;; Defined at:
  8005 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  dp              2   45[BANK1 ] PTR struct .
  8008 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  fs              2   47[BANK1 ] PTR struct .
  8011 ;;		 -> FatFs(563), NULL(0), 
  8012 ;;  res             1   50[BANK1 ] enum E68
  8013 ;;  c               1   49[BANK1 ] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      enum E68
  8016 ;; Registers used:
  8017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8023 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8025 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;Total ram usage:        8 bytes
  8028 ;; Hardware stack levels used: 1
  8029 ;; Hardware stack levels required when called: 15
  8030 ;; This function calls:
  8031 ;;		_dir_next
  8032 ;;		_dir_sdi
  8033 ;;		_mem_cmp
  8034 ;;		_move_window
  8035 ;; This function is called by:
  8036 ;;		_follow_path
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text22
  8041   00755E                     __ptext22:
  8042                           	callstack 0
  8043   00755E                     _dir_find:
  8044                           	callstack 12
  8045   00755E                     
  8046                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  8047   00755E  0060  F4B7  FFD9   	movff	dir_find@dp,fsr2l
  8048   007564  0060  F4BB  FFDA   	movff	dir_find@dp+1,fsr2h
  8049   00756A  006F FF78  F12F    	movff	postinc2,dir_find@fs
  8050   007570  006F FF74  F130    	movff	postdec2,dir_find@fs+1
  8051   007576                     
  8052                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  8053   007576  C12D  F0ED         	movff	dir_find@dp,dir_sdi@dp
  8054   00757A  C12E  F0EE         	movff	dir_find@dp+1,dir_sdi@dp+1
  8055   00757E  0E00               	movlw	0
  8056   007580  0100               	movlb	0	; () banked
  8057   007582  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  8058   007584  0E00               	movlw	0
  8059   007586  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  8060   007588  0E00               	movlw	0
  8061   00758A  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  8062   00758C  0E00               	movlw	0
  8063   00758E  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  8064   007590  ECF0  F029         	call	_dir_sdi	;wreg free
  8065   007594  0101               	movlb	1	; () banked
  8066   007596  6F32               	movwf	dir_find@res& (0+255),b
  8067   007598                     
  8068                           ; BSR set to: 1
  8069                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  8070   007598  5132               	movf	dir_find@res& (0+255),w,b
  8071   00759A  B4D8               	btfsc	status,2,c
  8072   00759C  EFD2  F03A         	goto	u19241
  8073   0075A0  EFD4  F03A         	goto	u19240
  8074   0075A4                     u19241:
  8075   0075A4  EFD8  F03A         	goto	l15980
  8076   0075A8                     u19240:
  8077   0075A8                     l15976:
  8078   0075A8  0101               	movlb	1	; () banked
  8079   0075AA  5132               	movf	dir_find@res& (0+255),w,b
  8080   0075AC  EF82  F03B         	goto	l1106
  8081   0075B0                     l15980:
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  8085   0075B0  C12F  F0C8         	movff	dir_find@fs,move_window@fs
  8086   0075B4  C130  F0C9         	movff	dir_find@fs+1,move_window@fs+1
  8087   0075B8  EE20 F016          	lfsr	2,22
  8088   0075BC  512D               	movf	dir_find@dp& (0+255),w,b
  8089   0075BE  26D9               	addwf	fsr2l,f,c
  8090   0075C0  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8091   0075C2  22DA               	addwfc	fsr2h,f,c
  8092   0075C4  006F FF78  F0CA    	movff	postinc2,move_window@sector
  8093   0075CA  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  8094   0075D0  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  8095   0075D6  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  8096   0075DC  ECAF  F046         	call	_move_window	;wreg free
  8097   0075E0  0101               	movlb	1	; () banked
  8098   0075E2  6F32               	movwf	dir_find@res& (0+255),b
  8099   0075E4                     
  8100                           ; BSR set to: 1
  8101                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  8102   0075E4  5132               	movf	dir_find@res& (0+255),w,b
  8103   0075E6  B4D8               	btfsc	status,2,c
  8104   0075E8  EFF8  F03A         	goto	u19251
  8105   0075EC  EFFA  F03A         	goto	u19250
  8106   0075F0                     u19251:
  8107   0075F0  EFFC  F03A         	goto	l15986
  8108   0075F4                     u19250:
  8109   0075F4  EFD4  F03A         	goto	l15976
  8110   0075F8                     l15986:
  8111                           
  8112                           ; BSR set to: 1
  8113                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  8114   0075F8  EE20 F01A          	lfsr	2,26
  8115   0075FC  512D               	movf	dir_find@dp& (0+255),w,b
  8116   0075FE  26D9               	addwf	fsr2l,f,c
  8117   007600  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8118   007602  22DA               	addwfc	fsr2h,f,c
  8119   007604  006F FF78  F0FE    	movff	postinc2,??_dir_find
  8120   00760A  006F FF74  F0FF    	movff	postdec2,??_dir_find+1
  8121   007610  0060  F3FB  FFD9   	movff	??_dir_find,fsr2l
  8122   007616  0060  F3FF  FFDA   	movff	??_dir_find+1,fsr2h
  8123   00761C  50DF               	movf	indf2,w,c
  8124   00761E  6F31               	movwf	dir_find@c& (0+255),b
  8125   007620                     
  8126                           ; BSR set to: 1
  8127                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  8128   007620  5131               	movf	dir_find@c& (0+255),w,b
  8129   007622  A4D8               	btfss	status,2,c
  8130   007624  EF16  F03B         	goto	u19261
  8131   007628  EF18  F03B         	goto	u19260
  8132   00762C                     u19261:
  8133   00762C  EF1C  F03B         	goto	l15992
  8134   007630                     u19260:
  8135   007630                     
  8136                           ; BSR set to: 1
  8137   007630  0E04               	movlw	4
  8138   007632  6F32               	movwf	dir_find@res& (0+255),b
  8139   007634  EFD4  F03A         	goto	l15976
  8140   007638                     l15992:
  8141                           
  8142                           ; BSR set to: 1
  8143                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  8144   007638  EE20 F004          	lfsr	2,4
  8145   00763C  512D               	movf	dir_find@dp& (0+255),w,b
  8146   00763E  26D9               	addwf	fsr2l,f,c
  8147   007640  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8148   007642  22DA               	addwfc	fsr2h,f,c
  8149   007644  EE10 F01A          	lfsr	1,26
  8150   007648  512D               	movf	dir_find@dp& (0+255),w,b
  8151   00764A  26E1               	addwf	fsr1l,f,c
  8152   00764C  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8153   00764E  22E2               	addwfc	fsr1h,f,c
  8154   007650  EE00 F00B          	lfsr	0,11
  8155   007654  50E6               	movf	postinc1,w,c
  8156   007656  26E9               	addwf	fsr0l,f,c
  8157   007658  50E5               	movf	postdec1,w,c
  8158   00765A  22EA               	addwfc	fsr0h,f,c
  8159   00765C  50EF               	movf	indf0,w,c
  8160   00765E  0B3F               	andlw	63
  8161   007660  6EDF               	movwf	indf2,c
  8162   007662                     
  8163                           ; BSR set to: 1
  8164                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  8165   007662  EE20 F01A          	lfsr	2,26
  8166   007666  512D               	movf	dir_find@dp& (0+255),w,b
  8167   007668  26D9               	addwf	fsr2l,f,c
  8168   00766A  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8169   00766C  22DA               	addwfc	fsr2h,f,c
  8170   00766E  EE10 F00B          	lfsr	1,11
  8171   007672  50DE               	movf	postinc2,w,c
  8172   007674  26E1               	addwf	fsr1l,f,c
  8173   007676  50DD               	movf	postdec2,w,c
  8174   007678  22E2               	addwfc	fsr1h,f,c
  8175   00767A  B6E7               	btfsc	indf1,3,c
  8176   00767C  EF42  F03B         	goto	u19271
  8177   007680  EF44  F03B         	goto	u19270
  8178   007684                     u19271:
  8179   007684  EF6B  F03B         	goto	l16000
  8180   007688                     u19270:
  8181   007688                     
  8182                           ; BSR set to: 1
  8183   007688  EE20 F01A          	lfsr	2,26
  8184   00768C  512D               	movf	dir_find@dp& (0+255),w,b
  8185   00768E  26D9               	addwf	fsr2l,f,c
  8186   007690  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8187   007692  22DA               	addwfc	fsr2h,f,c
  8188   007694  006F FF78  F060    	movff	postinc2,mem_cmp@dst
  8189   00769A  006F FF74  F061    	movff	postdec2,mem_cmp@dst+1
  8190   0076A0  0E1C               	movlw	28
  8191   0076A2  252D               	addwf	dir_find@dp& (0+255),w,b
  8192   0076A4  0100               	movlb	0	; () banked
  8193   0076A6  6F62               	movwf	mem_cmp@src& (0+255),b
  8194   0076A8  0E00               	movlw	0
  8195   0076AA  0101               	movlb	1	; () banked
  8196   0076AC  212E               	addwfc	(dir_find@dp+1)& (0+255),w,b
  8197   0076AE  0100               	movlb	0	; () banked
  8198   0076B0  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
  8199   0076B2  0E00               	movlw	0
  8200   0076B4  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
  8201   0076B6  0E0B               	movlw	11
  8202   0076B8  6F64               	movwf	mem_cmp@cnt& (0+255),b
  8203   0076BA  EC42  F049         	call	_mem_cmp	;wreg free
  8204   0076BE  0100               	movlb	0	; () banked
  8205   0076C0  5160               	movf	?_mem_cmp& (0+255),w,b
  8206   0076C2  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
  8207   0076C4  A4D8               	btfss	status,2,c
  8208   0076C6  EF67  F03B         	goto	u19281
  8209   0076CA  EF69  F03B         	goto	u19280
  8210   0076CE                     u19281:
  8211   0076CE  EF6B  F03B         	goto	l16000
  8212   0076D2                     u19280:
  8213   0076D2  EFD4  F03A         	goto	l15976
  8214   0076D6                     l16000:
  8215                           
  8216                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  8217   0076D6  C12D  F0FA         	movff	dir_find@dp,dir_next@dp
  8218   0076DA  C12E  F0FB         	movff	dir_find@dp+1,dir_next@dp+1
  8219   0076DE  0E00               	movlw	0
  8220   0076E0  0100               	movlb	0	; () banked
  8221   0076E2  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  8222   0076E4  0E00               	movlw	0
  8223   0076E6  6FFC               	movwf	dir_next@stretch& (0+255),b
  8224   0076E8  EC5A  F021         	call	_dir_next	;wreg free
  8225   0076EC  0101               	movlb	1	; () banked
  8226   0076EE  6F32               	movwf	dir_find@res& (0+255),b
  8227   0076F0                     
  8228                           ; BSR set to: 1
  8229                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  8230   0076F0  5132               	movf	dir_find@res& (0+255),w,b
  8231   0076F2  B4D8               	btfsc	status,2,c
  8232   0076F4  EF7E  F03B         	goto	u19291
  8233   0076F8  EF80  F03B         	goto	u19290
  8234   0076FC                     u19291:
  8235   0076FC  EFD8  F03A         	goto	l15980
  8236   007700                     u19290:
  8237   007700  EFD4  F03A         	goto	l15976
  8238   007704                     l1106:
  8239                           
  8240                           ; BSR set to: 1
  8241   007704  0012               	return		;funcret
  8242   007706                     __end_of_dir_find:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _create_name *****************
  8246 ;; Defined at:
  8247 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  dp              2    8[BANK0 ] PTR struct .
  8250 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8251 ;;  path            2   10[BANK0 ] PTR PTR const unsigned c
  8252 ;;		 -> follow_path@path(2), 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  si              2   27[BANK0 ] unsigned int 
  8255 ;;  sfn             2   25[BANK0 ] PTR unsigned char 
  8256 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
  8257 ;;  i               2   23[BANK0 ] unsigned int 
  8258 ;;  p               2   21[BANK0 ] PTR const unsigned char 
  8259 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  8260 ;;  ni              2   19[BANK0 ] unsigned int 
  8261 ;;  c               1   29[BANK0 ] unsigned char 
  8262 ;;  d               1   18[BANK0 ] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      enum E68
  8265 ;; Registers used:
  8266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;Total ram usage:       22 bytes
  8277 ;; Hardware stack levels used: 1
  8278 ;; Hardware stack levels required when called: 6
  8279 ;; This function calls:
  8280 ;;		_chk_chr
  8281 ;;		_dbc_1st
  8282 ;;		_dbc_2nd
  8283 ;;		_mem_set
  8284 ;; This function is called by:
  8285 ;;		_follow_path
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text23
  8290   003E0A                     __ptext23:
  8291                           	callstack 0
  8292   003E0A                     _create_name:
  8293                           	callstack 21
  8294   003E0A                     
  8295                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  8296   003E0A  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8297   003E10  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8298   003E16  006F FF78  F075    	movff	postinc2,create_name@p
  8299   003E1C  006F FF74  F076    	movff	postdec2,create_name@p+1
  8300   003E22  0E1C               	movlw	28
  8301   003E24  0100               	movlb	0	; () banked
  8302   003E26  2568               	addwf	create_name@dp& (0+255),w,b
  8303   003E28  6F79               	movwf	create_name@sfn& (0+255),b
  8304   003E2A  0E00               	movlw	0
  8305   003E2C  2169               	addwfc	(create_name@dp+1)& (0+255),w,b
  8306   003E2E  6F7A               	movwf	(create_name@sfn+1)& (0+255),b
  8307   003E30                     
  8308                           ; BSR set to: 0
  8309                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  8310   003E30  C079  F060         	movff	create_name@sfn,mem_set@dst
  8311   003E34  C07A  F061         	movff	create_name@sfn+1,mem_set@dst+1
  8312   003E38  0E00               	movlw	0
  8313   003E3A  6F63               	movwf	(mem_set@val+1)& (0+255),b
  8314   003E3C  0E20               	movlw	32
  8315   003E3E  6F62               	movwf	mem_set@val& (0+255),b
  8316   003E40  0E00               	movlw	0
  8317   003E42  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  8318   003E44  0E0B               	movlw	11
  8319   003E46  6F64               	movwf	mem_set@cnt& (0+255),b
  8320   003E48  EC5C  F050         	call	_mem_set	;wreg free
  8321   003E4C                     
  8322                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  8323   003E4C  0E00               	movlw	0
  8324   003E4E  0100               	movlb	0	; () banked
  8325   003E50  6F78               	movwf	(create_name@i+1)& (0+255),b
  8326   003E52  0E00               	movlw	0
  8327   003E54  6F77               	movwf	create_name@i& (0+255),b
  8328   003E56  C077  F07B         	movff	create_name@i,create_name@si
  8329   003E5A  C078  F07C         	movff	create_name@i+1,create_name@si+1
  8330   003E5E                     
  8331                           ; BSR set to: 0
  8332   003E5E  0E00               	movlw	0
  8333   003E60  6F74               	movwf	(create_name@ni+1)& (0+255),b
  8334   003E62  0E08               	movlw	8
  8335   003E64  6F73               	movwf	create_name@ni& (0+255),b
  8336   003E66                     
  8337                           ; BSR set to: 0
  8338                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  8339   003E66  517B               	movf	create_name@si& (0+255),w,b
  8340   003E68  2575               	addwf	create_name@p& (0+255),w,b
  8341   003E6A  6F6C               	movwf	??_create_name& (0+255),b
  8342   003E6C  517C               	movf	(create_name@si+1)& (0+255),w,b
  8343   003E6E  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8344   003E70  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8345   003E72  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8346   003E78  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8347   003E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8348   003E7E  6AF8               	clrf	tblptru,c
  8349   003E80                     	endif
  8350   003E80                     	if	0	;tblptru may be non-zero
  8351   003E80                     	endif
  8352   003E80  0008               	tblrd		*
  8353   003E82  50F5               	movf	tablat,w,c
  8354   003E84  0A2E               	xorlw	46
  8355   003E86  A4D8               	btfss	status,2,c
  8356   003E88  EF48  F01F         	goto	u19301
  8357   003E8C  EF4A  F01F         	goto	u19300
  8358   003E90                     u19301:
  8359   003E90  EFCD  F01F         	goto	l16056
  8360   003E94                     u19300:
  8361   003E94                     l16020:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  8365   003E94  517B               	movf	create_name@si& (0+255),w,b
  8366   003E96  2575               	addwf	create_name@p& (0+255),w,b
  8367   003E98  6F6C               	movwf	??_create_name& (0+255),b
  8368   003E9A  517C               	movf	(create_name@si+1)& (0+255),w,b
  8369   003E9C  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8370   003E9E  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8371   003EA0  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8372   003EA6  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8373   003EAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8374   003EAC  6AF8               	clrf	tblptru,c
  8375   003EAE                     	endif
  8376   003EAE                     	if	0	;tblptru may be non-zero
  8377   003EAE                     	endif
  8378   003EAE  0008               	tblrd		*
  8379   003EB0  006F FFD4  F07D    	movff	tablat,create_name@c
  8380   003EB6                     
  8381                           ; BSR set to: 0
  8382   003EB6  4B7B               	infsnz	create_name@si& (0+255),f,b
  8383   003EB8  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8384   003EBA                     
  8385                           ; BSR set to: 0
  8386                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  8387   003EBA  0E2E               	movlw	46
  8388   003EBC  197D               	xorwf	create_name@c& (0+255),w,b
  8389   003EBE  A4D8               	btfss	status,2,c
  8390   003EC0  EF64  F01F         	goto	u19311
  8391   003EC4  EF66  F01F         	goto	u19310
  8392   003EC8                     u19311:
  8393   003EC8  EF80  F01F         	goto	l16032
  8394   003ECC                     u19310:
  8395   003ECC                     
  8396                           ; BSR set to: 0
  8397   003ECC  517C               	movf	(create_name@si+1)& (0+255),w,b
  8398   003ECE  E109               	bnz	u19320
  8399   003ED0  0E03               	movlw	3
  8400   003ED2  5D7B               	subwf	create_name@si& (0+255),w,b
  8401   003ED4  A0D8               	btfss	status,0,c
  8402   003ED6  EF6F  F01F         	goto	u19321
  8403   003EDA  EF71  F01F         	goto	u19320
  8404   003EDE                     u19321:
  8405   003EDE  EF73  F01F         	goto	l16028
  8406   003EE2                     u19320:
  8407   003EE2  EF80  F01F         	goto	l16032
  8408   003EE6                     l16028:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  8412   003EE6  5177               	movf	create_name@i& (0+255),w,b
  8413   003EE8  2579               	addwf	create_name@sfn& (0+255),w,b
  8414   003EEA  6ED9               	movwf	fsr2l,c
  8415   003EEC  5178               	movf	(create_name@i+1)& (0+255),w,b
  8416   003EEE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8417   003EF0  6EDA               	movwf	fsr2h,c
  8418   003EF2  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8419   003EF8                     
  8420                           ; BSR set to: 0
  8421   003EF8  4B77               	infsnz	create_name@i& (0+255),f,b
  8422   003EFA  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8423                           
  8424                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  8425   003EFC  EF4A  F01F         	goto	l16020
  8426   003F00                     l16032:
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  8430   003F00  0E2F               	movlw	47
  8431   003F02  197D               	xorwf	create_name@c& (0+255),w,b
  8432   003F04  B4D8               	btfsc	status,2,c
  8433   003F06  EF87  F01F         	goto	u19331
  8434   003F0A  EF89  F01F         	goto	u19330
  8435   003F0E                     u19331:
  8436   003F0E  EF9D  F01F         	goto	l16042
  8437   003F12                     u19330:
  8438   003F12                     
  8439                           ; BSR set to: 0
  8440   003F12  0E5C               	movlw	92
  8441   003F14  197D               	xorwf	create_name@c& (0+255),w,b
  8442   003F16  B4D8               	btfsc	status,2,c
  8443   003F18  EF90  F01F         	goto	u19341
  8444   003F1C  EF92  F01F         	goto	u19340
  8445   003F20                     u19341:
  8446   003F20  EF9D  F01F         	goto	l16042
  8447   003F24                     u19340:
  8448   003F24                     
  8449                           ; BSR set to: 0
  8450   003F24  0E20               	movlw	32
  8451   003F26  657D               	cpfsgt	create_name@c& (0+255),b
  8452   003F28  EF98  F01F         	goto	u19351
  8453   003F2C  EF9A  F01F         	goto	u19350
  8454   003F30                     u19351:
  8455   003F30  EF9D  F01F         	goto	l16042
  8456   003F34                     u19350:
  8457   003F34                     l16038:
  8458                           
  8459                           ; BSR set to: 0
  8460   003F34  0E06               	movlw	6
  8461   003F36  EF59  F021         	goto	l1126
  8462   003F3A                     l16042:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  8466   003F3A  517B               	movf	create_name@si& (0+255),w,b
  8467   003F3C  2575               	addwf	create_name@p& (0+255),w,b
  8468   003F3E  6F6C               	movwf	??_create_name& (0+255),b
  8469   003F40  517C               	movf	(create_name@si+1)& (0+255),w,b
  8470   003F42  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8471   003F44  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8472   003F46  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8473   003F4C  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8474   003F52  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  8475   003F58  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  8476   003F5E                     
  8477                           ; BSR set to: 0
  8478                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  8479   003F5E  0E20               	movlw	32
  8480   003F60  657D               	cpfsgt	create_name@c& (0+255),b
  8481   003F62  EFB5  F01F         	goto	u19361
  8482   003F66  EFB7  F01F         	goto	u19360
  8483   003F6A                     u19361:
  8484   003F6A  EFBD  F01F         	goto	l16048
  8485   003F6E                     u19360:
  8486   003F6E                     
  8487                           ; BSR set to: 0
  8488   003F6E  0E00               	movlw	0
  8489   003F70  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  8490   003F72  0E20               	movlw	32
  8491   003F74  6F6E               	movwf	_create_name$2961& (0+255),b
  8492   003F76  EFC1  F01F         	goto	l16050
  8493   003F7A                     l16048:
  8494                           
  8495                           ; BSR set to: 0
  8496   003F7A  0E00               	movlw	0
  8497   003F7C  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  8498   003F7E  0E24               	movlw	36
  8499   003F80  6F6E               	movwf	_create_name$2961& (0+255),b
  8500   003F82                     l16050:
  8501                           
  8502                           ; BSR set to: 0
  8503   003F82  EE20 F00B          	lfsr	2,11
  8504   003F86  5179               	movf	create_name@sfn& (0+255),w,b
  8505   003F88  26D9               	addwf	fsr2l,f,c
  8506   003F8A  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  8507   003F8C  22DA               	addwfc	fsr2h,f,c
  8508   003F8E  0060  F1BB  FFDF   	movff	_create_name$2961,indf2
  8509   003F94                     l16052:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  8513   003F94  0E00               	movlw	0
  8514   003F96  EF59  F021         	goto	l1126
  8515   003F9A                     l16056:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  8519   003F9A  517B               	movf	create_name@si& (0+255),w,b
  8520   003F9C  2575               	addwf	create_name@p& (0+255),w,b
  8521   003F9E  6F6C               	movwf	??_create_name& (0+255),b
  8522   003FA0  517C               	movf	(create_name@si+1)& (0+255),w,b
  8523   003FA2  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8524   003FA4  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8525   003FA6  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8526   003FAC  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8527   003FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8528   003FB2  6AF8               	clrf	tblptru,c
  8529   003FB4                     	endif
  8530   003FB4                     	if	0	;tblptru may be non-zero
  8531   003FB4                     	endif
  8532   003FB4  0008               	tblrd		*
  8533   003FB6  006F FFD4  F07D    	movff	tablat,create_name@c
  8534   003FBC                     
  8535                           ; BSR set to: 0
  8536   003FBC  4B7B               	infsnz	create_name@si& (0+255),f,b
  8537   003FBE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8538   003FC0                     
  8539                           ; BSR set to: 0
  8540                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  8541   003FC0  0E21               	movlw	33
  8542   003FC2  617D               	cpfslt	create_name@c& (0+255),b
  8543   003FC4  EFE6  F01F         	goto	u19371
  8544   003FC8  EFE8  F01F         	goto	u19370
  8545   003FCC                     u19371:
  8546   003FCC  EFEA  F01F         	goto	l16064
  8547   003FD0                     u19370:
  8548   003FD0  EF08  F021         	goto	l16128
  8549   003FD4                     l16064:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  8553   003FD4  0E2F               	movlw	47
  8554   003FD6  197D               	xorwf	create_name@c& (0+255),w,b
  8555   003FD8  B4D8               	btfsc	status,2,c
  8556   003FDA  EFF1  F01F         	goto	u19381
  8557   003FDE  EFF3  F01F         	goto	u19380
  8558   003FE2                     u19381:
  8559   003FE2  EF00  F020         	goto	l16070
  8560   003FE6                     u19380:
  8561   003FE6                     
  8562                           ; BSR set to: 0
  8563   003FE6  0E5C               	movlw	92
  8564   003FE8  197D               	xorwf	create_name@c& (0+255),w,b
  8565   003FEA  A4D8               	btfss	status,2,c
  8566   003FEC  EFFA  F01F         	goto	u19391
  8567   003FF0  EFFC  F01F         	goto	u19390
  8568   003FF4                     u19391:
  8569   003FF4  EF30  F020         	goto	l16074
  8570   003FF8                     u19390:
  8571   003FF8  EF00  F020         	goto	l16070
  8572   003FFC                     l16068:
  8573                           
  8574                           ; BSR set to: 0
  8575   003FFC  4B7B               	infsnz	create_name@si& (0+255),f,b
  8576   003FFE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8577   004000                     l16070:
  8578                           
  8579                           ; BSR set to: 0
  8580   004000  517B               	movf	create_name@si& (0+255),w,b
  8581   004002  2575               	addwf	create_name@p& (0+255),w,b
  8582   004004  6F6C               	movwf	??_create_name& (0+255),b
  8583   004006  517C               	movf	(create_name@si+1)& (0+255),w,b
  8584   004008  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8585   00400A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8586   00400C  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8587   004012  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8588   004018                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8589   004018  6AF8               	clrf	tblptru,c
  8590   00401A                     	endif
  8591   00401A                     	if	0	;tblptru may be non-zero
  8592   00401A                     	endif
  8593   00401A  0008               	tblrd		*
  8594   00401C  50F5               	movf	tablat,w,c
  8595   00401E  0A2F               	xorlw	47
  8596   004020  B4D8               	btfsc	status,2,c
  8597   004022  EF15  F020         	goto	u19401
  8598   004026  EF17  F020         	goto	u19400
  8599   00402A                     u19401:
  8600   00402A  EFFE  F01F         	goto	l16068
  8601   00402E                     u19400:
  8602   00402E                     
  8603                           ; BSR set to: 0
  8604   00402E  517B               	movf	create_name@si& (0+255),w,b
  8605   004030  2575               	addwf	create_name@p& (0+255),w,b
  8606   004032  6F6C               	movwf	??_create_name& (0+255),b
  8607   004034  517C               	movf	(create_name@si+1)& (0+255),w,b
  8608   004036  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8609   004038  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8610   00403A  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8611   004040  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8612   004046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8613   004046  6AF8               	clrf	tblptru,c
  8614   004048                     	endif
  8615   004048                     	if	0	;tblptru may be non-zero
  8616   004048                     	endif
  8617   004048  0008               	tblrd		*
  8618   00404A  50F5               	movf	tablat,w,c
  8619   00404C  0A5C               	xorlw	92
  8620   00404E  B4D8               	btfsc	status,2,c
  8621   004050  EF2C  F020         	goto	u19411
  8622   004054  EF2E  F020         	goto	u19410
  8623   004058                     u19411:
  8624   004058  EFFE  F01F         	goto	l16068
  8625   00405C                     u19410:
  8626   00405C  EF08  F021         	goto	l16128
  8627   004060                     l16074:
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  8631   004060  0E2E               	movlw	46
  8632   004062  197D               	xorwf	create_name@c& (0+255),w,b
  8633   004064  B4D8               	btfsc	status,2,c
  8634   004066  EF37  F020         	goto	u19421
  8635   00406A  EF39  F020         	goto	u19420
  8636   00406E                     u19421:
  8637   00406E  EF44  F020         	goto	l16078
  8638   004072                     u19420:
  8639   004072                     
  8640                           ; BSR set to: 0
  8641   004072  5173               	movf	create_name@ni& (0+255),w,b
  8642   004074  5D77               	subwf	create_name@i& (0+255),w,b
  8643   004076  5174               	movf	(create_name@ni+1)& (0+255),w,b
  8644   004078  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  8645   00407A  A0D8               	btfss	status,0,c
  8646   00407C  EF42  F020         	goto	u19431
  8647   004080  EF44  F020         	goto	u19430
  8648   004084                     u19431:
  8649   004084  EF63  F020         	goto	l16088
  8650   004088                     u19430:
  8651   004088                     l16078:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  8655   004088  0E0B               	movlw	11
  8656   00408A  1973               	xorwf	create_name@ni& (0+255),w,b
  8657   00408C  1174               	iorwf	(create_name@ni+1)& (0+255),w,b
  8658   00408E  B4D8               	btfsc	status,2,c
  8659   004090  EF4C  F020         	goto	u19441
  8660   004094  EF4E  F020         	goto	u19440
  8661   004098                     u19441:
  8662   004098  EF9A  F01F         	goto	l16038
  8663   00409C                     u19440:
  8664   00409C                     
  8665                           ; BSR set to: 0
  8666   00409C  0E2E               	movlw	46
  8667   00409E  197D               	xorwf	create_name@c& (0+255),w,b
  8668   0040A0  B4D8               	btfsc	status,2,c
  8669   0040A2  EF55  F020         	goto	u19451
  8670   0040A6  EF57  F020         	goto	u19450
  8671   0040AA                     u19451:
  8672   0040AA  EF59  F020         	goto	l16086
  8673   0040AE                     u19450:
  8674   0040AE  EF9A  F01F         	goto	l16038
  8675   0040B2                     l16086:
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  8679   0040B2  0E00               	movlw	0
  8680   0040B4  6F78               	movwf	(create_name@i+1)& (0+255),b
  8681   0040B6  0E08               	movlw	8
  8682   0040B8  6F77               	movwf	create_name@i& (0+255),b
  8683   0040BA  0E00               	movlw	0
  8684   0040BC  6F74               	movwf	(create_name@ni+1)& (0+255),b
  8685   0040BE  0E0B               	movlw	11
  8686   0040C0  6F73               	movwf	create_name@ni& (0+255),b
  8687                           
  8688                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  8689   0040C2  EFCD  F01F         	goto	l16056
  8690   0040C6                     l16088:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  8694   0040C6  0E7F               	movlw	127
  8695   0040C8  657D               	cpfsgt	create_name@c& (0+255),b
  8696   0040CA  EF69  F020         	goto	u19461
  8697   0040CE  EF6B  F020         	goto	u19460
  8698   0040D2                     u19461:
  8699   0040D2  EF7C  F020         	goto	l16092
  8700   0040D6                     u19460:
  8701   0040D6                     
  8702                           ; BSR set to: 0
  8703                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  8704   0040D6  517D               	movf	create_name@c& (0+255),w,b
  8705   0040D8  0B7F               	andlw	127
  8706   0040DA  6F6C               	movwf	??_create_name& (0+255),b
  8707   0040DC  6B6D               	clrf	(??_create_name+1)& (0+255),b
  8708   0040DE  0EC3               	movlw	low _ExCvt
  8709   0040E0  256C               	addwf	??_create_name& (0+255),w,b
  8710   0040E2  6EF6               	movwf	tblptrl,c
  8711   0040E4  0EFE               	movlw	high _ExCvt
  8712   0040E6  216D               	addwfc	(??_create_name+1)& (0+255),w,b
  8713   0040E8  6EF7               	movwf	tblptrh,c
  8714   0040EA                     	if	1	;There are 3 active tblptr bytes
  8715   0040EA  6AF8               	clrf	tblptru,c
  8716   0040EC  0E00               	movlw	low (__mediumconst shr (0+16))
  8717   0040EE  22F8               	addwfc	tblptru,f,c
  8718   0040F0                     	endif
  8719   0040F0  0008               	tblrd		*
  8720   0040F2  006F FFD4  F07D    	movff	tablat,create_name@c
  8721   0040F8                     l16092:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  8725   0040F8  517D               	movf	create_name@c& (0+255),w,b
  8726   0040FA  EC1F  F052         	call	_dbc_1st
  8727   0040FE  0100               	movlb	0	; () banked
  8728   004100  5160               	movf	?_dbc_1st& (0+255),w,b
  8729   004102  1161               	iorwf	(?_dbc_1st+1)& (0+255),w,b
  8730   004104  B4D8               	btfsc	status,2,c
  8731   004106  EF87  F020         	goto	u19471
  8732   00410A  EF89  F020         	goto	u19470
  8733   00410E                     u19471:
  8734   00410E  EFD4  F020         	goto	l16112
  8735   004112                     u19470:
  8736   004112                     
  8737                           ; BSR set to: 0
  8738                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  8739   004112  517B               	movf	create_name@si& (0+255),w,b
  8740   004114  2575               	addwf	create_name@p& (0+255),w,b
  8741   004116  6F6C               	movwf	??_create_name& (0+255),b
  8742   004118  517C               	movf	(create_name@si+1)& (0+255),w,b
  8743   00411A  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8744   00411C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8745   00411E  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8746   004124  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8747   00412A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8748   00412A  6AF8               	clrf	tblptru,c
  8749   00412C                     	endif
  8750   00412C                     	if	0	;tblptru may be non-zero
  8751   00412C                     	endif
  8752   00412C  0008               	tblrd		*
  8753   00412E  006F FFD4  F072    	movff	tablat,create_name@d
  8754   004134                     
  8755                           ; BSR set to: 0
  8756   004134  4B7B               	infsnz	create_name@si& (0+255),f,b
  8757   004136  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8758   004138                     
  8759                           ; BSR set to: 0
  8760                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  8761   004138  5172               	movf	create_name@d& (0+255),w,b
  8762   00413A  EC19  F052         	call	_dbc_2nd
  8763   00413E  0100               	movlb	0	; () banked
  8764   004140  5160               	movf	?_dbc_2nd& (0+255),w,b
  8765   004142  1161               	iorwf	(?_dbc_2nd+1)& (0+255),w,b
  8766   004144  B4D8               	btfsc	status,2,c
  8767   004146  EFA7  F020         	goto	u19481
  8768   00414A  EFA9  F020         	goto	u19480
  8769   00414E                     u19481:
  8770   00414E  EF9A  F01F         	goto	l16038
  8771   004152                     u19480:
  8772   004152                     
  8773                           ; BSR set to: 0
  8774   004152  0EFF               	movlw	255
  8775   004154  2573               	addwf	create_name@ni& (0+255),w,b
  8776   004156  6F6C               	movwf	??_create_name& (0+255),b
  8777   004158  0EFF               	movlw	255
  8778   00415A  2174               	addwfc	(create_name@ni+1)& (0+255),w,b
  8779   00415C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8780   00415E  516C               	movf	??_create_name& (0+255),w,b
  8781   004160  5D77               	subwf	create_name@i& (0+255),w,b
  8782   004162  516D               	movf	(??_create_name+1)& (0+255),w,b
  8783   004164  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  8784   004166  A0D8               	btfss	status,0,c
  8785   004168  EFB8  F020         	goto	u19491
  8786   00416C  EFBA  F020         	goto	u19490
  8787   004170                     u19491:
  8788   004170  EFBC  F020         	goto	l16106
  8789   004174                     u19490:
  8790   004174  EF9A  F01F         	goto	l16038
  8791   004178                     l16106:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  8795   004178  5177               	movf	create_name@i& (0+255),w,b
  8796   00417A  2579               	addwf	create_name@sfn& (0+255),w,b
  8797   00417C  6ED9               	movwf	fsr2l,c
  8798   00417E  5178               	movf	(create_name@i+1)& (0+255),w,b
  8799   004180  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8800   004182  6EDA               	movwf	fsr2h,c
  8801   004184  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8802   00418A                     
  8803                           ; BSR set to: 0
  8804   00418A  4B77               	infsnz	create_name@i& (0+255),f,b
  8805   00418C  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8806   00418E                     
  8807                           ; BSR set to: 0
  8808                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  8809   00418E  5177               	movf	create_name@i& (0+255),w,b
  8810   004190  2579               	addwf	create_name@sfn& (0+255),w,b
  8811   004192  6ED9               	movwf	fsr2l,c
  8812   004194  5178               	movf	(create_name@i+1)& (0+255),w,b
  8813   004196  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8814   004198  6EDA               	movwf	fsr2h,c
  8815   00419A  0060  F1CB  FFDF   	movff	create_name@d,indf2
  8816   0041A0  4B77               	infsnz	create_name@i& (0+255),f,b
  8817   0041A2  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8818                           
  8819                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  8820   0041A4  EFCD  F01F         	goto	l16056
  8821   0041A8                     l16112:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  8825   0041A8  0ECA               	movlw	low STR_1
  8826   0041AA  6F60               	movwf	chk_chr@str& (0+255),b
  8827   0041AC  0EFF               	movlw	high STR_1
  8828   0041AE  6F61               	movwf	(chk_chr@str+1)& (0+255),b
  8829   0041B0  C07D  F062         	movff	create_name@c,chk_chr@chr
  8830   0041B4  6B63               	clrf	(chk_chr@chr+1)& (0+255),b
  8831   0041B6  ECDB  F04B         	call	_chk_chr	;wreg free
  8832   0041BA  0100               	movlb	0	; () banked
  8833   0041BC  5160               	movf	?_chk_chr& (0+255),w,b
  8834   0041BE  1161               	iorwf	(?_chk_chr+1)& (0+255),w,b
  8835   0041C0  B4D8               	btfsc	status,2,c
  8836   0041C2  EFE5  F020         	goto	u19501
  8837   0041C6  EFE7  F020         	goto	u19500
  8838   0041CA                     u19501:
  8839   0041CA  EFE9  F020         	goto	l16118
  8840   0041CE                     u19500:
  8841   0041CE  EF9A  F01F         	goto	l16038
  8842   0041D2                     l16118:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  8846   0041D2  0E60               	movlw	96
  8847   0041D4  657D               	cpfsgt	create_name@c& (0+255),b
  8848   0041D6  EFEF  F020         	goto	u19511
  8849   0041DA  EFF1  F020         	goto	u19510
  8850   0041DE                     u19511:
  8851   0041DE  EFFB  F020         	goto	l16124
  8852   0041E2                     u19510:
  8853   0041E2                     
  8854                           ; BSR set to: 0
  8855   0041E2  0E7B               	movlw	123
  8856   0041E4  617D               	cpfslt	create_name@c& (0+255),b
  8857   0041E6  EFF7  F020         	goto	u19521
  8858   0041EA  EFF9  F020         	goto	u19520
  8859   0041EE                     u19521:
  8860   0041EE  EFFB  F020         	goto	l16124
  8861   0041F2                     u19520:
  8862   0041F2                     
  8863                           ; BSR set to: 0
  8864   0041F2  0E20               	movlw	32
  8865   0041F4  5F7D               	subwf	create_name@c& (0+255),f,b
  8866   0041F6                     l16124:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  8870   0041F6  5177               	movf	create_name@i& (0+255),w,b
  8871   0041F8  2579               	addwf	create_name@sfn& (0+255),w,b
  8872   0041FA  6ED9               	movwf	fsr2l,c
  8873   0041FC  5178               	movf	(create_name@i+1)& (0+255),w,b
  8874   0041FE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8875   004200  6EDA               	movwf	fsr2h,c
  8876   004202  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8877   004208                     
  8878                           ; BSR set to: 0
  8879   004208  4B77               	infsnz	create_name@i& (0+255),f,b
  8880   00420A  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8881   00420C  EFCD  F01F         	goto	l16056
  8882   004210                     l16128:
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  8886   004210  517B               	movf	create_name@si& (0+255),w,b
  8887   004212  2575               	addwf	create_name@p& (0+255),w,b
  8888   004214  6F6C               	movwf	??_create_name& (0+255),b
  8889   004216  517C               	movf	(create_name@si+1)& (0+255),w,b
  8890   004218  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8891   00421A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8892   00421C  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8893   004222  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8894   004228  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  8895   00422E  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  8896   004234                     
  8897                           ; BSR set to: 0
  8898                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  8899   004234  5177               	movf	create_name@i& (0+255),w,b
  8900   004236  1178               	iorwf	(create_name@i+1)& (0+255),w,b
  8901   004238  A4D8               	btfss	status,2,c
  8902   00423A  EF21  F021         	goto	u19531
  8903   00423E  EF23  F021         	goto	u19530
  8904   004242                     u19531:
  8905   004242  EF25  F021         	goto	l16136
  8906   004246                     u19530:
  8907   004246  EF9A  F01F         	goto	l16038
  8908   00424A                     l16136:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  8912   00424A  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8913   004250  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  8914   004256  0EE5               	movlw	229
  8915   004258  18DE               	xorwf	postinc2,w,c
  8916   00425A  A4D8               	btfss	status,2,c
  8917   00425C  EF32  F021         	goto	u19541
  8918   004260  EF34  F021         	goto	u19540
  8919   004264                     u19541:
  8920   004264  EF3C  F021         	goto	l16140
  8921   004268                     u19540:
  8922   004268                     
  8923                           ; BSR set to: 0
  8924   004268  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8925   00426E  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  8926   004274  0E05               	movlw	5
  8927   004276  6EDF               	movwf	indf2,c
  8928   004278                     l16140:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  8932   004278  0E20               	movlw	32
  8933   00427A  657D               	cpfsgt	create_name@c& (0+255),b
  8934   00427C  EF42  F021         	goto	u19551
  8935   004280  EF44  F021         	goto	u19550
  8936   004284                     u19551:
  8937   004284  EF4A  F021         	goto	l16144
  8938   004288                     u19550:
  8939   004288                     
  8940                           ; BSR set to: 0
  8941   004288  0E00               	movlw	0
  8942   00428A  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  8943   00428C  0E00               	movlw	0
  8944   00428E  6F70               	movwf	_create_name$2966& (0+255),b
  8945   004290  EF4E  F021         	goto	l16146
  8946   004294                     l16144:
  8947                           
  8948                           ; BSR set to: 0
  8949   004294  0E00               	movlw	0
  8950   004296  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  8951   004298  0E04               	movlw	4
  8952   00429A  6F70               	movwf	_create_name$2966& (0+255),b
  8953   00429C                     l16146:
  8954                           
  8955                           ; BSR set to: 0
  8956   00429C  EE20 F00B          	lfsr	2,11
  8957   0042A0  5179               	movf	create_name@sfn& (0+255),w,b
  8958   0042A2  26D9               	addwf	fsr2l,f,c
  8959   0042A4  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  8960   0042A6  22DA               	addwfc	fsr2h,f,c
  8961   0042A8  0060  F1C3  FFDF   	movff	_create_name$2966,indf2
  8962   0042AE  EFCA  F01F         	goto	l16052
  8963   0042B2                     l1126:
  8964                           
  8965                           ; BSR set to: 0
  8966   0042B2  0012               	return		;funcret
  8967   0042B4                     __end_of_create_name:
  8968                           	callstack 0
  8969                           
  8970 ;; *************** function _dbc_2nd *****************
  8971 ;; Defined at:
  8972 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  c               1    wreg     unsigned char 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  c               1    2[BANK0 ] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  2    0[BANK0 ] int 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;Total ram usage:        3 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 5
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_create_name
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text24
  9001   00A432                     __ptext24:
  9002                           	callstack 0
  9003   00A432                     _dbc_2nd:
  9004                           	callstack 21
  9005   00A432  0E00               	movlw	0
  9006   00A434  0100               	movlb	0	; () banked
  9007   00A436  6F61               	movwf	(?_dbc_2nd+1)& (0+255),b
  9008   00A438  0E00               	movlw	0
  9009   00A43A  6F60               	movwf	?_dbc_2nd& (0+255),b
  9010   00A43C                     
  9011                           ; BSR set to: 0
  9012   00A43C  0012               	return		;funcret
  9013   00A43E                     __end_of_dbc_2nd:
  9014                           	callstack 0
  9015                           
  9016 ;; *************** function _dbc_1st *****************
  9017 ;; Defined at:
  9018 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  c               1    wreg     unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  c               1    2[BANK0 ] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2    0[BANK0 ] int 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;Total ram usage:        3 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 5
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_create_name
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text25
  9047   00A43E                     __ptext25:
  9048                           	callstack 0
  9049   00A43E                     _dbc_1st:
  9050                           	callstack 21
  9051   00A43E  0E00               	movlw	0
  9052   00A440  0100               	movlb	0	; () banked
  9053   00A442  6F61               	movwf	(?_dbc_1st+1)& (0+255),b
  9054   00A444  0E00               	movlw	0
  9055   00A446  6F60               	movwf	?_dbc_1st& (0+255),b
  9056   00A448                     
  9057                           ; BSR set to: 0
  9058   00A448  0012               	return		;funcret
  9059   00A44A                     __end_of_dbc_1st:
  9060                           	callstack 0
  9061                           
  9062 ;; *************** function _chk_chr *****************
  9063 ;; Defined at:
  9064 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  9067 ;;		 -> STR_2(15), 
  9068 ;;  chr             2    2[BANK0 ] int 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    0[BANK0 ] int 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;Total ram usage:        6 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 5
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_create_name
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text26
  9095   0097B6                     __ptext26:
  9096                           	callstack 0
  9097   0097B6                     _chk_chr:
  9098                           	callstack 21
  9099   0097B6                     
  9100                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  9101   0097B6  EFDF  F04B         	goto	l15592
  9102   0097BA                     l15590:
  9103                           
  9104                           ; BSR set to: 0
  9105   0097BA  4B60               	infsnz	chk_chr@str& (0+255),f,b
  9106   0097BC  2B61               	incf	(chk_chr@str+1)& (0+255),f,b
  9107   0097BE                     l15592:
  9108   0097BE  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9109   0097C4  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9110   0097CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9111   0097CA  6AF8               	clrf	tblptru,c
  9112   0097CC                     	endif
  9113   0097CC                     	if	0	;tblptru may be non-zero
  9114   0097CC                     	endif
  9115   0097CC  0008               	tblrd		*
  9116   0097CE  50F5               	movf	tablat,w,c
  9117   0097D0  0900               	iorlw	0
  9118   0097D2  B4D8               	btfsc	status,2,c
  9119   0097D4  EFEE  F04B         	goto	u18611
  9120   0097D8  EFF0  F04B         	goto	u18610
  9121   0097DC                     u18611:
  9122   0097DC  EF08  F04C         	goto	l15596
  9123   0097E0                     u18610:
  9124   0097E0  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9125   0097E6  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9126   0097EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9127   0097EC  6AF8               	clrf	tblptru,c
  9128   0097EE                     	endif
  9129   0097EE                     	if	0	;tblptru may be non-zero
  9130   0097EE                     	endif
  9131   0097EE  0008               	tblrd		*
  9132   0097F0  50F5               	movf	tablat,w,c
  9133   0097F2  0100               	movlb	0	; () banked
  9134   0097F4  6F64               	movwf	??_chk_chr& (0+255),b
  9135   0097F6  6B65               	clrf	(??_chk_chr+1)& (0+255),b
  9136   0097F8  5162               	movf	chk_chr@chr& (0+255),w,b
  9137   0097FA  1964               	xorwf	??_chk_chr& (0+255),w,b
  9138   0097FC  E107               	bnz	u18621
  9139   0097FE  5163               	movf	(chk_chr@chr+1)& (0+255),w,b
  9140   009800  1965               	xorwf	(??_chk_chr+1)& (0+255),w,b
  9141   009802  A4D8               	btfss	status,2,c
  9142   009804  EF06  F04C         	goto	u18621
  9143   009808  EF08  F04C         	goto	u18620
  9144   00980C                     u18621:
  9145   00980C  EFDD  F04B         	goto	l15590
  9146   009810                     u18620:
  9147   009810                     l15596:
  9148                           
  9149                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  9150   009810  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9151   009816  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9152   00981C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9153   00981C  6AF8               	clrf	tblptru,c
  9154   00981E                     	endif
  9155   00981E                     	if	0	;tblptru may be non-zero
  9156   00981E                     	endif
  9157   00981E  0008               	tblrd		*
  9158   009820  50F5               	movf	tablat,w,c
  9159   009822  0100               	movlb	0	; () banked
  9160   009824  6F60               	movwf	?_chk_chr& (0+255),b
  9161   009826  6B61               	clrf	(?_chk_chr+1)& (0+255),b
  9162   009828                     
  9163                           ; BSR set to: 0
  9164   009828  0012               	return		;funcret
  9165   00982A                     __end_of_chk_chr:
  9166                           	callstack 0
  9167                           
  9168 ;; *************** function _dir_register *****************
  9169 ;; Defined at:
  9170 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  dp              2   57[BANK1 ] PTR struct .
  9173 ;;		 -> f_open@dj(40), 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  fs              2   59[BANK1 ] PTR struct .
  9176 ;;		 -> FatFs(563), NULL(0), 
  9177 ;;  res             1   61[BANK1 ] enum E68
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      enum E68
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:        5 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 16
  9194 ;; This function calls:
  9195 ;;		_dir_alloc
  9196 ;;		_mem_cpy
  9197 ;;		_mem_set
  9198 ;;		_move_window
  9199 ;; This function is called by:
  9200 ;;		_f_open
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text27
  9205   0086F0                     __ptext27:
  9206                           	callstack 0
  9207   0086F0                     _dir_register:
  9208                           	callstack 12
  9209   0086F0                     
  9210                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  9211   0086F0  0060  F4E7  FFD9   	movff	dir_register@dp,fsr2l
  9212   0086F6  0060  F4EB  FFDA   	movff	dir_register@dp+1,fsr2h
  9213   0086FC  006F FF78  F13B    	movff	postinc2,dir_register@fs
  9214   008702  006F FF74  F13C    	movff	postdec2,dir_register@fs+1
  9215   008708                     
  9216                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  9217   008708  C139  F12D         	movff	dir_register@dp,dir_alloc@dp
  9218   00870C  C13A  F12E         	movff	dir_register@dp+1,dir_alloc@dp+1
  9219   008710  0E00               	movlw	0
  9220   008712  0101               	movlb	1	; () banked
  9221   008714  6F30               	movwf	(dir_alloc@nent+1)& (0+255),b
  9222   008716  0E01               	movlw	1
  9223   008718  6F2F               	movwf	dir_alloc@nent& (0+255),b
  9224   00871A  ECF9  F03C         	call	_dir_alloc	;wreg free
  9225   00871E  0101               	movlb	1	; () banked
  9226   008720  6F3D               	movwf	dir_register@res& (0+255),b
  9227   008722                     
  9228                           ; BSR set to: 1
  9229                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  9230   008722  513D               	movf	dir_register@res& (0+255),w,b
  9231   008724  A4D8               	btfss	status,2,c
  9232   008726  EF97  F043         	goto	u19951
  9233   00872A  EF99  F043         	goto	u19950
  9234   00872E                     u19951:
  9235   00872E  EFF7  F043         	goto	l16430
  9236   008732                     u19950:
  9237   008732                     
  9238                           ; BSR set to: 1
  9239                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  9240   008732  C13B  F0C8         	movff	dir_register@fs,move_window@fs
  9241   008736  C13C  F0C9         	movff	dir_register@fs+1,move_window@fs+1
  9242   00873A  EE20 F016          	lfsr	2,22
  9243   00873E  5139               	movf	dir_register@dp& (0+255),w,b
  9244   008740  26D9               	addwf	fsr2l,f,c
  9245   008742  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9246   008744  22DA               	addwfc	fsr2h,f,c
  9247   008746  006F FF78  F0CA    	movff	postinc2,move_window@sector
  9248   00874C  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  9249   008752  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  9250   008758  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  9251   00875E  ECAF  F046         	call	_move_window	;wreg free
  9252   008762  0101               	movlb	1	; () banked
  9253   008764  6F3D               	movwf	dir_register@res& (0+255),b
  9254   008766                     
  9255                           ; BSR set to: 1
  9256                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  9257   008766  513D               	movf	dir_register@res& (0+255),w,b
  9258   008768  A4D8               	btfss	status,2,c
  9259   00876A  EFB9  F043         	goto	u19961
  9260   00876E  EFBB  F043         	goto	u19960
  9261   008772                     u19961:
  9262   008772  EFF7  F043         	goto	l16430
  9263   008776                     u19960:
  9264   008776                     
  9265                           ; BSR set to: 1
  9266                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  9267   008776  EE20 F01A          	lfsr	2,26
  9268   00877A  5139               	movf	dir_register@dp& (0+255),w,b
  9269   00877C  26D9               	addwf	fsr2l,f,c
  9270   00877E  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9271   008780  22DA               	addwfc	fsr2h,f,c
  9272   008782  006F FF78  F060    	movff	postinc2,mem_set@dst
  9273   008788  006F FF74  F061    	movff	postdec2,mem_set@dst+1
  9274   00878E  0E00               	movlw	0
  9275   008790  0100               	movlb	0	; () banked
  9276   008792  6F63               	movwf	(mem_set@val+1)& (0+255),b
  9277   008794  0E00               	movlw	0
  9278   008796  6F62               	movwf	mem_set@val& (0+255),b
  9279   008798  0E00               	movlw	0
  9280   00879A  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  9281   00879C  0E20               	movlw	32
  9282   00879E  6F64               	movwf	mem_set@cnt& (0+255),b
  9283   0087A0  EC5C  F050         	call	_mem_set	;wreg free
  9284   0087A4                     
  9285                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  9286   0087A4  0101               	movlb	1	; () banked
  9287   0087A6  EE20 F01A          	lfsr	2,26
  9288   0087AA  5139               	movf	dir_register@dp& (0+255),w,b
  9289   0087AC  26D9               	addwf	fsr2l,f,c
  9290   0087AE  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9291   0087B0  22DA               	addwfc	fsr2h,f,c
  9292   0087B2  006F FF78  F060    	movff	postinc2,mem_cpy@dst
  9293   0087B8  006F FF74  F061    	movff	postdec2,mem_cpy@dst+1
  9294   0087BE  0E1C               	movlw	28
  9295   0087C0  2539               	addwf	dir_register@dp& (0+255),w,b
  9296   0087C2  0100               	movlb	0	; () banked
  9297   0087C4  6F62               	movwf	mem_cpy@src& (0+255),b
  9298   0087C6  0E00               	movlw	0
  9299   0087C8  0101               	movlb	1	; () banked
  9300   0087CA  213A               	addwfc	(dir_register@dp+1)& (0+255),w,b
  9301   0087CC  0100               	movlb	0	; () banked
  9302   0087CE  6F63               	movwf	(mem_cpy@src+1)& (0+255),b
  9303   0087D0  0E00               	movlw	0
  9304   0087D2  6F65               	movwf	(mem_cpy@cnt+1)& (0+255),b
  9305   0087D4  0E0B               	movlw	11
  9306   0087D6  6F64               	movwf	mem_cpy@cnt& (0+255),b
  9307   0087D8  EC22  F04B         	call	_mem_cpy	;wreg free
  9308   0087DC                     
  9309                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  9310   0087DC  0101               	movlb	1	; () banked
  9311   0087DE  EE20 F003          	lfsr	2,3
  9312   0087E2  513B               	movf	dir_register@fs& (0+255),w,b
  9313   0087E4  26D9               	addwf	fsr2l,f,c
  9314   0087E6  513C               	movf	(dir_register@fs+1)& (0+255),w,b
  9315   0087E8  22DA               	addwfc	fsr2h,f,c
  9316   0087EA  0E01               	movlw	1
  9317   0087EC  6EDF               	movwf	indf2,c
  9318   0087EE                     l16430:
  9319                           
  9320                           ; BSR set to: 1
  9321                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  9322   0087EE  513D               	movf	dir_register@res& (0+255),w,b
  9323   0087F0                     
  9324                           ; BSR set to: 1
  9325   0087F0  0012               	return		;funcret
  9326   0087F2                     __end_of_dir_register:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function _mem_cpy *****************
  9330 ;; Defined at:
  9331 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  dst             2    0[BANK0 ] PTR void 
  9334 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  9335 ;;		 -> NULL(0), 
  9336 ;;  src             2    2[BANK0 ] PTR const void 
  9337 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  9338 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), dj$fn(12), 
  9339 ;;		 -> f_open@dj(40), 
  9340 ;;  cnt             2    4[BANK0 ] unsigned int 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  9343 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  9344 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), dj$fn(12), 
  9345 ;;		 -> f_open@dj(40), 
  9346 ;;  d               2    6[BANK0 ] PTR unsigned char 
  9347 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  9348 ;;		 -> NULL(0), 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;Total ram usage:       10 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 5
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_dir_register
  9369 ;;		_f_write
  9370 ;;		_f_read
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text28
  9375   009644                     __ptext28:
  9376                           	callstack 0
  9377   009644                     _mem_cpy:
  9378                           	callstack 23
  9379   009644                     
  9380                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  9381   009644  C060  F066         	movff	mem_cpy@dst,mem_cpy@d
  9382   009648  C061  F067         	movff	mem_cpy@dst+1,mem_cpy@d+1
  9383                           
  9384                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  9385   00964C  C062  F068         	movff	mem_cpy@src,mem_cpy@s
  9386   009650  C063  F069         	movff	mem_cpy@src+1,mem_cpy@s+1
  9387                           
  9388                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  9389   009654  0100               	movlb	0	; () banked
  9390   009656  5164               	movf	mem_cpy@cnt& (0+255),w,b
  9391   009658  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  9392   00965A  B4D8               	btfsc	status,2,c
  9393   00965C  EF32  F04B         	goto	u19081
  9394   009660  EF34  F04B         	goto	u19080
  9395   009664                     u19081:
  9396   009664  EF61  F04B         	goto	l867
  9397   009668                     u19080:
  9398   009668                     l15890:
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  9402   009668  0060  F1A3  FFF6   	movff	mem_cpy@s,tblptrl
  9403   00966E  0060  F1A7  FFF7   	movff	mem_cpy@s+1,tblptrh
  9404   009674  0E00               	movlw	low (__mediumconst shr (0+16))
  9405   009676  6EF8               	movwf	tblptru,c
  9406   009678  0060  F19B  FFD9   	movff	mem_cpy@d,fsr2l
  9407   00967E  0060  F19F  FFDA   	movff	mem_cpy@d+1,fsr2h
  9408   009684  0E0F               	movlw	(high __ramtop+-1)
  9409   009686  64F7               	cpfsgt	tblptrh,c
  9410   009688  D003               	bra	u19097
  9411   00968A  0008               	tblrd		*
  9412   00968C  50F5               	movf	tablat,w,c
  9413   00968E  D007               	bra	u19090
  9414   009690                     u19097:
  9415   009690  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9416   009696  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9417   00969C  50EF               	movf	indf0,w,c
  9418   00969E                     u19090:
  9419   00969E  6EDF               	movwf	indf2,c
  9420   0096A0  0100               	movlb	0	; () banked
  9421   0096A2  4B68               	infsnz	mem_cpy@s& (0+255),f,b
  9422   0096A4  2B69               	incf	(mem_cpy@s+1)& (0+255),f,b
  9423   0096A6                     
  9424                           ; BSR set to: 0
  9425   0096A6  4B66               	infsnz	mem_cpy@d& (0+255),f,b
  9426   0096A8  2B67               	incf	(mem_cpy@d+1)& (0+255),f,b
  9427   0096AA                     
  9428                           ; BSR set to: 0
  9429                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  9430   0096AA  0764               	decf	mem_cpy@cnt& (0+255),f,b
  9431   0096AC  A0D8               	btfss	status,0,c
  9432   0096AE  0765               	decf	(mem_cpy@cnt+1)& (0+255),f,b
  9433   0096B0  5164               	movf	mem_cpy@cnt& (0+255),w,b
  9434   0096B2  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  9435   0096B4  A4D8               	btfss	status,2,c
  9436   0096B6  EF5F  F04B         	goto	u19101
  9437   0096BA  EF61  F04B         	goto	u19100
  9438   0096BE                     u19101:
  9439   0096BE  EF34  F04B         	goto	l15890
  9440   0096C2                     u19100:
  9441   0096C2                     l867:
  9442                           
  9443                           ; BSR set to: 0
  9444   0096C2  0012               	return		;funcret
  9445   0096C4                     __end_of_mem_cpy:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _dir_alloc *****************
  9449 ;; Defined at:
  9450 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  dp              2   45[BANK1 ] PTR struct .
  9453 ;;		 -> f_open@dj(40), 
  9454 ;;  nent            2   47[BANK1 ] unsigned int 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  n               2   54[BANK1 ] unsigned int 
  9457 ;;  fs              2   52[BANK1 ] PTR struct .
  9458 ;;		 -> FatFs(563), NULL(0), 
  9459 ;;  res             1   56[BANK1 ] enum E68
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      enum E68
  9462 ;; Registers used:
  9463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9469 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;Total ram usage:       12 bytes
  9474 ;; Hardware stack levels used: 1
  9475 ;; Hardware stack levels required when called: 15
  9476 ;; This function calls:
  9477 ;;		_dir_next
  9478 ;;		_dir_sdi
  9479 ;;		_move_window
  9480 ;; This function is called by:
  9481 ;;		_dir_register
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text29
  9486   0079F2                     __ptext29:
  9487                           	callstack 0
  9488   0079F2                     _dir_alloc:
  9489                           	callstack 12
  9490   0079F2                     
  9491                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  9492   0079F2  0060  F4B7  FFD9   	movff	dir_alloc@dp,fsr2l
  9493   0079F8  0060  F4BB  FFDA   	movff	dir_alloc@dp+1,fsr2h
  9494   0079FE  006F FF78  F134    	movff	postinc2,dir_alloc@fs
  9495   007A04  006F FF74  F135    	movff	postdec2,dir_alloc@fs+1
  9496   007A0A                     
  9497                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  9498   007A0A  C12D  F0ED         	movff	dir_alloc@dp,dir_sdi@dp
  9499   007A0E  C12E  F0EE         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  9500   007A12  0E00               	movlw	0
  9501   007A14  0100               	movlb	0	; () banked
  9502   007A16  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  9503   007A18  0E00               	movlw	0
  9504   007A1A  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  9505   007A1C  0E00               	movlw	0
  9506   007A1E  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  9507   007A20  0E00               	movlw	0
  9508   007A22  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  9509   007A24  ECF0  F029         	call	_dir_sdi	;wreg free
  9510   007A28  0101               	movlb	1	; () banked
  9511   007A2A  6F38               	movwf	dir_alloc@res& (0+255),b
  9512   007A2C                     
  9513                           ; BSR set to: 1
  9514                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  9515   007A2C  5138               	movf	dir_alloc@res& (0+255),w,b
  9516   007A2E  A4D8               	btfss	status,2,c
  9517   007A30  EF1C  F03D         	goto	u19151
  9518   007A34  EF1E  F03D         	goto	u19150
  9519   007A38                     u19151:
  9520   007A38  EFA4  F03D         	goto	l15948
  9521   007A3C                     u19150:
  9522   007A3C                     
  9523                           ; BSR set to: 1
  9524                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  9525   007A3C  0E00               	movlw	0
  9526   007A3E  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  9527   007A40  0E00               	movlw	0
  9528   007A42  6F36               	movwf	dir_alloc@n& (0+255),b
  9529   007A44                     l15928:
  9530                           
  9531                           ; BSR set to: 1
  9532                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  9533   007A44  C134  F0C8         	movff	dir_alloc@fs,move_window@fs
  9534   007A48  C135  F0C9         	movff	dir_alloc@fs+1,move_window@fs+1
  9535   007A4C  EE20 F016          	lfsr	2,22
  9536   007A50  512D               	movf	dir_alloc@dp& (0+255),w,b
  9537   007A52  26D9               	addwf	fsr2l,f,c
  9538   007A54  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9539   007A56  22DA               	addwfc	fsr2h,f,c
  9540   007A58  006F FF78  F0CA    	movff	postinc2,move_window@sector
  9541   007A5E  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  9542   007A64  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  9543   007A6A  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  9544   007A70  ECAF  F046         	call	_move_window	;wreg free
  9545   007A74  0101               	movlb	1	; () banked
  9546   007A76  6F38               	movwf	dir_alloc@res& (0+255),b
  9547   007A78                     
  9548                           ; BSR set to: 1
  9549                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  9550   007A78  5138               	movf	dir_alloc@res& (0+255),w,b
  9551   007A7A  B4D8               	btfsc	status,2,c
  9552   007A7C  EF42  F03D         	goto	u19161
  9553   007A80  EF44  F03D         	goto	u19160
  9554   007A84                     u19161:
  9555   007A84  EF46  F03D         	goto	l15934
  9556   007A88                     u19160:
  9557   007A88  EFA4  F03D         	goto	l15948
  9558   007A8C                     l15934:
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  9562   007A8C  EE20 F01A          	lfsr	2,26
  9563   007A90  512D               	movf	dir_alloc@dp& (0+255),w,b
  9564   007A92  26D9               	addwf	fsr2l,f,c
  9565   007A94  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9566   007A96  22DA               	addwfc	fsr2h,f,c
  9567   007A98  006F FF78  F131    	movff	postinc2,??_dir_alloc
  9568   007A9E  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  9569   007AA4  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  9570   007AAA  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  9571   007AB0  0EE5               	movlw	229
  9572   007AB2  18DE               	xorwf	postinc2,w,c
  9573   007AB4  B4D8               	btfsc	status,2,c
  9574   007AB6  EF5F  F03D         	goto	u19171
  9575   007ABA  EF61  F03D         	goto	u19170
  9576   007ABE                     u19171:
  9577   007ABE  EF7B  F03D         	goto	l15938
  9578   007AC2                     u19170:
  9579   007AC2                     
  9580                           ; BSR set to: 1
  9581   007AC2  EE20 F01A          	lfsr	2,26
  9582   007AC6  512D               	movf	dir_alloc@dp& (0+255),w,b
  9583   007AC8  26D9               	addwf	fsr2l,f,c
  9584   007ACA  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9585   007ACC  22DA               	addwfc	fsr2h,f,c
  9586   007ACE  006F FF78  F131    	movff	postinc2,??_dir_alloc
  9587   007AD4  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  9588   007ADA  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  9589   007AE0  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  9590   007AE6  50DF               	movf	indf2,w,c
  9591   007AE8  A4D8               	btfss	status,2,c
  9592   007AEA  EF79  F03D         	goto	u19181
  9593   007AEE  EF7B  F03D         	goto	u19180
  9594   007AF2                     u19181:
  9595   007AF2  EF8B  F03D         	goto	l15942
  9596   007AF6                     u19180:
  9597   007AF6                     l15938:
  9598                           
  9599                           ; BSR set to: 1
  9600                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  9601   007AF6  4B36               	infsnz	dir_alloc@n& (0+255),f,b
  9602   007AF8  2B37               	incf	(dir_alloc@n+1)& (0+255),f,b
  9603   007AFA  512F               	movf	dir_alloc@nent& (0+255),w,b
  9604   007AFC  1936               	xorwf	dir_alloc@n& (0+255),w,b
  9605   007AFE  E107               	bnz	u19191
  9606   007B00  5130               	movf	(dir_alloc@nent+1)& (0+255),w,b
  9607   007B02  1937               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  9608   007B04  A4D8               	btfss	status,2,c
  9609   007B06  EF87  F03D         	goto	u19191
  9610   007B0A  EF89  F03D         	goto	u19190
  9611   007B0E                     u19191:
  9612   007B0E  EF8F  F03D         	goto	l15944
  9613   007B12                     u19190:
  9614   007B12  EFA4  F03D         	goto	l15948
  9615   007B16                     l15942:
  9616                           
  9617                           ; BSR set to: 1
  9618                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  9619   007B16  0E00               	movlw	0
  9620   007B18  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  9621   007B1A  0E00               	movlw	0
  9622   007B1C  6F36               	movwf	dir_alloc@n& (0+255),b
  9623   007B1E                     l15944:
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  9627   007B1E  C12D  F0FA         	movff	dir_alloc@dp,dir_next@dp
  9628   007B22  C12E  F0FB         	movff	dir_alloc@dp+1,dir_next@dp+1
  9629   007B26  0E00               	movlw	0
  9630   007B28  0100               	movlb	0	; () banked
  9631   007B2A  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  9632   007B2C  0E01               	movlw	1
  9633   007B2E  6FFC               	movwf	dir_next@stretch& (0+255),b
  9634   007B30  EC5A  F021         	call	_dir_next	;wreg free
  9635   007B34  0101               	movlb	1	; () banked
  9636   007B36  6F38               	movwf	dir_alloc@res& (0+255),b
  9637   007B38                     
  9638                           ; BSR set to: 1
  9639                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  9640   007B38  5138               	movf	dir_alloc@res& (0+255),w,b
  9641   007B3A  B4D8               	btfsc	status,2,c
  9642   007B3C  EFA2  F03D         	goto	u19201
  9643   007B40  EFA4  F03D         	goto	u19200
  9644   007B44                     u19201:
  9645   007B44  EF22  F03D         	goto	l15928
  9646   007B48                     u19200:
  9647   007B48                     l15948:
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  9651   007B48  0E04               	movlw	4
  9652   007B4A  1938               	xorwf	dir_alloc@res& (0+255),w,b
  9653   007B4C  A4D8               	btfss	status,2,c
  9654   007B4E  EFAB  F03D         	goto	u19211
  9655   007B52  EFAD  F03D         	goto	u19210
  9656   007B56                     u19211:
  9657   007B56  EFAF  F03D         	goto	l1093
  9658   007B5A                     u19210:
  9659   007B5A                     
  9660                           ; BSR set to: 1
  9661   007B5A  0E07               	movlw	7
  9662   007B5C  6F38               	movwf	dir_alloc@res& (0+255),b
  9663   007B5E                     l1093:
  9664                           
  9665                           ; BSR set to: 1
  9666                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  9667   007B5E  5138               	movf	dir_alloc@res& (0+255),w,b
  9668   007B60                     
  9669                           ; BSR set to: 1
  9670   007B60  0012               	return		;funcret
  9671   007B62                     __end_of_dir_alloc:
  9672                           	callstack 0
  9673                           
  9674 ;; *************** function _dir_sdi *****************
  9675 ;; Defined at:
  9676 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  dp              2  141[BANK0 ] PTR struct .
  9679 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  9680 ;;  ofs             4  143[BANK0 ] unsigned long 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  clst            4    4[BANK1 ] unsigned long 
  9683 ;;  csz             4    0[BANK1 ] unsigned long 
  9684 ;;  fs              2    8[BANK1 ] PTR struct .
  9685 ;;		 -> FatFs(563), NULL(0), 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      enum E68
  9688 ;; Registers used:
  9689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9695 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Totals:         0      16      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;Total ram usage:       26 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 13
  9702 ;; This function calls:
  9703 ;;		_clst2sect
  9704 ;;		_get_fat
  9705 ;; This function is called by:
  9706 ;;		_dir_alloc
  9707 ;;		_dir_find
  9708 ;;		_follow_path
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text30
  9713   0053E0                     __ptext30:
  9714                           	callstack 0
  9715   0053E0                     _dir_sdi:
  9716                           	callstack 14
  9717   0053E0                     
  9718                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  9719   0053E0  0060  F3B7  FFD9   	movff	dir_sdi@dp,fsr2l
  9720   0053E6  0060  F3BB  FFDA   	movff	dir_sdi@dp+1,fsr2h
  9721   0053EC  006F FF78  F108    	movff	postinc2,dir_sdi@fs
  9722   0053F2  006F FF74  F109    	movff	postdec2,dir_sdi@fs+1
  9723   0053F8  0100               	movlb	0	; () banked
  9724   0053FA  51F2               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  9725   0053FC  E107               	bnz	u18631
  9726   0053FE  0E20               	movlw	32
  9727   005400  5DF1               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  9728   005402  B0D8               	btfsc	status,0,c
  9729   005404  EF06  F02A         	goto	u18631
  9730   005408  EF08  F02A         	goto	u18630
  9731   00540C                     u18631:
  9732   00540C  EF1F  F02A         	goto	l15632
  9733   005410                     u18630:
  9734   005410                     
  9735                           ; BSR set to: 0
  9736   005410  0E1F               	movlw	31
  9737   005412  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  9738   005414  6FF3               	movwf	??_dir_sdi& (0+255),b
  9739   005416  0E00               	movlw	0
  9740   005418  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  9741   00541A  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  9742   00541C  0E00               	movlw	0
  9743   00541E  15F1               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  9744   005420  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9745   005422  0E00               	movlw	0
  9746   005424  15F2               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  9747   005426  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9748   005428  51F3               	movf	??_dir_sdi& (0+255),w,b
  9749   00542A  11F4               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  9750   00542C  11F5               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  9751   00542E  11F6               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  9752   005430  B4D8               	btfsc	status,2,c
  9753   005432  EF1D  F02A         	goto	u18641
  9754   005436  EF1F  F02A         	goto	u18640
  9755   00543A                     u18641:
  9756   00543A  EF22  F02A         	goto	l15636
  9757   00543E                     u18640:
  9758   00543E                     l15632:
  9759                           
  9760                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  9761   00543E  0E02               	movlw	2
  9762   005440  EFF0  F02B         	goto	l1042
  9763   005444                     l15636:
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  9767   005444  EE20 F00E          	lfsr	2,14
  9768   005448  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9769   00544A  26D9               	addwf	fsr2l,f,c
  9770   00544C  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9771   00544E  22DA               	addwfc	fsr2h,f,c
  9772   005450  0060  F3BF  FFDE   	movff	dir_sdi@ofs,postinc2
  9773   005456  0060  F3C3  FFDE   	movff	dir_sdi@ofs+1,postinc2
  9774   00545C  0060  F3C7  FFDE   	movff	dir_sdi@ofs+2,postinc2
  9775   005462  0060  F3CB  FFDE   	movff	dir_sdi@ofs+3,postinc2
  9776                           
  9777                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  9778   005468  EE20 F006          	lfsr	2,6
  9779   00546C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9780   00546E  26D9               	addwf	fsr2l,f,c
  9781   005470  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9782   005472  22DA               	addwfc	fsr2h,f,c
  9783   005474  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  9784   00547A  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  9785   005480  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  9786   005486  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  9787   00548C                     
  9788                           ; BSR set to: 0
  9789                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  9790   00548C  0101               	movlb	1	; () banked
  9791   00548E  5104               	movf	dir_sdi@clst& (0+255),w,b
  9792   005490  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9793   005492  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9794   005494  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  9795   005496  A4D8               	btfss	status,2,c
  9796   005498  EF50  F02A         	goto	u18651
  9797   00549C  EF52  F02A         	goto	u18650
  9798   0054A0                     u18651:
  9799   0054A0  EF72  F02A         	goto	l15646
  9800   0054A4                     u18650:
  9801   0054A4                     
  9802                           ; BSR set to: 1
  9803   0054A4  0060  F423  FFD9   	movff	dir_sdi@fs,fsr2l
  9804   0054AA  0060  F427  FFDA   	movff	dir_sdi@fs+1,fsr2h
  9805   0054B0  0E02               	movlw	2
  9806   0054B2  64DF               	cpfsgt	indf2,c
  9807   0054B4  EF5E  F02A         	goto	u18661
  9808   0054B8  EF60  F02A         	goto	u18660
  9809   0054BC                     u18661:
  9810   0054BC  EF72  F02A         	goto	l15646
  9811   0054C0                     u18660:
  9812   0054C0                     
  9813                           ; BSR set to: 1
  9814                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  9815   0054C0  EE20 F027          	lfsr	2,39
  9816   0054C4  5108               	movf	dir_sdi@fs& (0+255),w,b
  9817   0054C6  26D9               	addwf	fsr2l,f,c
  9818   0054C8  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9819   0054CA  22DA               	addwfc	fsr2h,f,c
  9820   0054CC  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  9821   0054D2  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  9822   0054D8  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  9823   0054DE  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  9824   0054E4                     l15646:
  9825                           
  9826                           ; BSR set to: 1
  9827                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  9828   0054E4  5104               	movf	dir_sdi@clst& (0+255),w,b
  9829   0054E6  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9830   0054E8  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9831   0054EA  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  9832   0054EC  A4D8               	btfss	status,2,c
  9833   0054EE  EF7B  F02A         	goto	u18671
  9834   0054F2  EF7D  F02A         	goto	u18670
  9835   0054F6                     u18671:
  9836   0054F6  EFD0  F02A         	goto	l15656
  9837   0054FA                     u18670:
  9838   0054FA                     
  9839                           ; BSR set to: 1
  9840                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  9841   0054FA  EE20 F007          	lfsr	2,7
  9842   0054FE  5108               	movf	dir_sdi@fs& (0+255),w,b
  9843   005500  26D9               	addwf	fsr2l,f,c
  9844   005502  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9845   005504  22DA               	addwfc	fsr2h,f,c
  9846   005506  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9847   00550C  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9848   005512  0100               	movlb	0	; () banked
  9849   005514  51F3               	movf	??_dir_sdi& (0+255),w,b
  9850   005516  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9851   005518  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9852   00551A  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9853   00551C  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9854   00551E  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  9855   005520  C0EF  F0F9         	movff	dir_sdi@ofs,??_dir_sdi+6
  9856   005524  C0F0  F0FA         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  9857   005528  C0F1  F0FB         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  9858   00552C  C0F2  F0FC         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  9859   005530  0E06               	movlw	6
  9860   005532  EFA0  F02A         	goto	u18680
  9861   005536                     u18685:
  9862   005536  90D8               	bcf	status,0,c
  9863   005538  33FC               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  9864   00553A  33FB               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  9865   00553C  33FA               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  9866   00553E  33F9               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  9867   005540                     u18680:
  9868   005540  2EE8               	decfsz	wreg,f,c
  9869   005542  EF9B  F02A         	goto	u18685
  9870   005546  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  9871   005548  5DF9               	subwf	(??_dir_sdi+6)& (0+255),w,b
  9872   00554A  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  9873   00554C  59FA               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  9874   00554E  51F7               	movf	(??_dir_sdi+4)& (0+255),w,b
  9875   005550  59FB               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  9876   005552  51F8               	movf	(??_dir_sdi+5)& (0+255),w,b
  9877   005554  59FC               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  9878   005556  A0D8               	btfss	status,0,c
  9879   005558  EFB0  F02A         	goto	u18691
  9880   00555C  EFB2  F02A         	goto	u18690
  9881   005560                     u18691:
  9882   005560  EFB4  F02A         	goto	l15654
  9883   005564                     u18690:
  9884   005564  EF1F  F02A         	goto	l15632
  9885   005568                     l15654:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  9889   005568  0101               	movlb	1	; () banked
  9890   00556A  EE20 F027          	lfsr	2,39
  9891   00556E  5108               	movf	dir_sdi@fs& (0+255),w,b
  9892   005570  26D9               	addwf	fsr2l,f,c
  9893   005572  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9894   005574  22DA               	addwfc	fsr2h,f,c
  9895   005576  0100               	movlb	0	; () banked
  9896   005578  EE10 F016          	lfsr	1,22
  9897   00557C  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9898   00557E  26E1               	addwf	fsr1l,f,c
  9899   005580  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9900   005582  22E2               	addwfc	fsr1h,f,c
  9901   005584  006F FF7B FFE6     	movff	postinc2,postinc1
  9902   00558A  006F FF7B FFE6     	movff	postinc2,postinc1
  9903   005590  006F FF7B FFE6     	movff	postinc2,postinc1
  9904   005596  006F FF7B FFE6     	movff	postinc2,postinc1
  9905                           
  9906                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  9907   00559C  EF89  F02B         	goto	l15678
  9908   0055A0                     l15656:
  9909                           
  9910                           ; BSR set to: 1
  9911                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  9912   0055A0  EE20 F009          	lfsr	2,9
  9913   0055A4  5108               	movf	dir_sdi@fs& (0+255),w,b
  9914   0055A6  26D9               	addwf	fsr2l,f,c
  9915   0055A8  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9916   0055AA  22DA               	addwfc	fsr2h,f,c
  9917   0055AC  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9918   0055B2  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9919   0055B8  0100               	movlb	0	; () banked
  9920   0055BA  51F3               	movf	??_dir_sdi& (0+255),w,b
  9921   0055BC  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9922   0055BE  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9923   0055C0  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9924   0055C2  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9925   0055C4  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  9926   0055C6  0E09               	movlw	9
  9927   0055C8                     u18705:
  9928   0055C8  90D8               	bcf	status,0,c
  9929   0055CA  37F5               	rlcf	(??_dir_sdi+2)& (0+255),f,b
  9930   0055CC  37F6               	rlcf	(??_dir_sdi+3)& (0+255),f,b
  9931   0055CE  37F7               	rlcf	(??_dir_sdi+4)& (0+255),f,b
  9932   0055D0  37F8               	rlcf	(??_dir_sdi+5)& (0+255),f,b
  9933   0055D2  2EE8               	decfsz	wreg,f,c
  9934   0055D4  EFE4  F02A         	goto	u18705
  9935   0055D8  C0F5  F100         	movff	??_dir_sdi+2,dir_sdi@csz
  9936   0055DC  C0F6  F101         	movff	??_dir_sdi+3,dir_sdi@csz+1
  9937   0055E0  C0F7  F102         	movff	??_dir_sdi+4,dir_sdi@csz+2
  9938   0055E4  C0F8  F103         	movff	??_dir_sdi+5,dir_sdi@csz+3
  9939                           
  9940                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  9941   0055E8  EF51  F02B         	goto	l1048
  9942   0055EC                     l15658:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
  9946   0055EC  C0ED  F0D3         	movff	dir_sdi@dp,get_fat@obj
  9947   0055F0  C0EE  F0D4         	movff	dir_sdi@dp+1,get_fat@obj+1
  9948   0055F4  C104  F0D5         	movff	dir_sdi@clst,get_fat@clst
  9949   0055F8  C105  F0D6         	movff	dir_sdi@clst+1,get_fat@clst+1
  9950   0055FC  C106  F0D7         	movff	dir_sdi@clst+2,get_fat@clst+2
  9951   005600  C107  F0D8         	movff	dir_sdi@clst+3,get_fat@clst+3
  9952   005604  ECE4  F027         	call	_get_fat	;wreg free
  9953   005608  C0D3  F104         	movff	?_get_fat,dir_sdi@clst
  9954   00560C  C0D4  F105         	movff	?_get_fat+1,dir_sdi@clst+1
  9955   005610  C0D5  F106         	movff	?_get_fat+2,dir_sdi@clst+2
  9956   005614  C0D6  F107         	movff	?_get_fat+3,dir_sdi@clst+3
  9957   005618                     
  9958                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  9959   005618  0101               	movlb	1	; () banked
  9960   00561A  2904               	incf	dir_sdi@clst& (0+255),w,b
  9961   00561C  E10A               	bnz	u18711
  9962   00561E  2905               	incf	(dir_sdi@clst+1)& (0+255),w,b
  9963   005620  E108               	bnz	u18711
  9964   005622  2906               	incf	(dir_sdi@clst+2)& (0+255),w,b
  9965   005624  E106               	bnz	u18711
  9966   005626  2907               	incf	(dir_sdi@clst+3)& (0+255),w,b
  9967   005628  A4D8               	btfss	status,2,c
  9968   00562A  EF19  F02B         	goto	u18711
  9969   00562E  EF1B  F02B         	goto	u18710
  9970   005632                     u18711:
  9971   005632  EF1E  F02B         	goto	l15666
  9972   005636                     u18710:
  9973   005636                     
  9974                           ; BSR set to: 1
  9975   005636  0E01               	movlw	1
  9976   005638  EFF0  F02B         	goto	l1042
  9977   00563C                     l15666:
  9978                           
  9979                           ; BSR set to: 1
  9980                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
  9981   00563C  5107               	movf	(dir_sdi@clst+3)& (0+255),w,b
  9982   00563E  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9983   005640  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9984   005642  E109               	bnz	u18720
  9985   005644  0E02               	movlw	2
  9986   005646  5D04               	subwf	dir_sdi@clst& (0+255),w,b
  9987   005648  A0D8               	btfss	status,0,c
  9988   00564A  EF29  F02B         	goto	u18721
  9989   00564E  EF2B  F02B         	goto	u18720
  9990   005652                     u18721:
  9991   005652  EF1F  F02A         	goto	l15632
  9992   005656                     u18720:
  9993   005656                     
  9994                           ; BSR set to: 1
  9995   005656  EE20 F017          	lfsr	2,23
  9996   00565A  5108               	movf	dir_sdi@fs& (0+255),w,b
  9997   00565C  26D9               	addwf	fsr2l,f,c
  9998   00565E  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9999   005660  22DA               	addwfc	fsr2h,f,c
 10000   005662  50DE               	movf	postinc2,w,c
 10001   005664  5D04               	subwf	dir_sdi@clst& (0+255),w,b
 10002   005666  50DE               	movf	postinc2,w,c
 10003   005668  5905               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 10004   00566A  50DE               	movf	postinc2,w,c
 10005   00566C  5906               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 10006   00566E  50DE               	movf	postinc2,w,c
 10007   005670  5907               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 10008   005672  A0D8               	btfss	status,0,c
 10009   005674  EF3E  F02B         	goto	u18731
 10010   005678  EF40  F02B         	goto	u18730
 10011   00567C                     u18731:
 10012   00567C  EF42  F02B         	goto	l15674
 10013   005680                     u18730:
 10014   005680  EF1F  F02A         	goto	l15632
 10015   005684                     l15674:
 10016                           
 10017                           ; BSR set to: 1
 10018                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
 10019   005684  5100               	movf	dir_sdi@csz& (0+255),w,b
 10020   005686  0100               	movlb	0	; () banked
 10021   005688  5FEF               	subwf	dir_sdi@ofs& (0+255),f,b
 10022   00568A  0101               	movlb	1	; () banked
 10023   00568C  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
 10024   00568E  0100               	movlb	0	; () banked
 10025   005690  5BF0               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 10026   005692  0101               	movlb	1	; () banked
 10027   005694  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
 10028   005696  0100               	movlb	0	; () banked
 10029   005698  5BF1               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 10030   00569A  0101               	movlb	1	; () banked
 10031   00569C  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
 10032   00569E  0100               	movlb	0	; () banked
 10033   0056A0  5BF2               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 10034   0056A2                     l1048:
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
 10038   0056A2  0101               	movlb	1	; () banked
 10039   0056A4  5100               	movf	dir_sdi@csz& (0+255),w,b
 10040   0056A6  0100               	movlb	0	; () banked
 10041   0056A8  5DEF               	subwf	dir_sdi@ofs& (0+255),w,b
 10042   0056AA  0101               	movlb	1	; () banked
 10043   0056AC  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
 10044   0056AE  0100               	movlb	0	; () banked
 10045   0056B0  59F0               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 10046   0056B2  0101               	movlb	1	; () banked
 10047   0056B4  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
 10048   0056B6  0100               	movlb	0	; () banked
 10049   0056B8  59F1               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 10050   0056BA  0101               	movlb	1	; () banked
 10051   0056BC  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
 10052   0056BE  0100               	movlb	0	; () banked
 10053   0056C0  59F2               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 10054   0056C2  B0D8               	btfsc	status,0,c
 10055   0056C4  EF66  F02B         	goto	u18741
 10056   0056C8  EF68  F02B         	goto	u18740
 10057   0056CC                     u18741:
 10058   0056CC  EFF6  F02A         	goto	l15658
 10059   0056D0                     u18740:
 10060   0056D0                     
 10061                           ; BSR set to: 0
 10062                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
 10063   0056D0  C108  F06C         	movff	dir_sdi@fs,clst2sect@fs
 10064   0056D4  C109  F06D         	movff	dir_sdi@fs+1,clst2sect@fs+1
 10065   0056D8  C104  F06E         	movff	dir_sdi@clst,clst2sect@clst
 10066   0056DC  C105  F06F         	movff	dir_sdi@clst+1,clst2sect@clst+1
 10067   0056E0  C106  F070         	movff	dir_sdi@clst+2,clst2sect@clst+2
 10068   0056E4  C107  F071         	movff	dir_sdi@clst+3,clst2sect@clst+3
 10069   0056E8  EC41  F046         	call	_clst2sect	;wreg free
 10070   0056EC  0100               	movlb	0	; () banked
 10071   0056EE  EE20 F016          	lfsr	2,22
 10072   0056F2  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10073   0056F4  26D9               	addwf	fsr2l,f,c
 10074   0056F6  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10075   0056F8  22DA               	addwfc	fsr2h,f,c
 10076   0056FA  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
 10077   005700  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
 10078   005706  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
 10079   00570C  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
 10080   005712                     l15678:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
 10084   005712  EE20 F012          	lfsr	2,18
 10085   005716  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10086   005718  26D9               	addwf	fsr2l,f,c
 10087   00571A  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10088   00571C  22DA               	addwfc	fsr2h,f,c
 10089   00571E  0060  F413  FFDE   	movff	dir_sdi@clst,postinc2
 10090   005724  0060  F417  FFDE   	movff	dir_sdi@clst+1,postinc2
 10091   00572A  0060  F41B  FFDE   	movff	dir_sdi@clst+2,postinc2
 10092   005730  0060  F41F  FFDE   	movff	dir_sdi@clst+3,postinc2
 10093   005736                     
 10094                           ; BSR set to: 0
 10095                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
 10096   005736  EE20 F016          	lfsr	2,22
 10097   00573A  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10098   00573C  26D9               	addwf	fsr2l,f,c
 10099   00573E  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10100   005740  22DA               	addwfc	fsr2h,f,c
 10101   005742  50DE               	movf	postinc2,w,c
 10102   005744  10DE               	iorwf	postinc2,w,c
 10103   005746  10DE               	iorwf	postinc2,w,c
 10104   005748  10DE               	iorwf	postinc2,w,c
 10105   00574A  A4D8               	btfss	status,2,c
 10106   00574C  EFAA  F02B         	goto	u18751
 10107   005750  EFAC  F02B         	goto	u18750
 10108   005754                     u18751:
 10109   005754  EFAE  F02B         	goto	l15686
 10110   005758                     u18750:
 10111   005758  EF1F  F02A         	goto	l15632
 10112   00575C                     l15686:
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
 10116   00575C  C0EF  F0F3         	movff	dir_sdi@ofs,??_dir_sdi
 10117   005760  C0F0  F0F4         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 10118   005764  C0F1  F0F5         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 10119   005768  C0F2  F0F6         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 10120   00576C  0E0A               	movlw	10
 10121   00576E  EFBE  F02B         	goto	u18760
 10122   005772                     u18765:
 10123   005772  90D8               	bcf	status,0,c
 10124   005774  33F6               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 10125   005776  33F5               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 10126   005778  33F4               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 10127   00577A  33F3               	rrcf	??_dir_sdi& (0+255),f,b
 10128   00577C                     u18760:
 10129   00577C  2EE8               	decfsz	wreg,f,c
 10130   00577E  EFB9  F02B         	goto	u18765
 10131   005782  EE20 F016          	lfsr	2,22
 10132   005786  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10133   005788  26D9               	addwf	fsr2l,f,c
 10134   00578A  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10135   00578C  22DA               	addwfc	fsr2h,f,c
 10136   00578E  51F3               	movf	??_dir_sdi& (0+255),w,b
 10137   005790  26DE               	addwf	postinc2,f,c
 10138   005792  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
 10139   005794  22DE               	addwfc	postinc2,f,c
 10140   005796  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
 10141   005798  22DE               	addwfc	postinc2,f,c
 10142   00579A  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
 10143   00579C  22DE               	addwfc	postinc2,f,c
 10144                           
 10145                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
 10146   00579E  0EFF               	movlw	255
 10147   0057A0  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
 10148   0057A2  6FF3               	movwf	??_dir_sdi& (0+255),b
 10149   0057A4  0E01               	movlw	1
 10150   0057A6  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 10151   0057A8  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
 10152   0057AA  51F3               	movf	??_dir_sdi& (0+255),w,b
 10153   0057AC  0101               	movlb	1	; () banked
 10154   0057AE  2508               	addwf	dir_sdi@fs& (0+255),w,b
 10155   0057B0  0100               	movlb	0	; () banked
 10156   0057B2  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
 10157   0057B4  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
 10158   0057B6  0101               	movlb	1	; () banked
 10159   0057B8  2109               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 10160   0057BA  0100               	movlb	0	; () banked
 10161   0057BC  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
 10162   0057BE  0E33               	movlw	51
 10163   0057C0  27F5               	addwf	(??_dir_sdi+2)& (0+255),f,b
 10164   0057C2  0E00               	movlw	0
 10165   0057C4  23F6               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 10166   0057C6  EE20 F01A          	lfsr	2,26
 10167   0057CA  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10168   0057CC  26D9               	addwf	fsr2l,f,c
 10169   0057CE  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10170   0057D0  22DA               	addwfc	fsr2h,f,c
 10171   0057D2  0060  F3D7  FFDE   	movff	??_dir_sdi+2,postinc2
 10172   0057D8  0060  F3DB  FFDD   	movff	??_dir_sdi+3,postdec2
 10173   0057DE                     
 10174                           ; BSR set to: 0
 10175                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
 10176   0057DE  0E00               	movlw	0
 10177   0057E0                     l1042:
 10178   0057E0  0012               	return		;funcret
 10179   0057E2                     __end_of_dir_sdi:
 10180                           	callstack 0
 10181                           
 10182 ;; *************** function _dir_next *****************
 10183 ;; Defined at:
 10184 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  dp              2  154[BANK0 ] PTR struct .
 10187 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
 10188 ;;  stretch         2  156[BANK0 ] int 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  clst            4   41[BANK1 ] unsigned long 
 10191 ;;  ofs             4   35[BANK1 ] unsigned long 
 10192 ;;  fs              2   39[BANK1 ] PTR struct .
 10193 ;;		 -> FatFs(563), NULL(0), 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      enum E68
 10196 ;; Registers used:
 10197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10203 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Totals:         0       4      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;Total ram usage:       26 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 14
 10210 ;; This function calls:
 10211 ;;		_clst2sect
 10212 ;;		_create_chain
 10213 ;;		_dir_clear
 10214 ;;		_get_fat
 10215 ;; This function is called by:
 10216 ;;		_dir_alloc
 10217 ;;		_dir_find
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text31
 10222   0042B4                     __ptext31:
 10223                           	callstack 0
 10224   0042B4                     _dir_next:
 10225                           	callstack 12
 10226   0042B4                     
 10227                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
 10228   0042B4  0060  F3EB  FFD9   	movff	dir_next@dp,fsr2l
 10229   0042BA  0060  F3EF  FFDA   	movff	dir_next@dp+1,fsr2h
 10230   0042C0  006F FF78  F127    	movff	postinc2,dir_next@fs
 10231   0042C6  006F FF74  F128    	movff	postdec2,dir_next@fs+1
 10232   0042CC                     
 10233                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
 10234   0042CC  0100               	movlb	0	; () banked
 10235   0042CE  EE20 F00E          	lfsr	2,14
 10236   0042D2  51FA               	movf	dir_next@dp& (0+255),w,b
 10237   0042D4  26D9               	addwf	fsr2l,f,c
 10238   0042D6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10239   0042D8  22DA               	addwfc	fsr2h,f,c
 10240   0042DA  006F FF78  F117    	movff	postinc2,??_dir_next
 10241   0042E0  006F FF78  F118    	movff	postinc2,??_dir_next+1
 10242   0042E6  006F FF78  F119    	movff	postinc2,??_dir_next+2
 10243   0042EC  006F FF78  F11A    	movff	postinc2,??_dir_next+3
 10244   0042F2  0E20               	movlw	32
 10245   0042F4  0101               	movlb	1	; () banked
 10246   0042F6  2517               	addwf	??_dir_next& (0+255),w,b
 10247   0042F8  6F23               	movwf	dir_next@ofs& (0+255),b
 10248   0042FA  0E00               	movlw	0
 10249   0042FC  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
 10250   0042FE  6F24               	movwf	(dir_next@ofs+1)& (0+255),b
 10251   004300  0E00               	movlw	0
 10252   004302  2119               	addwfc	(??_dir_next+2)& (0+255),w,b
 10253   004304  6F25               	movwf	(dir_next@ofs+2)& (0+255),b
 10254   004306  0E00               	movlw	0
 10255   004308  211A               	addwfc	(??_dir_next+3)& (0+255),w,b
 10256   00430A  6F26               	movwf	(dir_next@ofs+3)& (0+255),b
 10257   00430C                     
 10258                           ; BSR set to: 1
 10259                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
 10260   00430C  0100               	movlb	0	; () banked
 10261   00430E  EE20 F016          	lfsr	2,22
 10262   004312  51FA               	movf	dir_next@dp& (0+255),w,b
 10263   004314  26D9               	addwf	fsr2l,f,c
 10264   004316  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10265   004318  22DA               	addwfc	fsr2h,f,c
 10266   00431A  50DE               	movf	postinc2,w,c
 10267   00431C  10DE               	iorwf	postinc2,w,c
 10268   00431E  10DE               	iorwf	postinc2,w,c
 10269   004320  10DE               	iorwf	postinc2,w,c
 10270   004322  B4D8               	btfsc	status,2,c
 10271   004324  EF96  F021         	goto	u18771
 10272   004328  EF98  F021         	goto	u18770
 10273   00432C                     u18771:
 10274   00432C  EFA4  F021         	goto	l15708
 10275   004330                     u18770:
 10276   004330                     
 10277                           ; BSR set to: 0
 10278   004330  0101               	movlb	1	; () banked
 10279   004332  5126               	movf	(dir_next@ofs+3)& (0+255),w,b
 10280   004334  E109               	bnz	u18780
 10281   004336  0E20               	movlw	32
 10282   004338  5D25               	subwf	(dir_next@ofs+2)& (0+255),w,b
 10283   00433A  A0D8               	btfss	status,0,c
 10284   00433C  EFA2  F021         	goto	u18781
 10285   004340  EFA4  F021         	goto	u18780
 10286   004344                     u18781:
 10287   004344  EFA7  F021         	goto	l15712
 10288   004348                     u18780:
 10289   004348                     l15708:
 10290   004348  0E04               	movlw	4
 10291   00434A  EF92  F023         	goto	l1067
 10292   00434E                     l15712:
 10293                           
 10294                           ; BSR set to: 1
 10295                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
 10296   00434E  0EFF               	movlw	255
 10297   004350  1523               	andwf	dir_next@ofs& (0+255),w,b
 10298   004352  6F17               	movwf	??_dir_next& (0+255),b
 10299   004354  0E01               	movlw	1
 10300   004356  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
 10301   004358  6F18               	movwf	(??_dir_next+1)& (0+255),b
 10302   00435A  0E00               	movlw	0
 10303   00435C  1525               	andwf	(dir_next@ofs+2)& (0+255),w,b
 10304   00435E  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10305   004360  0E00               	movlw	0
 10306   004362  1526               	andwf	(dir_next@ofs+3)& (0+255),w,b
 10307   004364  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10308   004366  5117               	movf	??_dir_next& (0+255),w,b
 10309   004368  1118               	iorwf	(??_dir_next+1)& (0+255),w,b
 10310   00436A  1119               	iorwf	(??_dir_next+2)& (0+255),w,b
 10311   00436C  111A               	iorwf	(??_dir_next+3)& (0+255),w,b
 10312   00436E  A4D8               	btfss	status,2,c
 10313   004370  EFBC  F021         	goto	u18791
 10314   004374  EFBE  F021         	goto	u18790
 10315   004378                     u18791:
 10316   004378  EF60  F023         	goto	l15780
 10317   00437C                     u18790:
 10318   00437C                     
 10319                           ; BSR set to: 1
 10320                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
 10321   00437C  0100               	movlb	0	; () banked
 10322   00437E  EE20 F016          	lfsr	2,22
 10323   004382  51FA               	movf	dir_next@dp& (0+255),w,b
 10324   004384  26D9               	addwf	fsr2l,f,c
 10325   004386  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10326   004388  22DA               	addwfc	fsr2h,f,c
 10327   00438A  2ADE               	incf	postinc2,f,c
 10328   00438C  0E00               	movlw	0
 10329   00438E  22DE               	addwfc	postinc2,f,c
 10330   004390  22DE               	addwfc	postinc2,f,c
 10331   004392  22DE               	addwfc	postinc2,f,c
 10332                           
 10333                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
 10334   004394  EE20 F012          	lfsr	2,18
 10335   004398  51FA               	movf	dir_next@dp& (0+255),w,b
 10336   00439A  26D9               	addwf	fsr2l,f,c
 10337   00439C  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10338   00439E  22DA               	addwfc	fsr2h,f,c
 10339   0043A0  50DE               	movf	postinc2,w,c
 10340   0043A2  10DE               	iorwf	postinc2,w,c
 10341   0043A4  10DE               	iorwf	postinc2,w,c
 10342   0043A6  10DE               	iorwf	postinc2,w,c
 10343   0043A8  A4D8               	btfss	status,2,c
 10344   0043AA  EFD9  F021         	goto	u18801
 10345   0043AE  EFDB  F021         	goto	u18800
 10346   0043B2                     u18801:
 10347   0043B2  EF1D  F022         	goto	l15724
 10348   0043B6                     u18800:
 10349   0043B6                     
 10350                           ; BSR set to: 0
 10351                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
 10352   0043B6  0101               	movlb	1	; () banked
 10353   0043B8  EE20 F007          	lfsr	2,7
 10354   0043BC  5127               	movf	dir_next@fs& (0+255),w,b
 10355   0043BE  26D9               	addwf	fsr2l,f,c
 10356   0043C0  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10357   0043C2  22DA               	addwfc	fsr2h,f,c
 10358   0043C4  006F FF78  F117    	movff	postinc2,??_dir_next
 10359   0043CA  006F FF74  F118    	movff	postdec2,??_dir_next+1
 10360   0043D0  5117               	movf	??_dir_next& (0+255),w,b
 10361   0043D2  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10362   0043D4  5118               	movf	(??_dir_next+1)& (0+255),w,b
 10363   0043D6  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10364   0043D8  6B1B               	clrf	(??_dir_next+4)& (0+255),b
 10365   0043DA  6B1C               	clrf	(??_dir_next+5)& (0+255),b
 10366   0043DC  C123  F11D         	movff	dir_next@ofs,??_dir_next+6
 10367   0043E0  C124  F11E         	movff	dir_next@ofs+1,??_dir_next+7
 10368   0043E4  C125  F11F         	movff	dir_next@ofs+2,??_dir_next+8
 10369   0043E8  C126  F120         	movff	dir_next@ofs+3,??_dir_next+9
 10370   0043EC  0E06               	movlw	6
 10371   0043EE  EFFE  F021         	goto	u18810
 10372   0043F2                     u18815:
 10373   0043F2  90D8               	bcf	status,0,c
 10374   0043F4  3320               	rrcf	(??_dir_next+9)& (0+255),f,b
 10375   0043F6  331F               	rrcf	(??_dir_next+8)& (0+255),f,b
 10376   0043F8  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
 10377   0043FA  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
 10378   0043FC                     u18810:
 10379   0043FC  2EE8               	decfsz	wreg,f,c
 10380   0043FE  EFF9  F021         	goto	u18815
 10381   004402  5119               	movf	(??_dir_next+2)& (0+255),w,b
 10382   004404  5D1D               	subwf	(??_dir_next+6)& (0+255),w,b
 10383   004406  511A               	movf	(??_dir_next+3)& (0+255),w,b
 10384   004408  591E               	subwfb	(??_dir_next+7)& (0+255),w,b
 10385   00440A  511B               	movf	(??_dir_next+4)& (0+255),w,b
 10386   00440C  591F               	subwfb	(??_dir_next+8)& (0+255),w,b
 10387   00440E  511C               	movf	(??_dir_next+5)& (0+255),w,b
 10388   004410  5920               	subwfb	(??_dir_next+9)& (0+255),w,b
 10389   004412  A0D8               	btfss	status,0,c
 10390   004414  EF0E  F022         	goto	u18821
 10391   004418  EF10  F022         	goto	u18820
 10392   00441C                     u18821:
 10393   00441C  EF60  F023         	goto	l15780
 10394   004420                     u18820:
 10395   004420                     
 10396                           ; BSR set to: 1
 10397                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
 10398   004420  0100               	movlb	0	; () banked
 10399   004422  EE20 F016          	lfsr	2,22
 10400   004426  51FA               	movf	dir_next@dp& (0+255),w,b
 10401   004428  26D9               	addwf	fsr2l,f,c
 10402   00442A  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10403   00442C  22DA               	addwfc	fsr2h,f,c
 10404   00442E  6ADE               	clrf	postinc2,c
 10405   004430  6ADE               	clrf	postinc2,c
 10406   004432  6ADE               	clrf	postinc2,c
 10407   004434  6ADD               	clrf	postdec2,c
 10408   004436  EFA4  F021         	goto	l15708
 10409   00443A                     l15724:
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
 10413   00443A  0101               	movlb	1	; () banked
 10414   00443C  EE20 F009          	lfsr	2,9
 10415   004440  5127               	movf	dir_next@fs& (0+255),w,b
 10416   004442  26D9               	addwf	fsr2l,f,c
 10417   004444  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10418   004446  22DA               	addwfc	fsr2h,f,c
 10419   004448  006F FF78  F117    	movff	postinc2,??_dir_next
 10420   00444E  006F FF74  F118    	movff	postdec2,??_dir_next+1
 10421   004454  0EFF               	movlw	255
 10422   004456  2517               	addwf	??_dir_next& (0+255),w,b
 10423   004458  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10424   00445A  0EFF               	movlw	255
 10425   00445C  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
 10426   00445E  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10427   004460  C123  F11B         	movff	dir_next@ofs,??_dir_next+4
 10428   004464  C124  F11C         	movff	dir_next@ofs+1,??_dir_next+5
 10429   004468  C125  F11D         	movff	dir_next@ofs+2,??_dir_next+6
 10430   00446C  C126  F11E         	movff	dir_next@ofs+3,??_dir_next+7
 10431   004470  0E0A               	movlw	10
 10432   004472  EF40  F022         	goto	u18830
 10433   004476                     u18835:
 10434   004476  90D8               	bcf	status,0,c
 10435   004478  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
 10436   00447A  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
 10437   00447C  331C               	rrcf	(??_dir_next+5)& (0+255),f,b
 10438   00447E  331B               	rrcf	(??_dir_next+4)& (0+255),f,b
 10439   004480                     u18830:
 10440   004480  2EE8               	decfsz	wreg,f,c
 10441   004482  EF3B  F022         	goto	u18835
 10442   004486  5119               	movf	(??_dir_next+2)& (0+255),w,b
 10443   004488  151B               	andwf	(??_dir_next+4)& (0+255),w,b
 10444   00448A  6F1F               	movwf	(??_dir_next+8)& (0+255),b
 10445   00448C  511A               	movf	(??_dir_next+3)& (0+255),w,b
 10446   00448E  151C               	andwf	(??_dir_next+5)& (0+255),w,b
 10447   004490  6F20               	movwf	(??_dir_next+9)& (0+255),b
 10448   004492  0E00               	movlw	0
 10449   004494  151D               	andwf	(??_dir_next+6)& (0+255),w,b
 10450   004496  6F21               	movwf	(??_dir_next+10)& (0+255),b
 10451   004498  0E00               	movlw	0
 10452   00449A  151E               	andwf	(??_dir_next+7)& (0+255),w,b
 10453   00449C  6F22               	movwf	(??_dir_next+11)& (0+255),b
 10454   00449E  511F               	movf	(??_dir_next+8)& (0+255),w,b
 10455   0044A0  1120               	iorwf	(??_dir_next+9)& (0+255),w,b
 10456   0044A2  1121               	iorwf	(??_dir_next+10)& (0+255),w,b
 10457   0044A4  1122               	iorwf	(??_dir_next+11)& (0+255),w,b
 10458   0044A6  A4D8               	btfss	status,2,c
 10459   0044A8  EF58  F022         	goto	u18841
 10460   0044AC  EF5A  F022         	goto	u18840
 10461   0044B0                     u18841:
 10462   0044B0  EF60  F023         	goto	l15780
 10463   0044B4                     u18840:
 10464   0044B4                     
 10465                           ; BSR set to: 1
 10466                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
 10467   0044B4  C0FA  F0D3         	movff	dir_next@dp,get_fat@obj
 10468   0044B8  C0FB  F0D4         	movff	dir_next@dp+1,get_fat@obj+1
 10469   0044BC  0100               	movlb	0	; () banked
 10470   0044BE  EE20 F012          	lfsr	2,18
 10471   0044C2  51FA               	movf	dir_next@dp& (0+255),w,b
 10472   0044C4  26D9               	addwf	fsr2l,f,c
 10473   0044C6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10474   0044C8  22DA               	addwfc	fsr2h,f,c
 10475   0044CA  006F FF78  F0D5    	movff	postinc2,get_fat@clst
 10476   0044D0  006F FF78  F0D6    	movff	postinc2,get_fat@clst+1
 10477   0044D6  006F FF78  F0D7    	movff	postinc2,get_fat@clst+2
 10478   0044DC  006F FF78  F0D8    	movff	postinc2,get_fat@clst+3
 10479   0044E2  ECE4  F027         	call	_get_fat	;wreg free
 10480   0044E6  C0D3  F129         	movff	?_get_fat,dir_next@clst
 10481   0044EA  C0D4  F12A         	movff	?_get_fat+1,dir_next@clst+1
 10482   0044EE  C0D5  F12B         	movff	?_get_fat+2,dir_next@clst+2
 10483   0044F2  C0D6  F12C         	movff	?_get_fat+3,dir_next@clst+3
 10484   0044F6                     
 10485                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
 10486   0044F6  0101               	movlb	1	; () banked
 10487   0044F8  512C               	movf	(dir_next@clst+3)& (0+255),w,b
 10488   0044FA  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10489   0044FC  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10490   0044FE  E107               	bnz	u18851
 10491   004500  0E02               	movlw	2
 10492   004502  5D29               	subwf	dir_next@clst& (0+255),w,b
 10493   004504  B0D8               	btfsc	status,0,c
 10494   004506  EF87  F022         	goto	u18851
 10495   00450A  EF89  F022         	goto	u18850
 10496   00450E                     u18851:
 10497   00450E  EF8C  F022         	goto	l15734
 10498   004512                     u18850:
 10499   004512                     l15730:
 10500                           
 10501                           ; BSR set to: 1
 10502   004512  0E02               	movlw	2
 10503   004514  EF92  F023         	goto	l1067
 10504   004518                     l15734:
 10505                           
 10506                           ; BSR set to: 1
 10507                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 10508   004518  2929               	incf	dir_next@clst& (0+255),w,b
 10509   00451A  E10A               	bnz	u18861
 10510   00451C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
 10511   00451E  E108               	bnz	u18861
 10512   004520  292B               	incf	(dir_next@clst+2)& (0+255),w,b
 10513   004522  E106               	bnz	u18861
 10514   004524  292C               	incf	(dir_next@clst+3)& (0+255),w,b
 10515   004526  A4D8               	btfss	status,2,c
 10516   004528  EF98  F022         	goto	u18861
 10517   00452C  EF9A  F022         	goto	u18860
 10518   004530                     u18861:
 10519   004530  EF9D  F022         	goto	l15740
 10520   004534                     u18860:
 10521   004534                     l15736:
 10522   004534  0E01               	movlw	1
 10523   004536  EF92  F023         	goto	l1067
 10524   00453A                     l15740:
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
 10528   00453A  EE20 F017          	lfsr	2,23
 10529   00453E  5127               	movf	dir_next@fs& (0+255),w,b
 10530   004540  26D9               	addwf	fsr2l,f,c
 10531   004542  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10532   004544  22DA               	addwfc	fsr2h,f,c
 10533   004546  50DE               	movf	postinc2,w,c
 10534   004548  5D29               	subwf	dir_next@clst& (0+255),w,b
 10535   00454A  50DE               	movf	postinc2,w,c
 10536   00454C  592A               	subwfb	(dir_next@clst+1)& (0+255),w,b
 10537   00454E  50DE               	movf	postinc2,w,c
 10538   004550  592B               	subwfb	(dir_next@clst+2)& (0+255),w,b
 10539   004552  50DE               	movf	postinc2,w,c
 10540   004554  592C               	subwfb	(dir_next@clst+3)& (0+255),w,b
 10541   004556  A0D8               	btfss	status,0,c
 10542   004558  EFB0  F022         	goto	u18871
 10543   00455C  EFB2  F022         	goto	u18870
 10544   004560                     u18871:
 10545   004560  EF2C  F023         	goto	l1075
 10546   004564                     u18870:
 10547   004564                     
 10548                           ; BSR set to: 1
 10549                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
 10550   004564  0100               	movlb	0	; () banked
 10551   004566  51FC               	movf	dir_next@stretch& (0+255),w,b
 10552   004568  11FD               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 10553   00456A  A4D8               	btfss	status,2,c
 10554   00456C  EFBA  F022         	goto	u18881
 10555   004570  EFBC  F022         	goto	u18880
 10556   004574                     u18881:
 10557   004574  EFC8  F022         	goto	l15750
 10558   004578                     u18880:
 10559   004578                     
 10560                           ; BSR set to: 0
 10561                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
 10562   004578  EE20 F016          	lfsr	2,22
 10563   00457C  51FA               	movf	dir_next@dp& (0+255),w,b
 10564   00457E  26D9               	addwf	fsr2l,f,c
 10565   004580  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10566   004582  22DA               	addwfc	fsr2h,f,c
 10567   004584  6ADE               	clrf	postinc2,c
 10568   004586  6ADE               	clrf	postinc2,c
 10569   004588  6ADE               	clrf	postinc2,c
 10570   00458A  6ADD               	clrf	postdec2,c
 10571   00458C  EFA4  F021         	goto	l15708
 10572   004590                     l15750:
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
 10576   004590  C0FA  F0F4         	movff	dir_next@dp,create_chain@obj
 10577   004594  C0FB  F0F5         	movff	dir_next@dp+1,create_chain@obj+1
 10578   004598  EE20 F012          	lfsr	2,18
 10579   00459C  51FA               	movf	dir_next@dp& (0+255),w,b
 10580   00459E  26D9               	addwf	fsr2l,f,c
 10581   0045A0  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10582   0045A2  22DA               	addwfc	fsr2h,f,c
 10583   0045A4  006F FF78  F0F6    	movff	postinc2,create_chain@clst
 10584   0045AA  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
 10585   0045B0  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
 10586   0045B6  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
 10587   0045BC  ECFA  F016         	call	_create_chain	;wreg free
 10588   0045C0  C0F4  F129         	movff	?_create_chain,dir_next@clst
 10589   0045C4  C0F5  F12A         	movff	?_create_chain+1,dir_next@clst+1
 10590   0045C8  C0F6  F12B         	movff	?_create_chain+2,dir_next@clst+2
 10591   0045CC  C0F7  F12C         	movff	?_create_chain+3,dir_next@clst+3
 10592   0045D0                     
 10593                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
 10594   0045D0  0101               	movlb	1	; () banked
 10595   0045D2  5129               	movf	dir_next@clst& (0+255),w,b
 10596   0045D4  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10597   0045D6  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10598   0045D8  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
 10599   0045DA  A4D8               	btfss	status,2,c
 10600   0045DC  EFF2  F022         	goto	u18891
 10601   0045E0  EFF4  F022         	goto	u18890
 10602   0045E4                     u18891:
 10603   0045E4  EFF7  F022         	goto	l15758
 10604   0045E8                     u18890:
 10605   0045E8                     
 10606                           ; BSR set to: 1
 10607   0045E8  0E07               	movlw	7
 10608   0045EA  EF92  F023         	goto	l1067
 10609   0045EE                     l15758:
 10610                           
 10611                           ; BSR set to: 1
 10612                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
 10613   0045EE  0529               	decf	dir_next@clst& (0+255),w,b
 10614   0045F0  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10615   0045F2  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10616   0045F4  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
 10617   0045F6  A4D8               	btfss	status,2,c
 10618   0045F8  EF00  F023         	goto	u18901
 10619   0045FC  EF02  F023         	goto	u18900
 10620   004600                     u18901:
 10621   004600  EF04  F023         	goto	l15764
 10622   004604                     u18900:
 10623   004604  EF89  F022         	goto	l15730
 10624   004608                     l15764:
 10625                           
 10626                           ; BSR set to: 1
 10627                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 10628   004608  2929               	incf	dir_next@clst& (0+255),w,b
 10629   00460A  E10A               	bnz	u18911
 10630   00460C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
 10631   00460E  E108               	bnz	u18911
 10632   004610  292B               	incf	(dir_next@clst+2)& (0+255),w,b
 10633   004612  E106               	bnz	u18911
 10634   004614  292C               	incf	(dir_next@clst+3)& (0+255),w,b
 10635   004616  A4D8               	btfss	status,2,c
 10636   004618  EF10  F023         	goto	u18911
 10637   00461C  EF12  F023         	goto	u18910
 10638   004620                     u18911:
 10639   004620  EF14  F023         	goto	l15770
 10640   004624                     u18910:
 10641   004624  EF9A  F022         	goto	l15736
 10642   004628                     l15770:
 10643                           
 10644                           ; BSR set to: 1
 10645                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
 10646   004628  C127  F0C8         	movff	dir_next@fs,dir_clear@fs
 10647   00462C  C128  F0C9         	movff	dir_next@fs+1,dir_clear@fs+1
 10648   004630  C129  F0CA         	movff	dir_next@clst,dir_clear@clst
 10649   004634  C12A  F0CB         	movff	dir_next@clst+1,dir_clear@clst+1
 10650   004638  C12B  F0CC         	movff	dir_next@clst+2,dir_clear@clst+2
 10651   00463C  C12C  F0CD         	movff	dir_next@clst+3,dir_clear@clst+3
 10652   004640  EC61  F03E         	call	_dir_clear	;wreg free
 10653   004644  0900               	iorlw	0
 10654   004646  B4D8               	btfsc	status,2,c
 10655   004648  EF28  F023         	goto	u18921
 10656   00464C  EF2A  F023         	goto	u18920
 10657   004650                     u18921:
 10658   004650  EF2C  F023         	goto	l1075
 10659   004654                     u18920:
 10660   004654  EF9A  F022         	goto	l15736
 10661   004658                     l1075:
 10662                           
 10663                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
 10664   004658  0100               	movlb	0	; () banked
 10665   00465A  EE20 F012          	lfsr	2,18
 10666   00465E  51FA               	movf	dir_next@dp& (0+255),w,b
 10667   004660  26D9               	addwf	fsr2l,f,c
 10668   004662  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10669   004664  22DA               	addwfc	fsr2h,f,c
 10670   004666  0060  F4A7  FFDE   	movff	dir_next@clst,postinc2
 10671   00466C  0060  F4AB  FFDE   	movff	dir_next@clst+1,postinc2
 10672   004672  0060  F4AF  FFDE   	movff	dir_next@clst+2,postinc2
 10673   004678  0060  F4B3  FFDE   	movff	dir_next@clst+3,postinc2
 10674   00467E                     
 10675                           ; BSR set to: 0
 10676                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
 10677   00467E  C127  F06C         	movff	dir_next@fs,clst2sect@fs
 10678   004682  C128  F06D         	movff	dir_next@fs+1,clst2sect@fs+1
 10679   004686  C129  F06E         	movff	dir_next@clst,clst2sect@clst
 10680   00468A  C12A  F06F         	movff	dir_next@clst+1,clst2sect@clst+1
 10681   00468E  C12B  F070         	movff	dir_next@clst+2,clst2sect@clst+2
 10682   004692  C12C  F071         	movff	dir_next@clst+3,clst2sect@clst+3
 10683   004696  EC41  F046         	call	_clst2sect	;wreg free
 10684   00469A  0100               	movlb	0	; () banked
 10685   00469C  EE20 F016          	lfsr	2,22
 10686   0046A0  51FA               	movf	dir_next@dp& (0+255),w,b
 10687   0046A2  26D9               	addwf	fsr2l,f,c
 10688   0046A4  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10689   0046A6  22DA               	addwfc	fsr2h,f,c
 10690   0046A8  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
 10691   0046AE  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
 10692   0046B4  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
 10693   0046BA  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
 10694   0046C0                     l15780:
 10695                           
 10696                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
 10697   0046C0  0100               	movlb	0	; () banked
 10698   0046C2  EE20 F00E          	lfsr	2,14
 10699   0046C6  51FA               	movf	dir_next@dp& (0+255),w,b
 10700   0046C8  26D9               	addwf	fsr2l,f,c
 10701   0046CA  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10702   0046CC  22DA               	addwfc	fsr2h,f,c
 10703   0046CE  0060  F48F  FFDE   	movff	dir_next@ofs,postinc2
 10704   0046D4  0060  F493  FFDE   	movff	dir_next@ofs+1,postinc2
 10705   0046DA  0060  F497  FFDE   	movff	dir_next@ofs+2,postinc2
 10706   0046E0  0060  F49B  FFDE   	movff	dir_next@ofs+3,postinc2
 10707   0046E6                     
 10708                           ; BSR set to: 0
 10709                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
 10710   0046E6  0EFF               	movlw	255
 10711   0046E8  0101               	movlb	1	; () banked
 10712   0046EA  1523               	andwf	dir_next@ofs& (0+255),w,b
 10713   0046EC  6F17               	movwf	??_dir_next& (0+255),b
 10714   0046EE  0E01               	movlw	1
 10715   0046F0  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
 10716   0046F2  6F18               	movwf	(??_dir_next+1)& (0+255),b
 10717   0046F4  5117               	movf	??_dir_next& (0+255),w,b
 10718   0046F6  2527               	addwf	dir_next@fs& (0+255),w,b
 10719   0046F8  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10720   0046FA  5118               	movf	(??_dir_next+1)& (0+255),w,b
 10721   0046FC  2128               	addwfc	(dir_next@fs+1)& (0+255),w,b
 10722   0046FE  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10723   004700  0E33               	movlw	51
 10724   004702  2719               	addwf	(??_dir_next+2)& (0+255),f,b
 10725   004704  0E00               	movlw	0
 10726   004706  231A               	addwfc	(??_dir_next+3)& (0+255),f,b
 10727   004708  0100               	movlb	0	; () banked
 10728   00470A  EE20 F01A          	lfsr	2,26
 10729   00470E  51FA               	movf	dir_next@dp& (0+255),w,b
 10730   004710  26D9               	addwf	fsr2l,f,c
 10731   004712  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10732   004714  22DA               	addwfc	fsr2h,f,c
 10733   004716  0060  F467  FFDE   	movff	??_dir_next+2,postinc2
 10734   00471C  0060  F46B  FFDD   	movff	??_dir_next+3,postdec2
 10735   004722                     
 10736                           ; BSR set to: 0
 10737                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
 10738   004722  0E00               	movlw	0
 10739   004724                     l1067:
 10740   004724  0012               	return		;funcret
 10741   004726                     __end_of_dir_next:
 10742                           	callstack 0
 10743                           
 10744 ;; *************** function _dir_clear *****************
 10745 ;; Defined at:
 10746 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  fs              2  104[BANK0 ] PTR struct .
 10749 ;;		 -> FatFs(563), NULL(0), 
 10750 ;;  clst            4  106[BANK0 ] unsigned long 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  sect            4  114[BANK0 ] unsigned long 
 10753 ;;  n               2  120[BANK0 ] unsigned int 
 10754 ;;  szb             2  118[BANK0 ] unsigned int 
 10755 ;;  ibuf            2  112[BANK0 ] PTR unsigned char 
 10756 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      enum E68
 10759 ;; Registers used:
 10760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10766 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;Total ram usage:       18 bytes
 10771 ;; Hardware stack levels used: 1
 10772 ;; Hardware stack levels required when called: 11
 10773 ;; This function calls:
 10774 ;;		_clst2sect
 10775 ;;		_disk_write
 10776 ;;		_mem_set
 10777 ;;		_sync_window
 10778 ;; This function is called by:
 10779 ;;		_dir_next
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text32
 10784   007CC2                     __ptext32:
 10785                           	callstack 0
 10786   007CC2                     _dir_clear:
 10787                           	callstack 14
 10788   007CC2                     
 10789                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
 10790   007CC2  C0C8  F0B5         	movff	dir_clear@fs,sync_window@fs
 10791   007CC6  C0C9  F0B6         	movff	dir_clear@fs+1,sync_window@fs+1
 10792   007CCA  ECEE  F038         	call	_sync_window	;wreg free
 10793   007CCE  0900               	iorlw	0
 10794   007CD0  B4D8               	btfsc	status,2,c
 10795   007CD2  EF6D  F03E         	goto	u18031
 10796   007CD6  EF6F  F03E         	goto	u18030
 10797   007CDA                     u18031:
 10798   007CDA  EF72  F03E         	goto	l15318
 10799   007CDE                     u18030:
 10800   007CDE  0E01               	movlw	1
 10801   007CE0  EF0C  F03F         	goto	l1025
 10802   007CE4                     l15318:
 10803                           
 10804                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
 10805   007CE4  C0C8  F06C         	movff	dir_clear@fs,clst2sect@fs
 10806   007CE8  C0C9  F06D         	movff	dir_clear@fs+1,clst2sect@fs+1
 10807   007CEC  C0CA  F06E         	movff	dir_clear@clst,clst2sect@clst
 10808   007CF0  C0CB  F06F         	movff	dir_clear@clst+1,clst2sect@clst+1
 10809   007CF4  C0CC  F070         	movff	dir_clear@clst+2,clst2sect@clst+2
 10810   007CF8  C0CD  F071         	movff	dir_clear@clst+3,clst2sect@clst+3
 10811   007CFC  EC41  F046         	call	_clst2sect	;wreg free
 10812   007D00  C06C  F0D2         	movff	?_clst2sect,dir_clear@sect
 10813   007D04  C06D  F0D3         	movff	?_clst2sect+1,dir_clear@sect+1
 10814   007D08  C06E  F0D4         	movff	?_clst2sect+2,dir_clear@sect+2
 10815   007D0C  C06F  F0D5         	movff	?_clst2sect+3,dir_clear@sect+3
 10816   007D10                     
 10817                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
 10818   007D10  0100               	movlb	0	; () banked
 10819   007D12  EE20 F02F          	lfsr	2,47
 10820   007D16  51C8               	movf	dir_clear@fs& (0+255),w,b
 10821   007D18  26D9               	addwf	fsr2l,f,c
 10822   007D1A  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10823   007D1C  22DA               	addwfc	fsr2h,f,c
 10824   007D1E  0060  F34B  FFDE   	movff	dir_clear@sect,postinc2
 10825   007D24  0060  F34F  FFDE   	movff	dir_clear@sect+1,postinc2
 10826   007D2A  0060  F353  FFDE   	movff	dir_clear@sect+2,postinc2
 10827   007D30  0060  F357  FFDE   	movff	dir_clear@sect+3,postinc2
 10828   007D36                     
 10829                           ; BSR set to: 0
 10830                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
 10831   007D36  0E33               	movlw	51
 10832   007D38  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10833   007D3A  6F60               	movwf	mem_set@dst& (0+255),b
 10834   007D3C  0E00               	movlw	0
 10835   007D3E  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10836   007D40  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 10837   007D42  0E00               	movlw	0
 10838   007D44  6F63               	movwf	(mem_set@val+1)& (0+255),b
 10839   007D46  0E00               	movlw	0
 10840   007D48  6F62               	movwf	mem_set@val& (0+255),b
 10841   007D4A  0E02               	movlw	2
 10842   007D4C  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 10843   007D4E  0E00               	movlw	0
 10844   007D50  6F64               	movwf	mem_set@cnt& (0+255),b
 10845   007D52  EC5C  F050         	call	_mem_set	;wreg free
 10846   007D56                     
 10847                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
 10848   007D56  0E33               	movlw	51
 10849   007D58  0100               	movlb	0	; () banked
 10850   007D5A  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10851   007D5C  6FD0               	movwf	dir_clear@ibuf& (0+255),b
 10852   007D5E  0E00               	movlw	0
 10853   007D60  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10854   007D62  6FD1               	movwf	(dir_clear@ibuf+1)& (0+255),b
 10855   007D64                     
 10856                           ; BSR set to: 0
 10857   007D64  0E00               	movlw	0
 10858   007D66  6FD7               	movwf	(dir_clear@szb+1)& (0+255),b
 10859   007D68  0E01               	movlw	1
 10860   007D6A  6FD6               	movwf	dir_clear@szb& (0+255),b
 10861   007D6C                     
 10862                           ; BSR set to: 0
 10863                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
 10864   007D6C  0E00               	movlw	0
 10865   007D6E  6FD9               	movwf	(dir_clear@n+1)& (0+255),b
 10866   007D70  0E00               	movlw	0
 10867   007D72  6FD8               	movwf	dir_clear@n& (0+255),b
 10868   007D74  EFC1  F03E         	goto	l15332
 10869   007D78                     l15330:
 10870   007D78  0100               	movlb	0	; () banked
 10871   007D7A  51D6               	movf	dir_clear@szb& (0+255),w,b
 10872   007D7C  27D8               	addwf	dir_clear@n& (0+255),f,b
 10873   007D7E  51D7               	movf	(dir_clear@szb+1)& (0+255),w,b
 10874   007D80  23D9               	addwfc	(dir_clear@n+1)& (0+255),f,b
 10875   007D82                     l15332:
 10876                           
 10877                           ; BSR set to: 0
 10878   007D82  EE20 F009          	lfsr	2,9
 10879   007D86  51C8               	movf	dir_clear@fs& (0+255),w,b
 10880   007D88  26D9               	addwf	fsr2l,f,c
 10881   007D8A  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10882   007D8C  22DA               	addwfc	fsr2h,f,c
 10883   007D8E  50DE               	movf	postinc2,w,c
 10884   007D90  5DD8               	subwf	dir_clear@n& (0+255),w,b
 10885   007D92  50DE               	movf	postinc2,w,c
 10886   007D94  59D9               	subwfb	(dir_clear@n+1)& (0+255),w,b
 10887   007D96  B0D8               	btfsc	status,0,c
 10888   007D98  EFD0  F03E         	goto	u18041
 10889   007D9C  EFD2  F03E         	goto	u18040
 10890   007DA0                     u18041:
 10891   007DA0  EFF7  F03E         	goto	l15336
 10892   007DA4                     u18040:
 10893   007DA4                     
 10894                           ; BSR set to: 0
 10895   007DA4  C0D0  F0AB         	movff	dir_clear@ibuf,disk_write@buff
 10896   007DA8  C0D1  F0AC         	movff	dir_clear@ibuf+1,disk_write@buff+1
 10897   007DAC  51D8               	movf	dir_clear@n& (0+255),w,b
 10898   007DAE  25D2               	addwf	dir_clear@sect& (0+255),w,b
 10899   007DB0  6FAD               	movwf	disk_write@sector& (0+255),b
 10900   007DB2  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 10901   007DB4  21D3               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 10902   007DB6  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 10903   007DB8  0E00               	movlw	0
 10904   007DBA  21D4               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 10905   007DBC  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 10906   007DBE  0E00               	movlw	0
 10907   007DC0  21D5               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 10908   007DC2  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 10909   007DC4  C0D6  F0B1         	movff	dir_clear@szb,disk_write@count
 10910   007DC8  C0D7  F0B2         	movff	dir_clear@szb+1,disk_write@count+1
 10911   007DCC  EE20 F001          	lfsr	2,1
 10912   007DD0  51C8               	movf	dir_clear@fs& (0+255),w,b
 10913   007DD2  26D9               	addwf	fsr2l,f,c
 10914   007DD4  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10915   007DD6  22DA               	addwfc	fsr2h,f,c
 10916   007DD8  50DF               	movf	indf2,w,c
 10917   007DDA  ECF2  F04C         	call	_disk_write
 10918   007DDE  0900               	iorlw	0
 10919   007DE0  B4D8               	btfsc	status,2,c
 10920   007DE2  EFF5  F03E         	goto	u18051
 10921   007DE6  EFF7  F03E         	goto	u18050
 10922   007DEA                     u18051:
 10923   007DEA  EFBC  F03E         	goto	l15330
 10924   007DEE                     u18050:
 10925   007DEE                     l15336:
 10926                           
 10927                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 10928   007DEE  0100               	movlb	0	; () banked
 10929   007DF0  EE20 F009          	lfsr	2,9
 10930   007DF4  51C8               	movf	dir_clear@fs& (0+255),w,b
 10931   007DF6  26D9               	addwf	fsr2l,f,c
 10932   007DF8  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10933   007DFA  22DA               	addwfc	fsr2h,f,c
 10934   007DFC  51D8               	movf	dir_clear@n& (0+255),w,b
 10935   007DFE  18DE               	xorwf	postinc2,w,c
 10936   007E00  E107               	bnz	u18061
 10937   007E02  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 10938   007E04  18DE               	xorwf	postinc2,w,c
 10939   007E06  A4D8               	btfss	status,2,c
 10940   007E08  EF08  F03F         	goto	u18061
 10941   007E0C  EF0B  F03F         	goto	u18060
 10942   007E10                     u18061:
 10943   007E10  0E01               	movlw	1
 10944   007E12  EF0C  F03F         	goto	u18070
 10945   007E16                     u18060:
 10946   007E16  0E00               	movlw	0
 10947   007E18                     u18070:
 10948   007E18                     l1025:
 10949   007E18  0012               	return		;funcret
 10950   007E1A                     __end_of_dir_clear:
 10951                           	callstack 0
 10952                           
 10953 ;; *************** function _clst2sect *****************
 10954 ;; Defined at:
 10955 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  fs              2   12[BANK0 ] PTR struct .
 10958 ;;		 -> FatFs(563), NULL(0), 
 10959 ;;  clst            4   14[BANK0 ] unsigned long 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;		None
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  4   12[BANK0 ] unsigned long 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10971 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;Total ram usage:       12 bytes
 10976 ;; Hardware stack levels used: 1
 10977 ;; Hardware stack levels required when called: 6
 10978 ;; This function calls:
 10979 ;;		___lmul
 10980 ;; This function is called by:
 10981 ;;		_dir_clear
 10982 ;;		_dir_sdi
 10983 ;;		_dir_next
 10984 ;;		_f_open
 10985 ;;		_f_write
 10986 ;;		_f_read
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text33
 10991   008C82                     __ptext33:
 10992                           	callstack 0
 10993   008C82                     _clst2sect:
 10994                           	callstack 22
 10995   008C82                     
 10996                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
 10997   008C82  0E02               	movlw	2
 10998   008C84  0100               	movlb	0	; () banked
 10999   008C86  5F6E               	subwf	clst2sect@clst& (0+255),f,b
 11000   008C88  0E00               	movlw	0
 11001   008C8A  5B6F               	subwfb	(clst2sect@clst+1)& (0+255),f,b
 11002   008C8C  5B70               	subwfb	(clst2sect@clst+2)& (0+255),f,b
 11003   008C8E  5B71               	subwfb	(clst2sect@clst+3)& (0+255),f,b
 11004   008C90                     
 11005                           ; BSR set to: 0
 11006                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
 11007   008C90  EE20 F017          	lfsr	2,23
 11008   008C94  516C               	movf	clst2sect@fs& (0+255),w,b
 11009   008C96  26D9               	addwf	fsr2l,f,c
 11010   008C98  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11011   008C9A  22DA               	addwfc	fsr2h,f,c
 11012   008C9C  0EFE               	movlw	254
 11013   008C9E  24DE               	addwf	postinc2,w,c
 11014   008CA0  6F72               	movwf	??_clst2sect& (0+255),b
 11015   008CA2  0EFF               	movlw	255
 11016   008CA4  20DE               	addwfc	postinc2,w,c
 11017   008CA6  6F73               	movwf	(??_clst2sect+1)& (0+255),b
 11018   008CA8  0EFF               	movlw	255
 11019   008CAA  20DE               	addwfc	postinc2,w,c
 11020   008CAC  6F74               	movwf	(??_clst2sect+2)& (0+255),b
 11021   008CAE  0EFF               	movlw	255
 11022   008CB0  20DE               	addwfc	postinc2,w,c
 11023   008CB2  6F75               	movwf	(??_clst2sect+3)& (0+255),b
 11024   008CB4  5172               	movf	??_clst2sect& (0+255),w,b
 11025   008CB6  5D6E               	subwf	clst2sect@clst& (0+255),w,b
 11026   008CB8  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 11027   008CBA  596F               	subwfb	(clst2sect@clst+1)& (0+255),w,b
 11028   008CBC  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 11029   008CBE  5970               	subwfb	(clst2sect@clst+2)& (0+255),w,b
 11030   008CC0  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 11031   008CC2  5971               	subwfb	(clst2sect@clst+3)& (0+255),w,b
 11032   008CC4  A0D8               	btfss	status,0,c
 11033   008CC6  EF67  F046         	goto	u17511
 11034   008CCA  EF69  F046         	goto	u17510
 11035   008CCE                     u17511:
 11036   008CCE  EF73  F046         	goto	l15058
 11037   008CD2                     u17510:
 11038   008CD2                     
 11039                           ; BSR set to: 0
 11040   008CD2  0E00               	movlw	0
 11041   008CD4  6F6C               	movwf	?_clst2sect& (0+255),b
 11042   008CD6  0E00               	movlw	0
 11043   008CD8  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 11044   008CDA  0E00               	movlw	0
 11045   008CDC  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 11046   008CDE  0E00               	movlw	0
 11047   008CE0  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 11048   008CE2  EFAE  F046         	goto	l919
 11049   008CE6                     l15058:
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
 11053   008CE6  EE20 F02B          	lfsr	2,43
 11054   008CEA  516C               	movf	clst2sect@fs& (0+255),w,b
 11055   008CEC  26D9               	addwf	fsr2l,f,c
 11056   008CEE  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11057   008CF0  22DA               	addwfc	fsr2h,f,c
 11058   008CF2  006F FF78  F072    	movff	postinc2,??_clst2sect
 11059   008CF8  006F FF78  F073    	movff	postinc2,??_clst2sect+1
 11060   008CFE  006F FF78  F074    	movff	postinc2,??_clst2sect+2
 11061   008D04  006F FF78  F075    	movff	postinc2,??_clst2sect+3
 11062   008D0A  EE20 F009          	lfsr	2,9
 11063   008D0E  516C               	movf	clst2sect@fs& (0+255),w,b
 11064   008D10  26D9               	addwf	fsr2l,f,c
 11065   008D12  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11066   008D14  22DA               	addwfc	fsr2h,f,c
 11067   008D16  006F FF78  F076    	movff	postinc2,??_clst2sect+4
 11068   008D1C  006F FF74  F077    	movff	postdec2,??_clst2sect+5
 11069   008D22  C076  F060         	movff	??_clst2sect+4,___lmul@multiplier
 11070   008D26  C077  F061         	movff	??_clst2sect+5,___lmul@multiplier+1
 11071   008D2A  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 11072   008D2C  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 11073   008D2E  C06E  F064         	movff	clst2sect@clst,___lmul@multiplicand
 11074   008D32  C06F  F065         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 11075   008D36  C070  F066         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 11076   008D3A  C071  F067         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 11077   008D3E  ECBC  F04C         	call	___lmul	;wreg free
 11078   008D42  0100               	movlb	0	; () banked
 11079   008D44  5172               	movf	??_clst2sect& (0+255),w,b
 11080   008D46  2560               	addwf	?___lmul& (0+255),w,b
 11081   008D48  6F6C               	movwf	?_clst2sect& (0+255),b
 11082   008D4A  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 11083   008D4C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 11084   008D4E  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 11085   008D50  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 11086   008D52  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 11087   008D54  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 11088   008D56  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 11089   008D58  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 11090   008D5A  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 11091   008D5C                     l919:
 11092                           
 11093                           ; BSR set to: 0
 11094   008D5C  0012               	return		;funcret
 11095   008D5E                     __end_of_clst2sect:
 11096                           	callstack 0
 11097                           
 11098 ;; *************** function _create_chain *****************
 11099 ;; Defined at:
 11100 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  obj             2  148[BANK0 ] PTR struct .
 11103 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 11104 ;;  clst            4  150[BANK0 ] unsigned long 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;  cs              4   19[BANK1 ] unsigned long 
 11107 ;;  ncl             4   13[BANK1 ] unsigned long 
 11108 ;;  scl             4    9[BANK1 ] unsigned long 
 11109 ;;  fs              2   17[BANK1 ] PTR struct .
 11110 ;;		 -> FatFs(563), NULL(0), 
 11111 ;;  res             1    8[BANK1 ] enum E68
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  4  148[BANK0 ] unsigned long 
 11114 ;; Registers used:
 11115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11121 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;      Totals:         0       6      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11125 ;;Total ram usage:       29 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 13
 11128 ;; This function calls:
 11129 ;;		_get_fat
 11130 ;;		_put_fat
 11131 ;; This function is called by:
 11132 ;;		_dir_next
 11133 ;;		_f_write
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text34
 11138   002DF4                     __ptext34:
 11139                           	callstack 0
 11140   002DF4                     _create_chain:
 11141                           	callstack 15
 11142   002DF4                     
 11143                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
 11144   002DF4  0060  F3D3  FFD9   	movff	create_chain@obj,fsr2l
 11145   002DFA  0060  F3D7  FFDA   	movff	create_chain@obj+1,fsr2h
 11146   002E00  006F FF78  F111    	movff	postinc2,create_chain@fs
 11147   002E06  006F FF74  F112    	movff	postdec2,create_chain@fs+1
 11148   002E0C                     
 11149                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
 11150   002E0C  0100               	movlb	0	; () banked
 11151   002E0E  51F6               	movf	create_chain@clst& (0+255),w,b
 11152   002E10  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 11153   002E12  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 11154   002E14  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 11155   002E16  A4D8               	btfss	status,2,c
 11156   002E18  EF10  F017         	goto	u17771
 11157   002E1C  EF12  F017         	goto	u17770
 11158   002E20                     u17771:
 11159   002E20  EF4F  F017         	goto	l15210
 11160   002E24                     u17770:
 11161   002E24                     
 11162                           ; BSR set to: 0
 11163                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
 11164   002E24  0101               	movlb	1	; () banked
 11165   002E26  EE20 F00B          	lfsr	2,11
 11166   002E2A  5111               	movf	create_chain@fs& (0+255),w,b
 11167   002E2C  26D9               	addwf	fsr2l,f,c
 11168   002E2E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11169   002E30  22DA               	addwfc	fsr2h,f,c
 11170   002E32  006F FF78  F109    	movff	postinc2,create_chain@scl
 11171   002E38  006F FF78  F10A    	movff	postinc2,create_chain@scl+1
 11172   002E3E  006F FF78  F10B    	movff	postinc2,create_chain@scl+2
 11173   002E44  006F FF78  F10C    	movff	postinc2,create_chain@scl+3
 11174   002E4A                     
 11175                           ; BSR set to: 1
 11176                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 11177   002E4A  5109               	movf	create_chain@scl& (0+255),w,b
 11178   002E4C  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 11179   002E4E  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 11180   002E50  110C               	iorwf	(create_chain@scl+3)& (0+255),w,b
 11181   002E52  B4D8               	btfsc	status,2,c
 11182   002E54  EF2E  F017         	goto	u17781
 11183   002E58  EF30  F017         	goto	u17780
 11184   002E5C                     u17781:
 11185   002E5C  EF45  F017         	goto	l15208
 11186   002E60                     u17780:
 11187   002E60                     
 11188                           ; BSR set to: 1
 11189   002E60  EE20 F017          	lfsr	2,23
 11190   002E64  5111               	movf	create_chain@fs& (0+255),w,b
 11191   002E66  26D9               	addwf	fsr2l,f,c
 11192   002E68  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11193   002E6A  22DA               	addwfc	fsr2h,f,c
 11194   002E6C  50DE               	movf	postinc2,w,c
 11195   002E6E  5D09               	subwf	create_chain@scl& (0+255),w,b
 11196   002E70  50DE               	movf	postinc2,w,c
 11197   002E72  590A               	subwfb	(create_chain@scl+1)& (0+255),w,b
 11198   002E74  50DE               	movf	postinc2,w,c
 11199   002E76  590B               	subwfb	(create_chain@scl+2)& (0+255),w,b
 11200   002E78  50DE               	movf	postinc2,w,c
 11201   002E7A  590C               	subwfb	(create_chain@scl+3)& (0+255),w,b
 11202   002E7C  A0D8               	btfss	status,0,c
 11203   002E7E  EF43  F017         	goto	u17791
 11204   002E82  EF45  F017         	goto	u17790
 11205   002E86                     u17791:
 11206   002E86  EFB5  F017         	goto	l15226
 11207   002E8A                     u17790:
 11208   002E8A                     l15208:
 11209                           
 11210                           ; BSR set to: 1
 11211   002E8A  0E01               	movlw	1
 11212   002E8C  6F09               	movwf	create_chain@scl& (0+255),b
 11213   002E8E  0E00               	movlw	0
 11214   002E90  6F0A               	movwf	(create_chain@scl+1)& (0+255),b
 11215   002E92  0E00               	movlw	0
 11216   002E94  6F0B               	movwf	(create_chain@scl+2)& (0+255),b
 11217   002E96  0E00               	movlw	0
 11218   002E98  6F0C               	movwf	(create_chain@scl+3)& (0+255),b
 11219   002E9A  EFB5  F017         	goto	l15226
 11220   002E9E                     l15210:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
 11224   002E9E  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11225   002EA2  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11226   002EA6  C0F6  F0D5         	movff	create_chain@clst,get_fat@clst
 11227   002EAA  C0F7  F0D6         	movff	create_chain@clst+1,get_fat@clst+1
 11228   002EAE  C0F8  F0D7         	movff	create_chain@clst+2,get_fat@clst+2
 11229   002EB2  C0F9  F0D8         	movff	create_chain@clst+3,get_fat@clst+3
 11230   002EB6  ECE4  F027         	call	_get_fat	;wreg free
 11231   002EBA  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11232   002EBE  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11233   002EC2  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11234   002EC6  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11235   002ECA                     
 11236                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
 11237   002ECA  0101               	movlb	1	; () banked
 11238   002ECC  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 11239   002ECE  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11240   002ED0  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11241   002ED2  E107               	bnz	u17801
 11242   002ED4  0E02               	movlw	2
 11243   002ED6  5D13               	subwf	create_chain@cs& (0+255),w,b
 11244   002ED8  B0D8               	btfsc	status,0,c
 11245   002EDA  EF71  F017         	goto	u17801
 11246   002EDE  EF73  F017         	goto	u17800
 11247   002EE2                     u17801:
 11248   002EE2  EF7E  F017         	goto	l15218
 11249   002EE6                     u17800:
 11250   002EE6                     
 11251                           ; BSR set to: 1
 11252   002EE6  0E01               	movlw	1
 11253   002EE8  0100               	movlb	0	; () banked
 11254   002EEA  6FF4               	movwf	?_create_chain& (0+255),b
 11255   002EEC  0E00               	movlw	0
 11256   002EEE  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 11257   002EF0  0E00               	movlw	0
 11258   002EF2  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 11259   002EF4  0E00               	movlw	0
 11260   002EF6  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 11261   002EF8  EFEF  F019         	goto	l993
 11262   002EFC                     l15218:
 11263                           
 11264                           ; BSR set to: 1
 11265                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
 11266   002EFC  2913               	incf	create_chain@cs& (0+255),w,b
 11267   002EFE  E10A               	bnz	u17811
 11268   002F00  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11269   002F02  E108               	bnz	u17811
 11270   002F04  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11271   002F06  E106               	bnz	u17811
 11272   002F08  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11273   002F0A  A4D8               	btfss	status,2,c
 11274   002F0C  EF8A  F017         	goto	u17811
 11275   002F10  EF8C  F017         	goto	u17810
 11276   002F14                     u17811:
 11277   002F14  EF96  F017         	goto	l15222
 11278   002F18                     u17810:
 11279   002F18                     l15220:
 11280                           
 11281                           ; BSR set to: 1
 11282   002F18  C113  F0F4         	movff	create_chain@cs,?_create_chain
 11283   002F1C  C114  F0F5         	movff	create_chain@cs+1,?_create_chain+1
 11284   002F20  C115  F0F6         	movff	create_chain@cs+2,?_create_chain+2
 11285   002F24  C116  F0F7         	movff	create_chain@cs+3,?_create_chain+3
 11286   002F28  EFEF  F019         	goto	l993
 11287   002F2C                     l15222:
 11288                           
 11289                           ; BSR set to: 1
 11290                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
 11291   002F2C  EE20 F017          	lfsr	2,23
 11292   002F30  5111               	movf	create_chain@fs& (0+255),w,b
 11293   002F32  26D9               	addwf	fsr2l,f,c
 11294   002F34  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11295   002F36  22DA               	addwfc	fsr2h,f,c
 11296   002F38  50DE               	movf	postinc2,w,c
 11297   002F3A  5D13               	subwf	create_chain@cs& (0+255),w,b
 11298   002F3C  50DE               	movf	postinc2,w,c
 11299   002F3E  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 11300   002F40  50DE               	movf	postinc2,w,c
 11301   002F42  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 11302   002F44  50DE               	movf	postinc2,w,c
 11303   002F46  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 11304   002F48  B0D8               	btfsc	status,0,c
 11305   002F4A  EFA9  F017         	goto	u17821
 11306   002F4E  EFAB  F017         	goto	u17820
 11307   002F52                     u17821:
 11308   002F52  EFAD  F017         	goto	l995
 11309   002F56                     u17820:
 11310   002F56  EF8C  F017         	goto	l15220
 11311   002F5A                     l995:
 11312                           
 11313                           ; BSR set to: 1
 11314                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
 11315   002F5A  C0F6  F109         	movff	create_chain@clst,create_chain@scl
 11316   002F5E  C0F7  F10A         	movff	create_chain@clst+1,create_chain@scl+1
 11317   002F62  C0F8  F10B         	movff	create_chain@clst+2,create_chain@scl+2
 11318   002F66  C0F9  F10C         	movff	create_chain@clst+3,create_chain@scl+3
 11319   002F6A                     l15226:
 11320                           
 11321                           ; BSR set to: 1
 11322                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
 11323   002F6A  EE20 F00F          	lfsr	2,15
 11324   002F6E  5111               	movf	create_chain@fs& (0+255),w,b
 11325   002F70  26D9               	addwf	fsr2l,f,c
 11326   002F72  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11327   002F74  22DA               	addwfc	fsr2h,f,c
 11328   002F76  50DE               	movf	postinc2,w,c
 11329   002F78  10DE               	iorwf	postinc2,w,c
 11330   002F7A  10DE               	iorwf	postinc2,w,c
 11331   002F7C  10DE               	iorwf	postinc2,w,c
 11332   002F7E  A4D8               	btfss	status,2,c
 11333   002F80  EFC4  F017         	goto	u17831
 11334   002F84  EFC6  F017         	goto	u17830
 11335   002F88                     u17831:
 11336   002F88  EFD1  F017         	goto	l15232
 11337   002F8C                     u17830:
 11338   002F8C                     l15228:
 11339                           
 11340                           ; BSR set to: 1
 11341   002F8C  0E00               	movlw	0
 11342   002F8E  0100               	movlb	0	; () banked
 11343   002F90  6FF4               	movwf	?_create_chain& (0+255),b
 11344   002F92  0E00               	movlw	0
 11345   002F94  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 11346   002F96  0E00               	movlw	0
 11347   002F98  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 11348   002F9A  0E00               	movlw	0
 11349   002F9C  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 11350   002F9E  EFEF  F019         	goto	l993
 11351   002FA2                     l15232:
 11352                           
 11353                           ; BSR set to: 1
 11354                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
 11355   002FA2  0E00               	movlw	0
 11356   002FA4  6F0D               	movwf	create_chain@ncl& (0+255),b
 11357   002FA6  0E00               	movlw	0
 11358   002FA8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11359   002FAA  0E00               	movlw	0
 11360   002FAC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11361   002FAE  0E00               	movlw	0
 11362   002FB0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11363   002FB2                     
 11364                           ; BSR set to: 1
 11365                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
 11366   002FB2  0100               	movlb	0	; () banked
 11367   002FB4  51F6               	movf	create_chain@clst& (0+255),w,b
 11368   002FB6  0101               	movlb	1	; () banked
 11369   002FB8  1909               	xorwf	create_chain@scl& (0+255),w,b
 11370   002FBA  E113               	bnz	u17841
 11371   002FBC  0100               	movlb	0	; () banked
 11372   002FBE  51F7               	movf	(create_chain@clst+1)& (0+255),w,b
 11373   002FC0  0101               	movlb	1	; () banked
 11374   002FC2  190A               	xorwf	(create_chain@scl+1)& (0+255),w,b
 11375   002FC4  E10E               	bnz	u17841
 11376   002FC6  0100               	movlb	0	; () banked
 11377   002FC8  51F8               	movf	(create_chain@clst+2)& (0+255),w,b
 11378   002FCA  0101               	movlb	1	; () banked
 11379   002FCC  190B               	xorwf	(create_chain@scl+2)& (0+255),w,b
 11380   002FCE  E109               	bnz	u17841
 11381   002FD0  0100               	movlb	0	; () banked
 11382   002FD2  51F9               	movf	(create_chain@clst+3)& (0+255),w,b
 11383   002FD4  0101               	movlb	1	; () banked
 11384   002FD6  190C               	xorwf	(create_chain@scl+3)& (0+255),w,b
 11385   002FD8  A4D8               	btfss	status,2,c
 11386   002FDA  EFF1  F017         	goto	u17841
 11387   002FDE  EFF3  F017         	goto	u17840
 11388   002FE2                     u17841:
 11389   002FE2  EF9D  F018         	goto	l15260
 11390   002FE6                     u17840:
 11391   002FE6                     
 11392                           ; BSR set to: 1
 11393                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
 11394   002FE6  0E01               	movlw	1
 11395   002FE8  2509               	addwf	create_chain@scl& (0+255),w,b
 11396   002FEA  6F0D               	movwf	create_chain@ncl& (0+255),b
 11397   002FEC  0E00               	movlw	0
 11398   002FEE  210A               	addwfc	(create_chain@scl+1)& (0+255),w,b
 11399   002FF0  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11400   002FF2  0E00               	movlw	0
 11401   002FF4  210B               	addwfc	(create_chain@scl+2)& (0+255),w,b
 11402   002FF6  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11403   002FF8  0E00               	movlw	0
 11404   002FFA  210C               	addwfc	(create_chain@scl+3)& (0+255),w,b
 11405   002FFC  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11406   002FFE                     
 11407                           ; BSR set to: 1
 11408                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
 11409   002FFE  EE20 F017          	lfsr	2,23
 11410   003002  5111               	movf	create_chain@fs& (0+255),w,b
 11411   003004  26D9               	addwf	fsr2l,f,c
 11412   003006  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11413   003008  22DA               	addwfc	fsr2h,f,c
 11414   00300A  50DE               	movf	postinc2,w,c
 11415   00300C  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 11416   00300E  50DE               	movf	postinc2,w,c
 11417   003010  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 11418   003012  50DE               	movf	postinc2,w,c
 11419   003014  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 11420   003016  50DE               	movf	postinc2,w,c
 11421   003018  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 11422   00301A  A0D8               	btfss	status,0,c
 11423   00301C  EF12  F018         	goto	u17851
 11424   003020  EF14  F018         	goto	u17850
 11425   003024                     u17851:
 11426   003024  EF1C  F018         	goto	l15242
 11427   003028                     u17850:
 11428   003028                     
 11429                           ; BSR set to: 1
 11430   003028  0E02               	movlw	2
 11431   00302A  6F0D               	movwf	create_chain@ncl& (0+255),b
 11432   00302C  0E00               	movlw	0
 11433   00302E  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11434   003030  0E00               	movlw	0
 11435   003032  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11436   003034  0E00               	movlw	0
 11437   003036  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11438   003038                     l15242:
 11439                           
 11440                           ; BSR set to: 1
 11441                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
 11442   003038  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11443   00303C  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11444   003040  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 11445   003044  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 11446   003048  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 11447   00304C  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 11448   003050  ECE4  F027         	call	_get_fat	;wreg free
 11449   003054  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11450   003058  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11451   00305C  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11452   003060  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11453   003064                     
 11454                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 11455   003064  0101               	movlb	1	; () banked
 11456   003066  0513               	decf	create_chain@cs& (0+255),w,b
 11457   003068  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11458   00306A  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11459   00306C  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11460   00306E  B4D8               	btfsc	status,2,c
 11461   003070  EF3C  F018         	goto	u17861
 11462   003074  EF3E  F018         	goto	u17860
 11463   003078                     u17861:
 11464   003078  EF8C  F017         	goto	l15220
 11465   00307C                     u17860:
 11466   00307C                     
 11467                           ; BSR set to: 1
 11468   00307C  2913               	incf	create_chain@cs& (0+255),w,b
 11469   00307E  E10A               	bnz	u17871
 11470   003080  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11471   003082  E108               	bnz	u17871
 11472   003084  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11473   003086  E106               	bnz	u17871
 11474   003088  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11475   00308A  A4D8               	btfss	status,2,c
 11476   00308C  EF4A  F018         	goto	u17871
 11477   003090  EF4C  F018         	goto	u17870
 11478   003094                     u17871:
 11479   003094  EF4E  F018         	goto	l15248
 11480   003098                     u17870:
 11481   003098  EF8C  F017         	goto	l15220
 11482   00309C                     l15248:
 11483                           
 11484                           ; BSR set to: 1
 11485                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
 11486   00309C  5113               	movf	create_chain@cs& (0+255),w,b
 11487   00309E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11488   0030A0  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11489   0030A2  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11490   0030A4  B4D8               	btfsc	status,2,c
 11491   0030A6  EF57  F018         	goto	u17881
 11492   0030AA  EF59  F018         	goto	u17880
 11493   0030AE                     u17881:
 11494   0030AE  EF9D  F018         	goto	l15260
 11495   0030B2                     u17880:
 11496   0030B2                     
 11497                           ; BSR set to: 1
 11498                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
 11499   0030B2  EE20 F00B          	lfsr	2,11
 11500   0030B6  5111               	movf	create_chain@fs& (0+255),w,b
 11501   0030B8  26D9               	addwf	fsr2l,f,c
 11502   0030BA  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11503   0030BC  22DA               	addwfc	fsr2h,f,c
 11504   0030BE  006F FF78  F113    	movff	postinc2,create_chain@cs
 11505   0030C4  006F FF78  F114    	movff	postinc2,create_chain@cs+1
 11506   0030CA  006F FF78  F115    	movff	postinc2,create_chain@cs+2
 11507   0030D0  006F FF78  F116    	movff	postinc2,create_chain@cs+3
 11508   0030D6                     
 11509                           ; BSR set to: 1
 11510                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 11511   0030D6  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 11512   0030D8  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11513   0030DA  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11514   0030DC  E109               	bnz	u17890
 11515   0030DE  0E02               	movlw	2
 11516   0030E0  5D13               	subwf	create_chain@cs& (0+255),w,b
 11517   0030E2  A0D8               	btfss	status,0,c
 11518   0030E4  EF76  F018         	goto	u17891
 11519   0030E8  EF78  F018         	goto	u17890
 11520   0030EC                     u17891:
 11521   0030EC  EF95  F018         	goto	l15258
 11522   0030F0                     u17890:
 11523   0030F0                     
 11524                           ; BSR set to: 1
 11525   0030F0  EE20 F017          	lfsr	2,23
 11526   0030F4  5111               	movf	create_chain@fs& (0+255),w,b
 11527   0030F6  26D9               	addwf	fsr2l,f,c
 11528   0030F8  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11529   0030FA  22DA               	addwfc	fsr2h,f,c
 11530   0030FC  50DE               	movf	postinc2,w,c
 11531   0030FE  5D13               	subwf	create_chain@cs& (0+255),w,b
 11532   003100  50DE               	movf	postinc2,w,c
 11533   003102  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 11534   003104  50DE               	movf	postinc2,w,c
 11535   003106  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 11536   003108  50DE               	movf	postinc2,w,c
 11537   00310A  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 11538   00310C  B0D8               	btfsc	status,0,c
 11539   00310E  EF8B  F018         	goto	u17901
 11540   003112  EF8D  F018         	goto	u17900
 11541   003116                     u17901:
 11542   003116  EF95  F018         	goto	l15258
 11543   00311A                     u17900:
 11544   00311A                     
 11545                           ; BSR set to: 1
 11546   00311A  C113  F109         	movff	create_chain@cs,create_chain@scl
 11547   00311E  C114  F10A         	movff	create_chain@cs+1,create_chain@scl+1
 11548   003122  C115  F10B         	movff	create_chain@cs+2,create_chain@scl+2
 11549   003126  C116  F10C         	movff	create_chain@cs+3,create_chain@scl+3
 11550   00312A                     l15258:
 11551                           
 11552                           ; BSR set to: 1
 11553                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
 11554   00312A  0E00               	movlw	0
 11555   00312C  6F0D               	movwf	create_chain@ncl& (0+255),b
 11556   00312E  0E00               	movlw	0
 11557   003130  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11558   003132  0E00               	movlw	0
 11559   003134  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11560   003136  0E00               	movlw	0
 11561   003138  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11562   00313A                     l15260:
 11563                           
 11564                           ; BSR set to: 1
 11565                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
 11566   00313A  510D               	movf	create_chain@ncl& (0+255),w,b
 11567   00313C  110E               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 11568   00313E  110F               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 11569   003140  1110               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 11570   003142  A4D8               	btfss	status,2,c
 11571   003144  EFA6  F018         	goto	u17911
 11572   003148  EFA8  F018         	goto	u17910
 11573   00314C                     u17911:
 11574   00314C  EF35  F019         	goto	l15292
 11575   003150                     u17910:
 11576   003150                     
 11577                           ; BSR set to: 1
 11578                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
 11579   003150  C109  F10D         	movff	create_chain@scl,create_chain@ncl
 11580   003154  C10A  F10E         	movff	create_chain@scl+1,create_chain@ncl+1
 11581   003158  C10B  F10F         	movff	create_chain@scl+2,create_chain@ncl+2
 11582   00315C  C10C  F110         	movff	create_chain@scl+3,create_chain@ncl+3
 11583   003160                     l15264:
 11584                           
 11585                           ; BSR set to: 1
 11586                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
 11587   003160  0E01               	movlw	1
 11588   003162  270D               	addwf	create_chain@ncl& (0+255),f,b
 11589   003164  0E00               	movlw	0
 11590   003166  230E               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 11591   003168  230F               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 11592   00316A  2310               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 11593   00316C                     
 11594                           ; BSR set to: 1
 11595                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
 11596   00316C  EE20 F017          	lfsr	2,23
 11597   003170  5111               	movf	create_chain@fs& (0+255),w,b
 11598   003172  26D9               	addwf	fsr2l,f,c
 11599   003174  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11600   003176  22DA               	addwfc	fsr2h,f,c
 11601   003178  50DE               	movf	postinc2,w,c
 11602   00317A  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 11603   00317C  50DE               	movf	postinc2,w,c
 11604   00317E  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 11605   003180  50DE               	movf	postinc2,w,c
 11606   003182  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 11607   003184  50DE               	movf	postinc2,w,c
 11608   003186  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 11609   003188  A0D8               	btfss	status,0,c
 11610   00318A  EFC9  F018         	goto	u17921
 11611   00318E  EFCB  F018         	goto	u17920
 11612   003192                     u17921:
 11613   003192  EFE2  F018         	goto	l15276
 11614   003196                     u17920:
 11615   003196                     
 11616                           ; BSR set to: 1
 11617                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
 11618   003196  0E02               	movlw	2
 11619   003198  6F0D               	movwf	create_chain@ncl& (0+255),b
 11620   00319A  0E00               	movlw	0
 11621   00319C  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11622   00319E  0E00               	movlw	0
 11623   0031A0  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11624   0031A2  0E00               	movlw	0
 11625   0031A4  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11626   0031A6                     
 11627                           ; BSR set to: 1
 11628                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
 11629   0031A6  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 11630   0031A8  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 11631   0031AA  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 11632   0031AC  E107               	bnz	u17931
 11633   0031AE  0E02               	movlw	2
 11634   0031B0  5D09               	subwf	create_chain@scl& (0+255),w,b
 11635   0031B2  B0D8               	btfsc	status,0,c
 11636   0031B4  EFDE  F018         	goto	u17931
 11637   0031B8  EFE0  F018         	goto	u17930
 11638   0031BC                     u17931:
 11639   0031BC  EFE2  F018         	goto	l15276
 11640   0031C0                     u17930:
 11641   0031C0  EFC6  F017         	goto	l15228
 11642   0031C4                     l15276:
 11643                           
 11644                           ; BSR set to: 1
 11645                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
 11646   0031C4  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11647   0031C8  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11648   0031CC  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 11649   0031D0  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 11650   0031D4  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 11651   0031D8  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 11652   0031DC  ECE4  F027         	call	_get_fat	;wreg free
 11653   0031E0  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11654   0031E4  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11655   0031E8  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11656   0031EC  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11657   0031F0                     
 11658                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
 11659   0031F0  0101               	movlb	1	; () banked
 11660   0031F2  5113               	movf	create_chain@cs& (0+255),w,b
 11661   0031F4  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11662   0031F6  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11663   0031F8  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11664   0031FA  A4D8               	btfss	status,2,c
 11665   0031FC  EF02  F019         	goto	u17941
 11666   003200  EF04  F019         	goto	u17940
 11667   003204                     u17941:
 11668   003204  EF06  F019         	goto	l15282
 11669   003208                     u17940:
 11670   003208  EF35  F019         	goto	l15292
 11671   00320C                     l15282:
 11672                           
 11673                           ; BSR set to: 1
 11674                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 11675   00320C  0513               	decf	create_chain@cs& (0+255),w,b
 11676   00320E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11677   003210  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11678   003212  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11679   003214  B4D8               	btfsc	status,2,c
 11680   003216  EF0F  F019         	goto	u17951
 11681   00321A  EF11  F019         	goto	u17950
 11682   00321E                     u17951:
 11683   00321E  EF8C  F017         	goto	l15220
 11684   003222                     u17950:
 11685   003222                     
 11686                           ; BSR set to: 1
 11687   003222  2913               	incf	create_chain@cs& (0+255),w,b
 11688   003224  E10A               	bnz	u17961
 11689   003226  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11690   003228  E108               	bnz	u17961
 11691   00322A  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11692   00322C  E106               	bnz	u17961
 11693   00322E  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11694   003230  A4D8               	btfss	status,2,c
 11695   003232  EF1D  F019         	goto	u17961
 11696   003236  EF1F  F019         	goto	u17960
 11697   00323A                     u17961:
 11698   00323A  EF21  F019         	goto	l15286
 11699   00323E                     u17960:
 11700   00323E  EF8C  F017         	goto	l15220
 11701   003242                     l15286:
 11702                           
 11703                           ; BSR set to: 1
 11704                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
 11705   003242  5109               	movf	create_chain@scl& (0+255),w,b
 11706   003244  190D               	xorwf	create_chain@ncl& (0+255),w,b
 11707   003246  E10D               	bnz	u17971
 11708   003248  510A               	movf	(create_chain@scl+1)& (0+255),w,b
 11709   00324A  190E               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 11710   00324C  E10A               	bnz	u17971
 11711   00324E  510B               	movf	(create_chain@scl+2)& (0+255),w,b
 11712   003250  190F               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 11713   003252  E107               	bnz	u17971
 11714   003254  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 11715   003256  1910               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 11716   003258  A4D8               	btfss	status,2,c
 11717   00325A  EF31  F019         	goto	u17971
 11718   00325E  EF33  F019         	goto	u17970
 11719   003262                     u17971:
 11720   003262  EFB0  F018         	goto	l15264
 11721   003266                     u17970:
 11722   003266  EFC6  F017         	goto	l15228
 11723   00326A                     l15292:
 11724                           
 11725                           ; BSR set to: 1
 11726                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 11727   00326A  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 11728   00326E  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 11729   003272  C10D  F0D5         	movff	create_chain@ncl,put_fat@clst
 11730   003276  C10E  F0D6         	movff	create_chain@ncl+1,put_fat@clst+1
 11731   00327A  C10F  F0D7         	movff	create_chain@ncl+2,put_fat@clst+2
 11732   00327E  C110  F0D8         	movff	create_chain@ncl+3,put_fat@clst+3
 11733   003282  0EFF               	movlw	255
 11734   003284  0100               	movlb	0	; () banked
 11735   003286  6FD9               	movwf	put_fat@val& (0+255),b
 11736   003288  0EFF               	movlw	255
 11737   00328A  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 11738   00328C  0EFF               	movlw	255
 11739   00328E  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 11740   003290  0EFF               	movlw	255
 11741   003292  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 11742   003294  ECF0  F019         	call	_put_fat	;wreg free
 11743   003298  0101               	movlb	1	; () banked
 11744   00329A  6F08               	movwf	create_chain@res& (0+255),b
 11745   00329C                     
 11746                           ; BSR set to: 1
 11747                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
 11748   00329C  5108               	movf	create_chain@res& (0+255),w,b
 11749   00329E  A4D8               	btfss	status,2,c
 11750   0032A0  EF54  F019         	goto	u17981
 11751   0032A4  EF56  F019         	goto	u17980
 11752   0032A8                     u17981:
 11753   0032A8  EF7A  F019         	goto	l15300
 11754   0032AC                     u17980:
 11755   0032AC                     
 11756                           ; BSR set to: 1
 11757   0032AC  0100               	movlb	0	; () banked
 11758   0032AE  51F6               	movf	create_chain@clst& (0+255),w,b
 11759   0032B0  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 11760   0032B2  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 11761   0032B4  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 11762   0032B6  B4D8               	btfsc	status,2,c
 11763   0032B8  EF60  F019         	goto	u17991
 11764   0032BC  EF62  F019         	goto	u17990
 11765   0032C0                     u17991:
 11766   0032C0  EF7A  F019         	goto	l15300
 11767   0032C4                     u17990:
 11768   0032C4                     
 11769                           ; BSR set to: 0
 11770                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
 11771   0032C4  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 11772   0032C8  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 11773   0032CC  C0F6  F0D5         	movff	create_chain@clst,put_fat@clst
 11774   0032D0  C0F7  F0D6         	movff	create_chain@clst+1,put_fat@clst+1
 11775   0032D4  C0F8  F0D7         	movff	create_chain@clst+2,put_fat@clst+2
 11776   0032D8  C0F9  F0D8         	movff	create_chain@clst+3,put_fat@clst+3
 11777   0032DC  C10D  F0D9         	movff	create_chain@ncl,put_fat@val
 11778   0032E0  C10E  F0DA         	movff	create_chain@ncl+1,put_fat@val+1
 11779   0032E4  C10F  F0DB         	movff	create_chain@ncl+2,put_fat@val+2
 11780   0032E8  C110  F0DC         	movff	create_chain@ncl+3,put_fat@val+3
 11781   0032EC  ECF0  F019         	call	_put_fat	;wreg free
 11782   0032F0  0101               	movlb	1	; () banked
 11783   0032F2  6F08               	movwf	create_chain@res& (0+255),b
 11784   0032F4                     l15300:
 11785                           
 11786                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
 11787   0032F4  0101               	movlb	1	; () banked
 11788   0032F6  5108               	movf	create_chain@res& (0+255),w,b
 11789   0032F8  A4D8               	btfss	status,2,c
 11790   0032FA  EF81  F019         	goto	u18001
 11791   0032FE  EF83  F019         	goto	u18000
 11792   003302                     u18001:
 11793   003302  EFD1  F019         	goto	l15308
 11794   003306                     u18000:
 11795   003306                     
 11796                           ; BSR set to: 1
 11797                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
 11798   003306  EE20 F00B          	lfsr	2,11
 11799   00330A  5111               	movf	create_chain@fs& (0+255),w,b
 11800   00330C  26D9               	addwf	fsr2l,f,c
 11801   00330E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11802   003310  22DA               	addwfc	fsr2h,f,c
 11803   003312  0060  F437  FFDE   	movff	create_chain@ncl,postinc2
 11804   003318  0060  F43B  FFDE   	movff	create_chain@ncl+1,postinc2
 11805   00331E  0060  F43F  FFDE   	movff	create_chain@ncl+2,postinc2
 11806   003324  0060  F443  FFDE   	movff	create_chain@ncl+3,postinc2
 11807   00332A                     
 11808                           ; BSR set to: 1
 11809                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
 11810   00332A  EE20 F00F          	lfsr	2,15
 11811   00332E  5111               	movf	create_chain@fs& (0+255),w,b
 11812   003330  26D9               	addwf	fsr2l,f,c
 11813   003332  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11814   003334  22DA               	addwfc	fsr2h,f,c
 11815   003336  EE10 F017          	lfsr	1,23
 11816   00333A  5111               	movf	create_chain@fs& (0+255),w,b
 11817   00333C  26E1               	addwf	fsr1l,f,c
 11818   00333E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11819   003340  22E2               	addwfc	fsr1h,f,c
 11820   003342  0EFE               	movlw	254
 11821   003344  24E6               	addwf	postinc1,w,c
 11822   003346  6F04               	movwf	(??_create_chain+4)& (0+255),b
 11823   003348  0EFF               	movlw	255
 11824   00334A  20E6               	addwfc	postinc1,w,c
 11825   00334C  6F05               	movwf	(??_create_chain+5)& (0+255),b
 11826   00334E  0EFF               	movlw	255
 11827   003350  20E6               	addwfc	postinc1,w,c
 11828   003352  6F06               	movwf	(??_create_chain+6)& (0+255),b
 11829   003354  0EFF               	movlw	255
 11830   003356  20E6               	addwfc	postinc1,w,c
 11831   003358  6F07               	movwf	(??_create_chain+7)& (0+255),b
 11832   00335A  50DE               	movf	postinc2,w,c
 11833   00335C  5D04               	subwf	(??_create_chain+4)& (0+255),w,b
 11834   00335E  50DE               	movf	postinc2,w,c
 11835   003360  5905               	subwfb	(??_create_chain+5)& (0+255),w,b
 11836   003362  50DE               	movf	postinc2,w,c
 11837   003364  5906               	subwfb	(??_create_chain+6)& (0+255),w,b
 11838   003366  50DE               	movf	postinc2,w,c
 11839   003368  5907               	subwfb	(??_create_chain+7)& (0+255),w,b
 11840   00336A  A0D8               	btfss	status,0,c
 11841   00336C  EFBA  F019         	goto	u18011
 11842   003370  EFBC  F019         	goto	u18010
 11843   003374                     u18011:
 11844   003374  EFC7  F019         	goto	l1016
 11845   003378                     u18010:
 11846   003378                     
 11847                           ; BSR set to: 1
 11848   003378  EE20 F00F          	lfsr	2,15
 11849   00337C  5111               	movf	create_chain@fs& (0+255),w,b
 11850   00337E  26D9               	addwf	fsr2l,f,c
 11851   003380  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11852   003382  22DA               	addwfc	fsr2h,f,c
 11853   003384  06DE               	decf	postinc2,f,c
 11854   003386  0E00               	movlw	0
 11855   003388  5ADE               	subwfb	postinc2,f,c
 11856   00338A  5ADE               	subwfb	postinc2,f,c
 11857   00338C  5ADE               	subwfb	postinc2,f,c
 11858   00338E                     l1016:
 11859                           
 11860                           ; BSR set to: 1
 11861                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
 11862   00338E  EE20 F004          	lfsr	2,4
 11863   003392  5111               	movf	create_chain@fs& (0+255),w,b
 11864   003394  26D9               	addwf	fsr2l,f,c
 11865   003396  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11866   003398  22DA               	addwfc	fsr2h,f,c
 11867   00339A  0E00               	movlw	0
 11868   00339C  80DB               	bsf	plusw2,0,c
 11869                           
 11870                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
 11871   00339E  EFE7  F019         	goto	l1017
 11872   0033A2                     l15308:
 11873                           
 11874                           ; BSR set to: 1
 11875                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 11876   0033A2  0508               	decf	create_chain@res& (0+255),w,b
 11877   0033A4  B4D8               	btfsc	status,2,c
 11878   0033A6  EFD7  F019         	goto	u18021
 11879   0033AA  EFD9  F019         	goto	u18020
 11880   0033AE                     u18021:
 11881   0033AE  EFE3  F019         	goto	l1019
 11882   0033B2                     u18020:
 11883   0033B2                     
 11884                           ; BSR set to: 1
 11885   0033B2  0E01               	movlw	1
 11886   0033B4  6F0D               	movwf	create_chain@ncl& (0+255),b
 11887   0033B6  0E00               	movlw	0
 11888   0033B8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11889   0033BA  0E00               	movlw	0
 11890   0033BC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11891   0033BE  0E00               	movlw	0
 11892   0033C0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11893   0033C2  EFE7  F019         	goto	l1017
 11894   0033C6                     l1019:
 11895                           
 11896                           ; BSR set to: 1
 11897   0033C6  690D               	setf	create_chain@ncl& (0+255),b
 11898   0033C8  690E               	setf	(create_chain@ncl+1)& (0+255),b
 11899   0033CA  690F               	setf	(create_chain@ncl+2)& (0+255),b
 11900   0033CC  6910               	setf	(create_chain@ncl+3)& (0+255),b
 11901   0033CE                     l1017:
 11902                           
 11903                           ; BSR set to: 1
 11904                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
 11905   0033CE  C10D  F0F4         	movff	create_chain@ncl,?_create_chain
 11906   0033D2  C10E  F0F5         	movff	create_chain@ncl+1,?_create_chain+1
 11907   0033D6  C10F  F0F6         	movff	create_chain@ncl+2,?_create_chain+2
 11908   0033DA  C110  F0F7         	movff	create_chain@ncl+3,?_create_chain+3
 11909   0033DE                     l993:
 11910   0033DE  0012               	return		;funcret
 11911   0033E0                     __end_of_create_chain:
 11912                           	callstack 0
 11913                           
 11914 ;; *************** function _put_fat *****************
 11915 ;; Defined at:
 11916 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  fs              2  115[BANK0 ] PTR struct .
 11919 ;;		 -> FatFs(563), NULL(0), 
 11920 ;;  clst            4  117[BANK0 ] unsigned long 
 11921 ;;  val             4  121[BANK0 ] unsigned long 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;  bc              2  145[BANK0 ] unsigned int 
 11924 ;;  p               2  143[BANK0 ] PTR unsigned char 
 11925 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 11926 ;;  res             1  147[BANK0 ] enum E68
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      enum E68
 11929 ;; Registers used:
 11930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11936 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;Total ram usage:       33 bytes
 11941 ;; Hardware stack levels used: 1
 11942 ;; Hardware stack levels required when called: 12
 11943 ;; This function calls:
 11944 ;;		_ld_dword
 11945 ;;		_move_window
 11946 ;;		_st_dword
 11947 ;;		_st_word
 11948 ;; This function is called by:
 11949 ;;		_remove_chain
 11950 ;;		_create_chain
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text35
 11955   0033E0                     __ptext35:
 11956                           	callstack 0
 11957   0033E0                     _put_fat:
 11958                           	callstack 15
 11959   0033E0                     
 11960                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 11961   0033E0  0E02               	movlw	2
 11962   0033E2  0100               	movlb	0	; () banked
 11963   0033E4  6FF3               	movwf	put_fat@res& (0+255),b
 11964   0033E6                     
 11965                           ; BSR set to: 0
 11966                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 11967   0033E6  51D8               	movf	(put_fat@clst+3)& (0+255),w,b
 11968   0033E8  11D7               	iorwf	(put_fat@clst+2)& (0+255),w,b
 11969   0033EA  11D6               	iorwf	(put_fat@clst+1)& (0+255),w,b
 11970   0033EC  E109               	bnz	u17630
 11971   0033EE  0E02               	movlw	2
 11972   0033F0  5DD5               	subwf	put_fat@clst& (0+255),w,b
 11973   0033F2  A0D8               	btfss	status,0,c
 11974   0033F4  EFFE  F019         	goto	u17631
 11975   0033F8  EF00  F01A         	goto	u17630
 11976   0033FC                     u17631:
 11977   0033FC  EF80  F01C         	goto	l15182
 11978   003400                     u17630:
 11979   003400                     
 11980                           ; BSR set to: 0
 11981   003400  EE20 F017          	lfsr	2,23
 11982   003404  51D3               	movf	put_fat@fs& (0+255),w,b
 11983   003406  26D9               	addwf	fsr2l,f,c
 11984   003408  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 11985   00340A  22DA               	addwfc	fsr2h,f,c
 11986   00340C  50DE               	movf	postinc2,w,c
 11987   00340E  5DD5               	subwf	put_fat@clst& (0+255),w,b
 11988   003410  50DE               	movf	postinc2,w,c
 11989   003412  59D6               	subwfb	(put_fat@clst+1)& (0+255),w,b
 11990   003414  50DE               	movf	postinc2,w,c
 11991   003416  59D7               	subwfb	(put_fat@clst+2)& (0+255),w,b
 11992   003418  50DE               	movf	postinc2,w,c
 11993   00341A  59D8               	subwfb	(put_fat@clst+3)& (0+255),w,b
 11994   00341C  B0D8               	btfsc	status,0,c
 11995   00341E  EF13  F01A         	goto	u17641
 11996   003422  EF15  F01A         	goto	u17640
 11997   003426                     u17641:
 11998   003426  EF80  F01C         	goto	l15182
 11999   00342A                     u17640:
 12000   00342A  EF6B  F01C         	goto	l15180
 12001   00342E                     l945:
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 12005   00342E  C0D5  F0F1         	movff	put_fat@clst,put_fat@bc
 12006   003432  C0D6  F0F2         	movff	put_fat@clst+1,put_fat@bc+1
 12007   003436                     
 12008                           ; BSR set to: 0
 12009   003436  90D8               	bcf	status,0,c
 12010   003438  31F2               	rrcf	(put_fat@bc+1)& (0+255),w,b
 12011   00343A  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12012   00343C  31F1               	rrcf	put_fat@bc& (0+255),w,b
 12013   00343E  6FDD               	movwf	??_put_fat& (0+255),b
 12014   003440  51DD               	movf	??_put_fat& (0+255),w,b
 12015   003442  27F1               	addwf	put_fat@bc& (0+255),f,b
 12016   003444  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12017   003446  23F2               	addwfc	(put_fat@bc+1)& (0+255),f,b
 12018   003448                     
 12019                           ; BSR set to: 0
 12020                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 12021   003448  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12022   00344C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12023   003450  EE20 F023          	lfsr	2,35
 12024   003454  51D3               	movf	put_fat@fs& (0+255),w,b
 12025   003456  26D9               	addwf	fsr2l,f,c
 12026   003458  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12027   00345A  22DA               	addwfc	fsr2h,f,c
 12028   00345C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12029   003462  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12030   003468  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12031   00346E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12032   003474  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 12033   003478  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 12034   00347C  0E09               	movlw	9
 12035   00347E  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12036   003480                     u17655:
 12037   003480  90D8               	bcf	status,0,c
 12038   003482  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12039   003484  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12040   003486  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 12041   003488  EF40  F01A         	goto	u17655
 12042   00348C  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12043   00348E  25DD               	addwf	??_put_fat& (0+255),w,b
 12044   003490  6FCA               	movwf	move_window@sector& (0+255),b
 12045   003492  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 12046   003494  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 12047   003496  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12048   003498  0E00               	movlw	0
 12049   00349A  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 12050   00349C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12051   00349E  0E00               	movlw	0
 12052   0034A0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12053   0034A2  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12054   0034A4  ECAF  F046         	call	_move_window	;wreg free
 12055   0034A8  0100               	movlb	0	; () banked
 12056   0034AA  6FF3               	movwf	put_fat@res& (0+255),b
 12057   0034AC                     
 12058                           ; BSR set to: 0
 12059                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 12060   0034AC  51F3               	movf	put_fat@res& (0+255),w,b
 12061   0034AE  B4D8               	btfsc	status,2,c
 12062   0034B0  EF5C  F01A         	goto	u17661
 12063   0034B4  EF5E  F01A         	goto	u17660
 12064   0034B8                     u17661:
 12065   0034B8  EF60  F01A         	goto	l15126
 12066   0034BC                     u17660:
 12067   0034BC  EF80  F01C         	goto	l15182
 12068   0034C0                     l15126:
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 12072   0034C0  0EFF               	movlw	255
 12073   0034C2  15F1               	andwf	put_fat@bc& (0+255),w,b
 12074   0034C4  6FDD               	movwf	??_put_fat& (0+255),b
 12075   0034C6  0E01               	movlw	1
 12076   0034C8  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 12077   0034CA  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12078   0034CC  51DD               	movf	??_put_fat& (0+255),w,b
 12079   0034CE  25D3               	addwf	put_fat@fs& (0+255),w,b
 12080   0034D0  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12081   0034D2  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12082   0034D4  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12083   0034D6  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12084   0034D8  0E33               	movlw	51
 12085   0034DA  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 12086   0034DC  6FEF               	movwf	put_fat@p& (0+255),b
 12087   0034DE  0E00               	movlw	0
 12088   0034E0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12089   0034E2  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 12090   0034E4                     
 12091                           ; BSR set to: 0
 12092   0034E4  4BF1               	infsnz	put_fat@bc& (0+255),f,b
 12093   0034E6  2BF2               	incf	(put_fat@bc+1)& (0+255),f,b
 12094   0034E8                     
 12095                           ; BSR set to: 0
 12096                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 12097   0034E8  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 12098   0034EA  EF79  F01A         	goto	u17671
 12099   0034EE  EF7B  F01A         	goto	u17670
 12100   0034F2                     u17671:
 12101   0034F2  EF80  F01A         	goto	l15134
 12102   0034F6                     u17670:
 12103   0034F6                     
 12104                           ; BSR set to: 0
 12105   0034F6  C0D9  F0EB         	movff	put_fat@val,_put_fat$2606
 12106   0034FA  6BEC               	clrf	(_put_fat$2606+1)& (0+255),b
 12107   0034FC  EF9C  F01A         	goto	l15136
 12108   003500                     l15134:
 12109                           
 12110                           ; BSR set to: 0
 12111   003500  51D9               	movf	put_fat@val& (0+255),w,b
 12112   003502  6FDD               	movwf	??_put_fat& (0+255),b
 12113   003504  6BDE               	clrf	(??_put_fat+1)& (0+255),b
 12114   003506  3BDD               	swapf	??_put_fat& (0+255),f,b
 12115   003508  3BDE               	swapf	(??_put_fat+1)& (0+255),f,b
 12116   00350A  0EF0               	movlw	240
 12117   00350C  17DE               	andwf	(??_put_fat+1)& (0+255),f,b
 12118   00350E  51DD               	movf	??_put_fat& (0+255),w,b
 12119   003510  0B0F               	andlw	15
 12120   003512  13DE               	iorwf	(??_put_fat+1)& (0+255),f,b
 12121   003514  0EF0               	movlw	240
 12122   003516  17DD               	andwf	??_put_fat& (0+255),f,b
 12123   003518  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12124   00351E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12125   003524  50DF               	movf	indf2,w,c
 12126   003526  0B0F               	andlw	15
 12127   003528  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12128   00352A  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 12129   00352C  51DD               	movf	??_put_fat& (0+255),w,b
 12130   00352E  11DF               	iorwf	(??_put_fat+2)& (0+255),w,b
 12131   003530  6FEB               	movwf	_put_fat$2606& (0+255),b
 12132   003532  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12133   003534  11E0               	iorwf	(??_put_fat+3)& (0+255),w,b
 12134   003536  6FEC               	movwf	(_put_fat$2606+1)& (0+255),b
 12135   003538                     l15136:
 12136                           
 12137                           ; BSR set to: 0
 12138   003538  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12139   00353E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12140   003544  0060  F3AF  FFDF   	movff	_put_fat$2606,indf2
 12141   00354A                     
 12142                           ; BSR set to: 0
 12143                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 12144   00354A  EE20 F003          	lfsr	2,3
 12145   00354E  51D3               	movf	put_fat@fs& (0+255),w,b
 12146   003550  26D9               	addwf	fsr2l,f,c
 12147   003552  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12148   003554  22DA               	addwfc	fsr2h,f,c
 12149   003556  0E01               	movlw	1
 12150   003558  6EDF               	movwf	indf2,c
 12151   00355A                     
 12152                           ; BSR set to: 0
 12153                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 12154   00355A  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12155   00355E  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12156   003562  EE20 F023          	lfsr	2,35
 12157   003566  51D3               	movf	put_fat@fs& (0+255),w,b
 12158   003568  26D9               	addwf	fsr2l,f,c
 12159   00356A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12160   00356C  22DA               	addwfc	fsr2h,f,c
 12161   00356E  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12162   003574  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12163   00357A  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12164   003580  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12165   003586  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 12166   00358A  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 12167   00358E  0E09               	movlw	9
 12168   003590  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12169   003592                     u17685:
 12170   003592  90D8               	bcf	status,0,c
 12171   003594  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12172   003596  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12173   003598  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 12174   00359A  EFC9  F01A         	goto	u17685
 12175   00359E  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12176   0035A0  25DD               	addwf	??_put_fat& (0+255),w,b
 12177   0035A2  6FCA               	movwf	move_window@sector& (0+255),b
 12178   0035A4  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 12179   0035A6  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 12180   0035A8  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12181   0035AA  0E00               	movlw	0
 12182   0035AC  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 12183   0035AE  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12184   0035B0  0E00               	movlw	0
 12185   0035B2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12186   0035B4  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12187   0035B6  ECAF  F046         	call	_move_window	;wreg free
 12188   0035BA  0100               	movlb	0	; () banked
 12189   0035BC  6FF3               	movwf	put_fat@res& (0+255),b
 12190   0035BE                     
 12191                           ; BSR set to: 0
 12192                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 12193   0035BE  51F3               	movf	put_fat@res& (0+255),w,b
 12194   0035C0  B4D8               	btfsc	status,2,c
 12195   0035C2  EFE5  F01A         	goto	u17691
 12196   0035C6  EFE7  F01A         	goto	u17690
 12197   0035CA                     u17691:
 12198   0035CA  EFE9  F01A         	goto	l15146
 12199   0035CE                     u17690:
 12200   0035CE  EF80  F01C         	goto	l15182
 12201   0035D2                     l15146:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 12205   0035D2  0EFF               	movlw	255
 12206   0035D4  15F1               	andwf	put_fat@bc& (0+255),w,b
 12207   0035D6  6FDD               	movwf	??_put_fat& (0+255),b
 12208   0035D8  0E01               	movlw	1
 12209   0035DA  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 12210   0035DC  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12211   0035DE  51DD               	movf	??_put_fat& (0+255),w,b
 12212   0035E0  25D3               	addwf	put_fat@fs& (0+255),w,b
 12213   0035E2  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12214   0035E4  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12215   0035E6  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12216   0035E8  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12217   0035EA  0E33               	movlw	51
 12218   0035EC  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 12219   0035EE  6FEF               	movwf	put_fat@p& (0+255),b
 12220   0035F0  0E00               	movlw	0
 12221   0035F2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12222   0035F4  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 12223   0035F6                     
 12224                           ; BSR set to: 0
 12225                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 12226   0035F6  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 12227   0035F8  EF00  F01B         	goto	u17701
 12228   0035FC  EF02  F01B         	goto	u17700
 12229   003600                     u17701:
 12230   003600  EF22  F01B         	goto	l15152
 12231   003604                     u17700:
 12232   003604                     
 12233                           ; BSR set to: 0
 12234   003604  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 12235   003608  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 12236   00360C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 12237   003610  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 12238   003614  C0DE  F0DD         	movff	??_put_fat+1,??_put_fat
 12239   003618  C0DF  F0DE         	movff	??_put_fat+2,??_put_fat+1
 12240   00361C  C0E0  F0DF         	movff	??_put_fat+3,??_put_fat+2
 12241   003620  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 12242   003622  0E0F               	movlw	15
 12243   003624  17DD               	andwf	??_put_fat& (0+255),f,b
 12244   003626  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12245   00362C  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12246   003632  50DF               	movf	indf2,w,c
 12247   003634  0BF0               	andlw	240
 12248   003636  11DD               	iorwf	??_put_fat& (0+255),w,b
 12249   003638  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12250   00363A  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12251   00363C  6FED               	movwf	_put_fat$2607& (0+255),b
 12252   00363E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 12253   003640  EF38  F01B         	goto	l15154
 12254   003644                     l15152:
 12255                           
 12256                           ; BSR set to: 0
 12257   003644  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 12258   003648  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 12259   00364C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 12260   003650  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 12261   003654  0E05               	movlw	5
 12262   003656  EF32  F01B         	goto	u17710
 12263   00365A                     u17715:
 12264   00365A  90D8               	bcf	status,0,c
 12265   00365C  33E0               	rrcf	(??_put_fat+3)& (0+255),f,b
 12266   00365E  33DF               	rrcf	(??_put_fat+2)& (0+255),f,b
 12267   003660  33DE               	rrcf	(??_put_fat+1)& (0+255),f,b
 12268   003662  33DD               	rrcf	??_put_fat& (0+255),f,b
 12269   003664                     u17710:
 12270   003664  2EE8               	decfsz	wreg,f,c
 12271   003666  EF2D  F01B         	goto	u17715
 12272   00366A  51DD               	movf	??_put_fat& (0+255),w,b
 12273   00366C  6FED               	movwf	_put_fat$2607& (0+255),b
 12274   00366E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 12275   003670                     l15154:
 12276                           
 12277                           ; BSR set to: 0
 12278   003670  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12279   003676  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12280   00367C  0060  F3B7  FFDF   	movff	_put_fat$2607,indf2
 12281                           
 12282                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 12283   003682  EE20 F003          	lfsr	2,3
 12284   003686  51D3               	movf	put_fat@fs& (0+255),w,b
 12285   003688  26D9               	addwf	fsr2l,f,c
 12286   00368A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12287   00368C  22DA               	addwfc	fsr2h,f,c
 12288   00368E  0E01               	movlw	1
 12289   003690  6EDF               	movwf	indf2,c
 12290                           
 12291                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 12292   003692  EF80  F01C         	goto	l15182
 12293   003696                     l15156:
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 12297   003696  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12298   00369A  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12299   00369E  EE20 F023          	lfsr	2,35
 12300   0036A2  51D3               	movf	put_fat@fs& (0+255),w,b
 12301   0036A4  26D9               	addwf	fsr2l,f,c
 12302   0036A6  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12303   0036A8  22DA               	addwfc	fsr2h,f,c
 12304   0036AA  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12305   0036B0  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12306   0036B6  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12307   0036BC  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12308   0036C2  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 12309   0036C6  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 12310   0036CA  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 12311   0036CE  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 12312   0036D2  C0E2  F0E1         	movff	??_put_fat+5,??_put_fat+4
 12313   0036D6  C0E3  F0E2         	movff	??_put_fat+6,??_put_fat+5
 12314   0036DA  C0E4  F0E3         	movff	??_put_fat+7,??_put_fat+6
 12315   0036DE  6BE4               	clrf	(??_put_fat+7)& (0+255),b
 12316   0036E0  51DD               	movf	??_put_fat& (0+255),w,b
 12317   0036E2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12318   0036E4  6FCA               	movwf	move_window@sector& (0+255),b
 12319   0036E6  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12320   0036E8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12321   0036EA  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12322   0036EC  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12323   0036EE  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 12324   0036F0  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12325   0036F2  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12326   0036F4  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 12327   0036F6  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12328   0036F8  ECAF  F046         	call	_move_window	;wreg free
 12329   0036FC  0100               	movlb	0	; () banked
 12330   0036FE  6FF3               	movwf	put_fat@res& (0+255),b
 12331   003700                     
 12332                           ; BSR set to: 0
 12333                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 12334   003700  51F3               	movf	put_fat@res& (0+255),w,b
 12335   003702  B4D8               	btfsc	status,2,c
 12336   003704  EF86  F01B         	goto	u17721
 12337   003708  EF88  F01B         	goto	u17720
 12338   00370C                     u17721:
 12339   00370C  EF8A  F01B         	goto	l15162
 12340   003710                     u17720:
 12341   003710  EF80  F01C         	goto	l15182
 12342   003714                     l15162:
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 12346   003714  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12347   003718  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12348   00371C  90D8               	bcf	status,0,c
 12349   00371E  37DD               	rlcf	??_put_fat& (0+255),f,b
 12350   003720  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12351   003722  0EFF               	movlw	255
 12352   003724  15DD               	andwf	??_put_fat& (0+255),w,b
 12353   003726  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12354   003728  0E01               	movlw	1
 12355   00372A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12356   00372C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12357   00372E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12358   003730  25D3               	addwf	put_fat@fs& (0+255),w,b
 12359   003732  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12360   003734  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12361   003736  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12362   003738  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12363   00373A  0E33               	movlw	51
 12364   00373C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12365   00373E  6F60               	movwf	st_word@ptr& (0+255),b
 12366   003740  0E00               	movlw	0
 12367   003742  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12368   003744  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 12369   003746  C0D9  F062         	movff	put_fat@val,st_word@val
 12370   00374A  C0DA  F063         	movff	put_fat@val+1,st_word@val+1
 12371   00374E  ECCF  F050         	call	_st_word	;wreg free
 12372   003752                     
 12373                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 12374   003752  0100               	movlb	0	; () banked
 12375   003754  EE20 F003          	lfsr	2,3
 12376   003758  51D3               	movf	put_fat@fs& (0+255),w,b
 12377   00375A  26D9               	addwf	fsr2l,f,c
 12378   00375C  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12379   00375E  22DA               	addwfc	fsr2h,f,c
 12380   003760  0E01               	movlw	1
 12381   003762  6EDF               	movwf	indf2,c
 12382                           
 12383                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 12384   003764  EF80  F01C         	goto	l15182
 12385   003768                     l15166:
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 12389   003768  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12390   00376C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12391   003770  EE20 F023          	lfsr	2,35
 12392   003774  51D3               	movf	put_fat@fs& (0+255),w,b
 12393   003776  26D9               	addwf	fsr2l,f,c
 12394   003778  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12395   00377A  22DA               	addwfc	fsr2h,f,c
 12396   00377C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12397   003782  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12398   003788  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12399   00378E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12400   003794  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 12401   003798  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 12402   00379C  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 12403   0037A0  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 12404   0037A4  0E08               	movlw	8
 12405   0037A6  EFDA  F01B         	goto	u17730
 12406   0037AA                     u17735:
 12407   0037AA  90D8               	bcf	status,0,c
 12408   0037AC  33E4               	rrcf	(??_put_fat+7)& (0+255),f,b
 12409   0037AE  33E3               	rrcf	(??_put_fat+6)& (0+255),f,b
 12410   0037B0  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12411   0037B2  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12412   0037B4                     u17730:
 12413   0037B4  2EE8               	decfsz	wreg,f,c
 12414   0037B6  EFD5  F01B         	goto	u17735
 12415   0037BA  51DD               	movf	??_put_fat& (0+255),w,b
 12416   0037BC  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12417   0037BE  6FCA               	movwf	move_window@sector& (0+255),b
 12418   0037C0  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12419   0037C2  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12420   0037C4  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12421   0037C6  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12422   0037C8  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 12423   0037CA  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12424   0037CC  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12425   0037CE  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 12426   0037D0  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12427   0037D2  ECAF  F046         	call	_move_window	;wreg free
 12428   0037D6  0100               	movlb	0	; () banked
 12429   0037D8  6FF3               	movwf	put_fat@res& (0+255),b
 12430   0037DA                     
 12431                           ; BSR set to: 0
 12432                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 12433   0037DA  51F3               	movf	put_fat@res& (0+255),w,b
 12434   0037DC  B4D8               	btfsc	status,2,c
 12435   0037DE  EFF3  F01B         	goto	u17741
 12436   0037E2  EFF5  F01B         	goto	u17740
 12437   0037E6                     u17741:
 12438   0037E6  EFF7  F01B         	goto	l15174
 12439   0037EA                     u17740:
 12440   0037EA  EF80  F01C         	goto	l15182
 12441   0037EE                     l15174:
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 12445   0037EE  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12446   0037F2  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12447   0037F6  90D8               	bcf	status,0,c
 12448   0037F8  37DD               	rlcf	??_put_fat& (0+255),f,b
 12449   0037FA  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12450   0037FC  90D8               	bcf	status,0,c
 12451   0037FE  37DD               	rlcf	??_put_fat& (0+255),f,b
 12452   003800  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12453   003802  0EFF               	movlw	255
 12454   003804  15DD               	andwf	??_put_fat& (0+255),w,b
 12455   003806  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12456   003808  0E01               	movlw	1
 12457   00380A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12458   00380C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12459   00380E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12460   003810  25D3               	addwf	put_fat@fs& (0+255),w,b
 12461   003812  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12462   003814  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12463   003816  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12464   003818  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12465   00381A  0E33               	movlw	51
 12466   00381C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12467   00381E  6F60               	movwf	ld_dword@ptr& (0+255),b
 12468   003820  0E00               	movlw	0
 12469   003822  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12470   003824  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 12471   003826  ECE4  F047         	call	_ld_dword	;wreg free
 12472   00382A  0E00               	movlw	0
 12473   00382C  0100               	movlb	0	; () banked
 12474   00382E  1560               	andwf	?_ld_dword& (0+255),w,b
 12475   003830  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12476   003832  0E00               	movlw	0
 12477   003834  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 12478   003836  6FE4               	movwf	(??_put_fat+7)& (0+255),b
 12479   003838  0E00               	movlw	0
 12480   00383A  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 12481   00383C  6FE5               	movwf	(??_put_fat+8)& (0+255),b
 12482   00383E  0EF0               	movlw	240
 12483   003840  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 12484   003842  6FE6               	movwf	(??_put_fat+9)& (0+255),b
 12485   003844  0EFF               	movlw	255
 12486   003846  15D9               	andwf	put_fat@val& (0+255),w,b
 12487   003848  6FE7               	movwf	(??_put_fat+10)& (0+255),b
 12488   00384A  0EFF               	movlw	255
 12489   00384C  15DA               	andwf	(put_fat@val+1)& (0+255),w,b
 12490   00384E  6FE8               	movwf	(??_put_fat+11)& (0+255),b
 12491   003850  0EFF               	movlw	255
 12492   003852  15DB               	andwf	(put_fat@val+2)& (0+255),w,b
 12493   003854  6FE9               	movwf	(??_put_fat+12)& (0+255),b
 12494   003856  0E0F               	movlw	15
 12495   003858  15DC               	andwf	(put_fat@val+3)& (0+255),w,b
 12496   00385A  6FEA               	movwf	(??_put_fat+13)& (0+255),b
 12497   00385C  51E3               	movf	(??_put_fat+6)& (0+255),w,b
 12498   00385E  11E7               	iorwf	(??_put_fat+10)& (0+255),w,b
 12499   003860  6FD9               	movwf	put_fat@val& (0+255),b
 12500   003862  51E4               	movf	(??_put_fat+7)& (0+255),w,b
 12501   003864  11E8               	iorwf	(??_put_fat+11)& (0+255),w,b
 12502   003866  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 12503   003868  51E5               	movf	(??_put_fat+8)& (0+255),w,b
 12504   00386A  11E9               	iorwf	(??_put_fat+12)& (0+255),w,b
 12505   00386C  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 12506   00386E  51E6               	movf	(??_put_fat+9)& (0+255),w,b
 12507   003870  11EA               	iorwf	(??_put_fat+13)& (0+255),w,b
 12508   003872  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 12509   003874                     
 12510                           ; BSR set to: 0
 12511                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 12512   003874  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12513   003878  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12514   00387C  90D8               	bcf	status,0,c
 12515   00387E  37DD               	rlcf	??_put_fat& (0+255),f,b
 12516   003880  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12517   003882  90D8               	bcf	status,0,c
 12518   003884  37DD               	rlcf	??_put_fat& (0+255),f,b
 12519   003886  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12520   003888  0EFF               	movlw	255
 12521   00388A  15DD               	andwf	??_put_fat& (0+255),w,b
 12522   00388C  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12523   00388E  0E01               	movlw	1
 12524   003890  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12525   003892  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12526   003894  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12527   003896  25D3               	addwf	put_fat@fs& (0+255),w,b
 12528   003898  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12529   00389A  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12530   00389C  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12531   00389E  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12532   0038A0  0E33               	movlw	51
 12533   0038A2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12534   0038A4  6F60               	movwf	st_dword@ptr& (0+255),b
 12535   0038A6  0E00               	movlw	0
 12536   0038A8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12537   0038AA  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 12538   0038AC  C0D9  F062         	movff	put_fat@val,st_dword@val
 12539   0038B0  C0DA  F063         	movff	put_fat@val+1,st_dword@val+1
 12540   0038B4  C0DB  F064         	movff	put_fat@val+2,st_dword@val+2
 12541   0038B8  C0DC  F065         	movff	put_fat@val+3,st_dword@val+3
 12542   0038BC  EC5C  F04A         	call	_st_dword	;wreg free
 12543   0038C0                     
 12544                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 12545   0038C0  0100               	movlb	0	; () banked
 12546   0038C2  EE20 F003          	lfsr	2,3
 12547   0038C6  51D3               	movf	put_fat@fs& (0+255),w,b
 12548   0038C8  26D9               	addwf	fsr2l,f,c
 12549   0038CA  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12550   0038CC  22DA               	addwfc	fsr2h,f,c
 12551   0038CE  0E01               	movlw	1
 12552   0038D0  6EDF               	movwf	indf2,c
 12553                           
 12554                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 12555   0038D2  EF80  F01C         	goto	l15182
 12556   0038D6                     l15180:
 12557                           
 12558                           ; BSR set to: 0
 12559   0038D6  0060  F34F  FFD9   	movff	put_fat@fs,fsr2l
 12560   0038DC  0060  F353  FFDA   	movff	put_fat@fs+1,fsr2h
 12561   0038E2  50DF               	movf	indf2,w,c
 12562                           
 12563                           ; Switch size 1, requested type "simple"
 12564                           ; Number of cases is 3, Range of values is 1 to 3
 12565                           ; switch strategies available:
 12566                           ; Name         Instructions Cycles
 12567                           ; simple_byte           10     6 (average)
 12568                           ;	Chosen strategy is simple_byte
 12569   0038E4  0A01               	xorlw	1	; case 1
 12570   0038E6  B4D8               	btfsc	status,2,c
 12571   0038E8  EF17  F01A         	goto	l945
 12572   0038EC  0A03               	xorlw	3	; case 2
 12573   0038EE  B4D8               	btfsc	status,2,c
 12574   0038F0  EF4B  F01B         	goto	l15156
 12575   0038F4  0A01               	xorlw	1	; case 3
 12576   0038F6  B4D8               	btfsc	status,2,c
 12577   0038F8  EFB4  F01B         	goto	l15166
 12578   0038FC  EF80  F01C         	goto	l15182
 12579   003900                     l15182:
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 12583   003900  51F3               	movf	put_fat@res& (0+255),w,b
 12584   003902                     
 12585                           ; BSR set to: 0
 12586   003902  0012               	return		;funcret
 12587   003904                     __end_of_put_fat:
 12588                           	callstack 0
 12589                           
 12590 ;; *************** function _get_fat *****************
 12591 ;; Defined at:
 12592 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;  obj             2  115[BANK0 ] PTR struct .
 12595 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 12596 ;;  clst            4  117[BANK0 ] unsigned long 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  val             4  133[BANK0 ] unsigned long 
 12599 ;;  fs              2  139[BANK0 ] PTR struct .
 12600 ;;		 -> FatFs(563), NULL(0), 
 12601 ;;  bc              2  137[BANK0 ] unsigned int 
 12602 ;;  wc              2  131[BANK0 ] unsigned int 
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  4  115[BANK0 ] unsigned long 
 12605 ;; Registers used:
 12606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12616 ;;Total ram usage:       26 bytes
 12617 ;; Hardware stack levels used: 1
 12618 ;; Hardware stack levels required when called: 12
 12619 ;; This function calls:
 12620 ;;		_ld_dword
 12621 ;;		_ld_word
 12622 ;;		_move_window
 12623 ;; This function is called by:
 12624 ;;		_remove_chain
 12625 ;;		_create_chain
 12626 ;;		_dir_sdi
 12627 ;;		_dir_next
 12628 ;;		_f_open
 12629 ;;		_f_read
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           
 12633                           	psect	text36
 12634   004FC8                     __ptext36:
 12635                           	callstack 0
 12636   004FC8                     _get_fat:
 12637                           	callstack 15
 12638   004FC8                     
 12639                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 12640   004FC8  0060  F34F  FFD9   	movff	get_fat@obj,fsr2l
 12641   004FCE  0060  F353  FFDA   	movff	get_fat@obj+1,fsr2h
 12642   004FD4  006F FF78  F0EB    	movff	postinc2,get_fat@fs
 12643   004FDA  006F FF74  F0EC    	movff	postdec2,get_fat@fs+1
 12644   004FE0                     
 12645                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 12646   004FE0  0100               	movlb	0	; () banked
 12647   004FE2  51D8               	movf	(get_fat@clst+3)& (0+255),w,b
 12648   004FE4  11D7               	iorwf	(get_fat@clst+2)& (0+255),w,b
 12649   004FE6  11D6               	iorwf	(get_fat@clst+1)& (0+255),w,b
 12650   004FE8  E109               	bnz	u17520
 12651   004FEA  0E02               	movlw	2
 12652   004FEC  5DD5               	subwf	get_fat@clst& (0+255),w,b
 12653   004FEE  A0D8               	btfss	status,0,c
 12654   004FF0  EFFC  F027         	goto	u17521
 12655   004FF4  EFFE  F027         	goto	u17520
 12656   004FF8                     u17521:
 12657   004FF8  EF13  F028         	goto	l15068
 12658   004FFC                     u17520:
 12659   004FFC                     
 12660                           ; BSR set to: 0
 12661   004FFC  EE20 F017          	lfsr	2,23
 12662   005000  51EB               	movf	get_fat@fs& (0+255),w,b
 12663   005002  26D9               	addwf	fsr2l,f,c
 12664   005004  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12665   005006  22DA               	addwfc	fsr2h,f,c
 12666   005008  50DE               	movf	postinc2,w,c
 12667   00500A  5DD5               	subwf	get_fat@clst& (0+255),w,b
 12668   00500C  50DE               	movf	postinc2,w,c
 12669   00500E  59D6               	subwfb	(get_fat@clst+1)& (0+255),w,b
 12670   005010  50DE               	movf	postinc2,w,c
 12671   005012  59D7               	subwfb	(get_fat@clst+2)& (0+255),w,b
 12672   005014  50DE               	movf	postinc2,w,c
 12673   005016  59D8               	subwfb	(get_fat@clst+3)& (0+255),w,b
 12674   005018  A0D8               	btfss	status,0,c
 12675   00501A  EF11  F028         	goto	u17531
 12676   00501E  EF13  F028         	goto	u17530
 12677   005022                     u17531:
 12678   005022  EF1D  F028         	goto	l922
 12679   005026                     u17530:
 12680   005026                     l15068:
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 12684   005026  0E01               	movlw	1
 12685   005028  6FE5               	movwf	get_fat@val& (0+255),b
 12686   00502A  0E00               	movlw	0
 12687   00502C  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 12688   00502E  0E00               	movlw	0
 12689   005030  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 12690   005032  0E00               	movlw	0
 12691   005034  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 12692                           
 12693                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 12694   005036  EFE7  F029         	goto	l925
 12695   00503A                     l922:
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 12699   00503A  69E5               	setf	get_fat@val& (0+255),b
 12700   00503C  69E6               	setf	(get_fat@val+1)& (0+255),b
 12701   00503E  69E7               	setf	(get_fat@val+2)& (0+255),b
 12702   005040  69E8               	setf	(get_fat@val+3)& (0+255),b
 12703                           
 12704                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 12705   005042  EFD2  F029         	goto	l15108
 12706   005046                     l927:
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 12710   005046  C0D5  F0E9         	movff	get_fat@clst,get_fat@bc
 12711   00504A  C0D6  F0EA         	movff	get_fat@clst+1,get_fat@bc+1
 12712   00504E                     
 12713                           ; BSR set to: 0
 12714   00504E  90D8               	bcf	status,0,c
 12715   005050  31EA               	rrcf	(get_fat@bc+1)& (0+255),w,b
 12716   005052  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12717   005054  31E9               	rrcf	get_fat@bc& (0+255),w,b
 12718   005056  6FD9               	movwf	??_get_fat& (0+255),b
 12719   005058  51D9               	movf	??_get_fat& (0+255),w,b
 12720   00505A  27E9               	addwf	get_fat@bc& (0+255),f,b
 12721   00505C  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12722   00505E  23EA               	addwfc	(get_fat@bc+1)& (0+255),f,b
 12723   005060                     
 12724                           ; BSR set to: 0
 12725                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 12726   005060  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12727   005064  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12728   005068  EE20 F023          	lfsr	2,35
 12729   00506C  51EB               	movf	get_fat@fs& (0+255),w,b
 12730   00506E  26D9               	addwf	fsr2l,f,c
 12731   005070  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12732   005072  22DA               	addwfc	fsr2h,f,c
 12733   005074  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12734   00507A  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12735   005080  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12736   005086  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12737   00508C  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 12738   005090  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 12739   005094  0E09               	movlw	9
 12740   005096  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12741   005098                     u17545:
 12742   005098  90D8               	bcf	status,0,c
 12743   00509A  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12744   00509C  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12745   00509E  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 12746   0050A0  EF4C  F028         	goto	u17545
 12747   0050A4  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12748   0050A6  25D9               	addwf	??_get_fat& (0+255),w,b
 12749   0050A8  6FCA               	movwf	move_window@sector& (0+255),b
 12750   0050AA  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12751   0050AC  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 12752   0050AE  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12753   0050B0  0E00               	movlw	0
 12754   0050B2  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 12755   0050B4  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12756   0050B6  0E00               	movlw	0
 12757   0050B8  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12758   0050BA  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12759   0050BC  ECAF  F046         	call	_move_window	;wreg free
 12760   0050C0  0900               	iorlw	0
 12761   0050C2  B4D8               	btfsc	status,2,c
 12762   0050C4  EF66  F028         	goto	u17551
 12763   0050C8  EF68  F028         	goto	u17550
 12764   0050CC                     u17551:
 12765   0050CC  EF6A  F028         	goto	l15076
 12766   0050D0                     u17550:
 12767   0050D0  EFE7  F029         	goto	l925
 12768   0050D4                     l15076:
 12769                           
 12770                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 12771   0050D4  0EFF               	movlw	255
 12772   0050D6  0100               	movlb	0	; () banked
 12773   0050D8  15E9               	andwf	get_fat@bc& (0+255),w,b
 12774   0050DA  6FD9               	movwf	??_get_fat& (0+255),b
 12775   0050DC  0E01               	movlw	1
 12776   0050DE  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 12777   0050E0  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12778   0050E2  51D9               	movf	??_get_fat& (0+255),w,b
 12779   0050E4  25EB               	addwf	get_fat@fs& (0+255),w,b
 12780   0050E6  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12781   0050E8  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12782   0050EA  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12783   0050EC  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12784   0050EE  0E33               	movlw	51
 12785   0050F0  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 12786   0050F2  6ED9               	movwf	fsr2l,c
 12787   0050F4  0E00               	movlw	0
 12788   0050F6  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12789   0050F8  6EDA               	movwf	fsr2h,c
 12790   0050FA  50DF               	movf	indf2,w,c
 12791   0050FC  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12792   0050FE  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12793   005100  6FE3               	movwf	get_fat@wc& (0+255),b
 12794   005102  6BE4               	clrf	(get_fat@wc+1)& (0+255),b
 12795   005104                     
 12796                           ; BSR set to: 0
 12797   005104  4BE9               	infsnz	get_fat@bc& (0+255),f,b
 12798   005106  2BEA               	incf	(get_fat@bc+1)& (0+255),f,b
 12799   005108                     
 12800                           ; BSR set to: 0
 12801                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 12802   005108  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12803   00510C  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12804   005110  EE20 F023          	lfsr	2,35
 12805   005114  51EB               	movf	get_fat@fs& (0+255),w,b
 12806   005116  26D9               	addwf	fsr2l,f,c
 12807   005118  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12808   00511A  22DA               	addwfc	fsr2h,f,c
 12809   00511C  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12810   005122  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12811   005128  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12812   00512E  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12813   005134  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 12814   005138  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 12815   00513C  0E09               	movlw	9
 12816   00513E  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12817   005140                     u17565:
 12818   005140  90D8               	bcf	status,0,c
 12819   005142  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12820   005144  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12821   005146  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 12822   005148  EFA0  F028         	goto	u17565
 12823   00514C  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12824   00514E  25D9               	addwf	??_get_fat& (0+255),w,b
 12825   005150  6FCA               	movwf	move_window@sector& (0+255),b
 12826   005152  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12827   005154  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 12828   005156  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12829   005158  0E00               	movlw	0
 12830   00515A  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 12831   00515C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12832   00515E  0E00               	movlw	0
 12833   005160  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12834   005162  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12835   005164  ECAF  F046         	call	_move_window	;wreg free
 12836   005168  0900               	iorlw	0
 12837   00516A  B4D8               	btfsc	status,2,c
 12838   00516C  EFBA  F028         	goto	u17571
 12839   005170  EFBC  F028         	goto	u17570
 12840   005174                     u17571:
 12841   005174  EFBE  F028         	goto	l15084
 12842   005178                     u17570:
 12843   005178  EFE7  F029         	goto	l925
 12844   00517C                     l15084:
 12845                           
 12846                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 12847   00517C  0EFF               	movlw	255
 12848   00517E  0100               	movlb	0	; () banked
 12849   005180  15E9               	andwf	get_fat@bc& (0+255),w,b
 12850   005182  6FD9               	movwf	??_get_fat& (0+255),b
 12851   005184  0E01               	movlw	1
 12852   005186  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 12853   005188  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12854   00518A  51D9               	movf	??_get_fat& (0+255),w,b
 12855   00518C  25EB               	addwf	get_fat@fs& (0+255),w,b
 12856   00518E  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12857   005190  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12858   005192  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12859   005194  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12860   005196  0E33               	movlw	51
 12861   005198  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 12862   00519A  6ED9               	movwf	fsr2l,c
 12863   00519C  0E00               	movlw	0
 12864   00519E  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12865   0051A0  6EDA               	movwf	fsr2h,c
 12866   0051A2  50DF               	movf	indf2,w,c
 12867   0051A4  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12868   0051A6  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12869   0051A8  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12870   0051AA  6BDE               	clrf	(??_get_fat+5)& (0+255),b
 12871   0051AC  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12872   0051AE  13E3               	iorwf	get_fat@wc& (0+255),f,b
 12873   0051B0  51DF               	movf	(??_get_fat+6)& (0+255),w,b
 12874   0051B2  13E4               	iorwf	(get_fat@wc+1)& (0+255),f,b
 12875   0051B4                     
 12876                           ; BSR set to: 0
 12877                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 12878   0051B4  B1D5               	btfsc	get_fat@clst& (0+255),0,b
 12879   0051B6  EFDF  F028         	goto	u17581
 12880   0051BA  EFE1  F028         	goto	u17580
 12881   0051BE                     u17581:
 12882   0051BE  EFE9  F028         	goto	l15090
 12883   0051C2                     u17580:
 12884   0051C2                     
 12885                           ; BSR set to: 0
 12886   0051C2  0EFF               	movlw	255
 12887   0051C4  15E3               	andwf	get_fat@wc& (0+255),w,b
 12888   0051C6  6FE1               	movwf	_get_fat$2577& (0+255),b
 12889   0051C8  0E0F               	movlw	15
 12890   0051CA  15E4               	andwf	(get_fat@wc+1)& (0+255),w,b
 12891   0051CC  6FE2               	movwf	(_get_fat$2577+1)& (0+255),b
 12892   0051CE  EFF9  F028         	goto	l15092
 12893   0051D2                     l15090:
 12894                           
 12895                           ; BSR set to: 0
 12896   0051D2  C0E3  F0D9         	movff	get_fat@wc,??_get_fat
 12897   0051D6  C0E4  F0DA         	movff	get_fat@wc+1,??_get_fat+1
 12898   0051DA  0E04               	movlw	4
 12899   0051DC  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12900   0051DE                     u17595:
 12901   0051DE  90D8               	bcf	status,0,c
 12902   0051E0  33DA               	rrcf	(??_get_fat+1)& (0+255),f,b
 12903   0051E2  33D9               	rrcf	??_get_fat& (0+255),f,b
 12904   0051E4  2FDB               	decfsz	(??_get_fat+2)& (0+255),f,b
 12905   0051E6  EFEF  F028         	goto	u17595
 12906   0051EA  C0D9  F0E1         	movff	??_get_fat,_get_fat$2577
 12907   0051EE  C0DA  F0E2         	movff	??_get_fat+1,_get_fat$2577+1
 12908   0051F2                     l15092:
 12909                           
 12910                           ; BSR set to: 0
 12911   0051F2  C0E1  F0E5         	movff	_get_fat$2577,get_fat@val
 12912   0051F6  C0E2  F0E6         	movff	_get_fat$2577+1,get_fat@val+1
 12913   0051FA  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 12914   0051FC  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 12915                           
 12916                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 12917   0051FE  EFE7  F029         	goto	l925
 12918   005202                     l15094:
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 12922   005202  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12923   005206  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12924   00520A  EE20 F023          	lfsr	2,35
 12925   00520E  51EB               	movf	get_fat@fs& (0+255),w,b
 12926   005210  26D9               	addwf	fsr2l,f,c
 12927   005212  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12928   005214  22DA               	addwfc	fsr2h,f,c
 12929   005216  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12930   00521C  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12931   005222  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12932   005228  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12933   00522E  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 12934   005232  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 12935   005236  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 12936   00523A  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 12937   00523E  C0DE  F0DD         	movff	??_get_fat+5,??_get_fat+4
 12938   005242  C0DF  F0DE         	movff	??_get_fat+6,??_get_fat+5
 12939   005246  C0E0  F0DF         	movff	??_get_fat+7,??_get_fat+6
 12940   00524A  6BE0               	clrf	(??_get_fat+7)& (0+255),b
 12941   00524C  51D9               	movf	??_get_fat& (0+255),w,b
 12942   00524E  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12943   005250  6FCA               	movwf	move_window@sector& (0+255),b
 12944   005252  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12945   005254  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12946   005256  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12947   005258  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12948   00525A  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 12949   00525C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12950   00525E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12951   005260  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 12952   005262  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12953   005264  ECAF  F046         	call	_move_window	;wreg free
 12954   005268  0900               	iorlw	0
 12955   00526A  B4D8               	btfsc	status,2,c
 12956   00526C  EF3A  F029         	goto	u17601
 12957   005270  EF3C  F029         	goto	u17600
 12958   005274                     u17601:
 12959   005274  EF3E  F029         	goto	l15098
 12960   005278                     u17600:
 12961   005278  EFE7  F029         	goto	l925
 12962   00527C                     l15098:
 12963                           
 12964                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 12965   00527C  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 12966   005280  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 12967   005284  90D8               	bcf	status,0,c
 12968   005286  0100               	movlb	0	; () banked
 12969   005288  37D9               	rlcf	??_get_fat& (0+255),f,b
 12970   00528A  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 12971   00528C  0EFF               	movlw	255
 12972   00528E  15D9               	andwf	??_get_fat& (0+255),w,b
 12973   005290  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12974   005292  0E01               	movlw	1
 12975   005294  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 12976   005296  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12977   005298  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 12978   00529A  25EB               	addwf	get_fat@fs& (0+255),w,b
 12979   00529C  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12980   00529E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 12981   0052A0  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12982   0052A2  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 12983   0052A4  0E33               	movlw	51
 12984   0052A6  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 12985   0052A8  6F60               	movwf	ld_word@ptr& (0+255),b
 12986   0052AA  0E00               	movlw	0
 12987   0052AC  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 12988   0052AE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 12989   0052B0  ECE3  F04F         	call	_ld_word	;wreg free
 12990   0052B4  0100               	movlb	0	; () banked
 12991   0052B6  C060  F0E5         	movff	?_ld_word,get_fat@val
 12992   0052BA  C061  F0E6         	movff	?_ld_word+1,get_fat@val+1
 12993   0052BE  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 12994   0052C0  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 12995                           
 12996                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 12997   0052C2  EFE7  F029         	goto	l925
 12998   0052C6                     l15100:
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 13002   0052C6  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 13003   0052CA  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 13004   0052CE  EE20 F023          	lfsr	2,35
 13005   0052D2  51EB               	movf	get_fat@fs& (0+255),w,b
 13006   0052D4  26D9               	addwf	fsr2l,f,c
 13007   0052D6  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 13008   0052D8  22DA               	addwfc	fsr2h,f,c
 13009   0052DA  006F FF78  F0D9    	movff	postinc2,??_get_fat
 13010   0052E0  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 13011   0052E6  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 13012   0052EC  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 13013   0052F2  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 13014   0052F6  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 13015   0052FA  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 13016   0052FE  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 13017   005302  0E08               	movlw	8
 13018   005304  EF89  F029         	goto	u17610
 13019   005308                     u17615:
 13020   005308  90D8               	bcf	status,0,c
 13021   00530A  33E0               	rrcf	(??_get_fat+7)& (0+255),f,b
 13022   00530C  33DF               	rrcf	(??_get_fat+6)& (0+255),f,b
 13023   00530E  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 13024   005310  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 13025   005312                     u17610:
 13026   005312  2EE8               	decfsz	wreg,f,c
 13027   005314  EF84  F029         	goto	u17615
 13028   005318  51D9               	movf	??_get_fat& (0+255),w,b
 13029   00531A  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13030   00531C  6FCA               	movwf	move_window@sector& (0+255),b
 13031   00531E  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 13032   005320  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13033   005322  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 13034   005324  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13035   005326  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 13036   005328  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 13037   00532A  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13038   00532C  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 13039   00532E  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 13040   005330  ECAF  F046         	call	_move_window	;wreg free
 13041   005334  0900               	iorlw	0
 13042   005336  B4D8               	btfsc	status,2,c
 13043   005338  EFA0  F029         	goto	u17621
 13044   00533C  EFA2  F029         	goto	u17620
 13045   005340                     u17621:
 13046   005340  EFA4  F029         	goto	l15104
 13047   005344                     u17620:
 13048   005344  EFE7  F029         	goto	l925
 13049   005348                     l15104:
 13050                           
 13051                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 13052   005348  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 13053   00534C  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 13054   005350  0100               	movlb	0	; () banked
 13055   005352  90D8               	bcf	status,0,c
 13056   005354  37D9               	rlcf	??_get_fat& (0+255),f,b
 13057   005356  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 13058   005358  90D8               	bcf	status,0,c
 13059   00535A  37D9               	rlcf	??_get_fat& (0+255),f,b
 13060   00535C  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 13061   00535E  0EFF               	movlw	255
 13062   005360  15D9               	andwf	??_get_fat& (0+255),w,b
 13063   005362  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 13064   005364  0E01               	movlw	1
 13065   005366  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 13066   005368  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 13067   00536A  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13068   00536C  25EB               	addwf	get_fat@fs& (0+255),w,b
 13069   00536E  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 13070   005370  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13071   005372  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 13072   005374  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 13073   005376  0E33               	movlw	51
 13074   005378  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13075   00537A  6F60               	movwf	ld_dword@ptr& (0+255),b
 13076   00537C  0E00               	movlw	0
 13077   00537E  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13078   005380  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 13079   005382  ECE4  F047         	call	_ld_dword	;wreg free
 13080   005386  0EFF               	movlw	255
 13081   005388  0100               	movlb	0	; () banked
 13082   00538A  1560               	andwf	?_ld_dword& (0+255),w,b
 13083   00538C  6FE5               	movwf	get_fat@val& (0+255),b
 13084   00538E  0EFF               	movlw	255
 13085   005390  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 13086   005392  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 13087   005394  0EFF               	movlw	255
 13088   005396  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 13089   005398  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 13090   00539A  0E0F               	movlw	15
 13091   00539C  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 13092   00539E  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 13093                           
 13094                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 13095   0053A0  EFE7  F029         	goto	l925
 13096   0053A4                     l15108:
 13097                           
 13098                           ; BSR set to: 0
 13099   0053A4  0060  F3AF  FFD9   	movff	get_fat@fs,fsr2l
 13100   0053AA  0060  F3B3  FFDA   	movff	get_fat@fs+1,fsr2h
 13101   0053B0  50DF               	movf	indf2,w,c
 13102                           
 13103                           ; Switch size 1, requested type "simple"
 13104                           ; Number of cases is 3, Range of values is 1 to 3
 13105                           ; switch strategies available:
 13106                           ; Name         Instructions Cycles
 13107                           ; simple_byte           10     6 (average)
 13108                           ;	Chosen strategy is simple_byte
 13109   0053B2  0A01               	xorlw	1	; case 1
 13110   0053B4  B4D8               	btfsc	status,2,c
 13111   0053B6  EF23  F028         	goto	l927
 13112   0053BA  0A03               	xorlw	3	; case 2
 13113   0053BC  B4D8               	btfsc	status,2,c
 13114   0053BE  EF01  F029         	goto	l15094
 13115   0053C2  0A01               	xorlw	1	; case 3
 13116   0053C4  B4D8               	btfsc	status,2,c
 13117   0053C6  EF63  F029         	goto	l15100
 13118   0053CA  EF13  F028         	goto	l15068
 13119   0053CE                     l925:
 13120                           
 13121                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 13122   0053CE  C0E5  F0D3         	movff	get_fat@val,?_get_fat
 13123   0053D2  C0E6  F0D4         	movff	get_fat@val+1,?_get_fat+1
 13124   0053D6  C0E7  F0D5         	movff	get_fat@val+2,?_get_fat+2
 13125   0053DA  C0E8  F0D6         	movff	get_fat@val+3,?_get_fat+3
 13126   0053DE  0012               	return		;funcret
 13127   0053E0                     __end_of_get_fat:
 13128                           	callstack 0
 13129                           
 13130 ;; *************** function _f_close *****************
 13131 ;; Defined at:
 13132 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  fp              2  122[BANK0 ] PTR struct .
 13135 ;;		 -> Fil(546), 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  fs              2  124[BANK0 ] PTR struct .
 13138 ;;		 -> FatFs(563), NULL(0), 
 13139 ;;  res             1  126[BANK0 ] enum E68
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      enum E68
 13142 ;; Registers used:
 13143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;Total ram usage:        5 bytes
 13154 ;; Hardware stack levels used: 1
 13155 ;; Hardware stack levels required when called: 13
 13156 ;; This function calls:
 13157 ;;		_f_sync
 13158 ;;		_validate
 13159 ;; This function is called by:
 13160 ;;		_main
 13161 ;;		_send_status_ok
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           	psect	text37
 13166   009D56                     __ptext37:
 13167                           	callstack 0
 13168   009D56                     _f_close:
 13169                           	callstack 16
 13170   009D56                     
 13171                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 13172   009D56  C0DA  F0D3         	movff	f_close@fp,f_sync@fp
 13173   009D5A  C0DB  F0D4         	movff	f_close@fp+1,f_sync@fp+1
 13174   009D5E  ECE2  F035         	call	_f_sync	;wreg free
 13175   009D62  0100               	movlb	0	; () banked
 13176   009D64  6FDE               	movwf	f_close@res& (0+255),b
 13177   009D66                     
 13178                           ; BSR set to: 0
 13179                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 13180   009D66  51DE               	movf	f_close@res& (0+255),w,b
 13181   009D68  A4D8               	btfss	status,2,c
 13182   009D6A  EFB9  F04E         	goto	u21591
 13183   009D6E  EFBB  F04E         	goto	u21590
 13184   009D72                     u21591:
 13185   009D72  EFD6  F04E         	goto	l1397
 13186   009D76                     u21590:
 13187   009D76                     
 13188                           ; BSR set to: 0
 13189                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 13190   009D76  C0DA  F062         	movff	f_close@fp,validate@obj
 13191   009D7A  C0DB  F063         	movff	f_close@fp+1,validate@obj+1
 13192   009D7E  0EDC               	movlw	low f_close@fs
 13193   009D80  6F64               	movwf	validate@rfs& (0+255),b
 13194   009D82  6B65               	clrf	(validate@rfs+1)& (0+255),b
 13195   009D84  EC4F  F040         	call	_validate	;wreg free
 13196   009D88  0100               	movlb	0	; () banked
 13197   009D8A  6FDE               	movwf	f_close@res& (0+255),b
 13198   009D8C                     
 13199                           ; BSR set to: 0
 13200                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 13201   009D8C  51DE               	movf	f_close@res& (0+255),w,b
 13202   009D8E  A4D8               	btfss	status,2,c
 13203   009D90  EFCC  F04E         	goto	u21601
 13204   009D94  EFCE  F04E         	goto	u21600
 13205   009D98                     u21601:
 13206   009D98  EFD6  F04E         	goto	l1397
 13207   009D9C                     u21600:
 13208   009D9C                     
 13209                           ; BSR set to: 0
 13210                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 13211   009D9C  0060  F36B  FFD9   	movff	f_close@fp,fsr2l
 13212   009DA2  0060  F36F  FFDA   	movff	f_close@fp+1,fsr2h
 13213   009DA8  6ADE               	clrf	postinc2,c
 13214   009DAA  6ADD               	clrf	postdec2,c
 13215   009DAC                     l1397:
 13216                           
 13217                           ; BSR set to: 0
 13218   009DAC  0012               	return		;funcret
 13219   009DAE                     __end_of_f_close:
 13220                           	callstack 0
 13221                           
 13222 ;; *************** function _f_sync *****************
 13223 ;; Defined at:
 13224 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;  fp              2  115[BANK0 ] PTR struct .
 13227 ;;		 -> Fil(546), 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;  tm              4    0        unsigned long 
 13230 ;;  fs              2  120[BANK0 ] PTR struct .
 13231 ;;		 -> FatFs(563), NULL(0), 
 13232 ;;  dir             2  118[BANK0 ] PTR unsigned char 
 13233 ;;		 -> FatFs(563), NULL(0), 
 13234 ;;  res             1  117[BANK0 ] enum E68
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      enum E68
 13237 ;; Registers used:
 13238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;Total ram usage:        7 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; Hardware stack levels required when called: 12
 13251 ;; This function calls:
 13252 ;;		_disk_write
 13253 ;;		_move_window
 13254 ;;		_st_clust
 13255 ;;		_st_dword
 13256 ;;		_st_word
 13257 ;;		_sync_fs
 13258 ;;		_validate
 13259 ;; This function is called by:
 13260 ;;		_f_close
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264                           	psect	text38
 13265   006BC4                     __ptext38:
 13266                           	callstack 0
 13267   006BC4                     _f_sync:
 13268                           	callstack 16
 13269   006BC4                     
 13270                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 13271   006BC4  C0D3  F062         	movff	f_sync@fp,validate@obj
 13272   006BC8  C0D4  F063         	movff	f_sync@fp+1,validate@obj+1
 13273   006BCC  0ED8               	movlw	low f_sync@fs
 13274   006BCE  0100               	movlb	0	; () banked
 13275   006BD0  6F64               	movwf	validate@rfs& (0+255),b
 13276   006BD2  6B65               	clrf	(validate@rfs+1)& (0+255),b
 13277   006BD4  EC4F  F040         	call	_validate	;wreg free
 13278   006BD8  0100               	movlb	0	; () banked
 13279   006BDA  6FD5               	movwf	f_sync@res& (0+255),b
 13280   006BDC                     
 13281                           ; BSR set to: 0
 13282                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 13283   006BDC  51D5               	movf	f_sync@res& (0+255),w,b
 13284   006BDE  A4D8               	btfss	status,2,c
 13285   006BE0  EFF4  F035         	goto	u20581
 13286   006BE4  EFF6  F035         	goto	u20580
 13287   006BE8                     u20581:
 13288   006BE8  EFF5  F036         	goto	l16810
 13289   006BEC                     u20580:
 13290   006BEC                     
 13291                           ; BSR set to: 0
 13292                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 13293   006BEC  EE20 F00E          	lfsr	2,14
 13294   006BF0  51D3               	movf	f_sync@fp& (0+255),w,b
 13295   006BF2  26D9               	addwf	fsr2l,f,c
 13296   006BF4  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13297   006BF6  22DA               	addwfc	fsr2h,f,c
 13298   006BF8  ACDF               	btfss	indf2,6,c
 13299   006BFA  EF01  F036         	goto	u20591
 13300   006BFE  EF03  F036         	goto	u20590
 13301   006C02                     u20591:
 13302   006C02  EFF5  F036         	goto	l16810
 13303   006C06                     u20590:
 13304   006C06                     
 13305                           ; BSR set to: 0
 13306                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 13307   006C06  EE20 F00E          	lfsr	2,14
 13308   006C0A  51D3               	movf	f_sync@fp& (0+255),w,b
 13309   006C0C  26D9               	addwf	fsr2l,f,c
 13310   006C0E  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13311   006C10  22DA               	addwfc	fsr2h,f,c
 13312   006C12  AEDF               	btfss	indf2,7,c
 13313   006C14  EF0E  F036         	goto	u20601
 13314   006C18  EF10  F036         	goto	u20600
 13315   006C1C                     u20601:
 13316   006C1C  EF49  F036         	goto	l16790
 13317   006C20                     u20600:
 13318   006C20                     
 13319                           ; BSR set to: 0
 13320                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 13321   006C20  0E22               	movlw	34
 13322   006C22  25D3               	addwf	f_sync@fp& (0+255),w,b
 13323   006C24  6FAB               	movwf	disk_write@buff& (0+255),b
 13324   006C26  0E00               	movlw	0
 13325   006C28  21D4               	addwfc	(f_sync@fp+1)& (0+255),w,b
 13326   006C2A  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 13327   006C2C  EE20 F018          	lfsr	2,24
 13328   006C30  51D3               	movf	f_sync@fp& (0+255),w,b
 13329   006C32  26D9               	addwf	fsr2l,f,c
 13330   006C34  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13331   006C36  22DA               	addwfc	fsr2h,f,c
 13332   006C38  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 13333   006C3E  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 13334   006C44  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 13335   006C4A  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 13336   006C50  0E00               	movlw	0
 13337   006C52  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 13338   006C54  0E01               	movlw	1
 13339   006C56  6FB1               	movwf	disk_write@count& (0+255),b
 13340   006C58  EE20 F001          	lfsr	2,1
 13341   006C5C  51D8               	movf	f_sync@fs& (0+255),w,b
 13342   006C5E  26D9               	addwf	fsr2l,f,c
 13343   006C60  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 13344   006C62  22DA               	addwfc	fsr2h,f,c
 13345   006C64  50DF               	movf	indf2,w,c
 13346   006C66  ECF2  F04C         	call	_disk_write
 13347   006C6A  0900               	iorlw	0
 13348   006C6C  B4D8               	btfsc	status,2,c
 13349   006C6E  EF3B  F036         	goto	u20611
 13350   006C72  EF3D  F036         	goto	u20610
 13351   006C76                     u20611:
 13352   006C76  EF40  F036         	goto	l16788
 13353   006C7A                     u20610:
 13354   006C7A  0E01               	movlw	1
 13355   006C7C  EFF6  F036         	goto	l1391
 13356   006C80                     l16788:
 13357                           
 13358                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 13359   006C80  0100               	movlb	0	; () banked
 13360   006C82  EE20 F00E          	lfsr	2,14
 13361   006C86  51D3               	movf	f_sync@fp& (0+255),w,b
 13362   006C88  26D9               	addwf	fsr2l,f,c
 13363   006C8A  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13364   006C8C  22DA               	addwfc	fsr2h,f,c
 13365   006C8E  0E7F               	movlw	127
 13366   006C90  16DF               	andwf	indf2,f,c
 13367   006C92                     l16790:
 13368   006C92                     
 13369                           ; BSR set to: 0
 13370                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 13371   006C92  C0D8  F0C8         	movff	f_sync@fs,move_window@fs
 13372   006C96  C0D9  F0C9         	movff	f_sync@fs+1,move_window@fs+1
 13373   006C9A  EE20 F01C          	lfsr	2,28
 13374   006C9E  51D3               	movf	f_sync@fp& (0+255),w,b
 13375   006CA0  26D9               	addwf	fsr2l,f,c
 13376   006CA2  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13377   006CA4  22DA               	addwfc	fsr2h,f,c
 13378   006CA6  006F FF78  F0CA    	movff	postinc2,move_window@sector
 13379   006CAC  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
 13380   006CB2  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
 13381   006CB8  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
 13382   006CBE  ECAF  F046         	call	_move_window	;wreg free
 13383   006CC2  0100               	movlb	0	; () banked
 13384   006CC4  6FD5               	movwf	f_sync@res& (0+255),b
 13385   006CC6                     
 13386                           ; BSR set to: 0
 13387                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 13388   006CC6  51D5               	movf	f_sync@res& (0+255),w,b
 13389   006CC8  A4D8               	btfss	status,2,c
 13390   006CCA  EF69  F036         	goto	u20621
 13391   006CCE  EF6B  F036         	goto	u20620
 13392   006CD2                     u20621:
 13393   006CD2  EFF5  F036         	goto	l16810
 13394   006CD6                     u20620:
 13395   006CD6                     
 13396                           ; BSR set to: 0
 13397                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 13398   006CD6  EE20 F020          	lfsr	2,32
 13399   006CDA  51D3               	movf	f_sync@fp& (0+255),w,b
 13400   006CDC  26D9               	addwf	fsr2l,f,c
 13401   006CDE  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13402   006CE0  22DA               	addwfc	fsr2h,f,c
 13403   006CE2  006F FF78  F0D6    	movff	postinc2,f_sync@dir
 13404   006CE8  006F FF74  F0D7    	movff	postdec2,f_sync@dir+1
 13405                           
 13406                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 13407   006CEE  EE20 F00B          	lfsr	2,11
 13408   006CF2  51D6               	movf	f_sync@dir& (0+255),w,b
 13409   006CF4  26D9               	addwf	fsr2l,f,c
 13410   006CF6  51D7               	movf	(f_sync@dir+1)& (0+255),w,b
 13411   006CF8  22DA               	addwfc	fsr2h,f,c
 13412   006CFA  0E00               	movlw	0
 13413   006CFC  8ADB               	bsf	plusw2,5,c
 13414   006CFE                     
 13415                           ; BSR set to: 0
 13416                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 13417   006CFE  0060  F34F  FFD9   	movff	f_sync@fp,fsr2l
 13418   006D04  0060  F353  FFDA   	movff	f_sync@fp+1,fsr2h
 13419   006D0A  006F FF78  F064    	movff	postinc2,st_clust@fs
 13420   006D10  006F FF74  F065    	movff	postdec2,st_clust@fs+1
 13421   006D16  C0D6  F066         	movff	f_sync@dir,st_clust@dir
 13422   006D1A  C0D7  F067         	movff	f_sync@dir+1,st_clust@dir+1
 13423   006D1E  EE20 F006          	lfsr	2,6
 13424   006D22  51D3               	movf	f_sync@fp& (0+255),w,b
 13425   006D24  26D9               	addwf	fsr2l,f,c
 13426   006D26  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13427   006D28  22DA               	addwfc	fsr2h,f,c
 13428   006D2A  006F FF78  F068    	movff	postinc2,st_clust@cl
 13429   006D30  006F FF78  F069    	movff	postinc2,st_clust@cl+1
 13430   006D36  006F FF78  F06A    	movff	postinc2,st_clust@cl+2
 13431   006D3C  006F FF78  F06B    	movff	postinc2,st_clust@cl+3
 13432   006D42  EC02  F04F         	call	_st_clust	;wreg free
 13433   006D46                     
 13434                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 13435   006D46  0E1C               	movlw	28
 13436   006D48  0100               	movlb	0	; () banked
 13437   006D4A  25D6               	addwf	f_sync@dir& (0+255),w,b
 13438   006D4C  6F60               	movwf	st_dword@ptr& (0+255),b
 13439   006D4E  0E00               	movlw	0
 13440   006D50  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13441   006D52  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13442   006D54  EE20 F00A          	lfsr	2,10
 13443   006D58  51D3               	movf	f_sync@fp& (0+255),w,b
 13444   006D5A  26D9               	addwf	fsr2l,f,c
 13445   006D5C  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13446   006D5E  22DA               	addwfc	fsr2h,f,c
 13447   006D60  006F FF78  F062    	movff	postinc2,st_dword@val
 13448   006D66  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13449   006D6C  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13450   006D72  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13451   006D78  EC5C  F04A         	call	_st_dword	;wreg free
 13452   006D7C                     
 13453                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 13454   006D7C  0E16               	movlw	22
 13455   006D7E  0100               	movlb	0	; () banked
 13456   006D80  25D6               	addwf	f_sync@dir& (0+255),w,b
 13457   006D82  6F60               	movwf	st_dword@ptr& (0+255),b
 13458   006D84  0E00               	movlw	0
 13459   006D86  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13460   006D88  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13461   006D8A  0E00               	movlw	0
 13462   006D8C  6F62               	movwf	st_dword@val& (0+255),b
 13463   006D8E  0E00               	movlw	0
 13464   006D90  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13465   006D92  0EF7               	movlw	247
 13466   006D94  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13467   006D96  0E58               	movlw	88
 13468   006D98  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13469   006D9A  EC5C  F04A         	call	_st_dword	;wreg free
 13470   006D9E                     
 13471                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 13472   006D9E  0E12               	movlw	18
 13473   006DA0  0100               	movlb	0	; () banked
 13474   006DA2  25D6               	addwf	f_sync@dir& (0+255),w,b
 13475   006DA4  6F60               	movwf	st_word@ptr& (0+255),b
 13476   006DA6  0E00               	movlw	0
 13477   006DA8  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13478   006DAA  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13479   006DAC  0E00               	movlw	0
 13480   006DAE  6F63               	movwf	(st_word@val+1)& (0+255),b
 13481   006DB0  0E00               	movlw	0
 13482   006DB2  6F62               	movwf	st_word@val& (0+255),b
 13483   006DB4  ECCF  F050         	call	_st_word	;wreg free
 13484                           
 13485                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 13486   006DB8  0100               	movlb	0	; () banked
 13487   006DBA  EE20 F003          	lfsr	2,3
 13488   006DBE  51D8               	movf	f_sync@fs& (0+255),w,b
 13489   006DC0  26D9               	addwf	fsr2l,f,c
 13490   006DC2  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 13491   006DC4  22DA               	addwfc	fsr2h,f,c
 13492   006DC6  0E01               	movlw	1
 13493   006DC8  6EDF               	movwf	indf2,c
 13494   006DCA                     
 13495                           ; BSR set to: 0
 13496                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 13497   006DCA  C0D8  F0C8         	movff	f_sync@fs,sync_fs@fs
 13498   006DCE  C0D9  F0C9         	movff	f_sync@fs+1,sync_fs@fs+1
 13499   006DD2  ECC5  F034         	call	_sync_fs	;wreg free
 13500   006DD6  0100               	movlb	0	; () banked
 13501   006DD8  6FD5               	movwf	f_sync@res& (0+255),b
 13502   006DDA                     
 13503                           ; BSR set to: 0
 13504                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 13505   006DDA  EE20 F00E          	lfsr	2,14
 13506   006DDE  51D3               	movf	f_sync@fp& (0+255),w,b
 13507   006DE0  26D9               	addwf	fsr2l,f,c
 13508   006DE2  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13509   006DE4  22DA               	addwfc	fsr2h,f,c
 13510   006DE6  0EBF               	movlw	191
 13511   006DE8  16DF               	andwf	indf2,f,c
 13512   006DEA                     l16810:
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 13516   006DEA  51D5               	movf	f_sync@res& (0+255),w,b
 13517   006DEC                     l1391:
 13518   006DEC  0012               	return		;funcret
 13519   006DEE                     __end_of_f_sync:
 13520                           	callstack 0
 13521                           
 13522 ;; *************** function _validate *****************
 13523 ;; Defined at:
 13524 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  obj             2    2[BANK0 ] PTR struct .
 13527 ;;		 -> Fil(546), pb$fp(3), 
 13528 ;;  rfs             2    4[BANK0 ] PTR PTR struct .
 13529 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;  res             1   12[BANK0 ] enum E68
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      enum E68
 13534 ;; Registers used:
 13535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13541 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13542 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13544 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;Total ram usage:       11 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 7
 13548 ;; This function calls:
 13549 ;;		_disk_status
 13550 ;; This function is called by:
 13551 ;;		_f_write
 13552 ;;		_f_sync
 13553 ;;		_f_close
 13554 ;;		_f_read
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text39
 13559   00809E                     __ptext39:
 13560                           	callstack 0
 13561   00809E                     _validate:
 13562                           	callstack 21
 13563   00809E                     
 13564                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 13565   00809E  0E09               	movlw	9
 13566   0080A0  0100               	movlb	0	; () banked
 13567   0080A2  6F6C               	movwf	validate@res& (0+255),b
 13568   0080A4                     
 13569                           ; BSR set to: 0
 13570                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 13571   0080A4  5162               	movf	validate@obj& (0+255),w,b
 13572   0080A6  1163               	iorwf	(validate@obj+1)& (0+255),w,b
 13573   0080A8  B4D8               	btfsc	status,2,c
 13574   0080AA  EF59  F040         	goto	u19711
 13575   0080AE  EF5B  F040         	goto	u19710
 13576   0080B2                     u19711:
 13577   0080B2  EFBC  F040         	goto	l1267
 13578   0080B6                     u19710:
 13579   0080B6                     
 13580                           ; BSR set to: 0
 13581   0080B6  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13582   0080BC  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13583   0080C2  50DE               	movf	postinc2,w,c
 13584   0080C4  10DE               	iorwf	postinc2,w,c
 13585   0080C6  B4D8               	btfsc	status,2,c
 13586   0080C8  EF68  F040         	goto	u19721
 13587   0080CC  EF6A  F040         	goto	u19720
 13588   0080D0                     u19721:
 13589   0080D0  EFBC  F040         	goto	l1267
 13590   0080D4                     u19720:
 13591   0080D4                     
 13592                           ; BSR set to: 0
 13593   0080D4  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13594   0080DA  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13595   0080E0  006F FF78  F066    	movff	postinc2,??_validate
 13596   0080E6  006F FF74  F067    	movff	postdec2,??_validate+1
 13597   0080EC  0060  F19B  FFD9   	movff	??_validate,fsr2l
 13598   0080F2  0060  F19F  FFDA   	movff	??_validate+1,fsr2h
 13599   0080F8  50DF               	movf	indf2,w,c
 13600   0080FA  B4D8               	btfsc	status,2,c
 13601   0080FC  EF82  F040         	goto	u19731
 13602   008100  EF84  F040         	goto	u19730
 13603   008104                     u19731:
 13604   008104  EFBC  F040         	goto	l1267
 13605   008108                     u19730:
 13606   008108                     
 13607                           ; BSR set to: 0
 13608   008108  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13609   00810E  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13610   008114  EE10 F005          	lfsr	1,5
 13611   008118  50DE               	movf	postinc2,w,c
 13612   00811A  26E1               	addwf	fsr1l,f,c
 13613   00811C  50DD               	movf	postdec2,w,c
 13614   00811E  22E2               	addwfc	fsr1h,f,c
 13615   008120  EE20 F002          	lfsr	2,2
 13616   008124  5162               	movf	validate@obj& (0+255),w,b
 13617   008126  26D9               	addwf	fsr2l,f,c
 13618   008128  5163               	movf	(validate@obj+1)& (0+255),w,b
 13619   00812A  22DA               	addwfc	fsr2h,f,c
 13620   00812C  50E6               	movf	postinc1,w,c
 13621   00812E  18DE               	xorwf	postinc2,w,c
 13622   008130  E107               	bnz	u19741
 13623   008132  50E6               	movf	postinc1,w,c
 13624   008134  18DE               	xorwf	postinc2,w,c
 13625   008136  A4D8               	btfss	status,2,c
 13626   008138  EFA0  F040         	goto	u19741
 13627   00813C  EFA2  F040         	goto	u19740
 13628   008140                     u19741:
 13629   008140  EFBC  F040         	goto	l1267
 13630   008144                     u19740:
 13631   008144                     
 13632                           ; BSR set to: 0
 13633                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 13634   008144  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13635   00814A  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13636   008150  EE10 F001          	lfsr	1,1
 13637   008154  50DE               	movf	postinc2,w,c
 13638   008156  26E1               	addwf	fsr1l,f,c
 13639   008158  50DD               	movf	postdec2,w,c
 13640   00815A  22E2               	addwfc	fsr1h,f,c
 13641   00815C  50E7               	movf	indf1,w,c
 13642   00815E  EC15  F04C         	call	_disk_status
 13643   008162  0100               	movlb	0	; () banked
 13644   008164  6F66               	movwf	??_validate& (0+255),b
 13645   008166  B166               	btfsc	??_validate& (0+255),0,b
 13646   008168  EFB8  F040         	goto	u19751
 13647   00816C  EFBA  F040         	goto	u19750
 13648   008170                     u19751:
 13649   008170  EFBC  F040         	goto	l1267
 13650   008174                     u19750:
 13651   008174                     
 13652                           ; BSR set to: 0
 13653                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 13654   008174  0E00               	movlw	0
 13655   008176  6F6C               	movwf	validate@res& (0+255),b
 13656   008178                     l1267:
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 13660   008178  516C               	movf	validate@res& (0+255),w,b
 13661   00817A  B4D8               	btfsc	status,2,c
 13662   00817C  EFC2  F040         	goto	u19761
 13663   008180  EFC4  F040         	goto	u19760
 13664   008184                     u19761:
 13665   008184  EFCA  F040         	goto	l16246
 13666   008188                     u19760:
 13667   008188                     
 13668                           ; BSR set to: 0
 13669   008188  0E00               	movlw	0
 13670   00818A  6F6A               	movwf	_validate$3131& (0+255),b
 13671   00818C  0E00               	movlw	0
 13672   00818E  6F6B               	movwf	(_validate$3131+1)& (0+255),b
 13673   008190  EFD6  F040         	goto	l1272
 13674   008194                     l16246:
 13675                           
 13676                           ; BSR set to: 0
 13677   008194  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13678   00819A  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13679   0081A0  006F FF78  F06A    	movff	postinc2,_validate$3131
 13680   0081A6  006F FF74  F06B    	movff	postdec2,_validate$3131+1
 13681   0081AC                     l1272:
 13682                           
 13683                           ; BSR set to: 0
 13684   0081AC  0060  F193  FFD9   	movff	validate@rfs,fsr2l
 13685   0081B2  0060  F197  FFDA   	movff	validate@rfs+1,fsr2h
 13686   0081B8  0060  F1AB  FFDE   	movff	_validate$3131,postinc2
 13687   0081BE  0060  F1AF  FFDD   	movff	_validate$3131+1,postdec2
 13688   0081C4                     
 13689                           ; BSR set to: 0
 13690                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 13691   0081C4  516C               	movf	validate@res& (0+255),w,b
 13692   0081C6                     
 13693                           ; BSR set to: 0
 13694   0081C6  0012               	return		;funcret
 13695   0081C8                     __end_of_validate:
 13696                           	callstack 0
 13697                           
 13698 ;; *************** function _sync_fs *****************
 13699 ;; Defined at:
 13700 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  fs              2  104[BANK0 ] PTR struct .
 13703 ;;		 -> FatFs(563), NULL(0), 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;  res             1  114[BANK0 ] enum E68
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  1    wreg      enum E68
 13708 ;; Registers used:
 13709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;Total ram usage:       11 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 11
 13722 ;; This function calls:
 13723 ;;		_disk_ioctl
 13724 ;;		_disk_write
 13725 ;;		_mem_set
 13726 ;;		_st_dword
 13727 ;;		_st_word
 13728 ;;		_sync_window
 13729 ;; This function is called by:
 13730 ;;		_f_sync
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text40
 13735   00698A                     __ptext40:
 13736                           	callstack 0
 13737   00698A                     _sync_fs:
 13738                           	callstack 16
 13739   00698A                     
 13740                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 13741   00698A  C0C8  F0B5         	movff	sync_fs@fs,sync_window@fs
 13742   00698E  C0C9  F0B6         	movff	sync_fs@fs+1,sync_window@fs+1
 13743   006992  ECEE  F038         	call	_sync_window	;wreg free
 13744   006996  0100               	movlb	0	; () banked
 13745   006998  6FD2               	movwf	sync_fs@res& (0+255),b
 13746   00699A                     
 13747                           ; BSR set to: 0
 13748                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 13749   00699A  51D2               	movf	sync_fs@res& (0+255),w,b
 13750   00699C  A4D8               	btfss	status,2,c
 13751   00699E  EFD3  F034         	goto	u19111
 13752   0069A2  EFD5  F034         	goto	u19110
 13753   0069A6                     u19111:
 13754   0069A6  EFDF  F035         	goto	l912
 13755   0069AA                     u19110:
 13756   0069AA                     
 13757                           ; BSR set to: 0
 13758                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 13759   0069AA  0060  F323  FFD9   	movff	sync_fs@fs,fsr2l
 13760   0069B0  0060  F327  FFDA   	movff	sync_fs@fs+1,fsr2h
 13761   0069B6  0E03               	movlw	3
 13762   0069B8  18DE               	xorwf	postinc2,w,c
 13763   0069BA  A4D8               	btfss	status,2,c
 13764   0069BC  EFE2  F034         	goto	u19121
 13765   0069C0  EFE4  F034         	goto	u19120
 13766   0069C4                     u19121:
 13767   0069C4  EFC5  F035         	goto	l15914
 13768   0069C8                     u19120:
 13769   0069C8                     
 13770                           ; BSR set to: 0
 13771   0069C8  EE20 F004          	lfsr	2,4
 13772   0069CC  51C8               	movf	sync_fs@fs& (0+255),w,b
 13773   0069CE  26D9               	addwf	fsr2l,f,c
 13774   0069D0  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13775   0069D2  22DA               	addwfc	fsr2h,f,c
 13776   0069D4  04DE               	decf	postinc2,w,c
 13777   0069D6  A4D8               	btfss	status,2,c
 13778   0069D8  EFF0  F034         	goto	u19131
 13779   0069DC  EFF2  F034         	goto	u19130
 13780   0069E0                     u19131:
 13781   0069E0  EFC5  F035         	goto	l15914
 13782   0069E4                     u19130:
 13783   0069E4                     
 13784                           ; BSR set to: 0
 13785                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 13786   0069E4  0E33               	movlw	51
 13787   0069E6  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13788   0069E8  6F60               	movwf	mem_set@dst& (0+255),b
 13789   0069EA  0E00               	movlw	0
 13790   0069EC  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13791   0069EE  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 13792   0069F0  0E00               	movlw	0
 13793   0069F2  6F63               	movwf	(mem_set@val+1)& (0+255),b
 13794   0069F4  0E00               	movlw	0
 13795   0069F6  6F62               	movwf	mem_set@val& (0+255),b
 13796   0069F8  0E02               	movlw	2
 13797   0069FA  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 13798   0069FC  0E00               	movlw	0
 13799   0069FE  6F64               	movwf	mem_set@cnt& (0+255),b
 13800   006A00  EC5C  F050         	call	_mem_set	;wreg free
 13801                           
 13802                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 13803   006A04  0E31               	movlw	49
 13804   006A06  0100               	movlb	0	; () banked
 13805   006A08  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13806   006A0A  6F60               	movwf	st_word@ptr& (0+255),b
 13807   006A0C  0E02               	movlw	2
 13808   006A0E  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13809   006A10  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13810   006A12  0EAA               	movlw	170
 13811   006A14  6F63               	movwf	(st_word@val+1)& (0+255),b
 13812   006A16  0E55               	movlw	85
 13813   006A18  6F62               	movwf	st_word@val& (0+255),b
 13814   006A1A  ECCF  F050         	call	_st_word	;wreg free
 13815                           
 13816                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 13817   006A1E  0E33               	movlw	51
 13818   006A20  0100               	movlb	0	; () banked
 13819   006A22  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13820   006A24  6F60               	movwf	st_dword@ptr& (0+255),b
 13821   006A26  0E00               	movlw	0
 13822   006A28  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13823   006A2A  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13824   006A2C  0E52               	movlw	82
 13825   006A2E  6F62               	movwf	st_dword@val& (0+255),b
 13826   006A30  0E52               	movlw	82
 13827   006A32  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13828   006A34  0E61               	movlw	97
 13829   006A36  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13830   006A38  0E41               	movlw	65
 13831   006A3A  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13832   006A3C  EC5C  F04A         	call	_st_dword	;wreg free
 13833                           
 13834                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 13835   006A40  0E17               	movlw	23
 13836   006A42  0100               	movlb	0	; () banked
 13837   006A44  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13838   006A46  6F60               	movwf	st_dword@ptr& (0+255),b
 13839   006A48  0E02               	movlw	2
 13840   006A4A  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13841   006A4C  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13842   006A4E  0E72               	movlw	114
 13843   006A50  6F62               	movwf	st_dword@val& (0+255),b
 13844   006A52  0E72               	movlw	114
 13845   006A54  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13846   006A56  0E41               	movlw	65
 13847   006A58  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13848   006A5A  0E61               	movlw	97
 13849   006A5C  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13850   006A5E  EC5C  F04A         	call	_st_dword	;wreg free
 13851                           
 13852                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 13853   006A62  0E1B               	movlw	27
 13854   006A64  0100               	movlb	0	; () banked
 13855   006A66  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13856   006A68  6F60               	movwf	st_dword@ptr& (0+255),b
 13857   006A6A  0E02               	movlw	2
 13858   006A6C  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13859   006A6E  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13860   006A70  EE20 F00F          	lfsr	2,15
 13861   006A74  51C8               	movf	sync_fs@fs& (0+255),w,b
 13862   006A76  26D9               	addwf	fsr2l,f,c
 13863   006A78  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13864   006A7A  22DA               	addwfc	fsr2h,f,c
 13865   006A7C  006F FF78  F062    	movff	postinc2,st_dword@val
 13866   006A82  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13867   006A88  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13868   006A8E  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13869   006A94  EC5C  F04A         	call	_st_dword	;wreg free
 13870                           
 13871                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 13872   006A98  0E1F               	movlw	31
 13873   006A9A  0100               	movlb	0	; () banked
 13874   006A9C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13875   006A9E  6F60               	movwf	st_dword@ptr& (0+255),b
 13876   006AA0  0E02               	movlw	2
 13877   006AA2  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13878   006AA4  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13879   006AA6  EE20 F00B          	lfsr	2,11
 13880   006AAA  51C8               	movf	sync_fs@fs& (0+255),w,b
 13881   006AAC  26D9               	addwf	fsr2l,f,c
 13882   006AAE  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13883   006AB0  22DA               	addwfc	fsr2h,f,c
 13884   006AB2  006F FF78  F062    	movff	postinc2,st_dword@val
 13885   006AB8  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13886   006ABE  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13887   006AC4  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13888   006ACA  EC5C  F04A         	call	_st_dword	;wreg free
 13889   006ACE                     
 13890                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 13891   006ACE  0100               	movlb	0	; () banked
 13892   006AD0  EE20 F01F          	lfsr	2,31
 13893   006AD4  51C8               	movf	sync_fs@fs& (0+255),w,b
 13894   006AD6  26D9               	addwf	fsr2l,f,c
 13895   006AD8  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13896   006ADA  22DA               	addwfc	fsr2h,f,c
 13897   006ADC  006F FF78  F0CA    	movff	postinc2,??_sync_fs
 13898   006AE2  006F FF78  F0CB    	movff	postinc2,??_sync_fs+1
 13899   006AE8  006F FF78  F0CC    	movff	postinc2,??_sync_fs+2
 13900   006AEE  006F FF78  F0CD    	movff	postinc2,??_sync_fs+3
 13901   006AF4  0E01               	movlw	1
 13902   006AF6  25CA               	addwf	??_sync_fs& (0+255),w,b
 13903   006AF8  6FCE               	movwf	(??_sync_fs+4)& (0+255),b
 13904   006AFA  0E00               	movlw	0
 13905   006AFC  21CB               	addwfc	(??_sync_fs+1)& (0+255),w,b
 13906   006AFE  6FCF               	movwf	(??_sync_fs+5)& (0+255),b
 13907   006B00  0E00               	movlw	0
 13908   006B02  21CC               	addwfc	(??_sync_fs+2)& (0+255),w,b
 13909   006B04  6FD0               	movwf	(??_sync_fs+6)& (0+255),b
 13910   006B06  0E00               	movlw	0
 13911   006B08  21CD               	addwfc	(??_sync_fs+3)& (0+255),w,b
 13912   006B0A  6FD1               	movwf	(??_sync_fs+7)& (0+255),b
 13913   006B0C  EE20 F02F          	lfsr	2,47
 13914   006B10  51C8               	movf	sync_fs@fs& (0+255),w,b
 13915   006B12  26D9               	addwf	fsr2l,f,c
 13916   006B14  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13917   006B16  22DA               	addwfc	fsr2h,f,c
 13918   006B18  0060  F33B  FFDE   	movff	??_sync_fs+4,postinc2
 13919   006B1E  0060  F33F  FFDE   	movff	??_sync_fs+5,postinc2
 13920   006B24  0060  F343  FFDE   	movff	??_sync_fs+6,postinc2
 13921   006B2A  0060  F347  FFDE   	movff	??_sync_fs+7,postinc2
 13922   006B30                     
 13923                           ; BSR set to: 0
 13924                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 13925   006B30  0E33               	movlw	51
 13926   006B32  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13927   006B34  6FAB               	movwf	disk_write@buff& (0+255),b
 13928   006B36  0E00               	movlw	0
 13929   006B38  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13930   006B3A  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 13931   006B3C  EE20 F02F          	lfsr	2,47
 13932   006B40  51C8               	movf	sync_fs@fs& (0+255),w,b
 13933   006B42  26D9               	addwf	fsr2l,f,c
 13934   006B44  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13935   006B46  22DA               	addwfc	fsr2h,f,c
 13936   006B48  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 13937   006B4E  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 13938   006B54  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 13939   006B5A  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 13940   006B60  0E00               	movlw	0
 13941   006B62  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 13942   006B64  0E01               	movlw	1
 13943   006B66  6FB1               	movwf	disk_write@count& (0+255),b
 13944   006B68  EE20 F001          	lfsr	2,1
 13945   006B6C  51C8               	movf	sync_fs@fs& (0+255),w,b
 13946   006B6E  26D9               	addwf	fsr2l,f,c
 13947   006B70  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13948   006B72  22DA               	addwfc	fsr2h,f,c
 13949   006B74  50DF               	movf	indf2,w,c
 13950   006B76  ECF2  F04C         	call	_disk_write
 13951   006B7A                     
 13952                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 13953   006B7A  0100               	movlb	0	; () banked
 13954   006B7C  EE20 F004          	lfsr	2,4
 13955   006B80  51C8               	movf	sync_fs@fs& (0+255),w,b
 13956   006B82  26D9               	addwf	fsr2l,f,c
 13957   006B84  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13958   006B86  22DA               	addwfc	fsr2h,f,c
 13959   006B88  6ADF               	clrf	indf2,c
 13960   006B8A                     l15914:
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 13964   006B8A  0E00               	movlw	0
 13965   006B8C  6F60               	movwf	disk_ioctl@cmd& (0+255),b
 13966   006B8E  0E00               	movlw	0
 13967   006B90  6F61               	movwf	disk_ioctl@buff& (0+255),b
 13968   006B92  0E00               	movlw	0
 13969   006B94  6F62               	movwf	(disk_ioctl@buff+1)& (0+255),b
 13970   006B96  EE20 F001          	lfsr	2,1
 13971   006B9A  51C8               	movf	sync_fs@fs& (0+255),w,b
 13972   006B9C  26D9               	addwf	fsr2l,f,c
 13973   006B9E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13974   006BA0  22DA               	addwfc	fsr2h,f,c
 13975   006BA2  50DF               	movf	indf2,w,c
 13976   006BA4  EC89  F051         	call	_disk_ioctl
 13977   006BA8  0900               	iorlw	0
 13978   006BAA  B4D8               	btfsc	status,2,c
 13979   006BAC  EFDA  F035         	goto	u19141
 13980   006BB0  EFDC  F035         	goto	u19140
 13981   006BB4                     u19141:
 13982   006BB4  EFDF  F035         	goto	l912
 13983   006BB8                     u19140:
 13984   006BB8  0E01               	movlw	1
 13985   006BBA  0100               	movlb	0	; () banked
 13986   006BBC  6FD2               	movwf	sync_fs@res& (0+255),b
 13987   006BBE                     l912:
 13988                           
 13989                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 13990   006BBE  0100               	movlb	0	; () banked
 13991   006BC0  51D2               	movf	sync_fs@res& (0+255),w,b
 13992   006BC2                     
 13993                           ; BSR set to: 0
 13994   006BC2  0012               	return		;funcret
 13995   006BC4                     __end_of_sync_fs:
 13996                           	callstack 0
 13997                           
 13998 ;; *************** function _st_dword *****************
 13999 ;; Defined at:
 14000 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 14003 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 14004 ;;  val             4    2[BANK0 ] unsigned long 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		fsr2l, fsr2h, status,2, status,0
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14016 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;Total ram usage:        6 bytes
 14021 ;; Hardware stack levels used: 1
 14022 ;; Hardware stack levels required when called: 5
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_sync_fs
 14027 ;;		_put_fat
 14028 ;;		_f_open
 14029 ;;		_f_sync
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           	psect	text41
 14034   0094B8                     __ptext41:
 14035                           	callstack 0
 14036   0094B8                     _st_dword:
 14037                           	callstack 21
 14038   0094B8                     
 14039                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 14040   0094B8  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14041   0094BE  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14042   0094C4  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14043   0094CA  0100               	movlb	0	; () banked
 14044   0094CC  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14045   0094CE  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14046   0094D0                     
 14047                           ; BSR set to: 0
 14048   0094D0  C063  F062         	movff	st_dword@val+1,st_dword@val
 14049   0094D4  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14050   0094D8  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14051   0094DC  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14052   0094DE                     
 14053                           ; BSR set to: 0
 14054                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 14055   0094DE  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14056   0094E4  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14057   0094EA  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14058   0094F0                     
 14059                           ; BSR set to: 0
 14060   0094F0  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14061   0094F2  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14062   0094F4  C063  F062         	movff	st_dword@val+1,st_dword@val
 14063   0094F8  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14064   0094FC  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14065   009500  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14066   009502                     
 14067                           ; BSR set to: 0
 14068                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 14069   009502  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14070   009508  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14071   00950E  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14072   009514                     
 14073                           ; BSR set to: 0
 14074   009514  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14075   009516  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14076   009518                     
 14077                           ; BSR set to: 0
 14078   009518  C063  F062         	movff	st_dword@val+1,st_dword@val
 14079   00951C  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14080   009520  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14081   009524  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14082   009526                     
 14083                           ; BSR set to: 0
 14084                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 14085   009526  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14086   00952C  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14087   009532  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14088   009538  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14089   00953A  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14090   00953C                     
 14091                           ; BSR set to: 0
 14092   00953C  0012               	return		;funcret
 14093   00953E                     __end_of_st_dword:
 14094                           	callstack 0
 14095                           
 14096 ;; *************** function _mem_set *****************
 14097 ;; Defined at:
 14098 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  dst             2    0[BANK0 ] PTR void 
 14101 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 14102 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 14103 ;;		 -> NULL(0), 
 14104 ;;  val             2    2[BANK0 ] int 
 14105 ;;  cnt             2    4[BANK0 ] unsigned int 
 14106 ;; Auto vars:     Size  Location     Type
 14107 ;;  d               2    6[BANK0 ] PTR unsigned char 
 14108 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 14109 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 14110 ;;		 -> NULL(0), 
 14111 ;; Return value:  Size  Location     Type
 14112 ;;                  1    wreg      void 
 14113 ;; Registers used:
 14114 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14115 ;; Tracked objects:
 14116 ;;		On entry : 0/0
 14117 ;;		On exit  : 0/0
 14118 ;;		Unchanged: 0/0
 14119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14120 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;Total ram usage:        8 bytes
 14125 ;; Hardware stack levels used: 1
 14126 ;; Hardware stack levels required when called: 5
 14127 ;; This function calls:
 14128 ;;		Nothing
 14129 ;; This function is called by:
 14130 ;;		_sync_fs
 14131 ;;		_dir_clear
 14132 ;;		_dir_register
 14133 ;;		_create_name
 14134 ;;		_f_open
 14135 ;;		_putc_init
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text42
 14140   00A0B8                     __ptext42:
 14141                           	callstack 0
 14142   00A0B8                     _mem_set:
 14143                           	callstack 23
 14144   00A0B8                     
 14145                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 14146   00A0B8  C060  F066         	movff	mem_set@dst,mem_set@d
 14147   00A0BC  C061  F067         	movff	mem_set@dst+1,mem_set@d+1
 14148   00A0C0                     l15044:
 14149                           
 14150                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 14151   00A0C0  0060  F19B  FFD9   	movff	mem_set@d,fsr2l
 14152   00A0C6  0060  F19F  FFDA   	movff	mem_set@d+1,fsr2h
 14153   00A0CC  0060  F18B  FFDF   	movff	mem_set@val,indf2
 14154   00A0D2  0100               	movlb	0	; () banked
 14155   00A0D4  4B66               	infsnz	mem_set@d& (0+255),f,b
 14156   00A0D6  2B67               	incf	(mem_set@d+1)& (0+255),f,b
 14157   00A0D8                     
 14158                           ; BSR set to: 0
 14159                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 14160   00A0D8  0764               	decf	mem_set@cnt& (0+255),f,b
 14161   00A0DA  A0D8               	btfss	status,0,c
 14162   00A0DC  0765               	decf	(mem_set@cnt+1)& (0+255),f,b
 14163   00A0DE  5164               	movf	mem_set@cnt& (0+255),w,b
 14164   00A0E0  1165               	iorwf	(mem_set@cnt+1)& (0+255),w,b
 14165   00A0E2  A4D8               	btfss	status,2,c
 14166   00A0E4  EF76  F050         	goto	u17501
 14167   00A0E8  EF78  F050         	goto	u17500
 14168   00A0EC                     u17501:
 14169   00A0EC  EF60  F050         	goto	l15044
 14170   00A0F0                     u17500:
 14171   00A0F0                     
 14172                           ; BSR set to: 0
 14173   00A0F0  0012               	return		;funcret
 14174   00A0F2                     __end_of_mem_set:
 14175                           	callstack 0
 14176                           
 14177 ;; *************** function _disk_ioctl *****************
 14178 ;; Defined at:
 14179 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;  pdrv            1    wreg     unsigned char 
 14182 ;;  cmd             1    0[BANK0 ] unsigned char 
 14183 ;;  buff            2    1[BANK0 ] PTR void 
 14184 ;;		 -> NULL(0), 
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;  pdrv            1    3[BANK0 ] unsigned char 
 14187 ;;  res             1    0        enum E12
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      enum E12
 14190 ;; Registers used:
 14191 ;;		wreg, status,2, status,0
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14197 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14201 ;;Total ram usage:        4 bytes
 14202 ;; Hardware stack levels used: 1
 14203 ;; Hardware stack levels required when called: 5
 14204 ;; This function calls:
 14205 ;;		Nothing
 14206 ;; This function is called by:
 14207 ;;		_sync_fs
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text43
 14212   00A312                     __ptext43:
 14213                           	callstack 0
 14214   00A312                     _disk_ioctl:
 14215                           	callstack 21
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;incstack = 0
 14219                           ;disk_ioctl@pdrv stored from wreg
 14220   00A312  0100               	movlb	0	; () banked
 14221   00A314  6F63               	movwf	disk_ioctl@pdrv& (0+255),b
 14222   00A316                     
 14223                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 14224   00A316  EF90  F051         	goto	l15568
 14225   00A31A                     l824:
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 14229   00A31A  0E00               	movlw	0
 14230   00A31C  EF99  F051         	goto	l825
 14231   00A320                     l15568:
 14232   00A320  0100               	movlb	0	; () banked
 14233   00A322  5163               	movf	disk_ioctl@pdrv& (0+255),w,b
 14234                           
 14235                           ; Switch size 1, requested type "simple"
 14236                           ; Number of cases is 1, Range of values is 0 to 0
 14237                           ; switch strategies available:
 14238                           ; Name         Instructions Cycles
 14239                           ; simple_byte            4     3 (average)
 14240                           ;	Chosen strategy is simple_byte
 14241   00A324  0A00               	xorlw	0	; case 0
 14242   00A326  B4D8               	btfsc	status,2,c
 14243   00A328  EF8D  F051         	goto	l824
 14244   00A32C  EF98  F051         	goto	l15570
 14245   00A330                     l15570:
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 14249   00A330  0E04               	movlw	4
 14250   00A332                     l825:
 14251                           
 14252                           ; BSR set to: 0
 14253   00A332  0012               	return		;funcret
 14254   00A334                     __end_of_disk_ioctl:
 14255                           	callstack 0
 14256                           
 14257 ;; *************** function _st_clust *****************
 14258 ;; Defined at:
 14259 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;  fs              2    4[BANK0 ] PTR struct .
 14262 ;;		 -> FatFs(563), NULL(0), 
 14263 ;;  dir             2    6[BANK0 ] PTR unsigned char 
 14264 ;;		 -> FatFs(563), NULL(0), 
 14265 ;;  cl              4    8[BANK0 ] unsigned long 
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;		None
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      void 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14277 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14279 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14280 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;Total ram usage:        9 bytes
 14282 ;; Hardware stack levels used: 1
 14283 ;; Hardware stack levels required when called: 6
 14284 ;; This function calls:
 14285 ;;		_st_word
 14286 ;; This function is called by:
 14287 ;;		_f_open
 14288 ;;		_f_sync
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text44
 14293   009E04                     __ptext44:
 14294                           	callstack 0
 14295   009E04                     _st_clust:
 14296                           	callstack 22
 14297   009E04                     
 14298                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 14299   009E04  0E1A               	movlw	26
 14300   009E06  0100               	movlb	0	; () banked
 14301   009E08  2566               	addwf	st_clust@dir& (0+255),w,b
 14302   009E0A  6F60               	movwf	st_word@ptr& (0+255),b
 14303   009E0C  0E00               	movlw	0
 14304   009E0E  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 14305   009E10  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 14306   009E12  C068  F062         	movff	st_clust@cl,st_word@val
 14307   009E16  C069  F063         	movff	st_clust@cl+1,st_word@val+1
 14308   009E1A  ECCF  F050         	call	_st_word	;wreg free
 14309   009E1E                     
 14310                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 14311   009E1E  0060  F193  FFD9   	movff	st_clust@fs,fsr2l
 14312   009E24  0060  F197  FFDA   	movff	st_clust@fs+1,fsr2h
 14313   009E2A  0E03               	movlw	3
 14314   009E2C  18DE               	xorwf	postinc2,w,c
 14315   009E2E  A4D8               	btfss	status,2,c
 14316   009E30  EF1C  F04F         	goto	u19231
 14317   009E34  EF1E  F04F         	goto	u19230
 14318   009E38                     u19231:
 14319   009E38  EF2B  F04F         	goto	l1102
 14320   009E3C                     u19230:
 14321   009E3C                     
 14322                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 14323   009E3C  0E14               	movlw	20
 14324   009E3E  0100               	movlb	0	; () banked
 14325   009E40  2566               	addwf	st_clust@dir& (0+255),w,b
 14326   009E42  6F60               	movwf	st_word@ptr& (0+255),b
 14327   009E44  0E00               	movlw	0
 14328   009E46  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 14329   009E48  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 14330   009E4A  C06A  F062         	movff	st_clust@cl+2,st_word@val
 14331   009E4E  C06B  F063         	movff	st_clust@cl+3,st_word@val+1
 14332   009E52  ECCF  F050         	call	_st_word	;wreg free
 14333   009E56                     l1102:
 14334   009E56  0012               	return		;funcret
 14335   009E58                     __end_of_st_clust:
 14336                           	callstack 0
 14337                           
 14338 ;; *************** function _st_word *****************
 14339 ;; Defined at:
 14340 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 14343 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 14344 ;;  val             2    2[BANK0 ] unsigned short 
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  1    wreg      void 
 14349 ;; Registers used:
 14350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14356 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14360 ;;Total ram usage:        4 bytes
 14361 ;; Hardware stack levels used: 1
 14362 ;; Hardware stack levels required when called: 5
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_sync_fs
 14367 ;;		_put_fat
 14368 ;;		_st_clust
 14369 ;;		_f_sync
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373                           	psect	text45
 14374   00A19E                     __ptext45:
 14375                           	callstack 0
 14376   00A19E                     _st_word:
 14377                           	callstack 21
 14378   00A19E                     
 14379                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 14380   00A19E  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 14381   00A1A4  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 14382   00A1AA  0060  F18B  FFDF   	movff	st_word@val,indf2
 14383   00A1B0  0100               	movlb	0	; () banked
 14384   00A1B2  4B60               	infsnz	st_word@ptr& (0+255),f,b
 14385   00A1B4  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 14386   00A1B6                     
 14387                           ; BSR set to: 0
 14388   00A1B6  5163               	movf	(st_word@val+1)& (0+255),w,b
 14389   00A1B8  6F62               	movwf	st_word@val& (0+255),b
 14390   00A1BA  6B63               	clrf	(st_word@val+1)& (0+255),b
 14391   00A1BC                     
 14392                           ; BSR set to: 0
 14393                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 14394   00A1BC  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 14395   00A1C2  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 14396   00A1C8  0060  F18B  FFDF   	movff	st_word@val,indf2
 14397   00A1CE                     
 14398                           ; BSR set to: 0
 14399   00A1CE  4B60               	infsnz	st_word@ptr& (0+255),f,b
 14400   00A1D0  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 14401   00A1D2                     
 14402                           ; BSR set to: 0
 14403   00A1D2  0012               	return		;funcret
 14404   00A1D4                     __end_of_st_word:
 14405                           	callstack 0
 14406                           
 14407 ;; *************** function _BLUE_LED_TOGGLE *****************
 14408 ;; Defined at:
 14409 ;;		line 44 in file "./common.h"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      void 
 14416 ;; Registers used:
 14417 ;;		None
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used: 1
 14429 ;; Hardware stack levels required when called: 5
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_send_status_ok
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text46
 14438   00A46A                     __ptext46:
 14439                           	callstack 0
 14440   00A46A                     _BLUE_LED_TOGGLE:
 14441                           	callstack 24
 14442   00A46A                     
 14443                           ;./common.h: 45:     LATA2 ^= 1;
 14444   00A46A  74BA               	btg	16314,2,c	;volatile
 14445   00A46C  0012               	return		;funcret
 14446   00A46E                     __end_of_BLUE_LED_TOGGLE:
 14447                           	callstack 0
 14448                           
 14449 ;; *************** function _send_status_err *****************
 14450 ;; Defined at:
 14451 ;;		line 256 in file "main.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;		None
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  board_stat_m   11   24[BANK0 ] struct .
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  1    wreg      void 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14468 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14469 ;;Total ram usage:       11 bytes
 14470 ;; Hardware stack levels used: 1
 14471 ;; Hardware stack levels required when called: 9
 14472 ;; This function calls:
 14473 ;;		_RED_LED_TOGGLE
 14474 ;;		_build_board_stat_msg
 14475 ;;		_millis
 14476 ;;		_txb_enqueue
 14477 ;; This function is called by:
 14478 ;;		_main
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text47
 14483   009F84                     __ptext47:
 14484                           	callstack 0
 14485   009F84                     _send_status_err:
 14486                           	callstack 21
 14487   009F84                     
 14488                           ;main.c: 257:     can_msg_t board_stat_msg;;main.c: 258:     build_board_stat_msg(millis
      +                          (), E_MISSING_CRITICAL_BOARD, ((void*)0), 0, &board_stat_msg);
 14489   009F84  EC18  F051         	call	_millis	;wreg free
 14490   009F88  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
 14491   009F8C  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
 14492   009F90  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
 14493   009F94  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
 14494   009F98  0E0B               	movlw	11
 14495   009F9A  0100               	movlb	0	; () banked
 14496   009F9C  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
 14497   009F9E  0E00               	movlw	0
 14498   009FA0  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
 14499   009FA2  0E00               	movlw	0
 14500   009FA4  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
 14501   009FA6  0E00               	movlw	0
 14502   009FA8  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
 14503   009FAA  0E78               	movlw	low send_status_err@board_stat_msg
 14504   009FAC  6F70               	movwf	build_board_stat_msg@output& (0+255),b
 14505   009FAE  6B71               	clrf	(build_board_stat_msg@output+1)& (0+255),b
 14506   009FB0  EC6C  F041         	call	_build_board_stat_msg	;wreg free
 14507   009FB4                     
 14508                           ;main.c: 259:     txb_enqueue(&board_stat_msg);
 14509   009FB4  0E78               	movlw	low send_status_err@board_stat_msg
 14510   009FB6  0100               	movlb	0	; () banked
 14511   009FB8  6F76               	movwf	txb_enqueue@msg& (0+255),b
 14512   009FBA  6B77               	clrf	(txb_enqueue@msg+1)& (0+255),b
 14513   009FBC  EC79  F050         	call	_txb_enqueue	;wreg free
 14514   009FC0                     
 14515                           ;main.c: 261:     RED_LED_TOGGLE();
 14516   009FC0  EC37  F052         	call	_RED_LED_TOGGLE	;wreg free
 14517   009FC4  0012               	return		;funcret
 14518   009FC6                     __end_of_send_status_err:
 14519                           	callstack 0
 14520                           
 14521 ;; *************** function _txb_enqueue *****************
 14522 ;; Defined at:
 14523 ;;		line 23 in file "canlib/util/can_tx_buffer.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  msg             2   22[BANK0 ] PTR const struct .
 14526 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;		None
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      _Bool 
 14531 ;; Registers used:
 14532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14542 ;;Total ram usage:        2 bytes
 14543 ;; Hardware stack levels used: 1
 14544 ;; Hardware stack levels required when called: 8
 14545 ;; This function calls:
 14546 ;;		_srb_is_full
 14547 ;;		_srb_push
 14548 ;; This function is called by:
 14549 ;;		_send_status_ok
 14550 ;;		_send_status_err
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           	psect	text48
 14555   00A0F2                     __ptext48:
 14556                           	callstack 0
 14557   00A0F2                     _txb_enqueue:
 14558                           	callstack 21
 14559   00A0F2                     
 14560                           ;canlib/util/can_tx_buffer.c: 24:     if (srb_is_full(&buf)) {
 14561   00A0F2  0EE1               	movlw	low _buf@can_tx_buffer$F1072
 14562   00A0F4  0100               	movlb	0	; () banked
 14563   00A0F6  6F60               	movwf	srb_is_full@ctx& (0+255),b
 14564   00A0F8  0E01               	movlw	high _buf@can_tx_buffer$F1072
 14565   00A0FA  6F61               	movwf	(srb_is_full@ctx+1)& (0+255),b
 14566   00A0FC  EC43  F048         	call	_srb_is_full	;wreg free
 14567   00A100  0900               	iorlw	0
 14568   00A102  B4D8               	btfsc	status,2,c
 14569   00A104  EF86  F050         	goto	u20931
 14570   00A108  EF88  F050         	goto	u20930
 14571   00A10C                     u20931:
 14572   00A10C  EF8A  F050         	goto	l16994
 14573   00A110                     u20930:
 14574   00A110  EF95  F050         	goto	l187
 14575   00A114                     l16994:
 14576                           
 14577                           ;canlib/util/can_tx_buffer.c: 27:     srb_push(&buf, msg);
 14578   00A114  0EE1               	movlw	low _buf@can_tx_buffer$F1072
 14579   00A116  0100               	movlb	0	; () banked
 14580   00A118  6F6C               	movwf	srb_push@ctx& (0+255),b
 14581   00A11A  0E01               	movlw	high _buf@can_tx_buffer$F1072
 14582   00A11C  6F6D               	movwf	(srb_push@ctx+1)& (0+255),b
 14583   00A11E  C076  F06E         	movff	txb_enqueue@msg,srb_push@element
 14584   00A122  C077  F06F         	movff	txb_enqueue@msg+1,srb_push@element+1
 14585   00A126  ECEE  F044         	call	_srb_push	;wreg free
 14586   00A12A                     l187:
 14587   00A12A  0012               	return		;funcret
 14588   00A12C                     __end_of_txb_enqueue:
 14589                           	callstack 0
 14590                           
 14591 ;; *************** function _srb_push *****************
 14592 ;; Defined at:
 14593 ;;		line 26 in file "canlib/util/safe_ring_buffer.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  ctx             2   12[BANK0 ] PTR struct .
 14596 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14597 ;;  element         2   14[BANK0 ] PTR const void 
 14598 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 14599 ;; Auto vars:     Size  Location     Type
 14600 ;;  offset          2   20[BANK0 ] unsigned int 
 14601 ;; Return value:  Size  Location     Type
 14602 ;;                  1    wreg      _Bool 
 14603 ;; Registers used:
 14604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/0
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14614 ;;Total ram usage:       10 bytes
 14615 ;; Hardware stack levels used: 1
 14616 ;; Hardware stack levels required when called: 7
 14617 ;; This function calls:
 14618 ;;		_get_offset_bytes
 14619 ;;		_memcpy
 14620 ;;		_srb_is_full
 14621 ;; This function is called by:
 14622 ;;		_txb_enqueue
 14623 ;;		_rcvb_push_message
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           	psect	text49
 14628   0089DC                     __ptext49:
 14629                           	callstack 0
 14630   0089DC                     _srb_push:
 14631                           	callstack 21
 14632   0089DC                     
 14633                           ;canlib/util/safe_ring_buffer.c: 26: _Bool srb_push(srb_ctx_t *ctx,;canlib/util/safe_rin
      +                          g_buffer.c: 27:               const void *element);canlib/util/safe_ring_buffer.c: 28: {
      +                          ;canlib/util/safe_ring_buffer.c: 29:     if (srb_is_full(ctx)) {
 14634   0089DC  C06C  F060         	movff	srb_push@ctx,srb_is_full@ctx
 14635   0089E0  C06D  F061         	movff	srb_push@ctx+1,srb_is_full@ctx+1
 14636   0089E4  EC43  F048         	call	_srb_is_full	;wreg free
 14637   0089E8  0900               	iorlw	0
 14638   0089EA  B4D8               	btfsc	status,2,c
 14639   0089EC  EFFA  F044         	goto	u19821
 14640   0089F0  EFFC  F044         	goto	u19820
 14641   0089F4                     u19821:
 14642   0089F4  EFFF  F044         	goto	l16322
 14643   0089F8                     u19820:
 14644   0089F8                     
 14645                           ;canlib/util/safe_ring_buffer.c: 30:         return 0;
 14646   0089F8  0E00               	movlw	0
 14647   0089FA  EF5F  F045         	goto	l207
 14648   0089FE                     l16322:
 14649                           
 14650                           ;canlib/util/safe_ring_buffer.c: 32:     size_t offset = get_offset_bytes(ctx, ctx->wr_i
      +                          dx);
 14651   0089FE  C06C  F066         	movff	srb_push@ctx,get_offset_bytes@ctx
 14652   008A02  C06D  F067         	movff	srb_push@ctx+1,get_offset_bytes@ctx+1
 14653   008A06  0100               	movlb	0	; () banked
 14654   008A08  EE20 F008          	lfsr	2,8
 14655   008A0C  516C               	movf	srb_push@ctx& (0+255),w,b
 14656   008A0E  26D9               	addwf	fsr2l,f,c
 14657   008A10  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14658   008A12  22DA               	addwfc	fsr2h,f,c
 14659   008A14  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
 14660   008A1A  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
 14661   008A20  EC21  F04E         	call	_get_offset_bytes	;wreg free
 14662   008A24  C066  F074         	movff	?_get_offset_bytes,srb_push@offset
 14663   008A28  C067  F075         	movff	?_get_offset_bytes+1,srb_push@offset+1
 14664   008A2C                     
 14665                           ;canlib/util/safe_ring_buffer.c: 33:     memcpy(((uint8_t *) ctx->memory_pool) + offset,
      +                           element, ctx->element_size);
 14666   008A2C  0060  F1B3  FFD9   	movff	srb_push@ctx,fsr2l
 14667   008A32  0060  F1B7  FFDA   	movff	srb_push@ctx+1,fsr2h
 14668   008A38  006F FF78  F070    	movff	postinc2,??_srb_push
 14669   008A3E  006F FF74  F071    	movff	postdec2,??_srb_push+1
 14670   008A44  0100               	movlb	0	; () banked
 14671   008A46  5174               	movf	srb_push@offset& (0+255),w,b
 14672   008A48  2570               	addwf	??_srb_push& (0+255),w,b
 14673   008A4A  6F60               	movwf	memcpy@d1& (0+255),b
 14674   008A4C  5175               	movf	(srb_push@offset+1)& (0+255),w,b
 14675   008A4E  2171               	addwfc	(??_srb_push+1)& (0+255),w,b
 14676   008A50  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14677   008A52  C06E  F062         	movff	srb_push@element,memcpy@s1
 14678   008A56  C06F  F063         	movff	srb_push@element+1,memcpy@s1+1
 14679   008A5A  EE20 F002          	lfsr	2,2
 14680   008A5E  516C               	movf	srb_push@ctx& (0+255),w,b
 14681   008A60  26D9               	addwf	fsr2l,f,c
 14682   008A62  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14683   008A64  22DA               	addwfc	fsr2h,f,c
 14684   008A66  006F FF78  F064    	movff	postinc2,memcpy@n
 14685   008A6C  006F FF74  F065    	movff	postdec2,memcpy@n+1
 14686   008A72  EC50  F04E         	call	_memcpy	;wreg free
 14687   008A76                     
 14688                           ;canlib/util/safe_ring_buffer.c: 34:     if ( ++(ctx->wr_idx) >= ctx->max_elements) {
 14689   008A76  0100               	movlb	0	; () banked
 14690   008A78  EE20 F004          	lfsr	2,4
 14691   008A7C  516C               	movf	srb_push@ctx& (0+255),w,b
 14692   008A7E  26D9               	addwf	fsr2l,f,c
 14693   008A80  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14694   008A82  22DA               	addwfc	fsr2h,f,c
 14695   008A84  EE10 F008          	lfsr	1,8
 14696   008A88  516C               	movf	srb_push@ctx& (0+255),w,b
 14697   008A8A  26E1               	addwf	fsr1l,f,c
 14698   008A8C  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14699   008A8E  22E2               	addwfc	fsr1h,f,c
 14700   008A90  2AE6               	incf	postinc1,f,c
 14701   008A92  0E00               	movlw	0
 14702   008A94  22E5               	addwfc	postdec1,f,c
 14703   008A96  50DE               	movf	postinc2,w,c
 14704   008A98  5CE6               	subwf	postinc1,w,c
 14705   008A9A  50DE               	movf	postinc2,w,c
 14706   008A9C  58E6               	subwfb	postinc1,w,c
 14707   008A9E  A0D8               	btfss	status,0,c
 14708   008AA0  EF54  F045         	goto	u19831
 14709   008AA4  EF56  F045         	goto	u19830
 14710   008AA8                     u19831:
 14711   008AA8  EF5E  F045         	goto	l16330
 14712   008AAC                     u19830:
 14713   008AAC                     
 14714                           ; BSR set to: 0
 14715                           ;canlib/util/safe_ring_buffer.c: 35:         ctx->wr_idx = 0;
 14716   008AAC  EE20 F008          	lfsr	2,8
 14717   008AB0  516C               	movf	srb_push@ctx& (0+255),w,b
 14718   008AB2  26D9               	addwf	fsr2l,f,c
 14719   008AB4  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14720   008AB6  22DA               	addwfc	fsr2h,f,c
 14721   008AB8  6ADE               	clrf	postinc2,c
 14722   008ABA  6ADD               	clrf	postdec2,c
 14723   008ABC                     l16330:
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;canlib/util/safe_ring_buffer.c: 37:     return 1;
 14727   008ABC  0E01               	movlw	1
 14728   008ABE                     l207:
 14729   008ABE  0012               	return		;funcret
 14730   008AC0                     __end_of_srb_push:
 14731                           	callstack 0
 14732                           
 14733 ;; *************** function _srb_is_full *****************
 14734 ;; Defined at:
 14735 ;;		line 40 in file "canlib/util/safe_ring_buffer.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;  ctx             2    0[BANK0 ] PTR const struct .
 14738 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      _Bool 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14753 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14754 ;;Total ram usage:        6 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 5
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		_txb_enqueue
 14761 ;;		_srb_push
 14762 ;;		_rcvb_is_full
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text50
 14767   009086                     __ptext50:
 14768                           	callstack 0
 14769   009086                     _srb_is_full:
 14770                           	callstack 22
 14771   009086                     
 14772                           ;canlib/util/safe_ring_buffer.c: 40: _Bool srb_is_full(const srb_ctx_t *ctx);canlib/util
      +                          /safe_ring_buffer.c: 41: {;canlib/util/safe_ring_buffer.c: 42:     if ((ctx->wr_idx + 1 
      +                          == ctx->rd_idx) || (ctx->wr_idx + 1 == ctx->max_elements && ctx->rd_idx == 0)) {
 14773   009086  0100               	movlb	0	; () banked
 14774   009088  EE20 F006          	lfsr	2,6
 14775   00908C  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14776   00908E  26D9               	addwf	fsr2l,f,c
 14777   009090  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14778   009092  22DA               	addwfc	fsr2h,f,c
 14779   009094  EE10 F008          	lfsr	1,8
 14780   009098  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14781   00909A  26E1               	addwf	fsr1l,f,c
 14782   00909C  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14783   00909E  22E2               	addwfc	fsr1h,f,c
 14784   0090A0  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
 14785   0090A6  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
 14786   0090AC  0E01               	movlw	1
 14787   0090AE  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
 14788   0090B0  0E00               	movlw	0
 14789   0090B2  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
 14790   0090B4  50DE               	movf	postinc2,w,c
 14791   0090B6  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
 14792   0090B8  E109               	bnz	u19030
 14793   0090BA  50DE               	movf	postinc2,w,c
 14794   0090BC  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
 14795   0090BE  B4D8               	btfsc	status,2,c
 14796   0090C0  EF64  F048         	goto	u19031
 14797   0090C4  EF66  F048         	goto	u19030
 14798   0090C8                     u19031:
 14799   0090C8  EF97  F048         	goto	l15852
 14800   0090CC                     u19030:
 14801   0090CC                     
 14802                           ; BSR set to: 0
 14803   0090CC  EE20 F004          	lfsr	2,4
 14804   0090D0  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14805   0090D2  26D9               	addwf	fsr2l,f,c
 14806   0090D4  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14807   0090D6  22DA               	addwfc	fsr2h,f,c
 14808   0090D8  EE10 F008          	lfsr	1,8
 14809   0090DC  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14810   0090DE  26E1               	addwf	fsr1l,f,c
 14811   0090E0  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14812   0090E2  22E2               	addwfc	fsr1h,f,c
 14813   0090E4  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
 14814   0090EA  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
 14815   0090F0  0E01               	movlw	1
 14816   0090F2  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
 14817   0090F4  0E00               	movlw	0
 14818   0090F6  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
 14819   0090F8  50DE               	movf	postinc2,w,c
 14820   0090FA  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
 14821   0090FC  E107               	bnz	u19041
 14822   0090FE  50DE               	movf	postinc2,w,c
 14823   009100  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
 14824   009102  A4D8               	btfss	status,2,c
 14825   009104  EF86  F048         	goto	u19041
 14826   009108  EF88  F048         	goto	u19040
 14827   00910C                     u19041:
 14828   00910C  EF9A  F048         	goto	l15858
 14829   009110                     u19040:
 14830   009110                     
 14831                           ; BSR set to: 0
 14832   009110  EE20 F006          	lfsr	2,6
 14833   009114  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14834   009116  26D9               	addwf	fsr2l,f,c
 14835   009118  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14836   00911A  22DA               	addwfc	fsr2h,f,c
 14837   00911C  50DE               	movf	postinc2,w,c
 14838   00911E  10DE               	iorwf	postinc2,w,c
 14839   009120  A4D8               	btfss	status,2,c
 14840   009122  EF95  F048         	goto	u19051
 14841   009126  EF97  F048         	goto	u19050
 14842   00912A                     u19051:
 14843   00912A  EF9A  F048         	goto	l15858
 14844   00912E                     u19050:
 14845   00912E                     l15852:
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;canlib/util/safe_ring_buffer.c: 43:         return 1;
 14849   00912E  0E01               	movlw	1
 14850   009130  EF9B  F048         	goto	l214
 14851   009134                     l15858:
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;canlib/util/safe_ring_buffer.c: 45:         return 0;
 14855   009134  0E00               	movlw	0
 14856   009136                     l214:
 14857                           
 14858                           ; BSR set to: 0
 14859   009136  0012               	return		;funcret
 14860   009138                     __end_of_srb_is_full:
 14861                           	callstack 0
 14862                           
 14863 ;; *************** function _get_offset_bytes *****************
 14864 ;; Defined at:
 14865 ;;		line 5 in file "canlib/util/safe_ring_buffer.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;  ctx             2    6[BANK0 ] PTR const struct .
 14868 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14869 ;;  index           2    8[BANK0 ] unsigned int 
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;		None
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  2    6[BANK0 ] unsigned int 
 14874 ;; Registers used:
 14875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14885 ;;Total ram usage:        6 bytes
 14886 ;; Hardware stack levels used: 1
 14887 ;; Hardware stack levels required when called: 6
 14888 ;; This function calls:
 14889 ;;		___wmul
 14890 ;; This function is called by:
 14891 ;;		_srb_push
 14892 ;;		_srb_pop
 14893 ;;		_srb_peek
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text51
 14898   009C42                     __ptext51:
 14899                           	callstack 0
 14900   009C42                     _get_offset_bytes:
 14901                           	callstack 22
 14902   009C42                     
 14903                           ;canlib/util/safe_ring_buffer.c: 5: static size_t get_offset_bytes(const srb_ctx_t *ctx,
      +                          ;canlib/util/safe_ring_buffer.c: 6:                                size_t index);canlib/
      +                          util/safe_ring_buffer.c: 7: {;canlib/util/safe_ring_buffer.c: 8:     if (index >= ctx->m
      +                          ax_elements) {
 14904   009C42  0100               	movlb	0	; () banked
 14905   009C44  EE20 F004          	lfsr	2,4
 14906   009C48  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
 14907   009C4A  26D9               	addwf	fsr2l,f,c
 14908   009C4C  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
 14909   009C4E  22DA               	addwfc	fsr2h,f,c
 14910   009C50  50DE               	movf	postinc2,w,c
 14911   009C52  5D68               	subwf	get_offset_bytes@index& (0+255),w,b
 14912   009C54  50DE               	movf	postinc2,w,c
 14913   009C56  5969               	subwfb	(get_offset_bytes@index+1)& (0+255),w,b
 14914   009C58  A0D8               	btfss	status,0,c
 14915   009C5A  EF31  F04E         	goto	u19061
 14916   009C5E  EF33  F04E         	goto	u19060
 14917   009C62                     u19061:
 14918   009C62  EF39  F04E         	goto	l15868
 14919   009C66                     u19060:
 14920   009C66                     
 14921                           ; BSR set to: 0
 14922                           ;canlib/util/safe_ring_buffer.c: 9:         return 0;
 14923   009C66  0E00               	movlw	0
 14924   009C68  6F67               	movwf	(?_get_offset_bytes+1)& (0+255),b
 14925   009C6A  0E00               	movlw	0
 14926   009C6C  6F66               	movwf	?_get_offset_bytes& (0+255),b
 14927   009C6E  EF4F  F04E         	goto	l200
 14928   009C72                     l15868:
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;canlib/util/safe_ring_buffer.c: 11:     return index * (ctx->element_size);
 14932   009C72  EE20 F002          	lfsr	2,2
 14933   009C76  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
 14934   009C78  26D9               	addwf	fsr2l,f,c
 14935   009C7A  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
 14936   009C7C  22DA               	addwfc	fsr2h,f,c
 14937   009C7E  006F FF78  F060    	movff	postinc2,___wmul@multiplier
 14938   009C84  006F FF74  F061    	movff	postdec2,___wmul@multiplier+1
 14939   009C8A  C068  F062         	movff	get_offset_bytes@index,___wmul@multiplicand
 14940   009C8E  C069  F063         	movff	get_offset_bytes@index+1,___wmul@multiplicand+1
 14941   009C92  EC02  F051         	call	___wmul	;wreg free
 14942   009C96  C060  F066         	movff	?___wmul,?_get_offset_bytes
 14943   009C9A  C061  F067         	movff	?___wmul+1,?_get_offset_bytes+1
 14944   009C9E                     l200:
 14945   009C9E  0012               	return		;funcret
 14946   009CA0                     __end_of_get_offset_bytes:
 14947                           	callstack 0
 14948                           
 14949 ;; *************** function ___wmul *****************
 14950 ;; Defined at:
 14951 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14954 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  product         2    4[BANK0 ] unsigned int 
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  2    0[BANK0 ] unsigned int 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0, prodl, prodh
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14966 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14969 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14970 ;;Total ram usage:        6 bytes
 14971 ;; Hardware stack levels used: 1
 14972 ;; Hardware stack levels required when called: 5
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_get_offset_bytes
 14977 ;;		_f_printf
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           	psect	text52
 14982   00A204                     __ptext52:
 14983                           	callstack 0
 14984   00A204                     ___wmul:
 14985                           	callstack 22
 14986   00A204  0100               	movlb	0	; () banked
 14987   00A206  5160               	movf	___wmul@multiplier& (0+255),w,b
 14988   00A208  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14989   00A20A  006F FFCC  F064    	movff	prodl,___wmul@product
 14990   00A210  006F FFD0  F065    	movff	prodh,___wmul@product+1
 14991   00A216  5160               	movf	___wmul@multiplier& (0+255),w,b
 14992   00A218  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14993   00A21A  50F3               	movf	243,w,c
 14994   00A21C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14995   00A21E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14996   00A220  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14997   00A222  50F3               	movf	243,w,c
 14998   00A224  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14999   00A226                     
 15000                           ; BSR set to: 0
 15001   00A226  C064  F060         	movff	___wmul@product,?___wmul
 15002   00A22A  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15003   00A22E                     
 15004                           ; BSR set to: 0
 15005   00A22E  0012               	return		;funcret
 15006   00A230                     __end_of___wmul:
 15007                           	callstack 0
 15008                           
 15009 ;; *************** function _millis *****************
 15010 ;; Defined at:
 15011 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;		None
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;  res             4    4[BANK0 ] unsigned long 
 15016 ;; Return value:  Size  Location     Type
 15017 ;;                  4    0[BANK0 ] unsigned long 
 15018 ;; Registers used:
 15019 ;;		None
 15020 ;; Tracked objects:
 15021 ;;		On entry : 0/0
 15022 ;;		On exit  : 0/0
 15023 ;;		Unchanged: 0/0
 15024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;Total ram usage:        8 bytes
 15030 ;; Hardware stack levels used: 1
 15031 ;; Hardware stack levels required when called: 5
 15032 ;; This function calls:
 15033 ;;		Nothing
 15034 ;; This function is called by:
 15035 ;;		_main
 15036 ;;		_send_status_ok
 15037 ;;		_send_status_err
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           	psect	text53
 15042   00A230                     __ptext53:
 15043                           	callstack 0
 15044   00A230                     _millis:
 15045                           	callstack 24
 15046   00A230                     
 15047                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     INTCON0bits.GIE = 0;
 15048   00A230  9ED2               	bcf	210,7,c	;volatile
 15049                           
 15050                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 28:     uint32_t res = millis_counter;
 15051   00A232  C03E  F064         	movff	_millis_counter,millis@res	;volatile
 15052   00A236  C03F  F065         	movff	_millis_counter+1,millis@res+1	;volatile
 15053   00A23A  C040  F066         	movff	_millis_counter+2,millis@res+2	;volatile
 15054   00A23E  C041  F067         	movff	_millis_counter+3,millis@res+3	;volatile
 15055                           
 15056                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 29:     INTCON0bits.GIE = 1;
 15057   00A242  8ED2               	bsf	210,7,c	;volatile
 15058                           
 15059                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 30:     return res;
 15060   00A244  C064  F060         	movff	millis@res,?_millis
 15061   00A248  C065  F061         	movff	millis@res+1,?_millis+1
 15062   00A24C  C066  F062         	movff	millis@res+2,?_millis+2
 15063   00A250  C067  F063         	movff	millis@res+3,?_millis+3
 15064   00A254  0012               	return		;funcret
 15065   00A256                     __end_of_millis:
 15066                           	callstack 0
 15067                           
 15068 ;; *************** function _build_board_stat_msg *****************
 15069 ;; Defined at:
 15070 ;;		line 189 in file "canlib/can_common.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  timestamp       4    8[BANK0 ] unsigned long 
 15073 ;;  error_code      1   12[BANK0 ] enum E60
 15074 ;;  error_data      2   13[BANK0 ] PTR const unsigned char 
 15075 ;;		 -> NULL(0), 
 15076 ;;  error_data_l    1   15[BANK0 ] unsigned char 
 15077 ;;  output          2   16[BANK0 ] PTR struct .
 15078 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  i               2   21[BANK0 ] int 
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      _Bool 
 15083 ;; Registers used:
 15084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15090 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15092 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15093 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15094 ;;Total ram usage:       15 bytes
 15095 ;; Hardware stack levels used: 1
 15096 ;; Hardware stack levels required when called: 6
 15097 ;; This function calls:
 15098 ;;		_write_timestamp_3bytes
 15099 ;; This function is called by:
 15100 ;;		_send_status_ok
 15101 ;;		_send_status_err
 15102 ;; This function uses a non-reentrant model
 15103 ;;
 15104                           
 15105                           	psect	text54
 15106   0082D8                     __ptext54:
 15107                           	callstack 0
 15108   0082D8                     _build_board_stat_msg:
 15109                           	callstack 23
 15110   0082D8                     
 15111                           ;canlib/can_common.c: 189: _Bool build_board_stat_msg(uint32_t timestamp,;canlib/can_com
      +                          mon.c: 190:                           enum BOARD_STATUS error_code,;canlib/can_common.c:
      +                           191:                           const uint8_t *error_data,;canlib/can_common.c: 192:    
      +                                                 uint8_t error_data_len,;canlib/can_common.c: 193:                
      +                                     can_msg_t *output);canlib/can_common.c: 194: {;canlib/can_common.c: 195:     
      +                          if (error_data_len > 0 && !error_data) { return 0; }
 15112   0082D8  0100               	movlb	0	; () banked
 15113   0082DA  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15114   0082DC  B4D8               	btfsc	status,2,c
 15115   0082DE  EF73  F041         	goto	u20941
 15116   0082E2  EF75  F041         	goto	u20940
 15117   0082E6                     u20941:
 15118   0082E6  EF80  F041         	goto	l17006
 15119   0082EA                     u20940:
 15120   0082EA                     
 15121                           ; BSR set to: 0
 15122   0082EA  516D               	movf	build_board_stat_msg@error_data& (0+255),w,b
 15123   0082EC  116E               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
 15124   0082EE  A4D8               	btfss	status,2,c
 15125   0082F0  EF7C  F041         	goto	u20951
 15126   0082F4  EF7E  F041         	goto	u20950
 15127   0082F8                     u20951:
 15128   0082F8  EF80  F041         	goto	l17006
 15129   0082FC                     u20950:
 15130   0082FC  EFEF  F041         	goto	l292
 15131   008300                     l17006:
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;canlib/can_common.c: 196:     if (!output) { return 0; }
 15135   008300  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15136   008302  1171               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
 15137   008304  A4D8               	btfss	status,2,c
 15138   008306  EF87  F041         	goto	u20961
 15139   00830A  EF89  F041         	goto	u20960
 15140   00830E                     u20961:
 15141   00830E  EF8B  F041         	goto	l17010
 15142   008312                     u20960:
 15143   008312  EFEF  F041         	goto	l292
 15144   008316                     l17010:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;canlib/can_common.c: 197:     if (error_data_len > 4) { return 0; }
 15148   008316  0E04               	movlw	4
 15149   008318  656F               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
 15150   00831A  EF91  F041         	goto	u20971
 15151   00831E  EF93  F041         	goto	u20970
 15152   008322                     u20971:
 15153   008322  EF95  F041         	goto	l17014
 15154   008326                     u20970:
 15155   008326  EFEF  F041         	goto	l292
 15156   00832A                     l17014:
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;canlib/can_common.c: 199:     output->sid = 0x520 | 0x0C;
 15160   00832A  0060  F1C3  FFD9   	movff	build_board_stat_msg@output,fsr2l
 15161   008330  0060  F1C7  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
 15162   008336  0E2C               	movlw	44
 15163   008338  6EDE               	movwf	postinc2,c
 15164   00833A  0E05               	movlw	5
 15165   00833C  6EDD               	movwf	postdec2,c
 15166   00833E                     
 15167                           ; BSR set to: 0
 15168                           ;canlib/can_common.c: 200:     write_timestamp_3bytes(timestamp, output);
 15169   00833E  C068  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
 15170   008342  C069  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
 15171   008346  C06A  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
 15172   00834A  C06B  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
 15173   00834E  C070  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
 15174   008352  C071  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
 15175   008356  EC96  F050         	call	_write_timestamp_3bytes	;wreg free
 15176   00835A                     
 15177                           ;canlib/can_common.c: 202:     output->data[3] = (uint8_t) error_code;
 15178   00835A  0100               	movlb	0	; () banked
 15179   00835C  EE20 F006          	lfsr	2,6
 15180   008360  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15181   008362  26D9               	addwf	fsr2l,f,c
 15182   008364  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 15183   008366  22DA               	addwfc	fsr2h,f,c
 15184   008368  0060  F1B3  FFDF   	movff	build_board_stat_msg@error_code,indf2
 15185   00836E                     
 15186                           ; BSR set to: 0
 15187                           ;canlib/can_common.c: 203:     for (int i = 0; i < error_data_len; ++i) {
 15188   00836E  0E00               	movlw	0
 15189   008370  6F76               	movwf	(build_board_stat_msg@i+1)& (0+255),b
 15190   008372  0E00               	movlw	0
 15191   008374  6F75               	movwf	build_board_stat_msg@i& (0+255),b
 15192   008376  EFD4  F041         	goto	l17026
 15193   00837A                     l17022:
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;canlib/can_common.c: 205:         output->data[4 + i] = error_data[i];
 15197   00837A  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 15198   00837C  256D               	addwf	build_board_stat_msg@error_data& (0+255),w,b
 15199   00837E  6ED9               	movwf	fsr2l,c
 15200   008380  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15201   008382  216E               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
 15202   008384  6EDA               	movwf	fsr2h,c
 15203   008386  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 15204   008388  2570               	addwf	build_board_stat_msg@output& (0+255),w,b
 15205   00838A  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 15206   00838C  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15207   00838E  2171               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
 15208   008390  6F73               	movwf	(??_build_board_stat_msg+1)& (0+255),b
 15209   008392  0E07               	movlw	7
 15210   008394  2572               	addwf	??_build_board_stat_msg& (0+255),w,b
 15211   008396  6EE1               	movwf	fsr1l,c
 15212   008398  0E00               	movlw	0
 15213   00839A  2173               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
 15214   00839C  6EE2               	movwf	fsr1h,c
 15215   00839E  006F FF7F FFE7     	movff	indf2,indf1
 15216   0083A4                     
 15217                           ; BSR set to: 0
 15218                           ;canlib/can_common.c: 206:     }
 15219   0083A4  4B75               	infsnz	build_board_stat_msg@i& (0+255),f,b
 15220   0083A6  2B76               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
 15221   0083A8                     l17026:
 15222                           
 15223                           ; BSR set to: 0
 15224   0083A8  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15225   0083AA  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 15226   0083AC  6B73               	clrf	(??_build_board_stat_msg+1)& (0+255),b
 15227   0083AE  5172               	movf	??_build_board_stat_msg& (0+255),w,b
 15228   0083B0  5D75               	subwf	build_board_stat_msg@i& (0+255),w,b
 15229   0083B2  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15230   0083B4  0A80               	xorlw	128
 15231   0083B6  6F74               	movwf	(??_build_board_stat_msg+2)& (0+255),b
 15232   0083B8  5173               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
 15233   0083BA  0A80               	xorlw	128
 15234   0083BC  5974               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
 15235   0083BE  A0D8               	btfss	status,0,c
 15236   0083C0  EFE4  F041         	goto	u20981
 15237   0083C4  EFE6  F041         	goto	u20980
 15238   0083C8                     u20981:
 15239   0083C8  EFBD  F041         	goto	l17022
 15240   0083CC                     u20980:
 15241   0083CC                     
 15242                           ; BSR set to: 0
 15243                           ;canlib/can_common.c: 209:     output->data_len = 4 + error_data_len;
 15244   0083CC  EE20 F002          	lfsr	2,2
 15245   0083D0  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15246   0083D2  26D9               	addwf	fsr2l,f,c
 15247   0083D4  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 15248   0083D6  22DA               	addwfc	fsr2h,f,c
 15249   0083D8  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15250   0083DA  0F04               	addlw	4
 15251   0083DC  6EDF               	movwf	indf2,c
 15252   0083DE                     l292:
 15253                           
 15254                           ; BSR set to: 0
 15255   0083DE  0012               	return		;funcret
 15256   0083E0                     __end_of_build_board_stat_msg:
 15257                           	callstack 0
 15258                           
 15259 ;; *************** function _write_timestamp_3bytes *****************
 15260 ;; Defined at:
 15261 ;;		line 20 in file "canlib/can_common.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  timestamp       4    0[BANK0 ] unsigned long 
 15264 ;;  output          2    4[BANK0 ] PTR struct .
 15265 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;		None
 15268 ;; Return value:  Size  Location     Type
 15269 ;;                  1    wreg      void 
 15270 ;; Registers used:
 15271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15277 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15281 ;;Total ram usage:        6 bytes
 15282 ;; Hardware stack levels used: 1
 15283 ;; Hardware stack levels required when called: 5
 15284 ;; This function calls:
 15285 ;;		Nothing
 15286 ;; This function is called by:
 15287 ;;		_build_board_stat_msg
 15288 ;;		_build_general_cmd_msg
 15289 ;;		_build_debug_msg
 15290 ;;		_build_reset_msg
 15291 ;;		_build_actuator_cmd_msg
 15292 ;;		_build_actuator_stat_msg
 15293 ;;		_build_actuator_cmd_analog
 15294 ;;		_build_arm_cmd_msg
 15295 ;;		_build_arm_stat_msg
 15296 ;;		_build_state_est_data_msg
 15297 ;;		_build_temp_data_msg
 15298 ;;		_build_altitude_data_msg
 15299 ;;		_build_gps_time_msg
 15300 ;;		_build_gps_lat_msg
 15301 ;;		_build_gps_lon_msg
 15302 ;;		_build_gps_alt_msg
 15303 ;;		_build_gps_info_msg
 15304 ;;		_build_state_est_calibration_msg
 15305 ;;		_build_fill_msg
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text55
 15310   00A12C                     __ptext55:
 15311                           	callstack 0
 15312   00A12C                     _write_timestamp_3bytes:
 15313                           	callstack 23
 15314   00A12C                     
 15315                           ;canlib/can_common.c: 20: static void write_timestamp_3bytes(uint32_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 21: {;canlib/can_common.c: 22:     output->data[0] = (t
      +                          imestamp >> 16) & 0xff;
 15316   00A12C  0100               	movlb	0	; () banked
 15317   00A12E  EE20 F003          	lfsr	2,3
 15318   00A132  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15319   00A134  26D9               	addwf	fsr2l,f,c
 15320   00A136  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15321   00A138  22DA               	addwfc	fsr2h,f,c
 15322   00A13A  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
 15323                           
 15324                           ;canlib/can_common.c: 23:     output->data[1] = (timestamp >> 8) & 0xff;
 15325   00A140  EE20 F004          	lfsr	2,4
 15326   00A144  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15327   00A146  26D9               	addwf	fsr2l,f,c
 15328   00A148  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15329   00A14A  22DA               	addwfc	fsr2h,f,c
 15330   00A14C  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
 15331                           
 15332                           ;canlib/can_common.c: 24:     output->data[2] = (timestamp >> 0) & 0xff;
 15333   00A152  EE20 F005          	lfsr	2,5
 15334   00A156  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15335   00A158  26D9               	addwf	fsr2l,f,c
 15336   00A15A  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15337   00A15C  22DA               	addwfc	fsr2h,f,c
 15338   00A15E  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
 15339   00A164                     
 15340                           ; BSR set to: 0
 15341   00A164  0012               	return		;funcret
 15342   00A166                     __end_of_write_timestamp_3bytes:
 15343                           	callstack 0
 15344                           
 15345 ;; *************** function _RED_LED_TOGGLE *****************
 15346 ;; Defined at:
 15347 ;;		line 68 in file "./common.h"
 15348 ;; Parameters:    Size  Location     Type
 15349 ;;		None
 15350 ;; Auto vars:     Size  Location     Type
 15351 ;;		None
 15352 ;; Return value:  Size  Location     Type
 15353 ;;                  1    wreg      void 
 15354 ;; Registers used:
 15355 ;;		None
 15356 ;; Tracked objects:
 15357 ;;		On entry : 0/0
 15358 ;;		On exit  : 0/0
 15359 ;;		Unchanged: 0/0
 15360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;Total ram usage:        0 bytes
 15366 ;; Hardware stack levels used: 1
 15367 ;; Hardware stack levels required when called: 5
 15368 ;; This function calls:
 15369 ;;		Nothing
 15370 ;; This function is called by:
 15371 ;;		_send_status_err
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text56
 15376   00A46E                     __ptext56:
 15377                           	callstack 0
 15378   00A46E                     _RED_LED_TOGGLE:
 15379                           	callstack 24
 15380   00A46E                     
 15381                           ;./common.h: 69:     LATA4 ^= 1;
 15382   00A46E  78BA               	btg	16314,4,c	;volatile
 15383   00A470  0012               	return		;funcret
 15384   00A472                     __end_of_RED_LED_TOGGLE:
 15385                           	callstack 0
 15386                           
 15387 ;; *************** function _i2c_init *****************
 15388 ;; Defined at:
 15389 ;;		line 9 in file "rocketlib/pic18f26k83/i2c.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  clkdiv          1    wreg     unsigned char 
 15392 ;; Auto vars:     Size  Location     Type
 15393 ;;  clkdiv          1    0[BANK0 ] unsigned char 
 15394 ;; Return value:  Size  Location     Type
 15395 ;;                  1    wreg      void 
 15396 ;; Registers used:
 15397 ;;		wreg, status,2, status,0
 15398 ;; Tracked objects:
 15399 ;;		On entry : 0/0
 15400 ;;		On exit  : 0/0
 15401 ;;		Unchanged: 0/0
 15402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15407 ;;Total ram usage:        1 bytes
 15408 ;; Hardware stack levels used: 1
 15409 ;; Hardware stack levels required when called: 5
 15410 ;; This function calls:
 15411 ;;		Nothing
 15412 ;; This function is called by:
 15413 ;;		_main
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417                           	psect	text57
 15418   00A1D4                     __ptext57:
 15419                           	callstack 0
 15420   00A1D4                     _i2c_init:
 15421                           	callstack 25
 15422                           
 15423                           ;incstack = 0
 15424                           ;i2c_init@clkdiv stored from wreg
 15425   00A1D4  0100               	movlb	0	; () banked
 15426   00A1D6  6F60               	movwf	i2c_init@clkdiv& (0+255),b
 15427   00A1D8                     
 15428                           ;rocketlib/pic18f26k83/i2c.c: 12:     I2C1CON0 = 0x84;
 15429   00A1D8  0E84               	movlw	132
 15430   00A1DA  013D               	movlb	61	; () banked
 15431   00A1DC  6F73               	movwf	115,b	;volatile
 15432                           
 15433                           ;rocketlib/pic18f26k83/i2c.c: 15:     I2C1CON1 = 0x80;
 15434   00A1DE  0E80               	movlw	128
 15435   00A1E0  6F74               	movwf	116,b	;volatile
 15436                           
 15437                           ;rocketlib/pic18f26k83/i2c.c: 18:     I2C1CON2 = 0x00;
 15438   00A1E2  0E00               	movlw	0
 15439   00A1E4  6F75               	movwf	117,b	;volatile
 15440   00A1E6                     
 15441                           ; BSR set to: 61
 15442                           ;rocketlib/pic18f26k83/i2c.c: 20:     CLKRCON = 0b10010000 | clkdiv;
 15443   00A1E6  0100               	movlb	0	; () banked
 15444   00A1E8  5160               	movf	i2c_init@clkdiv& (0+255),w,b
 15445   00A1EA  0990               	iorlw	144
 15446   00A1EC  013C               	movlb	60	; () banked
 15447   00A1EE  6FE5               	movwf	229,b	;volatile
 15448   00A1F0                     
 15449                           ; BSR set to: 60
 15450                           ;rocketlib/pic18f26k83/i2c.c: 21:     CLKRCLK = 0b00000011;
 15451   00A1F0  0E03               	movlw	3
 15452   00A1F2  6FE6               	movwf	230,b	;volatile
 15453   00A1F4                     
 15454                           ; BSR set to: 60
 15455                           ;rocketlib/pic18f26k83/i2c.c: 23:     I2C1CLK = 0x04;
 15456   00A1F4  0E04               	movlw	4
 15457   00A1F6  013D               	movlb	61	; () banked
 15458   00A1F8  6F7B               	movwf	123,b	;volatile
 15459   00A1FA                     
 15460                           ; BSR set to: 61
 15461                           ;rocketlib/pic18f26k83/i2c.c: 24:     I2C1PIR = 0;
 15462   00A1FA  0E00               	movlw	0
 15463   00A1FC  6F79               	movwf	121,b	;volatile
 15464   00A1FE                     
 15465                           ; BSR set to: 61
 15466                           ;rocketlib/pic18f26k83/i2c.c: 25:     I2C1ERR = 0;
 15467   00A1FE  0E00               	movlw	0
 15468   00A200  6F76               	movwf	118,b	;volatile
 15469   00A202                     
 15470                           ; BSR set to: 61
 15471   00A202  0012               	return		;funcret
 15472   00A204                     __end_of_i2c_init:
 15473                           	callstack 0
 15474                           
 15475 ;; *************** function _fxls_read_accel_data *****************
 15476 ;; Defined at:
 15477 ;;		line 111 in file "fxls8974cf.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  x               2   74[BANK0 ] PTR short 
 15480 ;;		 -> main@x(2), 
 15481 ;;  y               2   76[BANK0 ] PTR short 
 15482 ;;		 -> main@y(2), 
 15483 ;;  z               2   78[BANK0 ] PTR short 
 15484 ;;		 -> main@z(2), 
 15485 ;; Auto vars:     Size  Location     Type
 15486 ;;  z_msb           1   88[BANK0 ] unsigned char 
 15487 ;;  z_lsb           1   87[BANK0 ] unsigned char 
 15488 ;;  y_msb           1   86[BANK0 ] unsigned char 
 15489 ;;  y_lsb           1   85[BANK0 ] unsigned char 
 15490 ;;  x_msb           1   84[BANK0 ] unsigned char 
 15491 ;;  x_lsb           1   83[BANK0 ] unsigned char 
 15492 ;;  status          1   82[BANK0 ] unsigned char 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1    wreg      void 
 15495 ;; Registers used:
 15496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15502 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15503 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15505 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15506 ;;Total ram usage:       15 bytes
 15507 ;; Hardware stack levels used: 1
 15508 ;; Hardware stack levels required when called: 7
 15509 ;; This function calls:
 15510 ;;		___fldiv
 15511 ;;		___flmul
 15512 ;;		___fltol
 15513 ;;		___xxtofl
 15514 ;;		_i2c_read_reg8
 15515 ;; This function is called by:
 15516 ;;		_main
 15517 ;; This function uses a non-reentrant model
 15518 ;;
 15519                           
 15520                           	psect	text58
 15521   005F2A                     __ptext58:
 15522                           	callstack 0
 15523   005F2A                     _fxls_read_accel_data:
 15524                           	callstack 23
 15525   005F2A                     
 15526                           ;fxls8974cf.c: 112:     uint8_t x_lsb, x_msb, y_lsb, y_msb, z_lsb, z_msb;;fxls8974cf.c: 
      +                          122:     i2c_read_reg8(0x18, 0x04, &x_lsb);
 15527   005F2A  0E04               	movlw	4
 15528   005F2C  0100               	movlb	0	; () banked
 15529   005F2E  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15530   005F30  0EB3               	movlw	low fxls_read_accel_data@x_lsb
 15531   005F32  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15532   005F34  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15533   005F36  0E18               	movlw	24
 15534   005F38  EC5A  F04D         	call	_i2c_read_reg8
 15535                           
 15536                           ;fxls8974cf.c: 123:     i2c_read_reg8(0x18, 0x05, &x_msb);
 15537   005F3C  0E05               	movlw	5
 15538   005F3E  0100               	movlb	0	; () banked
 15539   005F40  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15540   005F42  0EB4               	movlw	low fxls_read_accel_data@x_msb
 15541   005F44  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15542   005F46  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15543   005F48  0E18               	movlw	24
 15544   005F4A  EC5A  F04D         	call	_i2c_read_reg8
 15545                           
 15546                           ;fxls8974cf.c: 124:     i2c_read_reg8(0x18, 0x06, &y_lsb);
 15547   005F4E  0E06               	movlw	6
 15548   005F50  0100               	movlb	0	; () banked
 15549   005F52  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15550   005F54  0EB5               	movlw	low fxls_read_accel_data@y_lsb
 15551   005F56  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15552   005F58  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15553   005F5A  0E18               	movlw	24
 15554   005F5C  EC5A  F04D         	call	_i2c_read_reg8
 15555                           
 15556                           ;fxls8974cf.c: 125:     i2c_read_reg8(0x18, 0x07, &y_msb);
 15557   005F60  0E07               	movlw	7
 15558   005F62  0100               	movlb	0	; () banked
 15559   005F64  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15560   005F66  0EB6               	movlw	low fxls_read_accel_data@y_msb
 15561   005F68  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15562   005F6A  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15563   005F6C  0E18               	movlw	24
 15564   005F6E  EC5A  F04D         	call	_i2c_read_reg8
 15565                           
 15566                           ;fxls8974cf.c: 126:     i2c_read_reg8(0x18, 0x08, &z_lsb);
 15567   005F72  0E08               	movlw	8
 15568   005F74  0100               	movlb	0	; () banked
 15569   005F76  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15570   005F78  0EB7               	movlw	low fxls_read_accel_data@z_lsb
 15571   005F7A  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15572   005F7C  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15573   005F7E  0E18               	movlw	24
 15574   005F80  EC5A  F04D         	call	_i2c_read_reg8
 15575                           
 15576                           ;fxls8974cf.c: 127:     i2c_read_reg8(0x18, 0x09, &z_msb);
 15577   005F84  0E09               	movlw	9
 15578   005F86  0100               	movlb	0	; () banked
 15579   005F88  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15580   005F8A  0EB8               	movlw	low fxls_read_accel_data@z_msb
 15581   005F8C  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15582   005F8E  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15583   005F90  0E18               	movlw	24
 15584   005F92  EC5A  F04D         	call	_i2c_read_reg8
 15585                           
 15586                           ;fxls8974cf.c: 129:     uint8_t status;;fxls8974cf.c: 130:     i2c_read_reg8(0x18, 0x00,
      +                           &status);
 15587   005F96  0E00               	movlw	0
 15588   005F98  0100               	movlb	0	; () banked
 15589   005F9A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15590   005F9C  0EB2               	movlw	low fxls_read_accel_data@status
 15591   005F9E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15592   005FA0  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15593   005FA2  0E18               	movlw	24
 15594   005FA4  EC5A  F04D         	call	_i2c_read_reg8
 15595   005FA8                     
 15596                           ;fxls8974cf.c: 133:     *x = (((int16_t)x_msb << 8) | x_lsb);
 15597   005FA8  0100               	movlb	0	; () banked
 15598   005FAA  51B3               	movf	fxls_read_accel_data@x_lsb& (0+255),w,b
 15599   005FAC  C0B4  F0B0         	movff	fxls_read_accel_data@x_msb,??_fxls_read_accel_data
 15600   005FB0  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15601   005FB2  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15602   005FB6  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15603   005FB8  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15604   005FBA  0E00               	movlw	0
 15605   005FBC  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15606   005FBE  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15607   005FC4  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15608   005FCA  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15609   005FD0  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15610   005FD6                     
 15611                           ; BSR set to: 0
 15612                           ;fxls8974cf.c: 134:     *y = (((int16_t)y_msb << 8) | y_lsb);
 15613   005FD6  51B5               	movf	fxls_read_accel_data@y_lsb& (0+255),w,b
 15614   005FD8  C0B6  F0B0         	movff	fxls_read_accel_data@y_msb,??_fxls_read_accel_data
 15615   005FDC  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15616   005FDE  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15617   005FE2  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15618   005FE4  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15619   005FE6  0E00               	movlw	0
 15620   005FE8  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15621   005FEA  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15622   005FF0  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15623   005FF6  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15624   005FFC  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15625   006002                     
 15626                           ; BSR set to: 0
 15627                           ;fxls8974cf.c: 135:     *z = (((int16_t)z_msb << 8) | z_lsb);
 15628   006002  51B7               	movf	fxls_read_accel_data@z_lsb& (0+255),w,b
 15629   006004  C0B8  F0B0         	movff	fxls_read_accel_data@z_msb,??_fxls_read_accel_data
 15630   006008  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15631   00600A  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15632   00600E  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15633   006010  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15634   006012  0E00               	movlw	0
 15635   006014  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15636   006016  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15637   00601C  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15638   006022  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15639   006028  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15640   00602E                     
 15641                           ; BSR set to: 0
 15642                           ;fxls8974cf.c: 138:     *x = (*x) * 0.98 / 1000.0;
 15643   00602E  0E00               	movlw	0
 15644   006030  6F8B               	movwf	___fldiv@a& (0+255),b
 15645   006032  0E00               	movlw	0
 15646   006034  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15647   006036  0E7A               	movlw	122
 15648   006038  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15649   00603A  0E44               	movlw	68
 15650   00603C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15651   00603E  0E48               	movlw	72
 15652   006040  6F72               	movwf	___flmul@a& (0+255),b
 15653   006042  0EE1               	movlw	225
 15654   006044  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15655   006046  0E7A               	movlw	122
 15656   006048  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15657   00604A  0E3F               	movlw	63
 15658   00604C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15659   00604E  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15660   006054  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15661   00605A  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15662   006060  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15663   006066  0E00               	movlw	0
 15664   006068  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15665   00606A  0EFF               	movlw	-1
 15666   00606C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15667   00606E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15668   006070  0E01               	movlw	1
 15669   006072  ECD3  F039         	call	___xxtofl
 15670   006076  C060  F06E         	movff	?___xxtofl,___flmul@b
 15671   00607A  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15672   00607E  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15673   006082  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15674   006086  ECBC  F025         	call	___flmul	;wreg free
 15675   00608A  C06E  F087         	movff	?___flmul,___fldiv@b
 15676   00608E  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15677   006092  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15678   006096  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15679   00609A  ECC7  F02D         	call	___fldiv	;wreg free
 15680   00609E  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15681   0060A2  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15682   0060A6  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15683   0060AA  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15684   0060AE  ECF0  F041         	call	___fltol	;wreg free
 15685   0060B2  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15686   0060B8  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15687   0060BE  0100               	movlb	0	; () banked
 15688   0060C0  0060  F283  FFDE   	movff	?___fltol,postinc2
 15689   0060C6  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15690   0060CC                     
 15691                           ; BSR set to: 0
 15692                           ;fxls8974cf.c: 139:     *y = (*y) * 0.98 / 1000.0;
 15693   0060CC  0E00               	movlw	0
 15694   0060CE  6F8B               	movwf	___fldiv@a& (0+255),b
 15695   0060D0  0E00               	movlw	0
 15696   0060D2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15697   0060D4  0E7A               	movlw	122
 15698   0060D6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15699   0060D8  0E44               	movlw	68
 15700   0060DA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15701   0060DC  0E48               	movlw	72
 15702   0060DE  6F72               	movwf	___flmul@a& (0+255),b
 15703   0060E0  0EE1               	movlw	225
 15704   0060E2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15705   0060E4  0E7A               	movlw	122
 15706   0060E6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15707   0060E8  0E3F               	movlw	63
 15708   0060EA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15709   0060EC  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15710   0060F2  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15711   0060F8  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15712   0060FE  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15713   006104  0E00               	movlw	0
 15714   006106  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15715   006108  0EFF               	movlw	-1
 15716   00610A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15717   00610C  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15718   00610E  0E01               	movlw	1
 15719   006110  ECD3  F039         	call	___xxtofl
 15720   006114  C060  F06E         	movff	?___xxtofl,___flmul@b
 15721   006118  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15722   00611C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15723   006120  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15724   006124  ECBC  F025         	call	___flmul	;wreg free
 15725   006128  C06E  F087         	movff	?___flmul,___fldiv@b
 15726   00612C  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15727   006130  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15728   006134  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15729   006138  ECC7  F02D         	call	___fldiv	;wreg free
 15730   00613C  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15731   006140  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15732   006144  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15733   006148  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15734   00614C  ECF0  F041         	call	___fltol	;wreg free
 15735   006150  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15736   006156  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15737   00615C  0100               	movlb	0	; () banked
 15738   00615E  0060  F283  FFDE   	movff	?___fltol,postinc2
 15739   006164  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15740   00616A                     
 15741                           ; BSR set to: 0
 15742                           ;fxls8974cf.c: 140:     *z = (*z) * 0.98 / 1000.0;
 15743   00616A  0E00               	movlw	0
 15744   00616C  6F8B               	movwf	___fldiv@a& (0+255),b
 15745   00616E  0E00               	movlw	0
 15746   006170  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15747   006172  0E7A               	movlw	122
 15748   006174  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15749   006176  0E44               	movlw	68
 15750   006178  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15751   00617A  0E48               	movlw	72
 15752   00617C  6F72               	movwf	___flmul@a& (0+255),b
 15753   00617E  0EE1               	movlw	225
 15754   006180  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15755   006182  0E7A               	movlw	122
 15756   006184  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15757   006186  0E3F               	movlw	63
 15758   006188  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15759   00618A  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15760   006190  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15761   006196  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15762   00619C  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15763   0061A2  0E00               	movlw	0
 15764   0061A4  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15765   0061A6  0EFF               	movlw	-1
 15766   0061A8  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15767   0061AA  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15768   0061AC  0E01               	movlw	1
 15769   0061AE  ECD3  F039         	call	___xxtofl
 15770   0061B2  C060  F06E         	movff	?___xxtofl,___flmul@b
 15771   0061B6  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15772   0061BA  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15773   0061BE  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15774   0061C2  ECBC  F025         	call	___flmul	;wreg free
 15775   0061C6  C06E  F087         	movff	?___flmul,___fldiv@b
 15776   0061CA  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15777   0061CE  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15778   0061D2  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15779   0061D6  ECC7  F02D         	call	___fldiv	;wreg free
 15780   0061DA  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15781   0061DE  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15782   0061E2  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15783   0061E6  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15784   0061EA  ECF0  F041         	call	___fltol	;wreg free
 15785   0061EE  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15786   0061F4  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15787   0061FA  0100               	movlb	0	; () banked
 15788   0061FC  0060  F283  FFDE   	movff	?___fltol,postinc2
 15789   006202  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15790   006208                     
 15791                           ; BSR set to: 0
 15792   006208  0012               	return		;funcret
 15793   00620A                     __end_of_fxls_read_accel_data:
 15794                           	callstack 0
 15795                           
 15796 ;; *************** function ___xxtofl *****************
 15797 ;; Defined at:
 15798 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;  sign            1    wreg     unsigned char 
 15801 ;;  val             4    0[BANK0 ] long 
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  sign            1    8[BANK0 ] unsigned char 
 15804 ;;  arg             4   10[BANK0 ] unsigned long 
 15805 ;;  exp             1    9[BANK0 ] unsigned char 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  4    0[BANK0 ] unsigned char 
 15808 ;; Registers used:
 15809 ;;		wreg, status,2, status,0
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15818 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15819 ;;Total ram usage:       14 bytes
 15820 ;; Hardware stack levels used: 1
 15821 ;; Hardware stack levels required when called: 5
 15822 ;; This function calls:
 15823 ;;		Nothing
 15824 ;; This function is called by:
 15825 ;;		_fxls_read_accel_data
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text59
 15830   0073A6                     __ptext59:
 15831                           	callstack 0
 15832   0073A6                     ___xxtofl:
 15833                           	callstack 24
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;incstack = 0
 15837                           ;___xxtofl@sign stored from wreg
 15838   0073A6  0100               	movlb	0	; () banked
 15839   0073A8  6F68               	movwf	___xxtofl@sign& (0+255),b
 15840   0073AA  0100               	movlb	0	; () banked
 15841   0073AC  5168               	movf	___xxtofl@sign& (0+255),w,b
 15842   0073AE  B4D8               	btfsc	status,2,c
 15843   0073B0  EFDC  F039         	goto	u21731
 15844   0073B4  EFDE  F039         	goto	u21730
 15845   0073B8                     u21731:
 15846   0073B8  EF00  F03A         	goto	l2923
 15847   0073BC                     u21730:
 15848   0073BC                     
 15849                           ; BSR set to: 0
 15850   0073BC  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15851   0073BE  EFE5  F039         	goto	u21740
 15852   0073C2  EFE3  F039         	goto	u21741
 15853   0073C6                     u21741:
 15854   0073C6  EF00  F03A         	goto	l2923
 15855   0073CA                     u21740:
 15856   0073CA                     
 15857                           ; BSR set to: 0
 15858   0073CA  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15859   0073CE  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15860   0073D2  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15861   0073D6  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15862   0073DA  1F64               	comf	??___xxtofl& (0+255),f,b
 15863   0073DC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15864   0073DE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15865   0073E0  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15866   0073E2  2B64               	incf	??___xxtofl& (0+255),f,b
 15867   0073E4  0E00               	movlw	0
 15868   0073E6  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15869   0073E8  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15870   0073EA  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15871   0073EC  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15872   0073F0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15873   0073F4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15874   0073F8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15875   0073FC  EF08  F03A         	goto	l17490
 15876   007400                     l2923:
 15877                           
 15878                           ; BSR set to: 0
 15879   007400  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15880   007404  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15881   007408  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15882   00740C  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15883   007410                     l17490:
 15884                           
 15885                           ; BSR set to: 0
 15886   007410  5160               	movf	___xxtofl@val& (0+255),w,b
 15887   007412  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15888   007414  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15889   007416  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15890   007418  A4D8               	btfss	status,2,c
 15891   00741A  EF11  F03A         	goto	u21751
 15892   00741E  EF13  F03A         	goto	u21750
 15893   007422                     u21751:
 15894   007422  EF1D  F03A         	goto	l17496
 15895   007426                     u21750:
 15896   007426                     
 15897                           ; BSR set to: 0
 15898   007426  0E00               	movlw	0
 15899   007428  6F60               	movwf	?___xxtofl& (0+255),b
 15900   00742A  0E00               	movlw	0
 15901   00742C  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15902   00742E  0E00               	movlw	0
 15903   007430  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15904   007432  0E00               	movlw	0
 15905   007434  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15906   007436  EFAE  F03A         	goto	l2926
 15907   00743A                     l17496:
 15908                           
 15909                           ; BSR set to: 0
 15910   00743A  0E96               	movlw	150
 15911   00743C  6F69               	movwf	___xxtofl@exp& (0+255),b
 15912   00743E  EF27  F03A         	goto	l17500
 15913   007442                     l17498:
 15914                           
 15915                           ; BSR set to: 0
 15916   007442  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15917   007444  90D8               	bcf	status,0,c
 15918   007446  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15919   007448  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15920   00744A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15921   00744C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15922   00744E                     l17500:
 15923                           
 15924                           ; BSR set to: 0
 15925   00744E  0E00               	movlw	0
 15926   007450  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15927   007452  6F64               	movwf	??___xxtofl& (0+255),b
 15928   007454  0E00               	movlw	0
 15929   007456  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15930   007458  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15931   00745A  0E00               	movlw	0
 15932   00745C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15933   00745E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15934   007460  0EFE               	movlw	254
 15935   007462  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15936   007464  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15937   007466  5164               	movf	??___xxtofl& (0+255),w,b
 15938   007468  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15939   00746A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15940   00746C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15941   00746E  A4D8               	btfss	status,2,c
 15942   007470  EF3C  F03A         	goto	u21761
 15943   007474  EF3E  F03A         	goto	u21760
 15944   007478                     u21761:
 15945   007478  EF21  F03A         	goto	l17498
 15946   00747C                     u21760:
 15947   00747C  EF4C  F03A         	goto	l2930
 15948   007480                     l17502:
 15949                           
 15950                           ; BSR set to: 0
 15951   007480  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15952   007482                     
 15953                           ; BSR set to: 0
 15954   007482  0E01               	movlw	1
 15955   007484  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15956   007486  0E00               	movlw	0
 15957   007488  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15958   00748A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15959   00748C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15960   00748E                     
 15961                           ; BSR set to: 0
 15962   00748E  90D8               	bcf	status,0,c
 15963   007490  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15964   007492  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15965   007494  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15966   007496  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15967   007498                     l2930:
 15968                           
 15969                           ; BSR set to: 0
 15970   007498  0E00               	movlw	0
 15971   00749A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15972   00749C  6F64               	movwf	??___xxtofl& (0+255),b
 15973   00749E  0E00               	movlw	0
 15974   0074A0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15975   0074A2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15976   0074A4  0E00               	movlw	0
 15977   0074A6  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15978   0074A8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15979   0074AA  0EFF               	movlw	255
 15980   0074AC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15981   0074AE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15982   0074B0  5164               	movf	??___xxtofl& (0+255),w,b
 15983   0074B2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15984   0074B4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15985   0074B6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15986   0074B8  A4D8               	btfss	status,2,c
 15987   0074BA  EF61  F03A         	goto	u21771
 15988   0074BE  EF63  F03A         	goto	u21770
 15989   0074C2                     u21771:
 15990   0074C2  EF40  F03A         	goto	l17502
 15991   0074C6                     u21770:
 15992   0074C6  EF6B  F03A         	goto	l17510
 15993   0074CA                     l17508:
 15994                           
 15995                           ; BSR set to: 0
 15996   0074CA  0769               	decf	___xxtofl@exp& (0+255),f,b
 15997   0074CC  90D8               	bcf	status,0,c
 15998   0074CE  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15999   0074D0  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16000   0074D2  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16001   0074D4  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16002   0074D6                     l17510:
 16003                           
 16004                           ; BSR set to: 0
 16005   0074D6  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16006   0074D8  EF70  F03A         	goto	u21781
 16007   0074DC  EF72  F03A         	goto	u21780
 16008   0074E0                     u21781:
 16009   0074E0  EF7A  F03A         	goto	l2937
 16010   0074E4                     u21780:
 16011   0074E4                     
 16012                           ; BSR set to: 0
 16013   0074E4  0E02               	movlw	2
 16014   0074E6  6169               	cpfslt	___xxtofl@exp& (0+255),b
 16015   0074E8  EF78  F03A         	goto	u21791
 16016   0074EC  EF7A  F03A         	goto	u21790
 16017   0074F0                     u21791:
 16018   0074F0  EF65  F03A         	goto	l17508
 16019   0074F4                     u21790:
 16020   0074F4                     l2937:
 16021                           
 16022                           ; BSR set to: 0
 16023   0074F4  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 16024   0074F6  EF7F  F03A         	goto	u21801
 16025   0074FA  EF81  F03A         	goto	u21800
 16026   0074FE                     u21801:
 16027   0074FE  EF82  F03A         	goto	l17516
 16028   007502                     u21800:
 16029   007502                     
 16030                           ; BSR set to: 0
 16031   007502  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16032   007504                     l17516:
 16033                           
 16034                           ; BSR set to: 0
 16035   007504  90D8               	bcf	status,0,c
 16036   007506  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 16037   007508                     
 16038                           ; BSR set to: 0
 16039   007508  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 16040   00750C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16041   00750E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16042   007510  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 16043   007512  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 16044   007516  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16045   007518  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16046   00751A  6B64               	clrf	??___xxtofl& (0+255),b
 16047   00751C  5164               	movf	??___xxtofl& (0+255),w,b
 16048   00751E  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 16049   007520  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 16050   007522  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16051   007524  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 16052   007526  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16053   007528  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 16054   00752A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16055   00752C                     
 16056                           ; BSR set to: 0
 16057   00752C  5168               	movf	___xxtofl@sign& (0+255),w,b
 16058   00752E  B4D8               	btfsc	status,2,c
 16059   007530  EF9C  F03A         	goto	u21811
 16060   007534  EF9E  F03A         	goto	u21810
 16061   007538                     u21811:
 16062   007538  EFA6  F03A         	goto	l17526
 16063   00753C                     u21810:
 16064   00753C                     
 16065                           ; BSR set to: 0
 16066   00753C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 16067   00753E  EFA5  F03A         	goto	u21820
 16068   007542  EFA3  F03A         	goto	u21821
 16069   007546                     u21821:
 16070   007546  EFA6  F03A         	goto	l17526
 16071   00754A                     u21820:
 16072   00754A                     
 16073                           ; BSR set to: 0
 16074   00754A  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16075   00754C                     l17526:
 16076                           
 16077                           ; BSR set to: 0
 16078   00754C  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 16079   007550  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 16080   007554  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 16081   007558  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 16082   00755C                     l2926:
 16083                           
 16084                           ; BSR set to: 0
 16085   00755C  0012               	return		;funcret
 16086   00755E                     __end_of___xxtofl:
 16087                           	callstack 0
 16088                           
 16089 ;; *************** function ___fltol *****************
 16090 ;; Defined at:
 16091 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;  f1              4   64[BANK0 ] unsigned char 
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;  exp1            1   73[BANK0 ] unsigned char 
 16096 ;;  sign1           1   72[BANK0 ] unsigned char 
 16097 ;; Return value:  Size  Location     Type
 16098 ;;                  4   64[BANK0 ] long 
 16099 ;; Registers used:
 16100 ;;		wreg, status,2, status,0
 16101 ;; Tracked objects:
 16102 ;;		On entry : 0/0
 16103 ;;		On exit  : 0/0
 16104 ;;		Unchanged: 0/0
 16105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16106 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16109 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16110 ;;Total ram usage:       10 bytes
 16111 ;; Hardware stack levels used: 1
 16112 ;; Hardware stack levels required when called: 5
 16113 ;; This function calls:
 16114 ;;		Nothing
 16115 ;; This function is called by:
 16116 ;;		_fxls_read_accel_data
 16117 ;; This function uses a non-reentrant model
 16118 ;;
 16119                           
 16120                           	psect	text60
 16121   0083E0                     __ptext60:
 16122                           	callstack 0
 16123   0083E0                     ___fltol:
 16124                           	callstack 24
 16125   0083E0  0100               	movlb	0	; () banked
 16126   0083E2  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
 16127   0083E4  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
 16128   0083E6  6FA9               	movwf	___fltol@exp1& (0+255),b
 16129   0083E8  51A9               	movf	___fltol@exp1& (0+255),w,b
 16130   0083EA  A4D8               	btfss	status,2,c
 16131   0083EC  EFFA  F041         	goto	u21661
 16132   0083F0  EFFC  F041         	goto	u21660
 16133   0083F4                     u21661:
 16134   0083F4  EF06  F042         	goto	l17446
 16135   0083F8                     u21660:
 16136   0083F8                     l17442:
 16137                           
 16138                           ; BSR set to: 0
 16139   0083F8  0E00               	movlw	0
 16140   0083FA  6FA0               	movwf	?___fltol& (0+255),b
 16141   0083FC  0E00               	movlw	0
 16142   0083FE  6FA1               	movwf	(?___fltol+1)& (0+255),b
 16143   008400  0E00               	movlw	0
 16144   008402  6FA2               	movwf	(?___fltol+2)& (0+255),b
 16145   008404  0E00               	movlw	0
 16146   008406  6FA3               	movwf	(?___fltol+3)& (0+255),b
 16147   008408  EF73  F042         	goto	l2565
 16148   00840C                     l17446:
 16149                           
 16150                           ; BSR set to: 0
 16151   00840C  C0A0  F0A4         	movff	___fltol@f1,??___fltol
 16152   008410  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
 16153   008414  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
 16154   008418  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
 16155   00841C  0E20               	movlw	32
 16156   00841E  EF16  F042         	goto	u21670
 16157   008422                     u21675:
 16158   008422  90D8               	bcf	status,0,c
 16159   008424  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
 16160   008426  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
 16161   008428  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
 16162   00842A  33A4               	rrcf	??___fltol& (0+255),f,b
 16163   00842C                     u21670:
 16164   00842C  2EE8               	decfsz	wreg,f,c
 16165   00842E  EF11  F042         	goto	u21675
 16166   008432  51A4               	movf	??___fltol& (0+255),w,b
 16167   008434  6FA8               	movwf	___fltol@sign1& (0+255),b
 16168   008436                     
 16169                           ; BSR set to: 0
 16170   008436  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
 16171   008438                     
 16172                           ; BSR set to: 0
 16173   008438  0EFF               	movlw	255
 16174   00843A  17A0               	andwf	___fltol@f1& (0+255),f,b
 16175   00843C  0EFF               	movlw	255
 16176   00843E  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
 16177   008440  0EFF               	movlw	255
 16178   008442  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
 16179   008444  0E00               	movlw	0
 16180   008446  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
 16181   008448                     
 16182                           ; BSR set to: 0
 16183   008448  0E96               	movlw	150
 16184   00844A  5FA9               	subwf	___fltol@exp1& (0+255),f,b
 16185   00844C                     
 16186                           ; BSR set to: 0
 16187   00844C  BFA9               	btfsc	___fltol@exp1& (0+255),7,b
 16188   00844E  EF2D  F042         	goto	u21680
 16189   008452  EF2B  F042         	goto	u21681
 16190   008456                     u21681:
 16191   008456  EF43  F042         	goto	l17466
 16192   00845A                     u21680:
 16193   00845A                     
 16194                           ; BSR set to: 0
 16195   00845A  51A9               	movf	___fltol@exp1& (0+255),w,b
 16196   00845C  0A80               	xorlw	128
 16197   00845E  0F97               	addlw	151
 16198   008460  B0D8               	btfsc	status,0,c
 16199   008462  EF35  F042         	goto	u21691
 16200   008466  EF37  F042         	goto	u21690
 16201   00846A                     u21691:
 16202   00846A  EF39  F042         	goto	l17462
 16203   00846E                     u21690:
 16204   00846E  EFFC  F041         	goto	l17442
 16205   008472                     l17462:
 16206                           
 16207                           ; BSR set to: 0
 16208   008472  90D8               	bcf	status,0,c
 16209   008474  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
 16210   008476  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
 16211   008478  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
 16212   00847A  33A0               	rrcf	___fltol@f1& (0+255),f,b
 16213   00847C                     
 16214                           ; BSR set to: 0
 16215   00847C  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
 16216   00847E  EF39  F042         	goto	l17462
 16217   008482  EF5B  F042         	goto	l17476
 16218   008486                     l17466:
 16219                           
 16220                           ; BSR set to: 0
 16221   008486  0E1F               	movlw	31
 16222   008488  65A9               	cpfsgt	___fltol@exp1& (0+255),b
 16223   00848A  EF49  F042         	goto	u21701
 16224   00848E  EF4B  F042         	goto	u21700
 16225   008492                     u21701:
 16226   008492  EF53  F042         	goto	l17474
 16227   008496                     u21700:
 16228   008496  EFFC  F041         	goto	l17442
 16229   00849A                     l17472:
 16230                           
 16231                           ; BSR set to: 0
 16232   00849A  90D8               	bcf	status,0,c
 16233   00849C  37A0               	rlcf	___fltol@f1& (0+255),f,b
 16234   00849E  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
 16235   0084A0  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
 16236   0084A2  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
 16237   0084A4  07A9               	decf	___fltol@exp1& (0+255),f,b
 16238   0084A6                     l17474:
 16239                           
 16240                           ; BSR set to: 0
 16241   0084A6  51A9               	movf	___fltol@exp1& (0+255),w,b
 16242   0084A8  A4D8               	btfss	status,2,c
 16243   0084AA  EF59  F042         	goto	u21711
 16244   0084AE  EF5B  F042         	goto	u21710
 16245   0084B2                     u21711:
 16246   0084B2  EF4D  F042         	goto	l17472
 16247   0084B6                     u21710:
 16248   0084B6                     l17476:
 16249                           
 16250                           ; BSR set to: 0
 16251   0084B6  51A8               	movf	___fltol@sign1& (0+255),w,b
 16252   0084B8  B4D8               	btfsc	status,2,c
 16253   0084BA  EF61  F042         	goto	u21721
 16254   0084BE  EF63  F042         	goto	u21720
 16255   0084C2                     u21721:
 16256   0084C2  EF6B  F042         	goto	l17480
 16257   0084C6                     u21720:
 16258   0084C6                     
 16259                           ; BSR set to: 0
 16260   0084C6  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
 16261   0084C8  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
 16262   0084CA  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
 16263   0084CC  6DA0               	negf	___fltol@f1& (0+255),b
 16264   0084CE  0E00               	movlw	0
 16265   0084D0  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
 16266   0084D2  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
 16267   0084D4  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
 16268   0084D6                     l17480:
 16269                           
 16270                           ; BSR set to: 0
 16271   0084D6  C0A0  F0A0         	movff	___fltol@f1,?___fltol
 16272   0084DA  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
 16273   0084DE  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
 16274   0084E2  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
 16275   0084E6                     l2565:
 16276                           
 16277                           ; BSR set to: 0
 16278   0084E6  0012               	return		;funcret
 16279   0084E8                     __end_of___fltol:
 16280                           	callstack 0
 16281                           
 16282 ;; *************** function ___flmul *****************
 16283 ;; Defined at:
 16284 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 16285 ;; Parameters:    Size  Location     Type
 16286 ;;  b               4   14[BANK0 ] long 
 16287 ;;  a               4   18[BANK0 ] long 
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  prod            4   33[BANK0 ] struct .
 16290 ;;  grs             4   27[BANK0 ] unsigned long 
 16291 ;;  temp            2   37[BANK0 ] struct .
 16292 ;;  bexp            1   32[BANK0 ] unsigned char 
 16293 ;;  aexp            1   31[BANK0 ] unsigned char 
 16294 ;;  sign            1   26[BANK0 ] unsigned char 
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  4   14[BANK0 ] unsigned char 
 16297 ;; Registers used:
 16298 ;;		wreg, status,2, status,0, prodl, prodh
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : 0/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16304 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16305 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16306 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16307 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16308 ;;Total ram usage:       25 bytes
 16309 ;; Hardware stack levels used: 1
 16310 ;; Hardware stack levels required when called: 5
 16311 ;; This function calls:
 16312 ;;		Nothing
 16313 ;; This function is called by:
 16314 ;;		_fxls_read_accel_data
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           
 16318                           	psect	text61
 16319   004B78                     __ptext61:
 16320                           	callstack 0
 16321   004B78                     ___flmul:
 16322                           	callstack 24
 16323   004B78  0100               	movlb	0	; () banked
 16324   004B7A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 16325   004B7C  0B80               	andlw	128
 16326   004B7E  6F7A               	movwf	___flmul@sign& (0+255),b
 16327   004B80  5171               	movf	(___flmul@b+3)& (0+255),w,b
 16328   004B82  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 16329   004B84  6F80               	movwf	___flmul@bexp& (0+255),b
 16330   004B86                     
 16331                           ; BSR set to: 0
 16332   004B86  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 16333   004B88  EFC8  F025         	goto	u13811
 16334   004B8C  EFCA  F025         	goto	u13810
 16335   004B90                     u13811:
 16336   004B90  EFCB  F025         	goto	l12010
 16337   004B94                     u13810:
 16338   004B94                     
 16339                           ; BSR set to: 0
 16340   004B94  8180               	bsf	___flmul@bexp& (0+255),0,b
 16341   004B96                     l12010:
 16342                           
 16343                           ; BSR set to: 0
 16344   004B96  5180               	movf	___flmul@bexp& (0+255),w,b
 16345   004B98  B4D8               	btfsc	status,2,c
 16346   004B9A  EFD1  F025         	goto	u13821
 16347   004B9E  EFD3  F025         	goto	u13820
 16348   004BA2                     u13821:
 16349   004BA2  EFE6  F025         	goto	l12018
 16350   004BA6                     u13820:
 16351   004BA6                     
 16352                           ; BSR set to: 0
 16353   004BA6  2980               	incf	___flmul@bexp& (0+255),w,b
 16354   004BA8  A4D8               	btfss	status,2,c
 16355   004BAA  EFD9  F025         	goto	u13831
 16356   004BAE  EFDB  F025         	goto	u13830
 16357   004BB2                     u13831:
 16358   004BB2  EFE3  F025         	goto	l12016
 16359   004BB6                     u13830:
 16360   004BB6                     
 16361                           ; BSR set to: 0
 16362   004BB6  0E00               	movlw	0
 16363   004BB8  6F6E               	movwf	___flmul@b& (0+255),b
 16364   004BBA  0E00               	movlw	0
 16365   004BBC  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 16366   004BBE  0E00               	movlw	0
 16367   004BC0  6F70               	movwf	(___flmul@b+2)& (0+255),b
 16368   004BC2  0E00               	movlw	0
 16369   004BC4  6F71               	movwf	(___flmul@b+3)& (0+255),b
 16370   004BC6                     l12016:
 16371                           
 16372                           ; BSR set to: 0
 16373   004BC6  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 16374   004BC8  EFEE  F025         	goto	l12020
 16375   004BCC                     l12018:
 16376                           
 16377                           ; BSR set to: 0
 16378   004BCC  0E00               	movlw	0
 16379   004BCE  6F6E               	movwf	___flmul@b& (0+255),b
 16380   004BD0  0E00               	movlw	0
 16381   004BD2  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 16382   004BD4  0E00               	movlw	0
 16383   004BD6  6F70               	movwf	(___flmul@b+2)& (0+255),b
 16384   004BD8  0E00               	movlw	0
 16385   004BDA  6F71               	movwf	(___flmul@b+3)& (0+255),b
 16386   004BDC                     l12020:
 16387                           
 16388                           ; BSR set to: 0
 16389   004BDC  5175               	movf	(___flmul@a+3)& (0+255),w,b
 16390   004BDE  0B80               	andlw	128
 16391   004BE0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 16392   004BE2                     
 16393                           ; BSR set to: 0
 16394   004BE2  5175               	movf	(___flmul@a+3)& (0+255),w,b
 16395   004BE4  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 16396   004BE6  6F7F               	movwf	___flmul@aexp& (0+255),b
 16397   004BE8                     
 16398                           ; BSR set to: 0
 16399   004BE8  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 16400   004BEA  EFF9  F025         	goto	u13841
 16401   004BEE  EFFB  F025         	goto	u13840
 16402   004BF2                     u13841:
 16403   004BF2  EFFC  F025         	goto	l12028
 16404   004BF6                     u13840:
 16405   004BF6                     
 16406                           ; BSR set to: 0
 16407   004BF6  817F               	bsf	___flmul@aexp& (0+255),0,b
 16408   004BF8                     l12028:
 16409                           
 16410                           ; BSR set to: 0
 16411   004BF8  517F               	movf	___flmul@aexp& (0+255),w,b
 16412   004BFA  B4D8               	btfsc	status,2,c
 16413   004BFC  EF02  F026         	goto	u13851
 16414   004C00  EF04  F026         	goto	u13850
 16415   004C04                     u13851:
 16416   004C04  EF17  F026         	goto	l12036
 16417   004C08                     u13850:
 16418   004C08                     
 16419                           ; BSR set to: 0
 16420   004C08  297F               	incf	___flmul@aexp& (0+255),w,b
 16421   004C0A  A4D8               	btfss	status,2,c
 16422   004C0C  EF0A  F026         	goto	u13861
 16423   004C10  EF0C  F026         	goto	u13860
 16424   004C14                     u13861:
 16425   004C14  EF14  F026         	goto	l12034
 16426   004C18                     u13860:
 16427   004C18                     
 16428                           ; BSR set to: 0
 16429   004C18  0E00               	movlw	0
 16430   004C1A  6F72               	movwf	___flmul@a& (0+255),b
 16431   004C1C  0E00               	movlw	0
 16432   004C1E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 16433   004C20  0E00               	movlw	0
 16434   004C22  6F74               	movwf	(___flmul@a+2)& (0+255),b
 16435   004C24  0E00               	movlw	0
 16436   004C26  6F75               	movwf	(___flmul@a+3)& (0+255),b
 16437   004C28                     l12034:
 16438                           
 16439                           ; BSR set to: 0
 16440   004C28  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 16441   004C2A  EF1F  F026         	goto	l2882
 16442   004C2E                     l12036:
 16443                           
 16444                           ; BSR set to: 0
 16445   004C2E  0E00               	movlw	0
 16446   004C30  6F72               	movwf	___flmul@a& (0+255),b
 16447   004C32  0E00               	movlw	0
 16448   004C34  6F73               	movwf	(___flmul@a+1)& (0+255),b
 16449   004C36  0E00               	movlw	0
 16450   004C38  6F74               	movwf	(___flmul@a+2)& (0+255),b
 16451   004C3A  0E00               	movlw	0
 16452   004C3C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 16453   004C3E                     l2882:
 16454                           
 16455                           ; BSR set to: 0
 16456   004C3E  517F               	movf	___flmul@aexp& (0+255),w,b
 16457   004C40  B4D8               	btfsc	status,2,c
 16458   004C42  EF25  F026         	goto	u13871
 16459   004C46  EF27  F026         	goto	u13870
 16460   004C4A                     u13871:
 16461   004C4A  EF2F  F026         	goto	l12040
 16462   004C4E                     u13870:
 16463   004C4E                     
 16464                           ; BSR set to: 0
 16465   004C4E  5180               	movf	___flmul@bexp& (0+255),w,b
 16466   004C50  A4D8               	btfss	status,2,c
 16467   004C52  EF2D  F026         	goto	u13881
 16468   004C56  EF2F  F026         	goto	u13880
 16469   004C5A                     u13881:
 16470   004C5A  EF39  F026         	goto	l12044
 16471   004C5E                     u13880:
 16472   004C5E                     l12040:
 16473                           
 16474                           ; BSR set to: 0
 16475   004C5E  0E00               	movlw	0
 16476   004C60  6F6E               	movwf	?___flmul& (0+255),b
 16477   004C62  0E00               	movlw	0
 16478   004C64  6F6F               	movwf	(?___flmul+1)& (0+255),b
 16479   004C66  0E00               	movlw	0
 16480   004C68  6F70               	movwf	(?___flmul+2)& (0+255),b
 16481   004C6A  0E00               	movlw	0
 16482   004C6C  6F71               	movwf	(?___flmul+3)& (0+255),b
 16483   004C6E  EFE3  F027         	goto	l2886
 16484   004C72                     l12044:
 16485                           
 16486                           ; BSR set to: 0
 16487   004C72  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16488   004C74  036E               	mulwf	___flmul@b& (0+255),b
 16489   004C76  006F FFCC  F085    	movff	prodl,___flmul@temp
 16490   004C7C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16491   004C82                     
 16492                           ; BSR set to: 0
 16493   004C82  5185               	movf	___flmul@temp& (0+255),w,b
 16494   004C84  6F7B               	movwf	___flmul@grs& (0+255),b
 16495   004C86  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 16496   004C88  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 16497   004C8A  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 16498   004C8C                     
 16499                           ; BSR set to: 0
 16500   004C8C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16501   004C8E  6F81               	movwf	___flmul@prod& (0+255),b
 16502   004C90  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 16503   004C92  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 16504   004C94  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 16505   004C96  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16506   004C98  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16507   004C9A  006F FFCC  F085    	movff	prodl,___flmul@temp
 16508   004CA0  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16509   004CA6                     
 16510                           ; BSR set to: 0
 16511   004CA6  5185               	movf	___flmul@temp& (0+255),w,b
 16512   004CA8  277B               	addwf	___flmul@grs& (0+255),f,b
 16513   004CAA  0E00               	movlw	0
 16514   004CAC  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16515   004CAE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16516   004CB0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16517   004CB2                     
 16518                           ; BSR set to: 0
 16519   004CB2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16520   004CB4  2781               	addwf	___flmul@prod& (0+255),f,b
 16521   004CB6  0E00               	movlw	0
 16522   004CB8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16523   004CBA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16524   004CBC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16525   004CBE  5172               	movf	___flmul@a& (0+255),w,b
 16526   004CC0  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16527   004CC2  006F FFCC  F085    	movff	prodl,___flmul@temp
 16528   004CC8  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16529   004CCE                     
 16530                           ; BSR set to: 0
 16531   004CCE  5185               	movf	___flmul@temp& (0+255),w,b
 16532   004CD0  277B               	addwf	___flmul@grs& (0+255),f,b
 16533   004CD2  0E00               	movlw	0
 16534   004CD4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16535   004CD6  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16536   004CD8  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16537   004CDA                     
 16538                           ; BSR set to: 0
 16539   004CDA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16540   004CDC  2781               	addwf	___flmul@prod& (0+255),f,b
 16541   004CDE  0E00               	movlw	0
 16542   004CE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16543   004CE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16544   004CE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16545   004CE6                     
 16546                           ; BSR set to: 0
 16547   004CE6  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16548   004CEA  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16549   004CEE  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16550   004CF2  6B7B               	clrf	___flmul@grs& (0+255),b
 16551   004CF4                     
 16552                           ; BSR set to: 0
 16553   004CF4  5172               	movf	___flmul@a& (0+255),w,b
 16554   004CF6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16555   004CF8  006F FFCC  F085    	movff	prodl,___flmul@temp
 16556   004CFE  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16557   004D04                     
 16558                           ; BSR set to: 0
 16559   004D04  5185               	movf	___flmul@temp& (0+255),w,b
 16560   004D06  277B               	addwf	___flmul@grs& (0+255),f,b
 16561   004D08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16562   004D0A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16563   004D0C  0E00               	movlw	0
 16564   004D0E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16565   004D10  0E00               	movlw	0
 16566   004D12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16567   004D14                     
 16568                           ; BSR set to: 0
 16569   004D14  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16570   004D16  036E               	mulwf	___flmul@b& (0+255),b
 16571   004D18  006F FFCC  F085    	movff	prodl,___flmul@temp
 16572   004D1E  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16573   004D24                     
 16574                           ; BSR set to: 0
 16575   004D24  5185               	movf	___flmul@temp& (0+255),w,b
 16576   004D26  277B               	addwf	___flmul@grs& (0+255),f,b
 16577   004D28  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16578   004D2A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16579   004D2C  0E00               	movlw	0
 16580   004D2E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16581   004D30  0E00               	movlw	0
 16582   004D32  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16583   004D34                     
 16584                           ; BSR set to: 0
 16585   004D34  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16586   004D38  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16587   004D3C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16588   004D40  6B7B               	clrf	___flmul@grs& (0+255),b
 16589   004D42  5172               	movf	___flmul@a& (0+255),w,b
 16590   004D44  036E               	mulwf	___flmul@b& (0+255),b
 16591   004D46  006F FFCC  F085    	movff	prodl,___flmul@temp
 16592   004D4C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16593   004D52                     
 16594                           ; BSR set to: 0
 16595   004D52  5185               	movf	___flmul@temp& (0+255),w,b
 16596   004D54  277B               	addwf	___flmul@grs& (0+255),f,b
 16597   004D56  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16598   004D58  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16599   004D5A  0E00               	movlw	0
 16600   004D5C  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16601   004D5E  0E00               	movlw	0
 16602   004D60  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16603   004D62                     
 16604                           ; BSR set to: 0
 16605   004D62  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16606   004D64  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16607   004D66  006F FFCC  F085    	movff	prodl,___flmul@temp
 16608   004D6C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16609   004D72  5185               	movf	___flmul@temp& (0+255),w,b
 16610   004D74  2781               	addwf	___flmul@prod& (0+255),f,b
 16611   004D76  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16612   004D78  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16613   004D7A  0E00               	movlw	0
 16614   004D7C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16615   004D7E  0E00               	movlw	0
 16616   004D80  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16617   004D82                     
 16618                           ; BSR set to: 0
 16619   004D82  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16620   004D84  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16621   004D86  006F FFCC  F085    	movff	prodl,___flmul@temp
 16622   004D8C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16623   004D92                     
 16624                           ; BSR set to: 0
 16625   004D92  5185               	movf	___flmul@temp& (0+255),w,b
 16626   004D94  2781               	addwf	___flmul@prod& (0+255),f,b
 16627   004D96  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16628   004D98  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16629   004D9A  0E00               	movlw	0
 16630   004D9C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16631   004D9E  0E00               	movlw	0
 16632   004DA0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16633   004DA2  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16634   004DA4  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16635   004DA6  006F FFCC  F085    	movff	prodl,___flmul@temp
 16636   004DAC  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16637   004DB2                     
 16638                           ; BSR set to: 0
 16639   004DB2  5185               	movf	___flmul@temp& (0+255),w,b
 16640   004DB4  6F76               	movwf	??___flmul& (0+255),b
 16641   004DB6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16642   004DB8  6F77               	movwf	(??___flmul+1)& (0+255),b
 16643   004DBA  6B78               	clrf	(??___flmul+2)& (0+255),b
 16644   004DBC  6B79               	clrf	(??___flmul+3)& (0+255),b
 16645   004DBE  C078  F079         	movff	??___flmul+2,??___flmul+3
 16646   004DC2  C077  F078         	movff	??___flmul+1,??___flmul+2
 16647   004DC6  C076  F077         	movff	??___flmul,??___flmul+1
 16648   004DCA  6B76               	clrf	??___flmul& (0+255),b
 16649   004DCC  5176               	movf	??___flmul& (0+255),w,b
 16650   004DCE  2781               	addwf	___flmul@prod& (0+255),f,b
 16651   004DD0  5177               	movf	(??___flmul+1)& (0+255),w,b
 16652   004DD2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16653   004DD4  5178               	movf	(??___flmul+2)& (0+255),w,b
 16654   004DD6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16655   004DD8  5179               	movf	(??___flmul+3)& (0+255),w,b
 16656   004DDA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16657   004DDC                     
 16658                           ; BSR set to: 0
 16659   004DDC  C07B  F076         	movff	___flmul@grs,??___flmul
 16660   004DE0  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 16661   004DE4  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 16662   004DE8  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 16663   004DEC  0E19               	movlw	25
 16664   004DEE  EFFE  F026         	goto	u13890
 16665   004DF2                     u13895:
 16666   004DF2  90D8               	bcf	status,0,c
 16667   004DF4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 16668   004DF6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 16669   004DF8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 16670   004DFA  3376               	rrcf	??___flmul& (0+255),f,b
 16671   004DFC                     u13890:
 16672   004DFC  2EE8               	decfsz	wreg,f,c
 16673   004DFE  EFF9  F026         	goto	u13895
 16674   004E02  5176               	movf	??___flmul& (0+255),w,b
 16675   004E04  2781               	addwf	___flmul@prod& (0+255),f,b
 16676   004E06  5177               	movf	(??___flmul+1)& (0+255),w,b
 16677   004E08  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16678   004E0A  5178               	movf	(??___flmul+2)& (0+255),w,b
 16679   004E0C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16680   004E0E  5179               	movf	(??___flmul+3)& (0+255),w,b
 16681   004E10  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16682   004E12                     
 16683                           ; BSR set to: 0
 16684   004E12  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16685   004E16  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16686   004E1A  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16687   004E1E  6B7B               	clrf	___flmul@grs& (0+255),b
 16688   004E20                     
 16689                           ; BSR set to: 0
 16690   004E20  517F               	movf	___flmul@aexp& (0+255),w,b
 16691   004E22  C080  F076         	movff	___flmul@bexp,??___flmul
 16692   004E26  6B77               	clrf	(??___flmul+1)& (0+255),b
 16693   004E28  2776               	addwf	??___flmul& (0+255),f,b
 16694   004E2A  0E00               	movlw	0
 16695   004E2C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 16696   004E2E  0E82               	movlw	130
 16697   004E30  2576               	addwf	??___flmul& (0+255),w,b
 16698   004E32  6F85               	movwf	___flmul@temp& (0+255),b
 16699   004E34  0EFF               	movlw	255
 16700   004E36  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 16701   004E38  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 16702   004E3A  EF34  F027         	goto	l12092
 16703   004E3E                     l12086:
 16704                           
 16705                           ; BSR set to: 0
 16706   004E3E  90D8               	bcf	status,0,c
 16707   004E40  3781               	rlcf	___flmul@prod& (0+255),f,b
 16708   004E42  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16709   004E44  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16710   004E46  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16711   004E48                     
 16712                           ; BSR set to: 0
 16713   004E48  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 16714   004E4A  EF29  F027         	goto	u13901
 16715   004E4E  EF2B  F027         	goto	u13900
 16716   004E52                     u13901:
 16717   004E52  EF2C  F027         	goto	l2889
 16718   004E56                     u13900:
 16719   004E56                     
 16720                           ; BSR set to: 0
 16721   004E56  8181               	bsf	___flmul@prod& (0+255),0,b
 16722   004E58                     l2889:
 16723                           
 16724                           ; BSR set to: 0
 16725   004E58  90D8               	bcf	status,0,c
 16726   004E5A  377B               	rlcf	___flmul@grs& (0+255),f,b
 16727   004E5C  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16728   004E5E  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16729   004E60  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16730   004E62  0785               	decf	___flmul@temp& (0+255),f,b
 16731   004E64  A0D8               	btfss	status,0,c
 16732   004E66  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 16733   004E68                     l12092:
 16734                           
 16735                           ; BSR set to: 0
 16736   004E68  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 16737   004E6A  EF39  F027         	goto	u13911
 16738   004E6E  EF3B  F027         	goto	u13910
 16739   004E72                     u13911:
 16740   004E72  EF1F  F027         	goto	l12086
 16741   004E76                     u13910:
 16742   004E76                     
 16743                           ; BSR set to: 0
 16744   004E76  0E00               	movlw	0
 16745   004E78  6F7F               	movwf	___flmul@aexp& (0+255),b
 16746   004E7A                     
 16747                           ; BSR set to: 0
 16748   004E7A  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 16749   004E7C  EF42  F027         	goto	u13921
 16750   004E80  EF44  F027         	goto	u13920
 16751   004E84                     u13921:
 16752   004E84  EF68  F027         	goto	l2891
 16753   004E88                     u13920:
 16754   004E88                     
 16755                           ; BSR set to: 0
 16756   004E88  0EFF               	movlw	255
 16757   004E8A  157B               	andwf	___flmul@grs& (0+255),w,b
 16758   004E8C  6F76               	movwf	??___flmul& (0+255),b
 16759   004E8E  0EFF               	movlw	255
 16760   004E90  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 16761   004E92  6F77               	movwf	(??___flmul+1)& (0+255),b
 16762   004E94  0EFF               	movlw	255
 16763   004E96  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 16764   004E98  6F78               	movwf	(??___flmul+2)& (0+255),b
 16765   004E9A  0E7F               	movlw	127
 16766   004E9C  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 16767   004E9E  6F79               	movwf	(??___flmul+3)& (0+255),b
 16768   004EA0  5176               	movf	??___flmul& (0+255),w,b
 16769   004EA2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 16770   004EA4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 16771   004EA6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 16772   004EA8  B4D8               	btfsc	status,2,c
 16773   004EAA  EF59  F027         	goto	u13931
 16774   004EAE  EF5B  F027         	goto	u13930
 16775   004EB2                     u13931:
 16776   004EB2  EF5F  F027         	goto	l2892
 16777   004EB6                     u13930:
 16778   004EB6                     l12100:
 16779                           
 16780                           ; BSR set to: 0
 16781   004EB6  0E01               	movlw	1
 16782   004EB8  6F7F               	movwf	___flmul@aexp& (0+255),b
 16783   004EBA  EF68  F027         	goto	l2891
 16784   004EBE                     l2892:
 16785                           
 16786                           ; BSR set to: 0
 16787   004EBE  A181               	btfss	___flmul@prod& (0+255),0,b
 16788   004EC0  EF64  F027         	goto	u13941
 16789   004EC4  EF66  F027         	goto	u13940
 16790   004EC8                     u13941:
 16791   004EC8  EF68  F027         	goto	l2891
 16792   004ECC                     u13940:
 16793   004ECC  EF5B  F027         	goto	l12100
 16794   004ED0                     l2891:
 16795                           
 16796                           ; BSR set to: 0
 16797   004ED0  517F               	movf	___flmul@aexp& (0+255),w,b
 16798   004ED2  B4D8               	btfsc	status,2,c
 16799   004ED4  EF6E  F027         	goto	u13951
 16800   004ED8  EF70  F027         	goto	u13950
 16801   004EDC                     u13951:
 16802   004EDC  EF94  F027         	goto	l12112
 16803   004EE0                     u13950:
 16804   004EE0                     
 16805                           ; BSR set to: 0
 16806   004EE0  0E01               	movlw	1
 16807   004EE2  2781               	addwf	___flmul@prod& (0+255),f,b
 16808   004EE4  0E00               	movlw	0
 16809   004EE6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16810   004EE8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16811   004EEA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16812   004EEC                     
 16813                           ; BSR set to: 0
 16814   004EEC  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 16815   004EEE  EF7B  F027         	goto	u13961
 16816   004EF2  EF7D  F027         	goto	u13960
 16817   004EF6                     u13961:
 16818   004EF6  EF94  F027         	goto	l12112
 16819   004EFA                     u13960:
 16820   004EFA                     
 16821                           ; BSR set to: 0
 16822   004EFA  C081  F076         	movff	___flmul@prod,??___flmul
 16823   004EFE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 16824   004F02  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 16825   004F06  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 16826   004F0A  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 16827   004F0C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 16828   004F0E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 16829   004F10  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 16830   004F12  3376               	rrcf	??___flmul& (0+255),f,b
 16831   004F14  C076  F081         	movff	??___flmul,___flmul@prod
 16832   004F18  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 16833   004F1C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 16834   004F20  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 16835   004F24                     
 16836                           ; BSR set to: 0
 16837   004F24  4B85               	infsnz	___flmul@temp& (0+255),f,b
 16838   004F26  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 16839   004F28                     l12112:
 16840                           
 16841                           ; BSR set to: 0
 16842   004F28  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16843   004F2A  EF9F  F027         	goto	u13971
 16844   004F2E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16845   004F30  E108               	bnz	u13970
 16846   004F32  2985               	incf	___flmul@temp& (0+255),w,b
 16847   004F34  A0D8               	btfss	status,0,c
 16848   004F36  EF9F  F027         	goto	u13971
 16849   004F3A  EFA1  F027         	goto	u13970
 16850   004F3E                     u13971:
 16851   004F3E  EFAB  F027         	goto	l12116
 16852   004F42                     u13970:
 16853   004F42                     
 16854                           ; BSR set to: 0
 16855   004F42  0E00               	movlw	0
 16856   004F44  6F81               	movwf	___flmul@prod& (0+255),b
 16857   004F46  0E00               	movlw	0
 16858   004F48  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 16859   004F4A  0E80               	movlw	128
 16860   004F4C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 16861   004F4E  0E7F               	movlw	127
 16862   004F50  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16863   004F52  EFD9  F027         	goto	l12128
 16864   004F56                     l12116:
 16865                           
 16866                           ; BSR set to: 0
 16867   004F56  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16868   004F58  EFB8  F027         	goto	u13980
 16869   004F5C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16870   004F5E  E106               	bnz	u13981
 16871   004F60  0585               	decf	___flmul@temp& (0+255),w,b
 16872   004F62  B0D8               	btfsc	status,0,c
 16873   004F64  EFB6  F027         	goto	u13981
 16874   004F68  EFB8  F027         	goto	u13980
 16875   004F6C                     u13981:
 16876   004F6C  EFC4  F027         	goto	l2899
 16877   004F70                     u13980:
 16878   004F70                     
 16879                           ; BSR set to: 0
 16880   004F70  0E00               	movlw	0
 16881   004F72  6F81               	movwf	___flmul@prod& (0+255),b
 16882   004F74  0E00               	movlw	0
 16883   004F76  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 16884   004F78  0E00               	movlw	0
 16885   004F7A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 16886   004F7C  0E00               	movlw	0
 16887   004F7E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16888   004F80  0E00               	movlw	0
 16889   004F82  6F7A               	movwf	___flmul@sign& (0+255),b
 16890   004F84  EFD9  F027         	goto	l12128
 16891   004F88                     l2899:
 16892                           
 16893                           ; BSR set to: 0
 16894   004F88  C085  F080         	movff	___flmul@temp,___flmul@bexp
 16895   004F8C                     
 16896                           ; BSR set to: 0
 16897   004F8C  0EFF               	movlw	255
 16898   004F8E  1781               	andwf	___flmul@prod& (0+255),f,b
 16899   004F90  0EFF               	movlw	255
 16900   004F92  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 16901   004F94  0E7F               	movlw	127
 16902   004F96  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 16903   004F98  0E00               	movlw	0
 16904   004F9A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 16905   004F9C                     
 16906                           ; BSR set to: 0
 16907   004F9C  A180               	btfss	___flmul@bexp& (0+255),0,b
 16908   004F9E  EFD3  F027         	goto	u13991
 16909   004FA2  EFD5  F027         	goto	u13990
 16910   004FA6                     u13991:
 16911   004FA6  EFD6  F027         	goto	l12126
 16912   004FAA                     u13990:
 16913   004FAA                     
 16914                           ; BSR set to: 0
 16915   004FAA  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 16916   004FAC                     l12126:
 16917                           
 16918                           ; BSR set to: 0
 16919   004FAC  90D8               	bcf	status,0,c
 16920   004FAE  3180               	rrcf	___flmul@bexp& (0+255),w,b
 16921   004FB0  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16922   004FB2                     l12128:
 16923                           
 16924                           ; BSR set to: 0
 16925   004FB2  517A               	movf	___flmul@sign& (0+255),w,b
 16926   004FB4  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16927   004FB6                     
 16928                           ; BSR set to: 0
 16929   004FB6  C081  F06E         	movff	___flmul@prod,?___flmul
 16930   004FBA  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 16931   004FBE  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 16932   004FC2  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 16933   004FC6                     l2886:
 16934                           
 16935                           ; BSR set to: 0
 16936   004FC6  0012               	return		;funcret
 16937   004FC8                     __end_of___flmul:
 16938                           	callstack 0
 16939                           
 16940 ;; *************** function ___fldiv *****************
 16941 ;; Defined at:
 16942 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;  b               4   39[BANK0 ] unsigned char 
 16945 ;;  a               4   43[BANK0 ] unsigned char 
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;  grs             4   58[BANK0 ] unsigned long 
 16948 ;;  rem             4   51[BANK0 ] unsigned long 
 16949 ;;  new_exp         2   56[BANK0 ] short 
 16950 ;;  aexp            1   63[BANK0 ] unsigned char 
 16951 ;;  bexp            1   62[BANK0 ] unsigned char 
 16952 ;;  sign            1   55[BANK0 ] unsigned char 
 16953 ;; Return value:  Size  Location     Type
 16954 ;;                  4   39[BANK0 ] unsigned char 
 16955 ;; Registers used:
 16956 ;;		wreg, status,2, status,0
 16957 ;; Tracked objects:
 16958 ;;		On entry : 0/0
 16959 ;;		On exit  : 0/0
 16960 ;;		Unchanged: 0/0
 16961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16962 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16963 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;Total ram usage:       25 bytes
 16967 ;; Hardware stack levels used: 1
 16968 ;; Hardware stack levels required when called: 5
 16969 ;; This function calls:
 16970 ;;		Nothing
 16971 ;; This function is called by:
 16972 ;;		_fxls_read_accel_data
 16973 ;; This function uses a non-reentrant model
 16974 ;;
 16975                           
 16976                           	psect	text62
 16977   005B8E                     __ptext62:
 16978                           	callstack 0
 16979   005B8E                     ___fldiv:
 16980                           	callstack 24
 16981   005B8E  0100               	movlb	0	; () banked
 16982   005B90  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 16983   005B92  0B80               	andlw	128
 16984   005B94  6F97               	movwf	___fldiv@sign& (0+255),b
 16985   005B96  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 16986   005B98  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 16987   005B9A  6F9E               	movwf	___fldiv@bexp& (0+255),b
 16988   005B9C                     
 16989                           ; BSR set to: 0
 16990   005B9C  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 16991   005B9E  EFD3  F02D         	goto	u13581
 16992   005BA2  EFD5  F02D         	goto	u13580
 16993   005BA6                     u13581:
 16994   005BA6  EFD6  F02D         	goto	l11872
 16995   005BAA                     u13580:
 16996   005BAA                     
 16997                           ; BSR set to: 0
 16998   005BAA  819E               	bsf	___fldiv@bexp& (0+255),0,b
 16999   005BAC                     l11872:
 17000                           
 17001                           ; BSR set to: 0
 17002   005BAC  519E               	movf	___fldiv@bexp& (0+255),w,b
 17003   005BAE  B4D8               	btfsc	status,2,c
 17004   005BB0  EFDC  F02D         	goto	u13591
 17005   005BB4  EFDE  F02D         	goto	u13590
 17006   005BB8                     u13591:
 17007   005BB8  EFF3  F02D         	goto	l11882
 17008   005BBC                     u13590:
 17009   005BBC                     
 17010                           ; BSR set to: 0
 17011   005BBC  299E               	incf	___fldiv@bexp& (0+255),w,b
 17012   005BBE  A4D8               	btfss	status,2,c
 17013   005BC0  EFE4  F02D         	goto	u13601
 17014   005BC4  EFE6  F02D         	goto	u13600
 17015   005BC8                     u13601:
 17016   005BC8  EFEE  F02D         	goto	l11878
 17017   005BCC                     u13600:
 17018   005BCC                     
 17019                           ; BSR set to: 0
 17020   005BCC  0E00               	movlw	0
 17021   005BCE  6F87               	movwf	___fldiv@b& (0+255),b
 17022   005BD0  0E00               	movlw	0
 17023   005BD2  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17024   005BD4  0E00               	movlw	0
 17025   005BD6  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17026   005BD8  0E00               	movlw	0
 17027   005BDA  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17028   005BDC                     l11878:
 17029                           
 17030                           ; BSR set to: 0
 17031   005BDC  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 17032   005BDE                     
 17033                           ; BSR set to: 0
 17034   005BDE  0E00               	movlw	0
 17035   005BE0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17036   005BE2  EFFB  F02D         	goto	l11884
 17037   005BE6                     l11882:
 17038                           
 17039                           ; BSR set to: 0
 17040   005BE6  0E00               	movlw	0
 17041   005BE8  6F87               	movwf	___fldiv@b& (0+255),b
 17042   005BEA  0E00               	movlw	0
 17043   005BEC  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17044   005BEE  0E00               	movlw	0
 17045   005BF0  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17046   005BF2  0E00               	movlw	0
 17047   005BF4  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17048   005BF6                     l11884:
 17049                           
 17050                           ; BSR set to: 0
 17051   005BF6  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17052   005BF8  0B80               	andlw	128
 17053   005BFA  1B97               	xorwf	___fldiv@sign& (0+255),f,b
 17054   005BFC                     
 17055                           ; BSR set to: 0
 17056   005BFC  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17057   005BFE  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 17058   005C00  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17059   005C02                     
 17060                           ; BSR set to: 0
 17061   005C02  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 17062   005C04  EF06  F02E         	goto	u13611
 17063   005C08  EF08  F02E         	goto	u13610
 17064   005C0C                     u13611:
 17065   005C0C  EF09  F02E         	goto	l11892
 17066   005C10                     u13610:
 17067   005C10                     
 17068                           ; BSR set to: 0
 17069   005C10  819F               	bsf	___fldiv@aexp& (0+255),0,b
 17070   005C12                     l11892:
 17071                           
 17072                           ; BSR set to: 0
 17073   005C12  519F               	movf	___fldiv@aexp& (0+255),w,b
 17074   005C14  B4D8               	btfsc	status,2,c
 17075   005C16  EF0F  F02E         	goto	u13621
 17076   005C1A  EF11  F02E         	goto	u13620
 17077   005C1E                     u13621:
 17078   005C1E  EF26  F02E         	goto	l11902
 17079   005C22                     u13620:
 17080   005C22                     
 17081                           ; BSR set to: 0
 17082   005C22  299F               	incf	___fldiv@aexp& (0+255),w,b
 17083   005C24  A4D8               	btfss	status,2,c
 17084   005C26  EF17  F02E         	goto	u13631
 17085   005C2A  EF19  F02E         	goto	u13630
 17086   005C2E                     u13631:
 17087   005C2E  EF21  F02E         	goto	l11898
 17088   005C32                     u13630:
 17089   005C32                     
 17090                           ; BSR set to: 0
 17091   005C32  0E00               	movlw	0
 17092   005C34  6F8B               	movwf	___fldiv@a& (0+255),b
 17093   005C36  0E00               	movlw	0
 17094   005C38  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17095   005C3A  0E00               	movlw	0
 17096   005C3C  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17097   005C3E  0E00               	movlw	0
 17098   005C40  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17099   005C42                     l11898:
 17100                           
 17101                           ; BSR set to: 0
 17102   005C42  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 17103   005C44                     
 17104                           ; BSR set to: 0
 17105   005C44  0E00               	movlw	0
 17106   005C46  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17107   005C48  EF2E  F02E         	goto	l11904
 17108   005C4C                     l11902:
 17109                           
 17110                           ; BSR set to: 0
 17111   005C4C  0E00               	movlw	0
 17112   005C4E  6F8B               	movwf	___fldiv@a& (0+255),b
 17113   005C50  0E00               	movlw	0
 17114   005C52  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17115   005C54  0E00               	movlw	0
 17116   005C56  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17117   005C58  0E00               	movlw	0
 17118   005C5A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17119   005C5C                     l11904:
 17120                           
 17121                           ; BSR set to: 0
 17122   005C5C  518B               	movf	___fldiv@a& (0+255),w,b
 17123   005C5E  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 17124   005C60  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 17125   005C62  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 17126   005C64  A4D8               	btfss	status,2,c
 17127   005C66  EF37  F02E         	goto	u13641
 17128   005C6A  EF39  F02E         	goto	u13640
 17129   005C6E                     u13641:
 17130   005C6E  EF51  F02E         	goto	l11916
 17131   005C72                     u13640:
 17132   005C72                     
 17133                           ; BSR set to: 0
 17134   005C72  0E00               	movlw	0
 17135   005C74  6F87               	movwf	___fldiv@b& (0+255),b
 17136   005C76  0E00               	movlw	0
 17137   005C78  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17138   005C7A  0E00               	movlw	0
 17139   005C7C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17140   005C7E  0E00               	movlw	0
 17141   005C80  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17142   005C82                     
 17143                           ; BSR set to: 0
 17144   005C82  0E80               	movlw	128
 17145   005C84  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 17146   005C86  0E7F               	movlw	127
 17147   005C88  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17148   005C8A                     l11910:
 17149                           
 17150                           ; BSR set to: 0
 17151   005C8A  5197               	movf	___fldiv@sign& (0+255),w,b
 17152   005C8C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17153   005C8E                     
 17154                           ; BSR set to: 0
 17155   005C8E  C087  F087         	movff	___fldiv@b,?___fldiv
 17156   005C92  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 17157   005C96  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 17158   005C9A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 17159   005C9E  EF94  F02F         	goto	l2850
 17160   005CA2                     l11916:
 17161                           
 17162                           ; BSR set to: 0
 17163   005CA2  519E               	movf	___fldiv@bexp& (0+255),w,b
 17164   005CA4  A4D8               	btfss	status,2,c
 17165   005CA6  EF57  F02E         	goto	u13651
 17166   005CAA  EF59  F02E         	goto	u13650
 17167   005CAE                     u13651:
 17168   005CAE  EF63  F02E         	goto	l11924
 17169   005CB2                     u13650:
 17170   005CB2                     
 17171                           ; BSR set to: 0
 17172   005CB2  0E00               	movlw	0
 17173   005CB4  6F87               	movwf	?___fldiv& (0+255),b
 17174   005CB6  0E00               	movlw	0
 17175   005CB8  6F88               	movwf	(?___fldiv+1)& (0+255),b
 17176   005CBA  0E00               	movlw	0
 17177   005CBC  6F89               	movwf	(?___fldiv+2)& (0+255),b
 17178   005CBE  0E00               	movlw	0
 17179   005CC0  6F8A               	movwf	(?___fldiv+3)& (0+255),b
 17180   005CC2  EF94  F02F         	goto	l2850
 17181   005CC6                     l11924:
 17182                           
 17183                           ; BSR set to: 0
 17184   005CC6  519F               	movf	___fldiv@aexp& (0+255),w,b
 17185   005CC8  C09E  F08F         	movff	___fldiv@bexp,??___fldiv
 17186   005CCC  6B90               	clrf	(??___fldiv+1)& (0+255),b
 17187   005CCE  5F8F               	subwf	??___fldiv& (0+255),f,b
 17188   005CD0  0E00               	movlw	0
 17189   005CD2  5B90               	subwfb	(??___fldiv+1)& (0+255),f,b
 17190   005CD4  0E7F               	movlw	127
 17191   005CD6  258F               	addwf	??___fldiv& (0+255),w,b
 17192   005CD8  6F98               	movwf	___fldiv@new_exp& (0+255),b
 17193   005CDA  0E00               	movlw	0
 17194   005CDC  2190               	addwfc	(??___fldiv+1)& (0+255),w,b
 17195   005CDE  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17196   005CE0                     
 17197                           ; BSR set to: 0
 17198   005CE0  C087  F093         	movff	___fldiv@b,___fldiv@rem
 17199   005CE4  C088  F094         	movff	___fldiv@b+1,___fldiv@rem+1
 17200   005CE8  C089  F095         	movff	___fldiv@b+2,___fldiv@rem+2
 17201   005CEC  C08A  F096         	movff	___fldiv@b+3,___fldiv@rem+3
 17202   005CF0                     
 17203                           ; BSR set to: 0
 17204   005CF0  0E00               	movlw	0
 17205   005CF2  6F87               	movwf	___fldiv@b& (0+255),b
 17206   005CF4  0E00               	movlw	0
 17207   005CF6  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17208   005CF8  0E00               	movlw	0
 17209   005CFA  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17210   005CFC  0E00               	movlw	0
 17211   005CFE  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17212   005D00                     
 17213                           ; BSR set to: 0
 17214   005D00  0E00               	movlw	0
 17215   005D02  6F9A               	movwf	___fldiv@grs& (0+255),b
 17216   005D04  0E00               	movlw	0
 17217   005D06  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 17218   005D08  0E00               	movlw	0
 17219   005D0A  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 17220   005D0C  0E00               	movlw	0
 17221   005D0E  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 17222   005D10                     
 17223                           ; BSR set to: 0
 17224   005D10  0E00               	movlw	0
 17225   005D12  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17226   005D14  EFC4  F02E         	goto	l2852
 17227   005D18                     l11934:
 17228                           
 17229                           ; BSR set to: 0
 17230   005D18  519F               	movf	___fldiv@aexp& (0+255),w,b
 17231   005D1A  B4D8               	btfsc	status,2,c
 17232   005D1C  EF92  F02E         	goto	u13661
 17233   005D20  EF94  F02E         	goto	u13660
 17234   005D24                     u13661:
 17235   005D24  EFAB  F02E         	goto	l11942
 17236   005D28                     u13660:
 17237   005D28                     
 17238                           ; BSR set to: 0
 17239   005D28  90D8               	bcf	status,0,c
 17240   005D2A  3793               	rlcf	___fldiv@rem& (0+255),f,b
 17241   005D2C  3794               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 17242   005D2E  3795               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 17243   005D30  3796               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 17244   005D32  90D8               	bcf	status,0,c
 17245   005D34  3787               	rlcf	___fldiv@b& (0+255),f,b
 17246   005D36  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17247   005D38  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17248   005D3A  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17249   005D3C                     
 17250                           ; BSR set to: 0
 17251   005D3C  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17252   005D3E  EFA3  F02E         	goto	u13671
 17253   005D42  EFA5  F02E         	goto	u13670
 17254   005D46                     u13671:
 17255   005D46  EFA6  F02E         	goto	l2855
 17256   005D4A                     u13670:
 17257   005D4A                     
 17258                           ; BSR set to: 0
 17259   005D4A  8187               	bsf	___fldiv@b& (0+255),0,b
 17260   005D4C                     l2855:
 17261                           
 17262                           ; BSR set to: 0
 17263   005D4C  90D8               	bcf	status,0,c
 17264   005D4E  379A               	rlcf	___fldiv@grs& (0+255),f,b
 17265   005D50  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17266   005D52  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17267   005D54  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17268   005D56                     l11942:
 17269                           
 17270                           ; BSR set to: 0
 17271   005D56  518B               	movf	___fldiv@a& (0+255),w,b
 17272   005D58  5D93               	subwf	___fldiv@rem& (0+255),w,b
 17273   005D5A  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 17274   005D5C  5994               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17275   005D5E  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 17276   005D60  5995               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17277   005D62  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17278   005D64  5996               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17279   005D66  A0D8               	btfss	status,0,c
 17280   005D68  EFB8  F02E         	goto	u13681
 17281   005D6C  EFBA  F02E         	goto	u13680
 17282   005D70                     u13681:
 17283   005D70  EFC3  F02E         	goto	l11948
 17284   005D74                     u13680:
 17285   005D74                     
 17286                           ; BSR set to: 0
 17287   005D74  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17288   005D76                     
 17289                           ; BSR set to: 0
 17290   005D76  518B               	movf	___fldiv@a& (0+255),w,b
 17291   005D78  5F93               	subwf	___fldiv@rem& (0+255),f,b
 17292   005D7A  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 17293   005D7C  5B94               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17294   005D7E  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 17295   005D80  5B95               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17296   005D82  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17297   005D84  5B96               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17298   005D86                     l11948:
 17299                           
 17300                           ; BSR set to: 0
 17301   005D86  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 17302   005D88                     l2852:
 17303                           
 17304                           ; BSR set to: 0
 17305   005D88  0E19               	movlw	25
 17306   005D8A  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 17307   005D8C  EFCA  F02E         	goto	u13691
 17308   005D90  EFCC  F02E         	goto	u13690
 17309   005D94                     u13691:
 17310   005D94  EF8C  F02E         	goto	l11934
 17311   005D98                     u13690:
 17312   005D98                     
 17313                           ; BSR set to: 0
 17314   005D98  5193               	movf	___fldiv@rem& (0+255),w,b
 17315   005D9A  1194               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17316   005D9C  1195               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17317   005D9E  1196               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17318   005DA0  B4D8               	btfsc	status,2,c
 17319   005DA2  EFD5  F02E         	goto	u13701
 17320   005DA6  EFD7  F02E         	goto	u13700
 17321   005DAA                     u13701:
 17322   005DAA  EFEF  F02E         	goto	l11960
 17323   005DAE                     u13700:
 17324   005DAE                     
 17325                           ; BSR set to: 0
 17326   005DAE  819A               	bsf	___fldiv@grs& (0+255),0,b
 17327   005DB0  EFEF  F02E         	goto	l11960
 17328   005DB4                     l11954:
 17329                           
 17330                           ; BSR set to: 0
 17331   005DB4  90D8               	bcf	status,0,c
 17332   005DB6  3787               	rlcf	___fldiv@b& (0+255),f,b
 17333   005DB8  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17334   005DBA  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17335   005DBC  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17336   005DBE                     
 17337                           ; BSR set to: 0
 17338   005DBE  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17339   005DC0  EFE4  F02E         	goto	u13711
 17340   005DC4  EFE6  F02E         	goto	u13710
 17341   005DC8                     u13711:
 17342   005DC8  EFE7  F02E         	goto	l2861
 17343   005DCC                     u13710:
 17344   005DCC                     
 17345                           ; BSR set to: 0
 17346   005DCC  8187               	bsf	___fldiv@b& (0+255),0,b
 17347   005DCE                     l2861:
 17348                           
 17349                           ; BSR set to: 0
 17350   005DCE  90D8               	bcf	status,0,c
 17351   005DD0  379A               	rlcf	___fldiv@grs& (0+255),f,b
 17352   005DD2  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17353   005DD4  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17354   005DD6  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17355   005DD8  0798               	decf	___fldiv@new_exp& (0+255),f,b
 17356   005DDA  A0D8               	btfss	status,0,c
 17357   005DDC  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17358   005DDE                     l11960:
 17359                           
 17360                           ; BSR set to: 0
 17361   005DDE  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 17362   005DE0  EFF4  F02E         	goto	u13721
 17363   005DE4  EFF6  F02E         	goto	u13720
 17364   005DE8                     u13721:
 17365   005DE8  EFDA  F02E         	goto	l11954
 17366   005DEC                     u13720:
 17367   005DEC                     
 17368                           ; BSR set to: 0
 17369   005DEC  0E00               	movlw	0
 17370   005DEE  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17371   005DF0                     
 17372                           ; BSR set to: 0
 17373   005DF0  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17374   005DF2  EFFD  F02E         	goto	u13731
 17375   005DF6  EFFF  F02E         	goto	u13730
 17376   005DFA                     u13731:
 17377   005DFA  EF23  F02F         	goto	l2863
 17378   005DFE                     u13730:
 17379   005DFE                     
 17380                           ; BSR set to: 0
 17381   005DFE  0EFF               	movlw	255
 17382   005E00  159A               	andwf	___fldiv@grs& (0+255),w,b
 17383   005E02  6F8F               	movwf	??___fldiv& (0+255),b
 17384   005E04  0EFF               	movlw	255
 17385   005E06  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17386   005E08  6F90               	movwf	(??___fldiv+1)& (0+255),b
 17387   005E0A  0EFF               	movlw	255
 17388   005E0C  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17389   005E0E  6F91               	movwf	(??___fldiv+2)& (0+255),b
 17390   005E10  0E7F               	movlw	127
 17391   005E12  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17392   005E14  6F92               	movwf	(??___fldiv+3)& (0+255),b
 17393   005E16  518F               	movf	??___fldiv& (0+255),w,b
 17394   005E18  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 17395   005E1A  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 17396   005E1C  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 17397   005E1E  B4D8               	btfsc	status,2,c
 17398   005E20  EF14  F02F         	goto	u13741
 17399   005E24  EF16  F02F         	goto	u13740
 17400   005E28                     u13741:
 17401   005E28  EF1A  F02F         	goto	l2864
 17402   005E2C                     u13740:
 17403   005E2C                     l11968:
 17404                           
 17405                           ; BSR set to: 0
 17406   005E2C  0E01               	movlw	1
 17407   005E2E  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17408   005E30  EF23  F02F         	goto	l2863
 17409   005E34                     l2864:
 17410                           
 17411                           ; BSR set to: 0
 17412   005E34  A187               	btfss	___fldiv@b& (0+255),0,b
 17413   005E36  EF1F  F02F         	goto	u13751
 17414   005E3A  EF21  F02F         	goto	u13750
 17415   005E3E                     u13751:
 17416   005E3E  EF23  F02F         	goto	l2863
 17417   005E42                     u13750:
 17418   005E42  EF16  F02F         	goto	l11968
 17419   005E46                     l2863:
 17420                           
 17421                           ; BSR set to: 0
 17422   005E46  519F               	movf	___fldiv@aexp& (0+255),w,b
 17423   005E48  B4D8               	btfsc	status,2,c
 17424   005E4A  EF29  F02F         	goto	u13761
 17425   005E4E  EF2B  F02F         	goto	u13760
 17426   005E52                     u13761:
 17427   005E52  EF4F  F02F         	goto	l11980
 17428   005E56                     u13760:
 17429   005E56                     
 17430                           ; BSR set to: 0
 17431   005E56  0E01               	movlw	1
 17432   005E58  2787               	addwf	___fldiv@b& (0+255),f,b
 17433   005E5A  0E00               	movlw	0
 17434   005E5C  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17435   005E5E  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17436   005E60  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17437   005E62                     
 17438                           ; BSR set to: 0
 17439   005E62  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 17440   005E64  EF36  F02F         	goto	u13771
 17441   005E68  EF38  F02F         	goto	u13770
 17442   005E6C                     u13771:
 17443   005E6C  EF4F  F02F         	goto	l11980
 17444   005E70                     u13770:
 17445   005E70                     
 17446                           ; BSR set to: 0
 17447   005E70  C087  F08F         	movff	___fldiv@b,??___fldiv
 17448   005E74  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 17449   005E78  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 17450   005E7C  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 17451   005E80  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 17452   005E82  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 17453   005E84  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 17454   005E86  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 17455   005E88  338F               	rrcf	??___fldiv& (0+255),f,b
 17456   005E8A  C08F  F087         	movff	??___fldiv,___fldiv@b
 17457   005E8E  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 17458   005E92  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 17459   005E96  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 17460   005E9A                     
 17461                           ; BSR set to: 0
 17462   005E9A  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 17463   005E9C  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17464   005E9E                     l11980:
 17465                           
 17466                           ; BSR set to: 0
 17467   005E9E  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17468   005EA0  EF5A  F02F         	goto	u13781
 17469   005EA4  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17470   005EA6  E108               	bnz	u13780
 17471   005EA8  2998               	incf	___fldiv@new_exp& (0+255),w,b
 17472   005EAA  A0D8               	btfss	status,0,c
 17473   005EAC  EF5A  F02F         	goto	u13781
 17474   005EB0  EF5C  F02F         	goto	u13780
 17475   005EB4                     u13781:
 17476   005EB4  EF67  F02F         	goto	l11984
 17477   005EB8                     u13780:
 17478   005EB8                     
 17479                           ; BSR set to: 0
 17480   005EB8  0E00               	movlw	0
 17481   005EBA  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17482   005EBC  6998               	setf	___fldiv@new_exp& (0+255),b
 17483   005EBE  0E00               	movlw	0
 17484   005EC0  6F87               	movwf	___fldiv@b& (0+255),b
 17485   005EC2  0E00               	movlw	0
 17486   005EC4  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17487   005EC6  0E00               	movlw	0
 17488   005EC8  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17489   005ECA  0E00               	movlw	0
 17490   005ECC  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17491   005ECE                     l11984:
 17492                           
 17493                           ; BSR set to: 0
 17494   005ECE  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17495   005ED0  EF74  F02F         	goto	u13790
 17496   005ED4  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17497   005ED6  E106               	bnz	u13791
 17498   005ED8  0598               	decf	___fldiv@new_exp& (0+255),w,b
 17499   005EDA  B0D8               	btfsc	status,0,c
 17500   005EDC  EF72  F02F         	goto	u13791
 17501   005EE0  EF74  F02F         	goto	u13790
 17502   005EE4                     u13791:
 17503   005EE4  EF82  F02F         	goto	l11988
 17504   005EE8                     u13790:
 17505   005EE8                     
 17506                           ; BSR set to: 0
 17507   005EE8  0E00               	movlw	0
 17508   005EEA  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17509   005EEC  0E00               	movlw	0
 17510   005EEE  6F98               	movwf	___fldiv@new_exp& (0+255),b
 17511   005EF0  0E00               	movlw	0
 17512   005EF2  6F87               	movwf	___fldiv@b& (0+255),b
 17513   005EF4  0E00               	movlw	0
 17514   005EF6  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17515   005EF8  0E00               	movlw	0
 17516   005EFA  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17517   005EFC  0E00               	movlw	0
 17518   005EFE  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17519   005F00  0E00               	movlw	0
 17520   005F02  6F97               	movwf	___fldiv@sign& (0+255),b
 17521   005F04                     l11988:
 17522                           
 17523                           ; BSR set to: 0
 17524   005F04  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 17525   005F08                     
 17526                           ; BSR set to: 0
 17527   005F08  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 17528   005F0A  EF89  F02F         	goto	u13801
 17529   005F0E  EF8B  F02F         	goto	u13800
 17530   005F12                     u13801:
 17531   005F12  EF8E  F02F         	goto	l11994
 17532   005F16                     u13800:
 17533   005F16                     
 17534                           ; BSR set to: 0
 17535   005F16  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 17536   005F18  EF8F  F02F         	goto	l11996
 17537   005F1C                     l11994:
 17538                           
 17539                           ; BSR set to: 0
 17540   005F1C  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 17541   005F1E                     l11996:
 17542                           
 17543                           ; BSR set to: 0
 17544   005F1E  90D8               	bcf	status,0,c
 17545   005F20  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 17546   005F22  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17547   005F24  EF45  F02E         	goto	l11910
 17548   005F28                     l2850:
 17549                           
 17550                           ; BSR set to: 0
 17551   005F28  0012               	return		;funcret
 17552   005F2A                     __end_of___fldiv:
 17553                           	callstack 0
 17554                           
 17555 ;; *************** function _fxls_init *****************
 17556 ;; Defined at:
 17557 ;;		line 8 in file "fxls8974cf.c"
 17558 ;; Parameters:    Size  Location     Type
 17559 ;;		None
 17560 ;; Auto vars:     Size  Location     Type
 17561 ;;  sys_mode        1   12[BANK0 ] volatile unsigned char 
 17562 ;;  sens_config4    1    0        unsigned char 
 17563 ;;  int_pin_sel     1    0        unsigned char 
 17564 ;;  int_en          1    0        unsigned char 
 17565 ;;  sens_config3    1    0        unsigned char 
 17566 ;;  buf_config1     1    0        unsigned char 
 17567 ;;  sens_config2    1    0        unsigned char 
 17568 ;;  sens_config1    1    0        unsigned char 
 17569 ;; Return value:  Size  Location     Type
 17570 ;;                  1    wreg      void 
 17571 ;; Registers used:
 17572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17573 ;; Tracked objects:
 17574 ;;		On entry : 0/0
 17575 ;;		On exit  : 0/0
 17576 ;;		Unchanged: 0/0
 17577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;Total ram usage:        1 bytes
 17583 ;; Hardware stack levels used: 1
 17584 ;; Hardware stack levels required when called: 7
 17585 ;; This function calls:
 17586 ;;		_i2c_read_reg8
 17587 ;;		_i2c_write_reg8
 17588 ;; This function is called by:
 17589 ;;		_main
 17590 ;; This function uses a non-reentrant model
 17591 ;;
 17592                           
 17593                           	psect	text63
 17594   00953E                     __ptext63:
 17595                           	callstack 0
 17596   00953E                     _fxls_init:
 17597                           	callstack 23
 17598   00953E                     
 17599                           ;fxls8974cf.c: 17:     i2c_write_reg8(0x18, 0x15, sens_config1);
 17600   00953E  0E15               	movlw	21
 17601   009540  0100               	movlb	0	; () banked
 17602   009542  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17603   009544  0E21               	movlw	33
 17604   009546  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17605   009548  0E18               	movlw	24
 17606   00954A  EC2B  F051         	call	_i2c_write_reg8
 17607   00954E                     
 17608                           ;fxls8974cf.c: 19:     volatile uint8_t sys_mode;;fxls8974cf.c: 20:     i2c_read_reg8(0x
      +                          18, 0x14, &sys_mode);
 17609   00954E  0E14               	movlw	20
 17610   009550  0100               	movlb	0	; () banked
 17611   009552  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17612   009554  0E6C               	movlw	low fxls_init@sys_mode
 17613   009556  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17614   009558  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17615   00955A  0E18               	movlw	24
 17616   00955C  EC5A  F04D         	call	_i2c_read_reg8
 17617   009560                     
 17618                           ;fxls8974cf.c: 29:     i2c_write_reg8(0x18, 0x16, sens_config2);
 17619   009560  0E16               	movlw	22
 17620   009562  0100               	movlb	0	; () banked
 17621   009564  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17622   009566  0E40               	movlw	64
 17623   009568  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17624   00956A  0E18               	movlw	24
 17625   00956C  EC2B  F051         	call	_i2c_write_reg8
 17626   009570                     
 17627                           ;fxls8974cf.c: 36:     i2c_write_reg8(0x18, 0x26, buf_config1);
 17628   009570  0E26               	movlw	38
 17629   009572  0100               	movlb	0	; () banked
 17630   009574  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17631   009576  0EA0               	movlw	160
 17632   009578  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17633   00957A  0E18               	movlw	24
 17634   00957C  EC2B  F051         	call	_i2c_write_reg8
 17635   009580                     
 17636                           ;fxls8974cf.c: 42:     i2c_write_reg8(0x18, 0x17, sens_config3);
 17637   009580  0E17               	movlw	23
 17638   009582  0100               	movlb	0	; () banked
 17639   009584  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17640   009586  0E5F               	movlw	95
 17641   009588  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17642   00958A  0E18               	movlw	24
 17643   00958C  EC2B  F051         	call	_i2c_write_reg8
 17644   009590                     
 17645                           ;fxls8974cf.c: 54:     i2c_write_reg8(0x18, 0x20, int_en);
 17646   009590  0E20               	movlw	32
 17647   009592  0100               	movlb	0	; () banked
 17648   009594  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17649   009596  0E80               	movlw	128
 17650   009598  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17651   00959A  0E18               	movlw	24
 17652   00959C  EC2B  F051         	call	_i2c_write_reg8
 17653   0095A0                     
 17654                           ;fxls8974cf.c: 66:     i2c_write_reg8(0x18, 0x21, int_pin_sel);
 17655   0095A0  0E21               	movlw	33
 17656   0095A2  0100               	movlb	0	; () banked
 17657   0095A4  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17658   0095A6  0E80               	movlw	128
 17659   0095A8  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17660   0095AA  0E18               	movlw	24
 17661   0095AC  EC2B  F051         	call	_i2c_write_reg8
 17662   0095B0                     
 17663                           ;fxls8974cf.c: 79:     i2c_write_reg8(0x18, 0x18, sens_config4);
 17664   0095B0  0E18               	movlw	24
 17665   0095B2  0100               	movlb	0	; () banked
 17666   0095B4  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17667   0095B6  0E01               	movlw	1
 17668   0095B8  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17669   0095BA  0E18               	movlw	24
 17670   0095BC  EC2B  F051         	call	_i2c_write_reg8
 17671   0095C0  0012               	return		;funcret
 17672   0095C2                     __end_of_fxls_init:
 17673                           	callstack 0
 17674                           
 17675 ;; *************** function _i2c_write_reg8 *****************
 17676 ;; Defined at:
 17677 ;;		line 107 in file "rocketlib/pic18f26k83/i2c.c"
 17678 ;; Parameters:    Size  Location     Type
 17679 ;;  address         1    wreg     unsigned char 
 17680 ;;  reg             1    6[BANK0 ] unsigned char 
 17681 ;;  val             1    7[BANK0 ] unsigned char 
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;  address         1    8[BANK0 ] unsigned char 
 17684 ;;  data            2    9[BANK0 ] unsigned char [2]
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      _Bool 
 17687 ;; Registers used:
 17688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : 0/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17695 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17697 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17698 ;;Total ram usage:        5 bytes
 17699 ;; Hardware stack levels used: 1
 17700 ;; Hardware stack levels required when called: 6
 17701 ;; This function calls:
 17702 ;;		_i2c_write
 17703 ;; This function is called by:
 17704 ;;		_fxls_init
 17705 ;; This function uses a non-reentrant model
 17706 ;;
 17707                           
 17708                           	psect	text64
 17709   00A256                     __ptext64:
 17710                           	callstack 0
 17711   00A256                     _i2c_write_reg8:
 17712                           	callstack 23
 17713                           
 17714                           ;incstack = 0
 17715                           ;i2c_write_reg8@address stored from wreg
 17716   00A256  0100               	movlb	0	; () banked
 17717   00A258  6F68               	movwf	i2c_write_reg8@address& (0+255),b
 17718   00A25A                     
 17719                           ;rocketlib/pic18f26k83/i2c.c: 108:     uint8_t data[2] = {reg, val};
 17720   00A25A  0E00               	movlw	0
 17721   00A25C  0100               	movlb	0	; () banked
 17722   00A25E  6F6A               	movwf	(i2c_write_reg8@data+1)& (0+255),b
 17723   00A260  0E00               	movlw	0
 17724   00A262  6F69               	movwf	i2c_write_reg8@data& (0+255),b
 17725   00A264                     
 17726                           ; BSR set to: 0
 17727   00A264  C066  F069         	movff	i2c_write_reg8@reg,i2c_write_reg8@data
 17728   00A268                     
 17729                           ; BSR set to: 0
 17730   00A268  C067  F06A         	movff	i2c_write_reg8@val,i2c_write_reg8@data+1
 17731   00A26C                     
 17732                           ; BSR set to: 0
 17733                           ;rocketlib/pic18f26k83/i2c.c: 109:     return i2c_write(address, data, 2);;	Return value
      +                           of _i2c_write_reg8 is never used
 17734   00A26C  0E69               	movlw	low i2c_write_reg8@data
 17735   00A26E  6F60               	movwf	i2c_write@data& (0+255),b
 17736   00A270  0E02               	movlw	2
 17737   00A272  6F61               	movwf	i2c_write@len& (0+255),b
 17738   00A274  5168               	movf	i2c_write_reg8@address& (0+255),w,b
 17739   00A276  EC74  F042         	call	_i2c_write
 17740   00A27A  0012               	return		;funcret
 17741   00A27C                     __end_of_i2c_write_reg8:
 17742                           	callstack 0
 17743                           
 17744 ;; *************** function _fxls_get_whoami *****************
 17745 ;; Defined at:
 17746 ;;		line 89 in file "fxls8974cf.c"
 17747 ;; Parameters:    Size  Location     Type
 17748 ;;		None
 17749 ;; Auto vars:     Size  Location     Type
 17750 ;;  res             1   12[BANK0 ] unsigned char 
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  1    wreg      unsigned char 
 17753 ;; Registers used:
 17754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17763 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17764 ;;Total ram usage:        1 bytes
 17765 ;; Hardware stack levels used: 1
 17766 ;; Hardware stack levels required when called: 7
 17767 ;; This function calls:
 17768 ;;		_i2c_read_reg8
 17769 ;; This function is called by:
 17770 ;;		_main
 17771 ;; This function uses a non-reentrant model
 17772 ;;
 17773                           
 17774                           	psect	text65
 17775   00A3AC                     __ptext65:
 17776                           	callstack 0
 17777   00A3AC                     _fxls_get_whoami:
 17778                           	callstack 23
 17779   00A3AC                     
 17780                           ;fxls8974cf.c: 90:     uint8_t res;;fxls8974cf.c: 91:     i2c_read_reg8(0x18, 0x13, &res
      +                          );
 17781   00A3AC  0E13               	movlw	19
 17782   00A3AE  0100               	movlb	0	; () banked
 17783   00A3B0  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17784   00A3B2  0E6C               	movlw	low fxls_get_whoami@res
 17785   00A3B4  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17786   00A3B6  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17787   00A3B8  0E18               	movlw	24
 17788   00A3BA  EC5A  F04D         	call	_i2c_read_reg8
 17789   00A3BE                     
 17790                           ;fxls8974cf.c: 92:     return res;
 17791   00A3BE  0100               	movlb	0	; () banked
 17792   00A3C0  516C               	movf	fxls_get_whoami@res& (0+255),w,b
 17793   00A3C2                     
 17794                           ; BSR set to: 0
 17795   00A3C2  0012               	return		;funcret
 17796   00A3C4                     __end_of_fxls_get_whoami:
 17797                           	callstack 0
 17798                           
 17799 ;; *************** function _fxls_get_prod_rev *****************
 17800 ;; Defined at:
 17801 ;;		line 83 in file "fxls8974cf.c"
 17802 ;; Parameters:    Size  Location     Type
 17803 ;;		None
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;  res             1   12[BANK0 ] unsigned char 
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  1    wreg      unsigned char 
 17808 ;; Registers used:
 17809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17819 ;;Total ram usage:        1 bytes
 17820 ;; Hardware stack levels used: 1
 17821 ;; Hardware stack levels required when called: 7
 17822 ;; This function calls:
 17823 ;;		_i2c_read_reg8
 17824 ;; This function is called by:
 17825 ;;		_main
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829                           	psect	text66
 17830   00A3C4                     __ptext66:
 17831                           	callstack 0
 17832   00A3C4                     _fxls_get_prod_rev:
 17833                           	callstack 23
 17834   00A3C4                     
 17835                           ;fxls8974cf.c: 84:     uint8_t res;;fxls8974cf.c: 85:     i2c_read_reg8(0x18, 0x12, &res
      +                          );
 17836   00A3C4  0E12               	movlw	18
 17837   00A3C6  0100               	movlb	0	; () banked
 17838   00A3C8  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17839   00A3CA  0E6C               	movlw	low fxls_get_prod_rev@res
 17840   00A3CC  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17841   00A3CE  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17842   00A3D0  0E18               	movlw	24
 17843   00A3D2  EC5A  F04D         	call	_i2c_read_reg8
 17844   00A3D6                     
 17845                           ;fxls8974cf.c: 86:     return res;
 17846   00A3D6  0100               	movlb	0	; () banked
 17847   00A3D8  516C               	movf	fxls_get_prod_rev@res& (0+255),w,b
 17848   00A3DA                     
 17849                           ; BSR set to: 0
 17850   00A3DA  0012               	return		;funcret
 17851   00A3DC                     __end_of_fxls_get_prod_rev:
 17852                           	callstack 0
 17853                           
 17854 ;; *************** function _i2c_read_reg8 *****************
 17855 ;; Defined at:
 17856 ;;		line 117 in file "rocketlib/pic18f26k83/i2c.c"
 17857 ;; Parameters:    Size  Location     Type
 17858 ;;  address         1    wreg     unsigned char 
 17859 ;;  reg             1    6[BANK0 ] unsigned char 
 17860 ;;  value           2    7[BANK0 ] PTR unsigned char 
 17861 ;;		 -> fxls_read_accel_data@status(1), fxls_read_accel_data@z_msb(1), fxls_read_accel_data@z_lsb(1), fxls_read_accel_da
      +ta@y_msb(1), 
 17862 ;;		 -> fxls_read_accel_data@y_lsb(1), fxls_read_accel_data@x_msb(1), fxls_read_accel_data@x_lsb(1), data_ready@status(1
      +), 
 17863 ;;		 -> fxls_get_whoami@res(1), fxls_get_prod_rev@res(1), fxls_init@sys_mode(1), main@buf_status(1), 
 17864 ;;		 -> main@sys_mode(1), 
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;  address         1    9[BANK0 ] unsigned char 
 17867 ;;  data            1   11[BANK0 ] unsigned char 
 17868 ;;  success         1   10[BANK0 ] _Bool 
 17869 ;; Return value:  Size  Location     Type
 17870 ;;                  1    wreg      _Bool 
 17871 ;; Registers used:
 17872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17873 ;; Tracked objects:
 17874 ;;		On entry : 0/0
 17875 ;;		On exit  : 0/0
 17876 ;;		Unchanged: 0/0
 17877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17878 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17879 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17882 ;;Total ram usage:        6 bytes
 17883 ;; Hardware stack levels used: 1
 17884 ;; Hardware stack levels required when called: 6
 17885 ;; This function calls:
 17886 ;;		_i2c_read
 17887 ;;		_i2c_write
 17888 ;; This function is called by:
 17889 ;;		_main
 17890 ;;		_fxls_init
 17891 ;;		_fxls_get_prod_rev
 17892 ;;		_fxls_get_whoami
 17893 ;;		_fxls_read_accel_data
 17894 ;;		_data_ready
 17895 ;; This function uses a non-reentrant model
 17896 ;;
 17897                           
 17898                           	psect	text67
 17899   009AB4                     __ptext67:
 17900                           	callstack 0
 17901   009AB4                     _i2c_read_reg8:
 17902                           	callstack 24
 17903                           
 17904                           ; BSR set to: 0
 17905                           ;incstack = 0
 17906                           ;i2c_read_reg8@address stored from wreg
 17907   009AB4  0100               	movlb	0	; () banked
 17908   009AB6  6F69               	movwf	i2c_read_reg8@address& (0+255),b
 17909   009AB8                     
 17910                           ;rocketlib/pic18f26k83/i2c.c: 118:     _Bool success = i2c_write(address, &reg, 1);
 17911   009AB8  0E66               	movlw	low i2c_read_reg8@reg
 17912   009ABA  0100               	movlb	0	; () banked
 17913   009ABC  6F60               	movwf	i2c_write@data& (0+255),b
 17914   009ABE  0E01               	movlw	1
 17915   009AC0  6F61               	movwf	i2c_write@len& (0+255),b
 17916   009AC2  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 17917   009AC4  EC74  F042         	call	_i2c_write
 17918   009AC8  0100               	movlb	0	; () banked
 17919   009ACA  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 17920   009ACC                     
 17921                           ; BSR set to: 0
 17922                           ;rocketlib/pic18f26k83/i2c.c: 119:     if (!success) {
 17923   009ACC  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 17924   009ACE  A4D8               	btfss	status,2,c
 17925   009AD0  EF6C  F04D         	goto	u21641
 17926   009AD4  EF6E  F04D         	goto	u21640
 17927   009AD8                     u21641:
 17928   009AD8  EF70  F04D         	goto	l17414
 17929   009ADC                     u21640:
 17930   009ADC  EF8C  F04D         	goto	l2032
 17931   009AE0                     l17414:
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;rocketlib/pic18f26k83/i2c.c: 123:     uint8_t data;;rocketlib/pic18f26k83/i2c.c: 124:  
      +                             success = i2c_read(address, &data, 1);
 17935   009AE0  0E6B               	movlw	low i2c_read_reg8@data
 17936   009AE2  6F60               	movwf	i2c_read@data& (0+255),b
 17937   009AE4  0E01               	movlw	1
 17938   009AE6  6F61               	movwf	i2c_read@len& (0+255),b
 17939   009AE8  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 17940   009AEA  ECF6  F042         	call	_i2c_read
 17941   009AEE  0100               	movlb	0	; () banked
 17942   009AF0  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 17943   009AF2                     
 17944                           ; BSR set to: 0
 17945                           ;rocketlib/pic18f26k83/i2c.c: 125:     if (!success) {
 17946   009AF2  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 17947   009AF4  A4D8               	btfss	status,2,c
 17948   009AF6  EF7F  F04D         	goto	u21651
 17949   009AFA  EF81  F04D         	goto	u21650
 17950   009AFE                     u21651:
 17951   009AFE  EF83  F04D         	goto	l17420
 17952   009B02                     u21650:
 17953   009B02  EF8C  F04D         	goto	l2032
 17954   009B06                     l17420:
 17955                           
 17956                           ; BSR set to: 0
 17957                           ;rocketlib/pic18f26k83/i2c.c: 128:     *value = data;
 17958   009B06  0060  F19F  FFD9   	movff	i2c_read_reg8@value,fsr2l
 17959   009B0C  0060  F1A3  FFDA   	movff	i2c_read_reg8@value+1,fsr2h
 17960   009B12  0060  F1AF  FFDF   	movff	i2c_read_reg8@data,indf2
 17961   009B18                     l2032:
 17962                           
 17963                           ; BSR set to: 0
 17964   009B18  0012               	return		;funcret
 17965   009B1A                     __end_of_i2c_read_reg8:
 17966                           	callstack 0
 17967                           
 17968 ;; *************** function _i2c_write *****************
 17969 ;; Defined at:
 17970 ;;		line 28 in file "rocketlib/pic18f26k83/i2c.c"
 17971 ;; Parameters:    Size  Location     Type
 17972 ;;  address         1    wreg     unsigned char 
 17973 ;;  data            1    0[BANK0 ] PTR const unsigned char 
 17974 ;;		 -> read_flow_sensor_data@stop_cmd(2), read_flow_sensor_data@start_cmd(2), i2c_read_reg16@reg(1), i2c_read_reg8@reg(
      +1), 
 17975 ;;		 -> i2c_write_reg16@data(3), i2c_write_reg8@data(2), 
 17976 ;;  len             1    1[BANK0 ] unsigned char 
 17977 ;; Auto vars:     Size  Location     Type
 17978 ;;  address         1    3[BANK0 ] unsigned char 
 17979 ;;  timeout         2    4[BANK0 ] unsigned int 
 17980 ;; Return value:  Size  Location     Type
 17981 ;;                  1    wreg      _Bool 
 17982 ;; Registers used:
 17983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17990 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17992 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17993 ;;Total ram usage:        6 bytes
 17994 ;; Hardware stack levels used: 1
 17995 ;; Hardware stack levels required when called: 5
 17996 ;; This function calls:
 17997 ;;		Nothing
 17998 ;; This function is called by:
 17999 ;;		_i2c_write_reg8
 18000 ;;		_i2c_read_reg8
 18001 ;;		_i2c_write_data
 18002 ;;		_i2c_write_reg16
 18003 ;;		_i2c_read_reg16
 18004 ;;		_read_flow_sensor_data
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text68
 18009   0084E8                     __ptext68:
 18010                           	callstack 0
 18011   0084E8                     _i2c_write:
 18012                           	callstack 24
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;incstack = 0
 18016                           ;i2c_write@address stored from wreg
 18017   0084E8  0100               	movlb	0	; () banked
 18018   0084EA  6F63               	movwf	i2c_write@address& (0+255),b
 18019   0084EC                     
 18020                           ;rocketlib/pic18f26k83/i2c.c: 29:     I2C1ADB1 = (uint8_t)(address << 1);
 18021   0084EC  0100               	movlb	0	; () banked
 18022   0084EE  5163               	movf	i2c_write@address& (0+255),w,b
 18023   0084F0  2563               	addwf	i2c_write@address& (0+255),w,b
 18024   0084F2  013D               	movlb	61	; () banked
 18025   0084F4  6F6E               	movwf	110,b	;volatile
 18026   0084F6                     
 18027                           ; BSR set to: 61
 18028                           ;rocketlib/pic18f26k83/i2c.c: 30:     I2C1CNT = len;
 18029   0084F6  0060  F187  FD6C   	movff	i2c_write@len,15724	;volatile
 18030   0084FC                     
 18031                           ; BSR set to: 61
 18032                           ;rocketlib/pic18f26k83/i2c.c: 31:     I2C1PIRbits.PCIF = 0;
 18033   0084FC  9579               	bcf	121,2,b	;volatile
 18034   0084FE                     
 18035                           ; BSR set to: 61
 18036                           ;rocketlib/pic18f26k83/i2c.c: 32:     I2C1ERRbits.NACKIF = 0;
 18037   0084FE  9976               	bcf	118,4,b	;volatile
 18038   008500                     
 18039                           ; BSR set to: 61
 18040                           ;rocketlib/pic18f26k83/i2c.c: 33:     I2C1CON0bits.S = 1;
 18041   008500  8B73               	bsf	115,5,b	;volatile
 18042                           
 18043                           ;rocketlib/pic18f26k83/i2c.c: 35:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           36:     while (len--) {
 18044   008502  EFBA  F042         	goto	l16842
 18045   008506                     l16824:
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;rocketlib/pic18f26k83/i2c.c: 37:         I2C1TXB = *data++;
 18049   008506  5160               	movf	i2c_write@data& (0+255),w,b
 18050   008508  6ED9               	movwf	fsr2l,c
 18051   00850A  6ADA               	clrf	fsr2h,c
 18052   00850C  50DF               	movf	indf2,w,c
 18053   00850E  013D               	movlb	61	; () banked
 18054   008510  6F6B               	movwf	107,b	;volatile
 18055   008512                     
 18056                           ; BSR set to: 61
 18057   008512  0100               	movlb	0	; () banked
 18058   008514  2B60               	incf	i2c_write@data& (0+255),f,b
 18059   008516                     
 18060                           ; BSR set to: 0
 18061                           ;rocketlib/pic18f26k83/i2c.c: 38:         timeout = 0;
 18062   008516  0E00               	movlw	0
 18063   008518  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 18064   00851A  0E00               	movlw	0
 18065   00851C  6F64               	movwf	i2c_write@timeout& (0+255),b
 18066                           
 18067                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 18068   00851E  EFA1  F042         	goto	l16836
 18069   008522                     l16830:
 18070                           
 18071                           ; BSR set to: 61
 18072                           ;rocketlib/pic18f26k83/i2c.c: 40:             if (timeout >= 2000) {
 18073   008522  0ED0               	movlw	208
 18074   008524  0100               	movlb	0	; () banked
 18075   008526  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 18076   008528  0E07               	movlw	7
 18077   00852A  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 18078   00852C  A0D8               	btfss	status,0,c
 18079   00852E  EF9B  F042         	goto	u20631
 18080   008532  EF9D  F042         	goto	u20630
 18081   008536                     u20631:
 18082   008536  EF9F  F042         	goto	l16834
 18083   00853A                     u20630:
 18084   00853A  EFB0  F042         	goto	l1986
 18085   00853E                     l16834:
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;rocketlib/pic18f26k83/i2c.c: 43:             timeout++;
 18089   00853E  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 18090   008540  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 18091   008542                     l16836:
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 18095   008542  013D               	movlb	61	; () banked
 18096   008544  BB78               	btfsc	120,5,b	;volatile
 18097   008546  EFA7  F042         	goto	u20641
 18098   00854A  EFA9  F042         	goto	u20640
 18099   00854E                     u20641:
 18100   00854E  EFB0  F042         	goto	l1986
 18101   008552                     u20640:
 18102   008552                     
 18103                           ; BSR set to: 61
 18104   008552  A976               	btfss	118,4,b	;volatile
 18105   008554  EFAE  F042         	goto	u20651
 18106   008558  EFB0  F042         	goto	u20650
 18107   00855C                     u20651:
 18108   00855C  EF91  F042         	goto	l16830
 18109   008560                     u20650:
 18110   008560                     l1986:
 18111                           
 18112                           ;rocketlib/pic18f26k83/i2c.c: 45:         if (I2C1ERRbits.NACKIF) {
 18113   008560  013D               	movlb	61	; () banked
 18114   008562  A976               	btfss	118,4,b	;volatile
 18115   008564  EFB6  F042         	goto	u20661
 18116   008568  EFB8  F042         	goto	u20660
 18117   00856C                     u20661:
 18118   00856C  EFBA  F042         	goto	l16842
 18119   008570                     u20660:
 18120   008570  EFC4  F042         	goto	l16844
 18121   008574                     l16842:
 18122                           
 18123                           ; BSR set to: 61
 18124                           ;rocketlib/pic18f26k83/i2c.c: 36:     while (len--) {
 18125   008574  0100               	movlb	0	; () banked
 18126   008576  0761               	decf	i2c_write@len& (0+255),f,b
 18127   008578  2961               	incf	i2c_write@len& (0+255),w,b
 18128   00857A  A4D8               	btfss	status,2,c
 18129   00857C  EFC2  F042         	goto	u20671
 18130   008580  EFC4  F042         	goto	u20670
 18131   008584                     u20671:
 18132   008584  EF83  F042         	goto	l16824
 18133   008588                     u20670:
 18134   008588                     l16844:
 18135                           
 18136                           ;rocketlib/pic18f26k83/i2c.c: 50:     timeout = 0;
 18137   008588  0E00               	movlw	0
 18138   00858A  0100               	movlb	0	; () banked
 18139   00858C  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 18140   00858E  0E00               	movlw	0
 18141   008590  6F64               	movwf	i2c_write@timeout& (0+255),b
 18142                           
 18143                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 18144   008592  EFDB  F042         	goto	l16852
 18145   008596                     l16846:
 18146                           
 18147                           ; BSR set to: 61
 18148                           ;rocketlib/pic18f26k83/i2c.c: 52:         if (timeout >= 2000) {
 18149   008596  0ED0               	movlw	208
 18150   008598  0100               	movlb	0	; () banked
 18151   00859A  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 18152   00859C  0E07               	movlw	7
 18153   00859E  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 18154   0085A0  A0D8               	btfss	status,0,c
 18155   0085A2  EFD5  F042         	goto	u20681
 18156   0085A6  EFD7  F042         	goto	u20680
 18157   0085AA                     u20681:
 18158   0085AA  EFD9  F042         	goto	l16850
 18159   0085AE                     u20680:
 18160   0085AE  EFE3  F042         	goto	l1994
 18161   0085B2                     l16850:
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;rocketlib/pic18f26k83/i2c.c: 55:         timeout++;
 18165   0085B2  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 18166   0085B4  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 18167   0085B6                     l16852:
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 18171   0085B6  013D               	movlb	61	; () banked
 18172   0085B8  A579               	btfss	121,2,b	;volatile
 18173   0085BA  EFE1  F042         	goto	u20691
 18174   0085BE  EFE3  F042         	goto	u20690
 18175   0085C2                     u20691:
 18176   0085C2  EFCB  F042         	goto	l16846
 18177   0085C6                     u20690:
 18178   0085C6                     l1994:
 18179                           
 18180                           ;rocketlib/pic18f26k83/i2c.c: 58:     I2C1PIRbits.PCIF = 0;
 18181   0085C6  013D               	movlb	61	; () banked
 18182   0085C8  9579               	bcf	121,2,b	;volatile
 18183                           
 18184                           ;rocketlib/pic18f26k83/i2c.c: 59:     I2C1STAT1bits.CLRBF = 1;
 18185   0085CA  8578               	bsf	120,2,b	;volatile
 18186   0085CC                     
 18187                           ; BSR set to: 61
 18188                           ;rocketlib/pic18f26k83/i2c.c: 61:     return (I2C1ERR & 0x70) == 0;
 18189   0085CC  006F F5D8  F062    	movff	15734,??_i2c_write	;volatile
 18190   0085D2  0E70               	movlw	112
 18191   0085D4  0100               	movlb	0	; () banked
 18192   0085D6  1762               	andwf	??_i2c_write& (0+255),f,b
 18193   0085D8  B4D8               	btfsc	status,2,c
 18194   0085DA  EFF1  F042         	goto	u20701
 18195   0085DE  EFF4  F042         	goto	u20700
 18196   0085E2                     u20701:
 18197   0085E2  0E01               	movlw	1
 18198   0085E4  EFF5  F042         	goto	u20710
 18199   0085E8                     u20700:
 18200   0085E8  0E00               	movlw	0
 18201   0085EA                     u20710:
 18202   0085EA                     
 18203                           ; BSR set to: 0
 18204   0085EA  0012               	return		;funcret
 18205   0085EC                     __end_of_i2c_write:
 18206                           	callstack 0
 18207                           
 18208 ;; *************** function _i2c_read *****************
 18209 ;; Defined at:
 18210 ;;		line 64 in file "rocketlib/pic18f26k83/i2c.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  address         1    wreg     unsigned char 
 18213 ;;  data            1    0[BANK0 ] PTR unsigned char 
 18214 ;;		 -> read_flow_sensor_data@data(9), i2c_read_reg16@data(2), i2c_read_reg8@data(1), 
 18215 ;;  len             1    1[BANK0 ] unsigned char 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;  address         1    3[BANK0 ] unsigned char 
 18218 ;;  timeout         2    4[BANK0 ] unsigned int 
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  1    wreg      _Bool 
 18221 ;; Registers used:
 18222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18232 ;;Total ram usage:        6 bytes
 18233 ;; Hardware stack levels used: 1
 18234 ;; Hardware stack levels required when called: 5
 18235 ;; This function calls:
 18236 ;;		Nothing
 18237 ;; This function is called by:
 18238 ;;		_i2c_read_reg8
 18239 ;;		_i2c_read_data
 18240 ;;		_i2c_read_reg16
 18241 ;;		_read_flow_sensor_data
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           	psect	text69
 18246   0085EC                     __ptext69:
 18247                           	callstack 0
 18248   0085EC                     _i2c_read:
 18249                           	callstack 24
 18250                           
 18251                           ; BSR set to: 0
 18252                           ;incstack = 0
 18253                           ;i2c_read@address stored from wreg
 18254   0085EC  0100               	movlb	0	; () banked
 18255   0085EE  6F63               	movwf	i2c_read@address& (0+255),b
 18256   0085F0                     
 18257                           ;rocketlib/pic18f26k83/i2c.c: 65:     I2C1ADB1 = (uint8_t)((address << 1) | 1);
 18258   0085F0  80D8               	bsf	status,0,c
 18259   0085F2  0100               	movlb	0	; () banked
 18260   0085F4  3563               	rlcf	i2c_read@address& (0+255),w,b
 18261   0085F6  013D               	movlb	61	; () banked
 18262   0085F8  6F6E               	movwf	110,b	;volatile
 18263   0085FA                     
 18264                           ; BSR set to: 61
 18265                           ;rocketlib/pic18f26k83/i2c.c: 66:     I2C1CNT = len;
 18266   0085FA  0060  F187  FD6C   	movff	i2c_read@len,15724	;volatile
 18267   008600                     
 18268                           ; BSR set to: 61
 18269                           ;rocketlib/pic18f26k83/i2c.c: 67:     I2C1PIRbits.PCIF = 0;
 18270   008600  9579               	bcf	121,2,b	;volatile
 18271   008602                     
 18272                           ; BSR set to: 61
 18273                           ;rocketlib/pic18f26k83/i2c.c: 68:     I2C1ERRbits.NACKIF = 0;
 18274   008602  9976               	bcf	118,4,b	;volatile
 18275   008604                     
 18276                           ; BSR set to: 61
 18277                           ;rocketlib/pic18f26k83/i2c.c: 69:     I2C1CON0bits.S = 1;
 18278   008604  8B73               	bsf	115,5,b	;volatile
 18279                           
 18280                           ;rocketlib/pic18f26k83/i2c.c: 71:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           72:     while (len--) {
 18281   008606  EF3C  F043         	goto	l16886
 18282   00860A                     l16868:
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;rocketlib/pic18f26k83/i2c.c: 73:         timeout = 0;
 18286   00860A  0E00               	movlw	0
 18287   00860C  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 18288   00860E  0E00               	movlw	0
 18289   008610  6F64               	movwf	i2c_read@timeout& (0+255),b
 18290                           
 18291                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 18292   008612  EF1B  F043         	goto	l16876
 18293   008616                     l16870:
 18294                           
 18295                           ; BSR set to: 61
 18296                           ;rocketlib/pic18f26k83/i2c.c: 75:             if (timeout >= 2000) {
 18297   008616  0ED0               	movlw	208
 18298   008618  0100               	movlb	0	; () banked
 18299   00861A  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 18300   00861C  0E07               	movlw	7
 18301   00861E  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 18302   008620  A0D8               	btfss	status,0,c
 18303   008622  EF15  F043         	goto	u20721
 18304   008626  EF17  F043         	goto	u20720
 18305   00862A                     u20721:
 18306   00862A  EF19  F043         	goto	l16874
 18307   00862E                     u20720:
 18308   00862E  EF2A  F043         	goto	l2003
 18309   008632                     l16874:
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;rocketlib/pic18f26k83/i2c.c: 78:             timeout++;
 18313   008632  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 18314   008634  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 18315   008636                     l16876:
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 18319   008636  013D               	movlb	61	; () banked
 18320   008638  B178               	btfsc	120,0,b	;volatile
 18321   00863A  EF21  F043         	goto	u20731
 18322   00863E  EF23  F043         	goto	u20730
 18323   008642                     u20731:
 18324   008642  EF2A  F043         	goto	l2003
 18325   008646                     u20730:
 18326   008646                     
 18327                           ; BSR set to: 61
 18328   008646  A976               	btfss	118,4,b	;volatile
 18329   008648  EF28  F043         	goto	u20741
 18330   00864C  EF2A  F043         	goto	u20740
 18331   008650                     u20741:
 18332   008650  EF0B  F043         	goto	l16870
 18333   008654                     u20740:
 18334   008654                     l2003:
 18335                           
 18336                           ;rocketlib/pic18f26k83/i2c.c: 80:         if (I2C1ERRbits.NACKIF) {
 18337   008654  013D               	movlb	61	; () banked
 18338   008656  A976               	btfss	118,4,b	;volatile
 18339   008658  EF30  F043         	goto	u20751
 18340   00865C  EF32  F043         	goto	u20750
 18341   008660                     u20751:
 18342   008660  EF34  F043         	goto	l16882
 18343   008664                     u20750:
 18344   008664  EF46  F043         	goto	l16888
 18345   008668                     l16882:
 18346                           
 18347                           ; BSR set to: 61
 18348                           ;rocketlib/pic18f26k83/i2c.c: 83:         *data++ = I2C1RXB;
 18349   008668  0100               	movlb	0	; () banked
 18350   00866A  5160               	movf	i2c_read@data& (0+255),w,b
 18351   00866C  6ED9               	movwf	fsr2l,c
 18352   00866E  6ADA               	clrf	fsr2h,c
 18353   008670  006F F5AB FFDF     	movff	15722,indf2	;volatile
 18354   008676                     
 18355                           ; BSR set to: 0
 18356   008676  2B60               	incf	i2c_read@data& (0+255),f,b
 18357   008678                     l16886:
 18358                           
 18359                           ;rocketlib/pic18f26k83/i2c.c: 72:     while (len--) {
 18360   008678  0100               	movlb	0	; () banked
 18361   00867A  0761               	decf	i2c_read@len& (0+255),f,b
 18362   00867C  2961               	incf	i2c_read@len& (0+255),w,b
 18363   00867E  A4D8               	btfss	status,2,c
 18364   008680  EF44  F043         	goto	u20761
 18365   008684  EF46  F043         	goto	u20760
 18366   008688                     u20761:
 18367   008688  EF05  F043         	goto	l16868
 18368   00868C                     u20760:
 18369   00868C                     l16888:
 18370                           
 18371                           ;rocketlib/pic18f26k83/i2c.c: 86:     timeout = 0;
 18372   00868C  0E00               	movlw	0
 18373   00868E  0100               	movlb	0	; () banked
 18374   008690  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 18375   008692  0E00               	movlw	0
 18376   008694  6F64               	movwf	i2c_read@timeout& (0+255),b
 18377                           
 18378                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 18379   008696  EF5D  F043         	goto	l16896
 18380   00869A                     l16890:
 18381                           
 18382                           ; BSR set to: 61
 18383                           ;rocketlib/pic18f26k83/i2c.c: 88:         if (timeout >= 2000) {
 18384   00869A  0ED0               	movlw	208
 18385   00869C  0100               	movlb	0	; () banked
 18386   00869E  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 18387   0086A0  0E07               	movlw	7
 18388   0086A2  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 18389   0086A4  A0D8               	btfss	status,0,c
 18390   0086A6  EF57  F043         	goto	u20771
 18391   0086AA  EF59  F043         	goto	u20770
 18392   0086AE                     u20771:
 18393   0086AE  EF5B  F043         	goto	l16894
 18394   0086B2                     u20770:
 18395   0086B2  EF65  F043         	goto	l2011
 18396   0086B6                     l16894:
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;rocketlib/pic18f26k83/i2c.c: 91:         timeout++;
 18400   0086B6  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 18401   0086B8  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 18402   0086BA                     l16896:
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 18406   0086BA  013D               	movlb	61	; () banked
 18407   0086BC  A579               	btfss	121,2,b	;volatile
 18408   0086BE  EF63  F043         	goto	u20781
 18409   0086C2  EF65  F043         	goto	u20780
 18410   0086C6                     u20781:
 18411   0086C6  EF4D  F043         	goto	l16890
 18412   0086CA                     u20780:
 18413   0086CA                     l2011:
 18414                           
 18415                           ;rocketlib/pic18f26k83/i2c.c: 93:     I2C1PIRbits.PCIF = 0;
 18416   0086CA  013D               	movlb	61	; () banked
 18417   0086CC  9579               	bcf	121,2,b	;volatile
 18418                           
 18419                           ;rocketlib/pic18f26k83/i2c.c: 94:     I2C1STAT1bits.CLRBF = 1;
 18420   0086CE  8578               	bsf	120,2,b	;volatile
 18421   0086D0                     
 18422                           ; BSR set to: 61
 18423                           ;rocketlib/pic18f26k83/i2c.c: 96:     return (I2C1ERR & 0x60) == 0;
 18424   0086D0  006F F5D8  F062    	movff	15734,??_i2c_read	;volatile
 18425   0086D6  0E60               	movlw	96
 18426   0086D8  0100               	movlb	0	; () banked
 18427   0086DA  1762               	andwf	??_i2c_read& (0+255),f,b
 18428   0086DC  B4D8               	btfsc	status,2,c
 18429   0086DE  EF73  F043         	goto	u20791
 18430   0086E2  EF76  F043         	goto	u20790
 18431   0086E6                     u20791:
 18432   0086E6  0E01               	movlw	1
 18433   0086E8  EF77  F043         	goto	u20800
 18434   0086EC                     u20790:
 18435   0086EC  0E00               	movlw	0
 18436   0086EE                     u20800:
 18437   0086EE                     
 18438                           ; BSR set to: 0
 18439   0086EE  0012               	return		;funcret
 18440   0086F0                     __end_of_i2c_read:
 18441                           	callstack 0
 18442                           
 18443 ;; *************** function _f_mount *****************
 18444 ;; Defined at:
 18445 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;  fs              2  135[BANK0 ] PTR struct .
 18448 ;;		 -> FatFs(563), NULL(0), 
 18449 ;;  path            2  137[BANK0 ] PTR const unsigned char 
 18450 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 18451 ;;  opt             1  139[BANK0 ] unsigned char 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  vol             2  145[BANK0 ] int 
 18454 ;;  cfs             2  143[BANK0 ] PTR struct .
 18455 ;;		 -> FatFs(563), NULL(0), 
 18456 ;;  rp              2  141[BANK0 ] PTR const unsigned char 
 18457 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 18458 ;;  res             1  140[BANK0 ] enum E68
 18459 ;; Return value:  Size  Location     Type
 18460 ;;                  1    wreg      enum E68
 18461 ;; Registers used:
 18462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18463 ;; Tracked objects:
 18464 ;;		On entry : 0/0
 18465 ;;		On exit  : 0/0
 18466 ;;		Unchanged: 0/0
 18467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18468 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;Total ram usage:       12 bytes
 18473 ;; Hardware stack levels used: 1
 18474 ;; Hardware stack levels required when called: 14
 18475 ;; This function calls:
 18476 ;;		_find_volume
 18477 ;;		_get_ldnumber
 18478 ;; This function is called by:
 18479 ;;		_main
 18480 ;; This function uses a non-reentrant model
 18481 ;;
 18482                           
 18483                           	psect	text70
 18484   008BA2                     __ptext70:
 18485                           	callstack 0
 18486   008BA2                     _f_mount:
 18487                           	callstack 16
 18488   008BA2                     
 18489                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
 18490   008BA2  C0E9  F0ED         	movff	f_mount@path,f_mount@rp
 18491   008BA6  C0EA  F0EE         	movff	f_mount@path+1,f_mount@rp+1
 18492   008BAA                     
 18493                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 18494   008BAA  0EED               	movlw	low f_mount@rp
 18495   008BAC  0100               	movlb	0	; () banked
 18496   008BAE  6F60               	movwf	get_ldnumber@path& (0+255),b
 18497   008BB0  6B61               	clrf	(get_ldnumber@path+1)& (0+255),b
 18498   008BB2  EC40  F03C         	call	_get_ldnumber	;wreg free
 18499   008BB6  C060  F0F1         	movff	?_get_ldnumber,f_mount@vol
 18500   008BBA  C061  F0F2         	movff	?_get_ldnumber+1,f_mount@vol+1
 18501   008BBE                     
 18502                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 18503   008BBE  0100               	movlb	0	; () banked
 18504   008BC0  BFF2               	btfsc	(f_mount@vol+1)& (0+255),7,b
 18505   008BC2  EFE7  F045         	goto	u21910
 18506   008BC6  EFE5  F045         	goto	u21911
 18507   008BCA                     u21911:
 18508   008BCA  EFEA  F045         	goto	l17758
 18509   008BCE                     u21910:
 18510   008BCE                     
 18511                           ; BSR set to: 0
 18512   008BCE  0E0B               	movlw	11
 18513   008BD0  EF40  F046         	goto	l1277
 18514   008BD4                     l17758:
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 18518   008BD4  90D8               	bcf	status,0,c
 18519   008BD6  35F1               	rlcf	f_mount@vol& (0+255),w,b
 18520   008BD8  6ED9               	movwf	fsr2l,c
 18521   008BDA  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 18522   008BDC  6EDA               	movwf	fsr2h,c
 18523   008BDE  0EDF               	movlw	low _FatFs@ff$F2407
 18524   008BE0  26D9               	addwf	fsr2l,f,c
 18525   008BE2  0E01               	movlw	high _FatFs@ff$F2407
 18526   008BE4  22DA               	addwfc	fsr2h,f,c
 18527   008BE6  006F FF78  F0EF    	movff	postinc2,f_mount@cfs
 18528   008BEC  006F FF74  F0F0    	movff	postdec2,f_mount@cfs+1
 18529   008BF2                     
 18530                           ; BSR set to: 0
 18531                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 18532   008BF2  51EF               	movf	f_mount@cfs& (0+255),w,b
 18533   008BF4  11F0               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 18534   008BF6  B4D8               	btfsc	status,2,c
 18535   008BF8  EF00  F046         	goto	u21921
 18536   008BFC  EF02  F046         	goto	u21920
 18537   008C00                     u21921:
 18538   008C00  EF09  F046         	goto	l17764
 18539   008C04                     u21920:
 18540   008C04                     
 18541                           ; BSR set to: 0
 18542                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 18543   008C04  0060  F3BF  FFD9   	movff	f_mount@cfs,fsr2l
 18544   008C0A  0060  F3C3  FFDA   	movff	f_mount@cfs+1,fsr2h
 18545   008C10  6ADF               	clrf	indf2,c
 18546   008C12                     l17764:
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 18550   008C12  51E7               	movf	f_mount@fs& (0+255),w,b
 18551   008C14  11E8               	iorwf	(f_mount@fs+1)& (0+255),w,b
 18552   008C16  B4D8               	btfsc	status,2,c
 18553   008C18  EF10  F046         	goto	u21931
 18554   008C1C  EF12  F046         	goto	u21930
 18555   008C20                     u21931:
 18556   008C20  EF19  F046         	goto	l17768
 18557   008C24                     u21930:
 18558   008C24                     
 18559                           ; BSR set to: 0
 18560                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 18561   008C24  0060  F39F  FFD9   	movff	f_mount@fs,fsr2l
 18562   008C2A  0060  F3A3  FFDA   	movff	f_mount@fs+1,fsr2h
 18563   008C30  6ADF               	clrf	indf2,c
 18564   008C32                     l17768:
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 18568   008C32  90D8               	bcf	status,0,c
 18569   008C34  35F1               	rlcf	f_mount@vol& (0+255),w,b
 18570   008C36  6ED9               	movwf	fsr2l,c
 18571   008C38  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 18572   008C3A  6EDA               	movwf	fsr2h,c
 18573   008C3C  0EDF               	movlw	low _FatFs@ff$F2407
 18574   008C3E  26D9               	addwf	fsr2l,f,c
 18575   008C40  0E01               	movlw	high _FatFs@ff$F2407
 18576   008C42  22DA               	addwfc	fsr2h,f,c
 18577   008C44  0060  F39F  FFDE   	movff	f_mount@fs,postinc2
 18578   008C4A  0060  F3A3  FFDD   	movff	f_mount@fs+1,postdec2
 18579   008C50                     
 18580                           ; BSR set to: 0
 18581                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 18582   008C50  51EB               	movf	f_mount@opt& (0+255),w,b
 18583   008C52  A4D8               	btfss	status,2,c
 18584   008C54  EF2E  F046         	goto	u21941
 18585   008C58  EF30  F046         	goto	u21940
 18586   008C5C                     u21941:
 18587   008C5C  EF33  F046         	goto	l17776
 18588   008C60                     u21940:
 18589   008C60                     
 18590                           ; BSR set to: 0
 18591   008C60  0E00               	movlw	0
 18592   008C62  EF40  F046         	goto	l1277
 18593   008C66                     l17776:
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 18597   008C66  0EE9               	movlw	low f_mount@path
 18598   008C68  6FDA               	movwf	find_volume@path& (0+255),b
 18599   008C6A  6BDB               	clrf	(find_volume@path+1)& (0+255),b
 18600   008C6C  0EE7               	movlw	low f_mount@fs
 18601   008C6E  6FDC               	movwf	find_volume@rfs& (0+255),b
 18602   008C70  6BDD               	clrf	(find_volume@rfs+1)& (0+255),b
 18603   008C72  0E00               	movlw	0
 18604   008C74  6FDE               	movwf	find_volume@mode& (0+255),b
 18605   008C76  EC0F  F000         	call	_find_volume	;wreg free
 18606   008C7A  0100               	movlb	0	; () banked
 18607   008C7C  6FEC               	movwf	f_mount@res& (0+255),b
 18608   008C7E                     
 18609                           ; BSR set to: 0
 18610                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 18611   008C7E  51EC               	movf	f_mount@res& (0+255),w,b
 18612   008C80                     l1277:
 18613                           
 18614                           ; BSR set to: 0
 18615   008C80  0012               	return		;funcret
 18616   008C82                     __end_of_f_mount:
 18617                           	callstack 0
 18618                           
 18619 ;; *************** function _find_volume *****************
 18620 ;; Defined at:
 18621 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;  path            2  122[BANK0 ] PTR PTR const unsigned c
 18624 ;;		 -> f_chdir@path(2), f_open@path(2), f_mount@path(2), 
 18625 ;;  rfs             2  124[BANK0 ] PTR PTR struct .
 18626 ;;		 -> f_chdir@fs(2), f_open@fs(2), f_mount@fs(2), 
 18627 ;;  mode            1  126[BANK0 ] unsigned char 
 18628 ;; Auto vars:     Size  Location     Type
 18629 ;;  br             16    0[BANK1 ] unsigned long [4]
 18630 ;;  bsect           4   49[BANK1 ] unsigned long 
 18631 ;;  fasize          4   45[BANK1 ] unsigned long 
 18632 ;;  nclst           4   41[BANK1 ] unsigned long 
 18633 ;;  tsect           4   36[BANK1 ] unsigned long 
 18634 ;;  sysect          4   28[BANK1 ] unsigned long 
 18635 ;;  szbfat          4   22[BANK1 ] unsigned long 
 18636 ;;  fs              2   56[BANK1 ] PTR struct .
 18637 ;;		 -> FatFs(563), NULL(0), 
 18638 ;;  i               2   53[BANK1 ] unsigned int 
 18639 ;;  nrsv            2   34[BANK1 ] unsigned short 
 18640 ;;  vol             2   32[BANK1 ] int 
 18641 ;;  pt              2   26[BANK1 ] PTR unsigned char 
 18642 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 18643 ;;  fmt             1   55[BANK1 ] unsigned char 
 18644 ;;  stat            1   40[BANK1 ] unsigned char 
 18645 ;; Return value:  Size  Location     Type
 18646 ;;                  1    wreg      enum E68
 18647 ;; Registers used:
 18648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18649 ;; Tracked objects:
 18650 ;;		On entry : 0/0
 18651 ;;		On exit  : 0/0
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18654 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18655 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18656 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18657 ;;      Totals:         0      13      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18658 ;;Total ram usage:       71 bytes
 18659 ;; Hardware stack levels used: 1
 18660 ;; Hardware stack levels required when called: 13
 18661 ;; This function calls:
 18662 ;;		___lldiv
 18663 ;;		___lmul
 18664 ;;		_check_fs
 18665 ;;		_disk_initialize
 18666 ;;		_disk_status
 18667 ;;		_get_ldnumber
 18668 ;;		_ld_dword
 18669 ;;		_ld_word
 18670 ;;		_move_window
 18671 ;; This function is called by:
 18672 ;;		_f_mount
 18673 ;;		_f_open
 18674 ;;		_f_chdir
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           	psect	text71
 18679   00001E                     __ptext71:
 18680                           	callstack 0
 18681   00001E                     _find_volume:
 18682                           	callstack 15
 18683   00001E                     
 18684                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 18685   00001E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 18686   000024  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 18687   00002A  6ADE               	clrf	postinc2,c
 18688   00002C  6ADD               	clrf	postdec2,c
 18689   00002E                     
 18690                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 18691   00002E  C0DA  F060         	movff	find_volume@path,get_ldnumber@path
 18692   000032  C0DB  F061         	movff	find_volume@path+1,get_ldnumber@path+1
 18693   000036  EC40  F03C         	call	_get_ldnumber	;wreg free
 18694   00003A  C060  F120         	movff	?_get_ldnumber,find_volume@vol
 18695   00003E  C061  F121         	movff	?_get_ldnumber+1,find_volume@vol+1
 18696   000042                     
 18697                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 18698   000042  0101               	movlb	1	; () banked
 18699   000044  BF21               	btfsc	(find_volume@vol+1)& (0+255),7,b
 18700   000046  EF29  F000         	goto	u20100
 18701   00004A  EF27  F000         	goto	u20101
 18702   00004E                     u20101:
 18703   00004E  EF2C  F000         	goto	l16504
 18704   000052                     u20100:
 18705   000052                     
 18706                           ; BSR set to: 1
 18707   000052  0E0B               	movlw	11
 18708   000054  EF68  F007         	goto	l1211
 18709   000058                     l16504:
 18710                           
 18711                           ; BSR set to: 1
 18712                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 18713   000058  90D8               	bcf	status,0,c
 18714   00005A  3520               	rlcf	find_volume@vol& (0+255),w,b
 18715   00005C  6ED9               	movwf	fsr2l,c
 18716   00005E  3521               	rlcf	(find_volume@vol+1)& (0+255),w,b
 18717   000060  6EDA               	movwf	fsr2h,c
 18718   000062  0EDF               	movlw	low _FatFs@ff$F2407
 18719   000064  26D9               	addwf	fsr2l,f,c
 18720   000066  0E01               	movlw	high _FatFs@ff$F2407
 18721   000068  22DA               	addwfc	fsr2h,f,c
 18722   00006A  006F FF78  F138    	movff	postinc2,find_volume@fs
 18723   000070  006F FF74  F139    	movff	postdec2,find_volume@fs+1
 18724   000076                     
 18725                           ; BSR set to: 1
 18726                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 18727   000076  5138               	movf	find_volume@fs& (0+255),w,b
 18728   000078  1139               	iorwf	(find_volume@fs+1)& (0+255),w,b
 18729   00007A  A4D8               	btfss	status,2,c
 18730   00007C  EF42  F000         	goto	u20111
 18731   000080  EF44  F000         	goto	u20110
 18732   000084                     u20111:
 18733   000084  EF47  F000         	goto	l16512
 18734   000088                     u20110:
 18735   000088                     
 18736                           ; BSR set to: 1
 18737   000088  0E0C               	movlw	12
 18738   00008A  EF68  F007         	goto	l1211
 18739   00008E                     l16512:
 18740                           
 18741                           ; BSR set to: 1
 18742                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 18743   00008E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 18744   000094  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 18745   00009A  0060  F4E3  FFDE   	movff	find_volume@fs,postinc2
 18746   0000A0  0060  F4E7  FFDD   	movff	find_volume@fs+1,postdec2
 18747   0000A6                     
 18748                           ; BSR set to: 1
 18749                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 18750   0000A6  0100               	movlb	0	; () banked
 18751   0000A8  91DE               	bcf	find_volume@mode& (0+255),0,b
 18752   0000AA                     
 18753                           ; BSR set to: 0
 18754                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 18755   0000AA  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 18756   0000B0  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 18757   0000B6  50DF               	movf	indf2,w,c
 18758   0000B8  B4D8               	btfsc	status,2,c
 18759   0000BA  EF61  F000         	goto	u20121
 18760   0000BE  EF63  F000         	goto	u20120
 18761   0000C2                     u20121:
 18762   0000C2  EF8D  F000         	goto	l16534
 18763   0000C6                     u20120:
 18764   0000C6                     
 18765                           ; BSR set to: 0
 18766                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 18767   0000C6  0101               	movlb	1	; () banked
 18768   0000C8  EE20 F001          	lfsr	2,1
 18769   0000CC  5138               	movf	find_volume@fs& (0+255),w,b
 18770   0000CE  26D9               	addwf	fsr2l,f,c
 18771   0000D0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18772   0000D2  22DA               	addwfc	fsr2h,f,c
 18773   0000D4  50DF               	movf	indf2,w,c
 18774   0000D6  EC15  F04C         	call	_disk_status
 18775   0000DA  0101               	movlb	1	; () banked
 18776   0000DC  6F28               	movwf	find_volume@stat& (0+255),b
 18777   0000DE                     
 18778                           ; BSR set to: 1
 18779                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 18780   0000DE  B128               	btfsc	find_volume@stat& (0+255),0,b
 18781   0000E0  EF74  F000         	goto	u20131
 18782   0000E4  EF76  F000         	goto	u20130
 18783   0000E8                     u20131:
 18784   0000E8  EF8D  F000         	goto	l16534
 18785   0000EC                     u20130:
 18786   0000EC                     
 18787                           ; BSR set to: 1
 18788   0000EC  0100               	movlb	0	; () banked
 18789   0000EE  51DE               	movf	find_volume@mode& (0+255),w,b
 18790   0000F0  B4D8               	btfsc	status,2,c
 18791   0000F2  EF7D  F000         	goto	u20141
 18792   0000F6  EF7F  F000         	goto	u20140
 18793   0000FA                     u20141:
 18794   0000FA  EF8A  F000         	goto	l16530
 18795   0000FE                     u20140:
 18796   0000FE                     
 18797                           ; BSR set to: 0
 18798   0000FE  0101               	movlb	1	; () banked
 18799   000100  A528               	btfss	find_volume@stat& (0+255),2,b
 18800   000102  EF85  F000         	goto	u20151
 18801   000106  EF87  F000         	goto	u20150
 18802   00010A                     u20151:
 18803   00010A  EF8A  F000         	goto	l16530
 18804   00010E                     u20150:
 18805   00010E                     l16526:
 18806                           
 18807                           ; BSR set to: 1
 18808                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 18809   00010E  0E0A               	movlw	10
 18810   000110  EF68  F007         	goto	l1211
 18811   000114                     l16530:
 18812                           
 18813                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 18814   000114  0E00               	movlw	0
 18815   000116  EF68  F007         	goto	l1211
 18816   00011A                     l16534:
 18817                           
 18818                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 18819   00011A  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 18820   000120  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 18821   000126  6ADF               	clrf	indf2,c
 18822   000128                     
 18823                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 18824   000128  0101               	movlb	1	; () banked
 18825   00012A  EE20 F001          	lfsr	2,1
 18826   00012E  5138               	movf	find_volume@fs& (0+255),w,b
 18827   000130  26D9               	addwf	fsr2l,f,c
 18828   000132  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18829   000134  22DA               	addwfc	fsr2h,f,c
 18830   000136  0060  F483  FFDF   	movff	find_volume@vol,indf2
 18831   00013C                     
 18832                           ; BSR set to: 1
 18833                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 18834   00013C  EE20 F001          	lfsr	2,1
 18835   000140  5138               	movf	find_volume@fs& (0+255),w,b
 18836   000142  26D9               	addwf	fsr2l,f,c
 18837   000144  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18838   000146  22DA               	addwfc	fsr2h,f,c
 18839   000148  50DF               	movf	indf2,w,c
 18840   00014A  EC7C  F04F         	call	_disk_initialize
 18841   00014E  0101               	movlb	1	; () banked
 18842   000150  6F28               	movwf	find_volume@stat& (0+255),b
 18843   000152                     
 18844                           ; BSR set to: 1
 18845                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 18846   000152  A128               	btfss	find_volume@stat& (0+255),0,b
 18847   000154  EFAE  F000         	goto	u20161
 18848   000158  EFB0  F000         	goto	u20160
 18849   00015C                     u20161:
 18850   00015C  EFB3  F000         	goto	l16546
 18851   000160                     u20160:
 18852   000160                     
 18853                           ; BSR set to: 1
 18854                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 18855   000160  0E03               	movlw	3
 18856   000162  EF68  F007         	goto	l1211
 18857   000166                     l16546:
 18858                           
 18859                           ; BSR set to: 1
 18860   000166  0100               	movlb	0	; () banked
 18861   000168  51DE               	movf	find_volume@mode& (0+255),w,b
 18862   00016A  B4D8               	btfsc	status,2,c
 18863   00016C  EFBA  F000         	goto	u20171
 18864   000170  EFBC  F000         	goto	u20170
 18865   000174                     u20171:
 18866   000174  EFC6  F000         	goto	l16554
 18867   000178                     u20170:
 18868   000178                     
 18869                           ; BSR set to: 0
 18870   000178  0101               	movlb	1	; () banked
 18871   00017A  A528               	btfss	find_volume@stat& (0+255),2,b
 18872   00017C  EFC2  F000         	goto	u20181
 18873   000180  EFC4  F000         	goto	u20180
 18874   000184                     u20181:
 18875   000184  EFC6  F000         	goto	l16554
 18876   000188                     u20180:
 18877   000188  EF87  F000         	goto	l16526
 18878   00018C                     l16554:
 18879                           
 18880                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 18881   00018C  0E00               	movlw	0
 18882   00018E  0101               	movlb	1	; () banked
 18883   000190  6F31               	movwf	find_volume@bsect& (0+255),b
 18884   000192  0E00               	movlw	0
 18885   000194  6F32               	movwf	(find_volume@bsect+1)& (0+255),b
 18886   000196  0E00               	movlw	0
 18887   000198  6F33               	movwf	(find_volume@bsect+2)& (0+255),b
 18888   00019A  0E00               	movlw	0
 18889   00019C  6F34               	movwf	(find_volume@bsect+3)& (0+255),b
 18890   00019E                     
 18891                           ; BSR set to: 1
 18892                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 18893   00019E  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 18894   0001A2  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 18895   0001A6  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 18896   0001AA  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 18897   0001AE  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 18898   0001B2  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 18899   0001B6  ECB1  F03D         	call	_check_fs	;wreg free
 18900   0001BA  0101               	movlb	1	; () banked
 18901   0001BC  6F37               	movwf	find_volume@fmt& (0+255),b
 18902   0001BE                     
 18903                           ; BSR set to: 1
 18904                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 18905   0001BE  0E02               	movlw	2
 18906   0001C0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 18907   0001C2  B4D8               	btfsc	status,2,c
 18908   0001C4  EFE6  F000         	goto	u20191
 18909   0001C8  EFE8  F000         	goto	u20190
 18910   0001CC                     u20191:
 18911   0001CC  EFEA  F000         	goto	l16564
 18912   0001D0                     u20190:
 18913   0001D0  EFD7  F001         	goto	l16604
 18914   0001D4                     l16564:
 18915                           
 18916                           ; BSR set to: 1
 18917                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 18918   0001D4  0E00               	movlw	0
 18919   0001D6  6F36               	movwf	(find_volume@i+1)& (0+255),b
 18920   0001D8  0E00               	movlw	0
 18921   0001DA  6F35               	movwf	find_volume@i& (0+255),b
 18922   0001DC                     l16566:
 18923                           
 18924                           ; BSR set to: 1
 18925   0001DC  5136               	movf	(find_volume@i+1)& (0+255),w,b
 18926   0001DE  E109               	bnz	u20200
 18927   0001E0  0E04               	movlw	4
 18928   0001E2  5D35               	subwf	find_volume@i& (0+255),w,b
 18929   0001E4  A0D8               	btfss	status,0,c
 18930   0001E6  EFF7  F000         	goto	u20201
 18931   0001EA  EFF9  F000         	goto	u20200
 18932   0001EE                     u20201:
 18933   0001EE  EFFB  F000         	goto	l16570
 18934   0001F2                     u20200:
 18935   0001F2  EF6B  F001         	goto	l16584
 18936   0001F6                     l16570:
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 18940   0001F6  C135  F0DF         	movff	find_volume@i,??_find_volume
 18941   0001FA  C136  F0E0         	movff	find_volume@i+1,??_find_volume+1
 18942   0001FE  0100               	movlb	0	; () banked
 18943   000200  3BDF               	swapf	??_find_volume& (0+255),f,b
 18944   000202  3BE0               	swapf	(??_find_volume+1)& (0+255),f,b
 18945   000204  0EF0               	movlw	240
 18946   000206  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 18947   000208  51DF               	movf	??_find_volume& (0+255),w,b
 18948   00020A  0B0F               	andlw	15
 18949   00020C  13E0               	iorwf	(??_find_volume+1)& (0+255),f,b
 18950   00020E  0EF0               	movlw	240
 18951   000210  17DF               	andwf	??_find_volume& (0+255),f,b
 18952   000212  51DF               	movf	??_find_volume& (0+255),w,b
 18953   000214  0101               	movlb	1	; () banked
 18954   000216  2538               	addwf	find_volume@fs& (0+255),w,b
 18955   000218  0100               	movlb	0	; () banked
 18956   00021A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 18957   00021C  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 18958   00021E  0101               	movlb	1	; () banked
 18959   000220  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18960   000222  0100               	movlb	0	; () banked
 18961   000224  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 18962   000226  0EF1               	movlw	241
 18963   000228  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 18964   00022A  0101               	movlb	1	; () banked
 18965   00022C  6F1A               	movwf	find_volume@pt& (0+255),b
 18966   00022E  0E01               	movlw	1
 18967   000230  0100               	movlb	0	; () banked
 18968   000232  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 18969   000234  0101               	movlb	1	; () banked
 18970   000236  6F1B               	movwf	(find_volume@pt+1)& (0+255),b
 18971   000238                     
 18972                           ; BSR set to: 1
 18973                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 18974   000238  EE20 F004          	lfsr	2,4
 18975   00023C  511A               	movf	find_volume@pt& (0+255),w,b
 18976   00023E  26D9               	addwf	fsr2l,f,c
 18977   000240  511B               	movf	(find_volume@pt+1)& (0+255),w,b
 18978   000242  22DA               	addwfc	fsr2h,f,c
 18979   000244  50DF               	movf	indf2,w,c
 18980   000246  A4D8               	btfss	status,2,c
 18981   000248  EF28  F001         	goto	u20211
 18982   00024C  EF2A  F001         	goto	u20210
 18983   000250                     u20211:
 18984   000250  EF34  F001         	goto	l16576
 18985   000254                     u20210:
 18986   000254                     
 18987                           ; BSR set to: 1
 18988   000254  0E00               	movlw	0
 18989   000256  6F10               	movwf	_find_volume$3099& (0+255),b
 18990   000258  0E00               	movlw	0
 18991   00025A  6F11               	movwf	(_find_volume$3099+1)& (0+255),b
 18992   00025C  0E00               	movlw	0
 18993   00025E  6F12               	movwf	(_find_volume$3099+2)& (0+255),b
 18994   000260  0E00               	movlw	0
 18995   000262  6F13               	movwf	(_find_volume$3099+3)& (0+255),b
 18996   000264  EF47  F001         	goto	l16578
 18997   000268                     l16576:
 18998                           
 18999                           ; BSR set to: 1
 19000   000268  0E08               	movlw	8
 19001   00026A  251A               	addwf	find_volume@pt& (0+255),w,b
 19002   00026C  0100               	movlb	0	; () banked
 19003   00026E  6F60               	movwf	ld_dword@ptr& (0+255),b
 19004   000270  0E00               	movlw	0
 19005   000272  0101               	movlb	1	; () banked
 19006   000274  211B               	addwfc	(find_volume@pt+1)& (0+255),w,b
 19007   000276  0100               	movlb	0	; () banked
 19008   000278  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19009   00027A  ECE4  F047         	call	_ld_dword	;wreg free
 19010   00027E  C060  F110         	movff	?_ld_dword,_find_volume$3099
 19011   000282  C061  F111         	movff	?_ld_dword+1,_find_volume$3099+1
 19012   000286  C062  F112         	movff	?_ld_dword+2,_find_volume$3099+2
 19013   00028A  C063  F113         	movff	?_ld_dword+3,_find_volume$3099+3
 19014   00028E                     l16578:
 19015   00028E  0E00               	movlw	low find_volume@br
 19016   000290  0100               	movlb	0	; () banked
 19017   000292  6FDF               	movwf	??_find_volume& (0+255),b
 19018   000294  0E01               	movlw	high find_volume@br
 19019   000296  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19020   000298  90D8               	bcf	status,0,c
 19021   00029A  0101               	movlb	1	; () banked
 19022   00029C  3535               	rlcf	find_volume@i& (0+255),w,b
 19023   00029E  6ED9               	movwf	fsr2l,c
 19024   0002A0  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 19025   0002A2  6EDA               	movwf	fsr2h,c
 19026   0002A4  90D8               	bcf	status,0,c
 19027   0002A6  36D9               	rlcf	fsr2l,f,c
 19028   0002A8  36DA               	rlcf	fsr2h,f,c
 19029   0002AA  0100               	movlb	0	; () banked
 19030   0002AC  51DF               	movf	??_find_volume& (0+255),w,b
 19031   0002AE  26D9               	addwf	fsr2l,f,c
 19032   0002B0  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 19033   0002B2  22DA               	addwfc	fsr2h,f,c
 19034   0002B4  0060  F443  FFDE   	movff	_find_volume$3099,postinc2
 19035   0002BA  0060  F447  FFDE   	movff	_find_volume$3099+1,postinc2
 19036   0002C0  0060  F44B  FFDE   	movff	_find_volume$3099+2,postinc2
 19037   0002C6  0060  F44F  FFDE   	movff	_find_volume$3099+3,postinc2
 19038   0002CC                     
 19039                           ; BSR set to: 0
 19040                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 19041   0002CC  0101               	movlb	1	; () banked
 19042   0002CE  4B35               	infsnz	find_volume@i& (0+255),f,b
 19043   0002D0  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 19044   0002D2  EFEE  F000         	goto	l16566
 19045   0002D6                     l16584:
 19046                           
 19047                           ; BSR set to: 1
 19048                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 19049   0002D6  0E00               	movlw	0
 19050   0002D8  6F36               	movwf	(find_volume@i+1)& (0+255),b
 19051   0002DA  0E00               	movlw	0
 19052   0002DC  6F35               	movwf	find_volume@i& (0+255),b
 19053   0002DE                     
 19054                           ; BSR set to: 1
 19055                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 19056   0002DE  5135               	movf	find_volume@i& (0+255),w,b
 19057   0002E0  1136               	iorwf	(find_volume@i+1)& (0+255),w,b
 19058   0002E2  B4D8               	btfsc	status,2,c
 19059   0002E4  EF76  F001         	goto	u20221
 19060   0002E8  EF78  F001         	goto	u20220
 19061   0002EC                     u20221:
 19062   0002EC  EF7B  F001         	goto	l16590
 19063   0002F0                     u20220:
 19064   0002F0                     
 19065                           ; BSR set to: 1
 19066   0002F0  0735               	decf	find_volume@i& (0+255),f,b
 19067   0002F2  A0D8               	btfss	status,0,c
 19068   0002F4  0736               	decf	(find_volume@i+1)& (0+255),f,b
 19069   0002F6                     l16590:
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 19073   0002F6  0E00               	movlw	low find_volume@br
 19074   0002F8  0100               	movlb	0	; () banked
 19075   0002FA  6FDF               	movwf	??_find_volume& (0+255),b
 19076   0002FC  0E01               	movlw	high find_volume@br
 19077   0002FE  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19078   000300  90D8               	bcf	status,0,c
 19079   000302  0101               	movlb	1	; () banked
 19080   000304  3535               	rlcf	find_volume@i& (0+255),w,b
 19081   000306  6ED9               	movwf	fsr2l,c
 19082   000308  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 19083   00030A  6EDA               	movwf	fsr2h,c
 19084   00030C  90D8               	bcf	status,0,c
 19085   00030E  36D9               	rlcf	fsr2l,f,c
 19086   000310  36DA               	rlcf	fsr2h,f,c
 19087   000312  0100               	movlb	0	; () banked
 19088   000314  51DF               	movf	??_find_volume& (0+255),w,b
 19089   000316  26D9               	addwf	fsr2l,f,c
 19090   000318  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 19091   00031A  22DA               	addwfc	fsr2h,f,c
 19092   00031C  006F FF78  F131    	movff	postinc2,find_volume@bsect
 19093   000322  006F FF78  F132    	movff	postinc2,find_volume@bsect+1
 19094   000328  006F FF78  F133    	movff	postinc2,find_volume@bsect+2
 19095   00032E  006F FF78  F134    	movff	postinc2,find_volume@bsect+3
 19096   000334                     
 19097                           ; BSR set to: 0
 19098                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 19099   000334  0101               	movlb	1	; () banked
 19100   000336  5131               	movf	find_volume@bsect& (0+255),w,b
 19101   000338  1132               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 19102   00033A  1133               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 19103   00033C  1134               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 19104   00033E  A4D8               	btfss	status,2,c
 19105   000340  EFA4  F001         	goto	u20231
 19106   000344  EFA6  F001         	goto	u20230
 19107   000348                     u20231:
 19108   000348  EFAC  F001         	goto	l16596
 19109   00034C                     u20230:
 19110   00034C                     
 19111                           ; BSR set to: 1
 19112   00034C  0E00               	movlw	0
 19113   00034E  6F15               	movwf	(_find_volume$3100+1)& (0+255),b
 19114   000350  0E03               	movlw	3
 19115   000352  6F14               	movwf	_find_volume$3100& (0+255),b
 19116   000354  EFC0  F001         	goto	l16598
 19117   000358                     l16596:
 19118                           
 19119                           ; BSR set to: 1
 19120   000358  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 19121   00035C  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 19122   000360  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 19123   000364  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 19124   000368  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 19125   00036C  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 19126   000370  ECB1  F03D         	call	_check_fs	;wreg free
 19127   000374  0100               	movlb	0	; () banked
 19128   000376  6FDF               	movwf	??_find_volume& (0+255),b
 19129   000378  51DF               	movf	??_find_volume& (0+255),w,b
 19130   00037A  0101               	movlb	1	; () banked
 19131   00037C  6F14               	movwf	_find_volume$3100& (0+255),b
 19132   00037E  6B15               	clrf	(_find_volume$3100+1)& (0+255),b
 19133   000380                     l16598:
 19134                           
 19135                           ; BSR set to: 1
 19136                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 19137   000380  C114  F137         	movff	_find_volume$3100,find_volume@fmt
 19138   000384                     
 19139                           ; BSR set to: 1
 19140   000384  0E01               	movlw	1
 19141   000386  6537               	cpfsgt	find_volume@fmt& (0+255),b
 19142   000388  EFC8  F001         	goto	u20241
 19143   00038C  EFCA  F001         	goto	u20240
 19144   000390                     u20241:
 19145   000390  EFD7  F001         	goto	l16604
 19146   000394                     u20240:
 19147   000394                     
 19148                           ; BSR set to: 1
 19149   000394  4B35               	infsnz	find_volume@i& (0+255),f,b
 19150   000396  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 19151   000398  5136               	movf	(find_volume@i+1)& (0+255),w,b
 19152   00039A  E109               	bnz	u20250
 19153   00039C  0E04               	movlw	4
 19154   00039E  5D35               	subwf	find_volume@i& (0+255),w,b
 19155   0003A0  A0D8               	btfss	status,0,c
 19156   0003A2  EFD5  F001         	goto	u20251
 19157   0003A6  EFD7  F001         	goto	u20250
 19158   0003AA                     u20251:
 19159   0003AA  EF7B  F001         	goto	l16590
 19160   0003AE                     u20250:
 19161   0003AE                     l16604:
 19162                           
 19163                           ; BSR set to: 1
 19164                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 19165   0003AE  0E04               	movlw	4
 19166   0003B0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 19167   0003B2  A4D8               	btfss	status,2,c
 19168   0003B4  EFDE  F001         	goto	u20261
 19169   0003B8  EFE0  F001         	goto	u20260
 19170   0003BC                     u20261:
 19171   0003BC  EFE3  F001         	goto	l16610
 19172   0003C0                     u20260:
 19173   0003C0                     
 19174                           ; BSR set to: 1
 19175   0003C0  0E01               	movlw	1
 19176   0003C2  EF68  F007         	goto	l1211
 19177   0003C6                     l16610:
 19178                           
 19179                           ; BSR set to: 1
 19180                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 19181   0003C6  0E01               	movlw	1
 19182   0003C8  6537               	cpfsgt	find_volume@fmt& (0+255),b
 19183   0003CA  EFE9  F001         	goto	u20271
 19184   0003CE  EFEB  F001         	goto	u20270
 19185   0003D2                     u20271:
 19186   0003D2  EFEE  F001         	goto	l16616
 19187   0003D6                     u20270:
 19188   0003D6                     l16612:
 19189   0003D6  0E0D               	movlw	13
 19190   0003D8  EF68  F007         	goto	l1211
 19191   0003DC                     l16616:
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 19195   0003DC  0E3E               	movlw	62
 19196   0003DE  2538               	addwf	find_volume@fs& (0+255),w,b
 19197   0003E0  0100               	movlb	0	; () banked
 19198   0003E2  6F60               	movwf	ld_word@ptr& (0+255),b
 19199   0003E4  0E00               	movlw	0
 19200   0003E6  0101               	movlb	1	; () banked
 19201   0003E8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19202   0003EA  0100               	movlb	0	; () banked
 19203   0003EC  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19204   0003EE  ECE3  F04F         	call	_ld_word	;wreg free
 19205   0003F2  0E02               	movlw	2
 19206   0003F4  0100               	movlb	0	; () banked
 19207   0003F6  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 19208   0003F8  1160               	iorwf	?_ld_word& (0+255),w,b
 19209   0003FA  B4D8               	btfsc	status,2,c
 19210   0003FC  EF02  F002         	goto	u20281
 19211   000400  EF04  F002         	goto	u20280
 19212   000404                     u20281:
 19213   000404  EF06  F002         	goto	l16622
 19214   000408                     u20280:
 19215   000408  EFEB  F001         	goto	l16612
 19216   00040C                     l16622:
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 19220   00040C  0E49               	movlw	73
 19221   00040E  0101               	movlb	1	; () banked
 19222   000410  2538               	addwf	find_volume@fs& (0+255),w,b
 19223   000412  0100               	movlb	0	; () banked
 19224   000414  6F60               	movwf	ld_word@ptr& (0+255),b
 19225   000416  0E00               	movlw	0
 19226   000418  0101               	movlb	1	; () banked
 19227   00041A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19228   00041C  0100               	movlb	0	; () banked
 19229   00041E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19230   000420  ECE3  F04F         	call	_ld_word	;wreg free
 19231   000424  0100               	movlb	0	; () banked
 19232   000426  C060  F12D         	movff	?_ld_word,find_volume@fasize
 19233   00042A  C061  F12E         	movff	?_ld_word+1,find_volume@fasize+1
 19234   00042E  0101               	movlb	1	; () banked
 19235   000430  6B2F               	clrf	(find_volume@fasize+2)& (0+255),b
 19236   000432  6B30               	clrf	(find_volume@fasize+3)& (0+255),b
 19237   000434                     
 19238                           ; BSR set to: 1
 19239                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 19240   000434  512D               	movf	find_volume@fasize& (0+255),w,b
 19241   000436  112E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 19242   000438  112F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 19243   00043A  1130               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 19244   00043C  A4D8               	btfss	status,2,c
 19245   00043E  EF23  F002         	goto	u20291
 19246   000442  EF25  F002         	goto	u20290
 19247   000446                     u20291:
 19248   000446  EF38  F002         	goto	l16628
 19249   00044A                     u20290:
 19250   00044A                     
 19251                           ; BSR set to: 1
 19252   00044A  0E57               	movlw	87
 19253   00044C  2538               	addwf	find_volume@fs& (0+255),w,b
 19254   00044E  0100               	movlb	0	; () banked
 19255   000450  6F60               	movwf	ld_dword@ptr& (0+255),b
 19256   000452  0E00               	movlw	0
 19257   000454  0101               	movlb	1	; () banked
 19258   000456  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19259   000458  0100               	movlb	0	; () banked
 19260   00045A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19261   00045C  ECE4  F047         	call	_ld_dword	;wreg free
 19262   000460  C060  F12D         	movff	?_ld_dword,find_volume@fasize
 19263   000464  C061  F12E         	movff	?_ld_dword+1,find_volume@fasize+1
 19264   000468  C062  F12F         	movff	?_ld_dword+2,find_volume@fasize+2
 19265   00046C  C063  F130         	movff	?_ld_dword+3,find_volume@fasize+3
 19266   000470                     l16628:
 19267                           
 19268                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 19269   000470  0101               	movlb	1	; () banked
 19270   000472  EE20 F01B          	lfsr	2,27
 19271   000476  5138               	movf	find_volume@fs& (0+255),w,b
 19272   000478  26D9               	addwf	fsr2l,f,c
 19273   00047A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19274   00047C  22DA               	addwfc	fsr2h,f,c
 19275   00047E  0060  F4B7  FFDE   	movff	find_volume@fasize,postinc2
 19276   000484  0060  F4BB  FFDE   	movff	find_volume@fasize+1,postinc2
 19277   00048A  0060  F4BF  FFDE   	movff	find_volume@fasize+2,postinc2
 19278   000490  0060  F4C3  FFDE   	movff	find_volume@fasize+3,postinc2
 19279   000496                     
 19280                           ; BSR set to: 1
 19281                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 19282   000496  EE20 F043          	lfsr	2,67
 19283   00049A  5138               	movf	find_volume@fs& (0+255),w,b
 19284   00049C  26D9               	addwf	fsr2l,f,c
 19285   00049E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19286   0004A0  22DA               	addwfc	fsr2h,f,c
 19287   0004A2  EE10 F002          	lfsr	1,2
 19288   0004A6  5138               	movf	find_volume@fs& (0+255),w,b
 19289   0004A8  26E1               	addwf	fsr1l,f,c
 19290   0004AA  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19291   0004AC  22E2               	addwfc	fsr1h,f,c
 19292   0004AE  006F FF7F FFE7     	movff	indf2,indf1
 19293   0004B4                     
 19294                           ; BSR set to: 1
 19295                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 19296   0004B4  EE20 F002          	lfsr	2,2
 19297   0004B8  5138               	movf	find_volume@fs& (0+255),w,b
 19298   0004BA  26D9               	addwf	fsr2l,f,c
 19299   0004BC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19300   0004BE  22DA               	addwfc	fsr2h,f,c
 19301   0004C0  04DE               	decf	postinc2,w,c
 19302   0004C2  B4D8               	btfsc	status,2,c
 19303   0004C4  EF66  F002         	goto	u20301
 19304   0004C8  EF68  F002         	goto	u20300
 19305   0004CC                     u20301:
 19306   0004CC  EF79  F002         	goto	l16640
 19307   0004D0                     u20300:
 19308   0004D0                     
 19309                           ; BSR set to: 1
 19310   0004D0  EE20 F002          	lfsr	2,2
 19311   0004D4  5138               	movf	find_volume@fs& (0+255),w,b
 19312   0004D6  26D9               	addwf	fsr2l,f,c
 19313   0004D8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19314   0004DA  22DA               	addwfc	fsr2h,f,c
 19315   0004DC  0E02               	movlw	2
 19316   0004DE  18DE               	xorwf	postinc2,w,c
 19317   0004E0  B4D8               	btfsc	status,2,c
 19318   0004E2  EF75  F002         	goto	u20311
 19319   0004E6  EF77  F002         	goto	u20310
 19320   0004EA                     u20311:
 19321   0004EA  EF79  F002         	goto	l16640
 19322   0004EE                     u20310:
 19323   0004EE  EFEB  F001         	goto	l16612
 19324   0004F2                     l16640:
 19325                           
 19326                           ; BSR set to: 1
 19327                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 19328   0004F2  C12D  F060         	movff	find_volume@fasize,___lmul@multiplier
 19329   0004F6  C12E  F061         	movff	find_volume@fasize+1,___lmul@multiplier+1
 19330   0004FA  C12F  F062         	movff	find_volume@fasize+2,___lmul@multiplier+2
 19331   0004FE  C130  F063         	movff	find_volume@fasize+3,___lmul@multiplier+3
 19332   000502  EE20 F002          	lfsr	2,2
 19333   000506  5138               	movf	find_volume@fs& (0+255),w,b
 19334   000508  26D9               	addwf	fsr2l,f,c
 19335   00050A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19336   00050C  22DA               	addwfc	fsr2h,f,c
 19337   00050E  50DF               	movf	indf2,w,c
 19338   000510  0100               	movlb	0	; () banked
 19339   000512  6FDF               	movwf	??_find_volume& (0+255),b
 19340   000514  51DF               	movf	??_find_volume& (0+255),w,b
 19341   000516  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19342   000518  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 19343   00051A  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 19344   00051C  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 19345   00051E  ECBC  F04C         	call	___lmul	;wreg free
 19346   000522  C060  F12D         	movff	?___lmul,find_volume@fasize
 19347   000526  C061  F12E         	movff	?___lmul+1,find_volume@fasize+1
 19348   00052A  C062  F12F         	movff	?___lmul+2,find_volume@fasize+2
 19349   00052E  C063  F130         	movff	?___lmul+3,find_volume@fasize+3
 19350   000532                     
 19351                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 19352   000532  0101               	movlb	1	; () banked
 19353   000534  EE20 F040          	lfsr	2,64
 19354   000538  5138               	movf	find_volume@fs& (0+255),w,b
 19355   00053A  26D9               	addwf	fsr2l,f,c
 19356   00053C  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19357   00053E  22DA               	addwfc	fsr2h,f,c
 19358   000540  50DF               	movf	indf2,w,c
 19359   000542  0100               	movlb	0	; () banked
 19360   000544  6FDF               	movwf	??_find_volume& (0+255),b
 19361   000546  6BE0               	clrf	(??_find_volume+1)& (0+255),b
 19362   000548  0101               	movlb	1	; () banked
 19363   00054A  EE20 F009          	lfsr	2,9
 19364   00054E  5138               	movf	find_volume@fs& (0+255),w,b
 19365   000550  26D9               	addwf	fsr2l,f,c
 19366   000552  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19367   000554  22DA               	addwfc	fsr2h,f,c
 19368   000556  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19369   00055C  0060  F383  FFDD   	movff	??_find_volume+1,postdec2
 19370   000562                     
 19371                           ; BSR set to: 1
 19372                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 19373   000562  EE20 F009          	lfsr	2,9
 19374   000566  5138               	movf	find_volume@fs& (0+255),w,b
 19375   000568  26D9               	addwf	fsr2l,f,c
 19376   00056A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19377   00056C  22DA               	addwfc	fsr2h,f,c
 19378   00056E  50DE               	movf	postinc2,w,c
 19379   000570  10DE               	iorwf	postinc2,w,c
 19380   000572  B4D8               	btfsc	status,2,c
 19381   000574  EFBE  F002         	goto	u20321
 19382   000578  EFC0  F002         	goto	u20320
 19383   00057C                     u20321:
 19384   00057C  EFEB  F001         	goto	l16612
 19385   000580                     u20320:
 19386   000580                     
 19387                           ; BSR set to: 1
 19388   000580  EE20 F009          	lfsr	2,9
 19389   000584  5138               	movf	find_volume@fs& (0+255),w,b
 19390   000586  26D9               	addwf	fsr2l,f,c
 19391   000588  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19392   00058A  22DA               	addwfc	fsr2h,f,c
 19393   00058C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19394   000592  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19395   000598  EE20 F009          	lfsr	2,9
 19396   00059C  5138               	movf	find_volume@fs& (0+255),w,b
 19397   00059E  26D9               	addwf	fsr2l,f,c
 19398   0005A0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19399   0005A2  22DA               	addwfc	fsr2h,f,c
 19400   0005A4  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19401   0005AA  006F FF74  F0E2    	movff	postdec2,??_find_volume+3
 19402   0005B0  0EFF               	movlw	255
 19403   0005B2  0100               	movlb	0	; () banked
 19404   0005B4  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 19405   0005B6  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 19406   0005B8  0EFF               	movlw	255
 19407   0005BA  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 19408   0005BC  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 19409   0005BE  51DF               	movf	??_find_volume& (0+255),w,b
 19410   0005C0  15E3               	andwf	(??_find_volume+4)& (0+255),w,b
 19411   0005C2  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 19412   0005C4  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 19413   0005C6  15E4               	andwf	(??_find_volume+5)& (0+255),w,b
 19414   0005C8  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 19415   0005CA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 19416   0005CC  11E6               	iorwf	(??_find_volume+7)& (0+255),w,b
 19417   0005CE  B4D8               	btfsc	status,2,c
 19418   0005D0  EFEC  F002         	goto	u20331
 19419   0005D4  EFEE  F002         	goto	u20330
 19420   0005D8                     u20331:
 19421   0005D8  EFF0  F002         	goto	l16652
 19422   0005DC                     u20330:
 19423   0005DC  EFEB  F001         	goto	l16612
 19424   0005E0                     l16652:
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 19428   0005E0  0E44               	movlw	68
 19429   0005E2  0101               	movlb	1	; () banked
 19430   0005E4  2538               	addwf	find_volume@fs& (0+255),w,b
 19431   0005E6  0100               	movlb	0	; () banked
 19432   0005E8  6F60               	movwf	ld_word@ptr& (0+255),b
 19433   0005EA  0E00               	movlw	0
 19434   0005EC  0101               	movlb	1	; () banked
 19435   0005EE  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19436   0005F0  0100               	movlb	0	; () banked
 19437   0005F2  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19438   0005F4  ECE3  F04F         	call	_ld_word	;wreg free
 19439   0005F8  0101               	movlb	1	; () banked
 19440   0005FA  EE20 F007          	lfsr	2,7
 19441   0005FE  5138               	movf	find_volume@fs& (0+255),w,b
 19442   000600  26D9               	addwf	fsr2l,f,c
 19443   000602  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19444   000604  22DA               	addwfc	fsr2h,f,c
 19445   000606  0100               	movlb	0	; () banked
 19446   000608  0060  F183  FFDE   	movff	?_ld_word,postinc2
 19447   00060E  0060  F187  FFDD   	movff	?_ld_word+1,postdec2
 19448   000614                     
 19449                           ; BSR set to: 0
 19450                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 19451   000614  0101               	movlb	1	; () banked
 19452   000616  EE20 F007          	lfsr	2,7
 19453   00061A  5138               	movf	find_volume@fs& (0+255),w,b
 19454   00061C  26D9               	addwf	fsr2l,f,c
 19455   00061E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19456   000620  22DA               	addwfc	fsr2h,f,c
 19457   000622  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19458   000628  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19459   00062E  0E0F               	movlw	15
 19460   000630  0100               	movlb	0	; () banked
 19461   000632  17DF               	andwf	??_find_volume& (0+255),f,b
 19462   000634  0E00               	movlw	0
 19463   000636  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 19464   000638  51DF               	movf	??_find_volume& (0+255),w,b
 19465   00063A  11E0               	iorwf	(??_find_volume+1)& (0+255),w,b
 19466   00063C  B4D8               	btfsc	status,2,c
 19467   00063E  EF23  F003         	goto	u20341
 19468   000642  EF25  F003         	goto	u20340
 19469   000646                     u20341:
 19470   000646  EF27  F003         	goto	l16660
 19471   00064A                     u20340:
 19472   00064A  EFEB  F001         	goto	l16612
 19473   00064E                     l16660:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 19477   00064E  0E46               	movlw	70
 19478   000650  0101               	movlb	1	; () banked
 19479   000652  2538               	addwf	find_volume@fs& (0+255),w,b
 19480   000654  0100               	movlb	0	; () banked
 19481   000656  6F60               	movwf	ld_word@ptr& (0+255),b
 19482   000658  0E00               	movlw	0
 19483   00065A  0101               	movlb	1	; () banked
 19484   00065C  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19485   00065E  0100               	movlb	0	; () banked
 19486   000660  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19487   000662  ECE3  F04F         	call	_ld_word	;wreg free
 19488   000666  0100               	movlb	0	; () banked
 19489   000668  C060  F124         	movff	?_ld_word,find_volume@tsect
 19490   00066C  C061  F125         	movff	?_ld_word+1,find_volume@tsect+1
 19491   000670  0101               	movlb	1	; () banked
 19492   000672  6B26               	clrf	(find_volume@tsect+2)& (0+255),b
 19493   000674  6B27               	clrf	(find_volume@tsect+3)& (0+255),b
 19494   000676                     
 19495                           ; BSR set to: 1
 19496                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 19497   000676  5124               	movf	find_volume@tsect& (0+255),w,b
 19498   000678  1125               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 19499   00067A  1126               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 19500   00067C  1127               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 19501   00067E  A4D8               	btfss	status,2,c
 19502   000680  EF44  F003         	goto	u20351
 19503   000684  EF46  F003         	goto	u20350
 19504   000688                     u20351:
 19505   000688  EF59  F003         	goto	l1245
 19506   00068C                     u20350:
 19507   00068C                     
 19508                           ; BSR set to: 1
 19509   00068C  0E53               	movlw	83
 19510   00068E  2538               	addwf	find_volume@fs& (0+255),w,b
 19511   000690  0100               	movlb	0	; () banked
 19512   000692  6F60               	movwf	ld_dword@ptr& (0+255),b
 19513   000694  0E00               	movlw	0
 19514   000696  0101               	movlb	1	; () banked
 19515   000698  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19516   00069A  0100               	movlb	0	; () banked
 19517   00069C  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19518   00069E  ECE4  F047         	call	_ld_dword	;wreg free
 19519   0006A2  C060  F124         	movff	?_ld_dword,find_volume@tsect
 19520   0006A6  C061  F125         	movff	?_ld_dword+1,find_volume@tsect+1
 19521   0006AA  C062  F126         	movff	?_ld_dword+2,find_volume@tsect+2
 19522   0006AE  C063  F127         	movff	?_ld_dword+3,find_volume@tsect+3
 19523   0006B2                     l1245:
 19524                           
 19525                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 19526   0006B2  0E41               	movlw	65
 19527   0006B4  0101               	movlb	1	; () banked
 19528   0006B6  2538               	addwf	find_volume@fs& (0+255),w,b
 19529   0006B8  0100               	movlb	0	; () banked
 19530   0006BA  6F60               	movwf	ld_word@ptr& (0+255),b
 19531   0006BC  0E00               	movlw	0
 19532   0006BE  0101               	movlb	1	; () banked
 19533   0006C0  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19534   0006C2  0100               	movlb	0	; () banked
 19535   0006C4  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19536   0006C6  ECE3  F04F         	call	_ld_word	;wreg free
 19537   0006CA  C060  F122         	movff	?_ld_word,find_volume@nrsv
 19538   0006CE  C061  F123         	movff	?_ld_word+1,find_volume@nrsv+1
 19539   0006D2                     
 19540                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 19541   0006D2  0101               	movlb	1	; () banked
 19542   0006D4  5122               	movf	find_volume@nrsv& (0+255),w,b
 19543   0006D6  1123               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 19544   0006D8  A4D8               	btfss	status,2,c
 19545   0006DA  EF71  F003         	goto	u20361
 19546   0006DE  EF73  F003         	goto	u20360
 19547   0006E2                     u20361:
 19548   0006E2  EF75  F003         	goto	l16672
 19549   0006E6                     u20360:
 19550   0006E6  EFEB  F001         	goto	l16612
 19551   0006EA                     l16672:
 19552                           
 19553                           ; BSR set to: 1
 19554                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 19555   0006EA  EE20 F007          	lfsr	2,7
 19556   0006EE  5138               	movf	find_volume@fs& (0+255),w,b
 19557   0006F0  26D9               	addwf	fsr2l,f,c
 19558   0006F2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19559   0006F4  22DA               	addwfc	fsr2h,f,c
 19560   0006F6  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19561   0006FC  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19562   000702  0E04               	movlw	4
 19563   000704  0100               	movlb	0	; () banked
 19564   000706  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19565   000708                     u20375:
 19566   000708  90D8               	bcf	status,0,c
 19567   00070A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 19568   00070C  33DF               	rrcf	??_find_volume& (0+255),f,b
 19569   00070E  2FE1               	decfsz	(??_find_volume+2)& (0+255),f,b
 19570   000710  EF84  F003         	goto	u20375
 19571   000714  0101               	movlb	1	; () banked
 19572   000716  5122               	movf	find_volume@nrsv& (0+255),w,b
 19573   000718  0100               	movlb	0	; () banked
 19574   00071A  25DF               	addwf	??_find_volume& (0+255),w,b
 19575   00071C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19576   00071E  0101               	movlb	1	; () banked
 19577   000720  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 19578   000722  0100               	movlb	0	; () banked
 19579   000724  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 19580   000726  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 19581   000728  6BE4               	clrf	(??_find_volume+5)& (0+255),b
 19582   00072A  B0D8               	btfsc	status,0,c
 19583   00072C  2BE4               	incf	(??_find_volume+5)& (0+255),f,b
 19584   00072E  6BE5               	clrf	(??_find_volume+6)& (0+255),b
 19585   000730  0101               	movlb	1	; () banked
 19586   000732  512D               	movf	find_volume@fasize& (0+255),w,b
 19587   000734  0100               	movlb	0	; () banked
 19588   000736  25E2               	addwf	(??_find_volume+3)& (0+255),w,b
 19589   000738  0101               	movlb	1	; () banked
 19590   00073A  6F1C               	movwf	find_volume@sysect& (0+255),b
 19591   00073C  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 19592   00073E  0100               	movlb	0	; () banked
 19593   000740  21E3               	addwfc	(??_find_volume+4)& (0+255),w,b
 19594   000742  0101               	movlb	1	; () banked
 19595   000744  6F1D               	movwf	(find_volume@sysect+1)& (0+255),b
 19596   000746  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 19597   000748  0100               	movlb	0	; () banked
 19598   00074A  21E4               	addwfc	(??_find_volume+5)& (0+255),w,b
 19599   00074C  0101               	movlb	1	; () banked
 19600   00074E  6F1E               	movwf	(find_volume@sysect+2)& (0+255),b
 19601   000750  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 19602   000752  0100               	movlb	0	; () banked
 19603   000754  21E5               	addwfc	(??_find_volume+6)& (0+255),w,b
 19604   000756  0101               	movlb	1	; () banked
 19605   000758  6F1F               	movwf	(find_volume@sysect+3)& (0+255),b
 19606   00075A                     
 19607                           ; BSR set to: 1
 19608                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 19609   00075A  511C               	movf	find_volume@sysect& (0+255),w,b
 19610   00075C  5D24               	subwf	find_volume@tsect& (0+255),w,b
 19611   00075E  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19612   000760  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 19613   000762  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19614   000764  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 19615   000766  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19616   000768  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 19617   00076A  B0D8               	btfsc	status,0,c
 19618   00076C  EFBA  F003         	goto	u20381
 19619   000770  EFBC  F003         	goto	u20380
 19620   000774                     u20381:
 19621   000774  EFBE  F003         	goto	l16680
 19622   000778                     u20380:
 19623   000778  EFEB  F001         	goto	l16612
 19624   00077C                     l16680:
 19625                           
 19626                           ; BSR set to: 1
 19627                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 19628   00077C  511C               	movf	find_volume@sysect& (0+255),w,b
 19629   00077E  5D24               	subwf	find_volume@tsect& (0+255),w,b
 19630   000780  0100               	movlb	0	; () banked
 19631   000782  6F60               	movwf	___lldiv@dividend& (0+255),b
 19632   000784  0101               	movlb	1	; () banked
 19633   000786  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19634   000788  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 19635   00078A  0100               	movlb	0	; () banked
 19636   00078C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 19637   00078E  0101               	movlb	1	; () banked
 19638   000790  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19639   000792  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 19640   000794  0100               	movlb	0	; () banked
 19641   000796  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 19642   000798  0101               	movlb	1	; () banked
 19643   00079A  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19644   00079C  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 19645   00079E  0100               	movlb	0	; () banked
 19646   0007A0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 19647   0007A2  0101               	movlb	1	; () banked
 19648   0007A4  EE20 F009          	lfsr	2,9
 19649   0007A8  5138               	movf	find_volume@fs& (0+255),w,b
 19650   0007AA  26D9               	addwf	fsr2l,f,c
 19651   0007AC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19652   0007AE  22DA               	addwfc	fsr2h,f,c
 19653   0007B0  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19654   0007B6  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19655   0007BC  C0DF  F064         	movff	??_find_volume,___lldiv@divisor
 19656   0007C0  C0E0  F065         	movff	??_find_volume+1,___lldiv@divisor+1
 19657   0007C4  0100               	movlb	0	; () banked
 19658   0007C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 19659   0007C8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 19660   0007CA  ECEF  F048         	call	___lldiv	;wreg free
 19661   0007CE  C060  F129         	movff	?___lldiv,find_volume@nclst
 19662   0007D2  C061  F12A         	movff	?___lldiv+1,find_volume@nclst+1
 19663   0007D6  C062  F12B         	movff	?___lldiv+2,find_volume@nclst+2
 19664   0007DA  C063  F12C         	movff	?___lldiv+3,find_volume@nclst+3
 19665   0007DE                     
 19666                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 19667   0007DE  0101               	movlb	1	; () banked
 19668   0007E0  5129               	movf	find_volume@nclst& (0+255),w,b
 19669   0007E2  112A               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 19670   0007E4  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19671   0007E6  112C               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 19672   0007E8  A4D8               	btfss	status,2,c
 19673   0007EA  EFF9  F003         	goto	u20391
 19674   0007EE  EFFB  F003         	goto	u20390
 19675   0007F2                     u20391:
 19676   0007F2  EFFD  F003         	goto	l16688
 19677   0007F6                     u20390:
 19678   0007F6  EFEB  F001         	goto	l16612
 19679   0007FA                     l16688:
 19680                           
 19681                           ; BSR set to: 1
 19682                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 19683   0007FA  0E00               	movlw	0
 19684   0007FC  6F37               	movwf	find_volume@fmt& (0+255),b
 19685   0007FE                     
 19686                           ; BSR set to: 1
 19687                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 19688   0007FE  0EF6               	movlw	246
 19689   000800  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19690   000802  0EFF               	movlw	255
 19691   000804  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19692   000806  0EFF               	movlw	255
 19693   000808  592B               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 19694   00080A  0E0F               	movlw	15
 19695   00080C  592C               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 19696   00080E  B0D8               	btfsc	status,0,c
 19697   000810  EF0C  F004         	goto	u20401
 19698   000814  EF0E  F004         	goto	u20400
 19699   000818                     u20401:
 19700   000818  EF10  F004         	goto	l16694
 19701   00081C                     u20400:
 19702   00081C                     
 19703                           ; BSR set to: 1
 19704   00081C  0E03               	movlw	3
 19705   00081E  6F37               	movwf	find_volume@fmt& (0+255),b
 19706   000820                     l16694:
 19707                           
 19708                           ; BSR set to: 1
 19709                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 19710   000820  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 19711   000822  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19712   000824  E109               	bnz	u20411
 19713   000826  0EF6               	movlw	246
 19714   000828  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19715   00082A  0EFF               	movlw	255
 19716   00082C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19717   00082E  B0D8               	btfsc	status,0,c
 19718   000830  EF1C  F004         	goto	u20411
 19719   000834  EF1E  F004         	goto	u20410
 19720   000838                     u20411:
 19721   000838  EF20  F004         	goto	l16698
 19722   00083C                     u20410:
 19723   00083C                     
 19724                           ; BSR set to: 1
 19725   00083C  0E02               	movlw	2
 19726   00083E  6F37               	movwf	find_volume@fmt& (0+255),b
 19727   000840                     l16698:
 19728                           
 19729                           ; BSR set to: 1
 19730                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 19731   000840  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 19732   000842  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19733   000844  E109               	bnz	u20421
 19734   000846  0EF6               	movlw	246
 19735   000848  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19736   00084A  0E0F               	movlw	15
 19737   00084C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19738   00084E  B0D8               	btfsc	status,0,c
 19739   000850  EF2C  F004         	goto	u20421
 19740   000854  EF2E  F004         	goto	u20420
 19741   000858                     u20421:
 19742   000858  EF30  F004         	goto	l1251
 19743   00085C                     u20420:
 19744   00085C                     
 19745                           ; BSR set to: 1
 19746   00085C  0E01               	movlw	1
 19747   00085E  6F37               	movwf	find_volume@fmt& (0+255),b
 19748   000860                     l1251:
 19749                           
 19750                           ; BSR set to: 1
 19751                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 19752   000860  5137               	movf	find_volume@fmt& (0+255),w,b
 19753   000862  A4D8               	btfss	status,2,c
 19754   000864  EF36  F004         	goto	u20431
 19755   000868  EF38  F004         	goto	u20430
 19756   00086C                     u20431:
 19757   00086C  EF3A  F004         	goto	l16706
 19758   000870                     u20430:
 19759   000870  EFEB  F001         	goto	l16612
 19760   000874                     l16706:
 19761                           
 19762                           ; BSR set to: 1
 19763                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 19764   000874  0E02               	movlw	2
 19765   000876  2529               	addwf	find_volume@nclst& (0+255),w,b
 19766   000878  0100               	movlb	0	; () banked
 19767   00087A  6FDF               	movwf	??_find_volume& (0+255),b
 19768   00087C  0E00               	movlw	0
 19769   00087E  0101               	movlb	1	; () banked
 19770   000880  212A               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 19771   000882  0100               	movlb	0	; () banked
 19772   000884  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19773   000886  0E00               	movlw	0
 19774   000888  0101               	movlb	1	; () banked
 19775   00088A  212B               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 19776   00088C  0100               	movlb	0	; () banked
 19777   00088E  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19778   000890  0E00               	movlw	0
 19779   000892  0101               	movlb	1	; () banked
 19780   000894  212C               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 19781   000896  0100               	movlb	0	; () banked
 19782   000898  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19783   00089A  0101               	movlb	1	; () banked
 19784   00089C  EE20 F017          	lfsr	2,23
 19785   0008A0  5138               	movf	find_volume@fs& (0+255),w,b
 19786   0008A2  26D9               	addwf	fsr2l,f,c
 19787   0008A4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19788   0008A6  22DA               	addwfc	fsr2h,f,c
 19789   0008A8  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19790   0008AE  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19791   0008B4  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19792   0008BA  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19793                           
 19794                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 19795   0008C0  EE20 F01F          	lfsr	2,31
 19796   0008C4  5138               	movf	find_volume@fs& (0+255),w,b
 19797   0008C6  26D9               	addwf	fsr2l,f,c
 19798   0008C8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19799   0008CA  22DA               	addwfc	fsr2h,f,c
 19800   0008CC  0060  F4C7  FFDE   	movff	find_volume@bsect,postinc2
 19801   0008D2  0060  F4CB  FFDE   	movff	find_volume@bsect+1,postinc2
 19802   0008D8  0060  F4CF  FFDE   	movff	find_volume@bsect+2,postinc2
 19803   0008DE  0060  F4D3  FFDE   	movff	find_volume@bsect+3,postinc2
 19804                           
 19805                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 19806   0008E4  5122               	movf	find_volume@nrsv& (0+255),w,b
 19807   0008E6  2531               	addwf	find_volume@bsect& (0+255),w,b
 19808   0008E8  0100               	movlb	0	; () banked
 19809   0008EA  6FDF               	movwf	??_find_volume& (0+255),b
 19810   0008EC  0101               	movlb	1	; () banked
 19811   0008EE  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 19812   0008F0  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 19813   0008F2  0100               	movlb	0	; () banked
 19814   0008F4  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19815   0008F6  0E00               	movlw	0
 19816   0008F8  0101               	movlb	1	; () banked
 19817   0008FA  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 19818   0008FC  0100               	movlb	0	; () banked
 19819   0008FE  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19820   000900  0E00               	movlw	0
 19821   000902  0101               	movlb	1	; () banked
 19822   000904  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 19823   000906  0100               	movlb	0	; () banked
 19824   000908  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19825   00090A  0101               	movlb	1	; () banked
 19826   00090C  EE20 F023          	lfsr	2,35
 19827   000910  5138               	movf	find_volume@fs& (0+255),w,b
 19828   000912  26D9               	addwf	fsr2l,f,c
 19829   000914  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19830   000916  22DA               	addwfc	fsr2h,f,c
 19831   000918  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19832   00091E  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19833   000924  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19834   00092A  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19835                           
 19836                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 19837   000930  511C               	movf	find_volume@sysect& (0+255),w,b
 19838   000932  2531               	addwf	find_volume@bsect& (0+255),w,b
 19839   000934  0100               	movlb	0	; () banked
 19840   000936  6FDF               	movwf	??_find_volume& (0+255),b
 19841   000938  0101               	movlb	1	; () banked
 19842   00093A  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19843   00093C  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 19844   00093E  0100               	movlb	0	; () banked
 19845   000940  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19846   000942  0101               	movlb	1	; () banked
 19847   000944  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19848   000946  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 19849   000948  0100               	movlb	0	; () banked
 19850   00094A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19851   00094C  0101               	movlb	1	; () banked
 19852   00094E  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19853   000950  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 19854   000952  0100               	movlb	0	; () banked
 19855   000954  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19856   000956  0101               	movlb	1	; () banked
 19857   000958  EE20 F02B          	lfsr	2,43
 19858   00095C  5138               	movf	find_volume@fs& (0+255),w,b
 19859   00095E  26D9               	addwf	fsr2l,f,c
 19860   000960  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19861   000962  22DA               	addwfc	fsr2h,f,c
 19862   000964  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19863   00096A  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19864   000970  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19865   000976  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19866   00097C                     
 19867                           ; BSR set to: 1
 19868                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 19869   00097C  0E03               	movlw	3
 19870   00097E  1937               	xorwf	find_volume@fmt& (0+255),w,b
 19871   000980  A4D8               	btfss	status,2,c
 19872   000982  EFC5  F004         	goto	u20441
 19873   000986  EFC7  F004         	goto	u20440
 19874   00098A                     u20441:
 19875   00098A  EF36  F005         	goto	l16726
 19876   00098E                     u20440:
 19877   00098E                     
 19878                           ; BSR set to: 1
 19879                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 19880   00098E  0E5D               	movlw	93
 19881   000990  2538               	addwf	find_volume@fs& (0+255),w,b
 19882   000992  0100               	movlb	0	; () banked
 19883   000994  6F60               	movwf	ld_word@ptr& (0+255),b
 19884   000996  0E00               	movlw	0
 19885   000998  0101               	movlb	1	; () banked
 19886   00099A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19887   00099C  0100               	movlb	0	; () banked
 19888   00099E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19889   0009A0  ECE3  F04F         	call	_ld_word	;wreg free
 19890   0009A4  0100               	movlb	0	; () banked
 19891   0009A6  5160               	movf	?_ld_word& (0+255),w,b
 19892   0009A8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 19893   0009AA  B4D8               	btfsc	status,2,c
 19894   0009AC  EFDA  F004         	goto	u20451
 19895   0009B0  EFDC  F004         	goto	u20450
 19896   0009B4                     u20451:
 19897   0009B4  EFDE  F004         	goto	l16716
 19898   0009B8                     u20450:
 19899   0009B8  EFEB  F001         	goto	l16612
 19900   0009BC                     l16716:
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 19904   0009BC  0101               	movlb	1	; () banked
 19905   0009BE  EE20 F007          	lfsr	2,7
 19906   0009C2  5138               	movf	find_volume@fs& (0+255),w,b
 19907   0009C4  26D9               	addwf	fsr2l,f,c
 19908   0009C6  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19909   0009C8  22DA               	addwfc	fsr2h,f,c
 19910   0009CA  50DE               	movf	postinc2,w,c
 19911   0009CC  10DE               	iorwf	postinc2,w,c
 19912   0009CE  B4D8               	btfsc	status,2,c
 19913   0009D0  EFEC  F004         	goto	u20461
 19914   0009D4  EFEE  F004         	goto	u20460
 19915   0009D8                     u20461:
 19916   0009D8  EFF0  F004         	goto	l16722
 19917   0009DC                     u20460:
 19918   0009DC  EFEB  F001         	goto	l16612
 19919   0009E0                     l16722:
 19920                           
 19921                           ; BSR set to: 1
 19922                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 19923   0009E0  0E5F               	movlw	95
 19924   0009E2  2538               	addwf	find_volume@fs& (0+255),w,b
 19925   0009E4  0100               	movlb	0	; () banked
 19926   0009E6  6F60               	movwf	ld_dword@ptr& (0+255),b
 19927   0009E8  0E00               	movlw	0
 19928   0009EA  0101               	movlb	1	; () banked
 19929   0009EC  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19930   0009EE  0100               	movlb	0	; () banked
 19931   0009F0  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19932   0009F2  ECE4  F047         	call	_ld_dword	;wreg free
 19933   0009F6  0101               	movlb	1	; () banked
 19934   0009F8  EE20 F027          	lfsr	2,39
 19935   0009FC  5138               	movf	find_volume@fs& (0+255),w,b
 19936   0009FE  26D9               	addwf	fsr2l,f,c
 19937   000A00  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19938   000A02  22DA               	addwfc	fsr2h,f,c
 19939   000A04  0100               	movlb	0	; () banked
 19940   000A06  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 19941   000A0C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 19942   000A12  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 19943   000A18  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 19944   000A1E                     
 19945                           ; BSR set to: 0
 19946                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 19947   000A1E  0101               	movlb	1	; () banked
 19948   000A20  EE20 F017          	lfsr	2,23
 19949   000A24  5138               	movf	find_volume@fs& (0+255),w,b
 19950   000A26  26D9               	addwf	fsr2l,f,c
 19951   000A28  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19952   000A2A  22DA               	addwfc	fsr2h,f,c
 19953   000A2C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19954   000A32  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 19955   000A38  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19956   000A3E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 19957   000A44  0E02               	movlw	2
 19958   000A46                     u20475:
 19959   000A46  90D8               	bcf	status,0,c
 19960   000A48  0100               	movlb	0	; () banked
 19961   000A4A  37DF               	rlcf	??_find_volume& (0+255),f,b
 19962   000A4C  37E0               	rlcf	(??_find_volume+1)& (0+255),f,b
 19963   000A4E  37E1               	rlcf	(??_find_volume+2)& (0+255),f,b
 19964   000A50  37E2               	rlcf	(??_find_volume+3)& (0+255),f,b
 19965   000A52  2EE8               	decfsz	wreg,f,c
 19966   000A54  EF23  F005         	goto	u20475
 19967   000A58  C0DF  F116         	movff	??_find_volume,find_volume@szbfat
 19968   000A5C  C0E0  F117         	movff	??_find_volume+1,find_volume@szbfat+1
 19969   000A60  C0E1  F118         	movff	??_find_volume+2,find_volume@szbfat+2
 19970   000A64  C0E2  F119         	movff	??_find_volume+3,find_volume@szbfat+3
 19971                           
 19972                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 19973   000A68  EF03  F006         	goto	l1256
 19974   000A6C                     l16726:
 19975                           
 19976                           ; BSR set to: 1
 19977                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 19978   000A6C  EE20 F007          	lfsr	2,7
 19979   000A70  5138               	movf	find_volume@fs& (0+255),w,b
 19980   000A72  26D9               	addwf	fsr2l,f,c
 19981   000A74  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19982   000A76  22DA               	addwfc	fsr2h,f,c
 19983   000A78  50DE               	movf	postinc2,w,c
 19984   000A7A  10DE               	iorwf	postinc2,w,c
 19985   000A7C  A4D8               	btfss	status,2,c
 19986   000A7E  EF43  F005         	goto	u20481
 19987   000A82  EF45  F005         	goto	u20480
 19988   000A86                     u20481:
 19989   000A86  EF47  F005         	goto	l16732
 19990   000A8A                     u20480:
 19991   000A8A  EFEB  F001         	goto	l16612
 19992   000A8E                     l16732:
 19993                           
 19994                           ; BSR set to: 1
 19995                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 19996   000A8E  EE20 F023          	lfsr	2,35
 19997   000A92  5138               	movf	find_volume@fs& (0+255),w,b
 19998   000A94  26D9               	addwf	fsr2l,f,c
 19999   000A96  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20000   000A98  22DA               	addwfc	fsr2h,f,c
 20001   000A9A  006F FF78  F0DF    	movff	postinc2,??_find_volume
 20002   000AA0  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 20003   000AA6  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 20004   000AAC  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 20005   000AB2  512D               	movf	find_volume@fasize& (0+255),w,b
 20006   000AB4  0100               	movlb	0	; () banked
 20007   000AB6  25DF               	addwf	??_find_volume& (0+255),w,b
 20008   000AB8  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 20009   000ABA  0101               	movlb	1	; () banked
 20010   000ABC  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 20011   000ABE  0100               	movlb	0	; () banked
 20012   000AC0  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 20013   000AC2  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 20014   000AC4  0101               	movlb	1	; () banked
 20015   000AC6  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 20016   000AC8  0100               	movlb	0	; () banked
 20017   000ACA  21E1               	addwfc	(??_find_volume+2)& (0+255),w,b
 20018   000ACC  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 20019   000ACE  0101               	movlb	1	; () banked
 20020   000AD0  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 20021   000AD2  0100               	movlb	0	; () banked
 20022   000AD4  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 20023   000AD6  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 20024   000AD8  0101               	movlb	1	; () banked
 20025   000ADA  EE20 F027          	lfsr	2,39
 20026   000ADE  5138               	movf	find_volume@fs& (0+255),w,b
 20027   000AE0  26D9               	addwf	fsr2l,f,c
 20028   000AE2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20029   000AE4  22DA               	addwfc	fsr2h,f,c
 20030   000AE6  0060  F38F  FFDE   	movff	??_find_volume+4,postinc2
 20031   000AEC  0060  F393  FFDE   	movff	??_find_volume+5,postinc2
 20032   000AF2  0060  F397  FFDE   	movff	??_find_volume+6,postinc2
 20033   000AF8  0060  F39B  FFDE   	movff	??_find_volume+7,postinc2
 20034   000AFE                     
 20035                           ; BSR set to: 1
 20036                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 20037   000AFE  0E02               	movlw	2
 20038   000B00  1937               	xorwf	find_volume@fmt& (0+255),w,b
 20039   000B02  B4D8               	btfsc	status,2,c
 20040   000B04  EF86  F005         	goto	u20491
 20041   000B08  EF88  F005         	goto	u20490
 20042   000B0C                     u20491:
 20043   000B0C  EFE0  F005         	goto	l16738
 20044   000B10                     u20490:
 20045   000B10                     
 20046                           ; BSR set to: 1
 20047   000B10  EE20 F017          	lfsr	2,23
 20048   000B14  5138               	movf	find_volume@fs& (0+255),w,b
 20049   000B16  26D9               	addwf	fsr2l,f,c
 20050   000B18  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20051   000B1A  22DA               	addwfc	fsr2h,f,c
 20052   000B1C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 20053   000B22  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 20054   000B28  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 20055   000B2E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 20056   000B34  0E01               	movlw	1
 20057   000B36  0100               	movlb	0	; () banked
 20058   000B38  15DF               	andwf	??_find_volume& (0+255),w,b
 20059   000B3A  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 20060   000B3C  0E00               	movlw	0
 20061   000B3E  15E0               	andwf	(??_find_volume+1)& (0+255),w,b
 20062   000B40  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 20063   000B42  0E00               	movlw	0
 20064   000B44  15E1               	andwf	(??_find_volume+2)& (0+255),w,b
 20065   000B46  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 20066   000B48  0E00               	movlw	0
 20067   000B4A  15E2               	andwf	(??_find_volume+3)& (0+255),w,b
 20068   000B4C  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 20069   000B4E  0101               	movlb	1	; () banked
 20070   000B50  EE20 F017          	lfsr	2,23
 20071   000B54  5138               	movf	find_volume@fs& (0+255),w,b
 20072   000B56  26D9               	addwf	fsr2l,f,c
 20073   000B58  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20074   000B5A  22DA               	addwfc	fsr2h,f,c
 20075   000B5C  006F FF78  F060    	movff	postinc2,___lmul@multiplier
 20076   000B62  006F FF78  F061    	movff	postinc2,___lmul@multiplier+1
 20077   000B68  006F FF78  F062    	movff	postinc2,___lmul@multiplier+2
 20078   000B6E  006F FF78  F063    	movff	postinc2,___lmul@multiplier+3
 20079   000B74  0E03               	movlw	3
 20080   000B76  0100               	movlb	0	; () banked
 20081   000B78  6F64               	movwf	___lmul@multiplicand& (0+255),b
 20082   000B7A  0E00               	movlw	0
 20083   000B7C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 20084   000B7E  0E00               	movlw	0
 20085   000B80  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 20086   000B82  0E00               	movlw	0
 20087   000B84  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 20088   000B86  ECBC  F04C         	call	___lmul	;wreg free
 20089   000B8A  0100               	movlb	0	; () banked
 20090   000B8C  90D8               	bcf	status,0,c
 20091   000B8E  3363               	rrcf	(?___lmul+3)& (0+255),f,b
 20092   000B90  3362               	rrcf	(?___lmul+2)& (0+255),f,b
 20093   000B92  3361               	rrcf	(?___lmul+1)& (0+255),f,b
 20094   000B94  3360               	rrcf	?___lmul& (0+255),f,b
 20095   000B96  51E3               	movf	(??_find_volume+4)& (0+255),w,b
 20096   000B98  2560               	addwf	?___lmul& (0+255),w,b
 20097   000B9A  0101               	movlb	1	; () banked
 20098   000B9C  6F16               	movwf	find_volume@szbfat& (0+255),b
 20099   000B9E  0100               	movlb	0	; () banked
 20100   000BA0  51E4               	movf	(??_find_volume+5)& (0+255),w,b
 20101   000BA2  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 20102   000BA4  0101               	movlb	1	; () banked
 20103   000BA6  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 20104   000BA8  0100               	movlb	0	; () banked
 20105   000BAA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 20106   000BAC  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 20107   000BAE  0101               	movlb	1	; () banked
 20108   000BB0  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 20109   000BB2  0100               	movlb	0	; () banked
 20110   000BB4  51E6               	movf	(??_find_volume+7)& (0+255),w,b
 20111   000BB6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 20112   000BB8  0101               	movlb	1	; () banked
 20113   000BBA  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 20114   000BBC  EF03  F006         	goto	l1256
 20115   000BC0                     l16738:
 20116                           
 20117                           ; BSR set to: 1
 20118   000BC0  EE20 F017          	lfsr	2,23
 20119   000BC4  5138               	movf	find_volume@fs& (0+255),w,b
 20120   000BC6  26D9               	addwf	fsr2l,f,c
 20121   000BC8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20122   000BCA  22DA               	addwfc	fsr2h,f,c
 20123   000BCC  006F FF78  F0DF    	movff	postinc2,??_find_volume
 20124   000BD2  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 20125   000BD8  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 20126   000BDE  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 20127   000BE4  90D8               	bcf	status,0,c
 20128   000BE6  0100               	movlb	0	; () banked
 20129   000BE8  35DF               	rlcf	??_find_volume& (0+255),w,b
 20130   000BEA  0101               	movlb	1	; () banked
 20131   000BEC  6F16               	movwf	find_volume@szbfat& (0+255),b
 20132   000BEE  0100               	movlb	0	; () banked
 20133   000BF0  35E0               	rlcf	(??_find_volume+1)& (0+255),w,b
 20134   000BF2  0101               	movlb	1	; () banked
 20135   000BF4  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 20136   000BF6  0100               	movlb	0	; () banked
 20137   000BF8  35E1               	rlcf	(??_find_volume+2)& (0+255),w,b
 20138   000BFA  0101               	movlb	1	; () banked
 20139   000BFC  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 20140   000BFE  0100               	movlb	0	; () banked
 20141   000C00  35E2               	rlcf	(??_find_volume+3)& (0+255),w,b
 20142   000C02  0101               	movlb	1	; () banked
 20143   000C04  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 20144   000C06                     l1256:
 20145                           
 20146                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 20147   000C06  0EFF               	movlw	255
 20148   000C08  0101               	movlb	1	; () banked
 20149   000C0A  2516               	addwf	find_volume@szbfat& (0+255),w,b
 20150   000C0C  0100               	movlb	0	; () banked
 20151   000C0E  6FDF               	movwf	??_find_volume& (0+255),b
 20152   000C10  0E01               	movlw	1
 20153   000C12  0101               	movlb	1	; () banked
 20154   000C14  2117               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 20155   000C16  0100               	movlb	0	; () banked
 20156   000C18  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 20157   000C1A  0E00               	movlw	0
 20158   000C1C  0101               	movlb	1	; () banked
 20159   000C1E  2118               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 20160   000C20  0100               	movlb	0	; () banked
 20161   000C22  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 20162   000C24  0E00               	movlw	0
 20163   000C26  0101               	movlb	1	; () banked
 20164   000C28  2119               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 20165   000C2A  0100               	movlb	0	; () banked
 20166   000C2C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 20167   000C2E  0E0A               	movlw	10
 20168   000C30  EF1F  F006         	goto	u20500
 20169   000C34                     u20505:
 20170   000C34  90D8               	bcf	status,0,c
 20171   000C36  33E2               	rrcf	(??_find_volume+3)& (0+255),f,b
 20172   000C38  33E1               	rrcf	(??_find_volume+2)& (0+255),f,b
 20173   000C3A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 20174   000C3C  33DF               	rrcf	??_find_volume& (0+255),f,b
 20175   000C3E                     u20500:
 20176   000C3E  2EE8               	decfsz	wreg,f,c
 20177   000C40  EF1A  F006         	goto	u20505
 20178   000C44  0101               	movlb	1	; () banked
 20179   000C46  EE20 F01B          	lfsr	2,27
 20180   000C4A  5138               	movf	find_volume@fs& (0+255),w,b
 20181   000C4C  26D9               	addwf	fsr2l,f,c
 20182   000C4E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20183   000C50  22DA               	addwfc	fsr2h,f,c
 20184   000C52  0100               	movlb	0	; () banked
 20185   000C54  51DF               	movf	??_find_volume& (0+255),w,b
 20186   000C56  5CDE               	subwf	postinc2,w,c
 20187   000C58  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 20188   000C5A  58DE               	subwfb	postinc2,w,c
 20189   000C5C  51E1               	movf	(??_find_volume+2)& (0+255),w,b
 20190   000C5E  58DE               	subwfb	postinc2,w,c
 20191   000C60  51E2               	movf	(??_find_volume+3)& (0+255),w,b
 20192   000C62  58DE               	subwfb	postinc2,w,c
 20193   000C64  B0D8               	btfsc	status,0,c
 20194   000C66  EF37  F006         	goto	u20511
 20195   000C6A  EF39  F006         	goto	u20510
 20196   000C6E                     u20511:
 20197   000C6E  EF3B  F006         	goto	l16744
 20198   000C72                     u20510:
 20199   000C72  EFEB  F001         	goto	l16612
 20200   000C76                     l16744:
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 20204   000C76  0101               	movlb	1	; () banked
 20205   000C78  EE20 F00F          	lfsr	2,15
 20206   000C7C  5138               	movf	find_volume@fs& (0+255),w,b
 20207   000C7E  26D9               	addwf	fsr2l,f,c
 20208   000C80  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20209   000C82  22DA               	addwfc	fsr2h,f,c
 20210   000C84  0EFF               	movlw	255
 20211   000C86  6EDE               	movwf	postinc2,c
 20212   000C88  0EFF               	movlw	255
 20213   000C8A  6EDE               	movwf	postinc2,c
 20214   000C8C  0EFF               	movlw	255
 20215   000C8E  6EDE               	movwf	postinc2,c
 20216   000C90  0EFF               	movlw	255
 20217   000C92  6EDD               	movwf	postdec2,c
 20218   000C94  52DD               	movf	postdec2,f,c
 20219   000C96  52DD               	movf	postdec2,f,c
 20220   000C98  EE10 F00B          	lfsr	1,11
 20221   000C9C  5138               	movf	find_volume@fs& (0+255),w,b
 20222   000C9E  26E1               	addwf	fsr1l,f,c
 20223   000CA0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20224   000CA2  22E2               	addwfc	fsr1h,f,c
 20225   000CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 20226   000CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 20227   000CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 20228   000CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 20229   000CBC                     
 20230                           ; BSR set to: 1
 20231                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 20232   000CBC  EE20 F004          	lfsr	2,4
 20233   000CC0  5138               	movf	find_volume@fs& (0+255),w,b
 20234   000CC2  26D9               	addwf	fsr2l,f,c
 20235   000CC4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20236   000CC6  22DA               	addwfc	fsr2h,f,c
 20237   000CC8  0E80               	movlw	128
 20238   000CCA  6EDF               	movwf	indf2,c
 20239   000CCC                     
 20240                           ; BSR set to: 1
 20241                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 20242   000CCC  0E03               	movlw	3
 20243   000CCE  1937               	xorwf	find_volume@fmt& (0+255),w,b
 20244   000CD0  A4D8               	btfss	status,2,c
 20245   000CD2  EF6D  F006         	goto	u20521
 20246   000CD6  EF6F  F006         	goto	u20520
 20247   000CDA                     u20521:
 20248   000CDA  EF44  F007         	goto	l16764
 20249   000CDE                     u20520:
 20250   000CDE                     
 20251                           ; BSR set to: 1
 20252   000CDE  0E63               	movlw	99
 20253   000CE0  2538               	addwf	find_volume@fs& (0+255),w,b
 20254   000CE2  0100               	movlb	0	; () banked
 20255   000CE4  6F60               	movwf	ld_word@ptr& (0+255),b
 20256   000CE6  0E00               	movlw	0
 20257   000CE8  0101               	movlb	1	; () banked
 20258   000CEA  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20259   000CEC  0100               	movlb	0	; () banked
 20260   000CEE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 20261   000CF0  ECE3  F04F         	call	_ld_word	;wreg free
 20262   000CF4  0100               	movlb	0	; () banked
 20263   000CF6  0560               	decf	?_ld_word& (0+255),w,b
 20264   000CF8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 20265   000CFA  A4D8               	btfss	status,2,c
 20266   000CFC  EF82  F006         	goto	u20531
 20267   000D00  EF84  F006         	goto	u20530
 20268   000D04                     u20531:
 20269   000D04  EF44  F007         	goto	l16764
 20270   000D08                     u20530:
 20271   000D08                     
 20272                           ; BSR set to: 0
 20273   000D08  C138  F0C8         	movff	find_volume@fs,move_window@fs
 20274   000D0C  C139  F0C9         	movff	find_volume@fs+1,move_window@fs+1
 20275   000D10  0E01               	movlw	1
 20276   000D12  0101               	movlb	1	; () banked
 20277   000D14  2531               	addwf	find_volume@bsect& (0+255),w,b
 20278   000D16  0100               	movlb	0	; () banked
 20279   000D18  6FCA               	movwf	move_window@sector& (0+255),b
 20280   000D1A  0E00               	movlw	0
 20281   000D1C  0101               	movlb	1	; () banked
 20282   000D1E  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 20283   000D20  0100               	movlb	0	; () banked
 20284   000D22  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 20285   000D24  0E00               	movlw	0
 20286   000D26  0101               	movlb	1	; () banked
 20287   000D28  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 20288   000D2A  0100               	movlb	0	; () banked
 20289   000D2C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 20290   000D2E  0E00               	movlw	0
 20291   000D30  0101               	movlb	1	; () banked
 20292   000D32  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 20293   000D34  0100               	movlb	0	; () banked
 20294   000D36  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 20295   000D38  ECAF  F046         	call	_move_window	;wreg free
 20296   000D3C  0900               	iorlw	0
 20297   000D3E  A4D8               	btfss	status,2,c
 20298   000D40  EFA4  F006         	goto	u20541
 20299   000D44  EFA6  F006         	goto	u20540
 20300   000D48                     u20541:
 20301   000D48  EF44  F007         	goto	l16764
 20302   000D4C                     u20540:
 20303   000D4C                     
 20304                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 20305   000D4C  0101               	movlb	1	; () banked
 20306   000D4E  EE20 F004          	lfsr	2,4
 20307   000D52  5138               	movf	find_volume@fs& (0+255),w,b
 20308   000D54  26D9               	addwf	fsr2l,f,c
 20309   000D56  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20310   000D58  22DA               	addwfc	fsr2h,f,c
 20311   000D5A  6ADF               	clrf	indf2,c
 20312   000D5C                     
 20313                           ; BSR set to: 1
 20314                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 20315   000D5C  0E31               	movlw	49
 20316   000D5E  2538               	addwf	find_volume@fs& (0+255),w,b
 20317   000D60  0100               	movlb	0	; () banked
 20318   000D62  6F60               	movwf	ld_word@ptr& (0+255),b
 20319   000D64  0E02               	movlw	2
 20320   000D66  0101               	movlb	1	; () banked
 20321   000D68  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20322   000D6A  0100               	movlb	0	; () banked
 20323   000D6C  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 20324   000D6E  ECE3  F04F         	call	_ld_word	;wreg free
 20325   000D72  0E55               	movlw	85
 20326   000D74  0100               	movlb	0	; () banked
 20327   000D76  1960               	xorwf	?_ld_word& (0+255),w,b
 20328   000D78  E107               	bnz	u20551
 20329   000D7A  0EAA               	movlw	170
 20330   000D7C  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 20331   000D7E  A4D8               	btfss	status,2,c
 20332   000D80  EFC4  F006         	goto	u20551
 20333   000D84  EFC6  F006         	goto	u20550
 20334   000D88                     u20551:
 20335   000D88  EF44  F007         	goto	l16764
 20336   000D8C                     u20550:
 20337   000D8C                     
 20338                           ; BSR set to: 0
 20339   000D8C  0E33               	movlw	51
 20340   000D8E  0101               	movlb	1	; () banked
 20341   000D90  2538               	addwf	find_volume@fs& (0+255),w,b
 20342   000D92  0100               	movlb	0	; () banked
 20343   000D94  6F60               	movwf	ld_dword@ptr& (0+255),b
 20344   000D96  0E00               	movlw	0
 20345   000D98  0101               	movlb	1	; () banked
 20346   000D9A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20347   000D9C  0100               	movlb	0	; () banked
 20348   000D9E  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 20349   000DA0  ECE4  F047         	call	_ld_dword	;wreg free
 20350   000DA4  0E52               	movlw	82
 20351   000DA6  0100               	movlb	0	; () banked
 20352   000DA8  1960               	xorwf	?_ld_dword& (0+255),w,b
 20353   000DAA  E10D               	bnz	u20561
 20354   000DAC  0E52               	movlw	82
 20355   000DAE  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 20356   000DB0  E10A               	bnz	u20561
 20357   000DB2  0E61               	movlw	97
 20358   000DB4  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 20359   000DB6  E107               	bnz	u20561
 20360   000DB8  0E41               	movlw	65
 20361   000DBA  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 20362   000DBC  A4D8               	btfss	status,2,c
 20363   000DBE  EFE3  F006         	goto	u20561
 20364   000DC2  EFE5  F006         	goto	u20560
 20365   000DC6                     u20561:
 20366   000DC6  EF44  F007         	goto	l16764
 20367   000DCA                     u20560:
 20368   000DCA                     
 20369                           ; BSR set to: 0
 20370   000DCA  0E17               	movlw	23
 20371   000DCC  0101               	movlb	1	; () banked
 20372   000DCE  2538               	addwf	find_volume@fs& (0+255),w,b
 20373   000DD0  0100               	movlb	0	; () banked
 20374   000DD2  6F60               	movwf	ld_dword@ptr& (0+255),b
 20375   000DD4  0E02               	movlw	2
 20376   000DD6  0101               	movlb	1	; () banked
 20377   000DD8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20378   000DDA  0100               	movlb	0	; () banked
 20379   000DDC  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 20380   000DDE  ECE4  F047         	call	_ld_dword	;wreg free
 20381   000DE2  0E72               	movlw	114
 20382   000DE4  0100               	movlb	0	; () banked
 20383   000DE6  1960               	xorwf	?_ld_dword& (0+255),w,b
 20384   000DE8  E10D               	bnz	u20571
 20385   000DEA  0E72               	movlw	114
 20386   000DEC  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 20387   000DEE  E10A               	bnz	u20571
 20388   000DF0  0E41               	movlw	65
 20389   000DF2  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 20390   000DF4  E107               	bnz	u20571
 20391   000DF6  0E61               	movlw	97
 20392   000DF8  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 20393   000DFA  A4D8               	btfss	status,2,c
 20394   000DFC  EF02  F007         	goto	u20571
 20395   000E00  EF04  F007         	goto	u20570
 20396   000E04                     u20571:
 20397   000E04  EF44  F007         	goto	l16764
 20398   000E08                     u20570:
 20399   000E08                     
 20400                           ; BSR set to: 0
 20401                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 20402   000E08  0E1B               	movlw	27
 20403   000E0A  0101               	movlb	1	; () banked
 20404   000E0C  2538               	addwf	find_volume@fs& (0+255),w,b
 20405   000E0E  0100               	movlb	0	; () banked
 20406   000E10  6F60               	movwf	ld_dword@ptr& (0+255),b
 20407   000E12  0E02               	movlw	2
 20408   000E14  0101               	movlb	1	; () banked
 20409   000E16  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20410   000E18  0100               	movlb	0	; () banked
 20411   000E1A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 20412   000E1C  ECE4  F047         	call	_ld_dword	;wreg free
 20413   000E20  0101               	movlb	1	; () banked
 20414   000E22  EE20 F00F          	lfsr	2,15
 20415   000E26  5138               	movf	find_volume@fs& (0+255),w,b
 20416   000E28  26D9               	addwf	fsr2l,f,c
 20417   000E2A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20418   000E2C  22DA               	addwfc	fsr2h,f,c
 20419   000E2E  0100               	movlb	0	; () banked
 20420   000E30  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 20421   000E36  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 20422   000E3C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 20423   000E42  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 20424                           
 20425                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 20426   000E48  0E1F               	movlw	31
 20427   000E4A  0101               	movlb	1	; () banked
 20428   000E4C  2538               	addwf	find_volume@fs& (0+255),w,b
 20429   000E4E  0100               	movlb	0	; () banked
 20430   000E50  6F60               	movwf	ld_dword@ptr& (0+255),b
 20431   000E52  0E02               	movlw	2
 20432   000E54  0101               	movlb	1	; () banked
 20433   000E56  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 20434   000E58  0100               	movlb	0	; () banked
 20435   000E5A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 20436   000E5C  ECE4  F047         	call	_ld_dword	;wreg free
 20437   000E60  0101               	movlb	1	; () banked
 20438   000E62  EE20 F00B          	lfsr	2,11
 20439   000E66  5138               	movf	find_volume@fs& (0+255),w,b
 20440   000E68  26D9               	addwf	fsr2l,f,c
 20441   000E6A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20442   000E6C  22DA               	addwfc	fsr2h,f,c
 20443   000E6E  0100               	movlb	0	; () banked
 20444   000E70  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 20445   000E76  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 20446   000E7C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 20447   000E82  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 20448   000E88                     l16764:
 20449                           
 20450                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 20451   000E88  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 20452   000E8E  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 20453   000E94  0060  F4DF  FFDF   	movff	find_volume@fmt,indf2
 20454   000E9A                     
 20455                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 20456   000E9A  0101               	movlb	1	; () banked
 20457   000E9C  4BDD               	infsnz	_Fsid& (0+255),f,b
 20458   000E9E  2BDE               	incf	(_Fsid+1)& (0+255),f,b
 20459   000EA0  EE20 F005          	lfsr	2,5
 20460   000EA4  5138               	movf	find_volume@fs& (0+255),w,b
 20461   000EA6  26D9               	addwf	fsr2l,f,c
 20462   000EA8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20463   000EAA  22DA               	addwfc	fsr2h,f,c
 20464   000EAC  0060  F777  FFDE   	movff	_Fsid,postinc2
 20465   000EB2  0060  F77B  FFDD   	movff	_Fsid+1,postdec2
 20466   000EB8                     
 20467                           ; BSR set to: 1
 20468                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 20469   000EB8  EE20 F013          	lfsr	2,19
 20470   000EBC  5138               	movf	find_volume@fs& (0+255),w,b
 20471   000EBE  26D9               	addwf	fsr2l,f,c
 20472   000EC0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 20473   000EC2  22DA               	addwfc	fsr2h,f,c
 20474   000EC4  6ADE               	clrf	postinc2,c
 20475   000EC6  6ADE               	clrf	postinc2,c
 20476   000EC8  6ADE               	clrf	postinc2,c
 20477   000ECA  6ADD               	clrf	postdec2,c
 20478   000ECC  EF8A  F000         	goto	l16530
 20479   000ED0                     l1211:
 20480   000ED0  0012               	return		;funcret
 20481   000ED2                     __end_of_find_volume:
 20482                           	callstack 0
 20483                           
 20484 ;; *************** function _ld_dword *****************
 20485 ;; Defined at:
 20486 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 20487 ;; Parameters:    Size  Location     Type
 20488 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 20489 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 20490 ;; Auto vars:     Size  Location     Type
 20491 ;;  rv              4    9[BANK0 ] unsigned long 
 20492 ;; Return value:  Size  Location     Type
 20493 ;;                  4    0[BANK0 ] unsigned long 
 20494 ;; Registers used:
 20495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20496 ;; Tracked objects:
 20497 ;;		On entry : 0/0
 20498 ;;		On exit  : 0/0
 20499 ;;		Unchanged: 0/0
 20500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20503 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20504 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20505 ;;Total ram usage:       13 bytes
 20506 ;; Hardware stack levels used: 1
 20507 ;; Hardware stack levels required when called: 5
 20508 ;; This function calls:
 20509 ;;		Nothing
 20510 ;; This function is called by:
 20511 ;;		_get_fat
 20512 ;;		_put_fat
 20513 ;;		_find_volume
 20514 ;;		_f_open
 20515 ;; This function uses a non-reentrant model
 20516 ;;
 20517                           
 20518                           	psect	text72
 20519   008FC8                     __ptext72:
 20520                           	callstack 0
 20521   008FC8                     _ld_dword:
 20522                           	callstack 21
 20523   008FC8                     
 20524                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 20525   008FC8  0100               	movlb	0	; () banked
 20526   008FCA  EE20 F003          	lfsr	2,3
 20527   008FCE  5160               	movf	ld_dword@ptr& (0+255),w,b
 20528   008FD0  26D9               	addwf	fsr2l,f,c
 20529   008FD2  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20530   008FD4  22DA               	addwfc	fsr2h,f,c
 20531   008FD6  50DF               	movf	indf2,w,c
 20532   008FD8  6F64               	movwf	??_ld_dword& (0+255),b
 20533   008FDA  5164               	movf	??_ld_dword& (0+255),w,b
 20534   008FDC  6F69               	movwf	ld_dword@rv& (0+255),b
 20535   008FDE  6B6A               	clrf	(ld_dword@rv+1)& (0+255),b
 20536   008FE0  6B6B               	clrf	(ld_dword@rv+2)& (0+255),b
 20537   008FE2  6B6C               	clrf	(ld_dword@rv+3)& (0+255),b
 20538                           
 20539                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 20540   008FE4  EE20 F002          	lfsr	2,2
 20541   008FE8  5160               	movf	ld_dword@ptr& (0+255),w,b
 20542   008FEA  26D9               	addwf	fsr2l,f,c
 20543   008FEC  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20544   008FEE  22DA               	addwfc	fsr2h,f,c
 20545   008FF0  50DF               	movf	indf2,w,c
 20546   008FF2  6F64               	movwf	??_ld_dword& (0+255),b
 20547   008FF4  5164               	movf	??_ld_dword& (0+255),w,b
 20548   008FF6  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20549   008FFA  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20550   008FFE  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20551   009002  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20552   009004  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20553   009006  6F69               	movwf	ld_dword@rv& (0+255),b
 20554   009008  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20555   00900A  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20556   00900C  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20557   00900E  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20558   009010  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20559   009012  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20560                           
 20561                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 20562   009014  EE20 F001          	lfsr	2,1
 20563   009018  5160               	movf	ld_dword@ptr& (0+255),w,b
 20564   00901A  26D9               	addwf	fsr2l,f,c
 20565   00901C  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20566   00901E  22DA               	addwfc	fsr2h,f,c
 20567   009020  50DF               	movf	indf2,w,c
 20568   009022  6F64               	movwf	??_ld_dword& (0+255),b
 20569   009024  5164               	movf	??_ld_dword& (0+255),w,b
 20570   009026  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20571   00902A  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20572   00902E  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20573   009032  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20574   009034  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20575   009036  6F69               	movwf	ld_dword@rv& (0+255),b
 20576   009038  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20577   00903A  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20578   00903C  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20579   00903E  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20580   009040  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20581   009042  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20582                           
 20583                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 20584   009044  0060  F183  FFD9   	movff	ld_dword@ptr,fsr2l
 20585   00904A  0060  F187  FFDA   	movff	ld_dword@ptr+1,fsr2h
 20586   009050  50DF               	movf	indf2,w,c
 20587   009052  6F64               	movwf	??_ld_dword& (0+255),b
 20588   009054  5164               	movf	??_ld_dword& (0+255),w,b
 20589   009056  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20590   00905A  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20591   00905E  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20592   009062  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20593   009064  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20594   009066  6F69               	movwf	ld_dword@rv& (0+255),b
 20595   009068  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20596   00906A  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20597   00906C  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20598   00906E  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20599   009070  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20600   009072  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20601   009074                     
 20602                           ; BSR set to: 0
 20603                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 20604   009074  C069  F060         	movff	ld_dword@rv,?_ld_dword
 20605   009078  C06A  F061         	movff	ld_dword@rv+1,?_ld_dword+1
 20606   00907C  C06B  F062         	movff	ld_dword@rv+2,?_ld_dword+2
 20607   009080  C06C  F063         	movff	ld_dword@rv+3,?_ld_dword+3
 20608   009084                     
 20609                           ; BSR set to: 0
 20610   009084  0012               	return		;funcret
 20611   009086                     __end_of_ld_dword:
 20612                           	callstack 0
 20613                           
 20614 ;; *************** function _get_ldnumber *****************
 20615 ;; Defined at:
 20616 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;  path            2    0[BANK0 ] PTR PTR const unsigned c
 20619 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 20620 ;;		 -> f_mount@rp(2), 
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;  tp              2   11[BANK0 ] PTR const unsigned char 
 20623 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 20624 ;;  vol             2    9[BANK0 ] int 
 20625 ;;  tt              2    7[BANK0 ] PTR const unsigned char 
 20626 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 20627 ;;  i               2    4[BANK0 ] int 
 20628 ;;  tc              1    6[BANK0 ] unsigned char 
 20629 ;; Return value:  Size  Location     Type
 20630 ;;                  2    0[BANK0 ] int 
 20631 ;; Registers used:
 20632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20633 ;; Tracked objects:
 20634 ;;		On entry : 0/0
 20635 ;;		On exit  : 0/0
 20636 ;;		Unchanged: 0/0
 20637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20639 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20641 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20642 ;;Total ram usage:       13 bytes
 20643 ;; Hardware stack levels used: 1
 20644 ;; Hardware stack levels required when called: 5
 20645 ;; This function calls:
 20646 ;;		Nothing
 20647 ;; This function is called by:
 20648 ;;		_find_volume
 20649 ;;		_f_mount
 20650 ;;		_f_chdrive
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654                           	psect	text73
 20655   007880                     __ptext73:
 20656                           	callstack 0
 20657   007880                     _get_ldnumber:
 20658                           	callstack 22
 20659   007880                     
 20660                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 20661   007880  0100               	movlb	0	; () banked
 20662   007882  6969               	setf	get_ldnumber@vol& (0+255),b
 20663   007884  696A               	setf	(get_ldnumber@vol+1)& (0+255),b
 20664   007886                     
 20665                           ; BSR set to: 0
 20666                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 20667   007886  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 20668   00788C  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 20669   007892  006F FF78  F06B    	movff	postinc2,get_ldnumber@tp
 20670   007898  006F FF74  F06C    	movff	postdec2,get_ldnumber@tp+1
 20671   00789E  C06B  F067         	movff	get_ldnumber@tp,get_ldnumber@tt
 20672   0078A2  C06C  F068         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 20673   0078A6                     
 20674                           ; BSR set to: 0
 20675                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 20676   0078A6  516B               	movf	get_ldnumber@tp& (0+255),w,b
 20677   0078A8  116C               	iorwf	(get_ldnumber@tp+1)& (0+255),w,b
 20678   0078AA  A4D8               	btfss	status,2,c
 20679   0078AC  EF5A  F03C         	goto	u19561
 20680   0078B0  EF5C  F03C         	goto	u19560
 20681   0078B4                     u19561:
 20682   0078B4  EF60  F03C         	goto	l16160
 20683   0078B8                     u19560:
 20684   0078B8                     
 20685                           ; BSR set to: 0
 20686   0078B8  6960               	setf	?_get_ldnumber& (0+255),b
 20687   0078BA  6961               	setf	(?_get_ldnumber+1)& (0+255),b
 20688   0078BC  EFF8  F03C         	goto	l1186
 20689   0078C0                     l16160:
 20690                           
 20691                           ; BSR set to: 0
 20692   0078C0  0060  F19F  FFF6   	movff	get_ldnumber@tt,tblptrl
 20693   0078C6  0060  F1A3  FFF7   	movff	get_ldnumber@tt+1,tblptrh
 20694   0078CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20695   0078CC  6AF8               	clrf	tblptru,c
 20696   0078CE                     	endif
 20697   0078CE                     	if	0	;tblptru may be non-zero
 20698   0078CE                     	endif
 20699   0078CE  0008               	tblrd		*
 20700   0078D0  006F FFD4  F066    	movff	tablat,get_ldnumber@tc
 20701   0078D6                     
 20702                           ; BSR set to: 0
 20703   0078D6  4B67               	infsnz	get_ldnumber@tt& (0+255),f,b
 20704   0078D8  2B68               	incf	(get_ldnumber@tt+1)& (0+255),f,b
 20705   0078DA                     
 20706                           ; BSR set to: 0
 20707   0078DA  0E20               	movlw	32
 20708   0078DC  6566               	cpfsgt	get_ldnumber@tc& (0+255),b
 20709   0078DE  EF73  F03C         	goto	u19571
 20710   0078E2  EF75  F03C         	goto	u19570
 20711   0078E6                     u19571:
 20712   0078E6  EF7E  F03C         	goto	l16172
 20713   0078EA                     u19570:
 20714   0078EA                     
 20715                           ; BSR set to: 0
 20716   0078EA  0E3A               	movlw	58
 20717   0078EC  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 20718   0078EE  A4D8               	btfss	status,2,c
 20719   0078F0  EF7C  F03C         	goto	u19581
 20720   0078F4  EF7E  F03C         	goto	u19580
 20721   0078F8                     u19581:
 20722   0078F8  EF60  F03C         	goto	l16160
 20723   0078FC                     u19580:
 20724   0078FC                     l16172:
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 20728   0078FC  0E3A               	movlw	58
 20729   0078FE  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 20730   007900  A4D8               	btfss	status,2,c
 20731   007902  EF85  F03C         	goto	u19591
 20732   007906  EF87  F03C         	goto	u19590
 20733   00790A                     u19591:
 20734   00790A  EFF1  F03C         	goto	l1195
 20735   00790E                     u19590:
 20736   00790E                     
 20737                           ; BSR set to: 0
 20738                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 20739   00790E  0E00               	movlw	0
 20740   007910  6F65               	movwf	(get_ldnumber@i+1)& (0+255),b
 20741   007912  0E01               	movlw	1
 20742   007914  6F64               	movwf	get_ldnumber@i& (0+255),b
 20743   007916                     
 20744                           ; BSR set to: 0
 20745                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 20746   007916  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20747   00791C  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20748   007922                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20749   007922  6AF8               	clrf	tblptru,c
 20750   007924                     	endif
 20751   007924                     	if	0	;tblptru may be non-zero
 20752   007924                     	endif
 20753   007924  0E2F               	movlw	47
 20754   007926  0008               	tblrd		*
 20755   007928  64F5               	cpfsgt	tablat,c
 20756   00792A  EF99  F03C         	goto	u19601
 20757   00792E  EF9B  F03C         	goto	u19600
 20758   007932                     u19601:
 20759   007932  EFCE  F03C         	goto	l16184
 20760   007936                     u19600:
 20761   007936                     
 20762                           ; BSR set to: 0
 20763   007936  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20764   00793C  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20765   007942                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20766   007942  6AF8               	clrf	tblptru,c
 20767   007944                     	endif
 20768   007944                     	if	0	;tblptru may be non-zero
 20769   007944                     	endif
 20770   007944  0E3A               	movlw	58
 20771   007946  0008               	tblrd		*
 20772   007948  60F5               	cpfslt	tablat,c
 20773   00794A  EFA9  F03C         	goto	u19611
 20774   00794E  EFAB  F03C         	goto	u19610
 20775   007952                     u19611:
 20776   007952  EFCE  F03C         	goto	l16184
 20777   007956                     u19610:
 20778   007956                     
 20779                           ; BSR set to: 0
 20780   007956  0E02               	movlw	2
 20781   007958  256B               	addwf	get_ldnumber@tp& (0+255),w,b
 20782   00795A  6F62               	movwf	??_get_ldnumber& (0+255),b
 20783   00795C  0E00               	movlw	0
 20784   00795E  216C               	addwfc	(get_ldnumber@tp+1)& (0+255),w,b
 20785   007960  6F63               	movwf	(??_get_ldnumber+1)& (0+255),b
 20786   007962  5167               	movf	get_ldnumber@tt& (0+255),w,b
 20787   007964  1962               	xorwf	??_get_ldnumber& (0+255),w,b
 20788   007966  E107               	bnz	u19621
 20789   007968  5168               	movf	(get_ldnumber@tt+1)& (0+255),w,b
 20790   00796A  1963               	xorwf	(??_get_ldnumber+1)& (0+255),w,b
 20791   00796C  A4D8               	btfss	status,2,c
 20792   00796E  EFBB  F03C         	goto	u19621
 20793   007972  EFBD  F03C         	goto	u19620
 20794   007976                     u19621:
 20795   007976  EFCE  F03C         	goto	l16184
 20796   00797A                     u19620:
 20797   00797A                     
 20798                           ; BSR set to: 0
 20799                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 20800   00797A  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20801   007980  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20802   007986                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20803   007986  6AF8               	clrf	tblptru,c
 20804   007988                     	endif
 20805   007988                     	if	0	;tblptru may be non-zero
 20806   007988                     	endif
 20807   007988  0008               	tblrd		*
 20808   00798A  006F FFD4  F062    	movff	tablat,??_get_ldnumber
 20809   007990  0ED0               	movlw	208
 20810   007992  2562               	addwf	??_get_ldnumber& (0+255),w,b
 20811   007994  6F64               	movwf	get_ldnumber@i& (0+255),b
 20812   007996  6B65               	clrf	(get_ldnumber@i+1)& (0+255),b
 20813   007998  0EFF               	movlw	255
 20814   00799A  2365               	addwfc	(get_ldnumber@i+1)& (0+255),f,b
 20815   00799C                     l16184:
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 20819   00799C  BF65               	btfsc	(get_ldnumber@i+1)& (0+255),7,b
 20820   00799E  EFDB  F03C         	goto	u19630
 20821   0079A2  5165               	movf	(get_ldnumber@i+1)& (0+255),w,b
 20822   0079A4  E106               	bnz	u19631
 20823   0079A6  0564               	decf	get_ldnumber@i& (0+255),w,b
 20824   0079A8  B0D8               	btfsc	status,0,c
 20825   0079AA  EFD9  F03C         	goto	u19631
 20826   0079AE  EFDB  F03C         	goto	u19630
 20827   0079B2                     u19631:
 20828   0079B2  EFEB  F03C         	goto	l16190
 20829   0079B6                     u19630:
 20830   0079B6                     
 20831                           ; BSR set to: 0
 20832                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 20833   0079B6  C064  F069         	movff	get_ldnumber@i,get_ldnumber@vol
 20834   0079BA  C065  F06A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 20835   0079BE                     
 20836                           ; BSR set to: 0
 20837                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 20838   0079BE  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 20839   0079C4  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 20840   0079CA  0060  F19F  FFDE   	movff	get_ldnumber@tt,postinc2
 20841   0079D0  0060  F1A3  FFDD   	movff	get_ldnumber@tt+1,postdec2
 20842   0079D6                     l16190:
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 20846   0079D6  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 20847   0079DA  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 20848   0079DE  EFF8  F03C         	goto	l1186
 20849   0079E2                     l1195:
 20850                           
 20851                           ; BSR set to: 0
 20852                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 20853   0079E2  C04D  F069         	movff	_CurrVol,get_ldnumber@vol
 20854   0079E6  6B6A               	clrf	(get_ldnumber@vol+1)& (0+255),b
 20855                           
 20856                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 20857   0079E8  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 20858   0079EC  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 20859   0079F0                     l1186:
 20860                           
 20861                           ; BSR set to: 0
 20862   0079F0  0012               	return		;funcret
 20863   0079F2                     __end_of_get_ldnumber:
 20864                           	callstack 0
 20865                           
 20866 ;; *************** function _disk_status *****************
 20867 ;; Defined at:
 20868 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 20869 ;; Parameters:    Size  Location     Type
 20870 ;;  pdrv            1    wreg     unsigned char 
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;  pdrv            1    0[BANK0 ] unsigned char 
 20873 ;;  stat            1    1[BANK0 ] unsigned char 
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1    wreg      unsigned char 
 20876 ;; Registers used:
 20877 ;;		wreg, status,2, status,0, cstack
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/0
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20887 ;;Total ram usage:        2 bytes
 20888 ;; Hardware stack levels used: 1
 20889 ;; Hardware stack levels required when called: 6
 20890 ;; This function calls:
 20891 ;;		_SD_SPI_IsMediaInitialized
 20892 ;;		_SD_SPI_IsMediaPresent
 20893 ;;		_SD_SPI_IsWriteProtected
 20894 ;; This function is called by:
 20895 ;;		_find_volume
 20896 ;;		_validate
 20897 ;; This function uses a non-reentrant model
 20898 ;;
 20899                           
 20900                           	psect	text74
 20901   00982A                     __ptext74:
 20902                           	callstack 0
 20903   00982A                     _disk_status:
 20904                           	callstack 21
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;incstack = 0
 20908                           ;disk_status@pdrv stored from wreg
 20909   00982A  0100               	movlb	0	; () banked
 20910   00982C  6F60               	movwf	disk_status@pdrv& (0+255),b
 20911   00982E                     
 20912                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 20913   00982E  0E01               	movlw	1
 20914   009830  0100               	movlb	0	; () banked
 20915   009832  6F61               	movwf	disk_status@stat& (0+255),b
 20916                           
 20917                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 20918   009834  EF45  F04C         	goto	l15364
 20919   009838                     l15350:
 20920                           
 20921                           ; BSR set to: 0
 20922                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 20923   009838  EC3B  F052         	call	_SD_SPI_IsMediaPresent	;wreg free
 20924   00983C  0900               	iorlw	0
 20925   00983E  A4D8               	btfss	status,2,c
 20926   009840  EF24  F04C         	goto	u18101
 20927   009844  EF26  F04C         	goto	u18100
 20928   009848                     u18101:
 20929   009848  EF2B  F04C         	goto	l15354
 20930   00984C                     u18100:
 20931   00984C                     
 20932                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 20933   00984C  0E02               	movlw	2
 20934   00984E  0100               	movlb	0	; () banked
 20935   009850  6F61               	movwf	disk_status@stat& (0+255),b
 20936                           
 20937                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 20938   009852  EF37  F04C         	goto	l15358
 20939   009856                     l15354:
 20940   009856  EC05  F052         	call	_SD_SPI_IsMediaInitialized	;wreg free
 20941   00985A  06E8               	decf	wreg,f,c
 20942   00985C  A4D8               	btfss	status,2,c
 20943   00985E  EF33  F04C         	goto	u18111
 20944   009862  EF35  F04C         	goto	u18110
 20945   009866                     u18111:
 20946   009866  EF37  F04C         	goto	l15358
 20947   00986A                     u18110:
 20948   00986A                     
 20949                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 20950   00986A  0100               	movlb	0	; () banked
 20951   00986C  9161               	bcf	disk_status@stat& (0+255),0,b
 20952   00986E                     l15358:
 20953                           
 20954                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 20955   00986E  EC39  F052         	call	_SD_SPI_IsWriteProtected	;wreg free
 20956   009872  06E8               	decf	wreg,f,c
 20957   009874  A4D8               	btfss	status,2,c
 20958   009876  EF3F  F04C         	goto	u18121
 20959   00987A  EF41  F04C         	goto	u18120
 20960   00987E                     u18121:
 20961   00987E  EF4C  F04C         	goto	l15366
 20962   009882                     u18120:
 20963   009882                     
 20964                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 20965   009882  0100               	movlb	0	; () banked
 20966   009884  8561               	bsf	disk_status@stat& (0+255),2,b
 20967   009886  EF4C  F04C         	goto	l15366
 20968   00988A                     l15364:
 20969                           
 20970                           ; BSR set to: 0
 20971   00988A  5160               	movf	disk_status@pdrv& (0+255),w,b
 20972                           
 20973                           ; Switch size 1, requested type "simple"
 20974                           ; Number of cases is 1, Range of values is 0 to 0
 20975                           ; switch strategies available:
 20976                           ; Name         Instructions Cycles
 20977                           ; simple_byte            4     3 (average)
 20978                           ;	Chosen strategy is simple_byte
 20979   00988C  0A00               	xorlw	0	; case 0
 20980   00988E  B4D8               	btfsc	status,2,c
 20981   009890  EF1C  F04C         	goto	l15350
 20982   009894  EF4C  F04C         	goto	l15366
 20983   009898                     l15366:
 20984                           
 20985                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 20986   009898  0100               	movlb	0	; () banked
 20987   00989A  5161               	movf	disk_status@stat& (0+255),w,b
 20988   00989C                     
 20989                           ; BSR set to: 0
 20990   00989C  0012               	return		;funcret
 20991   00989E                     __end_of_disk_status:
 20992                           	callstack 0
 20993                           
 20994 ;; *************** function _SD_SPI_IsWriteProtected *****************
 20995 ;; Defined at:
 20996 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20997 ;; Parameters:    Size  Location     Type
 20998 ;;		None
 20999 ;; Auto vars:     Size  Location     Type
 21000 ;;		None
 21001 ;; Return value:  Size  Location     Type
 21002 ;;                  1    wreg      _Bool 
 21003 ;; Registers used:
 21004 ;;		wreg
 21005 ;; Tracked objects:
 21006 ;;		On entry : 0/0
 21007 ;;		On exit  : 0/0
 21008 ;;		Unchanged: 0/0
 21009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21014 ;;Total ram usage:        0 bytes
 21015 ;; Hardware stack levels used: 1
 21016 ;; Hardware stack levels required when called: 5
 21017 ;; This function calls:
 21018 ;;		Nothing
 21019 ;; This function is called by:
 21020 ;;		_disk_status
 21021 ;; This function uses a non-reentrant model
 21022 ;;
 21023                           
 21024                           	psect	text75
 21025   00A472                     __ptext75:
 21026                           	callstack 0
 21027   00A472                     _SD_SPI_IsWriteProtected:
 21028                           	callstack 21
 21029   00A472                     
 21030                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 21031   00A472  0E00               	movlw	0
 21032   00A474  0012               	return		;funcret
 21033   00A476                     __end_of_SD_SPI_IsWriteProtected:
 21034                           	callstack 0
 21035                           
 21036 ;; *************** function _SD_SPI_IsMediaPresent *****************
 21037 ;; Defined at:
 21038 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;		None
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;		None
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  1    wreg      _Bool 
 21045 ;; Registers used:
 21046 ;;		wreg
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/0
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21056 ;;Total ram usage:        0 bytes
 21057 ;; Hardware stack levels used: 1
 21058 ;; Hardware stack levels required when called: 5
 21059 ;; This function calls:
 21060 ;;		Nothing
 21061 ;; This function is called by:
 21062 ;;		_disk_status
 21063 ;; This function uses a non-reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text76
 21067   00A476                     __ptext76:
 21068                           	callstack 0
 21069   00A476                     _SD_SPI_IsMediaPresent:
 21070                           	callstack 21
 21071   00A476                     
 21072                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 21073   00A476  0E01               	movlw	1
 21074   00A478  0012               	return		;funcret
 21075   00A47A                     __end_of_SD_SPI_IsMediaPresent:
 21076                           	callstack 0
 21077                           
 21078 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 21079 ;; Defined at:
 21080 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21081 ;; Parameters:    Size  Location     Type
 21082 ;;		None
 21083 ;; Auto vars:     Size  Location     Type
 21084 ;;		None
 21085 ;; Return value:  Size  Location     Type
 21086 ;;                  1    wreg      _Bool 
 21087 ;; Registers used:
 21088 ;;		wreg, status,2
 21089 ;; Tracked objects:
 21090 ;;		On entry : 0/0
 21091 ;;		On exit  : 0/0
 21092 ;;		Unchanged: 0/0
 21093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21098 ;;Total ram usage:        0 bytes
 21099 ;; Hardware stack levels used: 1
 21100 ;; Hardware stack levels required when called: 5
 21101 ;; This function calls:
 21102 ;;		Nothing
 21103 ;; This function is called by:
 21104 ;;		_disk_status
 21105 ;; This function uses a non-reentrant model
 21106 ;;
 21107                           
 21108                           	psect	text77
 21109   00A40A                     __ptext77:
 21110                           	callstack 0
 21111   00A40A                     _SD_SPI_IsMediaInitialized:
 21112                           	callstack 21
 21113   00A40A                     
 21114                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 21115   00A40A  5053               	movf	(_mediaInformation+3)^0,w,c
 21116   00A40C  A4D8               	btfss	status,2,c
 21117   00A40E  EF0B  F052         	goto	u17751
 21118   00A412  EF0E  F052         	goto	u17750
 21119   00A416                     u17751:
 21120   00A416  0E01               	movlw	1
 21121   00A418  EF0F  F052         	goto	u17760
 21122   00A41C                     u17750:
 21123   00A41C  0E00               	movlw	0
 21124   00A41E                     u17760:
 21125   00A41E  0012               	return		;funcret
 21126   00A420                     __end_of_SD_SPI_IsMediaInitialized:
 21127                           	callstack 0
 21128                           
 21129 ;; *************** function _disk_initialize *****************
 21130 ;; Defined at:
 21131 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;  pdrv            1    wreg     unsigned char 
 21134 ;; Auto vars:     Size  Location     Type
 21135 ;;  pdrv            1   84[BANK0 ] unsigned char 
 21136 ;;  stat            1   85[BANK0 ] unsigned char 
 21137 ;; Return value:  Size  Location     Type
 21138 ;;                  1    wreg      unsigned char 
 21139 ;; Registers used:
 21140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21141 ;; Tracked objects:
 21142 ;;		On entry : 0/0
 21143 ;;		On exit  : 0/0
 21144 ;;		Unchanged: 0/0
 21145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21147 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21150 ;;Total ram usage:        2 bytes
 21151 ;; Hardware stack levels used: 1
 21152 ;; Hardware stack levels required when called: 8
 21153 ;; This function calls:
 21154 ;;		_SD_SPI_MediaInitialize
 21155 ;; This function is called by:
 21156 ;;		_find_volume
 21157 ;; This function uses a non-reentrant model
 21158 ;;
 21159                           
 21160                           	psect	text78
 21161   009EF8                     __ptext78:
 21162                           	callstack 0
 21163   009EF8                     _disk_initialize:
 21164                           	callstack 19
 21165                           
 21166                           ;incstack = 0
 21167                           ;disk_initialize@pdrv stored from wreg
 21168   009EF8  0100               	movlb	0	; () banked
 21169   009EFA  6FB4               	movwf	disk_initialize@pdrv& (0+255),b
 21170   009EFC                     
 21171                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 21172   009EFC  0E01               	movlw	1
 21173   009EFE  0100               	movlb	0	; () banked
 21174   009F00  6FB5               	movwf	disk_initialize@stat& (0+255),b
 21175                           
 21176                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 21177   009F02  EF97  F04F         	goto	l15882
 21178   009F06                     l15874:
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 21182   009F06  EC92  F00B         	call	_SD_SPI_MediaInitialize	;wreg free
 21183   009F0A  06E8               	decf	wreg,f,c
 21184   009F0C  A4D8               	btfss	status,2,c
 21185   009F0E  EF8B  F04F         	goto	u19071
 21186   009F12  EF8D  F04F         	goto	u19070
 21187   009F16                     u19071:
 21188   009F16  EF92  F04F         	goto	l15878
 21189   009F1A                     u19070:
 21190   009F1A                     
 21191                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 21192   009F1A  0E00               	movlw	0
 21193   009F1C  0100               	movlb	0	; () banked
 21194   009F1E  6FB5               	movwf	disk_initialize@stat& (0+255),b
 21195                           
 21196                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 21197   009F20  EF9E  F04F         	goto	l15884
 21198   009F24                     l15878:
 21199                           
 21200                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 21201   009F24  0E01               	movlw	1
 21202   009F26  0100               	movlb	0	; () banked
 21203   009F28  6FB5               	movwf	disk_initialize@stat& (0+255),b
 21204   009F2A  EF9E  F04F         	goto	l15884
 21205   009F2E                     l15882:
 21206                           
 21207                           ; BSR set to: 0
 21208   009F2E  51B4               	movf	disk_initialize@pdrv& (0+255),w,b
 21209                           
 21210                           ; Switch size 1, requested type "simple"
 21211                           ; Number of cases is 1, Range of values is 0 to 0
 21212                           ; switch strategies available:
 21213                           ; Name         Instructions Cycles
 21214                           ; simple_byte            4     3 (average)
 21215                           ;	Chosen strategy is simple_byte
 21216   009F30  0A00               	xorlw	0	; case 0
 21217   009F32  B4D8               	btfsc	status,2,c
 21218   009F34  EF83  F04F         	goto	l15874
 21219   009F38  EF9E  F04F         	goto	l15884
 21220   009F3C                     l15884:
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 21224   009F3C  51B5               	movf	disk_initialize@stat& (0+255),w,b
 21225   009F3E                     
 21226                           ; BSR set to: 0
 21227   009F3E  0012               	return		;funcret
 21228   009F40                     __end_of_disk_initialize:
 21229                           	callstack 0
 21230                           
 21231 ;; *************** function _SD_SPI_MediaInitialize *****************
 21232 ;; Defined at:
 21233 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21234 ;; Parameters:    Size  Location     Type
 21235 ;;		None
 21236 ;; Auto vars:     Size  Location     Type
 21237 ;;  CSDResponse    20   45[BANK0 ] unsigned char [20]
 21238 ;;  response        5   77[BANK0 ] struct .
 21239 ;;  c_size          4   73[BANK0 ] unsigned long 
 21240 ;;  timeout         2   82[BANK0 ] unsigned short 
 21241 ;;  count           1   72[BANK0 ] unsigned char 
 21242 ;;  block_len       1   71[BANK0 ] unsigned char 
 21243 ;;  index           1   70[BANK0 ] unsigned char 
 21244 ;;  c_size_mult     1   69[BANK0 ] unsigned char 
 21245 ;; Return value:  Size  Location     Type
 21246 ;;                  1    wreg      _Bool 
 21247 ;; Registers used:
 21248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21249 ;; Tracked objects:
 21250 ;;		On entry : 0/0
 21251 ;;		On exit  : 0/0
 21252 ;;		Unchanged: 0/0
 21253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21255 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21256 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21257 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21258 ;;Total ram usage:       50 bytes
 21259 ;; Hardware stack levels used: 1
 21260 ;; Hardware stack levels required when called: 7
 21261 ;; This function calls:
 21262 ;;		_SDFAST_open
 21263 ;;		_SDSLOW_open
 21264 ;;		_SD_SPI_DelayMilliseconds
 21265 ;;		_SD_SendCmd
 21266 ;;		_SPI1_Close
 21267 ;;		_SPI1_ExchangeByte
 21268 ;;		___lmul
 21269 ;; This function is called by:
 21270 ;;		_disk_initialize
 21271 ;; This function uses a non-reentrant model
 21272 ;;
 21273                           
 21274                           	psect	text79
 21275   001724                     __ptext79:
 21276                           	callstack 0
 21277   001724                     _SD_SPI_MediaInitialize:
 21278                           	callstack 19
 21279   001724                     
 21280                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 21281   001724  0E00               	movlw	0
 21282   001726  6E53               	movwf	(_mediaInformation+3)^0,c
 21283                           
 21284                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 21285   001728  0E00               	movlw	0
 21286   00172A  6E50               	movwf	_mediaInformation^0,c
 21287                           
 21288                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 21289   00172C  0E00               	movlw	0
 21290   00172E  6E54               	movwf	(_mediaInformation+4)^0,c
 21291   001730  0E00               	movlw	0
 21292   001732  6E55               	movwf	(_mediaInformation+5)^0,c
 21293   001734  0E00               	movlw	0
 21294   001736  6E56               	movwf	(_mediaInformation+6)^0,c
 21295   001738  0E00               	movlw	0
 21296   00173A  6E57               	movwf	(_mediaInformation+7)^0,c
 21297                           
 21298                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 21299   00173C  0E00               	movlw	0
 21300   00173E  6E58               	movwf	(_mediaInformation+8)^0,c
 21301   001740  8ABA               	bsf	186,5,c	;volatile
 21302   001742                     
 21303                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 21304   001742  0EA9               	movlw	low (_spiMaster+22)
 21305   001744  6EF6               	movwf	tblptrl,c
 21306   001746  0EFF               	movlw	high (_spiMaster+22)
 21307   001748  6EF7               	movwf	tblptrh,c
 21308   00174A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21309   00174A  6AF8               	clrf	tblptru,c
 21310   00174C                     	endif
 21311   00174C                     	if	0	;tblptru may be non-zero
 21312   00174C                     	endif
 21313   00174C  0009               	tblrd		*+
 21314   00174E  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21315   001754  0009               	tblrd		*+
 21316   001756  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21317   00175C  D802               	call	u18138
 21318   00175E  EFBB  F00B         	goto	u18139
 21319   001762                     u18138:
 21320   001762  0005               	push	
 21321   001764  6EFA               	movwf	pclath,c
 21322   001766  0100               	movlb	0	; () banked
 21323   001768  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21324   00176A  6EFD               	movwf	tosl,c
 21325   00176C  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21326   00176E  6EFE               	movwf	tosh,c
 21327   001770  6AFF               	clrf	tosu,c
 21328   001772  50FA               	movf	pclath,w,c
 21329   001774  0012               	return		;indir
 21330   001776                     u18139:
 21331   001776  0900               	iorlw	0
 21332   001778  A4D8               	btfss	status,2,c
 21333   00177A  EFC1  F00B         	goto	u18141
 21334   00177E  EFC3  F00B         	goto	u18140
 21335   001782                     u18141:
 21336   001782  EFC6  F00B         	goto	l15380
 21337   001786                     u18140:
 21338   001786                     l15376:
 21339                           
 21340                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 21341   001786  0E00               	movlw	0
 21342   001788  EF9F  F00F         	goto	l1611
 21343   00178C                     l15380:
 21344                           
 21345                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 21346   00178C  0E1E               	movlw	30
 21347   00178E  EC4F  F04C         	call	_SD_SPI_DelayMilliseconds
 21348   001792                     
 21349                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 21350   001792  0E00               	movlw	0
 21351   001794  0100               	movlb	0	; () banked
 21352   001796  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21353   001798  0E64               	movlw	100
 21354   00179A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21355   00179C                     l15384:
 21356                           
 21357                           ; BSR set to: 0
 21358   00179C  8ABA               	bsf	186,5,c	;volatile
 21359   00179E                     
 21360                           ; BSR set to: 0
 21361                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 21362   00179E  0E97               	movlw	low (_spiMaster+4)
 21363   0017A0  6EF6               	movwf	tblptrl,c
 21364   0017A2  0EFF               	movlw	high (_spiMaster+4)
 21365   0017A4  6EF7               	movwf	tblptrh,c
 21366   0017A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21367   0017A6  6AF8               	clrf	tblptru,c
 21368   0017A8                     	endif
 21369   0017A8                     	if	0	;tblptru may be non-zero
 21370   0017A8                     	endif
 21371   0017A8  0009               	tblrd		*+
 21372   0017AA  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21373   0017B0  0009               	tblrd		*+
 21374   0017B2  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21375   0017B8  D802               	call	u18158
 21376   0017BA  EFE9  F00B         	goto	u18159
 21377   0017BE                     u18158:
 21378   0017BE  0005               	push	
 21379   0017C0  6EFA               	movwf	pclath,c
 21380   0017C2  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21381   0017C4  6EFD               	movwf	tosl,c
 21382   0017C6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21383   0017C8  6EFE               	movwf	tosh,c
 21384   0017CA  6AFF               	clrf	tosu,c
 21385   0017CC  50FA               	movf	pclath,w,c
 21386   0017CE  0EFF               	movlw	255
 21387   0017D0  0012               	return		;indir
 21388   0017D2                     u18159:
 21389   0017D2  9ABA               	bcf	186,5,c	;volatile
 21390   0017D4                     
 21391                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 21392   0017D4  0100               	movlb	0	; () banked
 21393   0017D6  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21394   0017D8  A0D8               	btfss	status,0,c
 21395   0017DA  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21396   0017DC                     
 21397                           ; BSR set to: 0
 21398                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 21399   0017DC  0E00               	movlw	0
 21400   0017DE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21401   0017E0  0E00               	movlw	0
 21402   0017E2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21403   0017E4  0E00               	movlw	0
 21404   0017E6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21405   0017E8  0E00               	movlw	0
 21406   0017EA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21407   0017EC  0E00               	movlw	0
 21408   0017EE  EC82  F01C         	call	_SD_SendCmd
 21409   0017F2  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21410   0017F6  0E04               	movlw	4
 21411   0017F8                     u18161:
 21412   0017F8  006F FFAF FFDB     	movff	plusw0,plusw2
 21413   0017FE  06E8               	decf	wreg,f,c
 21414   001800  E2FB               	bc	u18161
 21415   001802                     
 21416                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 21417   001802  0100               	movlb	0	; () banked
 21418   001804  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21419   001806  B4D8               	btfsc	status,2,c
 21420   001808  EF08  F00C         	goto	u18171
 21421   00180C  EF0A  F00C         	goto	u18170
 21422   001810                     u18171:
 21423   001810  EF13  F00C         	goto	l15398
 21424   001814                     u18170:
 21425   001814                     
 21426                           ; BSR set to: 0
 21427   001814  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21428   001816  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21429   001818  A4D8               	btfss	status,2,c
 21430   00181A  EF11  F00C         	goto	u18181
 21431   00181E  EF13  F00C         	goto	u18180
 21432   001822                     u18181:
 21433   001822  EFCE  F00B         	goto	l15384
 21434   001826                     u18180:
 21435   001826                     l15398:
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 21439   001826  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21440   001828  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21441   00182A  A4D8               	btfss	status,2,c
 21442   00182C  EF1A  F00C         	goto	u18191
 21443   001830  EF1C  F00C         	goto	u18190
 21444   001834                     u18191:
 21445   001834  EF80  F00C         	goto	l15422
 21446   001838                     u18190:
 21447   001838                     
 21448                           ; BSR set to: 0
 21449   001838  8ABA               	bsf	186,5,c	;volatile
 21450   00183A                     
 21451                           ; BSR set to: 0
 21452                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 21453   00183A  0E97               	movlw	low (_spiMaster+4)
 21454   00183C  6EF6               	movwf	tblptrl,c
 21455   00183E  0EFF               	movlw	high (_spiMaster+4)
 21456   001840  6EF7               	movwf	tblptrh,c
 21457   001842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21458   001842  6AF8               	clrf	tblptru,c
 21459   001844                     	endif
 21460   001844                     	if	0	;tblptru may be non-zero
 21461   001844                     	endif
 21462   001844  0009               	tblrd		*+
 21463   001846  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21464   00184C  0009               	tblrd		*+
 21465   00184E  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21466   001854  D802               	call	u18208
 21467   001856  EF37  F00C         	goto	u18209
 21468   00185A                     u18208:
 21469   00185A  0005               	push	
 21470   00185C  6EFA               	movwf	pclath,c
 21471   00185E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21472   001860  6EFD               	movwf	tosl,c
 21473   001862  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21474   001864  6EFE               	movwf	tosh,c
 21475   001866  6AFF               	clrf	tosu,c
 21476   001868  50FA               	movf	pclath,w,c
 21477   00186A  0EFF               	movlw	255
 21478   00186C  0012               	return		;indir
 21479   00186E                     u18209:
 21480   00186E  9ABA               	bcf	186,5,c	;volatile
 21481   001870                     
 21482                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 21483   001870  0E00               	movlw	0
 21484   001872  0100               	movlb	0	; () banked
 21485   001874  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21486   001876  0E00               	movlw	0
 21487   001878  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21488   00187A  0E00               	movlw	0
 21489   00187C  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21490   00187E  0E00               	movlw	0
 21491   001880  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21492   001882  0E05               	movlw	5
 21493   001884  EC82  F01C         	call	_SD_SendCmd
 21494   001888                     
 21495                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 21496   001888  0E00               	movlw	0
 21497   00188A  0100               	movlb	0	; () banked
 21498   00188C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21499   00188E  0E00               	movlw	0
 21500   001890  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21501   001892  0E00               	movlw	0
 21502   001894  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21503   001896  0E00               	movlw	0
 21504   001898  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21505   00189A  0E00               	movlw	0
 21506   00189C  EC82  F01C         	call	_SD_SendCmd
 21507   0018A0  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21508   0018A4  0E04               	movlw	4
 21509   0018A6                     u18211:
 21510   0018A6  006F FFAF FFDB     	movff	plusw0,plusw2
 21511   0018AC  06E8               	decf	wreg,f,c
 21512   0018AE  E2FB               	bc	u18211
 21513   0018B0                     
 21514                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 21515   0018B0  0100               	movlb	0	; () banked
 21516   0018B2  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21517   0018B4  B4D8               	btfsc	status,2,c
 21518   0018B6  EF5F  F00C         	goto	u18221
 21519   0018BA  EF61  F00C         	goto	u18220
 21520   0018BE                     u18221:
 21521   0018BE  EF80  F00C         	goto	l15422
 21522   0018C2                     u18220:
 21523   0018C2                     
 21524                           ; BSR set to: 0
 21525                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21526   0018C2  0E02               	movlw	2
 21527   0018C4  6E50               	movwf	_mediaInformation^0,c
 21528   0018C6                     
 21529                           ; BSR set to: 0
 21530   0018C6  8ABA               	bsf	186,5,c	;volatile
 21531   0018C8                     
 21532                           ; BSR set to: 0
 21533                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 21534   0018C8  0E93               	movlw	low _spiMaster
 21535   0018CA  6EF6               	movwf	tblptrl,c
 21536   0018CC                     	if	1	;There is more than 1 active tblptr byte
 21537   0018CC  0EFF               	movlw	high _spiMaster
 21538   0018CE  6EF7               	movwf	tblptrh,c
 21539   0018D0                     	endif
 21540   0018D0                     	if	1	;There are 3 active tblptr bytes
 21541   0018D0  0E00               	movlw	low (_spiMaster shr (0+16))
 21542   0018D2  6EF8               	movwf	tblptru,c
 21543   0018D4                     	endif
 21544   0018D4  0009               	tblrd		*+
 21545   0018D6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21546   0018DC  0009               	tblrd		*+
 21547   0018DE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21548   0018E4  D802               	call	u18238
 21549   0018E6  EF7E  F00C         	goto	u18239
 21550   0018EA                     u18238:
 21551   0018EA  0005               	push	
 21552   0018EC  6EFA               	movwf	pclath,c
 21553   0018EE  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21554   0018F0  6EFD               	movwf	tosl,c
 21555   0018F2  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21556   0018F4  6EFE               	movwf	tosh,c
 21557   0018F6  6AFF               	clrf	tosu,c
 21558   0018F8  50FA               	movf	pclath,w,c
 21559   0018FA  0012               	return		;indir
 21560   0018FC                     u18239:
 21561   0018FC  EFC3  F00B         	goto	l15376
 21562   001900                     l15422:
 21563                           
 21564                           ; BSR set to: 0
 21565                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 21566   001900  0EAA               	movlw	170
 21567   001902  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21568   001904  0E01               	movlw	1
 21569   001906  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21570   001908  0E00               	movlw	0
 21571   00190A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21572   00190C  0E00               	movlw	0
 21573   00190E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21574   001910  0E02               	movlw	2
 21575   001912  EC82  F01C         	call	_SD_SendCmd
 21576   001916  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21577   00191A  0E04               	movlw	4
 21578   00191C                     u18241:
 21579   00191C  006F FFAF FFDB     	movff	plusw0,plusw2
 21580   001922  06E8               	decf	wreg,f,c
 21581   001924  E2FB               	bc	u18241
 21582   001926                     
 21583                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 21584   001926  EE20  F0AE         	lfsr	2,SD_SPI_MediaInitialize@response+1
 21585   00192A  0EFF               	movlw	255
 21586   00192C  14DE               	andwf	postinc2,w,c
 21587   00192E  0100               	movlb	0	; () banked
 21588   001930  6F82               	movwf	??_SD_SPI_MediaInitialize& (0+255),b
 21589   001932  0E0F               	movlw	15
 21590   001934  14DE               	andwf	postinc2,w,c
 21591   001936  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21592   001938  0E00               	movlw	0
 21593   00193A  14DE               	andwf	postinc2,w,c
 21594   00193C  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 21595   00193E  0E00               	movlw	0
 21596   001940  14DE               	andwf	postinc2,w,c
 21597   001942  6F85               	movwf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 21598   001944  0EAA               	movlw	170
 21599   001946  1982               	xorwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21600   001948  E108               	bnz	u18251
 21601   00194A  0583               	decf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21602   00194C  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 21603   00194E  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 21604   001950  A4D8               	btfss	status,2,c
 21605   001952  EFAD  F00C         	goto	u18251
 21606   001956  EFAF  F00C         	goto	u18250
 21607   00195A                     u18251:
 21608   00195A  EF2B  F00D         	goto	l15458
 21609   00195E                     u18250:
 21610   00195E                     
 21611                           ; BSR set to: 0
 21612   00195E  B5AD               	btfsc	SD_SPI_MediaInitialize@response& (0+255),2,b
 21613   001960  EFB4  F00C         	goto	u18261
 21614   001964  EFB6  F00C         	goto	u18260
 21615   001968                     u18261:
 21616   001968  EF2B  F00D         	goto	l15458
 21617   00196C                     u18260:
 21618   00196C                     
 21619                           ; BSR set to: 0
 21620   00196C  0E00               	movlw	0
 21621   00196E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21622   001970  0E00               	movlw	0
 21623   001972  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21624   001974  0E00               	movlw	0
 21625   001976  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21626   001978  0E00               	movlw	0
 21627   00197A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21628   00197C  0E10               	movlw	16
 21629   00197E  EC82  F01C         	call	_SD_SendCmd
 21630   001982                     
 21631                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 21632   001982  0E00               	movlw	0
 21633   001984  0100               	movlb	0	; () banked
 21634   001986  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21635   001988  0E00               	movlw	0
 21636   00198A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21637   00198C                     l15436:
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 21641   00198C  0E00               	movlw	0
 21642   00198E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21643   001990  0E00               	movlw	0
 21644   001992  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21645   001994  0E00               	movlw	0
 21646   001996  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21647   001998  0E00               	movlw	0
 21648   00199A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21649   00199C  0E0F               	movlw	15
 21650   00199E  EC82  F01C         	call	_SD_SendCmd
 21651                           
 21652                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 21653   0019A2  0E00               	movlw	0
 21654   0019A4  0100               	movlb	0	; () banked
 21655   0019A6  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21656   0019A8  0E00               	movlw	0
 21657   0019AA  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21658   0019AC  0E00               	movlw	0
 21659   0019AE  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21660   0019B0  0E40               	movlw	64
 21661   0019B2  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21662   0019B4  0E12               	movlw	18
 21663   0019B6  EC82  F01C         	call	_SD_SendCmd
 21664   0019BA  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21665   0019BE  0E04               	movlw	4
 21666   0019C0                     u18271:
 21667   0019C0  006F FFAF FFDB     	movff	plusw0,plusw2
 21668   0019C6  06E8               	decf	wreg,f,c
 21669   0019C8  E2FB               	bc	u18271
 21670   0019CA                     
 21671                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 21672   0019CA  0100               	movlb	0	; () banked
 21673   0019CC  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21674   0019CE  A4D8               	btfss	status,2,c
 21675   0019D0  EFEC  F00C         	goto	u18281
 21676   0019D4  EFEE  F00C         	goto	u18280
 21677   0019D8                     u18281:
 21678   0019D8  EFF0  F00C         	goto	l15442
 21679   0019DC                     u18280:
 21680   0019DC  EFFC  F00C         	goto	l15446
 21681   0019E0                     l15442:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 21685   0019E0  4BB2               	infsnz	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21686   0019E2  2BB3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21687   0019E4                     
 21688                           ; BSR set to: 0
 21689   0019E4  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21690   0019E6  E106               	bnz	u18291
 21691   0019E8  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21692   0019EA  A4D8               	btfss	status,2,c
 21693   0019EC  EFFA  F00C         	goto	u18291
 21694   0019F0  EFFC  F00C         	goto	u18290
 21695   0019F4                     u18291:
 21696   0019F4  EFC6  F00C         	goto	l15436
 21697   0019F8                     u18290:
 21698   0019F8                     l15446:
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 21702   0019F8  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21703   0019FA  E106               	bnz	u18301
 21704   0019FC  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21705   0019FE  A4D8               	btfss	status,2,c
 21706   001A00  EF04  F00D         	goto	u18301
 21707   001A04  EF06  F00D         	goto	u18300
 21708   001A08                     u18301:
 21709   001A08  EF08  F00D         	goto	l15450
 21710   001A0C                     u18300:
 21711   001A0C                     
 21712                           ; BSR set to: 0
 21713                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21714   001A0C  0E02               	movlw	2
 21715   001A0E  6E50               	movwf	_mediaInformation^0,c
 21716   001A10                     l15450:
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 21720   001A10  0E00               	movlw	0
 21721   001A12  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21722   001A14  0E00               	movlw	0
 21723   001A16  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21724   001A18  0E00               	movlw	0
 21725   001A1A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21726   001A1C  0E00               	movlw	0
 21727   001A1E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21728   001A20  0E10               	movlw	16
 21729   001A22  EC82  F01C         	call	_SD_SendCmd
 21730   001A26  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21731   001A2A  0E04               	movlw	4
 21732   001A2C                     u18311:
 21733   001A2C  006F FFAF FFDB     	movff	plusw0,plusw2
 21734   001A32  06E8               	decf	wreg,f,c
 21735   001A34  E2FB               	bc	u18311
 21736   001A36                     
 21737                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 21738   001A36  0100               	movlb	0	; () banked
 21739   001A38  ADB1               	btfss	(SD_SPI_MediaInitialize@response+4)& (0+255),6,b
 21740   001A3A  EF21  F00D         	goto	u18321
 21741   001A3E  EF23  F00D         	goto	u18320
 21742   001A42                     u18321:
 21743   001A42  EF27  F00D         	goto	l15456
 21744   001A46                     u18320:
 21745   001A46                     
 21746                           ; BSR set to: 0
 21747                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 21748   001A46  0E01               	movlw	1
 21749   001A48  6E58               	movwf	(_mediaInformation+8)^0,c
 21750                           
 21751                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 21752   001A4A  EF69  F00D         	goto	l1648
 21753   001A4E                     l15456:
 21754                           
 21755                           ; BSR set to: 0
 21756                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 21757   001A4E  0E00               	movlw	0
 21758   001A50  6E58               	movwf	(_mediaInformation+8)^0,c
 21759   001A52  EF69  F00D         	goto	l1648
 21760   001A56                     l15458:
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 21764   001A56  0E01               	movlw	1
 21765   001A58  EC4F  F04C         	call	_SD_SPI_DelayMilliseconds
 21766   001A5C  9ABA               	bcf	186,5,c	;volatile
 21767   001A5E                     
 21768                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 21769   001A5E  0E00               	movlw	0
 21770   001A60  6E58               	movwf	(_mediaInformation+8)^0,c
 21771   001A62                     
 21772                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 21773   001A62  0E1F               	movlw	31
 21774   001A64  0100               	movlb	0	; () banked
 21775   001A66  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21776   001A68  69B2               	setf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21777   001A6A                     l15466:
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 21781   001A6A  0E00               	movlw	0
 21782   001A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21783   001A6E  0E00               	movlw	0
 21784   001A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21785   001A72  0E00               	movlw	0
 21786   001A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21787   001A76  0E00               	movlw	0
 21788   001A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21789   001A7A  0E01               	movlw	1
 21790   001A7C  EC82  F01C         	call	_SD_SendCmd
 21791   001A80  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21792   001A84  0E04               	movlw	4
 21793   001A86                     u18331:
 21794   001A86  006F FFAF FFDB     	movff	plusw0,plusw2
 21795   001A8C  06E8               	decf	wreg,f,c
 21796   001A8E  E2FB               	bc	u18331
 21797   001A90                     
 21798                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 21799   001A90  0100               	movlb	0	; () banked
 21800   001A92  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21801   001A94  A0D8               	btfss	status,0,c
 21802   001A96  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21803   001A98                     
 21804                           ; BSR set to: 0
 21805                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 21806   001A98  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21807   001A9A  B4D8               	btfsc	status,2,c
 21808   001A9C  EF52  F00D         	goto	u18341
 21809   001AA0  EF54  F00D         	goto	u18340
 21810   001AA4                     u18341:
 21811   001AA4  EF5D  F00D         	goto	l15474
 21812   001AA8                     u18340:
 21813   001AA8                     
 21814                           ; BSR set to: 0
 21815   001AA8  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21816   001AAA  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21817   001AAC  A4D8               	btfss	status,2,c
 21818   001AAE  EF5B  F00D         	goto	u18351
 21819   001AB2  EF5D  F00D         	goto	u18350
 21820   001AB6                     u18351:
 21821   001AB6  EF35  F00D         	goto	l15466
 21822   001ABA                     u18350:
 21823   001ABA                     l15474:
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 21827   001ABA  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21828   001ABC  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21829   001ABE  A4D8               	btfss	status,2,c
 21830   001AC0  EF64  F00D         	goto	u18361
 21831   001AC4  EF66  F00D         	goto	u18360
 21832   001AC8                     u18361:
 21833   001AC8  EF69  F00D         	goto	l1648
 21834   001ACC                     u18360:
 21835   001ACC                     
 21836                           ; BSR set to: 0
 21837                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21838   001ACC  0E02               	movlw	2
 21839   001ACE  6E50               	movwf	_mediaInformation^0,c
 21840   001AD0                     
 21841                           ; BSR set to: 0
 21842   001AD0  8ABA               	bsf	186,5,c	;volatile
 21843   001AD2                     l1648:
 21844                           
 21845                           ; BSR set to: 0
 21846   001AD2  8ABA               	bsf	186,5,c	;volatile
 21847   001AD4                     
 21848                           ; BSR set to: 0
 21849                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 21850   001AD4  0E93               	movlw	low _spiMaster
 21851   001AD6  6EF6               	movwf	tblptrl,c
 21852   001AD8                     	if	1	;There is more than 1 active tblptr byte
 21853   001AD8  0EFF               	movlw	high _spiMaster
 21854   001ADA  6EF7               	movwf	tblptrh,c
 21855   001ADC                     	endif
 21856   001ADC                     	if	1	;There are 3 active tblptr bytes
 21857   001ADC  0E00               	movlw	low (_spiMaster shr (0+16))
 21858   001ADE  6EF8               	movwf	tblptru,c
 21859   001AE0                     	endif
 21860   001AE0  0009               	tblrd		*+
 21861   001AE2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21862   001AE8  0009               	tblrd		*+
 21863   001AEA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21864   001AF0  D802               	call	u18378
 21865   001AF2  EF84  F00D         	goto	u18379
 21866   001AF6                     u18378:
 21867   001AF6  0005               	push	
 21868   001AF8  6EFA               	movwf	pclath,c
 21869   001AFA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21870   001AFC  6EFD               	movwf	tosl,c
 21871   001AFE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21872   001B00  6EFE               	movwf	tosh,c
 21873   001B02  6AFF               	clrf	tosu,c
 21874   001B04  50FA               	movf	pclath,w,c
 21875   001B06  0012               	return		;indir
 21876   001B08                     u18379:
 21877   001B08                     
 21878                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 21879   001B08  0E95               	movlw	low (_spiMaster+2)
 21880   001B0A  6EF6               	movwf	tblptrl,c
 21881   001B0C  0EFF               	movlw	high (_spiMaster+2)
 21882   001B0E  6EF7               	movwf	tblptrh,c
 21883   001B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21884   001B10  6AF8               	clrf	tblptru,c
 21885   001B12                     	endif
 21886   001B12                     	if	0	;tblptru may be non-zero
 21887   001B12                     	endif
 21888   001B12  0009               	tblrd		*+
 21889   001B14  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21890   001B1A  0009               	tblrd		*+
 21891   001B1C  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21892   001B22  D802               	call	u18388
 21893   001B24  EF9E  F00D         	goto	u18389
 21894   001B28                     u18388:
 21895   001B28  0005               	push	
 21896   001B2A  6EFA               	movwf	pclath,c
 21897   001B2C  0100               	movlb	0	; () banked
 21898   001B2E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21899   001B30  6EFD               	movwf	tosl,c
 21900   001B32  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21901   001B34  6EFE               	movwf	tosh,c
 21902   001B36  6AFF               	clrf	tosu,c
 21903   001B38  50FA               	movf	pclath,w,c
 21904   001B3A  0012               	return		;indir
 21905   001B3C                     u18389:
 21906   001B3C  0900               	iorlw	0
 21907   001B3E  A4D8               	btfss	status,2,c
 21908   001B40  EFA4  F00D         	goto	u18391
 21909   001B44  EFA6  F00D         	goto	u18390
 21910   001B48                     u18391:
 21911   001B48  EFA8  F00D         	goto	l1651
 21912   001B4C                     u18390:
 21913   001B4C  EFC3  F00B         	goto	l15376
 21914   001B50                     l1651:
 21915   001B50  9ABA               	bcf	186,5,c	;volatile
 21916   001B52                     
 21917                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 21918   001B52  0E00               	movlw	0
 21919   001B54  0100               	movlb	0	; () banked
 21920   001B56  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21921   001B58  0E14               	movlw	20
 21922   001B5A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21923   001B5C                     l15490:
 21924                           
 21925                           ; BSR set to: 0
 21926                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 21927   001B5C  0E00               	movlw	0
 21928   001B5E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21929   001B60  0E00               	movlw	0
 21930   001B62  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21931   001B64  0E00               	movlw	0
 21932   001B66  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21933   001B68  0E00               	movlw	0
 21934   001B6A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21935   001B6C  0E03               	movlw	3
 21936   001B6E  EC82  F01C         	call	_SD_SendCmd
 21937   001B72  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21938   001B76  0E04               	movlw	4
 21939   001B78                     u18401:
 21940   001B78  006F FFAF FFDB     	movff	plusw0,plusw2
 21941   001B7E  06E8               	decf	wreg,f,c
 21942   001B80  E2FB               	bc	u18401
 21943   001B82                     
 21944                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 21945   001B82  0100               	movlb	0	; () banked
 21946   001B84  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21947   001B86  A0D8               	btfss	status,0,c
 21948   001B88  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21949   001B8A                     
 21950                           ; BSR set to: 0
 21951                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 21952   001B8A  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21953   001B8C  B4D8               	btfsc	status,2,c
 21954   001B8E  EFCB  F00D         	goto	u18411
 21955   001B92  EFCD  F00D         	goto	u18410
 21956   001B96                     u18411:
 21957   001B96  EFD6  F00D         	goto	l15498
 21958   001B9A                     u18410:
 21959   001B9A                     
 21960                           ; BSR set to: 0
 21961   001B9A  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21962   001B9C  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21963   001B9E  A4D8               	btfss	status,2,c
 21964   001BA0  EFD4  F00D         	goto	u18421
 21965   001BA4  EFD6  F00D         	goto	u18420
 21966   001BA8                     u18421:
 21967   001BA8  EFAE  F00D         	goto	l15490
 21968   001BAC                     u18420:
 21969   001BAC                     l15498:
 21970                           
 21971                           ; BSR set to: 0
 21972                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 21973   001BAC  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21974   001BAE  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21975   001BB0  A4D8               	btfss	status,2,c
 21976   001BB2  EFDD  F00D         	goto	u18431
 21977   001BB6  EFDF  F00D         	goto	u18430
 21978   001BBA                     u18431:
 21979   001BBA  EFFE  F00D         	goto	l15510
 21980   001BBE                     u18430:
 21981   001BBE                     
 21982                           ; BSR set to: 0
 21983                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21984   001BBE  0E02               	movlw	2
 21985   001BC0  6E50               	movwf	_mediaInformation^0,c
 21986   001BC2                     
 21987                           ; BSR set to: 0
 21988   001BC2  8ABA               	bsf	186,5,c	;volatile
 21989   001BC4                     
 21990                           ; BSR set to: 0
 21991                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 21992   001BC4  0E93               	movlw	low _spiMaster
 21993   001BC6  6EF6               	movwf	tblptrl,c
 21994   001BC8                     	if	1	;There is more than 1 active tblptr byte
 21995   001BC8  0EFF               	movlw	high _spiMaster
 21996   001BCA  6EF7               	movwf	tblptrh,c
 21997   001BCC                     	endif
 21998   001BCC                     	if	1	;There are 3 active tblptr bytes
 21999   001BCC  0E00               	movlw	low (_spiMaster shr (0+16))
 22000   001BCE  6EF8               	movwf	tblptru,c
 22001   001BD0                     	endif
 22002   001BD0  0009               	tblrd		*+
 22003   001BD2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 22004   001BD8  0009               	tblrd		*+
 22005   001BDA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 22006   001BE0  D802               	call	u18448
 22007   001BE2  EFFC  F00D         	goto	u18449
 22008   001BE6                     u18448:
 22009   001BE6  0005               	push	
 22010   001BE8  6EFA               	movwf	pclath,c
 22011   001BEA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22012   001BEC  6EFD               	movwf	tosl,c
 22013   001BEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22014   001BF0  6EFE               	movwf	tosh,c
 22015   001BF2  6AFF               	clrf	tosu,c
 22016   001BF4  50FA               	movf	pclath,w,c
 22017   001BF6  0012               	return		;indir
 22018   001BF8                     u18449:
 22019   001BF8  EFC3  F00B         	goto	l15376
 22020   001BFC                     l15510:
 22021                           
 22022                           ; BSR set to: 0
 22023                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 22024   001BFC  0E00               	movlw	0
 22025   001BFE  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 22026                           
 22027                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 22028   001C00  0E00               	movlw	0
 22029   001C02  6FA8               	movwf	SD_SPI_MediaInitialize@count& (0+255),b
 22030   001C04                     l15516:
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 22034   001C04  51A6               	movf	SD_SPI_MediaInitialize@index& (0+255),w,b
 22035   001C06  0F8D               	addlw	low SD_SPI_MediaInitialize@CSDResponse
 22036   001C08  6ED9               	movwf	fsr2l,c
 22037   001C0A  6ADA               	clrf	fsr2h,c
 22038   001C0C  0E97               	movlw	low (_spiMaster+4)
 22039   001C0E  6EF6               	movwf	tblptrl,c
 22040   001C10  0EFF               	movlw	high (_spiMaster+4)
 22041   001C12  6EF7               	movwf	tblptrh,c
 22042   001C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22043   001C14  6AF8               	clrf	tblptru,c
 22044   001C16                     	endif
 22045   001C16                     	if	0	;tblptru may be non-zero
 22046   001C16                     	endif
 22047   001C16  0009               	tblrd		*+
 22048   001C18  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 22049   001C1E  0009               	tblrd		*+
 22050   001C20  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 22051   001C26  D802               	call	u18458
 22052   001C28  EF20  F00E         	goto	u18459
 22053   001C2C                     u18458:
 22054   001C2C  0005               	push	
 22055   001C2E  6EFA               	movwf	pclath,c
 22056   001C30  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22057   001C32  6EFD               	movwf	tosl,c
 22058   001C34  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22059   001C36  6EFE               	movwf	tosh,c
 22060   001C38  6AFF               	clrf	tosu,c
 22061   001C3A  50FA               	movf	pclath,w,c
 22062   001C3C  0EFF               	movlw	255
 22063   001C3E  0012               	return		;indir
 22064   001C40                     u18459:
 22065   001C40  6EDF               	movwf	indf2,c
 22066   001C42                     
 22067                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 22068   001C42  0100               	movlb	0	; () banked
 22069   001C44  2BA6               	incf	SD_SPI_MediaInitialize@index& (0+255),f,b
 22070   001C46                     
 22071                           ; BSR set to: 0
 22072                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 22073   001C46  51A8               	movf	SD_SPI_MediaInitialize@count& (0+255),w,b
 22074   001C48  A4D8               	btfss	status,2,c
 22075   001C4A  EF29  F00E         	goto	u18461
 22076   001C4E  EF2B  F00E         	goto	u18460
 22077   001C52                     u18461:
 22078   001C52  EF36  F00E         	goto	l15526
 22079   001C56                     u18460:
 22080   001C56                     
 22081                           ; BSR set to: 0
 22082   001C56  0EFE               	movlw	254
 22083   001C58  198D               	xorwf	SD_SPI_MediaInitialize@CSDResponse& (0+255),w,b
 22084   001C5A  A4D8               	btfss	status,2,c
 22085   001C5C  EF32  F00E         	goto	u18471
 22086   001C60  EF34  F00E         	goto	u18470
 22087   001C64                     u18471:
 22088   001C64  EF36  F00E         	goto	l15526
 22089   001C68                     u18470:
 22090   001C68                     
 22091                           ; BSR set to: 0
 22092                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 22093   001C68  0E00               	movlw	0
 22094   001C6A  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 22095   001C6C                     l15526:
 22096                           
 22097                           ; BSR set to: 0
 22098                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 22099   001C6C  2BA8               	incf	SD_SPI_MediaInitialize@count& (0+255),f,b
 22100   001C6E                     
 22101                           ; BSR set to: 0
 22102   001C6E  0E13               	movlw	19
 22103   001C70  65A8               	cpfsgt	SD_SPI_MediaInitialize@count& (0+255),b
 22104   001C72  EF3D  F00E         	goto	u18481
 22105   001C76  EF3F  F00E         	goto	u18480
 22106   001C7A                     u18481:
 22107   001C7A  EF02  F00E         	goto	l15516
 22108   001C7E                     u18480:
 22109   001C7E                     
 22110                           ; BSR set to: 0
 22111                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 22112   001C7E  0E02               	movlw	2
 22113   001C80  6E52               	movwf	(_mediaInformation+2)^0,c
 22114   001C82  0E00               	movlw	0
 22115   001C84  6E51               	movwf	(_mediaInformation+1)^0,c
 22116   001C86                     
 22117                           ; BSR set to: 0
 22118                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 22119   001C86  C08D  F082         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 22120   001C8A  0EC0               	movlw	192
 22121   001C8C  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22122   001C8E  B4D8               	btfsc	status,2,c
 22123   001C90  EF4C  F00E         	goto	u18491
 22124   001C94  EF4E  F00E         	goto	u18490
 22125   001C98                     u18491:
 22126   001C98  EF94  F00E         	goto	l15536
 22127   001C9C                     u18490:
 22128   001C9C                     
 22129                           ; BSR set to: 0
 22130                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 22131   001C9C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 22132   001C9E  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 22133   001CA0  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 22134   001CA2  C094  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 22135   001CA6  0E3F               	movlw	63
 22136   001CA8  1784               	andwf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 22137   001CAA  C084  F085         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 22138   001CAE  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 22139   001CB0  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 22140   001CB2  6B88               	clrf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 22141   001CB4  C086  F088         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 22142   001CB8  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 22143   001CBC  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 22144   001CBE  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 22145   001CC0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22146   001CC2  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 22147   001CC4  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 22148   001CC6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22149   001CC8  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 22150   001CCA  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 22151   001CCC  0E00               	movlw	0
 22152   001CCE  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 22153   001CD0  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 22154   001CD2  0E00               	movlw	0
 22155   001CD4  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 22156   001CD6  6F8C               	movwf	(??_SD_SPI_MediaInitialize+10)& (0+255),b
 22157   001CD8  5196               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)& (0+255),w,b
 22158   001CDA  1189               	iorwf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 22159   001CDC  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 22160   001CDE  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 22161   001CE0  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 22162   001CE2  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 22163   001CE4  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 22164   001CE6  518C               	movf	(??_SD_SPI_MediaInitialize+10)& (0+255),w,b
 22165   001CE8  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 22166                           
 22167                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 22168   001CEA  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 22169   001CEE  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 22170   001CF2  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 22171   001CF6  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 22172   001CFA  0E0A               	movlw	10
 22173   001CFC                     u18505:
 22174   001CFC  90D8               	bcf	status,0,c
 22175   001CFE  3782               	rlcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22176   001D00  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 22177   001D02  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 22178   001D04  3785               	rlcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 22179   001D06  2EE8               	decfsz	wreg,f,c
 22180   001D08  EF7E  F00E         	goto	u18505
 22181   001D0C  0EFF               	movlw	255
 22182   001D0E  2582               	addwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22183   001D10  6E54               	movwf	(_mediaInformation+4)^0,c
 22184   001D12  0E03               	movlw	3
 22185   001D14  2183               	addwfc	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22186   001D16  6E55               	movwf	(_mediaInformation+5)^0,c
 22187   001D18  0E00               	movlw	0
 22188   001D1A  2184               	addwfc	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 22189   001D1C  6E56               	movwf	(_mediaInformation+6)^0,c
 22190   001D1E  0E00               	movlw	0
 22191   001D20  2185               	addwfc	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 22192   001D22  6E57               	movwf	(_mediaInformation+7)^0,c
 22193                           
 22194                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 22195   001D24  EF44  F00F         	goto	l15542
 22196   001D28                     l15536:
 22197                           
 22198                           ; BSR set to: 0
 22199                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 22200   001D28  5194               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)& (0+255),w,b
 22201   001D2A  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 22202   001D2C  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 22203   001D2E  C093  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 22204   001D32  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 22205   001D34  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 22206   001D36  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 22207   001D38  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 22208   001D3C  C084  F086         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 22209   001D40  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 22210   001D42  6B84               	clrf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 22211   001D44  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22212   001D46  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 22213   001D48  6F88               	movwf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 22214   001D4A  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22215   001D4C  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 22216   001D4E  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 22217   001D50  0E00               	movlw	0
 22218   001D52  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 22219   001D54  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 22220   001D56  0E00               	movlw	0
 22221   001D58  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 22222   001D5A  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 22223   001D5C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 22224   001D5E  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 22225   001D60  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 22226   001D62  5189               	movf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 22227   001D64  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 22228   001D66  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 22229   001D68  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 22230   001D6A  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 22231   001D6C  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 22232                           
 22233                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 22234   001D6E  0EC0               	movlw	192
 22235   001D70  17A9               	andwf	SD_SPI_MediaInitialize@c_size& (0+255),f,b
 22236   001D72  0EFF               	movlw	255
 22237   001D74  17AA               	andwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),f,b
 22238   001D76  0E03               	movlw	3
 22239   001D78  17AB               	andwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),f,b
 22240   001D7A  0E00               	movlw	0
 22241   001D7C  17AC               	andwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),f,b
 22242                           
 22243                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 22244   001D7E  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 22245   001D82  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 22246   001D86  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 22247   001D8A  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 22248   001D8E  0E07               	movlw	7
 22249   001D90  EFCF  F00E         	goto	u18510
 22250   001D94                     u18515:
 22251   001D94  90D8               	bcf	status,0,c
 22252   001D96  3385               	rrcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 22253   001D98  3384               	rrcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 22254   001D9A  3383               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 22255   001D9C  3382               	rrcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22256   001D9E                     u18510:
 22257   001D9E  2EE8               	decfsz	wreg,f,c
 22258   001DA0  EFCA  F00E         	goto	u18515
 22259   001DA4  C082  F0A9         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 22260   001DA8  C083  F0AA         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 22261   001DAC  C084  F0AB         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 22262   001DB0  C085  F0AC         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 22263                           
 22264                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 22265   001DB4  C096  F082         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 22266   001DB8  0E03               	movlw	3
 22267   001DBA  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22268   001DBC  6B83               	clrf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 22269   001DBE  AF97               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)& (0+255),7,b
 22270   001DC0  D001               	bra	u18525
 22271   001DC2  2B83               	incf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 22272   001DC4                     u18525:
 22273   001DC4  3183               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22274   001DC6  3582               	rlcf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22275   001DC8  6FA5               	movwf	SD_SPI_MediaInitialize@c_size_mult& (0+255),b
 22276                           
 22277                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 22278   001DCA  5192               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)& (0+255),w,b
 22279   001DCC  0B0F               	andlw	15
 22280   001DCE  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 22281                           
 22282                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 22283   001DD0  C0A7  F082         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 22284   001DD4  0EF7               	movlw	-9
 22285   001DD6  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22286   001DD8  0E01               	movlw	1
 22287   001DDA  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 22288   001DDC  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22289   001DDE  EFF3  F00E         	goto	u18534
 22290   001DE2                     u18535:
 22291   001DE2  90D8               	bcf	status,0,c
 22292   001DE4  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 22293   001DE6                     u18534:
 22294   001DE6  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 22295   001DE8  EFF1  F00E         	goto	u18535
 22296   001DEC  0100               	movlb	0	; () banked
 22297   001DEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22298   001DF0  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 22299   001DF2                     
 22300                           ; BSR set to: 0
 22301                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 22302   001DF2  0E01               	movlw	1
 22303   001DF4  25A9               	addwf	SD_SPI_MediaInitialize@c_size& (0+255),w,b
 22304   001DF6  6F60               	movwf	___lmul@multiplier& (0+255),b
 22305   001DF8  0E00               	movlw	0
 22306   001DFA  21AA               	addwfc	(SD_SPI_MediaInitialize@c_size+1)& (0+255),w,b
 22307   001DFC  6F61               	movwf	(___lmul@multiplier+1)& (0+255),b
 22308   001DFE  0E00               	movlw	0
 22309   001E00  21AB               	addwfc	(SD_SPI_MediaInitialize@c_size+2)& (0+255),w,b
 22310   001E02  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 22311   001E04  0E00               	movlw	0
 22312   001E06  21AC               	addwfc	(SD_SPI_MediaInitialize@c_size+3)& (0+255),w,b
 22313   001E08  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 22314   001E0A  C0A5  F082         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 22315   001E0E  0E02               	movlw	2
 22316   001E10  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22317   001E12  0E01               	movlw	1
 22318   001E14  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 22319   001E16  0E00               	movlw	0
 22320   001E18  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 22321   001E1A  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 22322   001E1C  EF13  F00F         	goto	u18544
 22323   001E20                     u18545:
 22324   001E20  90D8               	bcf	status,0,c
 22325   001E22  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 22326   001E24  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 22327   001E26                     u18544:
 22328   001E26  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 22329   001E28  EF10  F00F         	goto	u18545
 22330   001E2C  C083  F064         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 22331   001E30  C084  F065         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 22332   001E34  0100               	movlb	0	; () banked
 22333   001E36  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22334   001E38  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22335   001E3A  ECBC  F04C         	call	___lmul
 22336   001E3E  C060  F0A1         	movff	?___lmul,_SD_SPI_MediaInitialize$6578
 22337   001E42  C061  F0A2         	movff	?___lmul+1,_SD_SPI_MediaInitialize$6578+1
 22338   001E46  C062  F0A3         	movff	?___lmul+2,_SD_SPI_MediaInitialize$6578+2
 22339   001E4A  C063  F0A4         	movff	?___lmul+3,_SD_SPI_MediaInitialize$6578+3
 22340   001E4E                     
 22341                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 22342   001E4E  C0A1  F060         	movff	_SD_SPI_MediaInitialize$6578,___lmul@multiplier
 22343   001E52  C0A2  F061         	movff	_SD_SPI_MediaInitialize$6578+1,___lmul@multiplier+1
 22344   001E56  C0A3  F062         	movff	_SD_SPI_MediaInitialize$6578+2,___lmul@multiplier+2
 22345   001E5A  C0A4  F063         	movff	_SD_SPI_MediaInitialize$6578+3,___lmul@multiplier+3
 22346   001E5E  0100               	movlb	0	; () banked
 22347   001E60  51A7               	movf	SD_SPI_MediaInitialize@block_len& (0+255),w,b
 22348   001E62  6F64               	movwf	___lmul@multiplicand& (0+255),b
 22349   001E64  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 22350   001E66  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22351   001E68  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22352   001E6A  ECBC  F04C         	call	___lmul	;wreg free
 22353   001E6E  0EFF               	movlw	255
 22354   001E70  0100               	movlb	0	; () banked
 22355   001E72  2560               	addwf	?___lmul& (0+255),w,b
 22356   001E74  6E54               	movwf	(_mediaInformation+4)^0,c
 22357   001E76  0EFF               	movlw	255
 22358   001E78  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 22359   001E7A  6E55               	movwf	(_mediaInformation+5)^0,c
 22360   001E7C  0EFF               	movlw	255
 22361   001E7E  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 22362   001E80  6E56               	movwf	(_mediaInformation+6)^0,c
 22363   001E82  0EFF               	movlw	255
 22364   001E84  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 22365   001E86  6E57               	movwf	(_mediaInformation+7)^0,c
 22366   001E88                     l15542:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 22370   001E88  0E00               	movlw	0
 22371   001E8A  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 22372   001E8C  0E00               	movlw	0
 22373   001E8E  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 22374   001E90  0E00               	movlw	0
 22375   001E92  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 22376   001E94  0E00               	movlw	0
 22377   001E96  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 22378   001E98  0E11               	movlw	17
 22379   001E9A  EC82  F01C         	call	_SD_SendCmd
 22380   001E9E                     
 22381                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 22382   001E9E  C051  F06B         	movff	_mediaInformation+1,SD_SendCmd@address
 22383   001EA2  C052  F06C         	movff	_mediaInformation+2,SD_SendCmd@address+1
 22384   001EA6  0100               	movlb	0	; () banked
 22385   001EA8  6B6D               	clrf	(SD_SendCmd@address+2)& (0+255),b
 22386   001EAA  6B6E               	clrf	(SD_SendCmd@address+3)& (0+255),b
 22387   001EAC  0E07               	movlw	7
 22388   001EAE  EC82  F01C         	call	_SD_SendCmd
 22389   001EB2  8ABA               	bsf	186,5,c	;volatile
 22390   001EB4                     
 22391                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 22392   001EB4  5050               	movf	_mediaInformation^0,w,c
 22393   001EB6  A4D8               	btfss	status,2,c
 22394   001EB8  EF60  F00F         	goto	u18551
 22395   001EBC  EF62  F00F         	goto	u18550
 22396   001EC0                     u18551:
 22397   001EC0  EF82  F00F         	goto	l15558
 22398   001EC4                     u18550:
 22399   001EC4                     
 22400                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 22401   001EC4  0E01               	movlw	1
 22402   001EC6  6E53               	movwf	(_mediaInformation+3)^0,c
 22403   001EC8                     
 22404                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 22405   001EC8  0E93               	movlw	low _spiMaster
 22406   001ECA  6EF6               	movwf	tblptrl,c
 22407   001ECC                     	if	1	;There is more than 1 active tblptr byte
 22408   001ECC  0EFF               	movlw	high _spiMaster
 22409   001ECE  6EF7               	movwf	tblptrh,c
 22410   001ED0                     	endif
 22411   001ED0                     	if	1	;There are 3 active tblptr bytes
 22412   001ED0  0E00               	movlw	low (_spiMaster shr (0+16))
 22413   001ED2  6EF8               	movwf	tblptru,c
 22414   001ED4                     	endif
 22415   001ED4  0009               	tblrd		*+
 22416   001ED6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 22417   001EDC  0009               	tblrd		*+
 22418   001EDE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 22419   001EE4  D802               	call	u18568
 22420   001EE6  EF7F  F00F         	goto	u18569
 22421   001EEA                     u18568:
 22422   001EEA  0005               	push	
 22423   001EEC  6EFA               	movwf	pclath,c
 22424   001EEE  0100               	movlb	0	; () banked
 22425   001EF0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22426   001EF2  6EFD               	movwf	tosl,c
 22427   001EF4  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22428   001EF6  6EFE               	movwf	tosh,c
 22429   001EF8  6AFF               	clrf	tosu,c
 22430   001EFA  50FA               	movf	pclath,w,c
 22431   001EFC  0012               	return		;indir
 22432   001EFE                     u18569:
 22433   001EFE                     
 22434                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 22435   001EFE  0E01               	movlw	1
 22436   001F00  EF9F  F00F         	goto	l1611
 22437   001F04                     l15558:
 22438                           
 22439                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 22440   001F04  0E93               	movlw	low _spiMaster
 22441   001F06  6EF6               	movwf	tblptrl,c
 22442   001F08                     	if	1	;There is more than 1 active tblptr byte
 22443   001F08  0EFF               	movlw	high _spiMaster
 22444   001F0A  6EF7               	movwf	tblptrh,c
 22445   001F0C                     	endif
 22446   001F0C                     	if	1	;There are 3 active tblptr bytes
 22447   001F0C  0E00               	movlw	low (_spiMaster shr (0+16))
 22448   001F0E  6EF8               	movwf	tblptru,c
 22449   001F10                     	endif
 22450   001F10  0009               	tblrd		*+
 22451   001F12  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 22452   001F18  0009               	tblrd		*+
 22453   001F1A  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 22454   001F20  D802               	call	u18578
 22455   001F22  EF9D  F00F         	goto	u18579
 22456   001F26                     u18578:
 22457   001F26  0005               	push	
 22458   001F28  6EFA               	movwf	pclath,c
 22459   001F2A  0100               	movlb	0	; () banked
 22460   001F2C  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 22461   001F2E  6EFD               	movwf	tosl,c
 22462   001F30  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 22463   001F32  6EFE               	movwf	tosh,c
 22464   001F34  6AFF               	clrf	tosu,c
 22465   001F36  50FA               	movf	pclath,w,c
 22466   001F38  0012               	return		;indir
 22467   001F3A                     u18579:
 22468   001F3A  EFC3  F00B         	goto	l15376
 22469   001F3E                     l1611:
 22470   001F3E  0012               	return		;funcret
 22471   001F40                     __end_of_SD_SPI_MediaInitialize:
 22472                           	callstack 0
 22473                           
 22474 ;; *************** function ___lmul *****************
 22475 ;; Defined at:
 22476 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 22477 ;; Parameters:    Size  Location     Type
 22478 ;;  multiplier      4    0[BANK0 ] unsigned long 
 22479 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 22480 ;; Auto vars:     Size  Location     Type
 22481 ;;  product         4    8[BANK0 ] unsigned long 
 22482 ;; Return value:  Size  Location     Type
 22483 ;;                  4    0[BANK0 ] unsigned long 
 22484 ;; Registers used:
 22485 ;;		wreg, status,2, status,0
 22486 ;; Tracked objects:
 22487 ;;		On entry : 0/0
 22488 ;;		On exit  : 0/0
 22489 ;;		Unchanged: 0/0
 22490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22491 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22492 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22494 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22495 ;;Total ram usage:       12 bytes
 22496 ;; Hardware stack levels used: 1
 22497 ;; Hardware stack levels required when called: 5
 22498 ;; This function calls:
 22499 ;;		Nothing
 22500 ;; This function is called by:
 22501 ;;		_clst2sect
 22502 ;;		_find_volume
 22503 ;;		_SD_SPI_MediaInitialize
 22504 ;; This function uses a non-reentrant model
 22505 ;;
 22506                           
 22507                           	psect	text80
 22508   009978                     __ptext80:
 22509                           	callstack 0
 22510   009978                     ___lmul:
 22511                           	callstack 22
 22512   009978  0E00               	movlw	0
 22513   00997A  0100               	movlb	0	; () banked
 22514   00997C  6F68               	movwf	___lmul@product& (0+255),b
 22515   00997E  0E00               	movlw	0
 22516   009980  6F69               	movwf	(___lmul@product+1)& (0+255),b
 22517   009982  0E00               	movlw	0
 22518   009984  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 22519   009986  0E00               	movlw	0
 22520   009988  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 22521   00998A                     l15034:
 22522                           
 22523                           ; BSR set to: 0
 22524   00998A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 22525   00998C  EFCA  F04C         	goto	u17481
 22526   009990  EFCC  F04C         	goto	u17480
 22527   009994                     u17481:
 22528   009994  EFD4  F04C         	goto	l15038
 22529   009998                     u17480:
 22530   009998                     
 22531                           ; BSR set to: 0
 22532   009998  5164               	movf	___lmul@multiplicand& (0+255),w,b
 22533   00999A  2768               	addwf	___lmul@product& (0+255),f,b
 22534   00999C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 22535   00999E  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 22536   0099A0  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 22537   0099A2  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 22538   0099A4  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 22539   0099A6  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 22540   0099A8                     l15038:
 22541                           
 22542                           ; BSR set to: 0
 22543   0099A8  90D8               	bcf	status,0,c
 22544   0099AA  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 22545   0099AC  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 22546   0099AE  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 22547   0099B0  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 22548   0099B2                     
 22549                           ; BSR set to: 0
 22550   0099B2  90D8               	bcf	status,0,c
 22551   0099B4  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 22552   0099B6  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 22553   0099B8  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 22554   0099BA  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 22555   0099BC  5160               	movf	___lmul@multiplier& (0+255),w,b
 22556   0099BE  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 22557   0099C0  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 22558   0099C2  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 22559   0099C4  A4D8               	btfss	status,2,c
 22560   0099C6  EFE7  F04C         	goto	u17491
 22561   0099CA  EFE9  F04C         	goto	u17490
 22562   0099CE                     u17491:
 22563   0099CE  EFC5  F04C         	goto	l15034
 22564   0099D2                     u17490:
 22565   0099D2                     
 22566                           ; BSR set to: 0
 22567   0099D2  C068  F060         	movff	___lmul@product,?___lmul
 22568   0099D6  C069  F061         	movff	___lmul@product+1,?___lmul+1
 22569   0099DA  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 22570   0099DE  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 22571   0099E2                     
 22572                           ; BSR set to: 0
 22573   0099E2  0012               	return		;funcret
 22574   0099E4                     __end_of___lmul:
 22575                           	callstack 0
 22576                           
 22577 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 22578 ;; Defined at:
 22579 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;  milliseconds    1    wreg     unsigned char 
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;  milliseconds    1    3[BANK0 ] unsigned char 
 22584 ;;  timeout         2    4[BANK0 ] unsigned short 
 22585 ;; Return value:  Size  Location     Type
 22586 ;;                  1    wreg      void 
 22587 ;; Registers used:
 22588 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22589 ;; Tracked objects:
 22590 ;;		On entry : 0/0
 22591 ;;		On exit  : 0/0
 22592 ;;		Unchanged: 0/0
 22593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22595 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22598 ;;Total ram usage:        5 bytes
 22599 ;; Hardware stack levels used: 1
 22600 ;; Hardware stack levels required when called: 6
 22601 ;; This function calls:
 22602 ;;		_SPI1_ExchangeByte
 22603 ;; This function is called by:
 22604 ;;		_SD_SPI_MediaInitialize
 22605 ;; This function uses a non-reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text81
 22609   00989E                     __ptext81:
 22610                           	callstack 0
 22611   00989E                     _SD_SPI_DelayMilliseconds:
 22612                           	callstack 19
 22613                           
 22614                           ; BSR set to: 0
 22615                           ;incstack = 0
 22616                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 22617   00989E  0100               	movlb	0	; () banked
 22618   0098A0  6F63               	movwf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),b
 22619   0098A2                     
 22620                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 22621   0098A2  0100               	movlb	0	; () banked
 22622   0098A4  5163               	movf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),w,b
 22623   0098A6  0D32               	mullw	50
 22624   0098A8  006F FFCC  F064    	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 22625   0098AE  006F FFD0  F065    	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 22626   0098B4                     
 22627                           ; BSR set to: 0
 22628   0098B4  8ABA               	bsf	186,5,c	;volatile
 22629   0098B6  EF77  F04C         	goto	l15346
 22630   0098BA                     l15344:
 22631                           
 22632                           ; BSR set to: 0
 22633                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22634   0098BA  0E97               	movlw	low (_spiMaster+4)
 22635   0098BC  6EF6               	movwf	tblptrl,c
 22636   0098BE  0EFF               	movlw	high (_spiMaster+4)
 22637   0098C0  6EF7               	movwf	tblptrh,c
 22638   0098C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22639   0098C2  6AF8               	clrf	tblptru,c
 22640   0098C4                     	endif
 22641   0098C4                     	if	0	;tblptru may be non-zero
 22642   0098C4                     	endif
 22643   0098C4  0009               	tblrd		*+
 22644   0098C6  006F FFD4  F061    	movff	tablat,??_SD_SPI_DelayMilliseconds
 22645   0098CC  0009               	tblrd		*+
 22646   0098CE  006F FFD4  F062    	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 22647   0098D4  D802               	call	u18088
 22648   0098D6  EF77  F04C         	goto	u18089
 22649   0098DA                     u18088:
 22650   0098DA  0005               	push	
 22651   0098DC  6EFA               	movwf	pclath,c
 22652   0098DE  5161               	movf	??_SD_SPI_DelayMilliseconds& (0+255),w,b
 22653   0098E0  6EFD               	movwf	tosl,c
 22654   0098E2  5162               	movf	(??_SD_SPI_DelayMilliseconds+1)& (0+255),w,b
 22655   0098E4  6EFE               	movwf	tosh,c
 22656   0098E6  6AFF               	clrf	tosu,c
 22657   0098E8  50FA               	movf	pclath,w,c
 22658   0098EA  0EFF               	movlw	255
 22659   0098EC  0012               	return		;indir
 22660   0098EE                     u18089:
 22661   0098EE                     l15346:
 22662                           
 22663                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 22664   0098EE  0100               	movlb	0	; () banked
 22665   0098F0  0764               	decf	SD_SPI_DelayMilliseconds@timeout& (0+255),f,b
 22666   0098F2  A0D8               	btfss	status,0,c
 22667   0098F4  0765               	decf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),f,b
 22668   0098F6  2964               	incf	SD_SPI_DelayMilliseconds@timeout& (0+255),w,b
 22669   0098F8  E106               	bnz	u18091
 22670   0098FA  2965               	incf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),w,b
 22671   0098FC  A4D8               	btfss	status,2,c
 22672   0098FE  EF83  F04C         	goto	u18091
 22673   009902  EF85  F04C         	goto	u18090
 22674   009906                     u18091:
 22675   009906  EF5D  F04C         	goto	l15344
 22676   00990A                     u18090:
 22677   00990A                     
 22678                           ; BSR set to: 0
 22679   00990A  0012               	return		;funcret
 22680   00990C                     __end_of_SD_SPI_DelayMilliseconds:
 22681                           	callstack 0
 22682                           
 22683 ;; *************** function _check_fs *****************
 22684 ;; Defined at:
 22685 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 22686 ;; Parameters:    Size  Location     Type
 22687 ;;  fs              2  115[BANK0 ] PTR struct .
 22688 ;;		 -> FatFs(563), NULL(0), 
 22689 ;;  sect            4  117[BANK0 ] unsigned long 
 22690 ;; Auto vars:     Size  Location     Type
 22691 ;;		None
 22692 ;; Return value:  Size  Location     Type
 22693 ;;                  1    wreg      unsigned char 
 22694 ;; Registers used:
 22695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22696 ;; Tracked objects:
 22697 ;;		On entry : 0/0
 22698 ;;		On exit  : 0/0
 22699 ;;		Unchanged: 0/0
 22700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22701 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22704 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22705 ;;Total ram usage:        7 bytes
 22706 ;; Hardware stack levels used: 1
 22707 ;; Hardware stack levels required when called: 12
 22708 ;; This function calls:
 22709 ;;		_ld_word
 22710 ;;		_mem_cmp
 22711 ;;		_move_window
 22712 ;; This function is called by:
 22713 ;;		_find_volume
 22714 ;; This function uses a non-reentrant model
 22715 ;;
 22716                           
 22717                           	psect	text82
 22718   007B62                     __ptext82:
 22719                           	callstack 0
 22720   007B62                     _check_fs:
 22721                           	callstack 15
 22722   007B62                     
 22723                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 22724   007B62  0100               	movlb	0	; () banked
 22725   007B64  EE20 F003          	lfsr	2,3
 22726   007B68  51D3               	movf	check_fs@fs& (0+255),w,b
 22727   007B6A  26D9               	addwf	fsr2l,f,c
 22728   007B6C  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22729   007B6E  22DA               	addwfc	fsr2h,f,c
 22730   007B70  6ADF               	clrf	indf2,c
 22731   007B72  EE20 F02F          	lfsr	2,47
 22732   007B76  51D3               	movf	check_fs@fs& (0+255),w,b
 22733   007B78  26D9               	addwf	fsr2l,f,c
 22734   007B7A  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22735   007B7C  22DA               	addwfc	fsr2h,f,c
 22736   007B7E  0EFF               	movlw	255
 22737   007B80  6EDE               	movwf	postinc2,c
 22738   007B82  0EFF               	movlw	255
 22739   007B84  6EDE               	movwf	postinc2,c
 22740   007B86  0EFF               	movlw	255
 22741   007B88  6EDE               	movwf	postinc2,c
 22742   007B8A  0EFF               	movlw	255
 22743   007B8C  6EDD               	movwf	postdec2,c
 22744   007B8E                     
 22745                           ; BSR set to: 0
 22746                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 22747   007B8E  C0D3  F0C8         	movff	check_fs@fs,move_window@fs
 22748   007B92  C0D4  F0C9         	movff	check_fs@fs+1,move_window@fs+1
 22749   007B96  C0D5  F0CA         	movff	check_fs@sect,move_window@sector
 22750   007B9A  C0D6  F0CB         	movff	check_fs@sect+1,move_window@sector+1
 22751   007B9E  C0D7  F0CC         	movff	check_fs@sect+2,move_window@sector+2
 22752   007BA2  C0D8  F0CD         	movff	check_fs@sect+3,move_window@sector+3
 22753   007BA6  ECAF  F046         	call	_move_window
 22754   007BAA  0900               	iorlw	0
 22755   007BAC  B4D8               	btfsc	status,2,c
 22756   007BAE  EFDB  F03D         	goto	u19641
 22757   007BB2  EFDD  F03D         	goto	u19640
 22758   007BB6                     u19641:
 22759   007BB6  EFE0  F03D         	goto	l16202
 22760   007BBA                     u19640:
 22761   007BBA  0E04               	movlw	4
 22762   007BBC  EF60  F03E         	goto	l1201
 22763   007BC0                     l16202:
 22764                           
 22765                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 22766   007BC0  0E31               	movlw	49
 22767   007BC2  0100               	movlb	0	; () banked
 22768   007BC4  25D3               	addwf	check_fs@fs& (0+255),w,b
 22769   007BC6  6F60               	movwf	ld_word@ptr& (0+255),b
 22770   007BC8  0E02               	movlw	2
 22771   007BCA  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22772   007BCC  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 22773   007BCE  ECE3  F04F         	call	_ld_word	;wreg free
 22774   007BD2  0E55               	movlw	85
 22775   007BD4  0100               	movlb	0	; () banked
 22776   007BD6  1960               	xorwf	?_ld_word& (0+255),w,b
 22777   007BD8  E109               	bnz	u19650
 22778   007BDA  0EAA               	movlw	170
 22779   007BDC  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 22780   007BDE  B4D8               	btfsc	status,2,c
 22781   007BE0  EFF4  F03D         	goto	u19651
 22782   007BE4  EFF6  F03D         	goto	u19650
 22783   007BE8                     u19651:
 22784   007BE8  EFF9  F03D         	goto	l16208
 22785   007BEC                     u19650:
 22786   007BEC                     
 22787                           ; BSR set to: 0
 22788   007BEC  0E03               	movlw	3
 22789   007BEE  EF60  F03E         	goto	l1201
 22790   007BF2                     l16208:
 22791                           
 22792                           ; BSR set to: 0
 22793                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 22794   007BF2  EE20 F033          	lfsr	2,51
 22795   007BF6  51D3               	movf	check_fs@fs& (0+255),w,b
 22796   007BF8  26D9               	addwf	fsr2l,f,c
 22797   007BFA  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22798   007BFC  22DA               	addwfc	fsr2h,f,c
 22799   007BFE  0EE9               	movlw	233
 22800   007C00  18DE               	xorwf	postinc2,w,c
 22801   007C02  B4D8               	btfsc	status,2,c
 22802   007C04  EF06  F03E         	goto	u19661
 22803   007C08  EF08  F03E         	goto	u19660
 22804   007C0C                     u19661:
 22805   007C0C  EF26  F03E         	goto	l16214
 22806   007C10                     u19660:
 22807   007C10                     
 22808                           ; BSR set to: 0
 22809   007C10  EE20 F033          	lfsr	2,51
 22810   007C14  51D3               	movf	check_fs@fs& (0+255),w,b
 22811   007C16  26D9               	addwf	fsr2l,f,c
 22812   007C18  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22813   007C1A  22DA               	addwfc	fsr2h,f,c
 22814   007C1C  0EEB               	movlw	235
 22815   007C1E  18DE               	xorwf	postinc2,w,c
 22816   007C20  B4D8               	btfsc	status,2,c
 22817   007C22  EF15  F03E         	goto	u19671
 22818   007C26  EF17  F03E         	goto	u19670
 22819   007C2A                     u19671:
 22820   007C2A  EF26  F03E         	goto	l16214
 22821   007C2E                     u19670:
 22822   007C2E                     
 22823                           ; BSR set to: 0
 22824   007C2E  EE20 F033          	lfsr	2,51
 22825   007C32  51D3               	movf	check_fs@fs& (0+255),w,b
 22826   007C34  26D9               	addwf	fsr2l,f,c
 22827   007C36  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22828   007C38  22DA               	addwfc	fsr2h,f,c
 22829   007C3A  0EE8               	movlw	232
 22830   007C3C  18DE               	xorwf	postinc2,w,c
 22831   007C3E  A4D8               	btfss	status,2,c
 22832   007C40  EF24  F03E         	goto	u19681
 22833   007C44  EF26  F03E         	goto	u19680
 22834   007C48                     u19681:
 22835   007C48  EF5F  F03E         	goto	l16226
 22836   007C4C                     u19680:
 22837   007C4C                     l16214:
 22838                           
 22839                           ; BSR set to: 0
 22840                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 22841   007C4C  0E69               	movlw	105
 22842   007C4E  25D3               	addwf	check_fs@fs& (0+255),w,b
 22843   007C50  6F60               	movwf	mem_cmp@dst& (0+255),b
 22844   007C52  0E00               	movlw	0
 22845   007C54  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22846   007C56  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 22847   007C58  0EFB               	movlw	low STR_3
 22848   007C5A  6F62               	movwf	mem_cmp@src& (0+255),b
 22849   007C5C  0EFF               	movlw	high STR_3
 22850   007C5E  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 22851   007C60  0E00               	movlw	0
 22852   007C62  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 22853   007C64  0E03               	movlw	3
 22854   007C66  6F64               	movwf	mem_cmp@cnt& (0+255),b
 22855   007C68  EC42  F049         	call	_mem_cmp	;wreg free
 22856   007C6C  0100               	movlb	0	; () banked
 22857   007C6E  5160               	movf	?_mem_cmp& (0+255),w,b
 22858   007C70  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 22859   007C72  A4D8               	btfss	status,2,c
 22860   007C74  EF3E  F03E         	goto	u19691
 22861   007C78  EF40  F03E         	goto	u19690
 22862   007C7C                     u19691:
 22863   007C7C  EF43  F03E         	goto	l16220
 22864   007C80                     u19690:
 22865   007C80                     l16216:
 22866                           
 22867                           ; BSR set to: 0
 22868   007C80  0E00               	movlw	0
 22869   007C82  EF60  F03E         	goto	l1201
 22870   007C86                     l16220:
 22871                           
 22872                           ; BSR set to: 0
 22873                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 22874   007C86  0E85               	movlw	133
 22875   007C88  25D3               	addwf	check_fs@fs& (0+255),w,b
 22876   007C8A  6F60               	movwf	mem_cmp@dst& (0+255),b
 22877   007C8C  0E00               	movlw	0
 22878   007C8E  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22879   007C90  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 22880   007C92  0EF5               	movlw	low STR_5
 22881   007C94  6F62               	movwf	mem_cmp@src& (0+255),b
 22882   007C96  0EFF               	movlw	high STR_5
 22883   007C98  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 22884   007C9A  0E00               	movlw	0
 22885   007C9C  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 22886   007C9E  0E05               	movlw	5
 22887   007CA0  6F64               	movwf	mem_cmp@cnt& (0+255),b
 22888   007CA2  EC42  F049         	call	_mem_cmp	;wreg free
 22889   007CA6  0100               	movlb	0	; () banked
 22890   007CA8  5160               	movf	?_mem_cmp& (0+255),w,b
 22891   007CAA  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 22892   007CAC  A4D8               	btfss	status,2,c
 22893   007CAE  EF5B  F03E         	goto	u19701
 22894   007CB2  EF5D  F03E         	goto	u19700
 22895   007CB6                     u19701:
 22896   007CB6  EF5F  F03E         	goto	l16226
 22897   007CBA                     u19700:
 22898   007CBA  EF40  F03E         	goto	l16216
 22899   007CBE                     l16226:
 22900                           
 22901                           ; BSR set to: 0
 22902                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 22903   007CBE  0E02               	movlw	2
 22904   007CC0                     l1201:
 22905   007CC0  0012               	return		;funcret
 22906   007CC2                     __end_of_check_fs:
 22907                           	callstack 0
 22908                           
 22909 ;; *************** function _move_window *****************
 22910 ;; Defined at:
 22911 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;  fs              2  104[BANK0 ] PTR struct .
 22914 ;;		 -> FatFs(563), NULL(0), 
 22915 ;;  sector          4  106[BANK0 ] unsigned long 
 22916 ;; Auto vars:     Size  Location     Type
 22917 ;;  res             1  114[BANK0 ] enum E68
 22918 ;; Return value:  Size  Location     Type
 22919 ;;                  1    wreg      enum E68
 22920 ;; Registers used:
 22921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22922 ;; Tracked objects:
 22923 ;;		On entry : 0/0
 22924 ;;		On exit  : 0/0
 22925 ;;		Unchanged: 0/0
 22926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22930 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22931 ;;Total ram usage:       11 bytes
 22932 ;; Hardware stack levels used: 1
 22933 ;; Hardware stack levels required when called: 11
 22934 ;; This function calls:
 22935 ;;		_disk_read
 22936 ;;		_sync_window
 22937 ;; This function is called by:
 22938 ;;		_get_fat
 22939 ;;		_put_fat
 22940 ;;		_dir_alloc
 22941 ;;		_dir_find
 22942 ;;		_dir_register
 22943 ;;		_check_fs
 22944 ;;		_find_volume
 22945 ;;		_f_open
 22946 ;;		_f_sync
 22947 ;; This function uses a non-reentrant model
 22948 ;;
 22949                           
 22950                           	psect	text83
 22951   008D5E                     __ptext83:
 22952                           	callstack 0
 22953   008D5E                     _move_window:
 22954                           	callstack 15
 22955   008D5E                     
 22956                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 22957   008D5E  0E00               	movlw	0
 22958   008D60  0100               	movlb	0	; () banked
 22959   008D62  6FD2               	movwf	move_window@res& (0+255),b
 22960   008D64                     
 22961                           ; BSR set to: 0
 22962                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 22963   008D64  EE20 F02F          	lfsr	2,47
 22964   008D68  51C8               	movf	move_window@fs& (0+255),w,b
 22965   008D6A  26D9               	addwf	fsr2l,f,c
 22966   008D6C  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 22967   008D6E  22DA               	addwfc	fsr2h,f,c
 22968   008D70  51CA               	movf	move_window@sector& (0+255),w,b
 22969   008D72  18DE               	xorwf	postinc2,w,c
 22970   008D74  E10F               	bnz	u17450
 22971   008D76  51CB               	movf	(move_window@sector+1)& (0+255),w,b
 22972   008D78  18DE               	xorwf	postinc2,w,c
 22973   008D7A  E10C               	bnz	u17450
 22974   008D7C  51CC               	movf	(move_window@sector+2)& (0+255),w,b
 22975   008D7E  18DE               	xorwf	postinc2,w,c
 22976   008D80  E109               	bnz	u17450
 22977   008D82  51CD               	movf	(move_window@sector+3)& (0+255),w,b
 22978   008D84  18DE               	xorwf	postinc2,w,c
 22979   008D86  B4D8               	btfsc	status,2,c
 22980   008D88  EFC8  F046         	goto	u17451
 22981   008D8C  EFCA  F046         	goto	u17450
 22982   008D90                     u17451:
 22983   008D90  EF17  F047         	goto	l15028
 22984   008D94                     u17450:
 22985   008D94                     
 22986                           ; BSR set to: 0
 22987                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 22988   008D94  C0C8  F0B5         	movff	move_window@fs,sync_window@fs
 22989   008D98  C0C9  F0B6         	movff	move_window@fs+1,sync_window@fs+1
 22990   008D9C  ECEE  F038         	call	_sync_window	;wreg free
 22991   008DA0  0100               	movlb	0	; () banked
 22992   008DA2  6FD2               	movwf	move_window@res& (0+255),b
 22993   008DA4                     
 22994                           ; BSR set to: 0
 22995                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 22996   008DA4  51D2               	movf	move_window@res& (0+255),w,b
 22997   008DA6  A4D8               	btfss	status,2,c
 22998   008DA8  EFD8  F046         	goto	u17461
 22999   008DAC  EFDA  F046         	goto	u17460
 23000   008DB0                     u17461:
 23001   008DB0  EF17  F047         	goto	l15028
 23002   008DB4                     u17460:
 23003   008DB4                     
 23004                           ; BSR set to: 0
 23005                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 23006   008DB4  0E33               	movlw	51
 23007   008DB6  25C8               	addwf	move_window@fs& (0+255),w,b
 23008   008DB8  6FA8               	movwf	disk_read@buff& (0+255),b
 23009   008DBA  0E00               	movlw	0
 23010   008DBC  21C9               	addwfc	(move_window@fs+1)& (0+255),w,b
 23011   008DBE  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
 23012   008DC0  C0CA  F0AA         	movff	move_window@sector,disk_read@sector
 23013   008DC4  C0CB  F0AB         	movff	move_window@sector+1,disk_read@sector+1
 23014   008DC8  C0CC  F0AC         	movff	move_window@sector+2,disk_read@sector+2
 23015   008DCC  C0CD  F0AD         	movff	move_window@sector+3,disk_read@sector+3
 23016   008DD0  0E00               	movlw	0
 23017   008DD2  6FAF               	movwf	(disk_read@count+1)& (0+255),b
 23018   008DD4  0E01               	movlw	1
 23019   008DD6  6FAE               	movwf	disk_read@count& (0+255),b
 23020   008DD8  EE20 F001          	lfsr	2,1
 23021   008DDC  51C8               	movf	move_window@fs& (0+255),w,b
 23022   008DDE  26D9               	addwf	fsr2l,f,c
 23023   008DE0  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 23024   008DE2  22DA               	addwfc	fsr2h,f,c
 23025   008DE4  50DF               	movf	indf2,w,c
 23026   008DE6  EC26  F04D         	call	_disk_read
 23027   008DEA  0900               	iorlw	0
 23028   008DEC  B4D8               	btfsc	status,2,c
 23029   008DEE  EFFB  F046         	goto	u17471
 23030   008DF2  EFFD  F046         	goto	u17470
 23031   008DF6                     u17471:
 23032   008DF6  EF04  F047         	goto	l15026
 23033   008DFA                     u17470:
 23034   008DFA                     
 23035                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 23036   008DFA  0100               	movlb	0	; () banked
 23037   008DFC  69CA               	setf	move_window@sector& (0+255),b
 23038   008DFE  69CB               	setf	(move_window@sector+1)& (0+255),b
 23039   008E00  69CC               	setf	(move_window@sector+2)& (0+255),b
 23040   008E02  69CD               	setf	(move_window@sector+3)& (0+255),b
 23041   008E04                     
 23042                           ; BSR set to: 0
 23043                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 23044   008E04  0E01               	movlw	1
 23045   008E06  6FD2               	movwf	move_window@res& (0+255),b
 23046   008E08                     l15026:
 23047                           
 23048                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 23049   008E08  0100               	movlb	0	; () banked
 23050   008E0A  EE20 F02F          	lfsr	2,47
 23051   008E0E  51C8               	movf	move_window@fs& (0+255),w,b
 23052   008E10  26D9               	addwf	fsr2l,f,c
 23053   008E12  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 23054   008E14  22DA               	addwfc	fsr2h,f,c
 23055   008E16  0060  F32B  FFDE   	movff	move_window@sector,postinc2
 23056   008E1C  0060  F32F  FFDE   	movff	move_window@sector+1,postinc2
 23057   008E22  0060  F333  FFDE   	movff	move_window@sector+2,postinc2
 23058   008E28  0060  F337  FFDE   	movff	move_window@sector+3,postinc2
 23059   008E2E                     l15028:
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 23063   008E2E  51D2               	movf	move_window@res& (0+255),w,b
 23064   008E30                     
 23065                           ; BSR set to: 0
 23066   008E30  0012               	return		;funcret
 23067   008E32                     __end_of_move_window:
 23068                           	callstack 0
 23069                           
 23070 ;; *************** function _sync_window *****************
 23071 ;; Defined at:
 23072 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;  fs              2   85[BANK0 ] PTR struct .
 23075 ;;		 -> FatFs(563), NULL(0), 
 23076 ;; Auto vars:     Size  Location     Type
 23077 ;;  res             1  103[BANK0 ] enum E68
 23078 ;; Return value:  Size  Location     Type
 23079 ;;                  1    wreg      enum E68
 23080 ;; Registers used:
 23081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 23082 ;; Tracked objects:
 23083 ;;		On entry : 0/0
 23084 ;;		On exit  : 0/0
 23085 ;;		Unchanged: 0/0
 23086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23089 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23090 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23091 ;;Total ram usage:       19 bytes
 23092 ;; Hardware stack levels used: 1
 23093 ;; Hardware stack levels required when called: 10
 23094 ;; This function calls:
 23095 ;;		_disk_write
 23096 ;; This function is called by:
 23097 ;;		_move_window
 23098 ;;		_sync_fs
 23099 ;;		_dir_clear
 23100 ;; This function uses a non-reentrant model
 23101 ;;
 23102                           
 23103                           	psect	text84
 23104   0071DC                     __ptext84:
 23105                           	callstack 0
 23106   0071DC                     _sync_window:
 23107                           	callstack 15
 23108   0071DC                     
 23109                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 23110   0071DC  0E00               	movlw	0
 23111   0071DE  0100               	movlb	0	; () banked
 23112   0071E0  6FC7               	movwf	sync_window@res& (0+255),b
 23113   0071E2                     
 23114                           ; BSR set to: 0
 23115                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 23116   0071E2  EE20 F003          	lfsr	2,3
 23117   0071E6  51B5               	movf	sync_window@fs& (0+255),w,b
 23118   0071E8  26D9               	addwf	fsr2l,f,c
 23119   0071EA  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23120   0071EC  22DA               	addwfc	fsr2h,f,c
 23121   0071EE  50DF               	movf	indf2,w,c
 23122   0071F0  B4D8               	btfsc	status,2,c
 23123   0071F2  EFFD  F038         	goto	u17411
 23124   0071F6  EFFF  F038         	goto	u17410
 23125   0071FA                     u17411:
 23126   0071FA  EFD0  F039         	goto	l898
 23127   0071FE                     u17410:
 23128   0071FE                     
 23129                           ; BSR set to: 0
 23130                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 23131   0071FE  0E33               	movlw	51
 23132   007200  25B5               	addwf	sync_window@fs& (0+255),w,b
 23133   007202  6FAB               	movwf	disk_write@buff& (0+255),b
 23134   007204  0E00               	movlw	0
 23135   007206  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 23136   007208  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 23137   00720A  EE20 F02F          	lfsr	2,47
 23138   00720E  51B5               	movf	sync_window@fs& (0+255),w,b
 23139   007210  26D9               	addwf	fsr2l,f,c
 23140   007212  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23141   007214  22DA               	addwfc	fsr2h,f,c
 23142   007216  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 23143   00721C  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 23144   007222  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 23145   007228  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 23146   00722E  0E00               	movlw	0
 23147   007230  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 23148   007232  0E01               	movlw	1
 23149   007234  6FB1               	movwf	disk_write@count& (0+255),b
 23150   007236  EE20 F001          	lfsr	2,1
 23151   00723A  51B5               	movf	sync_window@fs& (0+255),w,b
 23152   00723C  26D9               	addwf	fsr2l,f,c
 23153   00723E  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23154   007240  22DA               	addwfc	fsr2h,f,c
 23155   007242  50DF               	movf	indf2,w,c
 23156   007244  ECF2  F04C         	call	_disk_write
 23157   007248  0900               	iorlw	0
 23158   00724A  A4D8               	btfss	status,2,c
 23159   00724C  EF2A  F039         	goto	u17421
 23160   007250  EF2C  F039         	goto	u17420
 23161   007254                     u17421:
 23162   007254  EFCD  F039         	goto	l14968
 23163   007258                     u17420:
 23164   007258                     
 23165                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 23166   007258  0100               	movlb	0	; () banked
 23167   00725A  EE20 F003          	lfsr	2,3
 23168   00725E  51B5               	movf	sync_window@fs& (0+255),w,b
 23169   007260  26D9               	addwf	fsr2l,f,c
 23170   007262  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23171   007264  22DA               	addwfc	fsr2h,f,c
 23172   007266  6ADF               	clrf	indf2,c
 23173   007268                     
 23174                           ; BSR set to: 0
 23175                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 23176   007268  EE20 F01B          	lfsr	2,27
 23177   00726C  51B5               	movf	sync_window@fs& (0+255),w,b
 23178   00726E  26D9               	addwf	fsr2l,f,c
 23179   007270  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23180   007272  22DA               	addwfc	fsr2h,f,c
 23181   007274  EE10 F023          	lfsr	1,35
 23182   007278  51B5               	movf	sync_window@fs& (0+255),w,b
 23183   00727A  26E1               	addwf	fsr1l,f,c
 23184   00727C  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23185   00727E  22E2               	addwfc	fsr1h,f,c
 23186   007280  006F FF98  F0BB    	movff	postinc1,??_sync_window+4
 23187   007286  006F FF98  F0BC    	movff	postinc1,??_sync_window+5
 23188   00728C  006F FF98  F0BD    	movff	postinc1,??_sync_window+6
 23189   007292  006F FF98  F0BE    	movff	postinc1,??_sync_window+7
 23190   007298  EE10 F02F          	lfsr	1,47
 23191   00729C  51B5               	movf	sync_window@fs& (0+255),w,b
 23192   00729E  26E1               	addwf	fsr1l,f,c
 23193   0072A0  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23194   0072A2  22E2               	addwfc	fsr1h,f,c
 23195   0072A4  006F FF98  F0BF    	movff	postinc1,??_sync_window+8
 23196   0072AA  006F FF98  F0C0    	movff	postinc1,??_sync_window+9
 23197   0072B0  006F FF98  F0C1    	movff	postinc1,??_sync_window+10
 23198   0072B6  006F FF98  F0C2    	movff	postinc1,??_sync_window+11
 23199   0072BC  51BB               	movf	(??_sync_window+4)& (0+255),w,b
 23200   0072BE  5DBF               	subwf	(??_sync_window+8)& (0+255),w,b
 23201   0072C0  6FC3               	movwf	(??_sync_window+12)& (0+255),b
 23202   0072C2  51BC               	movf	(??_sync_window+5)& (0+255),w,b
 23203   0072C4  59C0               	subwfb	(??_sync_window+9)& (0+255),w,b
 23204   0072C6  6FC4               	movwf	(??_sync_window+13)& (0+255),b
 23205   0072C8  51BD               	movf	(??_sync_window+6)& (0+255),w,b
 23206   0072CA  59C1               	subwfb	(??_sync_window+10)& (0+255),w,b
 23207   0072CC  6FC5               	movwf	(??_sync_window+14)& (0+255),b
 23208   0072CE  51BE               	movf	(??_sync_window+7)& (0+255),w,b
 23209   0072D0  59C2               	subwfb	(??_sync_window+11)& (0+255),w,b
 23210   0072D2  6FC6               	movwf	(??_sync_window+15)& (0+255),b
 23211   0072D4  50DE               	movf	postinc2,w,c
 23212   0072D6  5DC3               	subwf	(??_sync_window+12)& (0+255),w,b
 23213   0072D8  50DE               	movf	postinc2,w,c
 23214   0072DA  59C4               	subwfb	(??_sync_window+13)& (0+255),w,b
 23215   0072DC  50DE               	movf	postinc2,w,c
 23216   0072DE  59C5               	subwfb	(??_sync_window+14)& (0+255),w,b
 23217   0072E0  50DE               	movf	postinc2,w,c
 23218   0072E2  59C6               	subwfb	(??_sync_window+15)& (0+255),w,b
 23219   0072E4  B0D8               	btfsc	status,0,c
 23220   0072E6  EF77  F039         	goto	u17431
 23221   0072EA  EF79  F039         	goto	u17430
 23222   0072EE                     u17431:
 23223   0072EE  EFD0  F039         	goto	l898
 23224   0072F2                     u17430:
 23225   0072F2                     
 23226                           ; BSR set to: 0
 23227                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 23228   0072F2  EE20 F002          	lfsr	2,2
 23229   0072F6  51B5               	movf	sync_window@fs& (0+255),w,b
 23230   0072F8  26D9               	addwf	fsr2l,f,c
 23231   0072FA  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23232   0072FC  22DA               	addwfc	fsr2h,f,c
 23233   0072FE  0E02               	movlw	2
 23234   007300  18DE               	xorwf	postinc2,w,c
 23235   007302  A4D8               	btfss	status,2,c
 23236   007304  EF86  F039         	goto	u17441
 23237   007308  EF88  F039         	goto	u17440
 23238   00730C                     u17441:
 23239   00730C  EFD0  F039         	goto	l898
 23240   007310                     u17440:
 23241   007310                     
 23242                           ; BSR set to: 0
 23243   007310  0E33               	movlw	51
 23244   007312  25B5               	addwf	sync_window@fs& (0+255),w,b
 23245   007314  6FAB               	movwf	disk_write@buff& (0+255),b
 23246   007316  0E00               	movlw	0
 23247   007318  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 23248   00731A  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 23249   00731C  EE20 F01B          	lfsr	2,27
 23250   007320  51B5               	movf	sync_window@fs& (0+255),w,b
 23251   007322  26D9               	addwf	fsr2l,f,c
 23252   007324  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23253   007326  22DA               	addwfc	fsr2h,f,c
 23254   007328  006F FF78  F0B7    	movff	postinc2,??_sync_window
 23255   00732E  006F FF78  F0B8    	movff	postinc2,??_sync_window+1
 23256   007334  006F FF78  F0B9    	movff	postinc2,??_sync_window+2
 23257   00733A  006F FF78  F0BA    	movff	postinc2,??_sync_window+3
 23258   007340  EE20 F02F          	lfsr	2,47
 23259   007344  51B5               	movf	sync_window@fs& (0+255),w,b
 23260   007346  26D9               	addwf	fsr2l,f,c
 23261   007348  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23262   00734A  22DA               	addwfc	fsr2h,f,c
 23263   00734C  006F FF78  F0BB    	movff	postinc2,??_sync_window+4
 23264   007352  006F FF78  F0BC    	movff	postinc2,??_sync_window+5
 23265   007358  006F FF78  F0BD    	movff	postinc2,??_sync_window+6
 23266   00735E  006F FF78  F0BE    	movff	postinc2,??_sync_window+7
 23267   007364  51B7               	movf	??_sync_window& (0+255),w,b
 23268   007366  25BB               	addwf	(??_sync_window+4)& (0+255),w,b
 23269   007368  6FAD               	movwf	disk_write@sector& (0+255),b
 23270   00736A  51B8               	movf	(??_sync_window+1)& (0+255),w,b
 23271   00736C  21BC               	addwfc	(??_sync_window+5)& (0+255),w,b
 23272   00736E  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 23273   007370  51B9               	movf	(??_sync_window+2)& (0+255),w,b
 23274   007372  21BD               	addwfc	(??_sync_window+6)& (0+255),w,b
 23275   007374  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 23276   007376  51BA               	movf	(??_sync_window+3)& (0+255),w,b
 23277   007378  21BE               	addwfc	(??_sync_window+7)& (0+255),w,b
 23278   00737A  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 23279   00737C  0E00               	movlw	0
 23280   00737E  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 23281   007380  0E01               	movlw	1
 23282   007382  6FB1               	movwf	disk_write@count& (0+255),b
 23283   007384  EE20 F001          	lfsr	2,1
 23284   007388  51B5               	movf	sync_window@fs& (0+255),w,b
 23285   00738A  26D9               	addwf	fsr2l,f,c
 23286   00738C  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 23287   00738E  22DA               	addwfc	fsr2h,f,c
 23288   007390  50DF               	movf	indf2,w,c
 23289   007392  ECF2  F04C         	call	_disk_write
 23290   007396  EFD0  F039         	goto	l898
 23291   00739A                     l14968:
 23292                           
 23293                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 23294   00739A  0E01               	movlw	1
 23295   00739C  0100               	movlb	0	; () banked
 23296   00739E  6FC7               	movwf	sync_window@res& (0+255),b
 23297   0073A0                     l898:
 23298                           
 23299                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 23300   0073A0  0100               	movlb	0	; () banked
 23301   0073A2  51C7               	movf	sync_window@res& (0+255),w,b
 23302   0073A4                     
 23303                           ; BSR set to: 0
 23304   0073A4  0012               	return		;funcret
 23305   0073A6                     __end_of_sync_window:
 23306                           	callstack 0
 23307                           
 23308 ;; *************** function _disk_write *****************
 23309 ;; Defined at:
 23310 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 23311 ;; Parameters:    Size  Location     Type
 23312 ;;  pdrv            1    wreg     unsigned char 
 23313 ;;  buff            2   75[BANK0 ] PTR const unsigned char 
 23314 ;;		 -> pb$buf(64), Fil$buf(512), STR_13(2), send_status_ok@text(3), 
 23315 ;;		 -> STR_9(12), Fil(546), FatFs(563), f_printf@pb(70), 
 23316 ;;		 -> f_puts@pb(70), f_putc@pb(70), FatFs$win(512), NULL(0), 
 23317 ;;  sector          4   77[BANK0 ] unsigned long 
 23318 ;;  count           2   81[BANK0 ] unsigned int 
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;  pdrv            1   83[BANK0 ] unsigned char 
 23321 ;;  res             1   84[BANK0 ] enum E12
 23322 ;; Return value:  Size  Location     Type
 23323 ;;                  1    wreg      enum E12
 23324 ;; Registers used:
 23325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 23326 ;; Tracked objects:
 23327 ;;		On entry : 0/0
 23328 ;;		On exit  : 0/0
 23329 ;;		Unchanged: 0/0
 23330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23334 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23335 ;;Total ram usage:       10 bytes
 23336 ;; Hardware stack levels used: 1
 23337 ;; Hardware stack levels required when called: 9
 23338 ;; This function calls:
 23339 ;;		_SD_SPI_SectorWrite
 23340 ;; This function is called by:
 23341 ;;		_sync_window
 23342 ;;		_sync_fs
 23343 ;;		_dir_clear
 23344 ;;		_f_write
 23345 ;;		_f_sync
 23346 ;;		_f_read
 23347 ;; This function uses a non-reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text85
 23351   0099E4                     __ptext85:
 23352                           	callstack 0
 23353   0099E4                     _disk_write:
 23354                           	callstack 19
 23355                           
 23356                           ; BSR set to: 0
 23357                           ;incstack = 0
 23358                           ;disk_write@pdrv stored from wreg
 23359   0099E4  0100               	movlb	0	; () banked
 23360   0099E6  6FB3               	movwf	disk_write@pdrv& (0+255),b
 23361   0099E8                     
 23362                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 23363   0099E8  0E04               	movlw	4
 23364   0099EA  0100               	movlb	0	; () banked
 23365   0099EC  6FB4               	movwf	disk_write@res& (0+255),b
 23366                           
 23367                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 23368   0099EE  EF1D  F04D         	goto	l14932
 23369   0099F2                     l14924:
 23370                           
 23371                           ; BSR set to: 0
 23372                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 23373   0099F2  C0AD  F090         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 23374   0099F6  C0AE  F091         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 23375   0099FA  C0AF  F092         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 23376   0099FE  C0B0  F093         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 23377   009A02  C0AB  F094         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 23378   009A06  C0AC  F095         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 23379   009A0A  C0B1  F096         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 23380   009A0E  C0B2  F097         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 23381   009A12  EC0D  F03F         	call	_SD_SPI_SectorWrite	;wreg free
 23382   009A16  06E8               	decf	wreg,f,c
 23383   009A18  A4D8               	btfss	status,2,c
 23384   009A1A  EF11  F04D         	goto	u17391
 23385   009A1E  EF13  F04D         	goto	u17390
 23386   009A22                     u17391:
 23387   009A22  EF18  F04D         	goto	l14928
 23388   009A26                     u17390:
 23389   009A26                     
 23390                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 23391   009A26  0E00               	movlw	0
 23392   009A28  0100               	movlb	0	; () banked
 23393   009A2A  6FB4               	movwf	disk_write@res& (0+255),b
 23394                           
 23395                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 23396   009A2C  EF24  F04D         	goto	l14934
 23397   009A30                     l14928:
 23398                           
 23399                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 23400   009A30  0E01               	movlw	1
 23401   009A32  0100               	movlb	0	; () banked
 23402   009A34  6FB4               	movwf	disk_write@res& (0+255),b
 23403   009A36  EF24  F04D         	goto	l14934
 23404   009A3A                     l14932:
 23405                           
 23406                           ; BSR set to: 0
 23407   009A3A  51B3               	movf	disk_write@pdrv& (0+255),w,b
 23408                           
 23409                           ; Switch size 1, requested type "simple"
 23410                           ; Number of cases is 1, Range of values is 0 to 0
 23411                           ; switch strategies available:
 23412                           ; Name         Instructions Cycles
 23413                           ; simple_byte            4     3 (average)
 23414                           ;	Chosen strategy is simple_byte
 23415   009A3C  0A00               	xorlw	0	; case 0
 23416   009A3E  B4D8               	btfsc	status,2,c
 23417   009A40  EFF9  F04C         	goto	l14924
 23418   009A44  EF24  F04D         	goto	l14934
 23419   009A48                     l14934:
 23420                           
 23421                           ; BSR set to: 0
 23422                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 23423   009A48  51B4               	movf	disk_write@res& (0+255),w,b
 23424   009A4A                     
 23425                           ; BSR set to: 0
 23426   009A4A  0012               	return		;funcret
 23427   009A4C                     __end_of_disk_write:
 23428                           	callstack 0
 23429                           
 23430 ;; *************** function _SD_SPI_SectorWrite *****************
 23431 ;; Defined at:
 23432 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 23433 ;; Parameters:    Size  Location     Type
 23434 ;;  sector_addre    4   48[BANK0 ] unsigned long 
 23435 ;;  buffer          2   52[BANK0 ] PTR const unsigned char 
 23436 ;;		 -> pb$buf(64), Fil$buf(512), STR_13(2), send_status_ok@text(3), 
 23437 ;;		 -> STR_9(12), Fil(546), FatFs(563), f_printf@pb(70), 
 23438 ;;		 -> f_puts@pb(70), f_putc@pb(70), FatFs$win(512), NULL(0), 
 23439 ;;  sector_count    2   54[BANK0 ] unsigned short 
 23440 ;; Auto vars:     Size  Location     Type
 23441 ;;  info           13   62[BANK0 ] struct SD_ASYNC_IO
 23442 ;;  i               2   60[BANK0 ] unsigned short 
 23443 ;;  status          1   59[BANK0 ] unsigned char 
 23444 ;;  result          1   58[BANK0 ] _Bool 
 23445 ;; Return value:  Size  Location     Type
 23446 ;;                  1    wreg      _Bool 
 23447 ;; Registers used:
 23448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 23449 ;; Tracked objects:
 23450 ;;		On entry : 0/0
 23451 ;;		On exit  : 0/0
 23452 ;;		Unchanged: 0/0
 23453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23454 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23455 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23457 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23458 ;;Total ram usage:       27 bytes
 23459 ;; Hardware stack levels used: 1
 23460 ;; Hardware stack levels required when called: 8
 23461 ;; This function calls:
 23462 ;;		_SDFAST_open
 23463 ;;		_SDSLOW_open
 23464 ;;		_SD_SPI_AsyncWriteTasks
 23465 ;;		_SPI1_Close
 23466 ;; This function is called by:
 23467 ;;		_disk_write
 23468 ;; This function uses a non-reentrant model
 23469 ;;
 23470                           
 23471                           	psect	text86
 23472   007E1A                     __ptext86:
 23473                           	callstack 0
 23474   007E1A                     _SD_SPI_SectorWrite:
 23475                           	callstack 19
 23476   007E1A                     
 23477                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 23478   007E1A  0E00               	movlw	0
 23479   007E1C  0100               	movlb	0	; () banked
 23480   007E1E  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 23481                           
 23482                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 23483   007E20  0E00               	movlw	0
 23484   007E22  6F9D               	movwf	(SD_SPI_SectorWrite@i+1)& (0+255),b
 23485   007E24  0E00               	movlw	0
 23486   007E26  6F9C               	movwf	SD_SPI_SectorWrite@i& (0+255),b
 23487   007E28  EFA1  F03F         	goto	l14740
 23488   007E2C                     l14712:
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 23492   007E2C  0E02               	movlw	2
 23493   007E2E  6F9F               	movwf	(SD_SPI_SectorWrite@info+1)& (0+255),b
 23494   007E30  0E00               	movlw	0
 23495   007E32  6F9E               	movwf	SD_SPI_SectorWrite@info& (0+255),b
 23496                           
 23497                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 23498   007E34  0E00               	movlw	0
 23499   007E36  6FA0               	movwf	(SD_SPI_SectorWrite@info+2)& (0+255),b
 23500   007E38  0E02               	movlw	2
 23501   007E3A  6FA1               	movwf	(SD_SPI_SectorWrite@info+3)& (0+255),b
 23502   007E3C  0E00               	movlw	0
 23503   007E3E  6FA2               	movwf	(SD_SPI_SectorWrite@info+4)& (0+255),b
 23504   007E40  0E00               	movlw	0
 23505   007E42  6FA3               	movwf	(SD_SPI_SectorWrite@info+5)& (0+255),b
 23506   007E44                     
 23507                           ; BSR set to: 0
 23508                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 23509   007E44  C09C  F098         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 23510   007E48  C09D  F099         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 23511   007E4C  0E09               	movlw	9
 23512   007E4E                     u17055:
 23513   007E4E  90D8               	bcf	status,0,c
 23514   007E50  3798               	rlcf	??_SD_SPI_SectorWrite& (0+255),f,b
 23515   007E52  3799               	rlcf	(??_SD_SPI_SectorWrite+1)& (0+255),f,b
 23516   007E54  2EE8               	decfsz	wreg,f,c
 23517   007E56  EF27  F03F         	goto	u17055
 23518   007E5A  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23519   007E5C  2594               	addwf	SD_SPI_SectorWrite@buffer& (0+255),w,b
 23520   007E5E  6FA4               	movwf	(SD_SPI_SectorWrite@info+6)& (0+255),b
 23521   007E60  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23522   007E62  2195               	addwfc	(SD_SPI_SectorWrite@buffer+1)& (0+255),w,b
 23523   007E64  6FA5               	movwf	(SD_SPI_SectorWrite@info+7)& (0+255),b
 23524   007E66                     
 23525                           ; BSR set to: 0
 23526                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 23527   007E66  519C               	movf	SD_SPI_SectorWrite@i& (0+255),w,b
 23528   007E68  2590               	addwf	SD_SPI_SectorWrite@sector_address& (0+255),w,b
 23529   007E6A  6FA6               	movwf	(SD_SPI_SectorWrite@info+8)& (0+255),b
 23530   007E6C  519D               	movf	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 23531   007E6E  2191               	addwfc	(SD_SPI_SectorWrite@sector_address+1)& (0+255),w,b
 23532   007E70  6FA7               	movwf	(SD_SPI_SectorWrite@info+9)& (0+255),b
 23533   007E72  0E00               	movlw	0
 23534   007E74  2192               	addwfc	(SD_SPI_SectorWrite@sector_address+2)& (0+255),w,b
 23535   007E76  6FA8               	movwf	(SD_SPI_SectorWrite@info+10)& (0+255),b
 23536   007E78  0E00               	movlw	0
 23537   007E7A  2193               	addwfc	(SD_SPI_SectorWrite@sector_address+3)& (0+255),w,b
 23538   007E7C  6FA9               	movwf	(SD_SPI_SectorWrite@info+11)& (0+255),b
 23539                           
 23540                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 23541   007E7E  0E01               	movlw	1
 23542   007E80  6FAA               	movwf	(SD_SPI_SectorWrite@info+12)& (0+255),b
 23543   007E82                     
 23544                           ; BSR set to: 0
 23545                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 23546   007E82  0E95               	movlw	low (_spiMaster+2)
 23547   007E84  6EF6               	movwf	tblptrl,c
 23548   007E86  0EFF               	movlw	high (_spiMaster+2)
 23549   007E88  6EF7               	movwf	tblptrh,c
 23550   007E8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23551   007E8A  6AF8               	clrf	tblptru,c
 23552   007E8C                     	endif
 23553   007E8C                     	if	0	;tblptru may be non-zero
 23554   007E8C                     	endif
 23555   007E8C  0009               	tblrd		*+
 23556   007E8E  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 23557   007E94  0009               	tblrd		*+
 23558   007E96  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 23559   007E9C  D802               	call	u17068
 23560   007E9E  EF5A  F03F         	goto	u17069
 23561   007EA2                     u17068:
 23562   007EA2  0005               	push	
 23563   007EA4  6EFA               	movwf	pclath,c
 23564   007EA6  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23565   007EA8  6EFD               	movwf	tosl,c
 23566   007EAA  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23567   007EAC  6EFE               	movwf	tosh,c
 23568   007EAE  6AFF               	clrf	tosu,c
 23569   007EB0  50FA               	movf	pclath,w,c
 23570   007EB2  0012               	return		;indir
 23571   007EB4                     u17069:
 23572   007EB4  0900               	iorlw	0
 23573   007EB6  A4D8               	btfss	status,2,c
 23574   007EB8  EF60  F03F         	goto	u17071
 23575   007EBC  EF62  F03F         	goto	u17070
 23576   007EC0                     u17071:
 23577   007EC0  EF65  F03F         	goto	l1581
 23578   007EC4                     u17070:
 23579   007EC4                     
 23580                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 23581   007EC4  0E00               	movlw	0
 23582   007EC6  EFAD  F03F         	goto	l1580
 23583   007ECA                     l1581:
 23584   007ECA  9ABA               	bcf	186,5,c	;volatile
 23585   007ECC                     l14724:
 23586                           
 23587                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 23588   007ECC  0E9E               	movlw	low SD_SPI_SectorWrite@info
 23589   007ECE  0100               	movlb	0	; () banked
 23590   007ED0  6F82               	movwf	SD_SPI_AsyncWriteTasks@info& (0+255),b
 23591   007ED2  EC97  F013         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 23592   007ED6  0100               	movlb	0	; () banked
 23593   007ED8  6F9B               	movwf	SD_SPI_SectorWrite@status& (0+255),b
 23594   007EDA                     
 23595                           ; BSR set to: 0
 23596                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 23597   007EDA  519B               	movf	SD_SPI_SectorWrite@status& (0+255),w,b
 23598   007EDC  A4D8               	btfss	status,2,c
 23599   007EDE  EF73  F03F         	goto	u17081
 23600   007EE2  EF75  F03F         	goto	u17080
 23601   007EE6                     u17081:
 23602   007EE6  EF79  F03F         	goto	l14732
 23603   007EEA                     u17080:
 23604   007EEA                     
 23605                           ; BSR set to: 0
 23606                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 23607   007EEA  0E01               	movlw	1
 23608   007EEC  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 23609                           
 23610                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 23611   007EEE  EF83  F03F         	goto	l1589
 23612   007EF2                     l14732:
 23613                           
 23614                           ; BSR set to: 0
 23615   007EF2  299B               	incf	SD_SPI_SectorWrite@status& (0+255),w,b
 23616   007EF4  A4D8               	btfss	status,2,c
 23617   007EF6  EF7F  F03F         	goto	u17091
 23618   007EFA  EF81  F03F         	goto	u17090
 23619   007EFE                     u17091:
 23620   007EFE  EF66  F03F         	goto	l14724
 23621   007F02                     u17090:
 23622   007F02                     
 23623                           ; BSR set to: 0
 23624                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 23625   007F02  0E00               	movlw	0
 23626   007F04  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 23627   007F06                     l1589:
 23628                           
 23629                           ; BSR set to: 0
 23630   007F06  8ABA               	bsf	186,5,c	;volatile
 23631   007F08                     
 23632                           ; BSR set to: 0
 23633                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 23634   007F08  0E93               	movlw	low _spiMaster
 23635   007F0A  6EF6               	movwf	tblptrl,c
 23636   007F0C                     	if	1	;There is more than 1 active tblptr byte
 23637   007F0C  0EFF               	movlw	high _spiMaster
 23638   007F0E  6EF7               	movwf	tblptrh,c
 23639   007F10                     	endif
 23640   007F10                     	if	1	;There are 3 active tblptr bytes
 23641   007F10  0E00               	movlw	low (_spiMaster shr (0+16))
 23642   007F12  6EF8               	movwf	tblptru,c
 23643   007F14                     	endif
 23644   007F14  0009               	tblrd		*+
 23645   007F16  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 23646   007F1C  0009               	tblrd		*+
 23647   007F1E  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 23648   007F24  D802               	call	u17108
 23649   007F26  EF9E  F03F         	goto	u17109
 23650   007F2A                     u17108:
 23651   007F2A  0005               	push	
 23652   007F2C  6EFA               	movwf	pclath,c
 23653   007F2E  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23654   007F30  6EFD               	movwf	tosl,c
 23655   007F32  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23656   007F34  6EFE               	movwf	tosh,c
 23657   007F36  6AFF               	clrf	tosu,c
 23658   007F38  50FA               	movf	pclath,w,c
 23659   007F3A  0012               	return		;indir
 23660   007F3C                     u17109:
 23661   007F3C                     
 23662                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 23663   007F3C  0100               	movlb	0	; () banked
 23664   007F3E  4B9C               	infsnz	SD_SPI_SectorWrite@i& (0+255),f,b
 23665   007F40  2B9D               	incf	(SD_SPI_SectorWrite@i+1)& (0+255),f,b
 23666   007F42                     l14740:
 23667                           
 23668                           ; BSR set to: 0
 23669   007F42  5196               	movf	SD_SPI_SectorWrite@sector_count& (0+255),w,b
 23670   007F44  5D9C               	subwf	SD_SPI_SectorWrite@i& (0+255),w,b
 23671   007F46  5197               	movf	(SD_SPI_SectorWrite@sector_count+1)& (0+255),w,b
 23672   007F48  599D               	subwfb	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 23673   007F4A  A0D8               	btfss	status,0,c
 23674   007F4C  EFAA  F03F         	goto	u17111
 23675   007F50  EFAC  F03F         	goto	u17110
 23676   007F54                     u17111:
 23677   007F54  EF16  F03F         	goto	l14712
 23678   007F58                     u17110:
 23679   007F58                     
 23680                           ; BSR set to: 0
 23681                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 23682   007F58  519A               	movf	SD_SPI_SectorWrite@result& (0+255),w,b
 23683   007F5A                     l1580:
 23684   007F5A  0012               	return		;funcret
 23685   007F5C                     __end_of_SD_SPI_SectorWrite:
 23686                           	callstack 0
 23687                           
 23688 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 23689 ;; Defined at:
 23690 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 23691 ;; Parameters:    Size  Location     Type
 23692 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 23693 ;;		 -> SD_SPI_SectorWrite@info(13), 
 23694 ;; Auto vars:     Size  Location     Type
 23695 ;;  response        5   39[BANK0 ] struct .
 23696 ;;  preEraseBloc    4   44[BANK0 ] unsigned long 
 23697 ;; Return value:  Size  Location     Type
 23698 ;;                  1    wreg      unsigned char 
 23699 ;; Registers used:
 23700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 23701 ;; Tracked objects:
 23702 ;;		On entry : 0/0
 23703 ;;		On exit  : 0/0
 23704 ;;		Unchanged: 0/0
 23705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23706 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23707 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23709 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23710 ;;Total ram usage:       14 bytes
 23711 ;; Hardware stack levels used: 1
 23712 ;; Hardware stack levels required when called: 7
 23713 ;; This function calls:
 23714 ;;		_SD_SendCmd
 23715 ;;		_SPI1_ExchangeBlock
 23716 ;;		_SPI1_ExchangeByte
 23717 ;; This function is called by:
 23718 ;;		_SD_SPI_SectorWrite
 23719 ;; This function uses a non-reentrant model
 23720 ;;
 23721                           
 23722                           	psect	text87
 23723   00272E                     __ptext87:
 23724                           	callstack 0
 23725   00272E                     _SD_SPI_AsyncWriteTasks:
 23726                           	callstack 19
 23727   00272E                     
 23728                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 23729   00272E  EFD8  F016         	goto	l14698
 23730   002732                     l14512:
 23731                           
 23732                           ; BSR set to: 0
 23733                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 23734   002732  0E00               	movlw	0
 23735   002734  EFF9  F016         	goto	l1717
 23736   002738                     l14516:
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 23740   002738  0E02               	movlw	2
 23741   00273A  6E53               	movwf	(_mediaInformation+3)^0,c
 23742                           
 23743                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 23744   00273C  0E02               	movlw	2
 23745   00273E  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 23746   002740  0E00               	movlw	0
 23747   002742  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 23748   002744                     
 23749                           ; BSR set to: 0
 23750                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 23751   002744  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23752   002746  6ED9               	movwf	fsr2l,c
 23753   002748  6ADA               	clrf	fsr2h,c
 23754   00274A  EE10  F02D         	lfsr	1,_ioInfo
 23755   00274E  0E0C               	movlw	12
 23756   002750                     u16691:
 23757   002750  006F FF6F FFE3     	movff	plusw2,plusw1
 23758   002756  06E8               	decf	wreg,f,c
 23759   002758  E2FB               	bc	u16691
 23760   00275A                     
 23761                           ; BSR set to: 0
 23762                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 23763   00275A  5032               	movf	(_ioInfo+5)^0,w,c
 23764   00275C  1031               	iorwf	(_ioInfo+4)^0,w,c
 23765   00275E  E108               	bnz	u16701
 23766   002760  042F               	decf	(_ioInfo+2)^0,w,c
 23767   002762  0E02               	movlw	2
 23768   002764  5830               	subwfb	(_ioInfo+3)^0,w,c
 23769   002766  B0D8               	btfsc	status,0,c
 23770   002768  EFB8  F013         	goto	u16701
 23771   00276C  EFBA  F013         	goto	u16700
 23772   002770                     u16701:
 23773   002770  EFBE  F013         	goto	l14524
 23774   002774                     u16700:
 23775   002774                     
 23776                           ; BSR set to: 0
 23777                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 23778   002774  0E0A               	movlw	10
 23779   002776  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 23780                           
 23781                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 23782   002778  EF13  F014         	goto	l14538
 23783   00277C                     l14524:
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 23787   00277C  0E0B               	movlw	11
 23788   00277E  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 23789   002780                     
 23790                           ; BSR set to: 0
 23791                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 23792   002780  C02F  F083         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 23793   002784  C030  F084         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 23794   002788  C031  F085         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 23795   00278C  C032  F086         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 23796   002790  0E0A               	movlw	10
 23797   002792  EFD0  F013         	goto	u16710
 23798   002796                     u16715:
 23799   002796  90D8               	bcf	status,0,c
 23800   002798  3386               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),f,b
 23801   00279A  3385               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),f,b
 23802   00279C  3384               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),f,b
 23803   00279E  3383               	rrcf	??_SD_SPI_AsyncWriteTasks& (0+255),f,b
 23804   0027A0                     u16710:
 23805   0027A0  2EE8               	decfsz	wreg,f,c
 23806   0027A2  EFCB  F013         	goto	u16715
 23807   0027A6  C083  F08C         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 23808   0027AA  C084  F08D         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 23809   0027AE  C085  F08E         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 23810   0027B2  C086  F08F         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 23811   0027B6                     
 23812                           ; BSR set to: 0
 23813                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 23814   0027B6  518C               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),w,b
 23815   0027B8  118D               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),w,b
 23816   0027BA  118E               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),w,b
 23817   0027BC  118F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),w,b
 23818   0027BE  A4D8               	btfss	status,2,c
 23819   0027C0  EFE4  F013         	goto	u16721
 23820   0027C4  EFE6  F013         	goto	u16720
 23821   0027C8                     u16721:
 23822   0027C8  EFEC  F013         	goto	l14532
 23823   0027CC                     u16720:
 23824   0027CC                     
 23825                           ; BSR set to: 0
 23826                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 23827   0027CC  0E01               	movlw	1
 23828   0027CE  278C               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),f,b
 23829   0027D0  0E00               	movlw	0
 23830   0027D2  238D               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),f,b
 23831   0027D4  238E               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),f,b
 23832   0027D6  238F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),f,b
 23833   0027D8                     l14532:
 23834                           
 23835                           ; BSR set to: 0
 23836                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 23837   0027D8  0E00               	movlw	0
 23838   0027DA  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 23839   0027DC  0E00               	movlw	0
 23840   0027DE  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 23841   0027E0  0E00               	movlw	0
 23842   0027E2  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 23843   0027E4  0E00               	movlw	0
 23844   0027E6  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 23845   0027E8  0E0F               	movlw	15
 23846   0027EA  EC82  F01C         	call	_SD_SendCmd
 23847   0027EE  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 23848   0027F2  0E04               	movlw	4
 23849   0027F4                     u16731:
 23850   0027F4  006F FFAF FFDB     	movff	plusw0,plusw2
 23851   0027FA  06E8               	decf	wreg,f,c
 23852   0027FC  E2FB               	bc	u16731
 23853   0027FE                     
 23854                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 23855   0027FE  0100               	movlb	0	; () banked
 23856   002800  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 23857   002802  A4D8               	btfss	status,2,c
 23858   002804  EF06  F014         	goto	u16741
 23859   002808  EF08  F014         	goto	u16740
 23860   00280C                     u16741:
 23861   00280C  EF13  F014         	goto	l14538
 23862   002810                     u16740:
 23863   002810                     
 23864                           ; BSR set to: 0
 23865                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 23866   002810  C08C  F06B         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 23867   002814  C08D  F06C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 23868   002818  C08E  F06D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 23869   00281C  C08F  F06E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 23870   002820  0E13               	movlw	19
 23871   002822  EC82  F01C         	call	_SD_SendCmd
 23872   002826                     l14538:
 23873                           
 23874                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 23875   002826  5058               	movf	(_mediaInformation+8)^0,w,c
 23876   002828  A4D8               	btfss	status,2,c
 23877   00282A  EF19  F014         	goto	u16751
 23878   00282E  EF1B  F014         	goto	u16750
 23879   002832                     u16751:
 23880   002832  EF24  F014         	goto	l14542
 23881   002836                     u16750:
 23882   002836                     
 23883                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 23884   002836  0E09               	movlw	9
 23885   002838                     u16765:
 23886   002838  90D8               	bcf	status,0,c
 23887   00283A  3635               	rlcf	(_ioInfo+8)^0,f,c
 23888   00283C  3636               	rlcf	(_ioInfo+9)^0,f,c
 23889   00283E  3637               	rlcf	(_ioInfo+10)^0,f,c
 23890   002840  3638               	rlcf	(_ioInfo+11)^0,f,c
 23891   002842  2EE8               	decfsz	wreg,f,c
 23892   002844  EF1C  F014         	goto	u16765
 23893   002848                     l14542:
 23894                           
 23895                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 23896   002848  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 23897   00284C  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 23898   002850  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 23899   002854  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 23900   002858  504A               	movf	SD_SPI_AsyncWriteTasks@command^0,w,c
 23901   00285A  EC82  F01C         	call	_SD_SendCmd
 23902   00285E  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 23903   002862  0E04               	movlw	4
 23904   002864                     u16771:
 23905   002864  006F FFAF FFDB     	movff	plusw0,plusw2
 23906   00286A  06E8               	decf	wreg,f,c
 23907   00286C  E2FB               	bc	u16771
 23908   00286E                     
 23909                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 23910   00286E  0100               	movlb	0	; () banked
 23911   002870  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 23912   002872  B4D8               	btfsc	status,2,c
 23913   002874  EF3E  F014         	goto	u16781
 23914   002878  EF40  F014         	goto	u16780
 23915   00287C                     u16781:
 23916   00287C  EF4A  F014         	goto	l14554
 23917   002880                     u16780:
 23918   002880                     
 23919                           ; BSR set to: 0
 23920                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 23921   002880  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23922   002882  6ED9               	movwf	fsr2l,c
 23923   002884  6ADA               	clrf	fsr2h,c
 23924   002886  0E0C               	movlw	12
 23925   002888  26D9               	addwf	fsr2l,f,c
 23926   00288A  0EFF               	movlw	255
 23927   00288C  6EDF               	movwf	indf2,c
 23928   00288E                     l14548:
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 23932   00288E  0EFF               	movlw	255
 23933   002890  EFF9  F016         	goto	l1717
 23934   002894                     l14554:
 23935                           
 23936                           ; BSR set to: 0
 23937                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 23938   002894  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23939   002896  6ED9               	movwf	fsr2l,c
 23940   002898  6ADA               	clrf	fsr2h,c
 23941   00289A  0E0C               	movlw	12
 23942   00289C  26D9               	addwf	fsr2l,f,c
 23943   00289E  0E02               	movlw	2
 23944   0028A0  6EDF               	movwf	indf2,c
 23945   0028A2                     l14556:
 23946                           
 23947                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 23948   0028A2  0E02               	movlw	2
 23949   0028A4  EFF9  F016         	goto	l1717
 23950   0028A8                     l14560:
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 23954   0028A8  0E02               	movlw	2
 23955   0028AA  1843               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 23956   0028AC  1042               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 23957   0028AE  A4D8               	btfss	status,2,c
 23958   0028B0  EF5C  F014         	goto	u16791
 23959   0028B4  EF5E  F014         	goto	u16790
 23960   0028B8                     u16791:
 23961   0028B8  EF9D  F014         	goto	l14568
 23962   0028BC                     u16790:
 23963   0028BC                     
 23964                           ; BSR set to: 0
 23965                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 23966   0028BC  0E0B               	movlw	11
 23967   0028BE  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 23968   0028C0  A4D8               	btfss	status,2,c
 23969   0028C2  EF65  F014         	goto	u16801
 23970   0028C6  EF67  F014         	goto	u16800
 23971   0028CA                     u16801:
 23972   0028CA  EF83  F014         	goto	l14566
 23973   0028CE                     u16800:
 23974   0028CE                     
 23975                           ; BSR set to: 0
 23976                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 23977   0028CE  0E97               	movlw	low (_spiMaster+4)
 23978   0028D0  6EF6               	movwf	tblptrl,c
 23979   0028D2  0EFF               	movlw	high (_spiMaster+4)
 23980   0028D4  6EF7               	movwf	tblptrh,c
 23981   0028D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23982   0028D6  6AF8               	clrf	tblptru,c
 23983   0028D8                     	endif
 23984   0028D8                     	if	0	;tblptru may be non-zero
 23985   0028D8                     	endif
 23986   0028D8  0009               	tblrd		*+
 23987   0028DA  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23988   0028E0  0009               	tblrd		*+
 23989   0028E2  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23990   0028E8  D802               	call	u16818
 23991   0028EA  EF81  F014         	goto	u16819
 23992   0028EE                     u16818:
 23993   0028EE  0005               	push	
 23994   0028F0  6EFA               	movwf	pclath,c
 23995   0028F2  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23996   0028F4  6EFD               	movwf	tosl,c
 23997   0028F6  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23998   0028F8  6EFE               	movwf	tosh,c
 23999   0028FA  6AFF               	clrf	tosu,c
 24000   0028FC  50FA               	movf	pclath,w,c
 24001   0028FE  0EFC               	movlw	252
 24002   002900  0012               	return		;indir
 24003   002902                     u16819:
 24004                           
 24005                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 24006   002902  EF9D  F014         	goto	l14568
 24007   002906                     l14566:
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 24011   002906  0E97               	movlw	low (_spiMaster+4)
 24012   002908  6EF6               	movwf	tblptrl,c
 24013   00290A  0EFF               	movlw	high (_spiMaster+4)
 24014   00290C  6EF7               	movwf	tblptrh,c
 24015   00290E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24016   00290E  6AF8               	clrf	tblptru,c
 24017   002910                     	endif
 24018   002910                     	if	0	;tblptru may be non-zero
 24019   002910                     	endif
 24020   002910  0009               	tblrd		*+
 24021   002912  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24022   002918  0009               	tblrd		*+
 24023   00291A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24024   002920  D802               	call	u16828
 24025   002922  EF9D  F014         	goto	u16829
 24026   002926                     u16828:
 24027   002926  0005               	push	
 24028   002928  6EFA               	movwf	pclath,c
 24029   00292A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24030   00292C  6EFD               	movwf	tosl,c
 24031   00292E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24032   002930  6EFE               	movwf	tosh,c
 24033   002932  6AFF               	clrf	tosu,c
 24034   002934  50FA               	movf	pclath,w,c
 24035   002936  0EFE               	movlw	254
 24036   002938  0012               	return		;indir
 24037   00293A                     u16829:
 24038   00293A                     l14568:
 24039                           
 24040                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 24041   00293A  0100               	movlb	0	; () banked
 24042   00293C  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24043   00293E  6ED9               	movwf	fsr2l,c
 24044   002940  6ADA               	clrf	fsr2h,c
 24045   002942  006F FF78  F02D    	movff	postinc2,_ioInfo
 24046   002948  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 24047   00294E                     
 24048                           ; BSR set to: 0
 24049                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 24050   00294E  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24051   002950  6ED9               	movwf	fsr2l,c
 24052   002952  6ADA               	clrf	fsr2h,c
 24053   002954  0E06               	movlw	6
 24054   002956  26D9               	addwf	fsr2l,f,c
 24055   002958  006F FF78  F033    	movff	postinc2,_ioInfo+6
 24056   00295E  006F FF74  F034    	movff	postdec2,_ioInfo+7
 24057   002964                     
 24058                           ; BSR set to: 0
 24059                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 24060   002964  502D               	movf	_ioInfo^0,w,c
 24061   002966  6F83               	movwf	??_SD_SPI_AsyncWriteTasks& (0+255),b
 24062   002968  502E               	movf	(_ioInfo+1)^0,w,c
 24063   00296A  6F84               	movwf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),b
 24064   00296C  6B85               	clrf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),b
 24065   00296E  6B86               	clrf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),b
 24066   002970  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24067   002972  5E2F               	subwf	(_ioInfo+2)^0,f,c
 24068   002974  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24069   002976  5A30               	subwfb	(_ioInfo+3)^0,f,c
 24070   002978  5185               	movf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),w,b
 24071   00297A  5A31               	subwfb	(_ioInfo+4)^0,f,c
 24072   00297C  5186               	movf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),w,b
 24073   00297E  5A32               	subwfb	(_ioInfo+5)^0,f,c
 24074   002980                     
 24075                           ; BSR set to: 0
 24076                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 24077   002980  502D               	movf	_ioInfo^0,w,c
 24078   002982  5E42               	subwf	SD_SPI_AsyncWriteTasks@blockCounter^0,f,c
 24079   002984  502E               	movf	(_ioInfo+1)^0,w,c
 24080   002986  5A43               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,f,c
 24081   002988                     
 24082                           ; BSR set to: 0
 24083                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 24084   002988  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 24085   00298C  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 24086   002990  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 24087   002994  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 24088   002998  0E99               	movlw	low (_spiMaster+6)
 24089   00299A  6EF6               	movwf	tblptrl,c
 24090   00299C  0EFF               	movlw	high (_spiMaster+6)
 24091   00299E  6EF7               	movwf	tblptrh,c
 24092   0029A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24093   0029A0  6AF8               	clrf	tblptru,c
 24094   0029A2                     	endif
 24095   0029A2                     	if	0	;tblptru may be non-zero
 24096   0029A2                     	endif
 24097   0029A2  0009               	tblrd		*+
 24098   0029A4  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24099   0029AA  0009               	tblrd		*+
 24100   0029AC  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24101   0029B2  D802               	call	u16838
 24102   0029B4  EFE5  F014         	goto	u16839
 24103   0029B8                     u16838:
 24104   0029B8  0005               	push	
 24105   0029BA  6EFA               	movwf	pclath,c
 24106   0029BC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24107   0029BE  6EFD               	movwf	tosl,c
 24108   0029C0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24109   0029C2  6EFE               	movwf	tosh,c
 24110   0029C4  6AFF               	clrf	tosu,c
 24111   0029C6  50FA               	movf	pclath,w,c
 24112   0029C8  0012               	return		;indir
 24113   0029CA                     u16839:
 24114   0029CA                     
 24115                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 24116   0029CA  5042               	movf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 24117   0029CC  1043               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 24118   0029CE  A4D8               	btfss	status,2,c
 24119   0029D0  EFEC  F014         	goto	u16841
 24120   0029D4  EFEE  F014         	goto	u16840
 24121   0029D8                     u16841:
 24122   0029D8  EF51  F014         	goto	l14556
 24123   0029DC                     u16840:
 24124   0029DC                     
 24125                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 24126   0029DC  0E02               	movlw	2
 24127   0029DE  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 24128   0029E0  0E00               	movlw	0
 24129   0029E2  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 24130   0029E4                     
 24131                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 24132   0029E4  0E97               	movlw	low (_spiMaster+4)
 24133   0029E6  6EF6               	movwf	tblptrl,c
 24134   0029E8  0EFF               	movlw	high (_spiMaster+4)
 24135   0029EA  6EF7               	movwf	tblptrh,c
 24136   0029EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24137   0029EC  6AF8               	clrf	tblptru,c
 24138   0029EE                     	endif
 24139   0029EE                     	if	0	;tblptru may be non-zero
 24140   0029EE                     	endif
 24141   0029EE  0009               	tblrd		*+
 24142   0029F0  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24143   0029F6  0009               	tblrd		*+
 24144   0029F8  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24145   0029FE  D802               	call	u16858
 24146   002A00  EF0D  F015         	goto	u16859
 24147   002A04                     u16858:
 24148   002A04  0005               	push	
 24149   002A06  6EFA               	movwf	pclath,c
 24150   002A08  0100               	movlb	0	; () banked
 24151   002A0A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24152   002A0C  6EFD               	movwf	tosl,c
 24153   002A0E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24154   002A10  6EFE               	movwf	tosh,c
 24155   002A12  6AFF               	clrf	tosu,c
 24156   002A14  50FA               	movf	pclath,w,c
 24157   002A16  0EFF               	movlw	255
 24158   002A18  0012               	return		;indir
 24159   002A1A                     u16859:
 24160   002A1A                     
 24161                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 24162   002A1A  0E97               	movlw	low (_spiMaster+4)
 24163   002A1C  6EF6               	movwf	tblptrl,c
 24164   002A1E  0EFF               	movlw	high (_spiMaster+4)
 24165   002A20  6EF7               	movwf	tblptrh,c
 24166   002A22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24167   002A22  6AF8               	clrf	tblptru,c
 24168   002A24                     	endif
 24169   002A24                     	if	0	;tblptru may be non-zero
 24170   002A24                     	endif
 24171   002A24  0009               	tblrd		*+
 24172   002A26  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24173   002A2C  0009               	tblrd		*+
 24174   002A2E  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24175   002A34  D802               	call	u16868
 24176   002A36  EF28  F015         	goto	u16869
 24177   002A3A                     u16868:
 24178   002A3A  0005               	push	
 24179   002A3C  6EFA               	movwf	pclath,c
 24180   002A3E  0100               	movlb	0	; () banked
 24181   002A40  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24182   002A42  6EFD               	movwf	tosl,c
 24183   002A44  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24184   002A46  6EFE               	movwf	tosh,c
 24185   002A48  6AFF               	clrf	tosu,c
 24186   002A4A  50FA               	movf	pclath,w,c
 24187   002A4C  0EFF               	movlw	255
 24188   002A4E  0012               	return		;indir
 24189   002A50                     u16869:
 24190   002A50                     
 24191                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 24192   002A50  0E97               	movlw	low (_spiMaster+4)
 24193   002A52  6EF6               	movwf	tblptrl,c
 24194   002A54  0EFF               	movlw	high (_spiMaster+4)
 24195   002A56  6EF7               	movwf	tblptrh,c
 24196   002A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24197   002A58  6AF8               	clrf	tblptru,c
 24198   002A5A                     	endif
 24199   002A5A                     	if	0	;tblptru may be non-zero
 24200   002A5A                     	endif
 24201   002A5A  0009               	tblrd		*+
 24202   002A5C  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24203   002A62  0009               	tblrd		*+
 24204   002A64  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24205   002A6A  D802               	call	u16878
 24206   002A6C  EF43  F015         	goto	u16879
 24207   002A70                     u16878:
 24208   002A70  0005               	push	
 24209   002A72  6EFA               	movwf	pclath,c
 24210   002A74  0100               	movlb	0	; () banked
 24211   002A76  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24212   002A78  6EFD               	movwf	tosl,c
 24213   002A7A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24214   002A7C  6EFE               	movwf	tosh,c
 24215   002A7E  6AFF               	clrf	tosu,c
 24216   002A80  50FA               	movf	pclath,w,c
 24217   002A82  0EFF               	movlw	255
 24218   002A84  0012               	return		;indir
 24219   002A86                     u16879:
 24220   002A86  0B1F               	andlw	31
 24221   002A88  0A05               	xorlw	5
 24222   002A8A  B4D8               	btfsc	status,2,c
 24223   002A8C  EF4A  F015         	goto	u16881
 24224   002A90  EF4C  F015         	goto	u16880
 24225   002A94                     u16881:
 24226   002A94  EF57  F015         	goto	l14594
 24227   002A98                     u16880:
 24228   002A98                     
 24229                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 24230   002A98  0100               	movlb	0	; () banked
 24231   002A9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24232   002A9C  6ED9               	movwf	fsr2l,c
 24233   002A9E  6ADA               	clrf	fsr2h,c
 24234   002AA0  0E0C               	movlw	12
 24235   002AA2  26D9               	addwf	fsr2l,f,c
 24236   002AA4  0EFE               	movlw	254
 24237   002AA6  6EDF               	movwf	indf2,c
 24238   002AA8                     l14590:
 24239                           
 24240                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 24241   002AA8  0E03               	movlw	3
 24242   002AAA  EFF9  F016         	goto	l1717
 24243   002AAE                     l14594:
 24244                           
 24245                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 24246   002AAE  0100               	movlb	0	; () banked
 24247   002AB0  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24248   002AB2  6ED9               	movwf	fsr2l,c
 24249   002AB4  6ADA               	clrf	fsr2h,c
 24250   002AB6  0E0C               	movlw	12
 24251   002AB8  26D9               	addwf	fsr2l,f,c
 24252   002ABA  0E03               	movlw	3
 24253   002ABC  6EDF               	movwf	indf2,c
 24254   002ABE                     
 24255                           ; BSR set to: 0
 24256                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 24257   002ABE  0E00               	movlw	0
 24258   002AC0  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 24259   002AC2  0E00               	movlw	0
 24260   002AC4  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 24261   002AC6  0E0A               	movlw	10
 24262   002AC8  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 24263   002ACA  0E00               	movlw	0
 24264   002ACC  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 24265   002ACE  EF54  F015         	goto	l14590
 24266   002AD2                     l14606:
 24267                           
 24268                           ; BSR set to: 0
 24269                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 24270   002AD2  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 24271   002AD4  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 24272   002AD6  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 24273   002AD8  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 24274   002ADA  B4D8               	btfsc	status,2,c
 24275   002ADC  EF72  F015         	goto	u16891
 24276   002AE0  EF74  F015         	goto	u16890
 24277   002AE4                     u16891:
 24278   002AE4  EF44  F016         	goto	l14654
 24279   002AE8                     u16890:
 24280   002AE8                     
 24281                           ; BSR set to: 0
 24282                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 24283   002AE8  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 24284   002AEA  0E00               	movlw	0
 24285   002AEC  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 24286   002AEE  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 24287   002AF0  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 24288   002AF2                     
 24289                           ; BSR set to: 0
 24290                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 24291   002AF2  0E97               	movlw	low (_spiMaster+4)
 24292   002AF4  6EF6               	movwf	tblptrl,c
 24293   002AF6  0EFF               	movlw	high (_spiMaster+4)
 24294   002AF8  6EF7               	movwf	tblptrh,c
 24295   002AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24296   002AFA  6AF8               	clrf	tblptru,c
 24297   002AFC                     	endif
 24298   002AFC                     	if	0	;tblptru may be non-zero
 24299   002AFC                     	endif
 24300   002AFC  0009               	tblrd		*+
 24301   002AFE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24302   002B04  0009               	tblrd		*+
 24303   002B06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24304   002B0C  D802               	call	u16908
 24305   002B0E  EF93  F015         	goto	u16909
 24306   002B12                     u16908:
 24307   002B12  0005               	push	
 24308   002B14  6EFA               	movwf	pclath,c
 24309   002B16  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24310   002B18  6EFD               	movwf	tosl,c
 24311   002B1A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24312   002B1C  6EFE               	movwf	tosh,c
 24313   002B1E  6AFF               	clrf	tosu,c
 24314   002B20  50FA               	movf	pclath,w,c
 24315   002B22  0EFF               	movlw	255
 24316   002B24  0012               	return		;indir
 24317   002B26                     u16909:
 24318   002B26                     
 24319                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 24320   002B26  0E97               	movlw	low (_spiMaster+4)
 24321   002B28  6EF6               	movwf	tblptrl,c
 24322   002B2A  0EFF               	movlw	high (_spiMaster+4)
 24323   002B2C  6EF7               	movwf	tblptrh,c
 24324   002B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24325   002B2E  6AF8               	clrf	tblptru,c
 24326   002B30                     	endif
 24327   002B30                     	if	0	;tblptru may be non-zero
 24328   002B30                     	endif
 24329   002B30  0009               	tblrd		*+
 24330   002B32  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24331   002B38  0009               	tblrd		*+
 24332   002B3A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24333   002B40  D802               	call	u16918
 24334   002B42  EFAE  F015         	goto	u16919
 24335   002B46                     u16918:
 24336   002B46  0005               	push	
 24337   002B48  6EFA               	movwf	pclath,c
 24338   002B4A  0100               	movlb	0	; () banked
 24339   002B4C  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24340   002B4E  6EFD               	movwf	tosl,c
 24341   002B50  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24342   002B52  6EFE               	movwf	tosh,c
 24343   002B54  6AFF               	clrf	tosu,c
 24344   002B56  50FA               	movf	pclath,w,c
 24345   002B58  0EFF               	movlw	255
 24346   002B5A  0012               	return		;indir
 24347   002B5C                     u16919:
 24348   002B5C  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 24349   002B5E                     
 24350                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 24351   002B5E  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 24352   002B60  B4D8               	btfsc	status,2,c
 24353   002B62  EFB5  F015         	goto	u16921
 24354   002B66  EFB7  F015         	goto	u16920
 24355   002B6A                     u16921:
 24356   002B6A  EF54  F015         	goto	l14590
 24357   002B6E                     u16920:
 24358   002B6E                     
 24359                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 24360   002B6E  502F               	movf	(_ioInfo+2)^0,w,c
 24361   002B70  1030               	iorwf	(_ioInfo+3)^0,w,c
 24362   002B72  1031               	iorwf	(_ioInfo+4)^0,w,c
 24363   002B74  1032               	iorwf	(_ioInfo+5)^0,w,c
 24364   002B76  A4D8               	btfss	status,2,c
 24365   002B78  EFC0  F015         	goto	u16931
 24366   002B7C  EFC2  F015         	goto	u16930
 24367   002B80                     u16931:
 24368   002B80  EF3A  F016         	goto	l14642
 24369   002B84                     u16930:
 24370   002B84                     
 24371                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 24372   002B84  0E00               	movlw	0
 24373   002B86  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 24374   002B88  0E00               	movlw	0
 24375   002B8A  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 24376   002B8C  0E0A               	movlw	10
 24377   002B8E  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 24378   002B90  0E00               	movlw	0
 24379   002B92  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 24380   002B94                     
 24381                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 24382   002B94  0E0B               	movlw	11
 24383   002B96  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 24384   002B98  A4D8               	btfss	status,2,c
 24385   002B9A  EFD1  F015         	goto	u16941
 24386   002B9E  EFD3  F015         	goto	u16940
 24387   002BA2                     u16941:
 24388   002BA2  EF13  F016         	goto	l1738
 24389   002BA6                     u16940:
 24390   002BA6                     
 24391                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 24392   002BA6  0E97               	movlw	low (_spiMaster+4)
 24393   002BA8  6EF6               	movwf	tblptrl,c
 24394   002BAA  0EFF               	movlw	high (_spiMaster+4)
 24395   002BAC  6EF7               	movwf	tblptrh,c
 24396   002BAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24397   002BAE  6AF8               	clrf	tblptru,c
 24398   002BB0                     	endif
 24399   002BB0                     	if	0	;tblptru may be non-zero
 24400   002BB0                     	endif
 24401   002BB0  0009               	tblrd		*+
 24402   002BB2  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24403   002BB8  0009               	tblrd		*+
 24404   002BBA  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24405   002BC0  D802               	call	u16958
 24406   002BC2  EFEE  F015         	goto	u16959
 24407   002BC6                     u16958:
 24408   002BC6  0005               	push	
 24409   002BC8  6EFA               	movwf	pclath,c
 24410   002BCA  0100               	movlb	0	; () banked
 24411   002BCC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24412   002BCE  6EFD               	movwf	tosl,c
 24413   002BD0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24414   002BD2  6EFE               	movwf	tosh,c
 24415   002BD4  6AFF               	clrf	tosu,c
 24416   002BD6  50FA               	movf	pclath,w,c
 24417   002BD8  0EFD               	movlw	253
 24418   002BDA  0012               	return		;indir
 24419   002BDC                     u16959:
 24420                           
 24421                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 24422   002BDC  0E97               	movlw	low (_spiMaster+4)
 24423   002BDE  6EF6               	movwf	tblptrl,c
 24424   002BE0  0EFF               	movlw	high (_spiMaster+4)
 24425   002BE2  6EF7               	movwf	tblptrh,c
 24426   002BE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24427   002BE4  6AF8               	clrf	tblptru,c
 24428   002BE6                     	endif
 24429   002BE6                     	if	0	;tblptru may be non-zero
 24430   002BE6                     	endif
 24431   002BE6  0009               	tblrd		*+
 24432   002BE8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24433   002BEE  0009               	tblrd		*+
 24434   002BF0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24435   002BF6  D802               	call	u16968
 24436   002BF8  EF09  F016         	goto	u16969
 24437   002BFC                     u16968:
 24438   002BFC  0005               	push	
 24439   002BFE  6EFA               	movwf	pclath,c
 24440   002C00  0100               	movlb	0	; () banked
 24441   002C02  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24442   002C04  6EFD               	movwf	tosl,c
 24443   002C06  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24444   002C08  6EFE               	movwf	tosh,c
 24445   002C0A  6AFF               	clrf	tosu,c
 24446   002C0C  50FA               	movf	pclath,w,c
 24447   002C0E  0EFF               	movlw	255
 24448   002C10  0012               	return		;indir
 24449   002C12                     u16969:
 24450   002C12                     
 24451                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 24452   002C12  0100               	movlb	0	; () banked
 24453   002C14  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24454   002C16  6ED9               	movwf	fsr2l,c
 24455   002C18  6ADA               	clrf	fsr2h,c
 24456   002C1A  0E0C               	movlw	12
 24457   002C1C  26D9               	addwf	fsr2l,f,c
 24458   002C1E  0E04               	movlw	4
 24459   002C20  6EDF               	movwf	indf2,c
 24460   002C22  EF54  F015         	goto	l14590
 24461   002C26                     l1738:
 24462   002C26  8ABA               	bsf	186,5,c	;volatile
 24463   002C28                     
 24464                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 24465   002C28  0E97               	movlw	low (_spiMaster+4)
 24466   002C2A  6EF6               	movwf	tblptrl,c
 24467   002C2C  0EFF               	movlw	high (_spiMaster+4)
 24468   002C2E  6EF7               	movwf	tblptrh,c
 24469   002C30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24470   002C30  6AF8               	clrf	tblptru,c
 24471   002C32                     	endif
 24472   002C32                     	if	0	;tblptru may be non-zero
 24473   002C32                     	endif
 24474   002C32  0009               	tblrd		*+
 24475   002C34  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24476   002C3A  0009               	tblrd		*+
 24477   002C3C  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24478   002C42  D802               	call	u16978
 24479   002C44  EF2F  F016         	goto	u16979
 24480   002C48                     u16978:
 24481   002C48  0005               	push	
 24482   002C4A  6EFA               	movwf	pclath,c
 24483   002C4C  0100               	movlb	0	; () banked
 24484   002C4E  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24485   002C50  6EFD               	movwf	tosl,c
 24486   002C52  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24487   002C54  6EFE               	movwf	tosh,c
 24488   002C56  6AFF               	clrf	tosu,c
 24489   002C58  50FA               	movf	pclath,w,c
 24490   002C5A  0EFF               	movlw	255
 24491   002C5C  0012               	return		;indir
 24492   002C5E                     u16979:
 24493   002C5E                     
 24494                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 24495   002C5E  0100               	movlb	0	; () banked
 24496   002C60  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24497   002C62  6ED9               	movwf	fsr2l,c
 24498   002C64  6ADA               	clrf	fsr2h,c
 24499   002C66  0E0C               	movlw	12
 24500   002C68  26D9               	addwf	fsr2l,f,c
 24501   002C6A  6ADF               	clrf	indf2,c
 24502   002C6C                     l14636:
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 24506   002C6C  0E01               	movlw	1
 24507   002C6E  6E53               	movwf	(_mediaInformation+3)^0,c
 24508   002C70  EF99  F013         	goto	l14512
 24509   002C74                     l14642:
 24510                           
 24511                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 24512   002C74  0100               	movlb	0	; () banked
 24513   002C76  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24514   002C78  6ED9               	movwf	fsr2l,c
 24515   002C7A  6ADA               	clrf	fsr2h,c
 24516   002C7C  0E0C               	movlw	12
 24517   002C7E  26D9               	addwf	fsr2l,f,c
 24518   002C80  0E02               	movlw	2
 24519   002C82  6EDF               	movwf	indf2,c
 24520   002C84  EF51  F014         	goto	l14556
 24521   002C88                     l14654:
 24522                           
 24523                           ; BSR set to: 0
 24524                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 24525   002C88  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24526   002C8A  6ED9               	movwf	fsr2l,c
 24527   002C8C  6ADA               	clrf	fsr2h,c
 24528   002C8E  0E0C               	movlw	12
 24529   002C90  26D9               	addwf	fsr2l,f,c
 24530   002C92  0EFE               	movlw	254
 24531   002C94  6EDF               	movwf	indf2,c
 24532   002C96  EF54  F015         	goto	l14590
 24533   002C9A                     l14660:
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 24537   002C9A  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 24538   002C9C  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 24539   002C9E  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 24540   002CA0  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 24541   002CA2  B4D8               	btfsc	status,2,c
 24542   002CA4  EF56  F016         	goto	u16981
 24543   002CA8  EF58  F016         	goto	u16980
 24544   002CAC                     u16981:
 24545   002CAC  EFA5  F016         	goto	l14682
 24546   002CB0                     u16980:
 24547   002CB0                     
 24548                           ; BSR set to: 0
 24549                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 24550   002CB0  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 24551   002CB2  0E00               	movlw	0
 24552   002CB4  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 24553   002CB6  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 24554   002CB8  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 24555   002CBA                     
 24556                           ; BSR set to: 0
 24557                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 24558   002CBA  0E97               	movlw	low (_spiMaster+4)
 24559   002CBC  6EF6               	movwf	tblptrl,c
 24560   002CBE  0EFF               	movlw	high (_spiMaster+4)
 24561   002CC0  6EF7               	movwf	tblptrh,c
 24562   002CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24563   002CC2  6AF8               	clrf	tblptru,c
 24564   002CC4                     	endif
 24565   002CC4                     	if	0	;tblptru may be non-zero
 24566   002CC4                     	endif
 24567   002CC4  0009               	tblrd		*+
 24568   002CC6  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24569   002CCC  0009               	tblrd		*+
 24570   002CCE  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24571   002CD4  D802               	call	u16998
 24572   002CD6  EF77  F016         	goto	u16999
 24573   002CDA                     u16998:
 24574   002CDA  0005               	push	
 24575   002CDC  6EFA               	movwf	pclath,c
 24576   002CDE  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24577   002CE0  6EFD               	movwf	tosl,c
 24578   002CE2  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24579   002CE4  6EFE               	movwf	tosh,c
 24580   002CE6  6AFF               	clrf	tosu,c
 24581   002CE8  50FA               	movf	pclath,w,c
 24582   002CEA  0EFF               	movlw	255
 24583   002CEC  0012               	return		;indir
 24584   002CEE                     u16999:
 24585   002CEE  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 24586   002CF0                     
 24587                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 24588   002CF0  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 24589   002CF2  B4D8               	btfsc	status,2,c
 24590   002CF4  EF7E  F016         	goto	u17001
 24591   002CF8  EF80  F016         	goto	u17000
 24592   002CFC                     u17001:
 24593   002CFC  EF54  F015         	goto	l14590
 24594   002D00                     u17000:
 24595   002D00  8ABA               	bsf	186,5,c	;volatile
 24596   002D02                     
 24597                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 24598   002D02  0E97               	movlw	low (_spiMaster+4)
 24599   002D04  6EF6               	movwf	tblptrl,c
 24600   002D06  0EFF               	movlw	high (_spiMaster+4)
 24601   002D08  6EF7               	movwf	tblptrh,c
 24602   002D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24603   002D0A  6AF8               	clrf	tblptru,c
 24604   002D0C                     	endif
 24605   002D0C                     	if	0	;tblptru may be non-zero
 24606   002D0C                     	endif
 24607   002D0C  0009               	tblrd		*+
 24608   002D0E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24609   002D14  0009               	tblrd		*+
 24610   002D16  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24611   002D1C  D802               	call	u17018
 24612   002D1E  EF9C  F016         	goto	u17019
 24613   002D22                     u17018:
 24614   002D22  0005               	push	
 24615   002D24  6EFA               	movwf	pclath,c
 24616   002D26  0100               	movlb	0	; () banked
 24617   002D28  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24618   002D2A  6EFD               	movwf	tosl,c
 24619   002D2C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24620   002D2E  6EFE               	movwf	tosh,c
 24621   002D30  6AFF               	clrf	tosu,c
 24622   002D32  50FA               	movf	pclath,w,c
 24623   002D34  0EFF               	movlw	255
 24624   002D36  0012               	return		;indir
 24625   002D38                     u17019:
 24626   002D38                     
 24627                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 24628   002D38  0100               	movlb	0	; () banked
 24629   002D3A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24630   002D3C  6ED9               	movwf	fsr2l,c
 24631   002D3E  6ADA               	clrf	fsr2h,c
 24632   002D40  0E0C               	movlw	12
 24633   002D42  26D9               	addwf	fsr2l,f,c
 24634   002D44  6ADF               	clrf	indf2,c
 24635   002D46  EF36  F016         	goto	l14636
 24636   002D4A                     l14682:
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 24640   002D4A  0E00               	movlw	0
 24641   002D4C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 24642   002D4E  0E00               	movlw	0
 24643   002D50  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 24644   002D52  0E00               	movlw	0
 24645   002D54  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 24646   002D56  0E00               	movlw	0
 24647   002D58  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 24648   002D5A  0E05               	movlw	5
 24649   002D5C  EC82  F01C         	call	_SD_SendCmd
 24650   002D60  8ABA               	bsf	186,5,c	;volatile
 24651   002D62                     
 24652                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 24653   002D62  0E97               	movlw	low (_spiMaster+4)
 24654   002D64  6EF6               	movwf	tblptrl,c
 24655   002D66  0EFF               	movlw	high (_spiMaster+4)
 24656   002D68  6EF7               	movwf	tblptrh,c
 24657   002D6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24658   002D6A  6AF8               	clrf	tblptru,c
 24659   002D6C                     	endif
 24660   002D6C                     	if	0	;tblptru may be non-zero
 24661   002D6C                     	endif
 24662   002D6C  0009               	tblrd		*+
 24663   002D6E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24664   002D74  0009               	tblrd		*+
 24665   002D76  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24666   002D7C  D802               	call	u17028
 24667   002D7E  EFCC  F016         	goto	u17029
 24668   002D82                     u17028:
 24669   002D82  0005               	push	
 24670   002D84  6EFA               	movwf	pclath,c
 24671   002D86  0100               	movlb	0	; () banked
 24672   002D88  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24673   002D8A  6EFD               	movwf	tosl,c
 24674   002D8C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24675   002D8E  6EFE               	movwf	tosh,c
 24676   002D90  6AFF               	clrf	tosu,c
 24677   002D92  50FA               	movf	pclath,w,c
 24678   002D94  0EFF               	movlw	255
 24679   002D96  0012               	return		;indir
 24680   002D98                     u17029:
 24681   002D98                     
 24682                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 24683   002D98  0100               	movlb	0	; () banked
 24684   002D9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24685   002D9C  6ED9               	movwf	fsr2l,c
 24686   002D9E  6ADA               	clrf	fsr2h,c
 24687   002DA0  0E0C               	movlw	12
 24688   002DA2  26D9               	addwf	fsr2l,f,c
 24689   002DA4  0EFF               	movlw	255
 24690   002DA6  6EDF               	movwf	indf2,c
 24691   002DA8                     l14690:
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 24695   002DA8  0E01               	movlw	1
 24696   002DAA  6E53               	movwf	(_mediaInformation+3)^0,c
 24697   002DAC  EF47  F014         	goto	l14548
 24698   002DB0                     l14698:
 24699   002DB0  0100               	movlb	0	; () banked
 24700   002DB2  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24701   002DB4  6ED9               	movwf	fsr2l,c
 24702   002DB6  6ADA               	clrf	fsr2h,c
 24703   002DB8  0E0C               	movlw	12
 24704   002DBA  26D9               	addwf	fsr2l,f,c
 24705   002DBC  50DF               	movf	indf2,w,c
 24706                           
 24707                           ; Switch size 1, requested type "simple"
 24708                           ; Number of cases is 6, Range of values is 0 to 254
 24709                           ; switch strategies available:
 24710                           ; Name         Instructions Cycles
 24711                           ; simple_byte           19    10 (average)
 24712                           ;	Chosen strategy is simple_byte
 24713   002DBE  0A00               	xorlw	0	; case 0
 24714   002DC0  B4D8               	btfsc	status,2,c
 24715   002DC2  EF99  F013         	goto	l14512
 24716   002DC6  0A01               	xorlw	1	; case 1
 24717   002DC8  B4D8               	btfsc	status,2,c
 24718   002DCA  EF9C  F013         	goto	l14516
 24719   002DCE  0A03               	xorlw	3	; case 2
 24720   002DD0  B4D8               	btfsc	status,2,c
 24721   002DD2  EF54  F014         	goto	l14560
 24722   002DD6  0A01               	xorlw	1	; case 3
 24723   002DD8  B4D8               	btfsc	status,2,c
 24724   002DDA  EF69  F015         	goto	l14606
 24725   002DDE  0A07               	xorlw	7	; case 4
 24726   002DE0  B4D8               	btfsc	status,2,c
 24727   002DE2  EF4D  F016         	goto	l14660
 24728   002DE6  0AFA               	xorlw	250	; case 254
 24729   002DE8  B4D8               	btfsc	status,2,c
 24730   002DEA  EFA5  F016         	goto	l14682
 24731   002DEE  EFD4  F016         	goto	l14690
 24732   002DF2                     l1717:
 24733   002DF2  0012               	return		;funcret
 24734   002DF4                     __end_of_SD_SPI_AsyncWriteTasks:
 24735                           	callstack 0
 24736                           
 24737 ;; *************** function _disk_read *****************
 24738 ;; Defined at:
 24739 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 24740 ;; Parameters:    Size  Location     Type
 24741 ;;  pdrv            1    wreg     unsigned char 
 24742 ;;  buff            2   72[BANK0 ] PTR unsigned char 
 24743 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 24744 ;;		 -> NULL(0), 
 24745 ;;  sector          4   74[BANK0 ] unsigned long 
 24746 ;;  count           2   78[BANK0 ] unsigned int 
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;  pdrv            1   80[BANK0 ] unsigned char 
 24749 ;;  res             1   81[BANK0 ] enum E12
 24750 ;; Return value:  Size  Location     Type
 24751 ;;                  1    wreg      enum E12
 24752 ;; Registers used:
 24753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24754 ;; Tracked objects:
 24755 ;;		On entry : 0/0
 24756 ;;		On exit  : 0/0
 24757 ;;		Unchanged: 0/0
 24758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24762 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24763 ;;Total ram usage:       10 bytes
 24764 ;; Hardware stack levels used: 1
 24765 ;; Hardware stack levels required when called: 9
 24766 ;; This function calls:
 24767 ;;		_SD_SPI_SectorRead
 24768 ;; This function is called by:
 24769 ;;		_move_window
 24770 ;;		_f_open
 24771 ;;		_f_write
 24772 ;;		_f_read
 24773 ;; This function uses a non-reentrant model
 24774 ;;
 24775                           
 24776                           	psect	text88
 24777   009A4C                     __ptext88:
 24778                           	callstack 0
 24779   009A4C                     _disk_read:
 24780                           	callstack 19
 24781                           
 24782                           ;incstack = 0
 24783                           ;disk_read@pdrv stored from wreg
 24784   009A4C  0100               	movlb	0	; () banked
 24785   009A4E  6FB0               	movwf	disk_read@pdrv& (0+255),b
 24786   009A50                     
 24787                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 24788   009A50  0E04               	movlw	4
 24789   009A52  0100               	movlb	0	; () banked
 24790   009A54  6FB1               	movwf	disk_read@res& (0+255),b
 24791                           
 24792                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 24793   009A56  EF51  F04D         	goto	l14948
 24794   009A5A                     l14940:
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 24798   009A5A  C0AA  F08D         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 24799   009A5E  C0AB  F08E         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 24800   009A62  C0AC  F08F         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 24801   009A66  C0AD  F090         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 24802   009A6A  C0A8  F091         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 24803   009A6E  C0A9  F092         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 24804   009A72  C0AE  F093         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 24805   009A76  C0AF  F094         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 24806   009A7A  ECAE  F03F         	call	_SD_SPI_SectorRead
 24807   009A7E  06E8               	decf	wreg,f,c
 24808   009A80  A4D8               	btfss	status,2,c
 24809   009A82  EF45  F04D         	goto	u17401
 24810   009A86  EF47  F04D         	goto	u17400
 24811   009A8A                     u17401:
 24812   009A8A  EF4C  F04D         	goto	l14944
 24813   009A8E                     u17400:
 24814   009A8E                     
 24815                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 24816   009A8E  0E00               	movlw	0
 24817   009A90  0100               	movlb	0	; () banked
 24818   009A92  6FB1               	movwf	disk_read@res& (0+255),b
 24819                           
 24820                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 24821   009A94  EF58  F04D         	goto	l14950
 24822   009A98                     l14944:
 24823                           
 24824                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 24825   009A98  0E01               	movlw	1
 24826   009A9A  0100               	movlb	0	; () banked
 24827   009A9C  6FB1               	movwf	disk_read@res& (0+255),b
 24828   009A9E  EF58  F04D         	goto	l14950
 24829   009AA2                     l14948:
 24830                           
 24831                           ; BSR set to: 0
 24832   009AA2  51B0               	movf	disk_read@pdrv& (0+255),w,b
 24833                           
 24834                           ; Switch size 1, requested type "simple"
 24835                           ; Number of cases is 1, Range of values is 0 to 0
 24836                           ; switch strategies available:
 24837                           ; Name         Instructions Cycles
 24838                           ; simple_byte            4     3 (average)
 24839                           ;	Chosen strategy is simple_byte
 24840   009AA4  0A00               	xorlw	0	; case 0
 24841   009AA6  B4D8               	btfsc	status,2,c
 24842   009AA8  EF2D  F04D         	goto	l14940
 24843   009AAC  EF58  F04D         	goto	l14950
 24844   009AB0                     l14950:
 24845                           
 24846                           ; BSR set to: 0
 24847                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 24848   009AB0  51B1               	movf	disk_read@res& (0+255),w,b
 24849   009AB2                     
 24850                           ; BSR set to: 0
 24851   009AB2  0012               	return		;funcret
 24852   009AB4                     __end_of_disk_read:
 24853                           	callstack 0
 24854                           
 24855 ;; *************** function _SD_SPI_SectorRead *****************
 24856 ;; Defined at:
 24857 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 24858 ;; Parameters:    Size  Location     Type
 24859 ;;  sector_addre    4   45[BANK0 ] unsigned long 
 24860 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 24861 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 24862 ;;		 -> NULL(0), 
 24863 ;;  sector_count    2   51[BANK0 ] unsigned short 
 24864 ;; Auto vars:     Size  Location     Type
 24865 ;;  info           13   59[BANK0 ] struct SD_ASYNC_IO
 24866 ;;  i               2   57[BANK0 ] unsigned short 
 24867 ;;  status          1   56[BANK0 ] unsigned char 
 24868 ;;  result          1   55[BANK0 ] _Bool 
 24869 ;; Return value:  Size  Location     Type
 24870 ;;                  1    wreg      _Bool 
 24871 ;; Registers used:
 24872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24873 ;; Tracked objects:
 24874 ;;		On entry : 0/0
 24875 ;;		On exit  : 0/0
 24876 ;;		Unchanged: 0/0
 24877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24878 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24879 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24881 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24882 ;;Total ram usage:       27 bytes
 24883 ;; Hardware stack levels used: 1
 24884 ;; Hardware stack levels required when called: 8
 24885 ;; This function calls:
 24886 ;;		_SDFAST_open
 24887 ;;		_SDSLOW_open
 24888 ;;		_SD_SPI_AsyncReadTasks
 24889 ;;		_SPI1_Close
 24890 ;; This function is called by:
 24891 ;;		_disk_read
 24892 ;; This function uses a non-reentrant model
 24893 ;;
 24894                           
 24895                           	psect	text89
 24896   007F5C                     __ptext89:
 24897                           	callstack 0
 24898   007F5C                     _SD_SPI_SectorRead:
 24899                           	callstack 19
 24900   007F5C                     
 24901                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 24902   007F5C  0E00               	movlw	0
 24903   007F5E  0100               	movlb	0	; () banked
 24904   007F60  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 24905                           
 24906                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 24907   007F62  0E00               	movlw	0
 24908   007F64  6F9A               	movwf	(SD_SPI_SectorRead@i+1)& (0+255),b
 24909   007F66  0E00               	movlw	0
 24910   007F68  6F99               	movwf	SD_SPI_SectorRead@i& (0+255),b
 24911   007F6A  EF42  F040         	goto	l14916
 24912   007F6E                     l14888:
 24913                           
 24914                           ; BSR set to: 0
 24915                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 24916   007F6E  0E02               	movlw	2
 24917   007F70  6F9C               	movwf	(SD_SPI_SectorRead@info+1)& (0+255),b
 24918   007F72  0E00               	movlw	0
 24919   007F74  6F9B               	movwf	SD_SPI_SectorRead@info& (0+255),b
 24920                           
 24921                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 24922   007F76  0E00               	movlw	0
 24923   007F78  6F9D               	movwf	(SD_SPI_SectorRead@info+2)& (0+255),b
 24924   007F7A  0E02               	movlw	2
 24925   007F7C  6F9E               	movwf	(SD_SPI_SectorRead@info+3)& (0+255),b
 24926   007F7E  0E00               	movlw	0
 24927   007F80  6F9F               	movwf	(SD_SPI_SectorRead@info+4)& (0+255),b
 24928   007F82  0E00               	movlw	0
 24929   007F84  6FA0               	movwf	(SD_SPI_SectorRead@info+5)& (0+255),b
 24930   007F86                     
 24931                           ; BSR set to: 0
 24932                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 24933   007F86  C099  F095         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 24934   007F8A  C09A  F096         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 24935   007F8E  0E09               	movlw	9
 24936   007F90                     u17325:
 24937   007F90  90D8               	bcf	status,0,c
 24938   007F92  3795               	rlcf	??_SD_SPI_SectorRead& (0+255),f,b
 24939   007F94  3796               	rlcf	(??_SD_SPI_SectorRead+1)& (0+255),f,b
 24940   007F96  2EE8               	decfsz	wreg,f,c
 24941   007F98  EFC8  F03F         	goto	u17325
 24942   007F9C  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 24943   007F9E  2591               	addwf	SD_SPI_SectorRead@buffer& (0+255),w,b
 24944   007FA0  6FA1               	movwf	(SD_SPI_SectorRead@info+6)& (0+255),b
 24945   007FA2  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 24946   007FA4  2192               	addwfc	(SD_SPI_SectorRead@buffer+1)& (0+255),w,b
 24947   007FA6  6FA2               	movwf	(SD_SPI_SectorRead@info+7)& (0+255),b
 24948   007FA8                     
 24949                           ; BSR set to: 0
 24950                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 24951   007FA8  5199               	movf	SD_SPI_SectorRead@i& (0+255),w,b
 24952   007FAA  258D               	addwf	SD_SPI_SectorRead@sector_address& (0+255),w,b
 24953   007FAC  6FA3               	movwf	(SD_SPI_SectorRead@info+8)& (0+255),b
 24954   007FAE  519A               	movf	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 24955   007FB0  218E               	addwfc	(SD_SPI_SectorRead@sector_address+1)& (0+255),w,b
 24956   007FB2  6FA4               	movwf	(SD_SPI_SectorRead@info+9)& (0+255),b
 24957   007FB4  0E00               	movlw	0
 24958   007FB6  218F               	addwfc	(SD_SPI_SectorRead@sector_address+2)& (0+255),w,b
 24959   007FB8  6FA5               	movwf	(SD_SPI_SectorRead@info+10)& (0+255),b
 24960   007FBA  0E00               	movlw	0
 24961   007FBC  2190               	addwfc	(SD_SPI_SectorRead@sector_address+3)& (0+255),w,b
 24962   007FBE  6FA6               	movwf	(SD_SPI_SectorRead@info+11)& (0+255),b
 24963                           
 24964                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 24965   007FC0  0E01               	movlw	1
 24966   007FC2  6FA7               	movwf	(SD_SPI_SectorRead@info+12)& (0+255),b
 24967   007FC4                     
 24968                           ; BSR set to: 0
 24969                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 24970   007FC4  0E95               	movlw	low (_spiMaster+2)
 24971   007FC6  6EF6               	movwf	tblptrl,c
 24972   007FC8  0EFF               	movlw	high (_spiMaster+2)
 24973   007FCA  6EF7               	movwf	tblptrh,c
 24974   007FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24975   007FCC  6AF8               	clrf	tblptru,c
 24976   007FCE                     	endif
 24977   007FCE                     	if	0	;tblptru may be non-zero
 24978   007FCE                     	endif
 24979   007FCE  0009               	tblrd		*+
 24980   007FD0  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 24981   007FD6  0009               	tblrd		*+
 24982   007FD8  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 24983   007FDE  D802               	call	u17338
 24984   007FE0  EFFB  F03F         	goto	u17339
 24985   007FE4                     u17338:
 24986   007FE4  0005               	push	
 24987   007FE6  6EFA               	movwf	pclath,c
 24988   007FE8  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 24989   007FEA  6EFD               	movwf	tosl,c
 24990   007FEC  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 24991   007FEE  6EFE               	movwf	tosh,c
 24992   007FF0  6AFF               	clrf	tosu,c
 24993   007FF2  50FA               	movf	pclath,w,c
 24994   007FF4  0012               	return		;indir
 24995   007FF6                     u17339:
 24996   007FF6  0900               	iorlw	0
 24997   007FF8  A4D8               	btfss	status,2,c
 24998   007FFA  EF01  F040         	goto	u17341
 24999   007FFE  EF03  F040         	goto	u17340
 25000   008002                     u17341:
 25001   008002  EF06  F040         	goto	l1564
 25002   008006                     u17340:
 25003   008006                     
 25004                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 25005   008006  0E00               	movlw	0
 25006   008008  EF4E  F040         	goto	l1563
 25007   00800C                     l1564:
 25008   00800C  9ABA               	bcf	186,5,c	;volatile
 25009   00800E                     l14900:
 25010                           
 25011                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 25012   00800E  0E9B               	movlw	low SD_SPI_SectorRead@info
 25013   008010  0100               	movlb	0	; () banked
 25014   008012  6F82               	movwf	SD_SPI_AsyncReadTasks@info& (0+255),b
 25015   008014  EC93  F023         	call	_SD_SPI_AsyncReadTasks	;wreg free
 25016   008018  0100               	movlb	0	; () banked
 25017   00801A  6F98               	movwf	SD_SPI_SectorRead@status& (0+255),b
 25018   00801C                     
 25019                           ; BSR set to: 0
 25020                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 25021   00801C  5198               	movf	SD_SPI_SectorRead@status& (0+255),w,b
 25022   00801E  A4D8               	btfss	status,2,c
 25023   008020  EF14  F040         	goto	u17351
 25024   008024  EF16  F040         	goto	u17350
 25025   008028                     u17351:
 25026   008028  EF1A  F040         	goto	l14908
 25027   00802C                     u17350:
 25028   00802C                     
 25029                           ; BSR set to: 0
 25030                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 25031   00802C  0E01               	movlw	1
 25032   00802E  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 25033                           
 25034                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 25035   008030  EF24  F040         	goto	l1572
 25036   008034                     l14908:
 25037                           
 25038                           ; BSR set to: 0
 25039   008034  2998               	incf	SD_SPI_SectorRead@status& (0+255),w,b
 25040   008036  A4D8               	btfss	status,2,c
 25041   008038  EF20  F040         	goto	u17361
 25042   00803C  EF22  F040         	goto	u17360
 25043   008040                     u17361:
 25044   008040  EF07  F040         	goto	l14900
 25045   008044                     u17360:
 25046   008044                     
 25047                           ; BSR set to: 0
 25048                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 25049   008044  0E00               	movlw	0
 25050   008046  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 25051   008048                     l1572:
 25052                           
 25053                           ; BSR set to: 0
 25054   008048  8ABA               	bsf	186,5,c	;volatile
 25055   00804A                     
 25056                           ; BSR set to: 0
 25057                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 25058   00804A  0E93               	movlw	low _spiMaster
 25059   00804C  6EF6               	movwf	tblptrl,c
 25060   00804E                     	if	1	;There is more than 1 active tblptr byte
 25061   00804E  0EFF               	movlw	high _spiMaster
 25062   008050  6EF7               	movwf	tblptrh,c
 25063   008052                     	endif
 25064   008052                     	if	1	;There are 3 active tblptr bytes
 25065   008052  0E00               	movlw	low (_spiMaster shr (0+16))
 25066   008054  6EF8               	movwf	tblptru,c
 25067   008056                     	endif
 25068   008056  0009               	tblrd		*+
 25069   008058  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 25070   00805E  0009               	tblrd		*+
 25071   008060  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 25072   008066  D802               	call	u17378
 25073   008068  EF3F  F040         	goto	u17379
 25074   00806C                     u17378:
 25075   00806C  0005               	push	
 25076   00806E  6EFA               	movwf	pclath,c
 25077   008070  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 25078   008072  6EFD               	movwf	tosl,c
 25079   008074  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 25080   008076  6EFE               	movwf	tosh,c
 25081   008078  6AFF               	clrf	tosu,c
 25082   00807A  50FA               	movf	pclath,w,c
 25083   00807C  0012               	return		;indir
 25084   00807E                     u17379:
 25085   00807E                     
 25086                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 25087   00807E  0100               	movlb	0	; () banked
 25088   008080  4B99               	infsnz	SD_SPI_SectorRead@i& (0+255),f,b
 25089   008082  2B9A               	incf	(SD_SPI_SectorRead@i+1)& (0+255),f,b
 25090   008084                     l14916:
 25091                           
 25092                           ; BSR set to: 0
 25093   008084  5193               	movf	SD_SPI_SectorRead@sector_count& (0+255),w,b
 25094   008086  5D99               	subwf	SD_SPI_SectorRead@i& (0+255),w,b
 25095   008088  5194               	movf	(SD_SPI_SectorRead@sector_count+1)& (0+255),w,b
 25096   00808A  599A               	subwfb	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 25097   00808C  A0D8               	btfss	status,0,c
 25098   00808E  EF4B  F040         	goto	u17381
 25099   008092  EF4D  F040         	goto	u17380
 25100   008096                     u17381:
 25101   008096  EFB7  F03F         	goto	l14888
 25102   00809A                     u17380:
 25103   00809A                     
 25104                           ; BSR set to: 0
 25105                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 25106   00809A  5197               	movf	SD_SPI_SectorRead@result& (0+255),w,b
 25107   00809C                     l1563:
 25108   00809C  0012               	return		;funcret
 25109   00809E                     __end_of_SD_SPI_SectorRead:
 25110                           	callstack 0
 25111                           
 25112 ;; *************** function _SPI1_Close *****************
 25113 ;; Defined at:
 25114 ;;		line 96 in file "mcc_generated_files/spi1.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;		None
 25117 ;; Auto vars:     Size  Location     Type
 25118 ;;		None
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  1    wreg      void 
 25121 ;; Registers used:
 25122 ;;		None
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25132 ;;Total ram usage:        0 bytes
 25133 ;; Hardware stack levels used: 1
 25134 ;; Hardware stack levels required when called: 5
 25135 ;; This function calls:
 25136 ;;		Nothing
 25137 ;; This function is called by:
 25138 ;;		_SD_SPI_SectorWrite
 25139 ;;		_SD_SPI_SectorRead
 25140 ;;		_SD_SPI_MediaInitialize
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144                           	psect	text90
 25145   00A464                     __ptext90:
 25146                           	callstack 0
 25147   00A464                     _SPI1_Close:
 25148                           	callstack 21
 25149   00A464                     
 25150                           ;mcc_generated_files/spi1.c: 98:     SPI1CON0bits.EN = 0;
 25151   00A464  013D               	movlb	61	; () banked
 25152   00A466  9F14               	bcf	20,7,b	;volatile
 25153   00A468                     
 25154                           ; BSR set to: 61
 25155   00A468  0012               	return		;funcret
 25156   00A46A                     __end_of_SPI1_Close:
 25157                           	callstack 0
 25158                           
 25159 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 25160 ;; Defined at:
 25161 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 25162 ;; Parameters:    Size  Location     Type
 25163 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 25164 ;;		 -> SD_SPI_SectorRead@info(13), 
 25165 ;; Auto vars:     Size  Location     Type
 25166 ;;  response        5   39[BANK0 ] struct .
 25167 ;;  bData           1   44[BANK0 ] unsigned char 
 25168 ;; Return value:  Size  Location     Type
 25169 ;;                  1    wreg      unsigned char 
 25170 ;; Registers used:
 25171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 25172 ;; Tracked objects:
 25173 ;;		On entry : 0/0
 25174 ;;		On exit  : 0/0
 25175 ;;		Unchanged: 0/0
 25176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25177 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25178 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25179 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25180 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25181 ;;Total ram usage:       11 bytes
 25182 ;; Hardware stack levels used: 1
 25183 ;; Hardware stack levels required when called: 7
 25184 ;; This function calls:
 25185 ;;		_SD_SendCmd
 25186 ;;		_SPI1_ExchangeBlock
 25187 ;;		_SPI1_ExchangeByte
 25188 ;;		_memset
 25189 ;; This function is called by:
 25190 ;;		_SD_SPI_SectorRead
 25191 ;; This function uses a non-reentrant model
 25192 ;;
 25193                           
 25194                           	psect	text91
 25195   004726                     __ptext91:
 25196                           	callstack 0
 25197   004726                     _SD_SPI_AsyncReadTasks:
 25198                           	callstack 19
 25199   004726                     
 25200                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 25201   004726  EF9A  F025         	goto	l14884
 25202   00472A                     l14748:
 25203                           
 25204                           ; BSR set to: 0
 25205                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 25206   00472A  0E00               	movlw	0
 25207   00472C  EFBB  F025         	goto	l1678
 25208   004730                     l14752:
 25209                           
 25210                           ; BSR set to: 0
 25211                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 25212   004730  0E02               	movlw	2
 25213   004732  6E53               	movwf	(_mediaInformation+3)^0,c
 25214                           
 25215                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 25216   004734  0E02               	movlw	2
 25217   004736  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 25218   004738  0E00               	movlw	0
 25219   00473A  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 25220   00473C                     
 25221                           ; BSR set to: 0
 25222                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 25223   00473C  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25224   00473E  6ED9               	movwf	fsr2l,c
 25225   004740  6ADA               	clrf	fsr2h,c
 25226   004742  EE10  F02D         	lfsr	1,_ioInfo
 25227   004746  0E0C               	movlw	12
 25228   004748                     u17121:
 25229   004748  006F FF6F FFE3     	movff	plusw2,plusw1
 25230   00474E  06E8               	decf	wreg,f,c
 25231   004750  E2FB               	bc	u17121
 25232   004752                     
 25233                           ; BSR set to: 0
 25234                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 25235   004752  5058               	movf	(_mediaInformation+8)^0,w,c
 25236   004754  A4D8               	btfss	status,2,c
 25237   004756  EFAF  F023         	goto	u17131
 25238   00475A  EFB1  F023         	goto	u17130
 25239   00475E                     u17131:
 25240   00475E  EFBA  F023         	goto	l1680
 25241   004762                     u17130:
 25242   004762                     
 25243                           ; BSR set to: 0
 25244                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 25245   004762  0E09               	movlw	9
 25246   004764                     u17145:
 25247   004764  90D8               	bcf	status,0,c
 25248   004766  3635               	rlcf	(_ioInfo+8)^0,f,c
 25249   004768  3636               	rlcf	(_ioInfo+9)^0,f,c
 25250   00476A  3637               	rlcf	(_ioInfo+10)^0,f,c
 25251   00476C  3638               	rlcf	(_ioInfo+11)^0,f,c
 25252   00476E  2EE8               	decfsz	wreg,f,c
 25253   004770  EFB2  F023         	goto	u17145
 25254   004774                     l1680:
 25255                           
 25256                           ; BSR set to: 0
 25257                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 25258   004774  5032               	movf	(_ioInfo+5)^0,w,c
 25259   004776  1031               	iorwf	(_ioInfo+4)^0,w,c
 25260   004778  E108               	bnz	u17151
 25261   00477A  042F               	decf	(_ioInfo+2)^0,w,c
 25262   00477C  0E02               	movlw	2
 25263   00477E  5830               	subwfb	(_ioInfo+3)^0,w,c
 25264   004780  B0D8               	btfsc	status,0,c
 25265   004782  EFC5  F023         	goto	u17151
 25266   004786  EFC7  F023         	goto	u17150
 25267   00478A                     u17151:
 25268   00478A  EFDE  F023         	goto	l14764
 25269   00478E                     u17150:
 25270   00478E                     
 25271                           ; BSR set to: 0
 25272                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 25273   00478E  0E01               	movlw	1
 25274   004790  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 25275   004792                     
 25276                           ; BSR set to: 0
 25277                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 25278   004792  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 25279   004796  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 25280   00479A  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 25281   00479E  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 25282   0047A2  0E08               	movlw	8
 25283   0047A4  EC82  F01C         	call	_SD_SendCmd
 25284   0047A8  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 25285   0047AC  0E04               	movlw	4
 25286   0047AE                     u17161:
 25287   0047AE  006F FFAF FFDB     	movff	plusw0,plusw2
 25288   0047B4  06E8               	decf	wreg,f,c
 25289   0047B6  E2FB               	bc	u17161
 25290                           
 25291                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 25292   0047B8  EFF3  F023         	goto	l14768
 25293   0047BC                     l14764:
 25294                           
 25295                           ; BSR set to: 0
 25296                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 25297   0047BC  0E00               	movlw	0
 25298   0047BE  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 25299   0047C0                     
 25300                           ; BSR set to: 0
 25301                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 25302   0047C0  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 25303   0047C4  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 25304   0047C8  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 25305   0047CC  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 25306   0047D0  0E09               	movlw	9
 25307   0047D2  EC82  F01C         	call	_SD_SendCmd
 25308   0047D6  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 25309   0047DA  0E04               	movlw	4
 25310   0047DC                     u17171:
 25311   0047DC  006F FFAF FFDB     	movff	plusw0,plusw2
 25312   0047E2  06E8               	decf	wreg,f,c
 25313   0047E4  E2FB               	bc	u17171
 25314   0047E6                     l14768:
 25315                           
 25316                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 25317   0047E6  0100               	movlb	0	; () banked
 25318   0047E8  5187               	movf	SD_SPI_AsyncReadTasks@response& (0+255),w,b
 25319   0047EA  B4D8               	btfsc	status,2,c
 25320   0047EC  EFFA  F023         	goto	u17181
 25321   0047F0  EFFC  F023         	goto	u17180
 25322   0047F4                     u17181:
 25323   0047F4  EF06  F024         	goto	l14776
 25324   0047F8                     u17180:
 25325   0047F8                     
 25326                           ; BSR set to: 0
 25327                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 25328   0047F8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25329   0047FA  6ED9               	movwf	fsr2l,c
 25330   0047FC  6ADA               	clrf	fsr2h,c
 25331   0047FE  0E0C               	movlw	12
 25332   004800  26D9               	addwf	fsr2l,f,c
 25333   004802  0EFE               	movlw	254
 25334   004804  6EDF               	movwf	indf2,c
 25335   004806                     l14772:
 25336                           
 25337                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 25338   004806  0E01               	movlw	1
 25339   004808  EFBB  F025         	goto	l1678
 25340   00480C                     l14776:
 25341                           
 25342                           ; BSR set to: 0
 25343                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 25344   00480C  0E00               	movlw	0
 25345   00480E  0101               	movlb	1	; () banked
 25346   004810  6FCC               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 25347   004812  0E00               	movlw	0
 25348   004814  6FCD               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 25349   004816  0E04               	movlw	4
 25350   004818  6FCE               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 25351   00481A  0E00               	movlw	0
 25352   00481C  6FCF               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 25353   00481E                     
 25354                           ; BSR set to: 1
 25355                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 25356   00481E  0100               	movlb	0	; () banked
 25357   004820  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25358   004822  6ED9               	movwf	fsr2l,c
 25359   004824  6ADA               	clrf	fsr2h,c
 25360   004826  0E0C               	movlw	12
 25361   004828  26D9               	addwf	fsr2l,f,c
 25362   00482A  0E03               	movlw	3
 25363   00482C  6EDF               	movwf	indf2,c
 25364   00482E  EF03  F024         	goto	l14772
 25365   004832                     l14784:
 25366                           
 25367                           ; BSR set to: 0
 25368                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 25369   004832  0101               	movlb	1	; () banked
 25370   004834  51CC               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 25371   004836  11CD               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 25372   004838  11CE               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 25373   00483A  11CF               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 25374   00483C  B4D8               	btfsc	status,2,c
 25375   00483E  EF23  F024         	goto	u17191
 25376   004842  EF25  F024         	goto	u17190
 25377   004846                     u17191:
 25378   004846  EF6B  F024         	goto	l14812
 25379   00484A                     u17190:
 25380   00484A                     
 25381                           ; BSR set to: 1
 25382                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 25383   00484A  07CC               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 25384   00484C  0E00               	movlw	0
 25385   00484E  5BCD               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 25386   004850  5BCE               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 25387   004852  5BCF               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 25388   004854                     
 25389                           ; BSR set to: 1
 25390                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 25391   004854  0E97               	movlw	low (_spiMaster+4)
 25392   004856  6EF6               	movwf	tblptrl,c
 25393   004858  0EFF               	movlw	high (_spiMaster+4)
 25394   00485A  6EF7               	movwf	tblptrh,c
 25395   00485C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25396   00485C  6AF8               	clrf	tblptru,c
 25397   00485E                     	endif
 25398   00485E                     	if	0	;tblptru may be non-zero
 25399   00485E                     	endif
 25400   00485E  0009               	tblrd		*+
 25401   004860  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25402   004866  0009               	tblrd		*+
 25403   004868  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25404   00486E  D802               	call	u17208
 25405   004870  EF45  F024         	goto	u17209
 25406   004874                     u17208:
 25407   004874  0005               	push	
 25408   004876  6EFA               	movwf	pclath,c
 25409   004878  0100               	movlb	0	; () banked
 25410   00487A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25411   00487C  6EFD               	movwf	tosl,c
 25412   00487E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25413   004880  6EFE               	movwf	tosh,c
 25414   004882  6AFF               	clrf	tosu,c
 25415   004884  50FA               	movf	pclath,w,c
 25416   004886  0EFF               	movlw	255
 25417   004888  0012               	return		;indir
 25418   00488A                     u17209:
 25419   00488A  0100               	movlb	0	; () banked
 25420   00488C  6F8C               	movwf	SD_SPI_AsyncReadTasks@bData& (0+255),b
 25421   00488E                     
 25422                           ; BSR set to: 0
 25423                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 25424   00488E  298C               	incf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 25425   004890  B4D8               	btfsc	status,2,c
 25426   004892  EF4D  F024         	goto	u17211
 25427   004896  EF4F  F024         	goto	u17210
 25428   00489A                     u17211:
 25429   00489A  EF03  F024         	goto	l14772
 25430   00489E                     u17210:
 25431   00489E                     
 25432                           ; BSR set to: 0
 25433                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 25434   00489E  0EFE               	movlw	254
 25435   0048A0  198C               	xorwf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 25436   0048A2  A4D8               	btfss	status,2,c
 25437   0048A4  EF56  F024         	goto	u17221
 25438   0048A8  EF58  F024         	goto	u17220
 25439   0048AC                     u17221:
 25440   0048AC  EF62  F024         	goto	l14802
 25441   0048B0                     u17220:
 25442   0048B0                     
 25443                           ; BSR set to: 0
 25444                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 25445   0048B0  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25446   0048B2  6ED9               	movwf	fsr2l,c
 25447   0048B4  6ADA               	clrf	fsr2h,c
 25448   0048B6  0E0C               	movlw	12
 25449   0048B8  26D9               	addwf	fsr2l,f,c
 25450   0048BA  0E02               	movlw	2
 25451   0048BC  6EDF               	movwf	indf2,c
 25452   0048BE                     l14796:
 25453                           
 25454                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 25455   0048BE  0E02               	movlw	2
 25456   0048C0  EFBB  F025         	goto	l1678
 25457   0048C4                     l14802:
 25458                           
 25459                           ; BSR set to: 0
 25460                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 25461   0048C4  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25462   0048C6  6ED9               	movwf	fsr2l,c
 25463   0048C8  6ADA               	clrf	fsr2h,c
 25464   0048CA  0E0C               	movlw	12
 25465   0048CC  26D9               	addwf	fsr2l,f,c
 25466   0048CE  0EFE               	movlw	254
 25467   0048D0  6EDF               	movwf	indf2,c
 25468   0048D2  EF03  F024         	goto	l14772
 25469   0048D6                     l14812:
 25470                           
 25471                           ; BSR set to: 1
 25472                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 25473   0048D6  0100               	movlb	0	; () banked
 25474   0048D8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25475   0048DA  6ED9               	movwf	fsr2l,c
 25476   0048DC  6ADA               	clrf	fsr2h,c
 25477   0048DE  0E0C               	movlw	12
 25478   0048E0  26D9               	addwf	fsr2l,f,c
 25479   0048E2  0EFE               	movlw	254
 25480   0048E4  6EDF               	movwf	indf2,c
 25481   0048E6  EF03  F024         	goto	l14772
 25482   0048EA                     l14818:
 25483                           
 25484                           ; BSR set to: 0
 25485                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 25486   0048EA  502F               	movf	(_ioInfo+2)^0,w,c
 25487   0048EC  1030               	iorwf	(_ioInfo+3)^0,w,c
 25488   0048EE  1031               	iorwf	(_ioInfo+4)^0,w,c
 25489   0048F0  1032               	iorwf	(_ioInfo+5)^0,w,c
 25490   0048F2  B4D8               	btfsc	status,2,c
 25491   0048F4  EF7E  F024         	goto	u17231
 25492   0048F8  EF80  F024         	goto	u17230
 25493   0048FC                     u17231:
 25494   0048FC  EF2D  F025         	goto	l14852
 25495   004900                     u17230:
 25496   004900                     
 25497                           ; BSR set to: 0
 25498                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 25499   004900  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25500   004902  6ED9               	movwf	fsr2l,c
 25501   004904  6ADA               	clrf	fsr2h,c
 25502   004906  006F FF78  F02D    	movff	postinc2,_ioInfo
 25503   00490C  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 25504   004912                     
 25505                           ; BSR set to: 0
 25506                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 25507   004912  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25508   004914  6ED9               	movwf	fsr2l,c
 25509   004916  6ADA               	clrf	fsr2h,c
 25510   004918  0E06               	movlw	6
 25511   00491A  26D9               	addwf	fsr2l,f,c
 25512   00491C  006F FF78  F033    	movff	postinc2,_ioInfo+6
 25513   004922  006F FF74  F034    	movff	postdec2,_ioInfo+7
 25514   004928                     
 25515                           ; BSR set to: 0
 25516                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 25517   004928  502D               	movf	_ioInfo^0,w,c
 25518   00492A  6F83               	movwf	??_SD_SPI_AsyncReadTasks& (0+255),b
 25519   00492C  502E               	movf	(_ioInfo+1)^0,w,c
 25520   00492E  6F84               	movwf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),b
 25521   004930  6B85               	clrf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),b
 25522   004932  6B86               	clrf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),b
 25523   004934  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25524   004936  5E2F               	subwf	(_ioInfo+2)^0,f,c
 25525   004938  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25526   00493A  5A30               	subwfb	(_ioInfo+3)^0,f,c
 25527   00493C  5185               	movf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),w,b
 25528   00493E  5A31               	subwfb	(_ioInfo+4)^0,f,c
 25529   004940  5186               	movf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),w,b
 25530   004942  5A32               	subwfb	(_ioInfo+5)^0,f,c
 25531   004944                     
 25532                           ; BSR set to: 0
 25533                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 25534   004944  502D               	movf	_ioInfo^0,w,c
 25535   004946  5E44               	subwf	SD_SPI_AsyncReadTasks@blockCounter^0,f,c
 25536   004948  502E               	movf	(_ioInfo+1)^0,w,c
 25537   00494A  5A45               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,f,c
 25538   00494C                     
 25539                           ; BSR set to: 0
 25540                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 25541   00494C  C033  F060         	movff	_ioInfo+6,memset@dest
 25542   004950  C034  F061         	movff	_ioInfo+7,memset@dest+1
 25543   004954  0E00               	movlw	0
 25544   004956  6F63               	movwf	(memset@c+1)& (0+255),b
 25545   004958  6962               	setf	memset@c& (0+255),b
 25546   00495A  C02D  F064         	movff	_ioInfo,memset@n
 25547   00495E  C02E  F065         	movff	_ioInfo+1,memset@n+1
 25548   004962  ECBF  F04D         	call	_memset
 25549   004966                     
 25550                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 25551   004966  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 25552   00496A  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 25553   00496E  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 25554   004972  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 25555   004976  0E99               	movlw	low (_spiMaster+6)
 25556   004978  6EF6               	movwf	tblptrl,c
 25557   00497A  0EFF               	movlw	high (_spiMaster+6)
 25558   00497C  6EF7               	movwf	tblptrh,c
 25559   00497E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25560   00497E  6AF8               	clrf	tblptru,c
 25561   004980                     	endif
 25562   004980                     	if	0	;tblptru may be non-zero
 25563   004980                     	endif
 25564   004980  0009               	tblrd		*+
 25565   004982  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25566   004988  0009               	tblrd		*+
 25567   00498A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25568   004990  D802               	call	u17248
 25569   004992  EFD5  F024         	goto	u17249
 25570   004996                     u17248:
 25571   004996  0005               	push	
 25572   004998  6EFA               	movwf	pclath,c
 25573   00499A  0100               	movlb	0	; () banked
 25574   00499C  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25575   00499E  6EFD               	movwf	tosl,c
 25576   0049A0  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25577   0049A2  6EFE               	movwf	tosh,c
 25578   0049A4  6AFF               	clrf	tosu,c
 25579   0049A6  50FA               	movf	pclath,w,c
 25580   0049A8  0012               	return		;indir
 25581   0049AA                     u17249:
 25582   0049AA                     
 25583                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 25584   0049AA  5044               	movf	SD_SPI_AsyncReadTasks@blockCounter^0,w,c
 25585   0049AC  1045               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,w,c
 25586   0049AE  A4D8               	btfss	status,2,c
 25587   0049B0  EFDC  F024         	goto	u17251
 25588   0049B4  EFDE  F024         	goto	u17250
 25589   0049B8                     u17251:
 25590   0049B8  EF5F  F024         	goto	l14796
 25591   0049BC                     u17250:
 25592   0049BC                     
 25593                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 25594   0049BC  0E97               	movlw	low (_spiMaster+4)
 25595   0049BE  6EF6               	movwf	tblptrl,c
 25596   0049C0  0EFF               	movlw	high (_spiMaster+4)
 25597   0049C2  6EF7               	movwf	tblptrh,c
 25598   0049C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25599   0049C4  6AF8               	clrf	tblptru,c
 25600   0049C6                     	endif
 25601   0049C6                     	if	0	;tblptru may be non-zero
 25602   0049C6                     	endif
 25603   0049C6  0009               	tblrd		*+
 25604   0049C8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25605   0049CE  0009               	tblrd		*+
 25606   0049D0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25607   0049D6  D802               	call	u17268
 25608   0049D8  EFF9  F024         	goto	u17269
 25609   0049DC                     u17268:
 25610   0049DC  0005               	push	
 25611   0049DE  6EFA               	movwf	pclath,c
 25612   0049E0  0100               	movlb	0	; () banked
 25613   0049E2  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25614   0049E4  6EFD               	movwf	tosl,c
 25615   0049E6  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25616   0049E8  6EFE               	movwf	tosh,c
 25617   0049EA  6AFF               	clrf	tosu,c
 25618   0049EC  50FA               	movf	pclath,w,c
 25619   0049EE  0EFF               	movlw	255
 25620   0049F0  0012               	return		;indir
 25621   0049F2                     u17269:
 25622                           
 25623                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 25624   0049F2  0E97               	movlw	low (_spiMaster+4)
 25625   0049F4  6EF6               	movwf	tblptrl,c
 25626   0049F6  0EFF               	movlw	high (_spiMaster+4)
 25627   0049F8  6EF7               	movwf	tblptrh,c
 25628   0049FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25629   0049FA  6AF8               	clrf	tblptru,c
 25630   0049FC                     	endif
 25631   0049FC                     	if	0	;tblptru may be non-zero
 25632   0049FC                     	endif
 25633   0049FC  0009               	tblrd		*+
 25634   0049FE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25635   004A04  0009               	tblrd		*+
 25636   004A06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25637   004A0C  D802               	call	u17278
 25638   004A0E  EF14  F025         	goto	u17279
 25639   004A12                     u17278:
 25640   004A12  0005               	push	
 25641   004A14  6EFA               	movwf	pclath,c
 25642   004A16  0100               	movlb	0	; () banked
 25643   004A18  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25644   004A1A  6EFD               	movwf	tosl,c
 25645   004A1C  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25646   004A1E  6EFE               	movwf	tosh,c
 25647   004A20  6AFF               	clrf	tosu,c
 25648   004A22  50FA               	movf	pclath,w,c
 25649   004A24  0EFF               	movlw	255
 25650   004A26  0012               	return		;indir
 25651   004A28                     u17279:
 25652   004A28                     
 25653                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 25654   004A28  502F               	movf	(_ioInfo+2)^0,w,c
 25655   004A2A  1030               	iorwf	(_ioInfo+3)^0,w,c
 25656   004A2C  1031               	iorwf	(_ioInfo+4)^0,w,c
 25657   004A2E  1032               	iorwf	(_ioInfo+5)^0,w,c
 25658   004A30  B4D8               	btfsc	status,2,c
 25659   004A32  EF1D  F025         	goto	u17281
 25660   004A36  EF1F  F025         	goto	u17280
 25661   004A3A                     u17281:
 25662   004A3A  EF27  F025         	goto	l14840
 25663   004A3E                     u17280:
 25664   004A3E                     
 25665                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 25666   004A3E  0100               	movlb	0	; () banked
 25667   004A40  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25668   004A42  6ED9               	movwf	fsr2l,c
 25669   004A44  6ADA               	clrf	fsr2h,c
 25670   004A46  0E0C               	movlw	12
 25671   004A48  26D9               	addwf	fsr2l,f,c
 25672   004A4A  0E03               	movlw	3
 25673   004A4C  6EDF               	movwf	indf2,c
 25674   004A4E                     l14840:
 25675                           
 25676                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 25677   004A4E  0E02               	movlw	2
 25678   004A50  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 25679   004A52  0E00               	movlw	0
 25680   004A54  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 25681   004A56  EF03  F024         	goto	l14772
 25682   004A5A                     l14852:
 25683                           
 25684                           ; BSR set to: 0
 25685                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 25686   004A5A  504C               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,w,c
 25687   004A5C  A4D8               	btfss	status,2,c
 25688   004A5E  EF33  F025         	goto	u17291
 25689   004A62  EF35  F025         	goto	u17290
 25690   004A66                     u17291:
 25691   004A66  EF40  F025         	goto	l14856
 25692   004A6A                     u17290:
 25693   004A6A                     
 25694                           ; BSR set to: 0
 25695                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 25696   004A6A  0E00               	movlw	0
 25697   004A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 25698   004A6E  0E00               	movlw	0
 25699   004A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 25700   004A72  0E00               	movlw	0
 25701   004A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 25702   004A76  0E00               	movlw	0
 25703   004A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 25704   004A7A  0E05               	movlw	5
 25705   004A7C  EC82  F01C         	call	_SD_SendCmd
 25706   004A80                     l14856:
 25707   004A80  8ABA               	bsf	186,5,c	;volatile
 25708   004A82                     
 25709                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 25710   004A82  0E97               	movlw	low (_spiMaster+4)
 25711   004A84  6EF6               	movwf	tblptrl,c
 25712   004A86  0EFF               	movlw	high (_spiMaster+4)
 25713   004A88  6EF7               	movwf	tblptrh,c
 25714   004A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25715   004A8A  6AF8               	clrf	tblptru,c
 25716   004A8C                     	endif
 25717   004A8C                     	if	0	;tblptru may be non-zero
 25718   004A8C                     	endif
 25719   004A8C  0009               	tblrd		*+
 25720   004A8E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25721   004A94  0009               	tblrd		*+
 25722   004A96  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25723   004A9C  D802               	call	u17308
 25724   004A9E  EF5C  F025         	goto	u17309
 25725   004AA2                     u17308:
 25726   004AA2  0005               	push	
 25727   004AA4  6EFA               	movwf	pclath,c
 25728   004AA6  0100               	movlb	0	; () banked
 25729   004AA8  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25730   004AAA  6EFD               	movwf	tosl,c
 25731   004AAC  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25732   004AAE  6EFE               	movwf	tosh,c
 25733   004AB0  6AFF               	clrf	tosu,c
 25734   004AB2  50FA               	movf	pclath,w,c
 25735   004AB4  0EFF               	movlw	255
 25736   004AB6  0012               	return		;indir
 25737   004AB8                     u17309:
 25738   004AB8                     
 25739                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 25740   004AB8  0100               	movlb	0	; () banked
 25741   004ABA  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25742   004ABC  6ED9               	movwf	fsr2l,c
 25743   004ABE  6ADA               	clrf	fsr2h,c
 25744   004AC0  0E0C               	movlw	12
 25745   004AC2  26D9               	addwf	fsr2l,f,c
 25746   004AC4  6ADF               	clrf	indf2,c
 25747   004AC6                     
 25748                           ; BSR set to: 0
 25749                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 25750   004AC6  0E01               	movlw	1
 25751   004AC8  6E53               	movwf	(_mediaInformation+3)^0,c
 25752   004ACA  EF95  F023         	goto	l14748
 25753   004ACE                     l14868:
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 25757   004ACE  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25758   004AD0  6ED9               	movwf	fsr2l,c
 25759   004AD2  6ADA               	clrf	fsr2h,c
 25760   004AD4  0E0C               	movlw	12
 25761   004AD6  26D9               	addwf	fsr2l,f,c
 25762   004AD8  0EFF               	movlw	255
 25763   004ADA  6EDF               	movwf	indf2,c
 25764   004ADC                     
 25765                           ; BSR set to: 0
 25766   004ADC  0E00               	movlw	0
 25767   004ADE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 25768   004AE0  0E00               	movlw	0
 25769   004AE2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 25770   004AE4  0E00               	movlw	0
 25771   004AE6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 25772   004AE8  0E00               	movlw	0
 25773   004AEA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 25774   004AEC  0E05               	movlw	5
 25775   004AEE  EC82  F01C         	call	_SD_SendCmd
 25776   004AF2                     l14872:
 25777   004AF2  8ABA               	bsf	186,5,c	;volatile
 25778   004AF4                     
 25779                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 25780   004AF4  0E97               	movlw	low (_spiMaster+4)
 25781   004AF6  6EF6               	movwf	tblptrl,c
 25782   004AF8  0EFF               	movlw	high (_spiMaster+4)
 25783   004AFA  6EF7               	movwf	tblptrh,c
 25784   004AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25785   004AFC  6AF8               	clrf	tblptru,c
 25786   004AFE                     	endif
 25787   004AFE                     	if	0	;tblptru may be non-zero
 25788   004AFE                     	endif
 25789   004AFE  0009               	tblrd		*+
 25790   004B00  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25791   004B06  0009               	tblrd		*+
 25792   004B08  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25793   004B0E  D802               	call	u17318
 25794   004B10  EF95  F025         	goto	u17319
 25795   004B14                     u17318:
 25796   004B14  0005               	push	
 25797   004B16  6EFA               	movwf	pclath,c
 25798   004B18  0100               	movlb	0	; () banked
 25799   004B1A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25800   004B1C  6EFD               	movwf	tosl,c
 25801   004B1E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25802   004B20  6EFE               	movwf	tosh,c
 25803   004B22  6AFF               	clrf	tosu,c
 25804   004B24  50FA               	movf	pclath,w,c
 25805   004B26  0EFF               	movlw	255
 25806   004B28  0012               	return		;indir
 25807   004B2A                     u17319:
 25808   004B2A                     
 25809                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 25810   004B2A  0E01               	movlw	1
 25811   004B2C  6E53               	movwf	(_mediaInformation+3)^0,c
 25812   004B2E                     
 25813                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 25814   004B2E  0EFF               	movlw	255
 25815   004B30  EFBB  F025         	goto	l1678
 25816   004B34                     l14884:
 25817   004B34  0100               	movlb	0	; () banked
 25818   004B36  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25819   004B38  6ED9               	movwf	fsr2l,c
 25820   004B3A  6ADA               	clrf	fsr2h,c
 25821   004B3C  0E0C               	movlw	12
 25822   004B3E  26D9               	addwf	fsr2l,f,c
 25823   004B40  50DF               	movf	indf2,w,c
 25824                           
 25825                           ; Switch size 1, requested type "simple"
 25826                           ; Number of cases is 6, Range of values is 0 to 255
 25827                           ; switch strategies available:
 25828                           ; Name         Instructions Cycles
 25829                           ; simple_byte           19    10 (average)
 25830                           ;	Chosen strategy is simple_byte
 25831   004B42  0A00               	xorlw	0	; case 0
 25832   004B44  B4D8               	btfsc	status,2,c
 25833   004B46  EF95  F023         	goto	l14748
 25834   004B4A  0A01               	xorlw	1	; case 1
 25835   004B4C  B4D8               	btfsc	status,2,c
 25836   004B4E  EF98  F023         	goto	l14752
 25837   004B52  0A03               	xorlw	3	; case 2
 25838   004B54  B4D8               	btfsc	status,2,c
 25839   004B56  EF75  F024         	goto	l14818
 25840   004B5A  0A01               	xorlw	1	; case 3
 25841   004B5C  B4D8               	btfsc	status,2,c
 25842   004B5E  EF19  F024         	goto	l14784
 25843   004B62  0AFD               	xorlw	253	; case 254
 25844   004B64  B4D8               	btfsc	status,2,c
 25845   004B66  EF67  F025         	goto	l14868
 25846   004B6A  0A01               	xorlw	1	; case 255
 25847   004B6C  B4D8               	btfsc	status,2,c
 25848   004B6E  EF79  F025         	goto	l14872
 25849   004B72  EF79  F025         	goto	l14872
 25850   004B76                     l1678:
 25851   004B76  0012               	return		;funcret
 25852   004B78                     __end_of_SD_SPI_AsyncReadTasks:
 25853                           	callstack 0
 25854                           
 25855 ;; *************** function _memset *****************
 25856 ;; Defined at:
 25857 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 25858 ;; Parameters:    Size  Location     Type
 25859 ;;  dest            2    0[BANK0 ] PTR void 
 25860 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25861 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25862 ;;		 -> f_gets@s(4), NULL(0), 
 25863 ;;  c               2    2[BANK0 ] int 
 25864 ;;  n               2    4[BANK0 ] unsigned int 
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;  p               2    6[BANK0 ] PTR unsigned char 
 25867 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25868 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25869 ;;		 -> f_gets@s(4), NULL(0), 
 25870 ;; Return value:  Size  Location     Type
 25871 ;;                  2    0[BANK0 ] PTR void 
 25872 ;; Registers used:
 25873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25874 ;; Tracked objects:
 25875 ;;		On entry : 0/0
 25876 ;;		On exit  : 0/0
 25877 ;;		Unchanged: 0/0
 25878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25879 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25883 ;;Total ram usage:        8 bytes
 25884 ;; Hardware stack levels used: 1
 25885 ;; Hardware stack levels required when called: 5
 25886 ;; This function calls:
 25887 ;;		Nothing
 25888 ;; This function is called by:
 25889 ;;		_SD_SPI_AsyncReadTasks
 25890 ;; This function uses a non-reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text92
 25894   009B7E                     __ptext92:
 25895                           	callstack 0
 25896   009B7E                     _memset:
 25897                           	callstack 20
 25898   009B7E  C060  F066         	movff	memset@dest,memset@p
 25899   009B82  C061  F067         	movff	memset@dest+1,memset@p+1
 25900   009B86  EFE1  F04D         	goto	l14706
 25901   009B8A                     l14702:
 25902                           
 25903                           ; BSR set to: 0
 25904   009B8A  0060  F19B  FFF6   	movff	memset@p,tblptrl
 25905   009B90  0060  F19F  FFF7   	movff	memset@p+1,tblptrh
 25906   009B96  0E00               	movlw	low (__mediumconst shr (0+16))
 25907   009B98  6EF8               	movwf	tblptru,c
 25908   009B9A  0E0F               	movlw	(high __ramtop+-1)
 25909   009B9C  64F7               	cpfsgt	tblptrh,c
 25910   009B9E  D005               	bra	u17037
 25911   009BA0  0060  F18B  FFF5   	movff	memset@c,tablat
 25912   009BA6  000C               	tblwt		*
 25913   009BA8  D009               	bra	u17030
 25914   009BAA                     u17037:
 25915   009BAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25916   009BB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25917   009BB6  0060  F18B  FFEF   	movff	memset@c,indf0
 25918   009BBC                     u17030:
 25919   009BBC  0100               	movlb	0	; () banked
 25920   009BBE  4B66               	infsnz	memset@p& (0+255),f,b
 25921   009BC0  2B67               	incf	(memset@p+1)& (0+255),f,b
 25922   009BC2                     l14706:
 25923   009BC2  0100               	movlb	0	; () banked
 25924   009BC4  0764               	decf	memset@n& (0+255),f,b
 25925   009BC6  A0D8               	btfss	status,0,c
 25926   009BC8  0765               	decf	(memset@n+1)& (0+255),f,b
 25927   009BCA  2964               	incf	memset@n& (0+255),w,b
 25928   009BCC  E106               	bnz	u17041
 25929   009BCE  2965               	incf	(memset@n+1)& (0+255),w,b
 25930   009BD0  A4D8               	btfss	status,2,c
 25931   009BD2  EFED  F04D         	goto	u17041
 25932   009BD6  EFEF  F04D         	goto	u17040
 25933   009BDA                     u17041:
 25934   009BDA  EFC5  F04D         	goto	l14702
 25935   009BDE                     u17040:
 25936   009BDE                     
 25937                           ; BSR set to: 0
 25938   009BDE  0012               	return		;funcret
 25939   009BE0                     __end_of_memset:
 25940                           	callstack 0
 25941                           
 25942 ;; *************** function _SPI1_ExchangeBlock *****************
 25943 ;; Defined at:
 25944 ;;		line 109 in file "mcc_generated_files/spi1.c"
 25945 ;; Parameters:    Size  Location     Type
 25946 ;;  block           2    0[BANK0 ] PTR void 
 25947 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25948 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25949 ;;		 -> f_gets@s(4), NULL(0), 
 25950 ;;  blockSize       2    2[BANK0 ] unsigned int 
 25951 ;; Auto vars:     Size  Location     Type
 25952 ;;  data            2    4[BANK0 ] PTR unsigned char 
 25953 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25954 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25955 ;;		 -> f_gets@s(4), NULL(0), 
 25956 ;; Return value:  Size  Location     Type
 25957 ;;                  1    wreg      void 
 25958 ;; Registers used:
 25959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25960 ;; Tracked objects:
 25961 ;;		On entry : 0/0
 25962 ;;		On exit  : 0/0
 25963 ;;		Unchanged: 0/0
 25964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25968 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25969 ;;Total ram usage:        6 bytes
 25970 ;; Hardware stack levels used: 1
 25971 ;; Hardware stack levels required when called: 5
 25972 ;; This function calls:
 25973 ;;		Nothing
 25974 ;; This function is called by:
 25975 ;;		_SD_SPI_AsyncWriteTasks
 25976 ;;		_SD_SPI_AsyncReadTasks
 25977 ;; This function uses a non-reentrant model
 25978 ;;
 25979                           
 25980                           	psect	text93
 25981   009138                     __ptext93:
 25982                           	callstack 0
 25983   009138                     _SPI1_ExchangeBlock:
 25984                           	callstack 20
 25985   009138                     
 25986                           ;mcc_generated_files/spi1.c: 109: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 110: {;mcc_generated_files/spi1.c: 111:     uint8_t *data =
      +                           block;
 25987   009138  C060  F064         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 25988   00913C  C061  F065         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 25989                           
 25990                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 25991   009140  EFE0  F048         	goto	l14500
 25992   009144                     l14492:
 25993                           
 25994                           ; BSR set to: 0
 25995                           ;mcc_generated_files/spi1.c: 113:     {;mcc_generated_files/spi1.c: 114:         SPI1TCN
      +                          TL = 1;
 25996   009144  0E01               	movlw	1
 25997   009146  013D               	movlb	61	; () banked
 25998   009148  6F12               	movwf	18,b	;volatile
 25999   00914A                     
 26000                           ; BSR set to: 61
 26001                           ;mcc_generated_files/spi1.c: 115:         SPI1TXB = *data;
 26002   00914A  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 26003   009150  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 26004   009156  0E00               	movlw	low (__mediumconst shr (0+16))
 26005   009158  6EF8               	movwf	tblptru,c
 26006   00915A  0E0F               	movlw	(high __ramtop+-1)
 26007   00915C  64F7               	cpfsgt	tblptrh,c
 26008   00915E  D003               	bra	u16657
 26009   009160  0008               	tblrd		*
 26010   009162  50F5               	movf	tablat,w,c
 26011   009164  D007               	bra	u16650
 26012   009166                     u16657:
 26013   009166  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26014   00916C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26015   009172  50EF               	movf	indf0,w,c
 26016   009174                     u16650:
 26017   009174  013D               	movlb	61	; () banked
 26018   009176  6F11               	movwf	17,b	;volatile
 26019   009178                     l1921:
 26020   009178  0139               	movlb	57	; () banked
 26021   00917A  A9A2               	btfss	162,4,b	;volatile
 26022   00917C  EFC2  F048         	goto	u16661
 26023   009180  EFC4  F048         	goto	u16660
 26024   009184                     u16661:
 26025   009184  EFBC  F048         	goto	l1921
 26026   009188                     u16660:
 26027   009188                     
 26028                           ; BSR set to: 57
 26029                           ;mcc_generated_files/spi1.c: 117:         *data++ = SPI1RXB;
 26030   009188  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 26031   00918E  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 26032   009194  0E00               	movlw	low (__mediumconst shr (0+16))
 26033   009196  6EF8               	movwf	tblptru,c
 26034   009198  0E0F               	movlw	(high __ramtop+-1)
 26035   00919A  64F7               	cpfsgt	tblptrh,c
 26036   00919C  D005               	bra	u16677
 26037   00919E  006F F443 FFF5     	movff	15632,tablat	;volatile
 26038   0091A4  000C               	tblwt		*
 26039   0091A6  D009               	bra	u16670
 26040   0091A8                     u16677:
 26041   0091A8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26042   0091AE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26043   0091B4  006F F443 FFEF     	movff	15632,indf0	;volatile
 26044   0091BA                     u16670:
 26045   0091BA  0100               	movlb	0	; () banked
 26046   0091BC  4B64               	infsnz	SPI1_ExchangeBlock@data& (0+255),f,b
 26047   0091BE  2B65               	incf	(SPI1_ExchangeBlock@data+1)& (0+255),f,b
 26048   0091C0                     l14500:
 26049                           
 26050                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 26051   0091C0  0100               	movlb	0	; () banked
 26052   0091C2  0762               	decf	SPI1_ExchangeBlock@blockSize& (0+255),f,b
 26053   0091C4  A0D8               	btfss	status,0,c
 26054   0091C6  0763               	decf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),f,b
 26055   0091C8  2962               	incf	SPI1_ExchangeBlock@blockSize& (0+255),w,b
 26056   0091CA  E106               	bnz	u16681
 26057   0091CC  2963               	incf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),w,b
 26058   0091CE  A4D8               	btfss	status,2,c
 26059   0091D0  EFEC  F048         	goto	u16681
 26060   0091D4  EFEE  F048         	goto	u16680
 26061   0091D8                     u16681:
 26062   0091D8  EFA2  F048         	goto	l14492
 26063   0091DC                     u16680:
 26064   0091DC                     
 26065                           ; BSR set to: 0
 26066   0091DC  0012               	return		;funcret
 26067   0091DE                     __end_of_SPI1_ExchangeBlock:
 26068                           	callstack 0
 26069                           
 26070 ;; *************** function _SD_SendCmd *****************
 26071 ;; Defined at:
 26072 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 26073 ;; Parameters:    Size  Location     Type
 26074 ;;  cmd             1    wreg     unsigned char 
 26075 ;;  address         4   11[BANK0 ] unsigned long 
 26076 ;; Auto vars:     Size  Location     Type
 26077 ;;  cmd             1   28[BANK0 ] unsigned char 
 26078 ;;  response        5   29[BANK0 ] struct .
 26079 ;;  address_byte    4   24[BANK0 ] unsigned char [4]
 26080 ;;  longTimeout     4   18[BANK0 ] unsigned long 
 26081 ;;  timeout         2   22[BANK0 ] unsigned short 
 26082 ;; Return value:  Size  Location     Type
 26083 ;;                  5   11[BANK0 ] struct .
 26084 ;; Registers used:
 26085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26086 ;; Tracked objects:
 26087 ;;		On entry : 0/0
 26088 ;;		On exit  : 0/0
 26089 ;;		Unchanged: 0/0
 26090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26091 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26092 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26094 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26095 ;;Total ram usage:       23 bytes
 26096 ;; Hardware stack levels used: 1
 26097 ;; Hardware stack levels required when called: 6
 26098 ;; This function calls:
 26099 ;;		_SPI1_ExchangeByte
 26100 ;;		_memcpy
 26101 ;; This function is called by:
 26102 ;;		_SD_SPI_MediaInitialize
 26103 ;;		_SD_SPI_AsyncReadTasks
 26104 ;;		_SD_SPI_AsyncWriteTasks
 26105 ;; This function uses a non-reentrant model
 26106 ;;
 26107                           
 26108                           	psect	text94
 26109   003904                     __ptext94:
 26110                           	callstack 0
 26111   003904                     _SD_SendCmd:
 26112                           	callstack 19
 26113                           
 26114                           ; BSR set to: 0
 26115                           ;incstack = 0
 26116                           ;SD_SendCmd@cmd stored from wreg
 26117   003904  0100               	movlb	0	; () banked
 26118   003906  6F7C               	movwf	SD_SendCmd@cmd& (0+255),b
 26119   003908  9ABA               	bcf	186,5,c	;volatile
 26120   00390A                     
 26121                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 26122   00390A  0E78               	movlw	low SD_SendCmd@address_bytes
 26123   00390C  0100               	movlb	0	; () banked
 26124   00390E  6F60               	movwf	memcpy@d1& (0+255),b
 26125   003910  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 26126   003912  0E6B               	movlw	low SD_SendCmd@address
 26127   003914  6F62               	movwf	memcpy@s1& (0+255),b
 26128   003916  6B63               	clrf	(memcpy@s1+1)& (0+255),b
 26129   003918  0E00               	movlw	0
 26130   00391A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26131   00391C  0E04               	movlw	4
 26132   00391E  6F64               	movwf	memcpy@n& (0+255),b
 26133   003920  EC50  F04E         	call	_memcpy
 26134   003924                     
 26135                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 26136   003924  0E97               	movlw	low (_spiMaster+4)
 26137   003926  6EF6               	movwf	tblptrl,c
 26138   003928  0EFF               	movlw	high (_spiMaster+4)
 26139   00392A  6EF7               	movwf	tblptrh,c
 26140   00392C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26141   00392C  6AF8               	clrf	tblptru,c
 26142   00392E                     	endif
 26143   00392E                     	if	0	;tblptru may be non-zero
 26144   00392E                     	endif
 26145   00392E  0009               	tblrd		*+
 26146   003930  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26147   003936  0009               	tblrd		*+
 26148   003938  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26149   00393E  D802               	call	u16408
 26150   003940  EFBA  F01C         	goto	u16409
 26151   003944                     u16408:
 26152   003944  0005               	push	
 26153   003946  6EFA               	movwf	pclath,c
 26154   003948  0100               	movlb	0	; () banked
 26155   00394A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26156   00394C  6EFD               	movwf	tosl,c
 26157   00394E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26158   003950  6EFE               	movwf	tosh,c
 26159   003952  6AFF               	clrf	tosu,c
 26160   003954  50FA               	movf	pclath,w,c
 26161   003956  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26162   003958  0D04               	mullw	4
 26163   00395A  0E43               	movlw	low _sdmmc_cmdtable
 26164   00395C  24F3               	addwf	243,w,c
 26165   00395E  6EF6               	movwf	tblptrl,c
 26166   003960  0EFF               	movlw	high _sdmmc_cmdtable
 26167   003962  20F4               	addwfc	244,w,c
 26168   003964  6EF7               	movwf	tblptrh,c
 26169   003966                     	if	1	;There are 3 active tblptr bytes
 26170   003966  6AF8               	clrf	tblptru,c
 26171   003968  0E00               	movlw	low (__mediumconst shr (0+16))
 26172   00396A  22F8               	addwfc	tblptru,f,c
 26173   00396C                     	endif
 26174   00396C  0008               	tblrd		*
 26175   00396E  50F5               	movf	tablat,w,c
 26176   003970  0940               	iorlw	64
 26177   003972  0012               	return		;indir
 26178   003974                     u16409:
 26179   003974                     
 26180                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 26181   003974  0E97               	movlw	low (_spiMaster+4)
 26182   003976  6EF6               	movwf	tblptrl,c
 26183   003978  0EFF               	movlw	high (_spiMaster+4)
 26184   00397A  6EF7               	movwf	tblptrh,c
 26185   00397C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26186   00397C  6AF8               	clrf	tblptru,c
 26187   00397E                     	endif
 26188   00397E                     	if	0	;tblptru may be non-zero
 26189   00397E                     	endif
 26190   00397E  0009               	tblrd		*+
 26191   003980  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26192   003986  0009               	tblrd		*+
 26193   003988  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26194   00398E  D802               	call	u16418
 26195   003990  EFD5  F01C         	goto	u16419
 26196   003994                     u16418:
 26197   003994  0005               	push	
 26198   003996  6EFA               	movwf	pclath,c
 26199   003998  0100               	movlb	0	; () banked
 26200   00399A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26201   00399C  6EFD               	movwf	tosl,c
 26202   00399E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26203   0039A0  6EFE               	movwf	tosh,c
 26204   0039A2  6AFF               	clrf	tosu,c
 26205   0039A4  50FA               	movf	pclath,w,c
 26206   0039A6  517B               	movf	(SD_SendCmd@address_bytes+3)& (0+255),w,b
 26207   0039A8  0012               	return		;indir
 26208   0039AA                     u16419:
 26209   0039AA                     
 26210                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 26211   0039AA  0E97               	movlw	low (_spiMaster+4)
 26212   0039AC  6EF6               	movwf	tblptrl,c
 26213   0039AE  0EFF               	movlw	high (_spiMaster+4)
 26214   0039B0  6EF7               	movwf	tblptrh,c
 26215   0039B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26216   0039B2  6AF8               	clrf	tblptru,c
 26217   0039B4                     	endif
 26218   0039B4                     	if	0	;tblptru may be non-zero
 26219   0039B4                     	endif
 26220   0039B4  0009               	tblrd		*+
 26221   0039B6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26222   0039BC  0009               	tblrd		*+
 26223   0039BE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26224   0039C4  D802               	call	u16428
 26225   0039C6  EFF0  F01C         	goto	u16429
 26226   0039CA                     u16428:
 26227   0039CA  0005               	push	
 26228   0039CC  6EFA               	movwf	pclath,c
 26229   0039CE  0100               	movlb	0	; () banked
 26230   0039D0  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26231   0039D2  6EFD               	movwf	tosl,c
 26232   0039D4  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26233   0039D6  6EFE               	movwf	tosh,c
 26234   0039D8  6AFF               	clrf	tosu,c
 26235   0039DA  50FA               	movf	pclath,w,c
 26236   0039DC  517A               	movf	(SD_SendCmd@address_bytes+2)& (0+255),w,b
 26237   0039DE  0012               	return		;indir
 26238   0039E0                     u16429:
 26239   0039E0                     
 26240                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 26241   0039E0  0E97               	movlw	low (_spiMaster+4)
 26242   0039E2  6EF6               	movwf	tblptrl,c
 26243   0039E4  0EFF               	movlw	high (_spiMaster+4)
 26244   0039E6  6EF7               	movwf	tblptrh,c
 26245   0039E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26246   0039E8  6AF8               	clrf	tblptru,c
 26247   0039EA                     	endif
 26248   0039EA                     	if	0	;tblptru may be non-zero
 26249   0039EA                     	endif
 26250   0039EA  0009               	tblrd		*+
 26251   0039EC  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26252   0039F2  0009               	tblrd		*+
 26253   0039F4  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26254   0039FA  D802               	call	u16438
 26255   0039FC  EF0B  F01D         	goto	u16439
 26256   003A00                     u16438:
 26257   003A00  0005               	push	
 26258   003A02  6EFA               	movwf	pclath,c
 26259   003A04  0100               	movlb	0	; () banked
 26260   003A06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26261   003A08  6EFD               	movwf	tosl,c
 26262   003A0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26263   003A0C  6EFE               	movwf	tosh,c
 26264   003A0E  6AFF               	clrf	tosu,c
 26265   003A10  50FA               	movf	pclath,w,c
 26266   003A12  5179               	movf	(SD_SendCmd@address_bytes+1)& (0+255),w,b
 26267   003A14  0012               	return		;indir
 26268   003A16                     u16439:
 26269   003A16                     
 26270                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 26271   003A16  0E97               	movlw	low (_spiMaster+4)
 26272   003A18  6EF6               	movwf	tblptrl,c
 26273   003A1A  0EFF               	movlw	high (_spiMaster+4)
 26274   003A1C  6EF7               	movwf	tblptrh,c
 26275   003A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26276   003A1E  6AF8               	clrf	tblptru,c
 26277   003A20                     	endif
 26278   003A20                     	if	0	;tblptru may be non-zero
 26279   003A20                     	endif
 26280   003A20  0009               	tblrd		*+
 26281   003A22  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26282   003A28  0009               	tblrd		*+
 26283   003A2A  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26284   003A30  D802               	call	u16448
 26285   003A32  EF26  F01D         	goto	u16449
 26286   003A36                     u16448:
 26287   003A36  0005               	push	
 26288   003A38  6EFA               	movwf	pclath,c
 26289   003A3A  0100               	movlb	0	; () banked
 26290   003A3C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26291   003A3E  6EFD               	movwf	tosl,c
 26292   003A40  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26293   003A42  6EFE               	movwf	tosh,c
 26294   003A44  6AFF               	clrf	tosu,c
 26295   003A46  50FA               	movf	pclath,w,c
 26296   003A48  5178               	movf	SD_SendCmd@address_bytes& (0+255),w,b
 26297   003A4A  0012               	return		;indir
 26298   003A4C                     u16449:
 26299   003A4C                     
 26300                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 26301   003A4C  0E97               	movlw	low (_spiMaster+4)
 26302   003A4E  6EF6               	movwf	tblptrl,c
 26303   003A50  0EFF               	movlw	high (_spiMaster+4)
 26304   003A52  6EF7               	movwf	tblptrh,c
 26305   003A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26306   003A54  6AF8               	clrf	tblptru,c
 26307   003A56                     	endif
 26308   003A56                     	if	0	;tblptru may be non-zero
 26309   003A56                     	endif
 26310   003A56  0009               	tblrd		*+
 26311   003A58  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26312   003A5E  0009               	tblrd		*+
 26313   003A60  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26314   003A66  D802               	call	u16458
 26315   003A68  EF51  F01D         	goto	u16459
 26316   003A6C                     u16458:
 26317   003A6C  0005               	push	
 26318   003A6E  6EFA               	movwf	pclath,c
 26319   003A70  0100               	movlb	0	; () banked
 26320   003A72  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26321   003A74  6EFD               	movwf	tosl,c
 26322   003A76  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26323   003A78  6EFE               	movwf	tosh,c
 26324   003A7A  6AFF               	clrf	tosu,c
 26325   003A7C  50FA               	movf	pclath,w,c
 26326   003A7E  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26327   003A80  0D04               	mullw	4
 26328   003A82  0E01               	movlw	1
 26329   003A84  26F3               	addwf	243,f,c
 26330   003A86  0E00               	movlw	0
 26331   003A88  22F4               	addwfc	244,f,c
 26332   003A8A  0E43               	movlw	low _sdmmc_cmdtable
 26333   003A8C  24F3               	addwf	243,w,c
 26334   003A8E  6EF6               	movwf	tblptrl,c
 26335   003A90  0EFF               	movlw	high _sdmmc_cmdtable
 26336   003A92  20F4               	addwfc	244,w,c
 26337   003A94  6EF7               	movwf	tblptrh,c
 26338   003A96                     	if	1	;There are 3 active tblptr bytes
 26339   003A96  6AF8               	clrf	tblptru,c
 26340   003A98  0E00               	movlw	low (__mediumconst shr (0+16))
 26341   003A9A  22F8               	addwfc	tblptru,f,c
 26342   003A9C                     	endif
 26343   003A9C  0008               	tblrd		*
 26344   003A9E  50F5               	movf	tablat,w,c
 26345   003AA0  0012               	return		;indir
 26346   003AA2                     u16459:
 26347   003AA2                     
 26348                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 26349   003AA2  0E05               	movlw	5
 26350   003AA4  0100               	movlb	0	; () banked
 26351   003AA6  197C               	xorwf	SD_SendCmd@cmd& (0+255),w,b
 26352   003AA8  A4D8               	btfss	status,2,c
 26353   003AAA  EF59  F01D         	goto	u16461
 26354   003AAE  EF5B  F01D         	goto	u16460
 26355   003AB2                     u16461:
 26356   003AB2  EF75  F01D         	goto	l14450
 26357   003AB6                     u16460:
 26358   003AB6                     
 26359                           ; BSR set to: 0
 26360                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 26361   003AB6  0E97               	movlw	low (_spiMaster+4)
 26362   003AB8  6EF6               	movwf	tblptrl,c
 26363   003ABA  0EFF               	movlw	high (_spiMaster+4)
 26364   003ABC  6EF7               	movwf	tblptrh,c
 26365   003ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26366   003ABE  6AF8               	clrf	tblptru,c
 26367   003AC0                     	endif
 26368   003AC0                     	if	0	;tblptru may be non-zero
 26369   003AC0                     	endif
 26370   003AC0  0009               	tblrd		*+
 26371   003AC2  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26372   003AC8  0009               	tblrd		*+
 26373   003ACA  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26374   003AD0  D802               	call	u16478
 26375   003AD2  EF75  F01D         	goto	u16479
 26376   003AD6                     u16478:
 26377   003AD6  0005               	push	
 26378   003AD8  6EFA               	movwf	pclath,c
 26379   003ADA  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26380   003ADC  6EFD               	movwf	tosl,c
 26381   003ADE  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26382   003AE0  6EFE               	movwf	tosh,c
 26383   003AE2  6AFF               	clrf	tosu,c
 26384   003AE4  50FA               	movf	pclath,w,c
 26385   003AE6  0EFF               	movlw	255
 26386   003AE8  0012               	return		;indir
 26387   003AEA                     u16479:
 26388   003AEA                     l14450:
 26389                           
 26390                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 26391   003AEA  0E00               	movlw	0
 26392   003AEC  0100               	movlb	0	; () banked
 26393   003AEE  6F77               	movwf	(SD_SendCmd@timeout+1)& (0+255),b
 26394   003AF0  0E14               	movlw	20
 26395   003AF2  6F76               	movwf	SD_SendCmd@timeout& (0+255),b
 26396   003AF4                     l14452:
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 26400   003AF4  0E97               	movlw	low (_spiMaster+4)
 26401   003AF6  6EF6               	movwf	tblptrl,c
 26402   003AF8  0EFF               	movlw	high (_spiMaster+4)
 26403   003AFA  6EF7               	movwf	tblptrh,c
 26404   003AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26405   003AFC  6AF8               	clrf	tblptru,c
 26406   003AFE                     	endif
 26407   003AFE                     	if	0	;tblptru may be non-zero
 26408   003AFE                     	endif
 26409   003AFE  0009               	tblrd		*+
 26410   003B00  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26411   003B06  0009               	tblrd		*+
 26412   003B08  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26413   003B0E  D802               	call	u16488
 26414   003B10  EF94  F01D         	goto	u16489
 26415   003B14                     u16488:
 26416   003B14  0005               	push	
 26417   003B16  6EFA               	movwf	pclath,c
 26418   003B18  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26419   003B1A  6EFD               	movwf	tosl,c
 26420   003B1C  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26421   003B1E  6EFE               	movwf	tosh,c
 26422   003B20  6AFF               	clrf	tosu,c
 26423   003B22  50FA               	movf	pclath,w,c
 26424   003B24  0EFF               	movlw	255
 26425   003B26  0012               	return		;indir
 26426   003B28                     u16489:
 26427   003B28  0100               	movlb	0	; () banked
 26428   003B2A  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26429   003B2C                     
 26430                           ; BSR set to: 0
 26431                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 26432   003B2C  0776               	decf	SD_SendCmd@timeout& (0+255),f,b
 26433   003B2E  A0D8               	btfss	status,0,c
 26434   003B30  0777               	decf	(SD_SendCmd@timeout+1)& (0+255),f,b
 26435   003B32                     
 26436                           ; BSR set to: 0
 26437                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 26438   003B32  297D               	incf	SD_SendCmd@response& (0+255),w,b
 26439   003B34  A4D8               	btfss	status,2,c
 26440   003B36  EF9F  F01D         	goto	u16491
 26441   003B3A  EFA1  F01D         	goto	u16490
 26442   003B3E                     u16491:
 26443   003B3E  EFAA  F01D         	goto	l14460
 26444   003B42                     u16490:
 26445   003B42                     
 26446                           ; BSR set to: 0
 26447   003B42  5176               	movf	SD_SendCmd@timeout& (0+255),w,b
 26448   003B44  1177               	iorwf	(SD_SendCmd@timeout+1)& (0+255),w,b
 26449   003B46  A4D8               	btfss	status,2,c
 26450   003B48  EFA8  F01D         	goto	u16501
 26451   003B4C  EFAA  F01D         	goto	u16500
 26452   003B50                     u16501:
 26453   003B50  EF7A  F01D         	goto	l14452
 26454   003B54                     u16500:
 26455   003B54                     l14460:
 26456                           
 26457                           ; BSR set to: 0
 26458                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 26459   003B54  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26460   003B56  0D04               	mullw	4
 26461   003B58  0E02               	movlw	2
 26462   003B5A  26F3               	addwf	243,f,c
 26463   003B5C  0E00               	movlw	0
 26464   003B5E  22F4               	addwfc	244,f,c
 26465   003B60  0E43               	movlw	low _sdmmc_cmdtable
 26466   003B62  24F3               	addwf	243,w,c
 26467   003B64  6EF6               	movwf	tblptrl,c
 26468   003B66  0EFF               	movlw	high _sdmmc_cmdtable
 26469   003B68  20F4               	addwfc	244,w,c
 26470   003B6A  6EF7               	movwf	tblptrh,c
 26471   003B6C                     	if	1	;There are 3 active tblptr bytes
 26472   003B6C  6AF8               	clrf	tblptru,c
 26473   003B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 26474   003B70  22F8               	addwfc	tblptru,f,c
 26475   003B72                     	endif
 26476   003B72  0008               	tblrd		*
 26477   003B74  50F5               	movf	tablat,w,c
 26478   003B76  0A02               	xorlw	2
 26479   003B78  A4D8               	btfss	status,2,c
 26480   003B7A  EFC1  F01D         	goto	u16511
 26481   003B7E  EFC3  F01D         	goto	u16510
 26482   003B82                     u16511:
 26483   003B82  EFE3  F01D         	goto	l14466
 26484   003B86                     u16510:
 26485   003B86                     
 26486                           ; BSR set to: 0
 26487                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 26488   003B86  C07D  F07E         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 26489   003B8A                     
 26490                           ; BSR set to: 0
 26491                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 26492   003B8A  0E97               	movlw	low (_spiMaster+4)
 26493   003B8C  6EF6               	movwf	tblptrl,c
 26494   003B8E  0EFF               	movlw	high (_spiMaster+4)
 26495   003B90  6EF7               	movwf	tblptrh,c
 26496   003B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26497   003B92  6AF8               	clrf	tblptru,c
 26498   003B94                     	endif
 26499   003B94                     	if	0	;tblptru may be non-zero
 26500   003B94                     	endif
 26501   003B94  0009               	tblrd		*+
 26502   003B96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26503   003B9C  0009               	tblrd		*+
 26504   003B9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26505   003BA4  D802               	call	u16528
 26506   003BA6  EFDF  F01D         	goto	u16529
 26507   003BAA                     u16528:
 26508   003BAA  0005               	push	
 26509   003BAC  6EFA               	movwf	pclath,c
 26510   003BAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26511   003BB0  6EFD               	movwf	tosl,c
 26512   003BB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26513   003BB4  6EFE               	movwf	tosh,c
 26514   003BB6  6AFF               	clrf	tosu,c
 26515   003BB8  50FA               	movf	pclath,w,c
 26516   003BBA  0EFF               	movlw	255
 26517   003BBC  0012               	return		;indir
 26518   003BBE                     u16529:
 26519   003BBE  0100               	movlb	0	; () banked
 26520   003BC0  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26521                           
 26522                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 26523   003BC2  EFC5  F01E         	goto	l1762
 26524   003BC6                     l14466:
 26525                           
 26526                           ; BSR set to: 0
 26527   003BC6  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26528   003BC8  0D04               	mullw	4
 26529   003BCA  0E02               	movlw	2
 26530   003BCC  26F3               	addwf	243,f,c
 26531   003BCE  0E00               	movlw	0
 26532   003BD0  22F4               	addwfc	244,f,c
 26533   003BD2  0E43               	movlw	low _sdmmc_cmdtable
 26534   003BD4  24F3               	addwf	243,w,c
 26535   003BD6  6EF6               	movwf	tblptrl,c
 26536   003BD8  0EFF               	movlw	high _sdmmc_cmdtable
 26537   003BDA  20F4               	addwfc	244,w,c
 26538   003BDC  6EF7               	movwf	tblptrh,c
 26539   003BDE                     	if	1	;There are 3 active tblptr bytes
 26540   003BDE  6AF8               	clrf	tblptru,c
 26541   003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 26542   003BE2  22F8               	addwfc	tblptru,f,c
 26543   003BE4                     	endif
 26544   003BE4  0008               	tblrd		*
 26545   003BE6  50F5               	movf	tablat,w,c
 26546   003BE8  06E8               	decf	wreg,f,c
 26547   003BEA  A4D8               	btfss	status,2,c
 26548   003BEC  EFFA  F01D         	goto	u16531
 26549   003BF0  EFFC  F01D         	goto	u16530
 26550   003BF4                     u16531:
 26551   003BF4  EF3C  F01E         	goto	l14480
 26552   003BF8                     u16530:
 26553   003BF8                     
 26554                           ; BSR set to: 0
 26555                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 26556   003BF8  0E00               	movlw	0
 26557   003BFA  6F72               	movwf	SD_SendCmd@longTimeout& (0+255),b
 26558   003BFC  0E00               	movlw	0
 26559   003BFE  6F73               	movwf	(SD_SendCmd@longTimeout+1)& (0+255),b
 26560   003C00  0E0A               	movlw	10
 26561   003C02  6F74               	movwf	(SD_SendCmd@longTimeout+2)& (0+255),b
 26562   003C04  0E00               	movlw	0
 26563   003C06  6F75               	movwf	(SD_SendCmd@longTimeout+3)& (0+255),b
 26564   003C08                     l14470:
 26565                           
 26566                           ; BSR set to: 0
 26567                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 26568   003C08  0E97               	movlw	low (_spiMaster+4)
 26569   003C0A  6EF6               	movwf	tblptrl,c
 26570   003C0C  0EFF               	movlw	high (_spiMaster+4)
 26571   003C0E  6EF7               	movwf	tblptrh,c
 26572   003C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26573   003C10  6AF8               	clrf	tblptru,c
 26574   003C12                     	endif
 26575   003C12                     	if	0	;tblptru may be non-zero
 26576   003C12                     	endif
 26577   003C12  0009               	tblrd		*+
 26578   003C14  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26579   003C1A  0009               	tblrd		*+
 26580   003C1C  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26581   003C22  D802               	call	u16548
 26582   003C24  EF1E  F01E         	goto	u16549
 26583   003C28                     u16548:
 26584   003C28  0005               	push	
 26585   003C2A  6EFA               	movwf	pclath,c
 26586   003C2C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26587   003C2E  6EFD               	movwf	tosl,c
 26588   003C30  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26589   003C32  6EFE               	movwf	tosh,c
 26590   003C34  6AFF               	clrf	tosu,c
 26591   003C36  50FA               	movf	pclath,w,c
 26592   003C38  0EFF               	movlw	255
 26593   003C3A  0012               	return		;indir
 26594   003C3C                     u16549:
 26595   003C3C  0100               	movlb	0	; () banked
 26596   003C3E  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26597   003C40                     
 26598                           ; BSR set to: 0
 26599                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 26600   003C40  0772               	decf	SD_SendCmd@longTimeout& (0+255),f,b
 26601   003C42  0E00               	movlw	0
 26602   003C44  5B73               	subwfb	(SD_SendCmd@longTimeout+1)& (0+255),f,b
 26603   003C46  5B74               	subwfb	(SD_SendCmd@longTimeout+2)& (0+255),f,b
 26604   003C48  5B75               	subwfb	(SD_SendCmd@longTimeout+3)& (0+255),f,b
 26605   003C4A                     
 26606                           ; BSR set to: 0
 26607                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 26608   003C4A  517D               	movf	SD_SendCmd@response& (0+255),w,b
 26609   003C4C  A4D8               	btfss	status,2,c
 26610   003C4E  EF2B  F01E         	goto	u16551
 26611   003C52  EF2D  F01E         	goto	u16550
 26612   003C56                     u16551:
 26613   003C56  EF38  F01E         	goto	l14478
 26614   003C5A                     u16550:
 26615   003C5A                     
 26616                           ; BSR set to: 0
 26617   003C5A  5172               	movf	SD_SendCmd@longTimeout& (0+255),w,b
 26618   003C5C  1173               	iorwf	(SD_SendCmd@longTimeout+1)& (0+255),w,b
 26619   003C5E  1174               	iorwf	(SD_SendCmd@longTimeout+2)& (0+255),w,b
 26620   003C60  1175               	iorwf	(SD_SendCmd@longTimeout+3)& (0+255),w,b
 26621   003C62  A4D8               	btfss	status,2,c
 26622   003C64  EF36  F01E         	goto	u16561
 26623   003C68  EF38  F01E         	goto	u16560
 26624   003C6C                     u16561:
 26625   003C6C  EF04  F01E         	goto	l14470
 26626   003C70                     u16560:
 26627   003C70                     l14478:
 26628                           
 26629                           ; BSR set to: 0
 26630                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 26631   003C70  0E00               	movlw	0
 26632   003C72  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26633                           
 26634                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 26635   003C74  EFC5  F01E         	goto	l1762
 26636   003C78                     l14480:
 26637                           
 26638                           ; BSR set to: 0
 26639   003C78  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26640   003C7A  0D04               	mullw	4
 26641   003C7C  0E02               	movlw	2
 26642   003C7E  26F3               	addwf	243,f,c
 26643   003C80  0E00               	movlw	0
 26644   003C82  22F4               	addwfc	244,f,c
 26645   003C84  0E43               	movlw	low _sdmmc_cmdtable
 26646   003C86  24F3               	addwf	243,w,c
 26647   003C88  6EF6               	movwf	tblptrl,c
 26648   003C8A  0EFF               	movlw	high _sdmmc_cmdtable
 26649   003C8C  20F4               	addwfc	244,w,c
 26650   003C8E  6EF7               	movwf	tblptrh,c
 26651   003C90                     	if	1	;There are 3 active tblptr bytes
 26652   003C90  6AF8               	clrf	tblptru,c
 26653   003C92  0E00               	movlw	low (__mediumconst shr (0+16))
 26654   003C94  22F8               	addwfc	tblptru,f,c
 26655   003C96                     	endif
 26656   003C96  0008               	tblrd		*
 26657   003C98  50F5               	movf	tablat,w,c
 26658   003C9A  0A04               	xorlw	4
 26659   003C9C  A4D8               	btfss	status,2,c
 26660   003C9E  EF53  F01E         	goto	u16571
 26661   003CA2  EF55  F01E         	goto	u16570
 26662   003CA6                     u16571:
 26663   003CA6  EFC5  F01E         	goto	l1762
 26664   003CAA                     u16570:
 26665   003CAA                     
 26666                           ; BSR set to: 0
 26667                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 26668   003CAA  0E97               	movlw	low (_spiMaster+4)
 26669   003CAC  6EF6               	movwf	tblptrl,c
 26670   003CAE  0EFF               	movlw	high (_spiMaster+4)
 26671   003CB0  6EF7               	movwf	tblptrh,c
 26672   003CB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26673   003CB2  6AF8               	clrf	tblptru,c
 26674   003CB4                     	endif
 26675   003CB4                     	if	0	;tblptru may be non-zero
 26676   003CB4                     	endif
 26677   003CB4  0009               	tblrd		*+
 26678   003CB6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26679   003CBC  0009               	tblrd		*+
 26680   003CBE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26681   003CC4  D802               	call	u16588
 26682   003CC6  EF6F  F01E         	goto	u16589
 26683   003CCA                     u16588:
 26684   003CCA  0005               	push	
 26685   003CCC  6EFA               	movwf	pclath,c
 26686   003CCE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26687   003CD0  6EFD               	movwf	tosl,c
 26688   003CD2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26689   003CD4  6EFE               	movwf	tosh,c
 26690   003CD6  6AFF               	clrf	tosu,c
 26691   003CD8  50FA               	movf	pclath,w,c
 26692   003CDA  0EFF               	movlw	255
 26693   003CDC  0012               	return		;indir
 26694   003CDE                     u16589:
 26695   003CDE  0100               	movlb	0	; () banked
 26696   003CE0  6F81               	movwf	(SD_SendCmd@response+4)& (0+255),b
 26697                           
 26698                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26699   003CE2  0E97               	movlw	low (_spiMaster+4)
 26700   003CE4  6EF6               	movwf	tblptrl,c
 26701   003CE6  0EFF               	movlw	high (_spiMaster+4)
 26702   003CE8  6EF7               	movwf	tblptrh,c
 26703   003CEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26704   003CEA  6AF8               	clrf	tblptru,c
 26705   003CEC                     	endif
 26706   003CEC                     	if	0	;tblptru may be non-zero
 26707   003CEC                     	endif
 26708   003CEC  0009               	tblrd		*+
 26709   003CEE  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26710   003CF4  0009               	tblrd		*+
 26711   003CF6  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26712   003CFC  D802               	call	u16598
 26713   003CFE  EF8B  F01E         	goto	u16599
 26714   003D02                     u16598:
 26715   003D02  0005               	push	
 26716   003D04  6EFA               	movwf	pclath,c
 26717   003D06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26718   003D08  6EFD               	movwf	tosl,c
 26719   003D0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26720   003D0C  6EFE               	movwf	tosh,c
 26721   003D0E  6AFF               	clrf	tosu,c
 26722   003D10  50FA               	movf	pclath,w,c
 26723   003D12  0EFF               	movlw	255
 26724   003D14  0012               	return		;indir
 26725   003D16                     u16599:
 26726   003D16  0100               	movlb	0	; () banked
 26727   003D18  6F80               	movwf	(SD_SendCmd@response+3)& (0+255),b
 26728                           
 26729                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26730   003D1A  0E97               	movlw	low (_spiMaster+4)
 26731   003D1C  6EF6               	movwf	tblptrl,c
 26732   003D1E  0EFF               	movlw	high (_spiMaster+4)
 26733   003D20  6EF7               	movwf	tblptrh,c
 26734   003D22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26735   003D22  6AF8               	clrf	tblptru,c
 26736   003D24                     	endif
 26737   003D24                     	if	0	;tblptru may be non-zero
 26738   003D24                     	endif
 26739   003D24  0009               	tblrd		*+
 26740   003D26  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26741   003D2C  0009               	tblrd		*+
 26742   003D2E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26743   003D34  D802               	call	u16608
 26744   003D36  EFA7  F01E         	goto	u16609
 26745   003D3A                     u16608:
 26746   003D3A  0005               	push	
 26747   003D3C  6EFA               	movwf	pclath,c
 26748   003D3E  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26749   003D40  6EFD               	movwf	tosl,c
 26750   003D42  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26751   003D44  6EFE               	movwf	tosh,c
 26752   003D46  6AFF               	clrf	tosu,c
 26753   003D48  50FA               	movf	pclath,w,c
 26754   003D4A  0EFF               	movlw	255
 26755   003D4C  0012               	return		;indir
 26756   003D4E                     u16609:
 26757   003D4E  0100               	movlb	0	; () banked
 26758   003D50  6F7F               	movwf	(SD_SendCmd@response+2)& (0+255),b
 26759                           
 26760                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26761   003D52  0E97               	movlw	low (_spiMaster+4)
 26762   003D54  6EF6               	movwf	tblptrl,c
 26763   003D56  0EFF               	movlw	high (_spiMaster+4)
 26764   003D58  6EF7               	movwf	tblptrh,c
 26765   003D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26766   003D5A  6AF8               	clrf	tblptru,c
 26767   003D5C                     	endif
 26768   003D5C                     	if	0	;tblptru may be non-zero
 26769   003D5C                     	endif
 26770   003D5C  0009               	tblrd		*+
 26771   003D5E  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26772   003D64  0009               	tblrd		*+
 26773   003D66  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26774   003D6C  D802               	call	u16618
 26775   003D6E  EFC3  F01E         	goto	u16619
 26776   003D72                     u16618:
 26777   003D72  0005               	push	
 26778   003D74  6EFA               	movwf	pclath,c
 26779   003D76  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26780   003D78  6EFD               	movwf	tosl,c
 26781   003D7A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26782   003D7C  6EFE               	movwf	tosh,c
 26783   003D7E  6AFF               	clrf	tosu,c
 26784   003D80  50FA               	movf	pclath,w,c
 26785   003D82  0EFF               	movlw	255
 26786   003D84  0012               	return		;indir
 26787   003D86                     u16619:
 26788   003D86  0100               	movlb	0	; () banked
 26789   003D88  6F7E               	movwf	(SD_SendCmd@response+1)& (0+255),b
 26790   003D8A                     l1762:
 26791                           
 26792                           ; BSR set to: 0
 26793                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 26794   003D8A  0E97               	movlw	low (_spiMaster+4)
 26795   003D8C  6EF6               	movwf	tblptrl,c
 26796   003D8E  0EFF               	movlw	high (_spiMaster+4)
 26797   003D90  6EF7               	movwf	tblptrh,c
 26798   003D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26799   003D92  6AF8               	clrf	tblptru,c
 26800   003D94                     	endif
 26801   003D94                     	if	0	;tblptru may be non-zero
 26802   003D94                     	endif
 26803   003D94  0009               	tblrd		*+
 26804   003D96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26805   003D9C  0009               	tblrd		*+
 26806   003D9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26807   003DA4  D802               	call	u16628
 26808   003DA6  EFDF  F01E         	goto	u16629
 26809   003DAA                     u16628:
 26810   003DAA  0005               	push	
 26811   003DAC  6EFA               	movwf	pclath,c
 26812   003DAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26813   003DB0  6EFD               	movwf	tosl,c
 26814   003DB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26815   003DB4  6EFE               	movwf	tosh,c
 26816   003DB6  6AFF               	clrf	tosu,c
 26817   003DB8  50FA               	movf	pclath,w,c
 26818   003DBA  0EFF               	movlw	255
 26819   003DBC  0012               	return		;indir
 26820   003DBE                     u16629:
 26821   003DBE                     
 26822                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 26823   003DBE  0100               	movlb	0	; () banked
 26824   003DC0  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26825   003DC2  0D04               	mullw	4
 26826   003DC4  0E03               	movlw	3
 26827   003DC6  26F3               	addwf	243,f,c
 26828   003DC8  0E00               	movlw	0
 26829   003DCA  22F4               	addwfc	244,f,c
 26830   003DCC  0E43               	movlw	low _sdmmc_cmdtable
 26831   003DCE  24F3               	addwf	243,w,c
 26832   003DD0  6EF6               	movwf	tblptrl,c
 26833   003DD2  0EFF               	movlw	high _sdmmc_cmdtable
 26834   003DD4  20F4               	addwfc	244,w,c
 26835   003DD6  6EF7               	movwf	tblptrh,c
 26836   003DD8                     	if	1	;There are 3 active tblptr bytes
 26837   003DD8  6AF8               	clrf	tblptru,c
 26838   003DDA  0E00               	movlw	low (__mediumconst shr (0+16))
 26839   003DDC  22F8               	addwfc	tblptru,f,c
 26840   003DDE                     	endif
 26841   003DDE  0008               	tblrd		*
 26842   003DE0  50F5               	movf	tablat,w,c
 26843   003DE2  0900               	iorlw	0
 26844   003DE4  A4D8               	btfss	status,2,c
 26845   003DE6  EFF7  F01E         	goto	u16631
 26846   003DEA  EFF9  F01E         	goto	u16630
 26847   003DEE                     u16631:
 26848   003DEE  EFFA  F01E         	goto	l14486
 26849   003DF2                     u16630:
 26850   003DF2                     
 26851                           ; BSR set to: 0
 26852   003DF2  8ABA               	bsf	186,5,c	;volatile
 26853   003DF4                     l14486:
 26854                           
 26855                           ; BSR set to: 0
 26856                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 26857   003DF4  EE20  F07D         	lfsr	2,SD_SendCmd@response
 26858   003DF8  EE00  F06B         	lfsr	0,?_SD_SendCmd
 26859   003DFC  0E04               	movlw	4
 26860   003DFE                     u16641:
 26861   003DFE  006F FF6F FFEB     	movff	plusw2,plusw0
 26862   003E04  06E8               	decf	wreg,f,c
 26863   003E06  E2FB               	bc	u16641
 26864   003E08                     
 26865                           ; BSR set to: 0
 26866   003E08  0012               	return		;funcret
 26867   003E0A                     __end_of_SD_SendCmd:
 26868                           	callstack 0
 26869                           
 26870 ;; *************** function _memcpy *****************
 26871 ;; Defined at:
 26872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 26873 ;; Parameters:    Size  Location     Type
 26874 ;;  d1              2    0[BANK0 ] PTR void 
 26875 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26876 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26877 ;;  s1              2    2[BANK0 ] PTR const void 
 26878 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 26879 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26880 ;;  n               2    4[BANK0 ] unsigned int 
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 26883 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 26884 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26885 ;;  d               2    7[BANK0 ] PTR unsigned char 
 26886 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26887 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26888 ;;  tmp             1    6[BANK0 ] unsigned char 
 26889 ;; Return value:  Size  Location     Type
 26890 ;;                  2    0[BANK0 ] PTR void 
 26891 ;; Registers used:
 26892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26893 ;; Tracked objects:
 26894 ;;		On entry : 0/0
 26895 ;;		On exit  : 0/0
 26896 ;;		Unchanged: 0/0
 26897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26898 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26899 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26901 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26902 ;;Total ram usage:       11 bytes
 26903 ;; Hardware stack levels used: 1
 26904 ;; Hardware stack levels required when called: 5
 26905 ;; This function calls:
 26906 ;;		Nothing
 26907 ;; This function is called by:
 26908 ;;		_can_send
 26909 ;;		_srb_push
 26910 ;;		_srb_pop
 26911 ;;		_SD_SendCmd
 26912 ;;		_srb_peek
 26913 ;;		_build_state_est_data_msg
 26914 ;;		_get_state_est_data
 26915 ;; This function uses a non-reentrant model
 26916 ;;
 26917                           
 26918                           	psect	text95
 26919   009CA0                     __ptext95:
 26920                           	callstack 0
 26921   009CA0                     _memcpy:
 26922                           	callstack 23
 26923   009CA0  C062  F069         	movff	memcpy@s1,memcpy@s
 26924   009CA4  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 26925   009CA8  C060  F067         	movff	memcpy@d1,memcpy@d
 26926   009CAC  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 26927   009CB0  EF6F  F04E         	goto	l14412
 26928   009CB4                     l14404:
 26929                           
 26930                           ; BSR set to: 0
 26931   009CB4  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 26932   009CBA  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 26933   009CC0  50DF               	movf	indf2,w,c
 26934   009CC2  6F66               	movwf	memcpy@tmp& (0+255),b
 26935   009CC4                     
 26936                           ; BSR set to: 0
 26937   009CC4  4B69               	infsnz	memcpy@s& (0+255),f,b
 26938   009CC6  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 26939   009CC8                     
 26940                           ; BSR set to: 0
 26941   009CC8  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 26942   009CCE  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 26943   009CD4  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 26944   009CDA                     
 26945                           ; BSR set to: 0
 26946   009CDA  4B67               	infsnz	memcpy@d& (0+255),f,b
 26947   009CDC  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 26948   009CDE                     l14412:
 26949   009CDE  0100               	movlb	0	; () banked
 26950   009CE0  0764               	decf	memcpy@n& (0+255),f,b
 26951   009CE2  A0D8               	btfss	status,0,c
 26952   009CE4  0765               	decf	(memcpy@n+1)& (0+255),f,b
 26953   009CE6  2964               	incf	memcpy@n& (0+255),w,b
 26954   009CE8  E106               	bnz	u16371
 26955   009CEA  2965               	incf	(memcpy@n+1)& (0+255),w,b
 26956   009CEC  A4D8               	btfss	status,2,c
 26957   009CEE  EF7B  F04E         	goto	u16371
 26958   009CF2  EF7D  F04E         	goto	u16370
 26959   009CF6                     u16371:
 26960   009CF6  EF5A  F04E         	goto	l14404
 26961   009CFA                     u16370:
 26962   009CFA                     
 26963                           ; BSR set to: 0
 26964   009CFA  0012               	return		;funcret
 26965   009CFC                     __end_of_memcpy:
 26966                           	callstack 0
 26967                           
 26968 ;; *************** function _SPI1_ExchangeByte *****************
 26969 ;; Defined at:
 26970 ;;		line 101 in file "mcc_generated_files/spi1.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;  data            1    wreg     unsigned char 
 26973 ;; Auto vars:     Size  Location     Type
 26974 ;;  data            1    0[BANK0 ] unsigned char 
 26975 ;; Return value:  Size  Location     Type
 26976 ;;                  1    wreg      unsigned char 
 26977 ;; Registers used:
 26978 ;;		wreg, status,2
 26979 ;; Tracked objects:
 26980 ;;		On entry : 0/0
 26981 ;;		On exit  : 0/0
 26982 ;;		Unchanged: 0/0
 26983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26988 ;;Total ram usage:        1 bytes
 26989 ;; Hardware stack levels used: 1
 26990 ;; Hardware stack levels required when called: 5
 26991 ;; This function calls:
 26992 ;;		Nothing
 26993 ;; This function is called by:
 26994 ;;		_SPI1_WriteBlock
 26995 ;;		_SPI1_ReadBlock
 26996 ;;		_SD_SendCmd
 26997 ;;		_SD_SPI_AsyncWriteTasks
 26998 ;;		_SD_SPI_AsyncReadTasks
 26999 ;;		_SD_SPI_DelayMilliseconds
 27000 ;;		_SD_SPI_MediaInitialize
 27001 ;; This function uses a non-reentrant model
 27002 ;;
 27003                           
 27004                           	psect	text96
 27005   00A27C                     __ptext96:
 27006                           	callstack 0
 27007   00A27C                     _SPI1_ExchangeByte:
 27008                           	callstack 20
 27009                           
 27010                           ; BSR set to: 0
 27011                           ;incstack = 0
 27012                           ;SPI1_ExchangeByte@data stored from wreg
 27013   00A27C  0100               	movlb	0	; () banked
 27014   00A27E  6F60               	movwf	SPI1_ExchangeByte@data& (0+255),b
 27015   00A280                     
 27016                           ;mcc_generated_files/spi1.c: 101: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 102: {;mcc_generated_files/spi1.c: 103:     SPI1TCNTL = 1;
 27017   00A280  0E01               	movlw	1
 27018   00A282  013D               	movlb	61	; () banked
 27019   00A284  6F12               	movwf	18,b	;volatile
 27020   00A286                     
 27021                           ; BSR set to: 61
 27022                           ;mcc_generated_files/spi1.c: 104:     SPI1TXB = data;
 27023   00A286  0060  F183  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 27024   00A28C                     l1913:
 27025   00A28C  0139               	movlb	57	; () banked
 27026   00A28E  A9A2               	btfss	162,4,b	;volatile
 27027   00A290  EF4C  F051         	goto	u16381
 27028   00A294  EF4E  F051         	goto	u16380
 27029   00A298                     u16381:
 27030   00A298  EF46  F051         	goto	l1913
 27031   00A29C                     u16380:
 27032   00A29C                     
 27033                           ; BSR set to: 57
 27034                           ;mcc_generated_files/spi1.c: 106:     return SPI1RXB;
 27035   00A29C  013D               	movlb	61	; () banked
 27036   00A29E  5110               	movf	16,w,b	;volatile
 27037   00A2A0                     
 27038                           ; BSR set to: 61
 27039   00A2A0  0012               	return		;funcret
 27040   00A2A2                     __end_of_SPI1_ExchangeByte:
 27041                           	callstack 0
 27042                           
 27043 ;; *************** function _SDFAST_open *****************
 27044 ;; Defined at:
 27045 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 27046 ;; Parameters:    Size  Location     Type
 27047 ;;		None
 27048 ;; Auto vars:     Size  Location     Type
 27049 ;;		None
 27050 ;; Return value:  Size  Location     Type
 27051 ;;                  1    wreg      _Bool 
 27052 ;; Registers used:
 27053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27054 ;; Tracked objects:
 27055 ;;		On entry : 0/0
 27056 ;;		On exit  : 0/0
 27057 ;;		Unchanged: 0/0
 27058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27063 ;;Total ram usage:        0 bytes
 27064 ;; Hardware stack levels used: 1
 27065 ;; Hardware stack levels required when called: 6
 27066 ;; This function calls:
 27067 ;;		_SPI1_Open
 27068 ;; This function is called by:
 27069 ;;		_spi_master_open
 27070 ;;		_SD_SPI_SectorWrite
 27071 ;;		_SD_SPI_SectorRead
 27072 ;;		_SD_SPI_MediaInitialize
 27073 ;; This function uses a non-reentrant model
 27074 ;;
 27075                           
 27076                           	psect	text97
 27077   00A454                     __ptext97:
 27078                           	callstack 0
 27079   00A454                     _SDFAST_open:
 27080                           	callstack 20
 27081   00A454                     
 27082                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 27083   00A454  0E00               	movlw	0
 27084   00A456  EC77  F044         	call	_SPI1_Open
 27085   00A45A  0012               	return		;funcret
 27086   00A45C                     __end_of_SDFAST_open:
 27087                           	callstack 0
 27088                           
 27089 ;; *************** function _SDSLOW_open *****************
 27090 ;; Defined at:
 27091 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 27092 ;; Parameters:    Size  Location     Type
 27093 ;;		None
 27094 ;; Auto vars:     Size  Location     Type
 27095 ;;		None
 27096 ;; Return value:  Size  Location     Type
 27097 ;;                  1    wreg      _Bool 
 27098 ;; Registers used:
 27099 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27100 ;; Tracked objects:
 27101 ;;		On entry : 0/0
 27102 ;;		On exit  : 0/0
 27103 ;;		Unchanged: 0/0
 27104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27109 ;;Total ram usage:        0 bytes
 27110 ;; Hardware stack levels used: 1
 27111 ;; Hardware stack levels required when called: 6
 27112 ;; This function calls:
 27113 ;;		_SPI1_Open
 27114 ;; This function is called by:
 27115 ;;		_spi_master_open
 27116 ;;		_SD_SPI_SectorWrite
 27117 ;;		_SD_SPI_SectorRead
 27118 ;;		_SD_SPI_MediaInitialize
 27119 ;; This function uses a non-reentrant model
 27120 ;;
 27121                           
 27122                           	psect	text98
 27123   00A45C                     __ptext98:
 27124                           	callstack 0
 27125   00A45C                     _SDSLOW_open:
 27126                           	callstack 20
 27127   00A45C                     
 27128                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 27129   00A45C  0E01               	movlw	1
 27130   00A45E  EC77  F044         	call	_SPI1_Open
 27131   00A462  0012               	return		;funcret
 27132   00A464                     __end_of_SDSLOW_open:
 27133                           	callstack 0
 27134                           
 27135 ;; *************** function _SPI1_Open *****************
 27136 ;; Defined at:
 27137 ;;		line 81 in file "mcc_generated_files/spi1.c"
 27138 ;; Parameters:    Size  Location     Type
 27139 ;;  spi1UniqueCo    1    wreg     enum E358
 27140 ;; Auto vars:     Size  Location     Type
 27141 ;;  spi1UniqueCo    1    1[BANK0 ] enum E358
 27142 ;; Return value:  Size  Location     Type
 27143 ;;                  1    wreg      _Bool 
 27144 ;; Registers used:
 27145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27146 ;; Tracked objects:
 27147 ;;		On entry : 0/0
 27148 ;;		On exit  : 0/0
 27149 ;;		Unchanged: 0/0
 27150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27154 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27155 ;;Total ram usage:        2 bytes
 27156 ;; Hardware stack levels used: 1
 27157 ;; Hardware stack levels required when called: 5
 27158 ;; This function calls:
 27159 ;;		Nothing
 27160 ;; This function is called by:
 27161 ;;		_SDFAST_open
 27162 ;;		_SDSLOW_open
 27163 ;; This function uses a non-reentrant model
 27164 ;;
 27165                           
 27166                           	psect	text99
 27167   0088EE                     __ptext99:
 27168                           	callstack 0
 27169   0088EE                     _SPI1_Open:
 27170                           	callstack 20
 27171                           
 27172                           ;incstack = 0
 27173                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 27174   0088EE  0100               	movlb	0	; () banked
 27175   0088F0  6F61               	movwf	SPI1_Open@spi1UniqueConfiguration& (0+255),b
 27176   0088F2                     
 27177                           ;mcc_generated_files/spi1.c: 81: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 82: {;mcc_generated_files/spi1.c: 83:     if(!SPI1CON0bits.EN
      +                          )
 27178   0088F2  013D               	movlb	61	; () banked
 27179   0088F4  BF14               	btfsc	20,7,b	;volatile
 27180   0088F6  EF7F  F044         	goto	u16391
 27181   0088FA  EF81  F044         	goto	u16390
 27182   0088FE                     u16391:
 27183   0088FE  EFEC  F044         	goto	l14428
 27184   008902                     u16390:
 27185   008902                     
 27186                           ; BSR set to: 61
 27187                           ;mcc_generated_files/spi1.c: 84:     {;mcc_generated_files/spi1.c: 85:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
 27188   008902  0100               	movlb	0	; () banked
 27189   008904  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 27190   008906  0D05               	mullw	5
 27191   008908  0EBB               	movlw	low _spi1_configuration
 27192   00890A  24F3               	addwf	243,w,c
 27193   00890C  6EF6               	movwf	tblptrl,c
 27194   00890E  0EFF               	movlw	high _spi1_configuration
 27195   008910  20F4               	addwfc	244,w,c
 27196   008912  6EF7               	movwf	tblptrh,c
 27197   008914                     	if	1	;There are 3 active tblptr bytes
 27198   008914  6AF8               	clrf	tblptru,c
 27199   008916  0E00               	movlw	low (__mediumconst shr (0+16))
 27200   008918  22F8               	addwfc	tblptru,f,c
 27201   00891A                     	endif
 27202   00891A  0008               	tblrd		*
 27203   00891C  006F FFD7 FD14     	movff	tablat,15636	;volatile
 27204                           
 27205                           ;mcc_generated_files/spi1.c: 86:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 27206   008922  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 27207   008924  0D05               	mullw	5
 27208   008926  0E01               	movlw	1
 27209   008928  26F3               	addwf	243,f,c
 27210   00892A  0E00               	movlw	0
 27211   00892C  22F4               	addwfc	244,f,c
 27212   00892E  0EBB               	movlw	low _spi1_configuration
 27213   008930  24F3               	addwf	243,w,c
 27214   008932  6EF6               	movwf	tblptrl,c
 27215   008934  0EFF               	movlw	high _spi1_configuration
 27216   008936  20F4               	addwfc	244,w,c
 27217   008938  6EF7               	movwf	tblptrh,c
 27218   00893A                     	if	1	;There are 3 active tblptr bytes
 27219   00893A  6AF8               	clrf	tblptru,c
 27220   00893C  0E00               	movlw	low (__mediumconst shr (0+16))
 27221   00893E  22F8               	addwfc	tblptru,f,c
 27222   008940                     	endif
 27223   008940  0008               	tblrd		*
 27224   008942  006F FFD7 FD15     	movff	tablat,15637	;volatile
 27225                           
 27226                           ;mcc_generated_files/spi1.c: 87:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
 27227   008948  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 27228   00894A  0D05               	mullw	5
 27229   00894C  0E02               	movlw	2
 27230   00894E  26F3               	addwf	243,f,c
 27231   008950  0E00               	movlw	0
 27232   008952  22F4               	addwfc	244,f,c
 27233   008954  0EBB               	movlw	low _spi1_configuration
 27234   008956  24F3               	addwf	243,w,c
 27235   008958  6EF6               	movwf	tblptrl,c
 27236   00895A  0EFF               	movlw	high _spi1_configuration
 27237   00895C  20F4               	addwfc	244,w,c
 27238   00895E  6EF7               	movwf	tblptrh,c
 27239   008960                     	if	1	;There are 3 active tblptr bytes
 27240   008960  6AF8               	clrf	tblptru,c
 27241   008962  0E00               	movlw	low (__mediumconst shr (0+16))
 27242   008964  22F8               	addwfc	tblptru,f,c
 27243   008966                     	endif
 27244   008966  0008               	tblrd		*
 27245   008968  50F5               	movf	tablat,w,c
 27246   00896A  0903               	iorlw	3
 27247   00896C  013D               	movlb	61	; () banked
 27248   00896E  6F16               	movwf	22,b	;volatile
 27249                           
 27250                           ;mcc_generated_files/spi1.c: 88:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
 27251   008970  0100               	movlb	0	; () banked
 27252   008972  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 27253   008974  0D05               	mullw	5
 27254   008976  0E03               	movlw	3
 27255   008978  26F3               	addwf	243,f,c
 27256   00897A  0E00               	movlw	0
 27257   00897C  22F4               	addwfc	244,f,c
 27258   00897E  0EBB               	movlw	low _spi1_configuration
 27259   008980  24F3               	addwf	243,w,c
 27260   008982  6EF6               	movwf	tblptrl,c
 27261   008984  0EFF               	movlw	high _spi1_configuration
 27262   008986  20F4               	addwfc	244,w,c
 27263   008988  6EF7               	movwf	tblptrh,c
 27264   00898A                     	if	1	;There are 3 active tblptr bytes
 27265   00898A  6AF8               	clrf	tblptru,c
 27266   00898C  0E00               	movlw	low (__mediumconst shr (0+16))
 27267   00898E  22F8               	addwfc	tblptru,f,c
 27268   008990                     	endif
 27269   008990  0008               	tblrd		*
 27270   008992  006F FFD7 FD19     	movff	tablat,15641	;volatile
 27271                           
 27272                           ;mcc_generated_files/spi1.c: 89:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 27273   008998  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 27274   00899A  0D05               	mullw	5
 27275   00899C  0E04               	movlw	4
 27276   00899E  26F3               	addwf	243,f,c
 27277   0089A0  0E00               	movlw	0
 27278   0089A2  22F4               	addwfc	244,f,c
 27279   0089A4  0EBB               	movlw	low _spi1_configuration
 27280   0089A6  24F3               	addwf	243,w,c
 27281   0089A8  6EF6               	movwf	tblptrl,c
 27282   0089AA  0EFF               	movlw	high _spi1_configuration
 27283   0089AC  20F4               	addwfc	244,w,c
 27284   0089AE  6EF7               	movwf	tblptrh,c
 27285   0089B0                     	if	1	;There are 3 active tblptr bytes
 27286   0089B0  6AF8               	clrf	tblptru,c
 27287   0089B2  0E00               	movlw	low (__mediumconst shr (0+16))
 27288   0089B4  22F8               	addwfc	tblptru,f,c
 27289   0089B6                     	endif
 27290   0089B6  0008               	tblrd		*
 27291   0089B8  006F FFD4  F060    	movff	tablat,??_SPI1_Open
 27292   0089BE  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 27293   0089C0  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 27294   0089C2  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 27295   0089C4  50C4               	movf	196,w,c	;volatile
 27296   0089C6  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 27297   0089C8  0BF7               	andlw	-9
 27298   0089CA  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 27299   0089CC  6EC4               	movwf	196,c	;volatile
 27300   0089CE                     
 27301                           ; BSR set to: 0
 27302                           ;mcc_generated_files/spi1.c: 90:         SPI1CON0bits.EN = 1;
 27303   0089CE  013D               	movlb	61	; () banked
 27304   0089D0  8F14               	bsf	20,7,b	;volatile
 27305   0089D2                     
 27306                           ; BSR set to: 61
 27307                           ;mcc_generated_files/spi1.c: 91:         return 1;
 27308   0089D2  0E01               	movlw	1
 27309   0089D4  EFED  F044         	goto	l1907
 27310   0089D8                     l14428:
 27311                           
 27312                           ; BSR set to: 61
 27313                           ;mcc_generated_files/spi1.c: 93:     return 0;
 27314   0089D8  0E00               	movlw	0
 27315   0089DA                     l1907:
 27316                           
 27317                           ; BSR set to: 61
 27318   0089DA  0012               	return		;funcret
 27319   0089DC                     __end_of_SPI1_Open:
 27320                           	callstack 0
 27321                           
 27322 ;; *************** function _mem_cmp *****************
 27323 ;; Defined at:
 27324 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 27325 ;; Parameters:    Size  Location     Type
 27326 ;;  dst             2    0[BANK0 ] PTR const void 
 27327 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 27328 ;;  src             2    2[BANK0 ] PTR const void 
 27329 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 27330 ;;		 -> STR_4(4), 
 27331 ;;  cnt             2    4[BANK0 ] unsigned int 
 27332 ;; Auto vars:     Size  Location     Type
 27333 ;;  r               2   12[BANK0 ] int 
 27334 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 27335 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 27336 ;;		 -> STR_4(4), 
 27337 ;;  d               2    8[BANK0 ] PTR const unsigned char 
 27338 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 27339 ;; Return value:  Size  Location     Type
 27340 ;;                  2    0[BANK0 ] int 
 27341 ;; Registers used:
 27342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27343 ;; Tracked objects:
 27344 ;;		On entry : 0/0
 27345 ;;		On exit  : 0/0
 27346 ;;		Unchanged: 0/0
 27347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27348 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27349 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27351 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27352 ;;Total ram usage:       14 bytes
 27353 ;; Hardware stack levels used: 1
 27354 ;; Hardware stack levels required when called: 5
 27355 ;; This function calls:
 27356 ;;		Nothing
 27357 ;; This function is called by:
 27358 ;;		_dir_find
 27359 ;;		_check_fs
 27360 ;; This function uses a non-reentrant model
 27361 ;;
 27362                           
 27363                           	psect	text100
 27364   009284                     __ptext100:
 27365                           	callstack 0
 27366   009284                     _mem_cmp:
 27367                           	callstack 21
 27368   009284                     
 27369                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 27370   009284  C060  F068         	movff	mem_cmp@dst,mem_cmp@d
 27371   009288  C061  F069         	movff	mem_cmp@dst+1,mem_cmp@d+1
 27372   00928C  C062  F06A         	movff	mem_cmp@src,mem_cmp@s
 27373   009290  C063  F06B         	movff	mem_cmp@src+1,mem_cmp@s+1
 27374   009294                     l15578:
 27375                           
 27376                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 27377   009294  0060  F1A3  FFD9   	movff	mem_cmp@d,fsr2l
 27378   00929A  0060  F1A7  FFDA   	movff	mem_cmp@d+1,fsr2h
 27379   0092A0  50DF               	movf	indf2,w,c
 27380   0092A2  0100               	movlb	0	; () banked
 27381   0092A4  6F66               	movwf	??_mem_cmp& (0+255),b
 27382   0092A6  0060  F1AB  FFF6   	movff	mem_cmp@s,tblptrl
 27383   0092AC  0060  F1AF  FFF7   	movff	mem_cmp@s+1,tblptrh
 27384   0092B2  0E00               	movlw	low (__mediumconst shr (0+16))
 27385   0092B4  6EF8               	movwf	tblptru,c
 27386   0092B6  0E0F               	movlw	(high __ramtop+-1)
 27387   0092B8  64F7               	cpfsgt	tblptrh,c
 27388   0092BA  D003               	bra	u18587
 27389   0092BC  0008               	tblrd		*
 27390   0092BE  50F5               	movf	tablat,w,c
 27391   0092C0  D007               	bra	u18580
 27392   0092C2                     u18587:
 27393   0092C2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 27394   0092C8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 27395   0092CE  50EF               	movf	indf0,w,c
 27396   0092D0                     u18580:
 27397   0092D0  0100               	movlb	0	; () banked
 27398   0092D2  6F67               	movwf	(??_mem_cmp+1)& (0+255),b
 27399   0092D4  5167               	movf	(??_mem_cmp+1)& (0+255),w,b
 27400   0092D6  5D66               	subwf	??_mem_cmp& (0+255),w,b
 27401   0092D8  6F6C               	movwf	mem_cmp@r& (0+255),b
 27402   0092DA  6B6D               	clrf	(mem_cmp@r+1)& (0+255),b
 27403   0092DC  A0D8               	btfss	status,0,c
 27404   0092DE  076D               	decf	(mem_cmp@r+1)& (0+255),f,b
 27405   0092E0                     
 27406                           ; BSR set to: 0
 27407   0092E0  4B6A               	infsnz	mem_cmp@s& (0+255),f,b
 27408   0092E2  2B6B               	incf	(mem_cmp@s+1)& (0+255),f,b
 27409   0092E4                     
 27410                           ; BSR set to: 0
 27411   0092E4  4B68               	infsnz	mem_cmp@d& (0+255),f,b
 27412   0092E6  2B69               	incf	(mem_cmp@d+1)& (0+255),f,b
 27413   0092E8                     
 27414                           ; BSR set to: 0
 27415                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 27416   0092E8  0764               	decf	mem_cmp@cnt& (0+255),f,b
 27417   0092EA  A0D8               	btfss	status,0,c
 27418   0092EC  0765               	decf	(mem_cmp@cnt+1)& (0+255),f,b
 27419   0092EE  5164               	movf	mem_cmp@cnt& (0+255),w,b
 27420   0092F0  1165               	iorwf	(mem_cmp@cnt+1)& (0+255),w,b
 27421   0092F2  B4D8               	btfsc	status,2,c
 27422   0092F4  EF7E  F049         	goto	u18591
 27423   0092F8  EF80  F049         	goto	u18590
 27424   0092FC                     u18591:
 27425   0092FC  EF89  F049         	goto	l878
 27426   009300                     u18590:
 27427   009300                     
 27428                           ; BSR set to: 0
 27429   009300  516C               	movf	mem_cmp@r& (0+255),w,b
 27430   009302  116D               	iorwf	(mem_cmp@r+1)& (0+255),w,b
 27431   009304  B4D8               	btfsc	status,2,c
 27432   009306  EF87  F049         	goto	u18601
 27433   00930A  EF89  F049         	goto	u18600
 27434   00930E                     u18601:
 27435   00930E  EF4A  F049         	goto	l15578
 27436   009312                     u18600:
 27437   009312                     l878:
 27438                           
 27439                           ; BSR set to: 0
 27440                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 27441   009312  C06C  F060         	movff	mem_cmp@r,?_mem_cmp
 27442   009316  C06D  F061         	movff	mem_cmp@r+1,?_mem_cmp+1
 27443   00931A                     
 27444                           ; BSR set to: 0
 27445   00931A  0012               	return		;funcret
 27446   00931C                     __end_of_mem_cmp:
 27447                           	callstack 0
 27448                           
 27449 ;; *************** function _ld_word *****************
 27450 ;; Defined at:
 27451 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 27452 ;; Parameters:    Size  Location     Type
 27453 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 27454 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 27455 ;; Auto vars:     Size  Location     Type
 27456 ;;  rv              2    5[BANK0 ] unsigned short 
 27457 ;; Return value:  Size  Location     Type
 27458 ;;                  2    0[BANK0 ] unsigned short 
 27459 ;; Registers used:
 27460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27461 ;; Tracked objects:
 27462 ;;		On entry : 0/0
 27463 ;;		On exit  : 0/0
 27464 ;;		Unchanged: 0/0
 27465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27468 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27469 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27470 ;;Total ram usage:        7 bytes
 27471 ;; Hardware stack levels used: 1
 27472 ;; Hardware stack levels required when called: 5
 27473 ;; This function calls:
 27474 ;;		Nothing
 27475 ;; This function is called by:
 27476 ;;		_get_fat
 27477 ;;		_ld_clust
 27478 ;;		_check_fs
 27479 ;;		_find_volume
 27480 ;; This function uses a non-reentrant model
 27481 ;;
 27482                           
 27483                           	psect	text101
 27484   009FC6                     __ptext101:
 27485                           	callstack 0
 27486   009FC6                     _ld_word:
 27487                           	callstack 21
 27488   009FC6                     
 27489                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 27490   009FC6  0100               	movlb	0	; () banked
 27491   009FC8  EE20 F001          	lfsr	2,1
 27492   009FCC  5160               	movf	ld_word@ptr& (0+255),w,b
 27493   009FCE  26D9               	addwf	fsr2l,f,c
 27494   009FD0  5161               	movf	(ld_word@ptr+1)& (0+255),w,b
 27495   009FD2  22DA               	addwfc	fsr2h,f,c
 27496   009FD4  50DF               	movf	indf2,w,c
 27497   009FD6  6F62               	movwf	??_ld_word& (0+255),b
 27498   009FD8  5162               	movf	??_ld_word& (0+255),w,b
 27499   009FDA  6F65               	movwf	ld_word@rv& (0+255),b
 27500   009FDC  6B66               	clrf	(ld_word@rv+1)& (0+255),b
 27501                           
 27502                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 27503   009FDE  0060  F183  FFD9   	movff	ld_word@ptr,fsr2l
 27504   009FE4  0060  F187  FFDA   	movff	ld_word@ptr+1,fsr2h
 27505   009FEA  50DF               	movf	indf2,w,c
 27506   009FEC  6F62               	movwf	??_ld_word& (0+255),b
 27507   009FEE  5165               	movf	ld_word@rv& (0+255),w,b
 27508   009FF0  6F63               	movwf	(??_ld_word+1)& (0+255),b
 27509   009FF2  5162               	movf	??_ld_word& (0+255),w,b
 27510   009FF4  6F65               	movwf	ld_word@rv& (0+255),b
 27511   009FF6  C063  F066         	movff	??_ld_word+1,ld_word@rv+1
 27512   009FFA                     
 27513                           ; BSR set to: 0
 27514                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 27515   009FFA  C065  F060         	movff	ld_word@rv,?_ld_word
 27516   009FFE  C066  F061         	movff	ld_word@rv+1,?_ld_word+1
 27517   00A002                     
 27518                           ; BSR set to: 0
 27519   00A002  0012               	return		;funcret
 27520   00A004                     __end_of_ld_word:
 27521                           	callstack 0
 27522                           
 27523 ;; *************** function ___lldiv *****************
 27524 ;; Defined at:
 27525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 27526 ;; Parameters:    Size  Location     Type
 27527 ;;  dividend        4    0[BANK0 ] unsigned long 
 27528 ;;  divisor         4    4[BANK0 ] unsigned long 
 27529 ;; Auto vars:     Size  Location     Type
 27530 ;;  quotient        4    8[BANK0 ] unsigned long 
 27531 ;;  counter         1   12[BANK0 ] unsigned char 
 27532 ;; Return value:  Size  Location     Type
 27533 ;;                  4    0[BANK0 ] unsigned long 
 27534 ;; Registers used:
 27535 ;;		wreg, status,2, status,0
 27536 ;; Tracked objects:
 27537 ;;		On entry : 0/0
 27538 ;;		On exit  : 0/0
 27539 ;;		Unchanged: 0/0
 27540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27542 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27544 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27545 ;;Total ram usage:       13 bytes
 27546 ;; Hardware stack levels used: 1
 27547 ;; Hardware stack levels required when called: 5
 27548 ;; This function calls:
 27549 ;;		Nothing
 27550 ;; This function is called by:
 27551 ;;		_find_volume
 27552 ;;		_vfpfcnvrt
 27553 ;;		_f_printf
 27554 ;; This function uses a non-reentrant model
 27555 ;;
 27556                           
 27557                           	psect	text102
 27558   0091DE                     __ptext102:
 27559                           	callstack 0
 27560   0091DE                     ___lldiv:
 27561                           	callstack 21
 27562   0091DE  0E00               	movlw	0
 27563   0091E0  0100               	movlb	0	; () banked
 27564   0091E2  6F68               	movwf	___lldiv@quotient& (0+255),b
 27565   0091E4  0E00               	movlw	0
 27566   0091E6  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 27567   0091E8  0E00               	movlw	0
 27568   0091EA  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27569   0091EC  0E00               	movlw	0
 27570   0091EE  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27571   0091F0                     
 27572                           ; BSR set to: 0
 27573   0091F0  5164               	movf	___lldiv@divisor& (0+255),w,b
 27574   0091F2  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27575   0091F4  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27576   0091F6  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27577   0091F8  B4D8               	btfsc	status,2,c
 27578   0091FA  EF01  F049         	goto	u18931
 27579   0091FE  EF03  F049         	goto	u18930
 27580   009202                     u18931:
 27581   009202  EF39  F049         	goto	l2295
 27582   009206                     u18930:
 27583   009206                     
 27584                           ; BSR set to: 0
 27585   009206  0E01               	movlw	1
 27586   009208  6F6C               	movwf	___lldiv@counter& (0+255),b
 27587   00920A  EF0D  F049         	goto	l15802
 27588   00920E                     l15800:
 27589                           
 27590                           ; BSR set to: 0
 27591   00920E  90D8               	bcf	status,0,c
 27592   009210  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 27593   009212  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 27594   009214  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 27595   009216  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 27596   009218  2B6C               	incf	___lldiv@counter& (0+255),f,b
 27597   00921A                     l15802:
 27598                           
 27599                           ; BSR set to: 0
 27600   00921A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 27601   00921C  EF12  F049         	goto	u18941
 27602   009220  EF14  F049         	goto	u18940
 27603   009224                     u18941:
 27604   009224  EF07  F049         	goto	l15800
 27605   009228                     u18940:
 27606   009228                     l15804:
 27607                           
 27608                           ; BSR set to: 0
 27609   009228  90D8               	bcf	status,0,c
 27610   00922A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 27611   00922C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 27612   00922E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 27613   009230  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 27614   009232                     
 27615                           ; BSR set to: 0
 27616   009232  5164               	movf	___lldiv@divisor& (0+255),w,b
 27617   009234  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 27618   009236  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27619   009238  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 27620   00923A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27621   00923C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 27622   00923E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27623   009240  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 27624   009242  A0D8               	btfss	status,0,c
 27625   009244  EF26  F049         	goto	u18951
 27626   009248  EF28  F049         	goto	u18950
 27627   00924C                     u18951:
 27628   00924C  EF31  F049         	goto	l15812
 27629   009250                     u18950:
 27630   009250                     
 27631                           ; BSR set to: 0
 27632   009250  5164               	movf	___lldiv@divisor& (0+255),w,b
 27633   009252  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 27634   009254  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27635   009256  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 27636   009258  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27637   00925A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 27638   00925C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27639   00925E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 27640   009260                     
 27641                           ; BSR set to: 0
 27642   009260  8168               	bsf	___lldiv@quotient& (0+255),0,b
 27643   009262                     l15812:
 27644                           
 27645                           ; BSR set to: 0
 27646   009262  90D8               	bcf	status,0,c
 27647   009264  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 27648   009266  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 27649   009268  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 27650   00926A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 27651   00926C                     
 27652                           ; BSR set to: 0
 27653   00926C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 27654   00926E  EF14  F049         	goto	l15804
 27655   009272                     l2295:
 27656                           
 27657                           ; BSR set to: 0
 27658   009272  C068  F060         	movff	___lldiv@quotient,?___lldiv
 27659   009276  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 27660   00927A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 27661   00927E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 27662   009282                     
 27663                           ; BSR set to: 0
 27664   009282  0012               	return		;funcret
 27665   009284                     __end_of___lldiv:
 27666                           	callstack 0
 27667                           
 27668 ;; *************** function _can_init *****************
 27669 ;; Defined at:
 27670 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 27671 ;; Parameters:    Size  Location     Type
 27672 ;;  timing          2    0[BANK0 ] PTR const struct .
 27673 ;;		 -> main@can_setup(7), 
 27674 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
 27675 ;;		 -> can_msg_handler(1), 
 27676 ;; Auto vars:     Size  Location     Type
 27677 ;;		None
 27678 ;; Return value:  Size  Location     Type
 27679 ;;                  1    wreg      void 
 27680 ;; Registers used:
 27681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27682 ;; Tracked objects:
 27683 ;;		On entry : 0/0
 27684 ;;		On exit  : 0/0
 27685 ;;		Unchanged: 0/0
 27686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27691 ;;Total ram usage:        5 bytes
 27692 ;; Hardware stack levels used: 1
 27693 ;; Hardware stack levels required when called: 5
 27694 ;; This function calls:
 27695 ;;		Nothing
 27696 ;; This function is called by:
 27697 ;;		_main
 27698 ;; This function uses a non-reentrant model
 27699 ;;
 27700                           
 27701                           	psect	text103
 27702   007706                     __ptext103:
 27703                           	callstack 0
 27704   007706                     _can_init:
 27705                           	callstack 25
 27706   007706                     
 27707                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
 27708   007706  C062  F046         	movff	can_init@receive_callback,_can_rcv_cb
 27709   00770A  C063  F047         	movff	can_init@receive_callback+1,_can_rcv_cb+1
 27710   00770E                     
 27711                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
 27712   00770E  508F               	movf	143,w,c	;volatile
 27713   007710  0B1F               	andlw	-225
 27714   007712  0980               	iorlw	128
 27715   007714  6E8F               	movwf	143,c	;volatile
 27716   007716                     l17534:
 27717   007716  388E               	swapf	142,w,c	;volatile
 27718   007718  32E8               	rrcf	wreg,f,c
 27719   00771A  0B07               	andlw	7
 27720   00771C  0A04               	xorlw	4
 27721   00771E  A4D8               	btfss	status,2,c
 27722   007720  EF94  F03B         	goto	u21831
 27723   007724  EF96  F03B         	goto	u21830
 27724   007728                     u21831:
 27725   007728  EF8B  F03B         	goto	l17534
 27726   00772C                     u21830:
 27727   00772C                     
 27728                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
 27729   00772C  0E3F               	movlw	-193
 27730   00772E  1691               	andwf	145,f,c	;volatile
 27731   007730                     
 27732                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
 27733   007730  0137               	movlb	55	; () banked
 27734   007732  9100               	bcf	0,0,b	;volatile
 27735   007734                     
 27736                           ; BSR set to: 55
 27737                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
 27738   007734  0100               	movlb	0	; () banked
 27739   007736  EE20 F001          	lfsr	2,1
 27740   00773A  5160               	movf	can_init@timing& (0+255),w,b
 27741   00773C  26D9               	addwf	fsr2l,f,c
 27742   00773E  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27743   007740  22DA               	addwfc	fsr2h,f,c
 27744   007742  50DF               	movf	indf2,w,c
 27745   007744  6F64               	movwf	??_can_init& (0+255),b
 27746   007746  3B64               	swapf	??_can_init& (0+255),f,b
 27747   007748  4764               	rlncf	??_can_init& (0+255),f,b
 27748   00774A  4764               	rlncf	??_can_init& (0+255),f,b
 27749   00774C  0137               	movlb	55	; () banked
 27750   00774E  5103               	movf	3,w,b	;volatile
 27751   007750  0100               	movlb	0	; () banked
 27752   007752  1964               	xorwf	??_can_init& (0+255),w,b
 27753   007754  0B3F               	andlw	-193
 27754   007756  1964               	xorwf	??_can_init& (0+255),w,b
 27755   007758  0137               	movlb	55	; () banked
 27756   00775A  6F03               	movwf	3,b	;volatile
 27757   00775C                     
 27758                           ; BSR set to: 55
 27759                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
 27760   00775C  0060  F183  FFD9   	movff	can_init@timing,fsr2l
 27761   007762  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
 27762   007768  50DF               	movf	indf2,w,c
 27763   00776A  0100               	movlb	0	; () banked
 27764   00776C  6F64               	movwf	??_can_init& (0+255),b
 27765   00776E  0137               	movlb	55	; () banked
 27766   007770  5103               	movf	3,w,b	;volatile
 27767   007772  0100               	movlb	0	; () banked
 27768   007774  1964               	xorwf	??_can_init& (0+255),w,b
 27769   007776  0BC0               	andlw	-64
 27770   007778  1964               	xorwf	??_can_init& (0+255),w,b
 27771   00777A  0137               	movlb	55	; () banked
 27772   00777C  6F03               	movwf	3,b	;volatile
 27773   00777E                     
 27774                           ; BSR set to: 55
 27775                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
 27776   00777E  0100               	movlb	0	; () banked
 27777   007780  EE20 F006          	lfsr	2,6
 27778   007784  5160               	movf	can_init@timing& (0+255),w,b
 27779   007786  26D9               	addwf	fsr2l,f,c
 27780   007788  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27781   00778A  22DA               	addwfc	fsr2h,f,c
 27782   00778C  50DF               	movf	indf2,w,c
 27783   00778E  6F64               	movwf	??_can_init& (0+255),b
 27784   007790  3364               	rrcf	??_can_init& (0+255),f,b
 27785   007792  3364               	rrcf	??_can_init& (0+255),f,b
 27786   007794  0137               	movlb	55	; () banked
 27787   007796  5104               	movf	4,w,b	;volatile
 27788   007798  0100               	movlb	0	; () banked
 27789   00779A  1964               	xorwf	??_can_init& (0+255),w,b
 27790   00779C  0B7F               	andlw	-129
 27791   00779E  1964               	xorwf	??_can_init& (0+255),w,b
 27792   0077A0  0137               	movlb	55	; () banked
 27793   0077A2  6F04               	movwf	4,b	;volatile
 27794   0077A4                     
 27795                           ; BSR set to: 55
 27796                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
 27797   0077A4  0100               	movlb	0	; () banked
 27798   0077A6  EE20 F002          	lfsr	2,2
 27799   0077AA  5160               	movf	can_init@timing& (0+255),w,b
 27800   0077AC  26D9               	addwf	fsr2l,f,c
 27801   0077AE  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27802   0077B0  22DA               	addwfc	fsr2h,f,c
 27803   0077B2  50DF               	movf	indf2,w,c
 27804   0077B4  6F64               	movwf	??_can_init& (0+255),b
 27805   0077B6  3B64               	swapf	??_can_init& (0+255),f,b
 27806   0077B8  4764               	rlncf	??_can_init& (0+255),f,b
 27807   0077BA  4764               	rlncf	??_can_init& (0+255),f,b
 27808   0077BC  0137               	movlb	55	; () banked
 27809   0077BE  5104               	movf	4,w,b	;volatile
 27810   0077C0  0100               	movlb	0	; () banked
 27811   0077C2  1964               	xorwf	??_can_init& (0+255),w,b
 27812   0077C4  0BBF               	andlw	-65
 27813   0077C6  1964               	xorwf	??_can_init& (0+255),w,b
 27814   0077C8  0137               	movlb	55	; () banked
 27815   0077CA  6F04               	movwf	4,b	;volatile
 27816   0077CC                     
 27817                           ; BSR set to: 55
 27818                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
 27819   0077CC  0100               	movlb	0	; () banked
 27820   0077CE  EE20 F003          	lfsr	2,3
 27821   0077D2  5160               	movf	can_init@timing& (0+255),w,b
 27822   0077D4  26D9               	addwf	fsr2l,f,c
 27823   0077D6  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27824   0077D8  22DA               	addwfc	fsr2h,f,c
 27825   0077DA  50DF               	movf	indf2,w,c
 27826   0077DC  6F64               	movwf	??_can_init& (0+255),b
 27827   0077DE  4764               	rlncf	??_can_init& (0+255),f,b
 27828   0077E0  4764               	rlncf	??_can_init& (0+255),f,b
 27829   0077E2  4764               	rlncf	??_can_init& (0+255),f,b
 27830   0077E4  0137               	movlb	55	; () banked
 27831   0077E6  5104               	movf	4,w,b	;volatile
 27832   0077E8  0100               	movlb	0	; () banked
 27833   0077EA  1964               	xorwf	??_can_init& (0+255),w,b
 27834   0077EC  0BC7               	andlw	-57
 27835   0077EE  1964               	xorwf	??_can_init& (0+255),w,b
 27836   0077F0  0137               	movlb	55	; () banked
 27837   0077F2  6F04               	movwf	4,b	;volatile
 27838   0077F4                     
 27839                           ; BSR set to: 55
 27840                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
 27841   0077F4  0100               	movlb	0	; () banked
 27842   0077F6  EE20 F005          	lfsr	2,5
 27843   0077FA  5160               	movf	can_init@timing& (0+255),w,b
 27844   0077FC  26D9               	addwf	fsr2l,f,c
 27845   0077FE  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27846   007800  22DA               	addwfc	fsr2h,f,c
 27847   007802  50DF               	movf	indf2,w,c
 27848   007804  6F64               	movwf	??_can_init& (0+255),b
 27849   007806  0137               	movlb	55	; () banked
 27850   007808  5104               	movf	4,w,b	;volatile
 27851   00780A  0100               	movlb	0	; () banked
 27852   00780C  1964               	xorwf	??_can_init& (0+255),w,b
 27853   00780E  0BF8               	andlw	-8
 27854   007810  1964               	xorwf	??_can_init& (0+255),w,b
 27855   007812  0137               	movlb	55	; () banked
 27856   007814  6F04               	movwf	4,b	;volatile
 27857   007816                     
 27858                           ; BSR set to: 55
 27859                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
 27860   007816  0100               	movlb	0	; () banked
 27861   007818  EE20 F004          	lfsr	2,4
 27862   00781C  5160               	movf	can_init@timing& (0+255),w,b
 27863   00781E  26D9               	addwf	fsr2l,f,c
 27864   007820  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27865   007822  22DA               	addwfc	fsr2h,f,c
 27866   007824  50DF               	movf	indf2,w,c
 27867   007826  6F64               	movwf	??_can_init& (0+255),b
 27868   007828  0137               	movlb	55	; () banked
 27869   00782A  5105               	movf	5,w,b	;volatile
 27870   00782C  0100               	movlb	0	; () banked
 27871   00782E  1964               	xorwf	??_can_init& (0+255),w,b
 27872   007830  0BF8               	andlw	-8
 27873   007832  1964               	xorwf	??_can_init& (0+255),w,b
 27874   007834  0137               	movlb	55	; () banked
 27875   007836  6F05               	movwf	5,b	;volatile
 27876   007838                     
 27877                           ; BSR set to: 55
 27878                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
 27879   007838  8F05               	bsf	5,7,b	;volatile
 27880   00783A                     
 27881                           ; BSR set to: 55
 27882                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
 27883   00783A  9D05               	bcf	5,6,b	;volatile
 27884   00783C                     
 27885                           ; BSR set to: 55
 27886                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
 27887   00783C  0E00               	movlw	0
 27888   00783E  6FB8               	movwf	184,b	;volatile
 27889   007840                     
 27890                           ; BSR set to: 55
 27891                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
 27892   007840  0E00               	movlw	0
 27893   007842  6FB9               	movwf	185,b	;volatile
 27894   007844                     
 27895                           ; BSR set to: 55
 27896                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
 27897   007844  0E00               	movlw	0
 27898   007846  6FBC               	movwf	188,b	;volatile
 27899   007848                     
 27900                           ; BSR set to: 55
 27901                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
 27902   007848  0E00               	movlw	0
 27903   00784A  6FBD               	movwf	189,b	;volatile
 27904   00784C                     
 27905                           ; BSR set to: 55
 27906                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
 27907   00784C  8A80               	bsf	128,5,c	;volatile
 27908   00784E                     
 27909                           ; BSR set to: 55
 27910                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
 27911   00784E  8C80               	bsf	128,6,c	;volatile
 27912   007850                     
 27913                           ; BSR set to: 55
 27914                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
 27915   007850  8480               	bsf	128,2,c	;volatile
 27916   007852                     
 27917                           ; BSR set to: 55
 27918                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
 27919   007852  0139               	movlb	57	; () banked
 27920   007854  8F95               	bsf	149,7,b	;volatile
 27921   007856                     
 27922                           ; BSR set to: 57
 27923                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
 27924   007856  9D95               	bcf	149,6,b	;volatile
 27925   007858                     
 27926                           ; BSR set to: 57
 27927                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
 27928   007858  8B95               	bsf	149,5,b	;volatile
 27929   00785A                     
 27930                           ; BSR set to: 57
 27931                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
 27932   00785A  9995               	bcf	149,4,b	;volatile
 27933   00785C                     
 27934                           ; BSR set to: 57
 27935                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
 27936   00785C  9795               	bcf	149,3,b	;volatile
 27937   00785E                     
 27938                           ; BSR set to: 57
 27939                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
 27940   00785E  9595               	bcf	149,2,b	;volatile
 27941   007860                     
 27942                           ; BSR set to: 57
 27943                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
 27944   007860  8395               	bsf	149,1,b	;volatile
 27945   007862                     
 27946                           ; BSR set to: 57
 27947                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
 27948   007862  8195               	bsf	149,0,b	;volatile
 27949   007864                     
 27950                           ; BSR set to: 57
 27951                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
 27952   007864  0E1F               	movlw	-225
 27953   007866  168F               	andwf	143,f,c	;volatile
 27954   007868                     l17590:
 27955   007868  388E               	swapf	142,w,c	;volatile
 27956   00786A  32E8               	rrcf	wreg,f,c
 27957   00786C  0B07               	andlw	7
 27958   00786E  0900               	iorlw	0
 27959   007870  A4D8               	btfss	status,2,c
 27960   007872  EF3D  F03C         	goto	u21841
 27961   007876  EF3F  F03C         	goto	u21840
 27962   00787A                     u21841:
 27963   00787A  EF34  F03C         	goto	l17590
 27964   00787E                     u21840:
 27965   00787E  0012               	return		;funcret
 27966   007880                     __end_of_can_init:
 27967                           	callstack 0
 27968                           
 27969 ;; *************** function _can_generate_timing_params *****************
 27970 ;; Defined at:
 27971 ;;		line 7 in file "canlib/util/timing_util.c"
 27972 ;; Parameters:    Size  Location     Type
 27973 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
 27974 ;;  timing          2    4[BANK0 ] PTR struct .
 27975 ;;		 -> main@can_setup(7), 
 27976 ;; Auto vars:     Size  Location     Type
 27977 ;;		None
 27978 ;; Return value:  Size  Location     Type
 27979 ;;                  1    wreg      _Bool 
 27980 ;; Registers used:
 27981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27982 ;; Tracked objects:
 27983 ;;		On entry : 0/0
 27984 ;;		On exit  : 0/0
 27985 ;;		Unchanged: 0/0
 27986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27987 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27990 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27991 ;;Total ram usage:       10 bytes
 27992 ;; Hardware stack levels used: 1
 27993 ;; Hardware stack levels required when called: 5
 27994 ;; This function calls:
 27995 ;;		Nothing
 27996 ;; This function is called by:
 27997 ;;		_main
 27998 ;; This function uses a non-reentrant model
 27999 ;;
 28000                           
 28001                           	psect	text104
 28002   006FE8                     __ptext104:
 28003                           	callstack 0
 28004   006FE8                     _can_generate_timing_params:
 28005                           	callstack 25
 28006   006FE8                     
 28007                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
 28008   006FE8  EF9D  F038         	goto	l17664
 28009   006FEC                     l17614:
 28010                           
 28011                           ; BSR set to: 0
 28012                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
 28013   006FEC  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28014   006FF2  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28015   006FF8  0E07               	movlw	7
 28016   006FFA  6EDF               	movwf	indf2,c
 28017   006FFC                     
 28018                           ; BSR set to: 0
 28019                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
 28020   006FFC  EE20 F001          	lfsr	2,1
 28021   007000  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28022   007002  26D9               	addwf	fsr2l,f,c
 28023   007004  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28024   007006  22DA               	addwfc	fsr2h,f,c
 28025   007008  0E03               	movlw	3
 28026   00700A  6EDF               	movwf	indf2,c
 28027   00700C                     
 28028                           ; BSR set to: 0
 28029                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
 28030   00700C  EE20 F006          	lfsr	2,6
 28031   007010  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28032   007012  26D9               	addwf	fsr2l,f,c
 28033   007014  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28034   007016  22DA               	addwfc	fsr2h,f,c
 28035   007018  0E01               	movlw	1
 28036   00701A  6EDF               	movwf	indf2,c
 28037   00701C                     
 28038                           ; BSR set to: 0
 28039                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
 28040   00701C  EE20 F002          	lfsr	2,2
 28041   007020  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28042   007022  26D9               	addwf	fsr2l,f,c
 28043   007024  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28044   007026  22DA               	addwfc	fsr2h,f,c
 28045   007028  6ADF               	clrf	indf2,c
 28046   00702A                     
 28047                           ; BSR set to: 0
 28048                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
 28049   00702A  EE20 F003          	lfsr	2,3
 28050   00702E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28051   007030  26D9               	addwf	fsr2l,f,c
 28052   007032  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28053   007034  22DA               	addwfc	fsr2h,f,c
 28054   007036  0E04               	movlw	4
 28055   007038  6EDF               	movwf	indf2,c
 28056   00703A                     
 28057                           ; BSR set to: 0
 28058                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
 28059   00703A  EE20 F005          	lfsr	2,5
 28060   00703E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28061   007040  26D9               	addwf	fsr2l,f,c
 28062   007042  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28063   007044  22DA               	addwfc	fsr2h,f,c
 28064   007046  6ADF               	clrf	indf2,c
 28065   007048                     
 28066                           ; BSR set to: 0
 28067                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
 28068   007048  EE20 F004          	lfsr	2,4
 28069   00704C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28070   00704E  26D9               	addwf	fsr2l,f,c
 28071   007050  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28072   007052  22DA               	addwfc	fsr2h,f,c
 28073   007054  0E04               	movlw	4
 28074   007056  6EDF               	movwf	indf2,c
 28075   007058  EFED  F038         	goto	l234
 28076   00705C                     l17630:
 28077                           
 28078                           ; BSR set to: 0
 28079                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
 28080   00705C  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28081   007062  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28082   007068  0E01               	movlw	1
 28083   00706A  6EDF               	movwf	indf2,c
 28084   00706C                     
 28085                           ; BSR set to: 0
 28086                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
 28087   00706C  EE20 F001          	lfsr	2,1
 28088   007070  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28089   007072  26D9               	addwf	fsr2l,f,c
 28090   007074  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28091   007076  22DA               	addwfc	fsr2h,f,c
 28092   007078  0E03               	movlw	3
 28093   00707A  6EDF               	movwf	indf2,c
 28094   00707C                     
 28095                           ; BSR set to: 0
 28096                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
 28097   00707C  EE20 F006          	lfsr	2,6
 28098   007080  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28099   007082  26D9               	addwf	fsr2l,f,c
 28100   007084  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28101   007086  22DA               	addwfc	fsr2h,f,c
 28102   007088  0E01               	movlw	1
 28103   00708A  6EDF               	movwf	indf2,c
 28104   00708C                     
 28105                           ; BSR set to: 0
 28106                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
 28107   00708C  EE20 F002          	lfsr	2,2
 28108   007090  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28109   007092  26D9               	addwf	fsr2l,f,c
 28110   007094  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28111   007096  22DA               	addwfc	fsr2h,f,c
 28112   007098  6ADF               	clrf	indf2,c
 28113   00709A                     
 28114                           ; BSR set to: 0
 28115                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
 28116   00709A  EE20 F003          	lfsr	2,3
 28117   00709E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28118   0070A0  26D9               	addwf	fsr2l,f,c
 28119   0070A2  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28120   0070A4  22DA               	addwfc	fsr2h,f,c
 28121   0070A6  0E04               	movlw	4
 28122   0070A8  6EDF               	movwf	indf2,c
 28123   0070AA                     
 28124                           ; BSR set to: 0
 28125                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
 28126   0070AA  EE20 F005          	lfsr	2,5
 28127   0070AE  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28128   0070B0  26D9               	addwf	fsr2l,f,c
 28129   0070B2  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28130   0070B4  22DA               	addwfc	fsr2h,f,c
 28131   0070B6  6ADF               	clrf	indf2,c
 28132   0070B8                     
 28133                           ; BSR set to: 0
 28134                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
 28135   0070B8  EE20 F004          	lfsr	2,4
 28136   0070BC  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28137   0070BE  26D9               	addwf	fsr2l,f,c
 28138   0070C0  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28139   0070C2  22DA               	addwfc	fsr2h,f,c
 28140   0070C4  0E04               	movlw	4
 28141   0070C6  6EDF               	movwf	indf2,c
 28142   0070C8  EFED  F038         	goto	l234
 28143   0070CC                     l17646:
 28144                           
 28145                           ; BSR set to: 0
 28146                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
 28147   0070CC  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28148   0070D2  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28149   0070D8  6ADF               	clrf	indf2,c
 28150   0070DA                     
 28151                           ; BSR set to: 0
 28152                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
 28153   0070DA  EE20 F001          	lfsr	2,1
 28154   0070DE  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28155   0070E0  26D9               	addwf	fsr2l,f,c
 28156   0070E2  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28157   0070E4  22DA               	addwfc	fsr2h,f,c
 28158   0070E6  0E03               	movlw	3
 28159   0070E8  6EDF               	movwf	indf2,c
 28160   0070EA                     
 28161                           ; BSR set to: 0
 28162                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
 28163   0070EA  EE20 F006          	lfsr	2,6
 28164   0070EE  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28165   0070F0  26D9               	addwf	fsr2l,f,c
 28166   0070F2  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28167   0070F4  22DA               	addwfc	fsr2h,f,c
 28168   0070F6  0E01               	movlw	1
 28169   0070F8  6EDF               	movwf	indf2,c
 28170   0070FA                     
 28171                           ; BSR set to: 0
 28172                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
 28173   0070FA  EE20 F002          	lfsr	2,2
 28174   0070FE  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28175   007100  26D9               	addwf	fsr2l,f,c
 28176   007102  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28177   007104  22DA               	addwfc	fsr2h,f,c
 28178   007106  6ADF               	clrf	indf2,c
 28179   007108                     
 28180                           ; BSR set to: 0
 28181                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
 28182   007108  EE20 F003          	lfsr	2,3
 28183   00710C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28184   00710E  26D9               	addwf	fsr2l,f,c
 28185   007110  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28186   007112  22DA               	addwfc	fsr2h,f,c
 28187   007114  0E04               	movlw	4
 28188   007116  6EDF               	movwf	indf2,c
 28189   007118                     
 28190                           ; BSR set to: 0
 28191                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
 28192   007118  EE20 F005          	lfsr	2,5
 28193   00711C  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28194   00711E  26D9               	addwf	fsr2l,f,c
 28195   007120  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28196   007122  22DA               	addwfc	fsr2h,f,c
 28197   007124  6ADF               	clrf	indf2,c
 28198   007126                     
 28199                           ; BSR set to: 0
 28200                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
 28201   007126  EE20 F004          	lfsr	2,4
 28202   00712A  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28203   00712C  26D9               	addwf	fsr2l,f,c
 28204   00712E  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28205   007130  22DA               	addwfc	fsr2h,f,c
 28206   007132  0E04               	movlw	4
 28207   007134  6EDF               	movwf	indf2,c
 28208   007136  EFED  F038         	goto	l234
 28209   00713A                     l17664:
 28210   00713A  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
 28211   00713E  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
 28212   007142  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
 28213   007146  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
 28214                           
 28215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
 28216                           ; Switch size 1, requested type "simple"
 28217                           ; Number of cases is 2, Range of values is 0 to 2
 28218                           ; switch strategies available:
 28219                           ; Name         Instructions Cycles
 28220                           ; simple_byte            7     4 (average)
 28221                           ;	Chosen strategy is simple_byte
 28222   00714A  0100               	movlb	0	; () banked
 28223   00714C  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
 28224   00714E  0A00               	xorlw	0	; case 0
 28225   007150  B4D8               	btfsc	status,2,c
 28226   007152  EFDB  F038         	goto	l19180
 28227   007156  0A02               	xorlw	2	; case 2
 28228   007158  B4D8               	btfsc	status,2,c
 28229   00715A  EFE6  F038         	goto	l19182
 28230   00715E  EFED  F038         	goto	l234
 28231   007162                     l19174:
 28232                           
 28233                           ; BSR set to: 0
 28234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28235                           ; Switch size 1, requested type "simple"
 28236                           ; Number of cases is 1, Range of values is 141 to 141
 28237                           ; switch strategies available:
 28238                           ; Name         Instructions Cycles
 28239                           ; simple_byte            4     3 (average)
 28240                           ;	Chosen strategy is simple_byte
 28241   007162  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28242   007164  0A8D               	xorlw	141	; case 141
 28243   007166  B4D8               	btfsc	status,2,c
 28244   007168  EFB8  F038         	goto	l19184
 28245   00716C  EFED  F038         	goto	l234
 28246   007170                     l19184:
 28247                           
 28248                           ; BSR set to: 0
 28249                           ; Switch size 1, requested type "simple"
 28250                           ; Number of cases is 1, Range of values is 128 to 128
 28251                           ; switch strategies available:
 28252                           ; Name         Instructions Cycles
 28253                           ; simple_byte            4     3 (average)
 28254                           ;	Chosen strategy is simple_byte
 28255   007170  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28256   007172  0A80               	xorlw	128	; case 128
 28257   007174  B4D8               	btfsc	status,2,c
 28258   007176  EF66  F038         	goto	l17646
 28259   00717A  EFED  F038         	goto	l234
 28260   00717E                     l19176:
 28261                           
 28262                           ; BSR set to: 0
 28263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28264                           ; Switch size 1, requested type "simple"
 28265                           ; Number of cases is 1, Range of values is 27 to 27
 28266                           ; switch strategies available:
 28267                           ; Name         Instructions Cycles
 28268                           ; simple_byte            4     3 (average)
 28269                           ;	Chosen strategy is simple_byte
 28270   00717E  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28271   007180  0A1B               	xorlw	27	; case 27
 28272   007182  B4D8               	btfsc	status,2,c
 28273   007184  EFC6  F038         	goto	l19186
 28274   007188  EFED  F038         	goto	l234
 28275   00718C                     l19186:
 28276                           
 28277                           ; BSR set to: 0
 28278                           ; Switch size 1, requested type "simple"
 28279                           ; Number of cases is 1, Range of values is 0 to 0
 28280                           ; switch strategies available:
 28281                           ; Name         Instructions Cycles
 28282                           ; simple_byte            4     3 (average)
 28283                           ;	Chosen strategy is simple_byte
 28284   00718C  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28285   00718E  0A00               	xorlw	0	; case 0
 28286   007190  B4D8               	btfsc	status,2,c
 28287   007192  EF2E  F038         	goto	l17630
 28288   007196  EFED  F038         	goto	l234
 28289   00719A                     l19178:
 28290                           
 28291                           ; BSR set to: 0
 28292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28293                           ; Switch size 1, requested type "simple"
 28294                           ; Number of cases is 1, Range of values is 108 to 108
 28295                           ; switch strategies available:
 28296                           ; Name         Instructions Cycles
 28297                           ; simple_byte            4     3 (average)
 28298                           ;	Chosen strategy is simple_byte
 28299   00719A  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28300   00719C  0A6C               	xorlw	108	; case 108
 28301   00719E  B4D8               	btfsc	status,2,c
 28302   0071A0  EFD4  F038         	goto	l19188
 28303   0071A4  EFED  F038         	goto	l234
 28304   0071A8                     l19188:
 28305                           
 28306                           ; BSR set to: 0
 28307                           ; Switch size 1, requested type "simple"
 28308                           ; Number of cases is 1, Range of values is 0 to 0
 28309                           ; switch strategies available:
 28310                           ; Name         Instructions Cycles
 28311                           ; simple_byte            4     3 (average)
 28312                           ;	Chosen strategy is simple_byte
 28313   0071A8  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28314   0071AA  0A00               	xorlw	0	; case 0
 28315   0071AC  B4D8               	btfsc	status,2,c
 28316   0071AE  EFF6  F037         	goto	l17614
 28317   0071B2  EFED  F038         	goto	l234
 28318   0071B6                     l19180:
 28319                           
 28320                           ; BSR set to: 0
 28321                           ; Switch size 1, requested type "simple"
 28322                           ; Number of cases is 2, Range of values is 91 to 183
 28323                           ; switch strategies available:
 28324                           ; Name         Instructions Cycles
 28325                           ; simple_byte            7     4 (average)
 28326                           ;	Chosen strategy is simple_byte
 28327   0071B6  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 28328   0071B8  0A5B               	xorlw	91	; case 91
 28329   0071BA  B4D8               	btfsc	status,2,c
 28330   0071BC  EFB1  F038         	goto	l19174
 28331   0071C0  0AEC               	xorlw	236	; case 183
 28332   0071C2  B4D8               	btfsc	status,2,c
 28333   0071C4  EFBF  F038         	goto	l19176
 28334   0071C8  EFED  F038         	goto	l234
 28335   0071CC                     l19182:
 28336                           
 28337                           ; BSR set to: 0
 28338                           ; Switch size 1, requested type "simple"
 28339                           ; Number of cases is 1, Range of values is 220 to 220
 28340                           ; switch strategies available:
 28341                           ; Name         Instructions Cycles
 28342                           ; simple_byte            4     3 (average)
 28343                           ;	Chosen strategy is simple_byte
 28344   0071CC  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 28345   0071CE  0ADC               	xorlw	220	; case 220
 28346   0071D0  B4D8               	btfsc	status,2,c
 28347   0071D2  EFCD  F038         	goto	l19178
 28348   0071D6  EFED  F038         	goto	l234
 28349   0071DA                     l234:
 28350                           
 28351                           ; BSR set to: 0
 28352   0071DA  0012               	return		;funcret
 28353   0071DC                     __end_of_can_generate_timing_params:
 28354                           	callstack 0
 28355                           
 28356 ;; *************** function _build_analog_data_msg *****************
 28357 ;; Defined at:
 28358 ;;		line 263 in file "canlib/can_common.c"
 28359 ;; Parameters:    Size  Location     Type
 28360 ;;  timestamp       4    8[BANK0 ] unsigned long 
 28361 ;;  sensor_id       1   12[BANK0 ] enum E84
 28362 ;;  sensor_data     2   13[BANK0 ] unsigned short 
 28363 ;;  output          2   15[BANK0 ] PTR struct .
 28364 ;;		 -> main@msg(11), 
 28365 ;; Auto vars:     Size  Location     Type
 28366 ;;		None
 28367 ;; Return value:  Size  Location     Type
 28368 ;;                  1    wreg      _Bool 
 28369 ;; Registers used:
 28370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28371 ;; Tracked objects:
 28372 ;;		On entry : 0/0
 28373 ;;		On exit  : 0/0
 28374 ;;		Unchanged: 0/0
 28375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28376 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28379 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;Total ram usage:        9 bytes
 28381 ;; Hardware stack levels used: 1
 28382 ;; Hardware stack levels required when called: 6
 28383 ;; This function calls:
 28384 ;;		_write_timestamp_2bytes
 28385 ;; This function is called by:
 28386 ;;		_main
 28387 ;; This function uses a non-reentrant model
 28388 ;;
 28389                           
 28390                           	psect	text105
 28391   009430                     __ptext105:
 28392                           	callstack 0
 28393   009430                     _build_analog_data_msg:
 28394                           	callstack 24
 28395   009430                     
 28396                           ;canlib/can_common.c: 263: _Bool build_analog_data_msg(uint32_t timestamp,;canlib/can_co
      +                          mmon.c: 264:                            enum SENSOR_ID sensor_id,;canlib/can_common.c: 2
      +                          65:                            uint16_t sensor_data,;canlib/can_common.c: 266:          
      +                                            can_msg_t *output);canlib/can_common.c: 267: {;canlib/can_common.c: 26
      +                          8:     if (!output) { return 0; }
 28397   009430  0100               	movlb	0	; () banked
 28398   009432  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28399   009434  1170               	iorwf	(build_analog_data_msg@output+1)& (0+255),w,b
 28400   009436  A4D8               	btfss	status,2,c
 28401   009438  EF20  F04A         	goto	u21891
 28402   00943C  EF22  F04A         	goto	u21890
 28403   009440                     u21891:
 28404   009440  EF24  F04A         	goto	l17718
 28405   009444                     u21890:
 28406   009444  EF5B  F04A         	goto	l310
 28407   009448                     l17718:
 28408                           
 28409                           ; BSR set to: 0
 28410                           ;canlib/can_common.c: 270:     output->sid = 0x6A0 | 0x0C;
 28411   009448  0060  F1BF  FFD9   	movff	build_analog_data_msg@output,fsr2l
 28412   00944E  0060  F1C3  FFDA   	movff	build_analog_data_msg@output+1,fsr2h
 28413   009454  0EAC               	movlw	172
 28414   009456  6EDE               	movwf	postinc2,c
 28415   009458  0E06               	movlw	6
 28416   00945A  6EDD               	movwf	postdec2,c
 28417   00945C                     
 28418                           ; BSR set to: 0
 28419                           ;canlib/can_common.c: 271:     write_timestamp_2bytes(timestamp, output);
 28420   00945C  C068  F060         	movff	build_analog_data_msg@timestamp,write_timestamp_2bytes@timestamp
 28421   009460  C069  F061         	movff	build_analog_data_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
 28422   009464  C06F  F062         	movff	build_analog_data_msg@output,write_timestamp_2bytes@output
 28423   009468  C070  F063         	movff	build_analog_data_msg@output+1,write_timestamp_2bytes@output+1
 28424   00946C  EC51  F051         	call	_write_timestamp_2bytes	;wreg free
 28425   009470                     
 28426                           ;canlib/can_common.c: 273:     output->data[2] = (uint8_t) sensor_id;
 28427   009470  0100               	movlb	0	; () banked
 28428   009472  EE20 F005          	lfsr	2,5
 28429   009476  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28430   009478  26D9               	addwf	fsr2l,f,c
 28431   00947A  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28432   00947C  22DA               	addwfc	fsr2h,f,c
 28433   00947E  0060  F1B3  FFDF   	movff	build_analog_data_msg@sensor_id,indf2
 28434   009484                     
 28435                           ; BSR set to: 0
 28436                           ;canlib/can_common.c: 274:     output->data[3] = (sensor_data >> 8) & 0xff;
 28437   009484  EE20 F006          	lfsr	2,6
 28438   009488  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28439   00948A  26D9               	addwf	fsr2l,f,c
 28440   00948C  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28441   00948E  22DA               	addwfc	fsr2h,f,c
 28442   009490  516E               	movf	(build_analog_data_msg@sensor_data+1)& (0+255),w,b
 28443   009492  6EDF               	movwf	indf2,c
 28444   009494                     
 28445                           ; BSR set to: 0
 28446                           ;canlib/can_common.c: 275:     output->data[4] = (sensor_data >> 0) & 0xff;
 28447   009494  EE20 F007          	lfsr	2,7
 28448   009498  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28449   00949A  26D9               	addwf	fsr2l,f,c
 28450   00949C  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28451   00949E  22DA               	addwfc	fsr2h,f,c
 28452   0094A0  0060  F1B7  FFDF   	movff	build_analog_data_msg@sensor_data,indf2
 28453   0094A6                     
 28454                           ; BSR set to: 0
 28455                           ;canlib/can_common.c: 277:     output->data_len = 5;
 28456   0094A6  EE20 F002          	lfsr	2,2
 28457   0094AA  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28458   0094AC  26D9               	addwf	fsr2l,f,c
 28459   0094AE  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28460   0094B0  22DA               	addwfc	fsr2h,f,c
 28461   0094B2  0E05               	movlw	5
 28462   0094B4  6EDF               	movwf	indf2,c
 28463   0094B6                     l310:
 28464                           
 28465                           ; BSR set to: 0
 28466   0094B6  0012               	return		;funcret
 28467   0094B8                     __end_of_build_analog_data_msg:
 28468                           	callstack 0
 28469                           
 28470 ;; *************** function _write_timestamp_2bytes *****************
 28471 ;; Defined at:
 28472 ;;		line 14 in file "canlib/can_common.c"
 28473 ;; Parameters:    Size  Location     Type
 28474 ;;  timestamp       2    0[BANK0 ] unsigned short 
 28475 ;;  output          2    2[BANK0 ] PTR struct .
 28476 ;;		 -> main@msg(11), 
 28477 ;; Auto vars:     Size  Location     Type
 28478 ;;		None
 28479 ;; Return value:  Size  Location     Type
 28480 ;;                  1    wreg      void 
 28481 ;; Registers used:
 28482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28483 ;; Tracked objects:
 28484 ;;		On entry : 0/0
 28485 ;;		On exit  : 0/0
 28486 ;;		Unchanged: 0/0
 28487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28492 ;;Total ram usage:        4 bytes
 28493 ;; Hardware stack levels used: 1
 28494 ;; Hardware stack levels required when called: 5
 28495 ;; This function calls:
 28496 ;;		Nothing
 28497 ;; This function is called by:
 28498 ;;		_build_analog_data_msg
 28499 ;;		_build_imu_data_msg
 28500 ;; This function uses a non-reentrant model
 28501 ;;
 28502                           
 28503                           	psect	text106
 28504   00A2A2                     __ptext106:
 28505                           	callstack 0
 28506   00A2A2                     _write_timestamp_2bytes:
 28507                           	callstack 24
 28508   00A2A2                     
 28509                           ;canlib/can_common.c: 14: static void write_timestamp_2bytes(uint16_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 15: {;canlib/can_common.c: 16:     output->data[0] = (t
      +                          imestamp >> 8) & 0xff;
 28510   00A2A2  0100               	movlb	0	; () banked
 28511   00A2A4  EE20 F003          	lfsr	2,3
 28512   00A2A8  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
 28513   00A2AA  26D9               	addwf	fsr2l,f,c
 28514   00A2AC  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
 28515   00A2AE  22DA               	addwfc	fsr2h,f,c
 28516   00A2B0  5161               	movf	(write_timestamp_2bytes@timestamp+1)& (0+255),w,b
 28517   00A2B2  6EDF               	movwf	indf2,c
 28518                           
 28519                           ;canlib/can_common.c: 17:     output->data[1] = (timestamp >> 0) & 0xff;
 28520   00A2B4  EE20 F004          	lfsr	2,4
 28521   00A2B8  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
 28522   00A2BA  26D9               	addwf	fsr2l,f,c
 28523   00A2BC  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
 28524   00A2BE  22DA               	addwfc	fsr2h,f,c
 28525   00A2C0  0060  F183  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
 28526   00A2C6                     
 28527                           ; BSR set to: 0
 28528   00A2C6  0012               	return		;funcret
 28529   00A2C8                     __end_of_write_timestamp_2bytes:
 28530                           	callstack 0
 28531                           
 28532 ;; *************** function _SYSTEM_Initialize *****************
 28533 ;; Defined at:
 28534 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28535 ;; Parameters:    Size  Location     Type
 28536 ;;		None
 28537 ;; Auto vars:     Size  Location     Type
 28538 ;;		None
 28539 ;; Return value:  Size  Location     Type
 28540 ;;                  1    wreg      void 
 28541 ;; Registers used:
 28542 ;;		wreg, status,2, cstack
 28543 ;; Tracked objects:
 28544 ;;		On entry : 0/0
 28545 ;;		On exit  : 0/0
 28546 ;;		Unchanged: 0/0
 28547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28552 ;;Total ram usage:        0 bytes
 28553 ;; Hardware stack levels used: 1
 28554 ;; Hardware stack levels required when called: 6
 28555 ;; This function calls:
 28556 ;;		_OSCILLATOR_Initialize
 28557 ;;		_PIN_MANAGER_Initialize
 28558 ;;		_PMD_Initialize
 28559 ;;		_SPI1_Initialize
 28560 ;; This function is called by:
 28561 ;;		_main
 28562 ;; This function uses a non-reentrant model
 28563 ;;
 28564                           
 28565                           	psect	text107
 28566   00A420                     __ptext107:
 28567                           	callstack 0
 28568   00A420                     _SYSTEM_Initialize:
 28569                           	callstack 24
 28570   00A420                     
 28571                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 28572   00A420  EC77  F051         	call	_PMD_Initialize	;wreg free
 28573                           
 28574                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 28575   00A424  EC8D  F04D         	call	_PIN_MANAGER_Initialize	;wreg free
 28576                           
 28577                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 28578   00A428  ECEE  F051         	call	_OSCILLATOR_Initialize	;wreg free
 28579                           
 28580                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
 28581   00A42C  ECC9  F051         	call	_SPI1_Initialize	;wreg free
 28582   00A430  0012               	return		;funcret
 28583   00A432                     __end_of_SYSTEM_Initialize:
 28584                           	callstack 0
 28585                           
 28586 ;; *************** function _SPI1_Initialize *****************
 28587 ;; Defined at:
 28588 ;;		line 66 in file "mcc_generated_files/spi1.c"
 28589 ;; Parameters:    Size  Location     Type
 28590 ;;		None
 28591 ;; Auto vars:     Size  Location     Type
 28592 ;;		None
 28593 ;; Return value:  Size  Location     Type
 28594 ;;                  1    wreg      void 
 28595 ;; Registers used:
 28596 ;;		wreg, status,2
 28597 ;; Tracked objects:
 28598 ;;		On entry : 0/0
 28599 ;;		On exit  : 0/0
 28600 ;;		Unchanged: 0/0
 28601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28606 ;;Total ram usage:        0 bytes
 28607 ;; Hardware stack levels used: 1
 28608 ;; Hardware stack levels required when called: 5
 28609 ;; This function calls:
 28610 ;;		Nothing
 28611 ;; This function is called by:
 28612 ;;		_SYSTEM_Initialize
 28613 ;; This function uses a non-reentrant model
 28614 ;;
 28615                           
 28616                           	psect	text108
 28617   00A392                     __ptext108:
 28618                           	callstack 0
 28619   00A392                     _SPI1_Initialize:
 28620                           	callstack 24
 28621   00A392                     
 28622                           ;mcc_generated_files/spi1.c: 69:     SPI1CON0 = 0x02;
 28623   00A392  0E02               	movlw	2
 28624   00A394  013D               	movlb	61	; () banked
 28625   00A396  6F14               	movwf	20,b	;volatile
 28626                           
 28627                           ;mcc_generated_files/spi1.c: 71:     SPI1CON1 = 0x40;
 28628   00A398  0E40               	movlw	64
 28629   00A39A  6F15               	movwf	21,b	;volatile
 28630                           
 28631                           ;mcc_generated_files/spi1.c: 73:     SPI1CON2 = 0x00;
 28632   00A39C  0E00               	movlw	0
 28633   00A39E  6F16               	movwf	22,b	;volatile
 28634                           
 28635                           ;mcc_generated_files/spi1.c: 75:     SPI1CLK = 0x00;
 28636   00A3A0  0E00               	movlw	0
 28637   00A3A2  6F1C               	movwf	28,b	;volatile
 28638                           
 28639                           ;mcc_generated_files/spi1.c: 77:     SPI1BAUD = 0x00;
 28640   00A3A4  0E00               	movlw	0
 28641   00A3A6  6F19               	movwf	25,b	;volatile
 28642   00A3A8                     
 28643                           ; BSR set to: 61
 28644                           ;mcc_generated_files/spi1.c: 78:     TRISCbits.TRISC3 = 0;
 28645   00A3A8  96C4               	bcf	196,3,c	;volatile
 28646   00A3AA                     
 28647                           ; BSR set to: 61
 28648   00A3AA  0012               	return		;funcret
 28649   00A3AC                     __end_of_SPI1_Initialize:
 28650                           	callstack 0
 28651                           
 28652 ;; *************** function _PMD_Initialize *****************
 28653 ;; Defined at:
 28654 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28655 ;; Parameters:    Size  Location     Type
 28656 ;;		None
 28657 ;; Auto vars:     Size  Location     Type
 28658 ;;		None
 28659 ;; Return value:  Size  Location     Type
 28660 ;;                  1    wreg      void 
 28661 ;; Registers used:
 28662 ;;		wreg, status,2
 28663 ;; Tracked objects:
 28664 ;;		On entry : 0/0
 28665 ;;		On exit  : 0/0
 28666 ;;		Unchanged: 0/0
 28667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28672 ;;Total ram usage:        0 bytes
 28673 ;; Hardware stack levels used: 1
 28674 ;; Hardware stack levels required when called: 5
 28675 ;; This function calls:
 28676 ;;		Nothing
 28677 ;; This function is called by:
 28678 ;;		_SYSTEM_Initialize
 28679 ;; This function uses a non-reentrant model
 28680 ;;
 28681                           
 28682                           	psect	text109
 28683   00A2EE                     __ptext109:
 28684                           	callstack 0
 28685   00A2EE                     _PMD_Initialize:
 28686                           	callstack 24
 28687   00A2EE                     
 28688                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 28689   00A2EE  0E00               	movlw	0
 28690   00A2F0  0139               	movlb	57	; () banked
 28691   00A2F2  6FC0               	movwf	192,b	;volatile
 28692                           
 28693                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 28694   00A2F4  0E00               	movlw	0
 28695   00A2F6  6FC1               	movwf	193,b	;volatile
 28696                           
 28697                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 28698   00A2F8  0E00               	movlw	0
 28699   00A2FA  6FC2               	movwf	194,b	;volatile
 28700                           
 28701                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 28702   00A2FC  0E00               	movlw	0
 28703   00A2FE  6FC3               	movwf	195,b	;volatile
 28704                           
 28705                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 28706   00A300  0E00               	movlw	0
 28707   00A302  6FC4               	movwf	196,b	;volatile
 28708                           
 28709                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 28710   00A304  0E00               	movlw	0
 28711   00A306  6FC5               	movwf	197,b	;volatile
 28712                           
 28713                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
 28714   00A308  0E00               	movlw	0
 28715   00A30A  6FC6               	movwf	198,b	;volatile
 28716                           
 28717                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
 28718   00A30C  0E00               	movlw	0
 28719   00A30E  6FC7               	movwf	199,b	;volatile
 28720   00A310                     
 28721                           ; BSR set to: 57
 28722   00A310  0012               	return		;funcret
 28723   00A312                     __end_of_PMD_Initialize:
 28724                           	callstack 0
 28725                           
 28726 ;; *************** function _PIN_MANAGER_Initialize *****************
 28727 ;; Defined at:
 28728 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 28729 ;; Parameters:    Size  Location     Type
 28730 ;;		None
 28731 ;; Auto vars:     Size  Location     Type
 28732 ;;		None
 28733 ;; Return value:  Size  Location     Type
 28734 ;;                  1    wreg      void 
 28735 ;; Registers used:
 28736 ;;		wreg, status,2
 28737 ;; Tracked objects:
 28738 ;;		On entry : 0/0
 28739 ;;		On exit  : 0/0
 28740 ;;		Unchanged: 0/0
 28741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28746 ;;Total ram usage:        0 bytes
 28747 ;; Hardware stack levels used: 1
 28748 ;; Hardware stack levels required when called: 5
 28749 ;; This function calls:
 28750 ;;		Nothing
 28751 ;; This function is called by:
 28752 ;;		_SYSTEM_Initialize
 28753 ;; This function uses a non-reentrant model
 28754 ;;
 28755                           
 28756                           	psect	text110
 28757   009B1A                     __ptext110:
 28758                           	callstack 0
 28759   009B1A                     _PIN_MANAGER_Initialize:
 28760                           	callstack 24
 28761   009B1A                     
 28762                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 28763   009B1A  0E00               	movlw	0
 28764   009B1C  6EBA               	movwf	186,c	;volatile
 28765                           
 28766                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 28767   009B1E  0E00               	movlw	0
 28768   009B20  6EBB               	movwf	187,c	;volatile
 28769                           
 28770                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 28771   009B22  0E00               	movlw	0
 28772   009B24  6EBC               	movwf	188,c	;volatile
 28773                           
 28774                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDF;
 28775   009B26  0EDF               	movlw	223
 28776   009B28  6EC2               	movwf	194,c	;volatile
 28777                           
 28778                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF9;
 28779   009B2A  0EF9               	movlw	249
 28780   009B2C  6EC3               	movwf	195,c	;volatile
 28781                           
 28782                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD7;
 28783   009B2E  0ED7               	movlw	215
 28784   009B30  6EC4               	movwf	196,c	;volatile
 28785                           
 28786                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC7;
 28787   009B32  0EC7               	movlw	199
 28788   009B34  013A               	movlb	58	; () banked
 28789   009B36  6F60               	movwf	96,b	;volatile
 28790                           
 28791                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF9;
 28792   009B38  0EF9               	movlw	249
 28793   009B3A  6F50               	movwf	80,b	;volatile
 28794                           
 28795                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xDF;
 28796   009B3C  0EDF               	movlw	223
 28797   009B3E  6F40               	movwf	64,b	;volatile
 28798                           
 28799                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 28800   009B40  0E00               	movlw	0
 28801   009B42  6F81               	movwf	129,b	;volatile
 28802                           
 28803                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 28804   009B44  0E00               	movlw	0
 28805   009B46  6F51               	movwf	81,b	;volatile
 28806                           
 28807                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 28808   009B48  0E00               	movlw	0
 28809   009B4A  6F41               	movwf	65,b	;volatile
 28810                           
 28811                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 28812   009B4C  0E00               	movlw	0
 28813   009B4E  6F61               	movwf	97,b	;volatile
 28814                           
 28815                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 28816   009B50  0E00               	movlw	0
 28817   009B52  6F42               	movwf	66,b	;volatile
 28818                           
 28819                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x05;
 28820   009B54  0E05               	movlw	5
 28821   009B56  6F52               	movwf	82,b	;volatile
 28822                           
 28823                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 28824   009B58  0E00               	movlw	0
 28825   009B5A  6F62               	movwf	98,b	;volatile
 28826   009B5C                     
 28827                           ; BSR set to: 58
 28828                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 28829   009B5C  6943               	setf	67,b	;volatile
 28830   009B5E                     
 28831                           ; BSR set to: 58
 28832                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 28833   009B5E  6953               	setf	83,b	;volatile
 28834   009B60                     
 28835                           ; BSR set to: 58
 28836                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 28837   009B60  6963               	setf	99,b	;volatile
 28838   009B62                     
 28839                           ; BSR set to: 58
 28840                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 28841   009B62  6944               	setf	68,b	;volatile
 28842   009B64                     
 28843                           ; BSR set to: 58
 28844                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 28845   009B64  6954               	setf	84,b	;volatile
 28846   009B66                     
 28847                           ; BSR set to: 58
 28848                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 28849   009B66  6964               	setf	100,b	;volatile
 28850                           
 28851                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 28852   009B68  0E08               	movlw	8
 28853   009B6A  6F84               	movwf	132,b	;volatile
 28854                           
 28855                           ;mcc_generated_files/pin_manager.c: 115:     SPI1SCKPPS = 0x13;
 28856   009B6C  0E13               	movlw	19
 28857   009B6E  6FE0               	movwf	224,b	;volatile
 28858                           
 28859                           ;mcc_generated_files/pin_manager.c: 116:     RC3PPS = 0x1E;
 28860   009B70  0E1E               	movlw	30
 28861   009B72  6F13               	movwf	19,b	;volatile
 28862                           
 28863                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x1F;
 28864   009B74  0E1F               	movlw	31
 28865   009B76  6F15               	movwf	21,b	;volatile
 28866                           
 28867                           ;mcc_generated_files/pin_manager.c: 118:     SPI1SDIPPS = 0x14;
 28868   009B78  0E14               	movlw	20
 28869   009B7A  6FE1               	movwf	225,b	;volatile
 28870   009B7C                     
 28871                           ; BSR set to: 58
 28872   009B7C  0012               	return		;funcret
 28873   009B7E                     __end_of_PIN_MANAGER_Initialize:
 28874                           	callstack 0
 28875                           
 28876 ;; *************** function _OSCILLATOR_Initialize *****************
 28877 ;; Defined at:
 28878 ;;		line 58 in file "mcc_generated_files/mcc.c"
 28879 ;; Parameters:    Size  Location     Type
 28880 ;;		None
 28881 ;; Auto vars:     Size  Location     Type
 28882 ;;		None
 28883 ;; Return value:  Size  Location     Type
 28884 ;;                  1    wreg      void 
 28885 ;; Registers used:
 28886 ;;		wreg, status,2
 28887 ;; Tracked objects:
 28888 ;;		On entry : 0/0
 28889 ;;		On exit  : 0/0
 28890 ;;		Unchanged: 0/0
 28891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28896 ;;Total ram usage:        0 bytes
 28897 ;; Hardware stack levels used: 1
 28898 ;; Hardware stack levels required when called: 5
 28899 ;; This function calls:
 28900 ;;		Nothing
 28901 ;; This function is called by:
 28902 ;;		_SYSTEM_Initialize
 28903 ;; This function uses a non-reentrant model
 28904 ;;
 28905                           
 28906                           	psect	text111
 28907   00A3DC                     __ptext111:
 28908                           	callstack 0
 28909   00A3DC                     _OSCILLATOR_Initialize:
 28910                           	callstack 24
 28911   00A3DC                     
 28912                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x70;
 28913   00A3DC  0E70               	movlw	112
 28914   00A3DE  0139               	movlb	57	; () banked
 28915   00A3E0  6FD9               	movwf	217,b	;volatile
 28916                           
 28917                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 28918   00A3E2  0E00               	movlw	0
 28919   00A3E4  6FDB               	movwf	219,b	;volatile
 28920                           
 28921                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 28922   00A3E6  0E00               	movlw	0
 28923   00A3E8  6FDD               	movwf	221,b	;volatile
 28924                           
 28925                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
 28926   00A3EA  0E02               	movlw	2
 28927   00A3EC  6FDF               	movwf	223,b	;volatile
 28928                           
 28929                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 28930   00A3EE  0E00               	movlw	0
 28931   00A3F0  6FDE               	movwf	222,b	;volatile
 28932   00A3F2                     
 28933                           ; BSR set to: 57
 28934   00A3F2  0012               	return		;funcret
 28935   00A3F4                     __end_of_OSCILLATOR_Initialize:
 28936                           	callstack 0
 28937                           
 28938 ;; *************** function _SET_ACCEL_I2C_ADDR *****************
 28939 ;; Defined at:
 28940 ;;		line 19 in file "main.c"
 28941 ;; Parameters:    Size  Location     Type
 28942 ;;  addr            1    wreg     unsigned char 
 28943 ;; Auto vars:     Size  Location     Type
 28944 ;;  addr            1    0[BANK0 ] unsigned char 
 28945 ;; Return value:  Size  Location     Type
 28946 ;;                  1    wreg      void 
 28947 ;; Registers used:
 28948 ;;		wreg, status,2, status,0
 28949 ;; Tracked objects:
 28950 ;;		On entry : 0/0
 28951 ;;		On exit  : 0/0
 28952 ;;		Unchanged: 0/0
 28953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28958 ;;Total ram usage:        1 bytes
 28959 ;; Hardware stack levels used: 1
 28960 ;; Hardware stack levels required when called: 5
 28961 ;; This function calls:
 28962 ;;		Nothing
 28963 ;; This function is called by:
 28964 ;;		_main
 28965 ;; This function uses a non-reentrant model
 28966 ;;
 28967                           
 28968                           	psect	text112
 28969   00A374                     __ptext112:
 28970                           	callstack 0
 28971   00A374                     _SET_ACCEL_I2C_ADDR:
 28972                           	callstack 25
 28973                           
 28974                           ; BSR set to: 57
 28975                           ;incstack = 0
 28976                           ;SET_ACCEL_I2C_ADDR@addr stored from wreg
 28977   00A374  0100               	movlb	0	; () banked
 28978   00A376  6F60               	movwf	SET_ACCEL_I2C_ADDR@addr& (0+255),b
 28979   00A378                     
 28980                           ;main.c: 21:     LATC2 = (addr == 0x19);
 28981   00A378  0E19               	movlw	25
 28982   00A37A  0100               	movlb	0	; () banked
 28983   00A37C  1960               	xorwf	SET_ACCEL_I2C_ADDR@addr& (0+255),w,b
 28984   00A37E  B4D8               	btfsc	status,2,c
 28985   00A380  EFC4  F051         	goto	u22201
 28986   00A384  EFC7  F051         	goto	u22200
 28987   00A388                     u22201:
 28988   00A388  84BC               	bsf	16316,2,c	;volatile
 28989   00A38A  EFC8  F051         	goto	u22215
 28990   00A38E                     u22200:
 28991   00A38E  94BC               	bcf	16316,2,c	;volatile
 28992   00A390                     u22215:
 28993   00A390  0012               	return		;funcret
 28994   00A392                     __end_of_SET_ACCEL_I2C_ADDR:
 28995                           	callstack 0
 28996                           
 28997 ;; *************** function _ADCC_Initialize *****************
 28998 ;; Defined at:
 28999 ;;		line 45 in file "adcc.c"
 29000 ;; Parameters:    Size  Location     Type
 29001 ;;		None
 29002 ;; Auto vars:     Size  Location     Type
 29003 ;;		None
 29004 ;; Return value:  Size  Location     Type
 29005 ;;                  1    wreg      void 
 29006 ;; Registers used:
 29007 ;;		wreg, status,2
 29008 ;; Tracked objects:
 29009 ;;		On entry : 0/0
 29010 ;;		On exit  : 0/0
 29011 ;;		Unchanged: 0/0
 29012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29017 ;;Total ram usage:        0 bytes
 29018 ;; Hardware stack levels used: 1
 29019 ;; Hardware stack levels required when called: 5
 29020 ;; This function calls:
 29021 ;;		Nothing
 29022 ;; This function is called by:
 29023 ;;		_main
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text113
 29028   009BE0                     __ptext113:
 29029                           	callstack 0
 29030   009BE0                     _ADCC_Initialize:
 29031                           	callstack 25
 29032   009BE0                     
 29033                           ;adcc.c: 49:     ADLTHL = 0x0;
 29034   009BE0  0E00               	movlw	0
 29035   009BE2  013E               	movlb	62	; () banked
 29036   009BE4  6FDE               	movwf	222,b	;volatile
 29037                           
 29038                           ;adcc.c: 51:     ADLTHH = 0x0;
 29039   009BE6  0E00               	movlw	0
 29040   009BE8  6FDF               	movwf	223,b	;volatile
 29041                           
 29042                           ;adcc.c: 53:     ADUTHL = 0x0;
 29043   009BEA  0E00               	movlw	0
 29044   009BEC  6FE0               	movwf	224,b	;volatile
 29045                           
 29046                           ;adcc.c: 55:     ADUTHH = 0x0;
 29047   009BEE  0E00               	movlw	0
 29048   009BF0  6FE1               	movwf	225,b	;volatile
 29049                           
 29050                           ;adcc.c: 57:     ADSTPTL = 0x0;
 29051   009BF2  0E00               	movlw	0
 29052   009BF4  6FE4               	movwf	228,b	;volatile
 29053                           
 29054                           ;adcc.c: 59:     ADSTPTH = 0x0;
 29055   009BF6  0E00               	movlw	0
 29056   009BF8  6FE5               	movwf	229,b	;volatile
 29057                           
 29058                           ;adcc.c: 61:     ADACCU = 0x0;
 29059   009BFA  0E00               	movlw	0
 29060   009BFC  6FEA               	movwf	234,b	;volatile
 29061                           
 29062                           ;adcc.c: 63:     ADRPT = 0x0;
 29063   009BFE  0E00               	movlw	0
 29064   009C00  6FEC               	movwf	236,b	;volatile
 29065                           
 29066                           ;adcc.c: 65:     ADPCH = 0x0;
 29067   009C02  0E00               	movlw	0
 29068   009C04  6FF1               	movwf	241,b	;volatile
 29069                           
 29070                           ;adcc.c: 67:     ADACQL = 0x1;
 29071   009C06  0E01               	movlw	1
 29072   009C08  6FF3               	movwf	243,b	;volatile
 29073                           
 29074                           ;adcc.c: 69:     ADACQH = 0x0;
 29075   009C0A  0E00               	movlw	0
 29076   009C0C  6FF4               	movwf	244,b	;volatile
 29077                           
 29078                           ;adcc.c: 71:     ADCAP = 0x0;
 29079   009C0E  0E00               	movlw	0
 29080   009C10  6FF5               	movwf	245,b	;volatile
 29081                           
 29082                           ;adcc.c: 73:     ADPREL = 0x0;
 29083   009C12  0E00               	movlw	0
 29084   009C14  6FF6               	movwf	246,b	;volatile
 29085                           
 29086                           ;adcc.c: 75:     ADPREH = 0x0;
 29087   009C16  0E00               	movlw	0
 29088   009C18  6FF7               	movwf	247,b	;volatile
 29089                           
 29090                           ;adcc.c: 77:     ADCON1 = 0x0;
 29091   009C1A  0E00               	movlw	0
 29092   009C1C  6FF9               	movwf	249,b	;volatile
 29093                           
 29094                           ;adcc.c: 79:     ADCON2 = 0x10;
 29095   009C1E  0E10               	movlw	16
 29096   009C20  6FFA               	movwf	250,b	;volatile
 29097                           
 29098                           ;adcc.c: 81:     ADCON3 = 0x0;
 29099   009C22  0E00               	movlw	0
 29100   009C24  6FFB               	movwf	251,b	;volatile
 29101                           
 29102                           ;adcc.c: 83:     ADSTAT = 0x0;
 29103   009C26  0E00               	movlw	0
 29104   009C28  6FFC               	movwf	252,b	;volatile
 29105                           
 29106                           ;adcc.c: 85:     ADREF = 0x0;
 29107   009C2A  0E00               	movlw	0
 29108   009C2C  6FFD               	movwf	253,b	;volatile
 29109                           
 29110                           ;adcc.c: 87:     ADACT = 0x0;
 29111   009C2E  0E00               	movlw	0
 29112   009C30  6FFE               	movwf	254,b	;volatile
 29113                           
 29114                           ;adcc.c: 89:     ADCLK = 0x1F;
 29115   009C32  0E1F               	movlw	31
 29116   009C34  6FFF               	movwf	255,b	;volatile
 29117                           
 29118                           ;adcc.c: 91:     ADCON0 = 0x84;
 29119   009C36  0E84               	movlw	132
 29120   009C38  6FF8               	movwf	248,b	;volatile
 29121   009C3A                     
 29122                           ; BSR set to: 62
 29123                           ;adcc.c: 94:     PIR1bits.ADIF = 0;
 29124   009C3A  0139               	movlb	57	; () banked
 29125   009C3C  95A1               	bcf	161,2,b	;volatile
 29126   009C3E                     
 29127                           ; BSR set to: 57
 29128                           ;adcc.c: 97:     PIR1bits.ADTIF = 0;
 29129   009C3E  97A1               	bcf	161,3,b	;volatile
 29130   009C40                     
 29131                           ; BSR set to: 57
 29132   009C40  0012               	return		;funcret
 29133   009C42                     __end_of_ADCC_Initialize:
 29134                           	callstack 0
 29135                           
 29136 ;; *************** function _ADCC_GetSingleConversion *****************
 29137 ;; Defined at:
 29138 ;;		line 121 in file "adcc.c"
 29139 ;; Parameters:    Size  Location     Type
 29140 ;;  channel         1    wreg     enum E22771
 29141 ;; Auto vars:     Size  Location     Type
 29142 ;;  channel         1    4[BANK0 ] enum E22771
 29143 ;; Return value:  Size  Location     Type
 29144 ;;                  2    0[BANK0 ] unsigned short 
 29145 ;; Registers used:
 29146 ;;		wreg, status,2, status,0
 29147 ;; Tracked objects:
 29148 ;;		On entry : 0/0
 29149 ;;		On exit  : 0/0
 29150 ;;		Unchanged: 0/0
 29151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29155 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29156 ;;Total ram usage:        5 bytes
 29157 ;; Hardware stack levels used: 1
 29158 ;; Hardware stack levels required when called: 5
 29159 ;; This function calls:
 29160 ;;		Nothing
 29161 ;; This function is called by:
 29162 ;;		_main
 29163 ;; This function uses a non-reentrant model
 29164 ;;
 29165                           
 29166                           	psect	text114
 29167   00A040                     __ptext114:
 29168                           	callstack 0
 29169   00A040                     _ADCC_GetSingleConversion:
 29170                           	callstack 25
 29171                           
 29172                           ; BSR set to: 57
 29173                           ;incstack = 0
 29174                           ;ADCC_GetSingleConversion@channel stored from wreg
 29175   00A040  0100               	movlb	0	; () banked
 29176   00A042  6F64               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
 29177   00A044                     
 29178                           ;adcc.c: 121: adc_result_t ADCC_GetSingleConversion(adcc_channel_t channel);adcc.c: 122:
      +                           {;adcc.c: 124:     ADPCH = channel;
 29179   00A044  0060  F193  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
 29180   00A04A                     
 29181                           ;adcc.c: 127:     ADCON0bits.ADCONT = 0;
 29182   00A04A  013E               	movlb	62	; () banked
 29183   00A04C  9DF8               	bcf	248,6,b	;volatile
 29184   00A04E                     
 29185                           ; BSR set to: 62
 29186                           ;adcc.c: 130:     ADCON0bits.ADGO = 1;
 29187   00A04E  81F8               	bsf	248,0,b	;volatile
 29188   00A050                     l665:
 29189                           
 29190                           ; BSR set to: 62
 29191                           ;adcc.c: 134:     while (ADCON0bits.ADGO)
 29192   00A050  B1F8               	btfsc	248,0,b	;volatile
 29193   00A052  EF2D  F050         	goto	u21901
 29194   00A056  EF2F  F050         	goto	u21900
 29195   00A05A                     u21901:
 29196   00A05A  EF28  F050         	goto	l665
 29197   00A05E                     u21900:
 29198   00A05E                     
 29199                           ; BSR set to: 62
 29200                           ;adcc.c: 140:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 29201   00A05E  51F0               	movf	240,w,b	;volatile
 29202   00A060  0100               	movlb	0	; () banked
 29203   00A062  6F63               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
 29204   00A064  6B62               	clrf	??_ADCC_GetSingleConversion& (0+255),b
 29205   00A066  013E               	movlb	62	; () banked
 29206   00A068  51EF               	movf	239,w,b	;volatile
 29207   00A06A  0100               	movlb	0	; () banked
 29208   00A06C  2562               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
 29209   00A06E  6F60               	movwf	?_ADCC_GetSingleConversion& (0+255),b
 29210   00A070  013E               	movlb	62	; () banked
 29211   00A072  0E00               	movlw	0
 29212   00A074  0100               	movlb	0	; () banked
 29213   00A076  2163               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
 29214   00A078  6F61               	movwf	(?_ADCC_GetSingleConversion+1)& (0+255),b
 29215   00A07A                     
 29216                           ; BSR set to: 0
 29217   00A07A  0012               	return		;funcret
 29218   00A07C                     __end_of_ADCC_GetSingleConversion:
 29219                           	callstack 0
 29220                           
 29221 ;; *************** function _interrupt_handler *****************
 29222 ;; Defined at:
 29223 ;;		line 264 in file "main.c"
 29224 ;; Parameters:    Size  Location     Type
 29225 ;;		None
 29226 ;; Auto vars:     Size  Location     Type
 29227 ;;		None
 29228 ;; Return value:  Size  Location     Type
 29229 ;;                  1    wreg      void 
 29230 ;; Registers used:
 29231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 29232 ;; Tracked objects:
 29233 ;;		On entry : 0/0
 29234 ;;		On exit  : 0/0
 29235 ;;		Unchanged: 0/0
 29236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29241 ;;Total ram usage:        2 bytes
 29242 ;; Hardware stack levels used: 1
 29243 ;; Hardware stack levels required when called: 4
 29244 ;; This function calls:
 29245 ;;		_can_handle_interrupt
 29246 ;;		_timer0_handle_interrupt
 29247 ;; This function is called by:
 29248 ;;		Interrupt level 2
 29249 ;; This function uses a non-reentrant model
 29250 ;;
 29251                           
 29252                           	psect	text115
 29253   009DAE                     __ptext115:
 29254                           	callstack 0
 29255   009DAE                     _interrupt_handler:
 29256                           	callstack 12
 29257                           
 29258                           ; BSR set to: 0
 29259                           ;incstack = 0
 29260   009DAE  006F FFE8  F02B    	movff	pclath,??_interrupt_handler
 29261   009DB4  006F FFEC  F02C    	movff	pclatu,??_interrupt_handler+1
 29262   009DBA                     
 29263                           ;main.c: 265:     if (PIR5) {
 29264   009DBA  0139               	movlb	57	; () banked
 29265   009DBC  51A5               	movf	165,w,b	;volatile
 29266   009DBE  B4D8               	btfsc	status,2,c
 29267   009DC0  EFE4  F04E         	goto	i2u1633_41
 29268   009DC4  EFE6  F04E         	goto	i2u1633_40
 29269   009DC8                     i2u1633_41:
 29270   009DC8  EFE8  F04E         	goto	i2l14092
 29271   009DCC                     i2u1633_40:
 29272   009DCC                     
 29273                           ; BSR set to: 57
 29274                           ;main.c: 266:         can_handle_interrupt();
 29275   009DCC  ECF7  F036         	call	_can_handle_interrupt	;wreg free
 29276   009DD0                     i2l14092:
 29277                           
 29278                           ;main.c: 271:     if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
 29279   009DD0  0139               	movlb	57	; () banked
 29280   009DD2  AF93               	btfss	147,7,b	;volatile
 29281   009DD4  EFEE  F04E         	goto	i2u1634_41
 29282   009DD8  EFF0  F04E         	goto	i2u1634_40
 29283   009DDC                     i2u1634_41:
 29284   009DDC  EFFB  F04E         	goto	i2l2236
 29285   009DE0                     i2u1634_40:
 29286   009DE0                     
 29287                           ; BSR set to: 57
 29288   009DE0  AFA3               	btfss	163,7,b	;volatile
 29289   009DE2  EFF5  F04E         	goto	i2u1635_41
 29290   009DE6  EFF7  F04E         	goto	i2u1635_40
 29291   009DEA                     i2u1635_41:
 29292   009DEA  EFFB  F04E         	goto	i2l2236
 29293   009DEE                     i2u1635_40:
 29294   009DEE                     
 29295                           ; BSR set to: 57
 29296                           ;main.c: 272:         timer0_handle_interrupt();
 29297   009DEE  EC64  F051         	call	_timer0_handle_interrupt	;wreg free
 29298   009DF2                     
 29299                           ;main.c: 273:         PIR3bits.TMR0IF = 0;
 29300   009DF2  0139               	movlb	57	; () banked
 29301   009DF4  9FA3               	bcf	163,7,b	;volatile
 29302   009DF6                     i2l2236:
 29303                           
 29304                           ; BSR set to: 57
 29305   009DF6  0060  F0B3  FFFB   	movff	??_interrupt_handler+1,pclatu
 29306   009DFC  0060  F0AF  FFFA   	movff	??_interrupt_handler,pclath
 29307   009E02  0011               	retfie		f
 29308   009E04                     __end_of_interrupt_handler:
 29309                           	callstack 0
 29310                           
 29311 ;; *************** function _timer0_handle_interrupt *****************
 29312 ;; Defined at:
 29313 ;;		line 52 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 29314 ;; Parameters:    Size  Location     Type
 29315 ;;		None
 29316 ;; Auto vars:     Size  Location     Type
 29317 ;;		None
 29318 ;; Return value:  Size  Location     Type
 29319 ;;                  1    wreg      void 
 29320 ;; Registers used:
 29321 ;;		wreg, status,2, status,0
 29322 ;; Tracked objects:
 29323 ;;		On entry : 0/0
 29324 ;;		On exit  : 0/0
 29325 ;;		Unchanged: 0/0
 29326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29331 ;;Total ram usage:        0 bytes
 29332 ;; Hardware stack levels used: 1
 29333 ;; This function calls:
 29334 ;;		Nothing
 29335 ;; This function is called by:
 29336 ;;		_interrupt_handler
 29337 ;; This function uses a non-reentrant model
 29338 ;;
 29339                           
 29340                           	psect	text116
 29341   00A2C8                     __ptext116:
 29342                           	callstack 0
 29343   00A2C8                     _timer0_handle_interrupt:
 29344                           	callstack 15
 29345   00A2C8                     
 29346                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 56:     internal_count += 64;
 29347   00A2C8  0E40               	movlw	64
 29348   00A2CA  264F               	addwf	timer0_handle_interrupt@internal_count^0,f,c
 29349                           
 29350                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 57:     if (internal_count > 125) {
 29351   00A2CC  0E7D               	movlw	125
 29352   00A2CE  644F               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
 29353   00A2D0  EF6C  F051         	goto	i2u617_41
 29354   00A2D4  EF6E  F051         	goto	i2u617_40
 29355   00A2D8                     i2u617_41:
 29356   00A2D8  EF76  F051         	goto	i2l125
 29357   00A2DC                     i2u617_40:
 29358   00A2DC                     
 29359                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 58:         internal_count -= 125;
 29360   00A2DC  0E7D               	movlw	125
 29361   00A2DE  5E4F               	subwf	timer0_handle_interrupt@internal_count^0,f,c
 29362                           
 29363                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 59:         millis_counter++;
 29364   00A2E0  0E01               	movlw	1
 29365   00A2E2  263E               	addwf	_millis_counter^0,f,c	;volatile
 29366   00A2E4  0E00               	movlw	0
 29367   00A2E6  223F               	addwfc	(_millis_counter+1)^0,f,c	;volatile
 29368   00A2E8  2240               	addwfc	(_millis_counter+2)^0,f,c	;volatile
 29369   00A2EA  2241               	addwfc	(_millis_counter+3)^0,f,c	;volatile
 29370   00A2EC                     i2l125:
 29371   00A2EC  0012               	return		;funcret
 29372   00A2EE                     __end_of_timer0_handle_interrupt:
 29373                           	callstack 0
 29374                           
 29375 ;; *************** function _can_handle_interrupt *****************
 29376 ;; Defined at:
 29377 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 29378 ;; Parameters:    Size  Location     Type
 29379 ;;		None
 29380 ;; Auto vars:     Size  Location     Type
 29381 ;;  rcvd_msg       11   31[COMRAM] struct .
 29382 ;;  rcvd_msg       11   20[COMRAM] struct .
 29383 ;; Return value:  Size  Location     Type
 29384 ;;                  1    wreg      void 
 29385 ;; Registers used:
 29386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 29387 ;; Tracked objects:
 29388 ;;		On entry : 0/0
 29389 ;;		On exit  : 0/0
 29390 ;;		Unchanged: 0/0
 29391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29393 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29395 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29396 ;;Total ram usage:       26 bytes
 29397 ;; Hardware stack levels used: 1
 29398 ;; Hardware stack levels required when called: 3
 29399 ;; This function calls:
 29400 ;;		NULL
 29401 ;;		_can_msg_handler
 29402 ;;		i2_memcpy
 29403 ;; This function is called by:
 29404 ;;		_interrupt_handler
 29405 ;; This function uses a non-reentrant model
 29406 ;;
 29407                           
 29408                           	psect	text117
 29409   006DEE                     __ptext117:
 29410                           	callstack 0
 29411   006DEE                     _can_handle_interrupt:
 29412                           	callstack 12
 29413   006DEE                     
 29414                           ;canlib/pic18f26k83/pic18f26k83_can.c: 124:     if (COMSTATbits.RXB0OVFL || COMSTATbits.
      +                          RXB1OVFL) {
 29415   006DEE  BE90               	btfsc	144,7,c	;volatile
 29416   006DF0  EFFC  F036         	goto	i2u1420_41
 29417   006DF4  EFFE  F036         	goto	i2u1420_40
 29418   006DF8                     i2u1420_41:
 29419   006DF8  EF05  F037         	goto	i2l86
 29420   006DFC                     i2u1420_40:
 29421   006DFC  AC90               	btfss	144,6,c	;volatile
 29422   006DFE  EF03  F037         	goto	i2u1421_41
 29423   006E02  EF05  F037         	goto	i2u1421_40
 29424   006E06                     i2u1421_41:
 29425   006E06  EF07  F037         	goto	i2l84
 29426   006E0A                     i2u1421_40:
 29427   006E0A                     i2l86:
 29428                           
 29429                           ;canlib/pic18f26k83/pic18f26k83_can.c: 125:         COMSTATbits.RXB0OVFL = 0;
 29430   006E0A  9E90               	bcf	144,7,c	;volatile
 29431                           
 29432                           ;canlib/pic18f26k83/pic18f26k83_can.c: 126:         COMSTATbits.RXB1OVFL = 0;
 29433   006E0C  9C90               	bcf	144,6,c	;volatile
 29434   006E0E                     i2l84:
 29435                           
 29436                           ;canlib/pic18f26k83/pic18f26k83_can.c: 129:     if (TXB0CONbits.TXREQ && TXB0CONbits.TXE
      +                          RR && PIR5bits.IRXIF) {
 29437   006E0E  0137               	movlb	55	; () banked
 29438   006E10  A7E0               	btfss	224,3,b	;volatile
 29439   006E12  EF0D  F037         	goto	i2u1422_41
 29440   006E16  EF0F  F037         	goto	i2u1422_40
 29441   006E1A                     i2u1422_41:
 29442   006E1A  EF22  F037         	goto	i2l87
 29443   006E1E                     i2u1422_40:
 29444   006E1E                     
 29445                           ; BSR set to: 55
 29446   006E1E  A9E0               	btfss	224,4,b	;volatile
 29447   006E20  EF14  F037         	goto	i2u1423_41
 29448   006E24  EF16  F037         	goto	i2u1423_40
 29449   006E28                     i2u1423_41:
 29450   006E28  EF22  F037         	goto	i2l87
 29451   006E2C                     i2u1423_40:
 29452   006E2C                     
 29453                           ; BSR set to: 55
 29454   006E2C  0139               	movlb	57	; () banked
 29455   006E2E  AFA5               	btfss	165,7,b	;volatile
 29456   006E30  EF1C  F037         	goto	i2u1424_41
 29457   006E34  EF1E  F037         	goto	i2u1424_40
 29458   006E38                     i2u1424_41:
 29459   006E38  EF22  F037         	goto	i2l87
 29460   006E3C                     i2u1424_40:
 29461   006E3C                     
 29462                           ; BSR set to: 57
 29463                           ;canlib/pic18f26k83/pic18f26k83_can.c: 131:         TXB0CONbits.TXREQ = 0;
 29464   006E3C  0137               	movlb	55	; () banked
 29465   006E3E  97E0               	bcf	224,3,b	;volatile
 29466                           
 29467                           ;canlib/pic18f26k83/pic18f26k83_can.c: 132:         return;
 29468   006E40  EFF3  F037         	goto	i2l88
 29469   006E44                     i2l87:
 29470                           
 29471                           ;canlib/pic18f26k83/pic18f26k83_can.c: 137:     if (PIR5bits.RXB0IF) {
 29472   006E44  0139               	movlb	57	; () banked
 29473   006E46  A1A5               	btfss	165,0,b	;volatile
 29474   006E48  EF28  F037         	goto	i2u1425_41
 29475   006E4C  EF2A  F037         	goto	i2u1425_40
 29476   006E50                     i2u1425_41:
 29477   006E50  EF71  F037         	goto	i2l89
 29478   006E54                     i2u1425_40:
 29479   006E54                     
 29480                           ; BSR set to: 57
 29481                           ;canlib/pic18f26k83/pic18f26k83_can.c: 138:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 139:         rcvd_msg.sid = (((uint16_t)RXB0SIDH) << 3) | (RXB0SID
      +                          L >> 5);
 29482   006E54  006F FE08  F011    	movff	16258,??_can_handle_interrupt	;volatile
 29483   006E5A  0E05               	movlw	5
 29484   006E5C  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 29485   006E5E                     i2u1426_45:
 29486   006E5E  90D8               	bcf	status,0,c
 29487   006E60  3211               	rrcf	??_can_handle_interrupt^0,f,c
 29488   006E62  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 29489   006E64  EF2F  F037         	goto	i2u1426_45
 29490   006E68  5011               	movf	??_can_handle_interrupt^0,w,c
 29491   006E6A  006F FE04  F013    	movff	16257,??_can_handle_interrupt+2	;volatile
 29492   006E70  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 29493   006E72  90D8               	bcf	status,0,c
 29494   006E74  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29495   006E76  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29496   006E78  90D8               	bcf	status,0,c
 29497   006E7A  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29498   006E7C  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29499   006E7E  90D8               	bcf	status,0,c
 29500   006E80  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29501   006E82  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29502   006E84  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 29503   006E86  6E15               	movwf	can_handle_interrupt@rcvd_msg^0,c
 29504   006E88  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 29505   006E8A  6E16               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
 29506                           
 29507                           ;canlib/pic18f26k83/pic18f26k83_can.c: 140:         rcvd_msg.data_len = RXB0DLCbits.DLC;
 29508   006E8C  5085               	movf	133,w,c	;volatile
 29509   006E8E  0B0F               	andlw	15
 29510   006E90  6E17               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
 29511   006E92                     
 29512                           ; BSR set to: 57
 29513                           ;canlib/pic18f26k83/pic18f26k83_can.c: 141:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB0D0, rcvd_msg.data_len);
 29514   006E92  0E18               	movlw	low (can_handle_interrupt@rcvd_msg+3)
 29515   006E94  6E01               	movwf	i2memcpy@d1^0,c
 29516   006E96  6A02               	clrf	(i2memcpy@d1+1)^0,c
 29517   006E98  0E86               	movlw	134
 29518   006E9A  6E03               	movwf	i2memcpy@s1^0,c
 29519   006E9C  0E3F               	movlw	63
 29520   006E9E  6E04               	movwf	(i2memcpy@s1+1)^0,c
 29521   006EA0  C017  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
 29522   006EA4  6A06               	clrf	(i2memcpy@n+1)^0,c
 29523   006EA6  EC7E  F04E         	call	i2_memcpy	;wreg free
 29524   006EAA                     
 29525                           ;canlib/pic18f26k83/pic18f26k83_can.c: 144:         if (((void*)0) != can_rcv_cb) {
 29526   006EAA  5046               	movf	_can_rcv_cb^0,w,c
 29527   006EAC  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 29528   006EAE  B4D8               	btfsc	status,2,c
 29529   006EB0  EF5C  F037         	goto	i2u1427_41
 29530   006EB4  EF5E  F037         	goto	i2u1427_40
 29531   006EB8                     i2u1427_41:
 29532   006EB8  EF6C  F037         	goto	i2l12316
 29533   006EBC                     i2u1427_40:
 29534   006EBC                     
 29535                           ;canlib/pic18f26k83/pic18f26k83_can.c: 145:             can_rcv_cb(&rcvd_msg);
 29536   006EBC  0E15               	movlw	low can_handle_interrupt@rcvd_msg
 29537   006EBE  6E0A               	movwf	can_msg_handler@msg^0,c
 29538   006EC0  D802               	call	i2u1428_48
 29539   006EC2  EF6C  F037         	goto	i2u1428_49
 29540   006EC6                     i2u1428_48:
 29541   006EC6  0005               	push	
 29542   006EC8  6EFA               	movwf	pclath,c
 29543   006ECA  5046               	movf	_can_rcv_cb^0,w,c
 29544   006ECC  6EFD               	movwf	tosl,c
 29545   006ECE  5047               	movf	(_can_rcv_cb+1)^0,w,c
 29546   006ED0  6EFE               	movwf	tosh,c
 29547   006ED2  6AFF               	clrf	tosu,c
 29548   006ED4  50FA               	movf	pclath,w,c
 29549   006ED6  0012               	return		;indir
 29550   006ED8                     i2u1428_49:
 29551   006ED8                     i2l12316:
 29552                           
 29553                           ;canlib/pic18f26k83/pic18f26k83_can.c: 148:         PIR5bits.RXB0IF = 0;
 29554   006ED8  0139               	movlb	57	; () banked
 29555   006EDA  91A5               	bcf	165,0,b	;volatile
 29556   006EDC                     
 29557                           ; BSR set to: 57
 29558                           ;canlib/pic18f26k83/pic18f26k83_can.c: 149:         RXB0CONbits.RXFUL = 0;
 29559   006EDC  9E80               	bcf	128,7,c	;volatile
 29560   006EDE  EFF3  F037         	goto	i2l88
 29561   006EE2                     i2l89:
 29562                           
 29563                           ; BSR set to: 57
 29564   006EE2  A3A5               	btfss	165,1,b	;volatile
 29565   006EE4  EF76  F037         	goto	i2u1429_41
 29566   006EE8  EF78  F037         	goto	i2u1429_40
 29567   006EEC                     i2u1429_41:
 29568   006EEC  EFC1  F037         	goto	i2l92
 29569   006EF0                     i2u1429_40:
 29570   006EF0                     
 29571                           ; BSR set to: 57
 29572                           ;canlib/pic18f26k83/pic18f26k83_can.c: 153:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 154:         rcvd_msg.sid = (((uint16_t)RXB1SIDH) << 3) | (RXB1SID
      +                          L >> 5);
 29573   006EF0  006D FFC8  F011    	movff	14322,??_can_handle_interrupt	;volatile
 29574   006EF6  0E05               	movlw	5
 29575   006EF8  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 29576   006EFA                     i2u1430_45:
 29577   006EFA  90D8               	bcf	status,0,c
 29578   006EFC  3211               	rrcf	??_can_handle_interrupt^0,f,c
 29579   006EFE  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 29580   006F00  EF7D  F037         	goto	i2u1430_45
 29581   006F04  5011               	movf	??_can_handle_interrupt^0,w,c
 29582   006F06  006D FFC4  F013    	movff	14321,??_can_handle_interrupt+2	;volatile
 29583   006F0C  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 29584   006F0E  90D8               	bcf	status,0,c
 29585   006F10  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29586   006F12  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29587   006F14  90D8               	bcf	status,0,c
 29588   006F16  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29589   006F18  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29590   006F1A  90D8               	bcf	status,0,c
 29591   006F1C  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29592   006F1E  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29593   006F20  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 29594   006F22  6E20               	movwf	can_handle_interrupt@rcvd_msg_753^0,c
 29595   006F24  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 29596   006F26  6E21               	movwf	(can_handle_interrupt@rcvd_msg_753+1)^0,c
 29597                           
 29598                           ;canlib/pic18f26k83/pic18f26k83_can.c: 155:         rcvd_msg.data_len = RXB1DLCbits.DLC;
 29599   006F28  0137               	movlb	55	; () banked
 29600   006F2A  51F5               	movf	245,w,b	;volatile
 29601   006F2C  0B0F               	andlw	15
 29602   006F2E  6E22               	movwf	(can_handle_interrupt@rcvd_msg_753+2)^0,c
 29603   006F30                     
 29604                           ; BSR set to: 55
 29605                           ;canlib/pic18f26k83/pic18f26k83_can.c: 156:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB1D0, rcvd_msg.data_len);
 29606   006F30  0E23               	movlw	low (can_handle_interrupt@rcvd_msg_753+3)
 29607   006F32  6E01               	movwf	i2memcpy@d1^0,c
 29608   006F34  6A02               	clrf	(i2memcpy@d1+1)^0,c
 29609   006F36  0EF6               	movlw	246
 29610   006F38  6E03               	movwf	i2memcpy@s1^0,c
 29611   006F3A  0E37               	movlw	55
 29612   006F3C  6E04               	movwf	(i2memcpy@s1+1)^0,c
 29613   006F3E  C022  F005         	movff	can_handle_interrupt@rcvd_msg_753+2,i2memcpy@n
 29614   006F42  6A06               	clrf	(i2memcpy@n+1)^0,c
 29615   006F44  EC7E  F04E         	call	i2_memcpy	;wreg free
 29616   006F48                     
 29617                           ;canlib/pic18f26k83/pic18f26k83_can.c: 159:         if (((void*)0) != can_rcv_cb) {
 29618   006F48  5046               	movf	_can_rcv_cb^0,w,c
 29619   006F4A  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 29620   006F4C  B4D8               	btfsc	status,2,c
 29621   006F4E  EFAB  F037         	goto	i2u1431_41
 29622   006F52  EFAD  F037         	goto	i2u1431_40
 29623   006F56                     i2u1431_41:
 29624   006F56  EFBB  F037         	goto	i2l12332
 29625   006F5A                     i2u1431_40:
 29626   006F5A                     
 29627                           ;canlib/pic18f26k83/pic18f26k83_can.c: 160:             can_rcv_cb(&rcvd_msg);
 29628   006F5A  0E20               	movlw	low can_handle_interrupt@rcvd_msg_753
 29629   006F5C  6E0A               	movwf	can_msg_handler@msg^0,c
 29630   006F5E  D802               	call	i2u1432_48
 29631   006F60  EFBB  F037         	goto	i2u1432_49
 29632   006F64                     i2u1432_48:
 29633   006F64  0005               	push	
 29634   006F66  6EFA               	movwf	pclath,c
 29635   006F68  5046               	movf	_can_rcv_cb^0,w,c
 29636   006F6A  6EFD               	movwf	tosl,c
 29637   006F6C  5047               	movf	(_can_rcv_cb+1)^0,w,c
 29638   006F6E  6EFE               	movwf	tosh,c
 29639   006F70  6AFF               	clrf	tosu,c
 29640   006F72  50FA               	movf	pclath,w,c
 29641   006F74  0012               	return		;indir
 29642   006F76                     i2u1432_49:
 29643   006F76                     i2l12332:
 29644                           
 29645                           ;canlib/pic18f26k83/pic18f26k83_can.c: 163:         PIR5bits.RXB1IF = 0;
 29646   006F76  0139               	movlb	57	; () banked
 29647   006F78  93A5               	bcf	165,1,b	;volatile
 29648   006F7A                     
 29649                           ; BSR set to: 57
 29650                           ;canlib/pic18f26k83/pic18f26k83_can.c: 164:         RXB1CONbits.RXFUL = 0;
 29651   006F7A  0137               	movlb	55	; () banked
 29652   006F7C  9FF0               	bcf	240,7,b	;volatile
 29653                           
 29654                           ;canlib/pic18f26k83/pic18f26k83_can.c: 165:     }
 29655   006F7E  EFF3  F037         	goto	i2l88
 29656   006F82                     i2l92:
 29657                           
 29658                           ; BSR set to: 57
 29659   006F82  A5A5               	btfss	165,2,b	;volatile
 29660   006F84  EFC6  F037         	goto	i2u1433_41
 29661   006F88  EFC8  F037         	goto	i2u1433_40
 29662   006F8C                     i2u1433_41:
 29663   006F8C  EFCB  F037         	goto	i2l95
 29664   006F90                     i2u1433_40:
 29665   006F90                     
 29666                           ; BSR set to: 57
 29667                           ;canlib/pic18f26k83/pic18f26k83_can.c: 170:         PIR5bits.TXB0IF = 0;
 29668   006F90  95A5               	bcf	165,2,b	;volatile
 29669                           
 29670                           ;canlib/pic18f26k83/pic18f26k83_can.c: 171:         return;
 29671   006F92  EFF3  F037         	goto	i2l88
 29672   006F96                     i2l95:
 29673                           
 29674                           ; BSR set to: 57
 29675   006F96  A7A5               	btfss	165,3,b	;volatile
 29676   006F98  EFD0  F037         	goto	i2u1434_41
 29677   006F9C  EFD2  F037         	goto	i2u1434_40
 29678   006FA0                     i2u1434_41:
 29679   006FA0  EFD5  F037         	goto	i2l97
 29680   006FA4                     i2u1434_40:
 29681   006FA4                     
 29682                           ; BSR set to: 57
 29683                           ;canlib/pic18f26k83/pic18f26k83_can.c: 173:         PIR5bits.TXB1IF = 0;
 29684   006FA4  97A5               	bcf	165,3,b	;volatile
 29685                           
 29686                           ;canlib/pic18f26k83/pic18f26k83_can.c: 174:         return;
 29687   006FA6  EFF3  F037         	goto	i2l88
 29688   006FAA                     i2l97:
 29689                           
 29690                           ; BSR set to: 57
 29691   006FAA  A9A5               	btfss	165,4,b	;volatile
 29692   006FAC  EFDA  F037         	goto	i2u1435_41
 29693   006FB0  EFDC  F037         	goto	i2u1435_40
 29694   006FB4                     i2u1435_41:
 29695   006FB4  EFDF  F037         	goto	i2l99
 29696   006FB8                     i2u1435_40:
 29697   006FB8                     
 29698                           ; BSR set to: 57
 29699                           ;canlib/pic18f26k83/pic18f26k83_can.c: 176:         PIR5bits.TXB2IF = 0;
 29700   006FB8  99A5               	bcf	165,4,b	;volatile
 29701                           
 29702                           ;canlib/pic18f26k83/pic18f26k83_can.c: 177:         return;
 29703   006FBA  EFF3  F037         	goto	i2l88
 29704   006FBE                     i2l99:
 29705                           
 29706                           ; BSR set to: 57
 29707   006FBE  AFA5               	btfss	165,7,b	;volatile
 29708   006FC0  EFE4  F037         	goto	i2u1436_41
 29709   006FC4  EFE6  F037         	goto	i2u1436_40
 29710   006FC8                     i2u1436_41:
 29711   006FC8  EFE9  F037         	goto	i2l101
 29712   006FCC                     i2u1436_40:
 29713   006FCC                     
 29714                           ; BSR set to: 57
 29715                           ;canlib/pic18f26k83/pic18f26k83_can.c: 181:         PIR5bits.IRXIF = 0;
 29716   006FCC  9FA5               	bcf	165,7,b	;volatile
 29717                           
 29718                           ;canlib/pic18f26k83/pic18f26k83_can.c: 182:         return;
 29719   006FCE  EFF3  F037         	goto	i2l88
 29720   006FD2                     i2l101:
 29721                           
 29722                           ; BSR set to: 57
 29723   006FD2  ABA5               	btfss	165,5,b	;volatile
 29724   006FD4  EFEE  F037         	goto	i2u1437_41
 29725   006FD8  EFF0  F037         	goto	i2u1437_40
 29726   006FDC                     i2u1437_41:
 29727   006FDC  EFF3  F037         	goto	i2l98
 29728   006FE0                     i2u1437_40:
 29729   006FE0                     
 29730                           ; BSR set to: 57
 29731                           ;canlib/pic18f26k83/pic18f26k83_can.c: 186:         PIR5bits.ERRIF = 0;
 29732   006FE0  9BA5               	bcf	165,5,b	;volatile
 29733                           
 29734                           ;canlib/pic18f26k83/pic18f26k83_can.c: 187:         return;
 29735   006FE2  EFF3  F037         	goto	i2l88
 29736   006FE6                     i2l98:
 29737   006FE6                     i2l88:
 29738   006FE6  0012               	return		;funcret
 29739   006FE8                     __end_of_can_handle_interrupt:
 29740                           	callstack 0
 29741                           
 29742 ;; *************** function i2_memcpy *****************
 29743 ;; Defined at:
 29744 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 29745 ;; Parameters:    Size  Location     Type
 29746 ;;  d1              2    0[COMRAM] PTR void 
 29747 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 29748 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 29749 ;;  s1              2    2[COMRAM] PTR const void 
 29750 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 29751 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 29752 ;;  n               2    4[COMRAM] unsigned int 
 29753 ;; Auto vars:     Size  Location     Type
 29754 ;;  s               2    8[COMRAM] PTR const unsigned char 
 29755 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 29756 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 29757 ;;  d               2    6[COMRAM] PTR unsigned char 
 29758 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 29759 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 29760 ;;  tmp             1   10[COMRAM] unsigned char 
 29761 ;; Return value:  Size  Location     Type
 29762 ;;                  2    0[COMRAM] PTR void 
 29763 ;; Registers used:
 29764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29765 ;; Tracked objects:
 29766 ;;		On entry : 0/0
 29767 ;;		On exit  : 0/0
 29768 ;;		Unchanged: 0/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29770 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29771 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29773 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29774 ;;Total ram usage:       11 bytes
 29775 ;; Hardware stack levels used: 1
 29776 ;; This function calls:
 29777 ;;		Nothing
 29778 ;; This function is called by:
 29779 ;;		_can_handle_interrupt
 29780 ;; This function uses a non-reentrant model
 29781 ;;
 29782                           
 29783                           	psect	text118
 29784   009CFC                     __ptext118:
 29785                           	callstack 0
 29786   009CFC                     i2_memcpy:
 29787                           	callstack 14
 29788   009CFC  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 29789   009D00  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 29790   009D04  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 29791   009D08  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 29792   009D0C  EF9D  F04E         	goto	i2l12234
 29793   009D10                     i2l12226:
 29794   009D10  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 29795   009D16  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 29796   009D1C  50DF               	movf	indf2,w,c
 29797   009D1E  6E0B               	movwf	i2memcpy@tmp^0,c
 29798   009D20  4A09               	infsnz	i2memcpy@s^0,f,c
 29799   009D22  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 29800   009D24  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 29801   009D2A  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 29802   009D30  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 29803   009D36  4A07               	infsnz	i2memcpy@d^0,f,c
 29804   009D38  2A08               	incf	(i2memcpy@d+1)^0,f,c
 29805   009D3A                     i2l12234:
 29806   009D3A  0605               	decf	i2memcpy@n^0,f,c
 29807   009D3C  A0D8               	btfss	status,0,c
 29808   009D3E  0606               	decf	(i2memcpy@n+1)^0,f,c
 29809   009D40  2805               	incf	i2memcpy@n^0,w,c
 29810   009D42  E106               	bnz	i2u1417_41
 29811   009D44  2806               	incf	(i2memcpy@n+1)^0,w,c
 29812   009D46  A4D8               	btfss	status,2,c
 29813   009D48  EFA8  F04E         	goto	i2u1417_41
 29814   009D4C  EFAA  F04E         	goto	i2u1417_40
 29815   009D50                     i2u1417_41:
 29816   009D50  EF88  F04E         	goto	i2l12226
 29817   009D54                     i2u1417_40:
 29818   009D54  0012               	return		;funcret
 29819   009D56                     __end_ofi2_memcpy:
 29820                           	callstack 0
 29821                           
 29822 ;; *************** function _can_msg_handler *****************
 29823 ;; Defined at:
 29824 ;;		line 191 in file "main.c"
 29825 ;; Parameters:    Size  Location     Type
 29826 ;;  msg             1    9[COMRAM] PTR const struct .
 29827 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 29828 ;; Auto vars:     Size  Location     Type
 29829 ;;  dest_id         2   14[COMRAM] int 
 29830 ;;  msg_type        2   12[COMRAM] unsigned short 
 29831 ;;  cmd_type        2    0        int 
 29832 ;; Return value:  Size  Location     Type
 29833 ;;                  1    wreg      void 
 29834 ;; Registers used:
 29835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29836 ;; Tracked objects:
 29837 ;;		On entry : 0/0
 29838 ;;		On exit  : 0/0
 29839 ;;		Unchanged: 0/0
 29840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29842 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29844 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29845 ;;Total ram usage:        7 bytes
 29846 ;; Hardware stack levels used: 1
 29847 ;; Hardware stack levels required when called: 2
 29848 ;; This function calls:
 29849 ;;		_BLUE_LED_OFF
 29850 ;;		_BLUE_LED_ON
 29851 ;;		_GREEN_LED_OFF
 29852 ;;		_GREEN_LED_ON
 29853 ;;		_RED_LED_OFF
 29854 ;;		_RED_LED_ON
 29855 ;;		_get_board_unique_id
 29856 ;;		_get_message_type
 29857 ;;		_get_reset_board_id
 29858 ;; This function is called by:
 29859 ;;		_main
 29860 ;;		_can_handle_interrupt
 29861 ;; This function uses a non-reentrant model
 29862 ;;
 29863                           
 29864                           	psect	text119
 29865   008E32                     __ptext119:
 29866                           	callstack 0
 29867   008E32                     _can_msg_handler:
 29868                           	callstack 12
 29869   008E32                     
 29870                           ;main.c: 192:     seen_can_message = 1;
 29871   008E32  0E01               	movlw	1
 29872   008E34  6E49               	movwf	_seen_can_message^0,c	;volatile
 29873   008E36                     
 29874                           ;main.c: 193:     uint16_t msg_type = get_message_type(msg);
 29875   008E36  C00A  F001         	movff	can_msg_handler@msg,get_message_type@msg
 29876   008E3A  EC3E  F050         	call	_get_message_type	;wreg free
 29877   008E3E  C001  F00D         	movff	?_get_message_type,can_msg_handler@msg_type
 29878   008E42  C002  F00E         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
 29879   008E46                     
 29880                           ;main.c: 197:     if (get_board_unique_id(msg) == 0x0C) {
 29881   008E46  C00A  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
 29882   008E4A  EC9A  F051         	call	_get_board_unique_id	;wreg free
 29883   008E4E  0A0C               	xorlw	12
 29884   008E50  A4D8               	btfss	status,2,c
 29885   008E52  EF2D  F047         	goto	i2u1355_41
 29886   008E56  EF2F  F047         	goto	i2u1355_40
 29887   008E5A                     i2u1355_41:
 29888   008E5A  EF5F  F047         	goto	i2l11844
 29889   008E5E                     i2u1355_40:
 29890   008E5E  EF80  F047         	goto	i2l2215
 29891   008E62                     i2l11832:
 29892                           
 29893                           ;main.c: 203:             BLUE_LED_ON();
 29894   008E62  EC45  F052         	call	_BLUE_LED_ON	;wreg free
 29895                           
 29896                           ;main.c: 204:             GREEN_LED_ON();
 29897   008E66  EC41  F052         	call	_GREEN_LED_ON	;wreg free
 29898                           
 29899                           ;main.c: 205:             RED_LED_ON();
 29900   008E6A  EC3D  F052         	call	_RED_LED_ON	;wreg free
 29901                           
 29902                           ;main.c: 206:             break;
 29903   008E6E  EF80  F047         	goto	i2l2215
 29904   008E72                     i2l11834:
 29905                           
 29906                           ;main.c: 209:             BLUE_LED_OFF();
 29907   008E72  EC47  F052         	call	_BLUE_LED_OFF	;wreg free
 29908                           
 29909                           ;main.c: 210:             GREEN_LED_OFF();
 29910   008E76  EC43  F052         	call	_GREEN_LED_OFF	;wreg free
 29911                           
 29912                           ;main.c: 211:             RED_LED_OFF();
 29913   008E7A  EC3F  F052         	call	_RED_LED_OFF	;wreg free
 29914                           
 29915                           ;main.c: 212:             break;
 29916   008E7E  EF80  F047         	goto	i2l2215
 29917   008E82                     i2l11836:
 29918                           
 29919                           ;main.c: 215:             dest_id = get_reset_board_id(msg);
 29920   008E82  C00A  F005         	movff	can_msg_handler@msg,get_reset_board_id@msg
 29921   008E86  EC2C  F04F         	call	_get_reset_board_id	;wreg free
 29922   008E8A  C005  F00F         	movff	?_get_reset_board_id,can_msg_handler@dest_id
 29923   008E8E  C006  F010         	movff	?_get_reset_board_id+1,can_msg_handler@dest_id+1
 29924   008E92                     
 29925                           ;main.c: 216:             if (dest_id == 0x0C || dest_id == 0) {
 29926   008E92  0E0C               	movlw	12
 29927   008E94  180F               	xorwf	can_msg_handler@dest_id^0,w,c
 29928   008E96  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 29929   008E98  B4D8               	btfsc	status,2,c
 29930   008E9A  EF51  F047         	goto	i2u1356_41
 29931   008E9E  EF53  F047         	goto	i2u1356_40
 29932   008EA2                     i2u1356_41:
 29933   008EA2  EF5C  F047         	goto	i2l2223
 29934   008EA6                     i2u1356_40:
 29935   008EA6  500F               	movf	can_msg_handler@dest_id^0,w,c
 29936   008EA8  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 29937   008EAA  A4D8               	btfss	status,2,c
 29938   008EAC  EF5A  F047         	goto	i2u1357_41
 29939   008EB0  EF5C  F047         	goto	i2u1357_40
 29940   008EB4                     i2u1357_41:
 29941   008EB4  EF80  F047         	goto	i2l2215
 29942   008EB8                     i2u1357_40:
 29943   008EB8                     i2l2223:
 29944   008EB8  00FF               	reset		;# 
 29945   008EBA  EF80  F047         	goto	i2l2215
 29946   008EBE                     i2l11844:
 29947   008EBE  C00D  F00B         	movff	can_msg_handler@msg_type,??_can_msg_handler
 29948   008EC2  C00E  F00C         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
 29949                           
 29950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 29951                           ; Switch size 1, requested type "simple"
 29952                           ; Number of cases is 2, Range of values is 1 to 7
 29953                           ; switch strategies available:
 29954                           ; Name         Instructions Cycles
 29955                           ; simple_byte            7     4 (average)
 29956                           ;	Chosen strategy is simple_byte
 29957   008EC6  500C               	movf	(??_can_msg_handler+1)^0,w,c
 29958   008EC8  0A01               	xorlw	1	; case 1
 29959   008ECA  B4D8               	btfsc	status,2,c
 29960   008ECC  EF6E  F047         	goto	i2l19190
 29961   008ED0  0A06               	xorlw	6	; case 7
 29962   008ED2  B4D8               	btfsc	status,2,c
 29963   008ED4  EF75  F047         	goto	i2l19192
 29964   008ED8  EF80  F047         	goto	i2l2215
 29965   008EDC                     i2l19190:
 29966                           
 29967                           ; Switch size 1, requested type "simple"
 29968                           ; Number of cases is 1, Range of values is 96 to 96
 29969                           ; switch strategies available:
 29970                           ; Name         Instructions Cycles
 29971                           ; simple_byte            4     3 (average)
 29972                           ;	Chosen strategy is simple_byte
 29973   008EDC  500B               	movf	??_can_msg_handler^0,w,c
 29974   008EDE  0A60               	xorlw	96	; case 96
 29975   008EE0  B4D8               	btfsc	status,2,c
 29976   008EE2  EF41  F047         	goto	i2l11836
 29977   008EE6  EF80  F047         	goto	i2l2215
 29978   008EEA                     i2l19192:
 29979                           
 29980                           ; Switch size 1, requested type "simple"
 29981                           ; Number of cases is 2, Range of values is 192 to 224
 29982                           ; switch strategies available:
 29983                           ; Name         Instructions Cycles
 29984                           ; simple_byte            7     4 (average)
 29985                           ;	Chosen strategy is simple_byte
 29986   008EEA  500B               	movf	??_can_msg_handler^0,w,c
 29987   008EEC  0AC0               	xorlw	192	; case 192
 29988   008EEE  B4D8               	btfsc	status,2,c
 29989   008EF0  EF39  F047         	goto	i2l11834
 29990   008EF4  0A20               	xorlw	32	; case 224
 29991   008EF6  B4D8               	btfsc	status,2,c
 29992   008EF8  EF31  F047         	goto	i2l11832
 29993   008EFC  EF80  F047         	goto	i2l2215
 29994   008F00                     i2l2215:
 29995   008F00  0012               	return		;funcret
 29996   008F02                     __end_of_can_msg_handler:
 29997                           	callstack 0
 29998                           
 29999 ;; *************** function _get_reset_board_id *****************
 30000 ;; Defined at:
 30001 ;;		line 490 in file "canlib/can_common.c"
 30002 ;; Parameters:    Size  Location     Type
 30003 ;;  msg             1    4[COMRAM] PTR const struct .
 30004 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30005 ;; Auto vars:     Size  Location     Type
 30006 ;;  msg_type        2    7[COMRAM] unsigned short 
 30007 ;; Return value:  Size  Location     Type
 30008 ;;                  2    4[COMRAM] int 
 30009 ;; Registers used:
 30010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30011 ;; Tracked objects:
 30012 ;;		On entry : 0/0
 30013 ;;		On exit  : 0/0
 30014 ;;		Unchanged: 0/0
 30015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30020 ;;Total ram usage:        5 bytes
 30021 ;; Hardware stack levels used: 1
 30022 ;; Hardware stack levels required when called: 1
 30023 ;; This function calls:
 30024 ;;		_get_message_type
 30025 ;; This function is called by:
 30026 ;;		_can_msg_handler
 30027 ;; This function uses a non-reentrant model
 30028 ;;
 30029                           
 30030                           	psect	text120
 30031   009E58                     __ptext120:
 30032                           	callstack 0
 30033   009E58                     _get_reset_board_id:
 30034                           	callstack 12
 30035   009E58                     
 30036                           ;canlib/can_common.c: 491:     if (!msg) { return -1; }
 30037   009E58  5005               	movf	get_reset_board_id@msg^0,w,c
 30038   009E5A  A4D8               	btfss	status,2,c
 30039   009E5C  EF32  F04F         	goto	i2u1171_41
 30040   009E60  EF34  F04F         	goto	i2u1171_40
 30041   009E64                     i2u1171_41:
 30042   009E64  EF38  F04F         	goto	i2l10720
 30043   009E68                     i2u1171_40:
 30044   009E68                     i2l10718:
 30045   009E68  6805               	setf	?_get_reset_board_id^0,c
 30046   009E6A  6806               	setf	(?_get_reset_board_id+1)^0,c
 30047   009E6C  EF55  F04F         	goto	i2l363
 30048   009E70                     i2l10720:
 30049                           
 30050                           ;canlib/can_common.c: 493:     uint16_t msg_type = get_message_type(msg);
 30051   009E70  C005  F001         	movff	get_reset_board_id@msg,get_message_type@msg
 30052   009E74  EC3E  F050         	call	_get_message_type	;wreg free
 30053   009E78  C001  F008         	movff	?_get_message_type,get_reset_board_id@msg_type
 30054   009E7C  C002  F009         	movff	?_get_message_type+1,get_reset_board_id@msg_type+1
 30055   009E80                     
 30056                           ;canlib/can_common.c: 494:     if (msg_type == 0x160) {
 30057   009E80  0E60               	movlw	96
 30058   009E82  1808               	xorwf	get_reset_board_id@msg_type^0,w,c
 30059   009E84  E106               	bnz	i2u1172_41
 30060   009E86  0409               	decf	(get_reset_board_id@msg_type+1)^0,w,c
 30061   009E88  A4D8               	btfss	status,2,c
 30062   009E8A  EF49  F04F         	goto	i2u1172_41
 30063   009E8E  EF4B  F04F         	goto	i2u1172_40
 30064   009E92                     i2u1172_41:
 30065   009E92  EF34  F04F         	goto	i2l10718
 30066   009E96                     i2u1172_40:
 30067   009E96                     
 30068                           ;canlib/can_common.c: 495:         return msg->data[3];
 30069   009E96  5005               	movf	get_reset_board_id@msg^0,w,c
 30070   009E98  6ED9               	movwf	fsr2l,c
 30071   009E9A  6ADA               	clrf	fsr2h,c
 30072   009E9C  0E06               	movlw	6
 30073   009E9E  26D9               	addwf	fsr2l,f,c
 30074   009EA0  50DF               	movf	indf2,w,c
 30075   009EA2  6E07               	movwf	??_get_reset_board_id^0,c
 30076   009EA4  5007               	movf	??_get_reset_board_id^0,w,c
 30077   009EA6  6E05               	movwf	?_get_reset_board_id^0,c
 30078   009EA8  6A06               	clrf	(?_get_reset_board_id+1)^0,c
 30079   009EAA                     i2l363:
 30080   009EAA  0012               	return		;funcret
 30081   009EAC                     __end_of_get_reset_board_id:
 30082                           	callstack 0
 30083                           
 30084 ;; *************** function _get_message_type *****************
 30085 ;; Defined at:
 30086 ;;		line 584 in file "canlib/can_common.c"
 30087 ;; Parameters:    Size  Location     Type
 30088 ;;  msg             1    0[COMRAM] PTR const struct .
 30089 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30090 ;; Auto vars:     Size  Location     Type
 30091 ;;		None
 30092 ;; Return value:  Size  Location     Type
 30093 ;;                  2    0[COMRAM] unsigned short 
 30094 ;; Registers used:
 30095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30096 ;; Tracked objects:
 30097 ;;		On entry : 0/0
 30098 ;;		On exit  : 0/0
 30099 ;;		Unchanged: 0/0
 30100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30105 ;;Total ram usage:        4 bytes
 30106 ;; Hardware stack levels used: 1
 30107 ;; This function calls:
 30108 ;;		Nothing
 30109 ;; This function is called by:
 30110 ;;		_get_reset_board_id
 30111 ;;		_can_msg_handler
 30112 ;;		_get_fill_info
 30113 ;;		_get_general_cmd_type
 30114 ;;		_get_actuator_id
 30115 ;;		_get_curr_actuator_state
 30116 ;;		_get_req_actuator_state
 30117 ;;		_get_req_actuator_state_analog
 30118 ;;		_get_curr_arm_state
 30119 ;;		_get_req_arm_state
 30120 ;;		_get_timestamp
 30121 ;;		_is_sensor_data
 30122 ;;		_get_imu_data
 30123 ;;		_get_state_est_data
 30124 ;;		_get_analog_data
 30125 ;;		_get_temp_data
 30126 ;;		_get_altitude_data
 30127 ;;		_get_pyro_voltage_data
 30128 ;;		_get_gps_time
 30129 ;;		_get_gps_lat
 30130 ;;		_get_gps_lon
 30131 ;;		_get_gps_alt
 30132 ;;		_get_gps_info
 30133 ;;		_get_state_est_calibration_msg
 30134 ;;		_message_debug_level
 30135 ;; This function uses a non-reentrant model
 30136 ;;
 30137                           
 30138                           	psect	text121
 30139   00A07C                     __ptext121:
 30140                           	callstack 0
 30141   00A07C                     _get_message_type:
 30142                           	callstack 12
 30143   00A07C                     
 30144                           ;canlib/can_common.c: 584: uint16_t get_message_type(const can_msg_t *msg);canlib/can_co
      +                          mmon.c: 585: {;canlib/can_common.c: 587:     if (!msg) { return 0; }
 30145   00A07C  5001               	movf	get_message_type@msg^0,w,c
 30146   00A07E  A4D8               	btfss	status,2,c
 30147   00A080  EF44  F050         	goto	i2u1092_41
 30148   00A084  EF46  F050         	goto	i2u1092_40
 30149   00A088                     i2u1092_41:
 30150   00A088  EF4C  F050         	goto	i2l10236
 30151   00A08C                     i2u1092_40:
 30152   00A08C  0E00               	movlw	0
 30153   00A08E  6E02               	movwf	(?_get_message_type+1)^0,c
 30154   00A090  0E00               	movlw	0
 30155   00A092  6E01               	movwf	?_get_message_type^0,c
 30156   00A094  EF5B  F050         	goto	i2l416
 30157   00A098                     i2l10236:
 30158                           
 30159                           ;canlib/can_common.c: 589:     return (msg->sid & 0x7E0);
 30160   00A098  5001               	movf	get_message_type@msg^0,w,c
 30161   00A09A  6ED9               	movwf	fsr2l,c
 30162   00A09C  6ADA               	clrf	fsr2h,c
 30163   00A09E  006F FF78  F003    	movff	postinc2,??_get_message_type
 30164   00A0A4  006F FF74  F004    	movff	postdec2,??_get_message_type+1
 30165   00A0AA  0EE0               	movlw	224
 30166   00A0AC  1403               	andwf	??_get_message_type^0,w,c
 30167   00A0AE  6E01               	movwf	?_get_message_type^0,c
 30168   00A0B0  0E07               	movlw	7
 30169   00A0B2  1404               	andwf	(??_get_message_type+1)^0,w,c
 30170   00A0B4  6E02               	movwf	(?_get_message_type+1)^0,c
 30171   00A0B6                     i2l416:
 30172   00A0B6  0012               	return		;funcret
 30173   00A0B8                     __end_of_get_message_type:
 30174                           	callstack 0
 30175                           
 30176 ;; *************** function _get_board_unique_id *****************
 30177 ;; Defined at:
 30178 ;;		line 592 in file "canlib/can_common.c"
 30179 ;; Parameters:    Size  Location     Type
 30180 ;;  msg             1    0[COMRAM] PTR const struct .
 30181 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30182 ;; Auto vars:     Size  Location     Type
 30183 ;;		None
 30184 ;; Return value:  Size  Location     Type
 30185 ;;                  1    wreg      unsigned char 
 30186 ;; Registers used:
 30187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30188 ;; Tracked objects:
 30189 ;;		On entry : 0/0
 30190 ;;		On exit  : 0/0
 30191 ;;		Unchanged: 0/0
 30192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30193 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30197 ;;Total ram usage:        1 bytes
 30198 ;; Hardware stack levels used: 1
 30199 ;; This function calls:
 30200 ;;		Nothing
 30201 ;; This function is called by:
 30202 ;;		_can_msg_handler
 30203 ;; This function uses a non-reentrant model
 30204 ;;
 30205                           
 30206                           	psect	text122
 30207   00A334                     __ptext122:
 30208                           	callstack 0
 30209   00A334                     _get_board_unique_id:
 30210                           	callstack 13
 30211   00A334                     
 30212                           ;canlib/can_common.c: 592: uint8_t get_board_unique_id(const can_msg_t *msg);canlib/can_
      +                          common.c: 593: {;canlib/can_common.c: 595:     if (!msg) { return 0; }
 30213   00A334  5001               	movf	get_board_unique_id@msg^0,w,c
 30214   00A336  A4D8               	btfss	status,2,c
 30215   00A338  EFA0  F051         	goto	i2u1173_41
 30216   00A33C  EFA2  F051         	goto	i2u1173_40
 30217   00A340                     i2u1173_41:
 30218   00A340  EFA5  F051         	goto	i2l10736
 30219   00A344                     i2u1173_40:
 30220   00A344  0E00               	movlw	0
 30221   00A346  EFAA  F051         	goto	i2l420
 30222   00A34A                     i2l10736:
 30223                           
 30224                           ;canlib/can_common.c: 597:     return ((uint8_t) (msg->sid & 0x1F));
 30225   00A34A  5001               	movf	get_board_unique_id@msg^0,w,c
 30226   00A34C  6ED9               	movwf	fsr2l,c
 30227   00A34E  6ADA               	clrf	fsr2h,c
 30228   00A350  50DF               	movf	indf2,w,c
 30229   00A352  0B1F               	andlw	31
 30230   00A354                     i2l420:
 30231   00A354  0012               	return		;funcret
 30232   00A356                     __end_of_get_board_unique_id:
 30233                           	callstack 0
 30234                           
 30235 ;; *************** function _RED_LED_ON *****************
 30236 ;; Defined at:
 30237 ;;		line 60 in file "./common.h"
 30238 ;; Parameters:    Size  Location     Type
 30239 ;;		None
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;		None
 30242 ;; Return value:  Size  Location     Type
 30243 ;;                  1    wreg      void 
 30244 ;; Registers used:
 30245 ;;		None
 30246 ;; Tracked objects:
 30247 ;;		On entry : 0/0
 30248 ;;		On exit  : 0/0
 30249 ;;		Unchanged: 0/0
 30250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30255 ;;Total ram usage:        0 bytes
 30256 ;; Hardware stack levels used: 1
 30257 ;; This function calls:
 30258 ;;		Nothing
 30259 ;; This function is called by:
 30260 ;;		_can_msg_handler
 30261 ;; This function uses a non-reentrant model
 30262 ;;
 30263                           
 30264                           	psect	text123
 30265   00A47A                     __ptext123:
 30266                           	callstack 0
 30267   00A47A                     _RED_LED_ON:
 30268                           	callstack 13
 30269   00A47A                     
 30270                           ;./common.h: 61:     LATA4 = 0;
 30271   00A47A  98BA               	bcf	16314,4,c	;volatile
 30272   00A47C  0012               	return		;funcret
 30273   00A47E                     __end_of_RED_LED_ON:
 30274                           	callstack 0
 30275                           
 30276 ;; *************** function _RED_LED_OFF *****************
 30277 ;; Defined at:
 30278 ;;		line 64 in file "./common.h"
 30279 ;; Parameters:    Size  Location     Type
 30280 ;;		None
 30281 ;; Auto vars:     Size  Location     Type
 30282 ;;		None
 30283 ;; Return value:  Size  Location     Type
 30284 ;;                  1    wreg      void 
 30285 ;; Registers used:
 30286 ;;		None
 30287 ;; Tracked objects:
 30288 ;;		On entry : 0/0
 30289 ;;		On exit  : 0/0
 30290 ;;		Unchanged: 0/0
 30291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30296 ;;Total ram usage:        0 bytes
 30297 ;; Hardware stack levels used: 1
 30298 ;; This function calls:
 30299 ;;		Nothing
 30300 ;; This function is called by:
 30301 ;;		_can_msg_handler
 30302 ;; This function uses a non-reentrant model
 30303 ;;
 30304                           
 30305                           	psect	text124
 30306   00A47E                     __ptext124:
 30307                           	callstack 0
 30308   00A47E                     _RED_LED_OFF:
 30309                           	callstack 13
 30310   00A47E                     
 30311                           ;./common.h: 65:     LATA4 = 1;
 30312   00A47E  88BA               	bsf	16314,4,c	;volatile
 30313   00A480  0012               	return		;funcret
 30314   00A482                     __end_of_RED_LED_OFF:
 30315                           	callstack 0
 30316                           
 30317 ;; *************** function _GREEN_LED_ON *****************
 30318 ;; Defined at:
 30319 ;;		line 48 in file "./common.h"
 30320 ;; Parameters:    Size  Location     Type
 30321 ;;		None
 30322 ;; Auto vars:     Size  Location     Type
 30323 ;;		None
 30324 ;; Return value:  Size  Location     Type
 30325 ;;                  1    wreg      void 
 30326 ;; Registers used:
 30327 ;;		None
 30328 ;; Tracked objects:
 30329 ;;		On entry : 0/0
 30330 ;;		On exit  : 0/0
 30331 ;;		Unchanged: 0/0
 30332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30337 ;;Total ram usage:        0 bytes
 30338 ;; Hardware stack levels used: 1
 30339 ;; This function calls:
 30340 ;;		Nothing
 30341 ;; This function is called by:
 30342 ;;		_can_msg_handler
 30343 ;; This function uses a non-reentrant model
 30344 ;;
 30345                           
 30346                           	psect	text125
 30347   00A482                     __ptext125:
 30348                           	callstack 0
 30349   00A482                     _GREEN_LED_ON:
 30350                           	callstack 13
 30351   00A482                     
 30352                           ;./common.h: 49:     LATA3 = 0;
 30353   00A482  96BA               	bcf	16314,3,c	;volatile
 30354   00A484  0012               	return		;funcret
 30355   00A486                     __end_of_GREEN_LED_ON:
 30356                           	callstack 0
 30357                           
 30358 ;; *************** function _GREEN_LED_OFF *****************
 30359 ;; Defined at:
 30360 ;;		line 52 in file "./common.h"
 30361 ;; Parameters:    Size  Location     Type
 30362 ;;		None
 30363 ;; Auto vars:     Size  Location     Type
 30364 ;;		None
 30365 ;; Return value:  Size  Location     Type
 30366 ;;                  1    wreg      void 
 30367 ;; Registers used:
 30368 ;;		None
 30369 ;; Tracked objects:
 30370 ;;		On entry : 0/0
 30371 ;;		On exit  : 0/0
 30372 ;;		Unchanged: 0/0
 30373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30378 ;;Total ram usage:        0 bytes
 30379 ;; Hardware stack levels used: 1
 30380 ;; This function calls:
 30381 ;;		Nothing
 30382 ;; This function is called by:
 30383 ;;		_can_msg_handler
 30384 ;; This function uses a non-reentrant model
 30385 ;;
 30386                           
 30387                           	psect	text126
 30388   00A486                     __ptext126:
 30389                           	callstack 0
 30390   00A486                     _GREEN_LED_OFF:
 30391                           	callstack 13
 30392   00A486                     
 30393                           ;./common.h: 53:     LATA3 = 1;
 30394   00A486  86BA               	bsf	16314,3,c	;volatile
 30395   00A488  0012               	return		;funcret
 30396   00A48A                     __end_of_GREEN_LED_OFF:
 30397                           	callstack 0
 30398                           
 30399 ;; *************** function _BLUE_LED_ON *****************
 30400 ;; Defined at:
 30401 ;;		line 36 in file "./common.h"
 30402 ;; Parameters:    Size  Location     Type
 30403 ;;		None
 30404 ;; Auto vars:     Size  Location     Type
 30405 ;;		None
 30406 ;; Return value:  Size  Location     Type
 30407 ;;                  1    wreg      void 
 30408 ;; Registers used:
 30409 ;;		None
 30410 ;; Tracked objects:
 30411 ;;		On entry : 0/0
 30412 ;;		On exit  : 0/0
 30413 ;;		Unchanged: 0/0
 30414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30419 ;;Total ram usage:        0 bytes
 30420 ;; Hardware stack levels used: 1
 30421 ;; This function calls:
 30422 ;;		Nothing
 30423 ;; This function is called by:
 30424 ;;		_can_msg_handler
 30425 ;; This function uses a non-reentrant model
 30426 ;;
 30427                           
 30428                           	psect	text127
 30429   00A48A                     __ptext127:
 30430                           	callstack 0
 30431   00A48A                     _BLUE_LED_ON:
 30432                           	callstack 13
 30433   00A48A                     
 30434                           ;./common.h: 37:     LATA2 = 0;
 30435   00A48A  94BA               	bcf	16314,2,c	;volatile
 30436   00A48C  0012               	return		;funcret
 30437   00A48E                     __end_of_BLUE_LED_ON:
 30438                           	callstack 0
 30439                           
 30440 ;; *************** function _BLUE_LED_OFF *****************
 30441 ;; Defined at:
 30442 ;;		line 40 in file "./common.h"
 30443 ;; Parameters:    Size  Location     Type
 30444 ;;		None
 30445 ;; Auto vars:     Size  Location     Type
 30446 ;;		None
 30447 ;; Return value:  Size  Location     Type
 30448 ;;                  1    wreg      void 
 30449 ;; Registers used:
 30450 ;;		None
 30451 ;; Tracked objects:
 30452 ;;		On entry : 0/0
 30453 ;;		On exit  : 0/0
 30454 ;;		Unchanged: 0/0
 30455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30460 ;;Total ram usage:        0 bytes
 30461 ;; Hardware stack levels used: 1
 30462 ;; This function calls:
 30463 ;;		Nothing
 30464 ;; This function is called by:
 30465 ;;		_can_msg_handler
 30466 ;; This function uses a non-reentrant model
 30467 ;;
 30468                           
 30469                           	psect	text128
 30470   00A48E                     __ptext128:
 30471                           	callstack 0
 30472   00A48E                     _BLUE_LED_OFF:
 30473                           	callstack 13
 30474   00A48E                     
 30475                           ;./common.h: 41:     LATA2 = 1;
 30476   00A48E  84BA               	bsf	16314,2,c	;volatile
 30477   00A490  0012               	return		;funcret
 30478   00A492                     __end_of_BLUE_LED_OFF:
 30479                           	callstack 0
 30480                           
 30481                           ;
 30482                           ; H/W Interrupt Vector Table @ 0x8
 30483                           ;
 30484                           
 30485                           	psect	ivt0x8
 30486   000008                     __pivt0x8:
 30487                           	callstack 0
 30488   000008                     ivt0x8_base:
 30489                           	callstack 0
 30490                           
 30491                           ; high-priority vector
 30492   000008  EFD7  F04E         	goto	_interrupt_handler
 30493   000018                     	org	16
 30494                           
 30495                           ; low-priority vector
 30496   000018  00FF               	reset	
 30497                           
 30498                           	psect	rparam
 30499   000000                     
 30500                           	psect	config
 30501                           
 30502                           ;Config register CONFIG1L @ 0x300000
 30503                           ;	External Oscillator Selection
 30504                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 30505                           ;	Reset Oscillator Selection
 30506                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 30507   300000                     	org	3145728
 30508   300000  FA                 	db	250
 30509                           
 30510                           ;Config register CONFIG1H @ 0x300001
 30511                           ;	Clock out Enable bit
 30512                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 30513                           ;	PRLOCKED One-Way Set Enable bit
 30514                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 30515                           ;	Clock Switch Enable bit
 30516                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30517                           ;	Fail-Safe Clock Monitor Enable bit
 30518                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 30519   300001                     	org	3145729
 30520   300001  FF                 	db	255
 30521                           
 30522                           ;Config register CONFIG2L @ 0x300002
 30523                           ;	MCLR Enable bit
 30524                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 30525                           ;	Power-up timer selection bits
 30526                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 30527                           ;	Multi-vector enable bit
 30528                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 30529                           ;	IVTLOCK bit One-way set enable bit
 30530                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 30531                           ;	Low Power BOR Enable bit
 30532                           ;	LPBOREN = OFF, ULPBOR disabled
 30533                           ;	Brown-out Reset Enable bits
 30534                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 30535   300002                     	org	3145730
 30536   300002  F7                 	db	247
 30537                           
 30538                           ;Config register CONFIG2H @ 0x300003
 30539                           ;	Brown-out Reset Voltage Selection bits
 30540                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 30541                           ;	ZCD Disable bit
 30542                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 30543                           ;	PPSLOCK bit One-Way Set Enable bit
 30544                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 30545                           ;	Stack Full/Underflow Reset Enable bit
 30546                           ;	STVREN = ON, Stack full/underflow will cause Reset
 30547                           ;	Debugger Enable bit
 30548                           ;	DEBUG = OFF, Background debugger disabled
 30549                           ;	Extended Instruction Set Enable bit
 30550                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 30551   300003                     	org	3145731
 30552   300003  FF                 	db	255
 30553                           
 30554                           ;Config register CONFIG3L @ 0x300004
 30555                           ;	WDT Period selection bits
 30556                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30557                           ;	WDT operating mode
 30558                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 30559   300004                     	org	3145732
 30560   300004  9F                 	db	159
 30561                           
 30562                           ;Config register CONFIG3H @ 0x300005
 30563                           ;	WDT Window Select bits
 30564                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30565                           ;	WDT input clock selector
 30566                           ;	WDTCCS = SC, Software Control
 30567   300005                     	org	3145733
 30568   300005  FF                 	db	255
 30569                           
 30570                           ;Config register CONFIG4L @ 0x300006
 30571                           ;	Boot Block Size selection bits
 30572                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 30573                           ;	Boot Block enable bit
 30574                           ;	BBEN = OFF, Boot block disabled
 30575                           ;	Storage Area Flash enable bit
 30576                           ;	SAFEN = OFF, SAF disabled
 30577                           ;	Application Block write protection bit
 30578                           ;	WRTAPP = OFF, Application Block not write protected
 30579   300006                     	org	3145734
 30580   300006  FF                 	db	255
 30581                           
 30582                           ;Config register CONFIG4H @ 0x300007
 30583                           ;	Boot Block Write Protection bit
 30584                           ;	WRTB = OFF, Boot Block not write-protected
 30585                           ;	Configuration Register Write Protection bit
 30586                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 30587                           ;	Data EEPROM Write Protection bit
 30588                           ;	WRTD = OFF, Data EEPROM not write-protected
 30589                           ;	SAF Write protection bit
 30590                           ;	WRTSAF = OFF, SAF not Write Protected
 30591                           ;	Low Voltage Programming Enable bit
 30592                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 30593   300007                     	org	3145735
 30594   300007  FF                 	db	255
 30595                           
 30596                           ;Config register CONFIG5L @ 0x300008
 30597                           ;	PFM and Data EEPROM Code Protection bit
 30598                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 30599   300008                     	org	3145736
 30600   300008  FF                 	db	255
 30601                           
 30602                           ;Config register CONFIG5H @ 0x300009
 30603                           ;	unspecified, using default values
 30604   300009                     	org	3145737
 30605   300009  FF                 	db	255
 30606                           tosu	equ	0x3FFF
 30607                           tosh	equ	0x3FFE
 30608                           tosl	equ	0x3FFD
 30609                           stkptr	equ	0x3FFC
 30610                           pclatu	equ	0x3FFB
 30611                           pclath	equ	0x3FFA
 30612                           pcl	equ	0x3FF9
 30613                           tblptru	equ	0x3FF8
 30614                           tblptrh	equ	0x3FF7
 30615                           tblptrl	equ	0x3FF6
 30616                           tablat	equ	0x3FF5
 30617                           prodh	equ	0x3FF4
 30618                           prodl	equ	0x3FF3
 30619                           indf0	equ	0x3FEF
 30620                           postinc0	equ	0x3FEE
 30621                           postdec0	equ	0x3FED
 30622                           preinc0	equ	0x3FEC
 30623                           plusw0	equ	0x3FEB
 30624                           fsr0h	equ	0x3FEA
 30625                           fsr0l	equ	0x3FE9
 30626                           wreg	equ	0x3FE8
 30627                           indf1	equ	0x3FE7
 30628                           postinc1	equ	0x3FE6
 30629                           postdec1	equ	0x3FE5
 30630                           preinc1	equ	0x3FE4
 30631                           plusw1	equ	0x3FE3
 30632                           fsr1h	equ	0x3FE2
 30633                           fsr1l	equ	0x3FE1
 30634                           bsr	equ	0x3FE0
 30635                           indf2	equ	0x3FDF
 30636                           postinc2	equ	0x3FDE
 30637                           postdec2	equ	0x3FDD
 30638                           preinc2	equ	0x3FDC
 30639                           plusw2	equ	0x3FDB
 30640                           fsr2h	equ	0x3FDA
 30641                           fsr2l	equ	0x3FD9
 30642                           status	equ	0x3FD8

Data Sizes:
    Strings     53
    Constant    263
    Data        9
    BSS         1369
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      88
    BANK0           160    160     160
    BANK1           256    204     247
    BANK2           256      0     182
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    build_analog_data_msg@output	PTR struct . size(2) Largest target is 11
		 -> main@msg(BANK1[11]), 

    build_board_stat_msg@error_data	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_msg_handler@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_send@message	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_send_fp$0	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK1[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> bw(BANK1[2]), putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), 

    FatFs@ff$F2407	PTR struct .[1] size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_mount@path(BANK0[2]), f_open@path(BANK1[2]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_chdir@fs(COMRAM[2]), f_mount@fs(BANK0[2]), f_open@fs(BANK1[2]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fxls_read_accel_data@x	PTR short  size(2) Largest target is 2
		 -> main@x(BANK1[2]), 

    fxls_read_accel_data@y	PTR short  size(2) Largest target is 2
		 -> main@y(BANK1[2]), 

    fxls_read_accel_data@z	PTR short  size(2) Largest target is 2
		 -> main@z(BANK1[2]), 

    get_board_unique_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 
		 -> f_open@path(BANK1[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_message_type@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_offset_bytes@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    get_reset_board_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    i2c_read@data	PTR unsigned char  size(1) Largest target is 9
		 -> i2c_read_reg16@data(COMRAM[2]), i2c_read_reg8@data(BANK0[1]), read_flow_sensor_data@data(COMRAM[9]), 

    i2c_read_reg8@value	PTR unsigned char  size(2) Largest target is 1
		 -> data_ready@status(COMRAM[1]), fxls_get_prod_rev@res(BANK0[1]), fxls_get_whoami@res(BANK0[1]), fxls_init@sys_mode(BANK0[1]), 
		 -> fxls_read_accel_data@status(BANK0[1]), fxls_read_accel_data@x_lsb(BANK0[1]), fxls_read_accel_data@x_msb(BANK0[1]), fxls_read_accel_data@y_lsb(BANK0[1]), 
		 -> fxls_read_accel_data@y_msb(BANK0[1]), fxls_read_accel_data@z_lsb(BANK0[1]), fxls_read_accel_data@z_msb(BANK0[1]), main@buf_status(BANK1[1]), 
		 -> main@sys_mode(BANK1[1]), 

    i2c_write@data	PTR const unsigned char  size(1) Largest target is 3
		 -> i2c_read_reg16@reg(COMRAM[1]), i2c_read_reg8@reg(BANK0[1]), i2c_write_reg16@data(COMRAM[3]), i2c_write_reg8@data(BANK0[2]), 
		 -> read_flow_sensor_data@start_cmd(COMRAM[2]), read_flow_sensor_data@stop_cmd(COMRAM[2]), 

    info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), pb$fp(COMRAM[3]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    ioInfo$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 150
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[150]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 150
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[150]), txb_heartbeat@msg_sent(BANK0[11]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S1056$0$0	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    S1056$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1056$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2136$3$0	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    S2136$4$0	PTR void  size(2) Largest target is 0

    S2136$5$0	PTR void  size(2) Largest target is 0

    S2136$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S2136$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S2136$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S2136$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S2136$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S2136$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    S2136$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S2136$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S2367$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2374$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2383$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2393$fp	PTR struct . size(2) Largest target is 0

    S3656SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    S5776$buffer	PTR unsigned char  size(2) Largest target is 0

    S5776$source	PTR const unsigned char  size(2) Largest target is 0

    S978$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorRead@info(BANK0[13]), 

    SD_SPI_AsyncReadTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorWrite@info(BANK0[13]), 

    SD_SPI_AsyncWriteTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), NULL(NULL[0]), 

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    spiMaster$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    spiMaster$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> send_status_ok@text(BANK1[3]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_init@pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_is_empty@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_is_full@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_pop@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_pop@element	PTR void  size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_push@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_push@element	PTR const void  size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    txb_enqueue@msg	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    validate$3131	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK0[2]), f_read@fs(COMRAM[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK1[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    write_timestamp_2bytes@output	PTR struct . size(2) Largest target is 11
		 -> main@msg(BANK1[11]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_reset_board_id
    _get_reset_board_id->_get_message_type

Critical Paths under _main in BANK0

    _txb_init->_srb_init
    _srb_init->___lwdiv
    _txb_heartbeat->_srb_pop
    _srb_pop->_get_offset_bytes
    _can_send->_memcpy
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lldiv
    _f_write->_create_chain
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _ld_clust->_ld_word
    _dir_find->_dir_next
    _create_name->_mem_set
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _send_status_err->_txb_enqueue
    _txb_enqueue->_srb_push
    _srb_push->_get_offset_bytes
    _get_offset_bytes->___wmul
    _build_board_stat_msg->_millis
    _fxls_read_accel_data->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _fxls_init->_i2c_read_reg8
    _i2c_write_reg8->_i2c_write
    _fxls_get_whoami->_i2c_read_reg8
    _fxls_get_prod_rev->_i2c_read_reg8
    _i2c_read_reg8->_i2c_read
    _i2c_read_reg8->_i2c_write
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open
    _build_analog_data_msg->_millis

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_send_status_ok
    _send_status_ok->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0 1654391
                                            166 BANK1     38    38      0
           _ADCC_GetSingleConversion
                    _ADCC_Initialize
                 _SET_ACCEL_I2C_ADDR
                  _SYSTEM_Initialize
              _build_analog_data_msg
         _can_generate_timing_params
                           _can_init
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
                  _fxls_get_prod_rev
                    _fxls_get_whoami
                          _fxls_init
               _fxls_read_accel_data
                           _i2c_init
                      _i2c_read_reg8
                             _millis
                    _send_status_err
                     _send_status_ok
                        _timer0_init
                      _txb_heartbeat
                           _txb_init
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    2084
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1600
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _txb_heartbeat                                       11    11      0    8279
                                             21 BANK0     11    11      0
                           _can_send *
                       _can_send_rdy *
                       _srb_is_empty
                            _srb_pop
 ---------------------------------------------------------------------------------
 (2) _srb_pop                                              9     6      3    5049
                                             12 BANK0      9     6      3
                   _get_offset_bytes
                             _memcpy
                       _srb_is_empty
 ---------------------------------------------------------------------------------
 (3) _srb_is_empty                                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _can_send_rdy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _can_send                                             3     2      1    2710
                                             11 BANK0      3     2      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      21    21      0  771236
                                            145 BANK1     21    21      0
                    _BLUE_LED_TOGGLE
               _build_board_stat_msg
                            _f_close
                             _f_open
                            _f_write
                             _millis
                            _sprintf
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    4267
                                             31 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    3775
                                             25 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3314
                                             13 BANK0     12     9      3
                            ___lldiv
                            ___llmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     592
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8   87116
                                             23 BANK1     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5  602758
                                             65 BANK1     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10   57970
                                            148 BANK0     10     0     10
                                              0 BANK1     15    15      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4  209880
                                             51 BANK1     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2060
                                              7 BANK0     12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2  170784
                                            158 BANK0      2     2      0
                                             45 BANK1      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         22    18      4    4355
                                              8 BANK0     22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     307
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2  195407
                                             57 BANK1      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    1008
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4  169739
                                             45 BANK1     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             30    24      6   31380
                                            141 BANK0     16    10      6
                                              0 BANK1     10    10      0
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            30    26      4  115254
                                            154 BANK0      4     0      4
                                             23 BANK1     22    22      0
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (6) _dir_clear                                           18    12      6   24662
                                            104 BANK0     18    12      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (3) _clst2sect                                           12     6      6    2234
                                             12 BANK0     12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        29    23      6   59336
                                            148 BANK0      6     0      6
                                              0 BANK1     23    23      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             33    23     10   29410
                                            115 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6   27404
                                            115 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_close                                              5     3      2   65928
                                            122 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                              11     9      2   64396
                                            115 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4    1147
                                              2 BANK0     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   25589
                                            104 BANK0     11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _st_dword                                             6     0      6    1889
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _mem_set                                              8     2      6    1750
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                           5     2      3     245
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    1728
                                              4 BANK0      9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (5) _st_word                                              4     0      4    1033
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BLUE_LED_TOGGLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_err                                     11    11      0   10871
                                             24 BANK0     11    11      0
                     _RED_LED_TOGGLE
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _txb_enqueue                                          2     0      2    5688
                                             22 BANK0      2     0      2
                        _srb_is_full
                           _srb_push
 ---------------------------------------------------------------------------------
 (3) _srb_push                                            10     6      4    5052
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                        _srb_is_full
 ---------------------------------------------------------------------------------
 (4) _srb_is_full                                          6     4      2     425
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _get_offset_bytes                                     6     2      4    1526
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     862
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5039
                                              8 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3606
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RED_LED_TOGGLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _fxls_read_accel_data                                15     9      6   11083
                                             74 BANK0     15     9      6
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             64 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1703
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fxls_init                                            8     8      0    8151
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
                     _i2c_write_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_write_reg8                                       5     3      2    2891
                                              6 BANK0      5     3      2
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _fxls_get_whoami                                      1     1      0    5053
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _fxls_get_prod_rev                                    1     1      0    5053
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _i2c_read_reg8                                        6     3      3    4985
                                              6 BANK0      6     3      3
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            6     4      2    1461
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             6     4      2     921
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5   67694
                                            135 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   65786
                                            122 BANK0     13     8      5
                                              0 BANK1     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1250
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     892
                                              0 BANK0     13    11      2
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          2     2      0      74
                                              0 BANK0      2     2      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                      2     2      0    7954
                                             84 BANK0      2     2      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_MediaInitialize                              50    50      0    7883
                                             34 BANK0     50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     996
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_DelayMilliseconds                             5     5      0      96
                                              1 BANK0      5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (4) _check_fs                                             7     1      6   25395
                                            115 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   22470
                                            104 BANK0     11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2   10333
                                             85 BANK0     19    17      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8    9623
                                             75 BANK0     10     2      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorWrite                                  27    19      8    7299
                                             48 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncWriteTasks                              14    13      1    6165
                                             34 BANK0     14    13      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           10     2      8    9115
                                             72 BANK0     10     2      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorRead                                   27    19      8    7601
                                             45 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncReadTasks                               11    10      1    6479
                                             34 BANK0     11    10      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     407
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeBlock                                   6     2      4     390
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SD_SendCmd                                          23    18      5    5084
                                             11 BANK0     23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    2428
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SDSLOW_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SDFAST_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (6) _SPI1_Open                                            2     2      0     155
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6    1045
                                              0 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1210
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     721
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6     862
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _build_analog_data_msg                                9     0      9    1905
                                              8 BANK0      9     0      9
                             _millis (ARG)
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (2) _write_timestamp_2bytes                               4     0      4     484
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_ACCEL_I2C_ADDR                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _interrupt_handler                                   2     2      0    4912
                                             42 COMRAM     2     2      0
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (16) _timer0_handle_interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _can_handle_interrupt                               26    26      0    4912
                                             16 COMRAM    26    26      0
                                NULL *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (17) i2_memcpy                                           11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (17) _can_msg_handler                                     9     8      1    4415
                                              9 COMRAM     7     6      1
                       _BLUE_LED_OFF
                        _BLUE_LED_ON
                      _GREEN_LED_OFF
                       _GREEN_LED_ON
                        _RED_LED_OFF
                         _RED_LED_ON
                _get_board_unique_id
                   _get_message_type
                 _get_reset_board_id
 ---------------------------------------------------------------------------------
 (18) _get_reset_board_id                                  5     3      2    2109
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (19) _get_message_type                                    4     2      2    1944
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) _get_board_unique_id                                 1     0      1     120
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (18) _RED_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _RED_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_ON                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_OFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _ADCC_Initialize
   _SET_ACCEL_I2C_ADDR
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _build_analog_data_msg
     _millis (ARG)
     _write_timestamp_2bytes (ARG)
   _can_generate_timing_params
   _can_init
   _f_close
     _f_sync
       _disk_write
         _SD_SPI_SectorWrite
           _SDFAST_open *
             _SPI1_Open
           _SDSLOW_open *
             _SPI1_Open
           _SD_SPI_AsyncWriteTasks *
             _SD_SendCmd
               _SPI1_ExchangeByte *
               _memcpy *
             _SPI1_ExchangeBlock *
             _SPI1_ExchangeByte *
           _SPI1_Close *
       _move_window
         _disk_read
           _SD_SPI_SectorRead
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_AsyncReadTasks *
               _SD_SendCmd
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
               _memset *
             _SPI1_Close *
         _sync_window
           _disk_write
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
         _disk_write
         _mem_set
         _st_dword
         _st_word
         _sync_window
       _validate
         _disk_status
           _SD_SPI_IsMediaInitialized
           _SD_SPI_IsMediaPresent
           _SD_SPI_IsWriteProtected
     _validate
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _ld_word
         _mem_cmp
         _move_window
       _disk_initialize
         _SD_SPI_MediaInitialize
           _SDFAST_open *
           _SDSLOW_open *
           _SD_SPI_DelayMilliseconds *
             _SPI1_ExchangeByte *
           _SD_SendCmd *
           _SPI1_Close *
           _SPI1_ExchangeByte *
           ___lmul *
       _disk_status
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
     _get_ldnumber
   _f_open
     _clst2sect
       ___lmul
     _dir_register
       _dir_alloc
         _dir_next
           _clst2sect
           _create_chain
             _get_fat
               _ld_dword
               _ld_word
               _move_window
             _put_fat
               _ld_dword
               _move_window
               _st_dword
               _st_word
           _dir_clear
             _clst2sect
             _disk_write
             _mem_set
             _sync_window
           _get_fat
         _dir_sdi
           _clst2sect
           _get_fat
         _move_window
       _mem_cpy
       _mem_set
       _move_window
     _disk_read
     _find_volume
     _follow_path
       _create_name
         _chk_chr
         _dbc_1st
         _dbc_2nd
         _mem_set
       _dir_find
         _dir_next
         _dir_sdi
         _mem_cmp
         _move_window
       _dir_sdi
       _ld_clust
         _ld_word
     _get_fat
     _ld_clust
     _ld_dword
     _mem_set
     _move_window
     _remove_chain
       _get_fat
       _put_fat
     _st_clust
     _st_dword
   _f_write
     _clst2sect
     _create_chain
     _disk_read
     _disk_write
     _mem_cpy
     _validate
   _fxls_get_prod_rev
     _i2c_read_reg8
       _i2c_read
       _i2c_write
   _fxls_get_whoami
     _i2c_read_reg8
   _fxls_init
     _i2c_read_reg8
     _i2c_write_reg8
       _i2c_write
   _fxls_read_accel_data
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _i2c_read_reg8
   _i2c_init
   _i2c_read_reg8
   _millis
   _send_status_err
     _RED_LED_TOGGLE
     _build_board_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _millis
     _txb_enqueue
       _srb_is_full
       _srb_push
         _get_offset_bytes
           ___wmul
         _memcpy
         _srb_is_full
   _send_status_ok
     _BLUE_LED_TOGGLE
     _build_board_stat_msg
     _f_close
     _f_open
     _f_write
     _millis
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___lldiv
           ___llmod
           _fputc
             _putch
     _txb_enqueue
   _timer0_init
   _txb_heartbeat
     _can_send *
       _memcpy
     _can_send_rdy *
     _srb_is_empty *
     _srb_pop *
       _get_offset_bytes
       _memcpy
       _srb_is_empty
   _txb_init
     _srb_init
       ___lwdiv

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     NULL(Fake) *
     _can_msg_handler *
       _BLUE_LED_OFF
       _BLUE_LED_ON
       _GREEN_LED_OFF
       _GREEN_LED_ON
       _RED_LED_OFF
       _RED_LED_ON
       _get_board_unique_id
       _get_message_type
       _get_reset_board_id
         _get_message_type
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     455      83       27.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhlh    1F7      0       0      54        0.0%
BITBIGSFRlhhhll    19C      0       0      74        0.0%
BITBIGSFRlhhhlh    162      0       0      44        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B6       9       71.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CC      F7       7       96.5%
BITBIGSFRlhl        B2      0       0      80        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhhhlh     80      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      58       1       92.6%
BITBIGSFRlhhhlh     5B      0       0      57        0.0%
BITBIGSFRlhhhlh     4D      0       0      49        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhlh     2A      0       0      62        0.0%
BITBIGSFRlhhhlh     29      0       0      53        0.0%
BITBIGSFRlhhhlh     29      0       0      66        0.0%
BITBIGSFRhhll       26      0       0      39        0.0%
BITBIGSFRlhhhll     22      0       0      78        0.0%
BITBIGSFRlhhhlh     1C      0       0      59        0.0%
BITBIGSFRlhhhlh     1A      0       0      70        0.0%
BITBIGSFRlhhhlh     11      0       0      69        0.0%
BITBIGSFRhhlhh       D      0       0      37        0.0%
BITBIGSFRlhhhlh      B      0       0      61        0.0%
BITBIGSFRlhhhlh      B      0       0      60        0.0%
BITBIGSFRlhhhlh      B      0       0      72        0.0%
BITBIGSFRlhhhll      9      0       0      76        0.0%
BITBIGSFRlhhhlh      8      0       0      55        0.0%
BITBIGSFRlhhhhh      7      0       0      40        0.0%
BITBIGSFRlhhhlh      6      0       0      65        0.0%
BITBIGSFRhhlhl       5      0       0      38        0.0%
BITBIGSFRlhhhlh      4      0       0      47        0.0%
BITBIGSFRlhhhlh      2      0       0      50        0.0%
BITBIGSFRlhhhlh      2      0       0      51        0.0%
BITBIGSFRlhhhlh      2      0       0      58        0.0%
BITBIGSFRlhhhll      2      0       0      75        0.0%
BITBIGSFRlhhhll      2      0       0      77        0.0%
BITBIGSFRlhhhhl      2      0       0      41        0.0%
BITBIGSFRlhhl        2      0       0      79        0.0%
BITBIGSFRll          2      0       0      81        0.0%
BITBIGSFRlhhhlh      1      0       0      64        0.0%
BITBIGSFRlhhhlh      1      0       0      48        0.0%
BITBIGSFRlhhhlh      1      0       0      45        0.0%
BITBIGSFRlhhhlh      1      0       0      46        0.0%
BITBIGSFRlhhhlh      1      0       0      52        0.0%
BITBIGSFRlhhhlh      1      0       0      63        0.0%
BITBIGSFRlhhhlh      1      0       0      56        0.0%
BITBIGSFRlhhhlh      1      0       0      67        0.0%
BITBIGSFRlhhhlh      1      0       0      68        0.0%
BITBIGSFRlhhhlh      1      0       0      71        0.0%
BITBIGSFRlhhhlh      1      0       0      43        0.0%
BITBIGSFRlhhhll      1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A5      82        0.0%
DATA                 0      0     6FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 19:41:30 2024

                SD_SPI_SectorWrite@result 009A                        ??_get_message_type 0003  
                       _SPI1_ExchangeByte A27C                              srb_init@pool 0069  
                             get_fat@clst 00D5                  SD_SPI_SectorWrite@status 009B  
                            ___fldiv@aexp 009F                              ___fldiv@bexp 009E  
           SD_SPI_MediaInitialize@timeout 00B2                        _SPI1_ExchangeBlock 9138  
                            ___fldiv@sign 0097                              create_name@c 007D  
                            create_name@d 0072                              create_name@i 0077  
                            create_name@p 0075                          get_ldnumber@path 0060  
          SD_SPI_MediaInitialize@response 00AD                                        l71 787E  
                                      l81 A408                                        l75 88EC  
                      ?_SPI1_ExchangeByte 0001                                        _bw 01F5  
                     ___wmul@multiplicand 0062     timer0_handle_interrupt@internal_count 004F  
                          ??_dir_register 00FE                   ??_SD_SPI_IsMediaPresent 0060  
                        disk_write@sector 00AD                             create_name@dp 0068  
                           create_name@ni 0073                             create_name@si 007B  
                          create_chain@cs 0113                            create_chain@fs 0111  
                   build_board_stat_msg@i 0075                                       l200 9C9E  
                                     l203 9642                                       l116 A254  
                                     l310 94B6                                       l214 9136  
                                     l207 8ABE                                       l119 A372  
                                     l224 8BA0                                       l234 71DA  
                                     l219 A03E                                       l245 A2C6  
                                     l183 A19C                                       l248 A164  
                                     l192 973E                                       l187 A12A  
                                     l292 83DE                                       l802 9F3E  
                                     l811 9AB2                                       l820 9A4A  
                                     l653 9C40                 SD_SPI_AsyncReadTasks@info 0082  
                                     l903 73A4                                       l824 A31A  
                                     l912 6BBE                                       l665 A050  
                                     l825 A332                                       l762 A462  
                                     l922 503A                                       l915 6BC2  
                                     l668 A07A                                       l852 A002  
                                     l940 53DE                                       l909 8E30  
                                     l861 953C                                       l925 53CE  
                                     l759 A45A                                       l855 9084  
                                     l927 5046                                       l919 8D5C  
                                     l872 A0F0                                       l793 989C  
                                     l961 3874                                       l945 342E  
                                     l858 A1D2                                       l970 6988  
                                     l867 96C2                                       l891 A448  
                                     l964 3902                                       l878 9312  
                                     l879 931A                                       l887 9828  
                                     l895 A43C                                       l993 33DE  
                                     l898 73A0                                       l995 2F5A  
                     ?_SPI1_ExchangeBlock 0060                                       _Fil 04E9  
                                     _buf 01EB                                       _ctx 01D0  
                     ??_SPI1_ExchangeByte 0060                              disk_read@res 00B1  
                          ??_create_chain 0100              write_timestamp_3bytes@output 0064  
                                     tosl 3FFD                                       wreg 3FE8  
                 __end_of_fxls_get_whoami A3C4                get_reset_board_id@msg_type 0008  
                            ___flmul@aexp 007F                              ___flmul@bexp 0080  
                 SPI1_ExchangeBlock@block 0060                              ___flmul@sign 007A  
                            ___flmul@temp 0085                              ___flmul@prod 0081  
                  main@last_status_millis 01B0                               _txb_enqueue A0F2  
              SD_SPI_AsyncReadTasks@bData 008C                            create_name@sfn 0079  
                          srb_is_full@ctx 0060                           create_chain@obj 00F4  
                         create_chain@ncl 010D                  ??_write_timestamp_2bytes 0064  
                         create_chain@scl 0109                           create_chain@res 0108  
                             ld_clust@dir 0069                  ??_write_timestamp_3bytes 0066  
                          ??_GREEN_LED_ON 0001                     main@last_accel_millis 01AA  
                            ___fltol@exp1 00A9                                      l1102 9E56  
                                    l1016 338E                                      l1201 7CC0  
                                    l1017 33CE                                      l1025 7E18  
                                    l1042 57E0                                      l1106 7704  
                                    l1211 0ED0                                      l2011 86CA  
                                    l2003 8654                                      l1019 33C6  
                                    l2012 86EE                                      l1116 87F0  
                                    l1126 42B2                                      l1310 2708  
                                    l1302 224A                                      l2023 A27A  
                                    l2032 9B18                                      l1048 56A2  
                                    l1304 222A                                      l1251 0860  
                                    l1075 4658                                      l1067 4724  
                                    l3011 9EF6                                      l3004 6746  
                                    l1245 06B2                                      l1093 7B5E  
                                    l1173 6410                                      l2302 9282  
                                    l1094 7B60                                      l1182 64BC  
                                    l2206 59DC                                      l2231 9FC4  
                                    l1175 63FA                                      l3023 8FC6  
                                    l1256 0C06                                      l1272 81AC  
                                    l1273 81C6                                      l1186 79F0  
                                    l1098 942E                                      l1362 1560  
                                    l3034 A492                                      l1611 1F3E  
                                    l1195 79E2                                      l2243 95C0  
                                    l2163 A46C                                      l1267 8178  
                                    l1363 124C                                      l1355 1722  
                                    l1284 272C                                      l2228 82D6  
                                    l1605 990A                                      l1621 1838  
                                    l1277 8C80                                      l2181 A470  
                                    l2246 A3DA                                      l1551 A478  
                                    l2255 6208                                      l1391 6DEC  
                                    l1295 204C                                      l2184 A390  
                                    l2280 99E2                                      l1296 203A  
                                    l1384 16DA                                      l2249 A3C2  
                                    l1289 2708                                      l1810 A430  
                                    l1563 809C                                      l1651 1B50  
                                    l1572 8048                                      l1564 800C  
                                    l1580 7F5A                                      l2268 A22E  
                                    l1813 A3F2                                      l1717 2DF2  
                                    l1581 7ECA                                      l1397 9DAC  
                                    l1910 A468                                      l1903 A3AA  
                                    l2295 9272                                      l2279 99D2  
                                    l1816 A310                                      l1680 4774  
                                    l1648 1AD2                                      l1913 A28C  
                                    l1921 9178                                      l1745 2D00  
                                    l1762 3D8A                                      l1754 3908  
                                    l1738 2C26                                      l1594 A41E  
                                    l1907 89DA                                      l1915 A29C  
                                    l1771 3DF2                                      l1916 A2A0  
                                    l1773 3E08                                      l1925 91DC  
                                    l1589 7F06                                      l1597 A474  
                                    l2565 84E6                                      l1678 4B76  
                                    l1873 9B7C                                      l2850 5F28  
                                    l2930 7498                                      l2923 7400  
                                    l2852 5D88                                      l2861 5DCE  
                                    l2926 755C                                      l2766 97B4  
                                    l2951 9BDE                                      l2863 5E46  
                                    l2855 5D4C                                      l2695 93A4  
                                    l2759 97AC                                      l2864 5E34  
                                    l2688 9394                                      l2945 9CFA  
                                    l2937 74F4                                      l1994 85C6  
                                    l1986 8560                                      l2882 4C3E  
                                    l1978 A202                                      l1995 85EA  
                                    l2891 4ED0                                      l2892 4EBE  
                                    l2886 4FC6                                      l2958 9F82  
                                    l2889 4E58                                      l2899 4F88  
                                    STR_1 FFCA                                      STR_2 FFCA  
                                    STR_3 FFFB                                      STR_4 FFFB  
                                    STR_5 FFF5                                      STR_6 FFF5  
                                    STR_7 FFE4                                      STR_8 FFE5  
                                    STR_9 FFD9                                      _LATA 3FBA  
                                    _LATB 3FBB                                      _LATC 3FBC  
                                    _PMD0 39C0                                      _PMD1 39C1  
                                    _PMD2 39C2                                      _PMD3 39C3  
                                    _PMD4 39C4                                      _PMD5 39C5  
                                    _PMD6 39C6                                      _PMD7 39C7  
                                    _PIR5 39A5                                      i2l92 6F82  
                                    i2l84 6E0E                                      i2l86 6E0A  
                                    i2l95 6F96                                      i2l87 6E44  
                                    i2l88 6FE6                                      i2l97 6FAA  
                                    i2l89 6EE2                                      i2l98 6FE6  
                                    i2l99 6FBE                                      _WPUA 3A41  
                                    _WPUB 3A51                                      _WPUC 3A61  
                                    _WPUE 3A81                                      _Fsid 01DD  
            __end_of_build_board_stat_msg 83E0                               ?_RED_LED_ON 0001  
                           _i2c_read_reg8 9AB4         SD_SPI_MediaInitialize@CSDResponse 008D  
                                    _dbuf 0200                                      _main 57E2  
                            find_volume@i 0135                                      _prec 01D9  
                           srb_pop@offset 0073                                      fsr0h 3FEA  
                                    fsr1h 3FE2                                      indf0 3FEF  
                                    fsr2h 3FDA                                      fsr0l 3FE9  
                                    indf1 3FE7                                      indf2 3FDF  
                                    fsr1l 3FE1                                      fsr2l 3FD9  
                    ??_SPI1_ExchangeBlock 0064                               ld_dword@ptr 0060  
                           disk_ioctl@cmd 0060                             disk_read@buff 00A8  
                           disk_read@pdrv 00B0                                      prodh 3FF4  
                                    prodl 3FF3                            ??_get_ldnumber 0062  
                        ??_RED_LED_TOGGLE 0060                                      start 001A  
                         ___fldiv@new_exp 0098                 __end_of_SPI1_ExchangeByte A2A2  
                            ?_follow_path 0133               build_analog_data_msg@output 006F  
                            ___param_bank 0000                           srb_is_empty@ctx 0060  
                     get_offset_bytes@ctx 0066                           create_name@path 006A  
                        create_chain@clst 00F6                           ??_GREEN_LED_OFF 0001  
                       i2c_write_reg8@reg 0066                         i2c_write_reg8@val 0067  
                             _sync_window 71DC                              ?_SDFAST_open 0001  
           __end_of_OSCILLATOR_Initialize A3F4                                     l12010 4B96  
                                   l12100 4EB6                                     l12020 4BDC  
                                   l12012 4BA6                                     l12004 4B78  
                                   l12110 4F24                                     l12030 4C08  
                                   l12022 4BE2                                     l12014 4BB6  
                                   l12006 4B86                                     l12120 4F8C  
                                   l12104 4EE0                                     l12112 4F28  
                                   l12040 4C5E                                     l12032 4C18  
                                   l12024 4BE8                                     l12016 4BC6  
                                   l12008 4B94                                     l12130 4FB6  
                                   l12122 4F9C                                     l12114 4F42  
                                   l12106 4EEC                                     l12050 4CA6  
                                   l12034 4C28                                     l12026 4BF6  
                                   l12018 4BCC                                     l12124 4FAA  
                                   l12116 4F56                                     l12108 4EFA  
                                   l12060 4CF4                                     l12052 4CB2  
                                   l12044 4C72                                     l12036 4C2E  
                                   l12028 4BF8                                     l12126 4FAC  
                                   l12118 4F70                                     l12070 4D52  
                                   l12062 4D04                                     l12054 4CCE  
                                   l12046 4C82                                     l12038 4C4E  
                                   l12128 4FB2                                     l12080 4DDC  
                                   l12072 4D62                                     l12064 4D14  
                                   l12056 4CDA                                     l12048 4C8C  
                                   l12090 4E56                                     l12082 4E12  
                                   l12074 4D82                                     l12066 4D24  
                                   l12058 4CE6                                     l12092 4E68  
                                   l12084 4E20                                     l12076 4D92  
                                   l12068 4D34                                     l12094 4E76  
                                   l12086 4E3E                                     l12078 4DB2  
                                   l12096 4E7A                                     l12088 4E48  
                                   l15000 94DE                                     l12098 4E88  
                                   l15010 9526                                     l15002 94F0  
                                   l15020 8DB4                                     l15012 8D5E  
                                   l11900 5C44                                     l15004 9502  
                                   l15100 52C6                                     l15022 8DFA  
                                   l15014 8D64                                     l11910 5C8A  
                                   l11902 5C4C                                     l15006 9514  
                                   l15110 33E0                                     l15024 8E04  
                                   l15016 8D94                                     l15040 99B2  
                                   l15032 9978                                     l11920 5CB2  
                                   l11912 5C8E                                     l11904 5C5C  
                                   l15008 9518                                     l15104 5348  
                                   l15120 3448                                     l15112 33E6  
                                   l15200 2E0C                                     l16000 76D6  
                                   l14410 9CDA                                     l14402 9CA0  
                                   l15026 8E08                                     l15018 8DA4  
                                   l15034 998A                                     l11930 5D00  
                                   l11906 5C72                                     l15042 A0B8  
                                   l15130 34E8                                     l15122 34AC  
                                   l15114 3400                                     l15202 2E24  
                                   l15210 2E9E                                     l15050 8C82  
                                   l16010 3E22                                     l16002 76F0  
                                   l14420 8902                                     l14404 9CB4  
                                   l14412 9CDE                                     l14500 91C0  
                                   l15028 8E2E                                     l15036 9998  
                                   l11940 5D4A                                     l11932 5D10  
                                   l11924 5CC6                                     l11908 5C82  
                                   l11916 5CA2                                     l15044 A0C0  
                                   l15108 53A4                                     l15140 355A  
                                   l15132 34F6                                     l15300 32F4  
                                   l15220 2F18                                     l15212 2ECA  
                                   l15204 2E4A                                     l15052 8C90  
                                   l16100 4152                                     l16020 3E94  
                                   l16012 3E30                                     l14422 89CE  
                                   l14502 A454                                     l14414 A280  
                                   l14406 9CC4                                     l14510 272E  
                                   l15038 99A8                                     l11950 5D98  
                                   l11942 5D56                                     l11934 5D18  
                                   l11926 5CE0                                     l11918 5CB2  
                                   l11870 5BAA                                     l15046 A0D2  
                                   l15070 504E                                     l15062 4FC8  
                                   l15150 3604                                     l15142 35BE  
                                   l15134 3500                                     l15126 34C0  
                                   l15118 3436                                     l15310 33B2  
                                   l15302 3306                                     l15222 2F2C  
                                   l15214 2EE6                                     l15206 2E60  
                                   l15054 8CD2                                     l16110 418E  
                                   l16030 3EF8                                     l16022 3EB6  
                                   l16014 3E4C                                     l14424 89D2  
                                   l14416 A286                                     l14408 9CC8  
                                   l14440 39E0                                     l14432 390A  
                                   l14520 275A                                     l14512 2732  
                                   l15400 183A                                     l11952 5DAE  
                                   l11960 5DDE                                     l11944 5D74  
                                   l11936 5D28                                     l11928 5CF0  
                                   l11880 5BDE                                     l11872 5BAC  
                                   l17000 82D8                                     l15048 A0D8  
                                   l15080 5108                                     l15072 5060  
                                   l15064 4FE0                                     l15152 3644  
                                   l15136 3538                                     l15128 34E4  
                                   l15304 332A                                     l15240 3028  
                                   l15232 2FA2                                     l15208 2E8A  
                                   l15320 7D10                                     l15312 7CC2  
                                   l16120 41E2                                     l16112 41A8  
                                   l16032 3F00                                     l16024 3EBA  
                                   l16016 3E5E                                     l16008 3E0A  
                                   l14418 88F2                                     l14506 A45C  
                                   l14450 3AEA                                     l14442 3A16  
                                   l14434 3924                                     l14610 2AF2  
                                   l14530 27CC                                     l14522 2774  
                                   l16210 7C10                                     l16202 7BC0  
                                   l15410 18C2                                     l15402 186E  
                                   l11962 5DEC                                     l11954 5DB4  
                                   l11946 5D76                                     l11938 5D3C  
                                   l11890 5C10                                     l11874 5BBC  
                                   l11882 5BE6                                     l11866 5B8E  
                                   l17010 8316                                     l17002 82EA  
                                   l15090 51D2                                     l15066 4FFC  
                                   l15162 3714                                     l15154 3670  
                                   l15146 35D2                                     l15138 354A  
                                   l15306 3378                                     l15250 30B2  
                                   l15242 3038                                     l15234 2FB2  
                                   l15218 2EFC                                     l15226 2F6A  
                                   l15058 8CE6                                     l15330 7D78  
                                   l15322 7D36                                     l15314 7CDE  
                                   l16130 4234                                     l16122 41F2  
                                   l16106 4178                                     l16050 3F82  
                                   l16034 3F12                                     l16042 3F3A  
                                   l16026 3ECC                                     l16018 3E66  
                                   l14428 89D8                                     l14460 3B54  
                                   l14452 3AF4                                     l14444 3A4C  
                                   l14436 3974                                     l14700 9B7E  
                                   l14620 2B94                                     l14612 2B26  
                                   l14540 2836                                     l14532 27D8  
                                   l14524 277C                                     l14516 2738  
                                   l16220 7C86                                     l16212 7C2E  
                                   l16204 7BEC                                     l15340 98A2  
                                   l15500 1BBE                                     l15412 18C6  
                                   l15404 1870                                     l11972 5E56  
                                   l11980 5E9E                                     l11964 5DF0  
                                   l11956 5DBE                                     l11948 5D86  
                                   l11892 5C12                                     l11884 5BF6  
                                   l11876 5BCC                                     l11868 5B9C  
                                   l17020 836E                                     l15092 51F2  
                                   l15084 517C                                     l15076 50D4  
                                   l15068 5026                                     l15164 3752  
                                   l15156 3696                                     l15148 35F6  
                                   l15180 38D6                                     l15308 33A2  
                                   l15252 30D6                                     l15244 3064  
                                   l15236 2FE6                                     l15260 313A  
                                   l15228 2F8C                                     l15332 7D82  
                                   l15324 7D56                                     l16140 4278  
                                   l16124 41F6                                     l16108 418A  
                                   l16060 3FC0                                     l16052 3F94  
                                   l16044 3F5E                                     l16036 3F24  
                                   l16028 3EE6                                     l17100 2214  
                                   l16300 66D8                                     l14470 3C08  
                                   l14462 3B86                                     l14454 3B2C  
                                   l14446 3AA2                                     l14438 39AA  
                                   l14702 9B8A                                     l14622 2BA6  
                                   l14614 2B5E                                     l14606 2AD2  
                                   l14542 2848                                     l14534 27FE  
                                   l14526 2780                                     l14518 2744  
                                   l14710 7E1A                                     l16214 7C4C  
                                   l15342 98B4                                     l15502 1BC2  
                                   l15510 1BFC                                     l15430 1982  
                                   l15414 18C8                                     l15406 1888  
                                   l15422 1900                                     l15190 A40A  
                                   l15350 9838                                     l11990 5F08  
                                   l11982 5EB8                                     l11974 5E62  
                                   l11966 5DFE                                     l11958 5DCC  
                                   l11894 5C22                                     l11886 5BFC  
                                   l11878 5BDC                                     l17022 837A  
                                   l17014 832A                                     l17006 8300  
                                   l16230 809E                                     l15094 5202  
                                   l15086 51B4                                     l15078 5104  
                                   l15174 37EE                                     l15166 3768  
                                   l15158 3700                                     l15182 3900  
                                   l15270 31A6                                     l15262 3150  
                                   l15254 30F0                                     l15246 307C  
                                   l15238 2FFE                                     l15334 7DA4  
                                   l15326 7D64                                     l15318 7CE4  
                                   l16142 4288                                     l16126 4208  
                                   l16118 41D2                                     l16070 4000  
                                   l16046 3F6E                                     l16038 3F34  
                                   l17110 2268                                     l17102 2222  
                                   l16310 671E                                     l14472 3C40  
                                   l14480 3C78                                     l14464 3B8A  
                                   l14456 3B32                                     l14448 3AB6  
                                   l14704 9BBC                                     l14632 2C28  
                                   l14624 2C12                                     l14616 2B6E  
                                   l14608 2AE8                                     l14560 28A8  
                                   l14544 286E                                     l14536 2810  
                                   l14528 27B6                                     l14720 7EC4  
                                   l14712 7E2C                                     l16216 7C80  
                                   l16208 7BF2                                     l15344 98BA  
                                   l15520 1C46                                     l15504 1BC4  
                                   l15424 1926                                     l15408 18B0  
                                   l15360 9882                                     l15352 984C  
                                   l16160 78C0                                     l16152 7880  
                                   l11992 5F16                                     l11984 5ECE  
                                   l11976 5E70                                     l11968 5E2C  
                                   l11896 5C32                                     l11888 5C02  
                                   l17024 83A4                                     l17016 833E  
                                   l16240 8144                                     l16232 80A4  
                                   l15088 51C2                                     l15176 38C0  
                                   l15168 37DA                                     l15264 3160  
                                   l15256 311A                                     l15248 309C  
                                   l15336 7DEE                                     l15328 7D6C  
                                   l15600 A43E                                     l16144 4294  
                                   l16136 424A                                     l16080 409C  
                                   l16072 402E                                     l16128 4210  
                                   l16064 3FD4                                     l16048 3F7A  
                                   l16056 3F9A                                     l17120 233E  
                                   l17112 226A                                     l17104 2238  
                                   l17032 1F40                                     l17200 0F54  
                                   l16304 66EE                                     l14482 3CAA  
                                   l14474 3C4A                                     l14466 3BC6  
                                   l14458 3B42                                     l14490 9138  
                                   l14706 9BC2                                     l14802 48C4  
                                   l14634 2C5E                                     l14618 2B84  
                                   l14642 2C74                                     l14570 294E  
                                   l14562 28BC                                     l14546 2880  
                                   l14554 2894                                     l14538 2826  
                                   l14714 7E44                                     l16226 7CBE  
                                   l15346 98EE                                     l15530 1C7E  
                                   l15522 1C56                                     l15450 1A10  
                                   l15442 19E0                                     l15426 195E  
                                   l15370 1724                                     l15186 A476  
                                   l15194 A472                                     l15354 9856  
                                   l16170 78EA                                     l16162 78D6  
                                   l16154 7886                                     l11994 5F1C  
                                   l11986 5EE8                                     l11978 5E9A  
                                   l11898 5C42                                     l17026 83A8  
                                   l17018 835A                                     l16330 8ABC  
                                   l16322 89FE                                     l16242 8174  
                                   l16234 80B6                                     l15098 527C  
                                   l15282 320C                                     l15266 316C  
                                   l15258 312A                                     l15602 A43E  
                                   l15610 A432                                     l16146 429C  
                                   l16138 4268                                     l16090 40D6  
                                   l16074 4060                                     l16066 3FE6  
                                   l16058 3FBC                                     l16410 6986  
                                   l17130 23B0                                     l17122 2356  
                                   l17114 229A                                     l17106 2246  
                                   l17050 1F94                                     l17042 1F5A  
                                   l17034 1F54                                     l17210 0FE4  
                                   l16306 670C                                     l14484 3DBE  
                                   l14476 3C5A                                     l14468 3BF8  
                                   l14492 9144                                     l14820 4900  
                                   l14812 48D6                                     l14708 A464  
                                   l14900 800E                                     l14660 2C9A  
                                   l14636 2C6C                                     l14580 29DC  
                                   l14572 2964                                     l14564 28CE  
                                   l14556 28A2                                     l14548 288E  
                                   l14732 7EF2                                     l14724 7ECC  
                                   l14716 7E66                                     l14740 7F42  
                                   l15540 1E4E                                     l15532 1C86  
                                   l15524 1C68                                     l15516 1C04  
                                   l15460 1A5C                                     l15452 1A36  
                                   l15444 19E4                                     l15436 198C  
                                   l15428 196C                                     l15380 178C  
                                   l15372 1740                                     l15356 986A  
                                   l15364 988A                                     l15348 982E  
                                   l16180 7956                                     l16172 78FC  
                                   l16164 78DA                                     l16156 78A6  
                                   l16500 0052                                     l11996 5F1E  
                                   l11988 5F04                                     l17028 83CC  
                                   l16324 8A2C                                     l16316 89DC  
                                   l16244 8188                                     l16236 80D4  
                                   l15284 3222                                     l15268 3196  
                                   l15276 31C4                                     l15292 326A  
                                   l15620 53E0                                     l16420 8732  
                                   l15612 A432                                     l16092 40F8  
                                   l16076 4072                                     l16068 3FFC  
                                   l16404 68D6                                     l17140 244C  
                                   l17132 23C4                                     l17124 237C  
                                   l17108 225A                                     l17116 22B2  
                                   l17060 1FE4                                     l17052 1FAC  
                                   l17044 1F5E                                     l17220 10E0  
                                   l17212 101E                                     l16260 6506  
                                   l16252 64BE                                     l14486 3DF4  
                                   l14478 3C70                                     l14494 914A  
                                   l14830 4966                                     l14822 4912  
                                   l14910 8044                                     l14902 801C  
                                   l14670 2D38                                     l14662 2CB0  
                                   l14654 2C88                                     l14590 2AA8  
                                   l14582 29E4                                     l14574 2980  
                                   l14566 2906                                     l14742 7F58  
                                   l14734 7F02                                     l14726 7EDA  
                                   l14718 7E82                                     l15550 1EC4  
                                   l15542 1E88                                     l15534 1C9C  
                                   l15526 1C6C                                     l15518 1C42  
                                   l15470 1A98                                     l15462 1A5E  
                                   l15454 1A46                                     l15446 19F8  
                                   l15438 19CA                                     l15390 17D4  
                                   l15382 1792                                     l15374 1742  
                                   l15366 9898                                     l15358 986E  
                                   l16190 79D6                                     l16182 797A  
                                   l16174 790E                                     l16158 78B8  
                                   l16326 8A76                                     l16318 89F8  
                                   l16246 8194                                     l16238 8108  
                                   l15294 329C                                     l15286 3242  
                                   l15278 31F0                                     l15198 2DF4  
                                   l15702 4330                                     l15630 5410  
                                   l16422 8766                                     l16430 87EE  
                                   l16414 86F0                                     l16094 4112  
                                   l16086 40B2                                     l16078 4088  
                                   l16406 6924                                     l16350 6748  
                                   l17150 2526                                     l17142 2492  
                                   l17134 23EA                                     l17126 238E  
                                   l17118 22C2                                     l17070 2032  
                                   l17062 1FF4                                     l17054 1FBC  
                                   l17046 1F7C                                     l17038 1F5A  
                                   l17310 1608                                     l17302 153A  
                                   l17230 1184                                     l17222 10F6  
                                   l17214 1088                                     l17206 0F5A  
                                   l16262 651A                                     l16254 64E8  
                                   l16342 A03C                                     l16334 A004  
                                   l15800 920E                                     l14496 9188  
                                   l14840 4A4E                                     l14832 49AA  
                                   l14824 4928                                     l14760 478E  
                                   l14752 4730                                     l14912 804A  
                                   l14904 802C                                     l14664 2CBA  
                                   l14584 2A1A                                     l14576 2988  
                                   l14568 293A                                     l14736 7F08  
                                   l14728 7EEA                                     l15552 1EC8  
                                   l15544 1E9E                                     l15536 1D28  
                                   l15528 1C6E                                     l15480 1AD4  
                                   l15472 1AA8                                     l15464 1A62  
                                   l15456 1A4E                                     l15448 1A0C  
                                   l15392 17DC                                     l15384 179C  
                                   l15376 1786                                     l16184 799C  
                                   l16176 7916                                     l16168 78DA  
                                   l16600 0384                                     l16520 00DE  
                                   l16512 008E                                     l16504 0058  
                                   l17400 A264                                     l16328 8AAC  
                                   l16248 81C4                                     l15296 32AC  
                                   l15712 434E                                     l15640 54A4  
                                   l15632 543E                                     l15624 53F8  
                                   l16424 8776                                     l16416 8708  
                                   l16096 4134                                     l16088 40C6  
                                   l16440 6266                                     l16408 694A  
                                   l16360 67B0                                     l16352 6760  
                                   l17160 256A                                     l17152 252A  
                                   l17144 24B6                                     l17136 23FA  
                                   l17128 239C                                     l17080 20C8  
                                   l17072 2048                                     l17064 2006  
                                   l17056 1FCA                                     l17048 1F8C  
                                   l17320 1658                                     l17304 1594  
                                   l17312 161A                                     l17240 11CC  
                                   l17232 119A                                     l17224 1128  
                                   l17216 109A                                     l17208 0FC0  
                                   l16264 6534                                     l16272 654C  
                                   l16256 64F4                                     l16336 A036  
                                   l15810 9260                                     l15802 921A  
                                   l14498 91BA                                     l14834 49BC  
                                   l14826 4944                                     l14818 48EA  
                                   l14770 47F8                                     l14762 4792  
                                   l14754 473C                                     l14746 4726  
                                   l14914 807E                                     l14690 2DA8  
                                   l14666 2CF0                                     l14682 2D4A  
                                   l14594 2AAE                                     l14586 2A50  
                                   l14578 29CA                                     l14738 7F3C  
                                   l14922 99E8                                     l16194 7B62  
                                   l15554 1EFE                                     l15546 1EB2  
                                   l15538 1DF2                                     l15490 1B5C  
                                   l15482 1B08                                     l15474 1ABA  
                                   l15466 1A6A                                     l15458 1A56  
                                   l15394 1802                                     l15386 179E  
                                   l16186 79B6                                     l16178 7936  
                                   l16610 03C6                                     l16602 0394  
                                   l16530 0114                                     l16522 00EC  
                                   l16514 00A6                                     l16506 0076  
                                   l17410 9ACC                                     l17402 A268  
                                   l16346 A12C                                     l15570 A330  
                                   l15298 32C4                                     l15730 4512  
                                   l15714 437C                                     l15706 4330  
                                   l15642 54C0                                     l16426 87A4  
                                   l16418 8722                                     l16098 4138  
                                   l16442 629C                                     l16450 62FC  
                                   l16434 620A                                     l16370 67F6  
                                   l16354 677C                                     l17170 262E  
                                   l17162 2588                                     l17154 2546  
                                   l17146 24DE                                     l17138 241C  
                                   l17090 2162                                     l17082 20EE  
                                   l17074 205C                                     l17066 2016  
                                   l17058 1FCE                                     l17330 1720  
                                   l17322 168E                                     l17314 1622  
                                   l17306 15AA                                     l17250 1266  
                                   l17242 11DC                                     l17234 11AA  
                                   l17226 1168                                     l17218 10BC  
                                   l16290 6656                                     l16282 65E0  
                                   l16266 653C                                     l16274 6562  
                                   l16258 6502                                     l15812 9262  
                                   l15804 9228                                     l15580 92E0  
                                   l14860 4AB8                                     l14836 4A28  
                                   l14828 494C                                     l14852 4A5A  
                                   l14772 4806                                     l14764 47BC  
                                   l14756 4752                                     l14748 472A  
                                   l14908 8034                                     l14916 8084  
                                   l14940 9A5A                                     l14684 2D60  
                                   l14668 2D02                                     l14596 2ABE  
                                   l14588 2A98                                     l14924 99F2  
                                   l14932 9A3A                                     l16196 7B8E  
                                   l15548 1EB4                                     l15492 1B82  
                                   l15476 1ACC                                     l15468 1A90  
                                   l15396 1814                                     l15388 17D2  
                                   l16188 79BE                                     l16700 085C  
                                   l16612 03D6                                     l16604 03AE  
                                   l16540 0152                                     l16524 00FE  
                                   l16516 00AA                                     l16508 0088  
                                   l17420 9B06                                     l17404 A26C  
                                   l17500 744E                                     l15564 A316  
                                   l15900 699A                                     l17340 9D8C  
                                   l15740 453A                                     l15716 43B6  
                                   l15724 443A                                     l15708 4348  
                                   l15660 5618                                     l15636 5444  
                                   l15628 53F8                                     l16428 87DC  
                                   l16452 631C                                     l16444 62A2  
                                   l16436 6222                                     l16372 6806  
                                   l16356 67AA                                     l16348 6748  
                                   l17180 272A                                     l17172 2636  
                                   l17164 25AC                                     l17156 254A  
                                   l17148 250A                                     l17092 2194  
                                   l17084 2116                                     l17076 206A  
                                   l17068 201C                                     l17324 16B6  
                                   l17316 1636                                     l17308 15B2  
                                   l17252 12CC                                     l17260 12F4  
                                   l15820 933C                                     l16292 668A  
                                   l16284 65F6                                     l16276 6588  
                                   l16268 6544                                     l15814 926C  
                                   l15806 9232                                     l15582 92E4  
                                   l15574 9284                                     l14870 4ADC  
                                   l14862 4AC6                                     l14854 4A6A  
                                   l14838 4A3E                                     l14790 488E  
                                   l14766 47C0                                     l14758 4762  
                                   l14918 809A                                     l14950 9AB0  
                                   l14942 9A8E                                     l14686 2D62  
                                   l14934 9A48                                     l14926 9A26  
                                   l16198 7BBA                                     l15558 1F04  
                                   l15494 1B8A                                     l15478 1AD0  
                                   l15398 1826                                     l16710 098E  
                                   l16630 0496                                     l16622 040C  
                                   l16606 03C0                                     l16542 0160  
                                   l16526 010E                                     l16518 00C6  
                                   l16534 011A                                     l17414 9AE0  
                                   l17510 74D6                                     l17502 7480  
                                   l15910 6B30                                     l15902 69AA  
                                   l17342 9D9C                                     l17334 9D56  
                                   l15750 4590                                     l15742 4564  
                                   l15734 4518                                     l15726 44B4  
                                   l15718 4420                                     l15662 5636  
                                   l15654 5568                                     l15646 54E4  
                                   l15638 548C                                     l15590 97BA  
                                   l16470 63C2                                     l16462 6380  
                                   l16454 632C                                     l16446 62C4  
                                   l16438 6244                                     l16390 688A  
                                   l16382 6854                                     l17174 2698  
                                   l17166 25BC                                     l17158 255A  
                                   l17094 21A4                                     l17086 2128  
                                   l17078 20B6                                     l17318 163E  
                                   l17270 1360                                     l17262 1334  
                                   l17246 11E2                                     l17238 11B0  
                                   l17326 16FE                                     l17190 0F04  
                                   l15830 938E                                     l15822 9348  
                                   l16294 66A2                                     l16286 6618  
                                   l16278 65B4                                     l17430 9F4E  
                                   l15808 9250                                     l15584 92E8  
                                   l15576 9294                                     l14872 4AF2  
                                   l14856 4A80                                     l14792 489E  
                                   l14784 4832                                     l14776 480C  
                                   l14768 47E6                                     l14944 9A98  
                                   l14688 2D98                                     l14928 9A30  
                                   l14960 7258                                     l15496 1B9A  
                                   l15488 1B52                                     l16640 04F2  
                                   l16632 04B4                                     l16624 0434  
                                   l16616 03DC                                     l16536 0128  
                                   l17416 9AF2                                     l17408 9AB8  
                                   l17440 83E0                                     l17520 752C  
                                   l17512 74E4                                     l17504 7482  
                                   l17424 A46A                                     l15568 A320  
                                   l15912 6B7A                                     l15904 69C8  
                                   l16800 6D46                                     l17336 9D66  
                                   l15752 45D0                                     l15744 4578  
                                   l15736 4534                                     l15728 44F6  
                                   l15680 5736                                     l15648 54FA  
                                   l15656 55A0                                     l15920 79F2  
                                   l15592 97BE                                     l16480 6408  
                                   l16472 63D0                                     l16464 6390  
                                   l16456 6352                                     l16448 62E6  
                                   l16368 67C6                                     l16376 680C  
                                   l17176 26FE                                     l17168 25EA  
                                   l17096 21C4                                     l17088 213E  
                                   l17280 13F4                                     l17272 1370  
                                   l17264 134C                                     l17248 1228  
                                   l17328 1710                                     l17192 0F14  
                                   l17184 0ED2                                     l15824 9356  
                                   l15816 931C                                     l15840 8F4A  
                                   l15832 8F02                                     l16296 66B6  
                                   l16288 661C                                     l17432 9F56  
                                   l17600 A166                                     l17530 7706  
                                   l15586 9300                                     l15578 9294  
                                   l14874 4AF4                                     l14858 4A82  
                                   l14794 48B0                                     l14786 484A  
                                   l14778 481E                                     l14890 7F86  
                                   l14938 9A50                                     l14698 2DB0  
                                   l14962 7268                                     l14954 71DC  
                                   l15498 1BAC                                     l16722 09E0  
                                   l16706 0874                                     l16642 0532  
                                   l16634 04D0                                     l16626 044A  
                                   l16570 01F6                                     l16554 018C  
                                   l16546 0166                                     l16538 013C  
                                   l17450 8438                                     l17442 83F8  
                                   l17522 753C                                     l17514 7502  
                                   l17506 748E                                     l17426 A46E  
                                   l15850 9110                                     l15906 69E4  
                                   l15914 6B8A                                     l16802 6D7C  
                                   l16810 6DEA                                     l17338 9D76  
                                   l15770 4628                                     l15754 45E8  
                                   l15674 5684                                     l15666 563C  
                                   l15658 55EC                                     l15930 7A78  
                                   l15922 7A0A                                     l15594 97E0  
                                   l16466 63A0                                     l16458 636C  
                                   l16490 64BA                                     l16378 6838  
                                   l17178 271A                                     l17098 2204  
                                   l17282 1436                                     l17290 1470  
                                   l17274 1390                                     l17258 12E2  
                                   l17194 0F34                                     l17186 0EDA  
                                   l15826 9374                                     l15818 9334  
                                   l15842 8F7C                                     l15834 8F14  
                                   l16298 66D4                                     l17434 9F5E  
                                   l17610 971E                                     l17602 A176  
                                   l17380 9B5C                                     l17620 701C  
                                   l17612 6FE8                                     l17540 7734  
                                   l17532 770E                                     l14972 9FC6  
                                   l14876 4B2A                                     l14868 4ACE  
                                   l14796 48BE                                     l14788 4854  
                                   l14884 4B34                                     l14892 7FA8  
                                   l14948 9AA2                                     l14964 72F2  
                                   l14956 71E2                                     l14980 9074  
                                   l16732 0A8E                                     l16724 0A1E  
                                   l16716 09BC                                     l16708 097C  
                                   l16660 064E                                     l16652 05E0  
                                   l16644 0562                                     l16628 0470  
                                   l16580 02CC                                     l16572 0238  
                                   l16564 01D4                                     l16556 019E  
                                   l16548 0178                                     l16820 84FE  
                                   l17452 8448                                     l17524 754A  
                                   l17516 7504                                     l17508 74CA  
                                   l15852 912E                                     l15916 6BB8  
                                   l15908 6ACE                                     l16804 6D9E  
                                   l15764 4608                                     l15780 46C0  
                                   l15692 42B4                                     l15676 56D0  
                                   l15668 5656                                     l15924 7A2C  
                                   l15596 9810                                     l15588 97B6  
                                   l16484 6422                                     l16476 63E2  
                                   l16468 63B0                                     l16396 6890  
                                   l16388 686E                                     l17292 14A0  
                                   l17276 13A2                                     l17188 0EEA  
                                   l15828 9384                                     l15836 8F24  
                                   l17436 9F72                                     l17428 9F40  
                                   l17604 96C4                                     l17390 9B66  
                                   l17382 9B5E                                     l17630 705C  
                                   l17622 702A                                     l17614 6FEC  
                                   l17550 77F4                                     l17542 775C  
                                   l17534 7716                                     l14974 9FFA  
                                   l14878 4B2E                                     l14894 7FC4  
                                   l14886 7F5C                                     l14966 7310  
                                   l14958 71FE                                     l16750 0CDE  
                                   l16734 0AFE                                     l16726 0A6C  
                                   l16662 0676                                     l16654 0614  
                                   l16646 0580                                     l16590 02F6  
                                   l16574 0254                                     l16566 01DC  
                                   l16558 01BE                                     l16494 001E  
                                   l16830 8522                                     l16822 8500  
                                   l16814 84EC                                     l17462 8472  
                                   l17454 844C                                     l17446 840C  
                                   l17526 754C                                     l17518 7508  
                                   l15790 A226                                     l15862 9C42  
                                   l15846 9086                                     l14990 A1BC  
                                   l16806 6DCA                                     l15782 46E6  
                                   l15758 45EE                                     l15694 42CC  
                                   l15686 575C                                     l15678 5712  
                                   l15950 7B5A                                     l15942 7B16  
                                   l15934 7A8C                                     l15926 7A3C  
                                   l16478 63F2                                     l16398 68C2  
                                   l17294 14D6                                     l17278 13D0  
                                   l17198 0F3A                                     l15838 8F2E  
                                   l17606 96E2                                     l16910 976C  
                                   l16902 9740                               ?_SPI1_Close 0001  
                                   l17392 A3DC                                     l17384 9B60  
                                   l17376 A2EE                                     l17720 945C  
                                   l17640 70AA                                     l17632 706C  
                                   l17624 703A                                     l17616 6FFC  
                                   l17560 7840                                     l17552 7816  
                                   l17544 777E                                     l17536 772C  
                                   l14896 8006                                     l14888 7F6E  
                                   l14968 739A                                     l15872 9EFC  
                                   l16760 0DCA                                     l16752 0D08  
                                   l16744 0C76                                     l16736 0B10  
                                   l16680 077C                                     l16672 06EA  
                                   l16664 068C                                     l16592 0334  
                                   l16576 0268                                     l16584 02D6  
                                   l16496 002E                                     l16824 8506  
                                   l16816 84F6                                     l17480 84D6  
                                   l17472 849A                                     l17464 847C  
                                   l17456 845A                                     l17448 8436  
                                   l15864 9C66                                     l15848 90CC  
                                   l14992 A1CE                                     l14984 A19E  
                                   l16808 6DDA                                     l15784 4722  
                                   l15696 430C                                     l15688 57DE  
                                   l15944 7B1E                                     l15936 7AC2  
                                   l15928 7A44                                     l15960 941E  
                                   l16488 6440                                     l17296 1524  
                                   l17288 144C                                     l17608 970C  
                                   l16920 97A0                                     l16912 977A  
                                   l16904 974A                                     l17386 9B62  
                                   l17378 9B1A                                     l17394 A392  
                                   l17722 9470                                     l17714 9430  
                                   l17650 70EA                                     l17642 70B8  
                                   l17634 707C                                     l17626 7048  
                                   l17618 700C                                     l17570 7850  
                                   l17562 7844                                     l17554 7838  
                                   l17546 77A4                                     l17538 7730  
                                   l15794 91DE                                     l15874 9F06  
                                   l15882 9F2E                                     l14978 8FC8  
                                   l16762 0E08                                     l16754 0D4C  
                                   l16746 0CBC                                     l16738 0BC0  
                                   l16690 07FE                                     l16682 07DE  
                                   l16674 075A                                     l16666 06D2  
                                   l16594 034C                                     l16586 02DE  
                                   l16578 028E                                     l16498 0042  
                                   l16850 85B2                                     l16834 853E  
                                   l16826 8512                                     l16842 8574  
                                   l16818 84FC                                     l17474 84A6  
                                   l17466 8486                                     l17490 7410  
                                   l15858 9134                                     l14986 A1B0  
                                   l14994 94B8                                     l15778 467E  
                                   l15946 7B38                                     l15938 7AF6  
                                   l15890 9668                                     l15970 755E  
                                   l15954 93A6                                     l16930 9EEC  
                                   l16922 97A6                                     l16914 9780  
                                   l16906 975C                                     l17740 A04A  
                                   l17732 9BE0                                     l17388 9B64  
                                   l17396 A3A8                                     l17724 9484  
                                   l19180 71B6                                     l17652 70FA  
                                   l17636 708C                                     l17580 785C  
                                   l17572 7852                                     l17564 7848  
                                   l17556 783A                                     l17548 77CC  
                                   l15796 91F0                                     l15884 9F3C  
                                   l15876 9F1A                                     l16756 0D5C  
                                   l16764 0E88                                     l16748 0CCC  
                                   l16692 081C                                     l16596 0358  
                                   l16588 02F0                                     l16860 85FA  
                                   l16852 85B6                                     l16844 8588  
                                   l16836 8542                                     l16828 8516  
                                   l17476 84B6                                     l17492 7426  
                                   l17484 73AA                                     l15788 A204  
                                   l15868 9C72                                     l14988 A1B6  
                                   l15964 9E04                                     l14996 94CA  
                                   l16780 6C06                                     l15948 7B48  
                                   l15892 96A0                                     l15980 75B0  
                                   l15972 7576                                     l15956 93C6  
                                   l16924 9EAC                                     l16940 8822  
                                   l16916 9796                                     l16908 9764  
                                   l17742 A04E                                     l17734 9C3A  
                                   l17726 9494                                     l17718 9448  
                                   l19174 7162                                     l19182 71CC  
                                   l17654 7108                                     l17646 70CC  
                                   l17638 709A                                     l17590 7868  
                                   l17582 785E                                     l17574 7856  
                                   l17566 784C                                     l17558 783C  
                                   l15798 9206                                     l15878 9F24  
                                   l16766 0E9A                                     l16758 0D8C  
                                   l16694 0820                                     l16598 0380  
                                   l17750 8BAA                                     l16870 8616  
                                   l16862 8600                                     l16854 85CC  
                                   l16846 8596                                     l16838 8552  
                                   l17398 A25A                                     l17478 84C6  
                                   l17486 73BC                                     l17910 A1F0  
                                   l15966 9E1E                                     l14998 94D0  
                                   l16782 6C20                                     l16790 6C92  
                                   l16774 6BC4                                     l15894 96A6  
                                   l15990 7630                                     l15982 75E4  
                                   l15974 7598                                     l15958 93E4  
                                   l16926 9EB8                                     l16950 8898  
                                   l16942 8840                                     l16934 87F2  
                                   l16918 979E                                     l17744 A05E  
                                   l17736 9C3E                                     l17904 A420  
                                   l17728 94A6                                     l19176 717E  
                                   l19184 7170                                     l17656 7118  
                                   l17648 70DA                                     l17664 713A  
                                   l17584 7860                                     l17576 7858  
                                   l17568 784E                                     l16768 0EB8  
                                   l16696 083C                                     l16688 07FA  
                                   l17760 8BF2                                     l17752 8BBE  
                                   l16864 8602                                     l17920 A3AC  
                                   l17496 743A                                     l17488 73CA  
                                   l17912 A1F4                                     l16960 A230  
                                   l15968 9E3C                                     l16792 6C92  
                                   l16784 6C7A                                     l16776 6BDC  
                                   l15896 96AA                                     l15888 9644  
                                   l15992 7638                                     l15976 75A8  
                                   l16928 9ECA                                     l17592 A356  
                                   l16952 88B8                                     l16944 8846  
                                   l18800 5898                                     l17738 A044  
                                   l19178 719A                                     l19186 718C  
                                   l17658 7126                                     l17586 7862  
                                   l17578 785A                                     l16698 0840  
                                   l17770 8C50                                     l17762 8C04  
                                   l17754 8BCE                                     l16890 869A  
                                   l16882 8668                                     l16874 8632  
                                   l16866 8604                                     l16858 85F0  
                                   l17922 A3BE                                     l17498 7442  
                                   l17914 A1FA                                     l17906 A1D8  
                                   l15898 698A                                     l16794 6CC6  
                                   l16778 6BEC                                     l15994 7662  
                                   l15986 75F8                                     l17594 A35E  
                                   l16954 88E8                                     l16946 8872  
                                   l16938 8806                                     l16970 9632  
                                   l16962 95C2                                     l18810 58AC  
                                   l18802 589C                                     l19188 71A8  
                                   l17588 7864                                     l17772 8C60  
                                   l17764 8C12                                     l17748 8BA2  
                                   l16884 8676                                     l16876 8636  
                                   l16868 860A                                     l17916 A1FE  
                                   l17908 A1E6                                     l17932 9F84  
                                   l16796 6CD6                                     l16788 6C80  
                                   l15996 7688                                     l15988 7620  
                                   l17940 81FA                                     l17596 A36E  
                                   l16948 8896                                     l16956 A3F4  
                                   l16980 8B10                                     l16972 8AC0  
                                   l16964 95DA                                     l18820 58BA  
                                   l18812 58B0                                     l18804 58A2  
                                   l17918 A378                                     l17766 8C24  
                                   l17758 8BD4                                     l16894 86B6  
                                   l16878 8646                                     l16886 8678  
                                   l17926 A3C4                                     l16990 A0F2  
                                   l17934 9FB4                                     l16798 6CFE  
                                   l17950 8228                                     l17942 8208  
                                   l17598 A370                                     l16982 8B58  
                                   l16974 8ADC                                     l16966 95F4  
                                   l18830 5914                                     l18822 58BC  
                                   l18814 58B4                                     l18806 58A8  
                                   l17776 8C66                                     l17768 8C32  
                                   l16896 86BA                                     l16888 868C  
                                   l17928 A3D6                                     l17960 953E  
                                   l17936 9FC0                                     l17952 824E  
                                   l17944 821C                                     l16984 8B8E  
                                   l16968 9622                                     l18832 594C  
                                   l18840 59B2                                     l18824 58BE  
                                   l18816 58B6                                     l18808 58AA  
                                   l17778 8C7E                                     l16898 86D0  
                                   l17970 9580                                     l17962 954E  
                                   l16994 A114                                     l17954 8278  
                                   l17946 8220                                     l17938 81C8  
                                   l16986 8B9E                                     l16978 8AE2  
                                   l18850 5A90                                     l18842 59DE  
                                   l18834 5996                                     l18826 58C0  
                                   l18818 58B8                                     l18770 57F0  
                                   l17972 9590                                     l17964 9560  
                                   l17980 5F2A                                     l17956 82D2  
                                   l17948 8224                                     l18860 5AD2  
                                   l18852 5A94                                     l18844 5A2E  
                                   l18836 59AA                                     l18828 58EA  
                                   l18780 5822                                     l18772 5804  
                                   l16998 A2A2                                     l17974 95A0  
                                   l17966 9570                                     l17958 953E  
                                   l17990 60CC                                     l17982 5FA8  
                                   l18862 5ADA                                     l18854 5ABE  
                                   l18870 5B82                                     l18846 5A42  
                                   l18838 59AE                                     l18790 584E  
                                   l18782 5828                                     l18774 5818  
                                   l18766 57E2                             ___fltol@sign1 00A8  
                                   l17976 95B0                                     l17968 9580  
                                   l17992 616A                                     l17984 5FD6  
                                   l18864 5AF8                                     l18856 5AC0  
                                   l18848 5A46                                     l18792 5864  
                                   l18784 582A                                     l18776 581C  
                                   l18768 57EA                                     l17978 95B0  
                                   l17986 6002                                     l18866 5B26  
                                   l18858 5ACA                                     l18794 588A  
                                   l18786 582C                                     l18778 5820  
                                   l17988 602E                                     l18868 5B54  
                                   l18796 5890                                     l18788 5830  
                                   l18798 5894                                     _ADACT 3EFE  
                                   _ADCAP 3EF5                                     ?_main 0001  
                                   _ADCLK 3EFF                                     _ADCNT 3EEB  
                                   _ADPCH 3EF1                           __end_of___fldiv 5F2A  
                                   _ADREF 3EFD                                     STR_10 FFE4  
                                   STR_11 FFEE                                     STR_12 FFE5  
                                   STR_13 FFE3                                     _ADRPT 3EEC  
                         __end_of___flmul 4FC8                           __end_of_dbc_2nd A43E  
        SPI1_Open@spi1UniqueConfiguration 0061                           __end_of___fltol 84E8  
                         __end_of_dbc_1st A44A                      __end_of_BLUE_LED_OFF A492  
                         __end_of___lldiv 9284                                     u20000 62E6  
                                   u20001 62E2                                     u20010 631C  
                                   u20011 6318                                     u20100 0052  
                                   u20020 637C                                     u20101 004E  
                                   u20021 6378                                     u20110 0088  
                                   u20030 63B0                                     u20111 0084  
                                   u20031 63AC                                     u20200 01F2  
                                   u20120 00C6                                     u20040 63C2  
                                   u21000 1F8C                                     u20201 01EE  
                                   u20121 00C2                                     u20041 63BE  
                                   u21001 1F88                                     u20210 0254  
                                   u20130 00EC                                     u20050 63D0  
                                   u21010 1FBC                                     u20211 0250  
                                   u20131 00E8                                     u20051 63CC  
                                   u21011 1FB8                                     u20300 04D0  
                                   u20220 02F0                                     u20140 00FE  
                                   u20060 63DE                                     u21100 213E  
                                   u21020 1FCA                                     u20301 04CC  
                                   u20221 02EC                                     u20141 00FA  
                                   u20061 63DA                                     u21101 213A  
                                   u21021 1FC6                                     u20310 04EE  
                                   u20230 034C                                     u20150 010E  
                                   u20070 6408                                     u21110 21A4  
                                   u21030 1FE4                                     u20311 04EA  
                                   u20231 0348                                     u20151 010A  
                                   u20071 6404                                     u21111 21A0  
                                   u21031 1FE0                                     u20400 081C  
                                   u20320 0580                                     u20240 0394  
                                   u20160 0160                                     u20080 641E  
                                   u21200 241C                                     u21120 2214  
                                   u21040 1FF4                                     u20401 0818  
                                   u20321 057C                                     u20241 0390  
                                   u20161 015C                                     u20081 641A  
                                   u21201 2418                                     u21121 2210  
                                   u21041 1FF0                           __end_of___llmod 93A6  
                                   u20410 083C                                     u20330 05DC  
                                   u20250 03AE                                     u20170 0178  
                                   u20090 643C                                     u21130 2222  
                                   u21050 2006                                     u20411 0838  
                                   u20331 05D8                                     u20251 03AA  
                                   u20171 0174                                     u20091 6438  
                                   u21131 221E                                     u21051 2002  
                                   u20500 0C3E                                     u20420 085C  
                                   u20340 064A                                     u20260 03C0  
                                   u20180 0188                                     u21300 26FE  
                                   u21220 2526                                     u21140 2238  
                                   u21060 2032                                     u20421 0858  
                                   u20341 0646                                     u20261 03BC  
                                   u20181 0184                                     u21301 26FA  
                                   u21221 2522                                     u21141 2234  
                                   u21061 202E                                     u20510 0C72  
                                   u20430 0870                                     u20350 068C  
                                   u20270 03D6                                     u20190 01D0  
                                   u21310 271A                                     u21230 2546  
                                   u21150 2246                                     u21070 2048  
                                   u20511 0C6E                                     u20431 086C  
                                   u20351 0688                                     u20271 03D2  
                                   u20191 01CC                                     u21311 2716  
                                   u21231 2542                                     u21215 2472  
                                   u21151 2242                                     u21071 2044  
                                   u22200 A38E                                     u20520 0CDE  
                                   u20440 098E                                     u20360 06E6  
                                   u20280 0408                                     u20600 6C20  
                                   u21240 256A                                     u21160 225A  
                                   u21080 205C                                     u21400 10F6  
                                   u21320 0F14                                     u23000 5996  
                                   u22201 A388                                     u20521 0CDA  
                                   u20505 0C34                                     u20441 098A  
                                   u20361 06E2                                     u20281 0404  
                                   u20601 6C1C                                     u21241 2566  
                                   u21161 2256                                     u21081 2058  
                                   u21401 10F2                                     u21321 0F10  
                                   u23001 5992                                     u20530 0D08  
                                   u20450 09B8                                     u20290 044A  
                                   u20610 6C7A                                     u21250 2588  
                                   u21170 2268                                     u21090 206A  
                                   u21410 1180                                     u21330 0F34  
                                   u23010 59DC                                     u20531 0D04  
                                   u20451 09B4                                     u20291 0446  
                                   u20611 6C76                                     u21251 2584  
                                   u21171 2264                                     u21091 2066  
                                   u21411 117C                                     u21331 0F30  
                                   u23011 59D8                                     u20540 0D4C  
                                   u20460 09DC                                     u20380 0778  
                                   u20700 85E8                                     u20620 6CD6  
                                   u21260 25BC                                     u21180 22C2  
                                   u21500 13D0                                     u21420 119A  
                                   u21340 0F54                                     u22220 8278  
                                   u23020 5A2E                                     _LATA2 1FDD2  
                                   u20541 0D48                                     u20461 09D8  
                                   u20381 0774                                     u20701 85E2  
                                   u20621 6CD2                                     u21261 25B8  
                                   u21181 22BE                                     u21501 13CC  
                                   u21421 1196                                     u21341 0F50  
                                   u22221 8274                                     u23021 5A2A  
                                   _LATA3 1FDD3                                     u20550 0D8C  
                                   u20390 07F6                                     u20710 85EA  
                                   u20630 853A                                     u21270 25EA  
                                   u21190 23FA                                     u21510 1436  
                                   u21430 11CC                                     u21350 0FC0  
                                   u23030 5A90                                     _LATA4 1FDD4  
                                   u22215 A390                                     u20551 0D88  
                                   u20391 07F2                                     u20375 0708  
                                   u20631 8536                                     u21271 25E6  
                                   u21191 23F6                                     u21511 1432  
                                   u21431 11C8                                     u21351 0FBC  
                                   u23031 5A8C                                     _LATB3 1FDDB  
                                   u20560 0DCA                                     u20480 0A8A  
                                   u20800 86EE                                     u20720 862E  
                                   u20640 8552                                     u13600 5BCC  
                                   u21600 9D9C                                     u21280 262E  
                                   u21440 1228                                     u21360 101E  
                                   _LATC2 1FDE2                                     u20561 0DC6  
                                   u20481 0A86                                     u20721 862A  
                                   u20641 854E                                     u13601 5BC8  
                                   u21601 9D98                                     u21281 262A  
                                   u21441 1224                                     u21361 101A  
                                   u20570 0E08                                     u20490 0B10  
                                   u20730 8646                                     u20650 8560  
                                   u13610 5C10                                     u21290 2656  
                                   u21530 14A0                                     u21450 1266  
                                   u21370 1052                                     u20810 975C  
                                   u20571 0E04                                     u20491 0B0C  
                                   u20475 0A46                                     u20731 8642  
                                   u20651 855C                                     u13611 5C0C  
                                   u21531 149C                                     u21451 1262  
                                   u20811 9758                                     u20740 8654  
                                   u20660 8570                                     u13700 5DAE  
                                   u13620 5C22                                     u21700 8496  
                                   u20580 6BEC                                     u21540 14D6  
                                   u21460 12CC                                     u21380 109A  
                                   u20900 A408                                     u20820 977A  
                                   _LATC6 1FDE6                                     u20741 8650  
                                   u20661 856C                                     u13701 5DAA  
                                   u13621 5C1E                                     u21701 8492  
                                   u20581 6BE8                                     u21541 14D2  
                                   u21525 1456                                     u21461 12C8  
                                   u21381 1096                                     u20821 9776  
                                   u20750 8664                                     u20670 8588  
                                   u13710 5DCC                                     u13630 5C32  
                                   u21710 84B6                                     u20590 6C06  
                                   u21550 1524                                     u21470 134C  
                                   u21390 10BC                                     u20910 8ADC  
                                   u20830 9796                                     u20751 8660  
                                   u20671 8584                                     u13711 5DC8  
                                   u13631 5C2E                                     u21711 84B2  
                                   u20591 6C02                                     u21295 264C  
                                   u21551 1520                                     u21471 1348  
                                   u21391 10B8                                     u21375 1048  
                                   u20911 8AD8                                     u20831 9792  
                                   u17000 2D00                                     u20760 868C  
                                   u20680 85AE                                     u21640 9ADC  
                                   u13800 5F16                                     u13720 5DEC  
                                   u13640 5C72                                     u21720 84C6  
                                   u21800 7502                                     u21560 15AA  
                                   u20840 9EEC                                     u20920 8B8E  
                                   u17001 2CFC                                     u20761 8688  
                                   u20681 85AA                                     u21641 9AD8  
                                   u13801 5F12                                     u13721 5DE8  
                                   u13641 5C6E                                     u21721 84C2  
                                   u21801 74FE                                     u21561 15A6  
                                   u20841 9EE8                                     u20921 8B8A  
                                   u20770 86B2                                     u20690 85C6  
                                   u21650 9B02                                     u13730 5DFE  
                                   u13650 5CB2                                     u13810 4B94  
                                   u21810 753C                                     u21730 73BC  
                                   u20930 A110                                     u21570 168E  
                                   u21490 13A2                                     u20850 8802  
                             i2c_read@len 0061                                     u20771 86AE  
                                   u20691 85C2                                     u21651 9AFE  
                                   u13731 5DFA                                     u13651 5CAE  
                                   u13811 4B90                                     u21811 7538  
                                   u21731 73B8                                     u20931 A10C  
                                   u21571 168A                                     u21491 139E  
                                   u20851 87FE                                     u21900 A05E  
                                   u20780 86CA                                     u13740 5E2C  
                                   u13660 5D28                                     u13580 5BAA  
                                   u13900 4E56                                     u13820 4BA6  
                                   u21660 83F8                                     u21820 754A  
                                   u21740 73CA                                     u20940 82EA  
                                   u21580 1710                                     u20860 8822  
                                   u21901 A05A                                     u20781 86C6  
                                   u13741 5E28                                     u13661 5D24  
                                   u13581 5BA6                                     u13901 4E52  
                                   u13821 4BA2                                     u21661 83F4  
                                   u21821 7546                                     u21741 73C6  
                                   u20941 82E6                                     u21581 170C  
                                   u21485 137C                                     u20861 881E  
                                   u21830 772C                                     u17030 9BBC  
                                   u17110 7F58                                     u21910 8BCE  
                                   u20790 86EC                                     u13750 5E42  
                                   u13670 5D4A                                     u13590 5BBC  
                                   u13910 4E76                                     u13830 4BB6  
                                   u21670 842C                                     u21750 7426  
                                   u20950 82FC                                     u21590 9D76  
                                   u20870 883C                                     u21831 7728  
                                   u17111 7F54                                     u21911 8BCA  
                                   u20791 86E6                                     u13751 5E3E  
                                   u13671 5D46                                     u13591 5BB8  
                                   u13911 4E72                                     u13831 4BB2  
                                   u21751 7422                                     u20951 82F8  
                                   u21591 9D72                                     u20871 8838  
                                   u21840 787E                                     u17040 9BDE  
                                   u21920 8C04                                     u13760 5E56  
                                   u13680 5D74                                     u13920 4E88  
                                   u13840 4BF6                                     u21680 845A  
                                   u21760 747C                                     u20960 8312  
                                   u18000 3306                                     u21841 787A  
                                   u17041 9BDA                                     u17121 4748  
                                   u21921 8C00                                     u13761 5E52  
                                   u13681 5D70                                     u13921 4E84  
                                   u13841 4BF2                                     u21681 8456  
                                   u21761 7478                                     u20961 830E  
                                   u18001 3302                                     u17210 489E  
                                   u17130 4762                                     u17018 2D22  
                                   u21930 8C24                                     u13770 5E70  
                                   u13690 5D98                                     u13930 4EB6  
                                   u13850 4C08                                     u21690 846E  
                                   u21770 74C6                                     u20970 8326  
                                   u18010 3378                                     u20890 A406  
                                   u21850 96E2                                     u17211 489A  
                                   u17131 475E                                     u17019 2D38  
                                   u21931 8C20                                     u13771 5E6C  
                                   u13691 5D94                                     u13931 4EB2  
                                   u13851 4C04                                     u21691 846A  
                                   u21675 8422                                     u21771 74C2  
                                   u20971 8322                                     u18011 3374  
                                   u20891 A400                                     u21851 96DE  
                                   u16500 3B54                                     u17220 48B0  
                                   u17028 2D82                                     u17108 7F2A  
                                   u18100 984C                                     u21940 8C60  
                                   u13780 5EB8                                     u13940 4ECC  
                                   u13860 4C18                                     u21780 74E4  
                                   u20980 83CC                                     u18020 33B2  
                                   u16501 3B50                                     u17037 9BAA  
                                   u17221 48AC                                     u17029 2D98  
                                   u17109 7F3C                                     u18101 9848  
                                   u21941 8C5C                                     u13781 5EB4  
                                   u13941 4EC8                                     u13861 4C14  
                                   u21781 74E0                                     u20981 83C8  
                                   u18021 33AE                                     u20885 8886  
                                   u16510 3B86                                     u17230 4900  
                                   u17150 478E                                     u17070 7EC4  
                                   u18110 986A                                     u13790 5EE8  
                                   u13950 4EE0                                     u13870 4C4E  
                                   u21790 74F4                                     u18030 7CDE  
                                   u20990 1F54                                     u21870 970C  
                                   u16511 3B82                                     u17231 48FC  
                                   u17151 478A                                     u17071 7EC0  
                                   u17055 7E4E                                     u18111 9866  
                                   u13791 5EE4                                     u13951 4EDC  
                                   u13871 4C4A                                     u21791 74F0  
                                   u18031 7CDA                                     u20991 1F50  
                                   u21871 9708                                     u16408 3944  
                                   u17208 4874                                     u17400 9A8E  
                                   u17080 7EEA                                     u18120 9882  
                                   u13960 4EFA                                     u13880 4C5E  
                                   u18040 7DA4                                     u19000 8F24  
                                   u16409 3974                                     u17209 488A  
                                   u17161 47AE                                     u17145 4764  
                                   u17401 9A8A                                     u17081 7EE6  
                                   u18121 987E                                     u13961 4EF6  
                                   u13881 4C5A                                     u18041 7DA0  
                                   u19001 8F20                                     u21890 9444  
                                   u16370 9CFA                                     u16530 3BF8  
                                   u16418 3994                                     u17250 49BC  
                                   u17090 7F02                                     u17410 71FE  
                                   u13970 4F42                                     u13890 4DFC  
                                   u18050 7DEE                                     u19010 8F4A  
                                   u21891 9440                                     u16371 9CF6  
                                   u16531 3BF4                                     u16419 39AA  
                                   u17251 49B8                                     u17171 47DC  
                                   u17091 7EFE                                     u17411 71FA  
                                   u18211 18A6                                     u13971 4F3E  
                                   u18051 7DEA                                     u19011 8F46  
                                   u16380 A29C                                     u16460 3AB6  
                                   u16428 39CA                                     u17308 4AA2  
                                   u17180 47F8                                     u17340 8006  
                                   u16700 2774                                     u17068 7EA2  
                                   u17420 7258                                     u18300 1A0C  
                                   u18220 18C2                                     u18140 1786  
                                   u13980 4F70                                     u17500 A0F0  
                                   u18060 7E16                                     u19100 96C2  
                                   u19020 8F7C                                     u21868 96E8  
                                   u16381 A298                                     u16461 3AB2  
                                   u16429 39E0                                     u17309 4AB8  
                                   u17181 47F4                                     u17341 8002  
                                   u17325 7F90                                     u16701 2770  
                                   u17069 7EB4                                     u17421 7254  
                                   u18301 1A08                                     u18221 18BE  
                                   u18141 1782                                     u13981 4F6C  
                                   u17501 A0EC                                     u18061 7E10  
                                   u19101 96BE                                     u19021 8F78  
                                   u21869 96FC                                     u16390 8902  
                                   u16630 3DF2                                     u16550 3C5A  
                                   u16438 3A00                                     u17318 4B14  
                                   u17190 484A                                     u17350 802C  
                                   u16710 27A0                                     u17430 72F2  
                                   u13990 4FAA                                     u19030 90CC  
                                   u19110 69AA                                     u17510 8CD2  
                                   u18070 7E18                                     u16391 88FE  
                                   u16631 3DEE                                     u16551 3C56  
                                   u16439 3A16                                     u17319 4B2A  
                                   u17191 4846                                     u17351 8028  
                                   u17431 72EE                                     u18311 1A2C  
                                   u13991 4FA6                                     u13895 4DF2  
                                   u19031 90C8                                     u19111 69A6  
                                   u17511 8CCE                                     u16608 3D3A  
                                   u16560 3C70                                     u16528 3BAA  
                                   u16448 3A36                                     u17280 4A3E  
                                   u17248 4996                                     u17360 8044  
                                   u16800 28CE                                     u16720 27CC  
                                   u17440 7310                                     u18320 1A46  
                                   u18208 185A                                     u19040 9110  
                                   u19120 69C8                                     u17600 5278  
                                   u17520 4FFC                                     u19200 7B48  
                                   u21888 972A                                     u16641 3DFE  
                                   u16609 3D4E                                     u16561 3C6C  
                                   u16529 3BBE                                     u16449 3A4C  
                                   u17281 4A3A                                     u17249 49AA  
                                   u17361 8040                                     u16801 28CA  
                                   u16721 27C8                                     u17441 730C  
                                   u18401 1B78                                     u18321 1A42  
                                   u18241 191C                                     u18209 186E  
                                   u18161 17F8                                     u19041 910C  
                                   u19121 69C4                                     u17601 5274  
                                   u17521 4FF8                                     u19201 7B44  
                                   u21889 973E                                     u16618 3D72  
                                   u16570 3CAA                                     u16490 3B42  
                                   u16458 3A6C                                     u16650 9174  
                                   u17290 4A6A                                     u17338 7FE4  
                                   u17450 8D94                                     u18090 990A  
                                   u18410 1B9A                                     u18250 195E  
                                   u18170 1814                                     u18138 1762  
                                   u19050 912E                                     u19130 69E4  
                                   u17610 5312                                     u17530 5026  
                                   u19210 7B5A                                     u16619 3D86  
                                   u16571 3CA6                                     u16491 3B3E  
                                   u16459 3AA2                                     u17291 4A66  
                                   u17339 7FF6                                     u16731 27F4  
                                   u16715 2796                                     u17451 8D90  
                                   u18091 9906                                     u18411 1B96  
                                   u18331 1A86                                     u18251 195A  
                                   u18171 1810                                     u18139 1776  
                                   u19051 912A                                     u19131 69E0  
                                   u17531 5022                                     u19211 7B56  
                                   u16628 3DAA                                     u16548 3C28  
                                   u16660 9188                                     u17268 49DC  
                                   u17380 809A                                     u16740 2810  
                                   u17460 8DB4                                     u18420 1BAC  
                                   u18340 1AA8                                     u18260 196C  
                                   u18180 1826                                     u19060 9C66  
                                   u19140 6BB8                                     u17620 5344  
                                   u17700 3604                                     u19300 3E94  
                                   u19220 93E4                                     u22980 58EA  
                                   u16629 3DBE                                     u16549 3C3C  
                                   u16661 9184                                     u17269 49F2  
                                   u17381 8096                                     u16741 280C  
                                   u17461 8DB0                                     u18421 1BA8  
                                   u18341 1AA4                                     u18261 1968  
                                   u18181 1822                                     u19061 9C62  
                                   u19141 6BB4                                     u17621 5340  
                                   u17701 3600                                     u19301 3E90  
                                   u19221 93E0                                     u22981 58E6  
                                   u16478 3AD6                                     u16670 91BA  
                                   u17278 4A12                                     u16750 2836  
                                   u17390 9A26                                     u17470 8DFA  
                                   u18510 1D9E                                     u18430 1BBE  
                                   u18350 1ABA                                     u18238 18EA  
                                   u18190 1838                                     u18158 17BE  
                                   u19070 9F1A                                     u19230 9E3C  
                                   u17550 50D0                                     u17710 3664  
                                   u17630 3400                                     u19150 7A3C  
                                   u19310 3ECC                                     u22990 5914  
                                   u16479 3AEA                                     u17279 4A28  
                                   u16751 2832                                     u17391 9A22  
                                   u17471 8DF6                                     u18431 1BBA  
                                   u18351 1AB6                                     u18271 19C0  
                                   u18239 18FC                                     u18191 1834  
                                   u18159 17D2                                     u19071 9F16  
                                   u19231 9E38                                     u17615 5308  
                                   u17551 50CC                                     u17631 33FC  
                                   u19151 7A38                                     u19311 3EC8  
                                   u22991 5910                                     u18600 9312  
                                   u16488 3B14                                     u16680 91DC  
                                   u16920 2B6E                                     u16840 29DC  
                                   u18088 98DA                                     u17480 9998  
                                   u18360 1ACC                                     u18280 19DC  
                                   u17720 3710                                     u17640 342A  
                                   u17800 2EE6                                     u19160 7A88  
                                   u19080 9668                                     u19400 402E  
                                   u19320 3EE2                                     u19240 75A8  
                                   u18601 930E                                     u16489 3B28  
                                   u16681 91D8                                     u16657 9166  
                                   u16921 2B6A                                     u16841 29D8  
                                   u18089 98EE                                     u17481 9994  
                                   u18505 1CFC                                     u18361 1AC8  
                                   u18281 19D8                                     u17545 5098  
                                   u17721 370C                                     u17641 3426  
                                   u17801 2EE2                                     u19161 7A84  
                                   u19081 9664                                     u19401 402A  
                                   u19321 3EDE                                     u19241 75A4  
                                   u17378 806C                                     u16930 2B84  
                                   u16818 28EE                                     u17490 99D2  
                                   u18290 19F8                                     u17570 5178  
                                   u17730 37B4                                     u17810 2F18  
                                   u19170 7AC2                                     u19090 969E  
                                   u18610 97E0                                     u19410 405C  
                                   u19330 3F12                                     u19250 75F4  
                                   u17379 807E                                     u16931 2B80  
                                   u16819 2902                                     u16771 2864  
                                   u16691 2750                                     u17491 99CE  
                                   u18515 1D94                                     u18291 19F4  
                                   u17571 5174                                     u17715 365A  
                                   u17811 2F14                                     u19171 7ABE  
                                   u18611 97DC                                     u19411 4058  
                                   u19331 3F0E                                     u19251 75F0  
                         __end_of___lwdiv 97B6                                     u16588 3CCA  
                                   u16940 2BA6                                     u16908 2B12  
                                   u16828 2926                                     u16780 2880  
                                   u18460 1C56                                     u17580 51C2  
                                   u17740 37EA                                     u17660 34BC  
                                   u17900 311A                                     u17820 2F56  
                                   u19180 7AF6                                     u18620 9810  
                                   u19500 41CE                                     u19420 4072  
                                   u19340 3F24                                     u19260 7630  
                                   u16589 3CDE                                     u16677 91A8  
                                   u16941 2BA2                                     u16909 2B26  
                                   u16829 293A                                     u16781 287C  
                                   u16765 2838                                     u18525 1DC4  
                                   u18461 1C52                                     u17581 51BE  
                                   u17565 5140                                     u17741 37E6  
                                   u17661 34B8                                     u17901 3116  
                                   u17821 2F52                                     u19181 7AF2  
                                   u18621 980C                                     u19501 41CA  
                                   u19421 406E                                     u19341 3F20  
                                   u19261 762C                                     u16598 3D02  
                                   u16918 2B46                                     u16838 29B8  
                                   u16790 28BC                                     u18550 1EC4  
                                   u18534 1DE6                                     u18470 1C68  
                                   u18390 1B4C                                     u17750 A41C  
                                   u17670 34F6                                     u17910 3150  
                                   u17830 2F8C                                     u18710 5636  
                                   u18630 5410                                     u19190 7B12  
                                   u19510 41E2                                     u19430 4088  
                                   u19350 3F34                                     u19270 7688  
                                   u16599 3D16                                     u16919 2B5C  
                                   u16839 29CA                                     u16791 28B8  
                                   u18551 1EC0                                     u18535 1DE2  
                                   u18471 1C64                                     u18391 1B48  
                                   u17751 A416                                     u17735 37AA  
                                   u17671 34F2                                     u17655 3480  
                                   u17911 314C                                     u17831 2F88  
                                   u18711 5632                                     u18631 540C  
                                   u19191 7B0E                                     u19511 41DE  
                                   u19431 4084                                     u19351 3F30  
                                   u19271 7684                                     u16880 2A98  
                                   u18544 1E26                                     u18480 1C7E  
                                   u18448 1BE6                                     u17760 A41E  
                                   u19600 7936                                     u17920 3196  
                                   u17840 2FE6                                     u18800 43B6  
                                   u18720 5656                                     u18640 543E  
                                   u19520 41F2                                     u19440 409C  
                                   u19360 3F6E                                     u19280 76D2  
                                   u16881 2A94                                     u18545 1E20  
                                   u18481 1C7A                                     u18449 1BF8  
                                   u19601 7932                                     u17921 3192  
                                   u17841 2FE2                                     u18801 43B2  
                                   u18721 5652                                     u18705 55C8  
                                   u18641 543A                                     u19097 9690  
                                   u19521 41EE                                     u19441 4098  
                                   u19361 3F6A                                     u19281 76CE  
                                   u16890 2AE8                                     u16858 2A04  
                                   u18490 1C9C                                     u18458 1C2C  
                                   u18378 1AF6                                     u19610 7956  
                                   u17690 35CE                                     u17930 31C0  
                                   u17850 3028                                     u17770 2E24  
                                   u18810 43FC                                     u18730 5680  
                                   u18650 54A4                                     u19530 4246  
                                   u19450 40AE                                     u19370 3FD0  
                                   u19290 7700                                     u16891 2AE4  
                                   u16859 2A1A                                     u18491 1C98  
                                   u18459 1C40                                     u18379 1B08  
                                   u19611 7952                                     u17595 51DE  
                                   u17691 35CA                                     u17931 31BC  
                                   u17851 3024                                     u17771 2E20  
                                   u18731 567C                                     u18651 54A0  
                                   u19531 4242                                     u19451 40AA  
                                   u19371 3FCC                                     u19291 76FC  
                                   u18580 92D0                                     u16980 2CB0  
                                   u16868 2A3A                                     u19700 7CBA  
                                   u18388 1B28                                     u19620 797A  
                                   u17940 3208                                     u17860 307C  
                                   u17780 2E60                                     u18900 4604  
                                   u18820 4420                                     u18740 56D0  
                                   u18660 54C0                                     u19540 4268  
                                   u19460 40D6                                     u19380 3FE6  
                                   u16981 2CAC                                     u16869 2A50  
                                   u19701 7CB6                                     u18389 1B3C  
                                   u19621 7976                                     u17685 3592  
                                   u17941 3204                                     u17861 3078  
                                   u17781 2E5C                                     u18901 4600  
                                   u18821 441C                                     u18741 56CC  
                                   u18661 54BC                                     u19541 4264  
                                   u19461 40D2                                     u19381 3FE2  
                                   u18590 9300                                     u16958 2BC6  
                                   u16878 2A70                                     u19630 79B6  
                                   u19710 80B6                                     u17950 3222  
                                   u17870 3098                                     u17790 2E8A  
                                   u18910 4624                                     u18830 4480  
                                   u18750 5758                                     u18670 54FA  
                                   u19550 4288                                     u19470 4112  
                                   u19390 3FF8                                     u18591 92FC  
                                   u16959 2BDC                                     u16879 2A86  
                                   u19631 79B2                                     u19711 80B2  
                                   u17951 321E                                     u17871 3094  
                                   u17791 2E86                                     u18911 4620  
                                   u18815 43F2                                     u18751 5754  
                                   u18671 54F6                                     u19551 4284  
                                   u19471 410E                                     u19391 3FF4  
                                   u16968 2BFC                                     u19640 7BBA  
                                   u18568 1EEA                                     u19560 78B8  
                                   u19720 80D4                                     u17960 323E  
                                   u17880 30B2                                     u18920 4654  
                                   u18840 44B4                                     u18760 577C  
                                   u18680 5540                                     u19480 4152  
                                   u19800 66B2                                     u16969 2C12  
                                   u19641 7BB6                                     u18569 1EFE  
                                   u19561 78B4                                     u19721 80D0  
                                   u17961 323A                                     u17881 30AE  
                                   u18921 4650                                     u18841 44B0  
                                   u19481 414E                                     u19801 66AE  
                                   u18930 9206                                     u16978 2C48  
                                   u19650 7BEC                                     u18578 1F26  
                                   u19570 78EA                                     u19730 8108  
                                   u17970 3266                                     u17890 30F0  
                                   u18850 4512                                     u18770 4330  
                                   u18690 5564                                     u19490 4174  
                                   u19810 66EA                                     u18931 9202  
                                   u18587 92C2                                     u16979 2C5E  
                                   u19651 7BE8                                     u18579 1F3A  
                                   u19571 78E6                                     u19731 8104  
                                   u17971 3262                                     u17891 30EC  
                                   u18851 450E                                     u18835 4476  
                                   u18771 432C                                     u18691 5560  
                                   u19491 4170                                     u19811 66E6  
                                   u18940 9228                                     u19660 7C10  
                                   u19580 78FC                                     u19820 89F8  
                                   u19740 8144                                     u17980 32AC  
                                   u18860 4534                                     u18780 4348  
                                   u19900 686A                                     u18941 9224  
                                   u19661 7C0C                                     u19581 78F8  
                                   u19821 89F4                                     u19741 8140  
                                   u17981 32A8                                     u18861 4530  
                                   u18781 4344                                     u18765 5772  
                                   u18685 5536                                     u19901 6866  
                                   u18950 9250                                     u16998 2CDA  
                                   u19670 7C2E                                     u19590 790E  
                                   u19830 8AAC                                     u19750 8174  
                                   u17990 32C4                                     u18870 4564  
                                   u18790 437C                                     u19910 688A  
                                   u18951 924C                                     u16999 2CEE  
                                   u19671 7C2A                                     u19591 790A  
                                   u19831 8AA8                                     u19751 8170  
                                   u17991 32C0                                     u18871 4560  
                                   u18791 4378                                     u19911 6886  
                                   u19680 7C4C                                     u19760 8188  
                                   u18880 4578                                     u19920 68D2  
                                   u18960 9334                                     u19840 A036  
                                   u19681 7C48                                     u19761 8184  
                                   u18881 4574                                     u19921 68CE  
                                   u18961 9330                                     u19841 A032  
                                   u19690 7C80                                     u18890 45E8  
                                   u19930 6924                                     u19850 677C  
                                   u18970 9356                                     u19770 64E8  
                                   u19691 7C7C                                     u18891 45E4  
                                   u19931 6920                                     u19851 6778  
                                   u18971 9352                                     u19771 64E4  
                                   u19940 6986                                     u19860 67AA  
                                   u18980 9374                                     u19780 6584  
                                   i2l101 6FD2                                     u19941 6982  
                                   u19861 67A6                                     u18981 9370  
                                   u19781 6580                                     u19950 8732  
                                   u19870 67C6                                     u18990 8F14  
                                   u19790 66A2                                     u19951 872E  
                                   u19871 67C2                                     u18991 8F10  
                                   u19791 669E                                     u19960 8776  
                                   u19880 6806                                     u19961 8772  
                                   u19881 6802                                     u19970 6244  
                                   u19890 6850                                     u19971 6240  
                                   u19891 684C                                     u19980 6266  
                                   i2l125 A2EC                                     u19981 6262  
                                   u19990 62C4                                     u19991 62C0  
                                   i2l420 A354                                     i2l416 A0B6  
                                   i2l363 9EAA                                     _OSCEN 39DD  
                            vfpfcnvrt@fmt 006E                    ?_build_analog_data_msg 0068  
                                   _TRISA 3FC2                                     _TRISB 3FC3  
                                   _TRISC 3FC4                           __end_of_f_close 9DAE  
                                   _FatFs 02B6                           __end_of_chk_chr 982A  
           SD_SPI_SectorRead@sector_count 0093                                     _ExCvt FEC3  
                     ___lmul@multiplicand 0064                           __end_of_f_mount 8C82  
                              i2memcpy@d1 0001                                i2memcpy@s1 0003  
                         __end_of_dir_sdi 57E2                     _SD_SPI_AsyncReadTasks 4726  
                         __end_of_f_write 1724                            srb_pop@element 006E  
                         __end_of_get_fat 53E0                              ?_RED_LED_OFF 0001  
                ??_SD_SPI_AsyncWriteTasks 0083                           __end_of_ld_word A004  
                          txb_enqueue@msg 0076                                     _flags 0048  
                         __end_of_mem_cmp 931C                           __end_of_mem_cpy 96C4  
                         __end_of_mem_set A0F2                                     _fputc 8F02  
                           find_volume@br 0100                             find_volume@fs 0138  
                           find_volume@pt 011A                                     _width 01D7  
                                   _putch A492                                     main@x 01B4  
                                   main@y 01B6                                     main@z 01B8  
                          disk_ioctl@buff 0061                                     pclath 3FFA  
                                   pclatu 3FFB                            disk_read@count 00AE  
                                   tablat 3FF5                            disk_ioctl@pdrv 0063  
                          ?_i2c_read_reg8 0066                           __end_of_srb_pop 8BA2  
                                   plusw0 3FEB                                     plusw1 3FE3  
                                   plusw2 3FDB                           __end_of_put_fat 3904  
                           _txb_heartbeat 96C4                                     status 3FD8  
                         __end_of_st_word A1D4                           __end_of_sprintf 9F84  
                         __end_of_sync_fs 6BC4                          __end_ofi2_memcpy 9D56  
                           get_ldnumber@i 0064                             disk_write@res 00B4  
                             ?_SD_SendCmd 006B                       _get_board_unique_id A334  
                            main@sys_mode 01AE                           __initialization 990C  
                     disk_initialize@pdrv 00B4                             main@can_setup 01C5  
                     disk_initialize@stat 00B5                              __end_of_main 5B8E  
                        __end_of_i2c_init A204                          __end_of_i2c_read 86F0  
                   i2c_write_reg16@F22833 01D4          can_generate_timing_params@timing 0064  
                                  ??_main 01A6                             __activetblptr 0003  
                     get_message_type@msg 0001                         srb_init@pool_size 006B  
                            ?_SDSLOW_open 0001                        i2c_write_reg8@data 0069  
                    ?_get_board_unique_id 0001                          ?_fxls_get_whoami 0001  
                 _SD_SPI_IsWriteProtected A472                                    _ADACCH 3EE9  
                                  _ADACCL 3EE8                                    _ADACCU 3EEA  
                                  _ADACQH 3EF4                                    _ADACQL 3EF3  
                                  _ADCON0 3EF8                                    _ADCON1 3EF9  
                                  _ADCON2 3EFA                                    _ADCON3 3EFB  
                                  _ADERRH 3EE3                                    _ADERRL 3EE2  
                                  ?_fputc 0060                          ___llmod@dividend 0060  
                                  _ADLTHH 3EDF                                    _ADLTHL 3EDE  
                                  _ADRESH 3EF0                                    _ADRESL 3EEF  
                                  _ADPREH 3EF7                                    _ADPREL 3EF6  
                           SD_SendCmd@cmd 007C                                    _ADSTAT 3EFC  
                                  _ADUTHH 3EE1                                    _ADUTHL 3EE0  
                                  _ANSELA 3A40                                    ?_putch 0001  
                                  _ANSELB 3A50                                    _ANSELC 3A60  
                            i2c_read@data 0060                        SD_SPI_SectorRead@i 0099  
                                  _RB1PPS 3A09                                    _RB2PPS 3A0A  
                                  _RC1PPS 3A11                                    _RC3PPS 3A13  
                                  _RC5PPS 3A15                                    _ODCONA 3A42  
                                  _ODCONB 3A52                                    _ODCONC 3A62  
                                  i2l2223 8EB8                                    i2l2215 8F00  
                                  i2l2160 A490                                    i2l2236 9DF6  
                                  i2l2157 A48C                                    i2l2166 A484  
                                  i2l2175 A47C                                    i2l2169 A488  
                                  i2l2178 A480                                    i2l2945 9D54  
                                  _INLVLA 3A44                                    _INLVLB 3A54  
                                  _INLVLC 3A64                                    _INLVLE 3A84  
                                  i2l5570 A48A                                    i2l5572 A48E  
                                  i2l5580 A47E                                    i2l5574 A482  
                                  i2l5576 A486                                    i2l5578 A47A  
                                  i2l6650 A2C8                                    i2l6652 A2DC  
                          ?_txb_heartbeat 0001                                    _OSCFRQ 39DF  
         SD_SPI_AsyncWriteTasks@data_byte 004B                                    _RXB0D0 3F86  
                                  _RXB1D0 37F6                                    _TXB0D0 37E6  
                        __end_of_can_init 7880                                    _TRISA2 1FE12  
                                  _TRISA3 1FE13                                    _TRISC0 1FE20  
                                  _TRISA4 1FE14                                    _TRISC1 1FE21  
                                  _TRISB3 1FE1B                                    _TRISC2 1FE22  
                                  _TRISC6 1FE26                          __end_of_can_send 88EE  
                    __end_of_dir_register 87F2                          __end_of___xxtofl 755E  
                        __end_of_check_fs 7CC2                   ?_SD_SPI_MediaInitialize 0001  
      build_board_stat_msg@error_data_len 006F                            can_init@timing 0060  
 can_generate_timing_params@can_frequency 0060                          __end_of_dir_find 7706  
                       __end_of_SPI1_Open 89DC                          __end_of_dir_next 4726  
                            ?_move_window 00C8                      __end_of_create_chain 33E0  
                             i2memcpy@tmp 000B                              vfprintf@cfmt 007D  
                        __end_of_ld_clust 9430                          __end_of_ld_dword 9086  
                                  ___lmul 9978                                    ___wmul A204  
                               ??___fldiv 008F                                 ??___flmul 0076  
                               ??_dbc_2nd 0062                                 ??___fltol 00A4  
                               ??_dbc_1st 0062                                 ??___lldiv 0068  
                                  _f_open 1F40                              ?_timer0_init 0001  
                               ??___llmod 0068                                    _ioInfo 002D  
                               ??___lwdiv 0064                      __end_of_GREEN_LED_ON A486  
                                  _f_sync 6BC4                            srb_push@offset 0074  
                                  _memcpy 9CA0                                    _memset 9B7E  
                               ??_f_close 00DC                            find_volume@fmt 0137  
                                  _millis A230                                    clear_0 9936  
                                  clear_1 9948                                    clear_2 9954  
                                  clear_3 9960                            find_volume@rfs 00DC  
                               ??_chk_chr 0064                            find_volume@vol 0120  
                 SD_SendCmd@address_bytes 0078                                    isa$std 0001  
                               ??_f_mount 00EC                                 ??_dir_sdi 00F3  
                               ??_f_write 011F                                 ??_get_fat 00D9  
                    _build_board_stat_msg 82D8                              _can_send_rdy A3F4  
                               ??_ld_word 0062      SD_SPI_DelayMilliseconds@milliseconds 0063  
                   ??_get_board_unique_id 0002                           _ADCC_Initialize 9BE0  
                               ??_mem_cmp 0066                                 ??_mem_cpy 0066  
                                  fputc@c 0060                                 ??_mem_set 0066  
                          _PMD_Initialize A2EE                          __end_of_validate 81C8  
                            __pdataCOMRAM 0050                    ?_SD_SPI_AsyncReadTasks 0082  
                    __end_of_get_ldnumber 79F2                ?_SD_SPI_IsMediaInitialized 0001  
                            __mediumconst FEC2                           disk_read@sector 00AA  
                        __end_of_srb_init 9644                                    tblptrh 3FF7  
                                  tblptrl 3FF6                          __end_of_srb_push 8AC0  
                                  tblptru 3FF8                          __end_of_st_clust 9E58  
                            ?_srb_is_full 0060                            _i2c_write_reg8 A256  
                        __end_of_st_dword 953E                                 ??_srb_pop 006F  
                                  putch@c 0001                          __end_of_vfprintf 9EF8  
               ?_ADCC_GetSingleConversion 0060                                 ??_put_fat 00DD  
                               ??_st_word 0064                          __end_of_txb_init A19E  
              __end_of_get_reset_board_id 9EAC                                 ??_sprintf 0087  
                         ??_i2c_read_reg8 0069                                 ??_sync_fs 00CA  
      SD_SPI_AsyncWriteTasks@WriteTimeout 003A                              ___xxtofl@arg 006A  
                            ___xxtofl@exp 0069                         _SYSTEM_Initialize A420  
                            i2c_write@len 0061                              ___xxtofl@val 0060  
          __end_of_SD_SPI_MediaInitialize 1F40                                __accesstop 0060  
          build_board_stat_msg@error_data 006D                   __end_of__initialization 9972  
          build_board_stat_msg@error_code 006C                            get_ldnumber@tc 0066  
                          disk_write@buff 00AB                            get_ldnumber@tp 006B  
                          get_ldnumber@tt 0067                            _SPI1_ReadBlock 0000  
                          disk_write@pdrv 00B3                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 0001                                ___fltol@f1 00A0  
                      fxls_get_whoami@res 006C                             __end_of_ExCvt FF43  
                          __pcstackCOMRAM 0001                    can_msg_handler@dest_id 000F  
                  _write_timestamp_2bytes A2A2                    _write_timestamp_3bytes A12C  
                     ??_SYSTEM_Initialize 0060                        _SD_SPI_SectorWrite 7E1A  
                   i2c_write_reg8@address 0068                              txb_init@pool 006F  
                           __end_of_fputc 8FC8                         ??_SPI1_Initialize 0060  
                           __end_of_putch A494                  ?_timer0_handle_interrupt 0001  
                   ?_build_board_stat_msg 0068                    __end_of_PMD_Initialize A312  
                          _sdmmc_cmdtable FF43                     SPI1_ExchangeByte@data 0060  
                   get_offset_bytes@index 0068                       ?_SD_SPI_SectorWrite 0090  
                       __end_of_i2c_write 85EC                        _spi1_configuration FFBB  
           __end_of_SD_SPI_IsMediaPresent A47A                 ??_SD_SPI_IsWriteProtected 0060  
                  __end_of_i2c_write_reg8 A27C                                 ?i2_memcpy 0001  
                        _seen_can_message 0049         __end_of_SD_SPI_IsMediaInitialized A420  
                            ?_txb_enqueue 0076             SD_SPI_AsyncWriteTasks@command 004A  
                              _can_rcv_cb 0046                                   ??_fputc 0063  
               __end_of_SYSTEM_Initialize A432                           ??_txb_heartbeat 0075  
                                 ??_putch 0060                                __pbssBANK1 01CC  
                              __pbssBANK2 0200                __end_of_SET_ACCEL_I2C_ADDR A392  
                               ?_i2c_init 0001                                 ?_i2c_read 0060  
                            ??_RED_LED_ON 0001                            _send_status_ok 81C8  
                        _mediaInformation 0050                      ??_SD_SPI_SectorWrite 0098  
                            _BLUE_LED_OFF A48E                            _SPI1_WriteByte 0000  
                                 IVTBASEH 3FD6                                   IVTBASEL 3FD5  
                                 IVTBASEU 3FD7                          _find_volume$3100 0114  
                        _find_volume$3099 0110                    get_board_unique_id@msg 0001  
                 _buf@can_tx_buffer$F1072 01E1                    _SD_SPI_AsyncWriteTasks 272E  
                          main@buf_status 01AF                                   ?___lmul 0060  
                                 _I2C1CLK 3D7B                                   _I2C1CNT 3D6C  
                                 _I2C1ERR 3D76                                   ?___wmul 0060  
                                 _I2C1PIR 3D79                                   _I2C1RXB 3D6A  
                                 _I2C1TXB 3D6B                   __end_of_ADCC_Initialize 9C42  
                                 ?_f_open 0141                    __end_of_sdmmc_cmdtable FF93  
                                 ?_f_sync 00D3                         ??_disk_initialize 00B4  
                                 _ADFLTRH 3EE7                                   _ADFLTRL 3EE6  
                                 ?_memcpy 0060                                   ?_memset 0060  
                       ??_BLUE_LED_TOGGLE 0060                              ?_sync_window 00B5  
                          ___lmul@product 0068                                   ?_millis 0060  
                                 _ADPREVH 3EEE                                   _ADPREVL 3EED  
                 ??_build_analog_data_msg 0071                                   _ADSTPTH 3EE5  
                                 _ADSTPTL 3EE4                              ??_SPI1_Close 0060  
                         ?_PMD_Initialize 0001                                   _ANSELC0 1D300  
                                 _CLKRCLK 3CE6                                   _CLKRCON 3CE5  
                               ?_can_init 0060                                   i2l10230 A07C  
                      __end_of_RED_LED_ON A47E                                   i2l10232 A08C  
                                 i2l10236 A098                                   i2l12300 6DFC  
                                 i2l12230 9D24                                   i2l12310 6E92  
                                 i2l12302 6E1E                                   i2l10720 9E70  
                                 i2l12232 9D36                                   i2l12224 9CFC  
                                 i2l12312 6EAA                                   i2l12304 6E2C  
                                 i2l10730 A334                                   i2l10722 9E80  
                                 i2l12226 9D10                                   i2l12234 9D3A  
                                 i2l12330 6F5A                                   i2l12314 6EBC  
                                 i2l12306 6E3C                                   i2l10732 A344  
                                 i2l10724 9E96                                   i2l10716 9E58  
                                 i2l12228 9D20                                   i2l12340 6FA4  
                                 i2l12332 6F76                                   i2l12324 6EF0  
                                 i2l12316 6ED8                                   i2l12308 6E54  
                                 i2l10718 9E68                                   i2l12334 6F7A  
                                 i2l12326 6F30                                   i2l12318 6EDC  
                                 i2l10736 A34A                                   i2l12352 6FE0  
                                 i2l12344 6FB8                                   i2l12336 6F90  
                                 i2l12328 6F48                                   i2l11820 8E32  
                                 i2l12348 6FCC                                   i2l11822 8E36  
                               ?_can_send 006B                                   i2l11840 8EA6  
                                 i2l11832 8E62                                   i2l11824 8E46  
                                 i2l11834 8E72                                   i2l11826 8E46  
                                 i2l12298 6DEE                                   i2l14090 9DCC  
                                 i2l11836 8E82                                   i2l11844 8EBE  
                                 i2l11828 8E46                                   i2l14092 9DD0  
                                 i2l11838 8E92                                   i2l14094 9DE0  
                                 i2l14096 9DEE                                   i2l14088 9DBA  
                                 i2l14098 9DF2         SD_SPI_AsyncReadTasks@blockCounter 0044  
                                 i2l19190 8EDC                                   i2l19192 8EEA  
                         ?_i2c_write_reg8 0066                                 ?___xxtofl 0060  
                               ?_check_fs 00D3                                _disk_ioctl A312  
                              ??i2_memcpy 0007                 ?_SD_SPI_DelayMilliseconds 0001  
                                 _OSCCON1 39D9                                   _OSCCON3 39DB  
                          follow_path@res 0140                                _disk_write 99E4  
                                 _SPI1CLK 3D1C                                   _SPI1RXB 3D10  
                                 _SPI1TXB 3D11                SD_SPI_AsyncWriteTasks@info 0082  
                                 _OSCTUNE 39DE                                   _SLRCONA 3A43  
                                 _SLRCONB 3A53                                   _SLRCONC 3A63  
                          remove_chain@fs 010D                                 ?_dir_find 012D  
                               ?_dir_next 00FA           SD_SPI_SectorRead@sector_address 008D  
                     SD_SPI_SectorWrite@i 009C                                 ?_ld_clust 0067  
                               ?_ld_dword 0060                    __end_of_send_status_ok 82D8  
                              ??_i2c_init 0060                                ??_i2c_read 0062  
                           ?_remove_chain 00F4                                   _CurrVol 004D  
                       ??_send_status_err 0078                              ??_SD_SendCmd 0070  
                      __end_of_SPI1_Close A46A                         __end_of_dir_clear 7E1A  
                       __end_of_dir_alloc 7B62                                   __Hparam 0000  
                       __end_of_clst2sect 8D5E                                   __Lparam 0000  
                               ?_validate 0062           write_timestamp_3bytes@timestamp 0060  
                       __end_of_disk_read 9AB4                                 ?_srb_init 0067  
                            _f_write$3415 012B                                 ?_srb_push 006C  
                              f_close@res 00DE                                   ___fldiv 5B8E  
                               ?_st_clust 0064                                   ___flmul 4B78  
                                 _dbc_2nd A432                                   ___fltol 83E0  
                                 _dbc_1st A43E                                 ?_st_dword 0060  
                                 ___lldiv 91DE                                   ___llmod 931C  
                              check_fs@fs 00D3                                   ___lwdiv 9740  
                               ?_vfprintf 0079                    ??_build_board_stat_msg 0072  
                               ?_txb_init 006F                           srb_push@element 006E  
                                 _f_close 9D56                                   __pcinit 990C  
                                 _chk_chr 97B6                                   __ramtop 1000  
                            _get_fat$2577 00E1                                   _f_mount 8BA2  
                         i2c_read@address 0063              __end_of_fxls_read_accel_data 620A  
                   __end_of_GREEN_LED_OFF A48A                                   __ptext0 57E2  
                                 __ptext1 A166                                   __ptext2 95C2  
                                 __ptext3 9740                                   __ptext4 96C4  
                                 __ptext5 8AC0                                   __ptext6 A004  
                                 __ptext7 A3F4                                   __ptext8 87F2  
                                 __ptext9 A356                                   _dir_sdi 53E0  
                                 _f_write 0ED2                               validate@obj 0062  
                                 _get_fat 4FC8                               validate@res 006C  
                             validate@rfs 0064                                chk_chr@chr 0062  
                            _dir_register 86F0                                chk_chr@str 0060  
                                 _ld_word 9FC6                                   _mem_cmp 9284  
                                 _mem_cpy 9644                                ??_can_init 0064  
                   _OSCILLATOR_Initialize A3DC                                   _mem_set A0B8  
                              ??_can_send 006C                               _I2C1ERRbits 3D76  
                              ??___xxtofl 0064                                ??_check_fs 00D9  
                         find_volume@mode 00DE                           find_volume@path 00DA  
                   SD_SPI_SectorRead@info 009B                           find_volume@nrsv 0122  
                         find_volume@stat 0128                  ??_PIN_MANAGER_Initialize 0060  
                             _I2C1PIRbits 3D79                              _create_chain 2DF4  
                      __end_of_SD_SendCmd 3E0A                                   _srb_pop 8AC0  
                              ??_dir_find 00FE                build_board_stat_msg@output 0070  
                                 _put_fat 33E0                                ??_dir_next 0117  
                       __end_of_fxls_init 95C2                                   _st_word A19E  
                                 _sprintf 9F40                                   main@msg 01BA  
                                 _tx_pool 0220                                ??_ld_clust 006B  
                         i2c_read@timeout 0064                                   _sync_fs 698A  
                              ??_ld_dword 0064                      end_of_initialization 9972  
                         ?_send_status_ok 0001                              _GREEN_LED_ON A482  
                              f_open@clst 0162                                f_open@mode 0145  
                              f_open@path 0143                            ??_remove_chain 0100  
                                 memcpy@d 0067                                   memcpy@n 0064  
                                 memcpy@s 0069                                   fputc@fp 0062  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                         __end_of_spiMaster FFBB  
                         disk_status@pdrv 0060                           disk_status@stat 0061  
                               i2u1171_40 9E68                                 i2u1171_41 9E64  
                               i2u1092_40 A08C                                 i2u1172_40 9E96  
                               i2u1420_40 6DFC                                 i2u1092_41 A088  
                               i2u1172_41 9E92                                 i2u1420_41 6DF8  
                               i2u1173_40 A344                                 i2u1421_40 6E0A  
                               i2u1173_41 A340                                 i2u1421_41 6E06  
                               i2u1422_40 6E1E                                 i2u1422_41 6E1A  
                               i2u1430_45 6EFA                                 i2u1431_40 6F5A  
                               i2u1423_40 6E2C                                 i2u1431_41 6F56  
                               i2u1423_41 6E28                                 i2u1424_40 6E3C  
                               i2u1424_41 6E38                                 i2u1417_40 9D54  
                               i2u1433_40 6F90                                 i2u1432_48 6F64  
                               i2u1425_40 6E54                                 i2u1417_41 9D50  
                               i2u1433_41 6F8C                                 i2u1432_49 6F76  
                               i2u1425_41 6E50                                 i2u1434_40 6FA4  
                               i2u1434_41 6FA0                                 i2u1426_45 6E5E  
                               i2u1355_40 8E5E                                 i2u1435_40 6FB8  
                               i2u1427_40 6EBC                                 i2u1355_41 8E5A  
                               i2u1435_41 6FB4                                 i2u1427_41 6EB8  
                               i2u1356_40 8EA6                                 i2u1436_40 6FCC  
                               i2u1356_41 8EA2                                 i2u1436_41 6FC8  
                               i2u1357_40 8EB8                                 i2u1437_40 6FE0  
                               i2u1429_40 6EF0                                 i2u1428_48 6EC6  
                               i2u1357_41 8EB4                                 i2u1437_41 6FDC  
                               i2u1429_41 6EEC                                 i2u1428_49 6ED8  
                               i2u1633_40 9DCC                                 i2u1633_41 9DC8  
                               i2u1634_40 9DE0                                 i2u1634_41 9DDC  
                               i2u1635_40 9DEE                                 i2u1635_41 9DEA  
                           ??_BLUE_LED_ON 0001                           ___lldiv@divisor 0064  
                              f_mount@cfs 00EF                                f_mount@res 00EC  
                              f_mount@opt 00EB                                f_mount@vol 00F1  
                         ___lldiv@counter 006C                              _get_ldnumber 7880  
                              ??_validate 0066                         __end_of_vfpfcnvrt 6748  
                           ?_srb_is_empty 0060                                 _SPI1TCNTL 3D12  
                              ??_srb_init 006F                                   postdec1 3FE5  
                                 postdec2 3FDD                                ??_srb_push 0070  
                                 postinc0 3FEE                                   postinc1 3FE6  
                                 postinc2 3FDE                          vfpfcnvrt@convarg 0072  
                              ??_st_clust 006C                            move_window@res 00D2  
                              ??_st_dword 0066                          ?_ADCC_Initialize 0001  
                              ??_vfprintf 007D                                 _SPI1_Open 88EE  
        __end_of_ADCC_GetSingleConversion A07C                                ??_txb_init 0077  
                              dir_clear@n 00D8                                dir_alloc@n 0136  
                        remove_chain@clst 00F6                                dir_find@dp 012D  
                              dir_find@fs 012F                   ??_SD_SPI_AsyncReadTasks 0083  
                        _get_offset_bytes 9C42          SD_SPI_SectorWrite@sector_address 0090  
                              dir_sdi@csz 0100                                dir_sdi@ofs 00EF  
                        _get_message_type A07C                                dir_next@dp 00FA  
            SD_SPI_MediaInitialize@c_size 00A9                                dir_next@fs 0127  
                             ?_disk_ioctl 0060        SD_SPI_AsyncWriteTasks@blockCounter 0042  
                           i2c_write@data 0060                                f_write@btw 011B  
                           ___xxtofl@sign 0068                                f_write@res 0131  
             ??_SD_SPI_IsMediaInitialized 0060                     fxls_read_accel_data@x 00AA  
                   fxls_read_accel_data@y 00AC                     fxls_read_accel_data@z 00AE  
                             ?_disk_write 00AB                                 _TRISCbits 3FC4  
                             srb_init@ctx 0067                         ??_can_msg_handler 000B  
                              get_fat@obj 00D3                                get_fat@val 00E5  
                             ___fldiv@grs 009A                               ___fldiv@rem 0093  
                         get_ldnumber@vol 0069                           disk_write@count 00B1  
                          _FatFs@ff$F2407 01DF          build_analog_data_msg@sensor_data 006D  
                  SPI1_ExchangeBlock@data 0064                             ??_create_name 006C  
                             ___flmul@grs 007B                                ld_clust@cl 006F  
                              ld_clust@fs 0067                           _SPI1_Initialize A392  
                             srb_push@ctx 006C                   ?_write_timestamp_2bytes 0060  
                           ??_find_volume 00DF                   ?_write_timestamp_3bytes 0060  
                              ld_dword@rv 0069                             ??_disk_status 0060  
                          ??_srb_is_empty 0062              __end_of_can_handle_interrupt 6FE8  
                      _get_reset_board_id 9E58               __end_of_get_board_unique_id A356  
                              ?_SPI1_Open 0001                       __end_of_BLUE_LED_ON A48E  
                          __end_of___lmul 99E4                               vfpfcnvrt@ap 006F  
                             st_clust@dir 0066                               vfpfcnvrt@cp 0076  
                             vfpfcnvrt@fp 006D                            __end_of___wmul A230  
                         can_send@message 006B                   send_status_ok@timestamp 0191  
                          __end_of_f_open 272E                             __pidataCOMRAM A44A  
                     ?_get_reset_board_id 0005                            __end_of_f_sync 6DEE  
                               i2memcpy@d 0007                                 i2memcpy@n 0005  
                               i2memcpy@s 0009                               _ECANCONbits 3F91  
                          __end_of_memcpy 9CFC                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 9BE0                            __end_of_millis A256  
                              ld_word@ptr 0060                       start_initialization 990C  
                             st_dword@val 0062                               st_dword@ptr 0060  
                 can_msg_handler@msg_type 000D                                 _i2c_write 84E8  
               fxls_read_accel_data@x_lsb 00B3                 fxls_read_accel_data@x_msb 00B4  
               fxls_read_accel_data@y_lsb 00B5                 fxls_read_accel_data@y_msb 00B6  
               fxls_read_accel_data@z_lsb 00B7                 fxls_read_accel_data@z_msb 00B8  
                              mem_cmp@cnt 0064                                mem_cmp@dst 0060  
                              ivt0x8_base 0008                                mem_cmp@src 0062  
                             _CANSTATbits 3F8E                        can_msg_handler@msg 000A  
                              mem_cpy@cnt 0064                               put_fat@clst 00D5  
                              mem_cpy@dst 0060                      ??_get_reset_board_id 0007  
                   __end_of_i2c_read_reg8 9B1A                                mem_cpy@src 0062  
          __end_of_write_timestamp_2bytes A2C8            __end_of_write_timestamp_3bytes A166  
                         ___llmod@divisor 0064                           _disk_initialize 9EF8  
                 ?_SD_SPI_AsyncWriteTasks 0082                      _fxls_read_accel_data 5F2A  
                              mem_set@cnt 0064                                mem_set@dst 0060  
                         ___llmod@counter 0068                                mem_set@val 0062  
                         _BLUE_LED_TOGGLE A46A                 _SD_SPI_IsMediaInitialized A40A  
                    i2c_write_reg8@F22827 01DB                             ??_follow_path 0137  
                     __end_of_create_name 42B4                               vfprintf@fmt 007A  
      __end_of_can_generate_timing_params 71DC                _can_generate_timing_params 6FE8  
                        ??_PMD_Initialize 0060          __end_of_SD_SPI_DelayMilliseconds 990C  
                                ??___lmul 0068                                  ??___wmul 0064  
                      _SET_ACCEL_I2C_ADDR A374                                  ??_f_open 0146  
                                ??_f_sync 00D5                       __end_of_find_volume 0ED2  
                     __end_of_disk_status 989E                                  ??_memcpy 0066  
                        ??_i2c_write_reg8 0068                                  ??_memset 0066  
                           ??_SDFAST_open 0062                                  ??_millis 0064  
                      SD_SendCmd@response 007D                                memset@dest 0060  
                    __end_of_remove_chain 698A             __end_of_build_analog_data_msg 94B8  
                     ?_SET_ACCEL_I2C_ADDR 0001                  _ADCC_GetSingleConversion A040  
                               ___fldiv@a 008B                                 ___fldiv@b 0087  
                             __pbssBIGRAM 02B6                             _SPI1_ReadByte 0000  
                               ___flmul@a 0072                                 ___flmul@b 006E  
                             __pbssCOMRAM 002D            SD_SPI_AsyncWriteTasks@response 0087  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           ??_RED_LED_OFF 0001                     _SD_SPI_IsMediaPresent A476  
                       _SD_SPI_SectorRead 7F5C                               _BRGCON1bits 3703  
                             _BRGCON2bits 3704                               _BRGCON3bits 3705  
                              ?_i2c_write 0060                           _send_status_err 9F84  
                 __end_of_SPI1_Initialize A3AC                              check_fs@sect 00D5  
                      ?_SD_SPI_SectorRead 008D                           _SPI1_WriteBlock 0000  
                   __end_of_txb_heartbeat 9740            __end_of_SD_SPI_AsyncWriteTasks 2DF4  
                       _fxls_get_prod_rev A3C4                     ?_fxls_read_accel_data 00AA  
                    ??_SET_ACCEL_I2C_ADDR 0060                       ??_SD_SPI_SectorRead 0095  
                      ?_fxls_get_prod_rev 0001                               _BLUE_LED_ON A48A  
           build_board_stat_msg@timestamp 0068           SD_SPI_DelayMilliseconds@timeout 0064  
                   get_reset_board_id@msg 0005                          ___lwdiv@dividend 0060  
                  _PIN_MANAGER_Initialize 9B1A                         ??_fxls_get_whoami 006C  
                           __pmediumconst FEC2           ADCC_GetSingleConversion@channel 0064  
                                ?___fldiv 0087                                 __ptext100 9284  
                               __ptext101 9FC6                                 __ptext110 9B1A  
                               __ptext102 91DE                                 __ptext111 A3DC  
                               __ptext103 7706                                 __ptext120 9E58  
                               __ptext112 A374                                 __ptext104 6FE8  
                               __ptext121 A07C                                 __ptext113 9BE0  
                               __ptext105 9430                                 __ptext122 A334  
                               __ptext114 A040                                 __ptext106 A2A2  
                               __ptext123 A47A                                 __ptext115 9DAE  
                               __ptext107 A420                                 __ptext124 A47E  
                               __ptext116 A2C8                                 __ptext108 A392  
                               __ptext125 A482                                 __ptext117 6DEE  
                               __ptext109 A2EE                                 __ptext126 A486  
                               __ptext118 9CFC                                 __ptext127 A48A  
                               __ptext119 8E32                                 __ptext128 A48E  
                                ?___flmul 006E                                 _dir_clear 7CC2  
                                ?_dbc_2nd 0060                                 _dir_alloc 79F2  
                                ?___fltol 00A0                                  ?_dbc_1st 0060  
                                ?___lldiv 0060                                  ?___llmod 0060  
                                _I2C1ADB1 3D6E                       ??_fxls_get_prod_rev 006C  
                                ?___lwdiv 0060                                 _clst2sect 8C82  
                             ??_SPI1_Open 0060                                  _I2C1CON0 3D73  
                                _I2C1CON1 3D74                                  _I2C1CON2 3D75  
                ?_SD_SPI_IsWriteProtected 0001                                  ?_f_close 00DA  
                          _RED_LED_TOGGLE A46E                                 _disk_read 9A4C  
                                ?_chk_chr 0060                             follow_path@dp 0133  
                           follow_path@fs 013D                             follow_path@ns 013F  
                           _validate$3131 006A                       __end_of_follow_path 64BE  
                                ?_f_mount 00E7                                  ?_dir_sdi 00ED  
                                ?_f_write 0117                                  ?_get_fat 00D3  
                       _interrupt_handler 9DAE                             ??_SDSLOW_open 0062  
                                ?_ld_word 0060                                  ?_mem_cmp 0060  
                                ?_mem_cpy 0060                                  ?_mem_set 0060  
               __end_of_SD_SPI_SectorRead 809E                               _COMSTATbits 3F90  
                        ??_send_status_ok 0100                        ?_interrupt_handler 0001  
                                _CANRXPPS 3AED                       __end_of_SDFAST_open A45C  
                ??_SD_SPI_MediaInitialize 0082                      __end_of_srb_is_empty A040  
                                ?_srb_pop 006C                                 f_close@fp 00DA  
                               f_close@fs 00DC                      _can_handle_interrupt 6DEE  
                          i2c_init@clkdiv 0060                                  ?_put_fat 00D3  
                        ___lwdiv@quotient 0065                                  ?_st_word 0060  
                 __end_of_disk_initialize 9F40                                  ?_sprintf 007F  
                 __end_of_BLUE_LED_TOGGLE A46E                                  ?_sync_fs 00C8  
               __end_of_fxls_get_prod_rev A3DC                         find_volume@fasize 012D  
                  SET_ACCEL_I2C_ADDR@addr 0060  SD_SPI_AsyncWriteTasks@preEraseBlockCount 008C  
                              _I2C1SDAPPS 3AE4                       ??_interrupt_handler 002B  
                              _I2C1SCLPPS 3AE3                __end_of_SPI1_ExchangeBlock 91DE  
                     __end_of_RED_LED_OFF A482                   SD_SPI_SectorRead@buffer 0091  
                               _fxls_init 953E                               _create_name 3E0A  
                          ___wmul@product 0064                                  _LATAbits 3FBA  
                __end_of_get_offset_bytes 9CA0                         find_volume@szbfat 0116  
                               f_open@bcs 0156                                 f_open@ofs 015E  
                               f_open@res 0168                         find_volume@sysect 011C  
                 SD_SPI_SectorRead@result 0097                                  _PIE3bits 3993  
                                _PIE5bits 3995                  __end_of_get_message_type A0B8  
                 SD_SPI_SectorRead@status 0098            SD_SPI_SectorWrite@sector_count 0096  
                            _SPI1CON0bits 3D14                               _find_volume 001E  
                             _disk_status 982A                             ??_move_window 00CE  
                               f_mount@fs 00E7                                 f_mount@rp 00ED  
                         follow_path@path 0135                             _I2C1STAT1bits 3D78  
                                _PIR1bits 39A1                                  _PIR2bits 39A2  
                                _SPI1BAUD 3D19                                  _PIR3bits 39A3  
                                _SPI1CON0 3D14                                  _SPI1CON1 3D15  
                                _SPI1CON2 3D16                                  i2u617_40 A2DC  
                                i2u617_41 A2D8                                  _PIR5bits 39A5  
           SD_SPI_AsyncReadTasks@response 0087                fxls_read_accel_data@status 00B2  
                               _spiMaster FF93                      i2c_read_reg8@address 0069  
                           move_window@fs 00C8                                  _RXB0SIDH 3F81  
                                _RXB0SIDL 3F82                                  _RXB1SIDH 37F1  
                                _RXB1SIDL 37F2                    __end_of_RED_LED_TOGGLE A472  
                           ??_timer0_init 0060                                ?_dir_clear 00C8  
                               dir_find@c 0131                                ?_dir_alloc 012D  
                         remove_chain@obj 00F4                           remove_chain@res 010C  
                                _TXB0SIDH 37E1                                  _TXB0SIDL 37E2  
                         remove_chain@nxt 0108                                ?_clst2sect 006C  
                                _RXM0SIDH 37B8                                  _RXM0SIDL 37B9  
                               f_sync@dir 00D6                                  _RXM1SIDH 37BC  
                                _RXM1SIDL 37BD                                 f_sync@res 00D5  
                               dir_sdi@dp 00ED                                 dir_sdi@fs 0108  
                         _can_msg_handler 8E32                                ?_disk_read 00A8  
                               _vfpfcnvrt 64BE                 __end_of_interrupt_handler 9E04  
                               f_write@cc 0134                                 f_write@bw 011D  
                               f_write@fp 0117                                 f_write@fs 0140  
             SD_SPI_MediaInitialize@count 00A8               SD_SPI_MediaInitialize@index 00A6  
                               get_fat@bc 00E9                                 get_fat@fs 00EB  
                               get_fat@wc 00E3                  _SD_SPI_DelayMilliseconds 989E  
                           ?_can_send_rdy 0001                                _ADCON0bits 3EF8  
                              _ADCON1bits 3EF9                                _ADCON2bits 3EFA  
                              _ADCON3bits 3EFB                         ___wmul@multiplier 0060  
                 __end_of_send_status_err 9FC6                                srb_pop@ctx 006C  
           __end_of_SD_SPI_AsyncReadTasks 4B78                              ??_disk_ioctl 0063  
                    i2c_read_reg8@success 006A                    ?_SD_SPI_IsMediaPresent 0001  
                                i2_memcpy 9CFC                              ??_disk_write 00B3  
                           ??_srb_is_full 0062                     ?_can_handle_interrupt 0001  
                    srb_init@element_size 006D                   _timer0_handle_interrupt A2C8  
                             ??_i2c_write 0062                                st_clust@cl 0068  
                              vfpfcnvrt@c 0078                                st_clust@fs 0064  
                        ?_SPI1_Initialize 0001                               _INTCON0bits 3FD2  
                       ___lmul@multiplier 0060                       __end_of_SDSLOW_open A464  
                               copy_data0 9920                                _CANCONbits 3F8F  
                               ld_word@rv 0065                    ??_fxls_read_accel_data 00B0  
                                _i2c_init A1D4                                  _i2c_read 85EC  
                              ?_fxls_init 0001                         SD_SendCmd@address 006B  
           send_status_err@board_stat_msg 0078                                put_fat@res 00F3  
                              put_fat@val 00D9                         move_window@sector 00CA  
            send_status_ok@board_stat_msg 019B                           dir_next@stretch 00FC  
                              _ADSTATbits 3EFC                                  __Hrparam 0000  
                               memcpy@tmp 0066           __end_of_SD_SPI_IsWriteProtected A476  
                              vfprintf@ap 007C                                  __Lrparam 0000  
                              vfprintf@fp 0079          can_handle_interrupt@rcvd_msg_753 0020  
                             _follow_path 620A                        __end_of_disk_ioctl A334  
                         ?_RED_LED_TOGGLE 0001                        __end_of_disk_write 9A4C  
                       SD_SendCmd@timeout 0076                   ??_OSCILLATOR_Initialize 0060  
                              st_word@val 0062                                st_word@ptr 0060  
                              _CIOCONbits 3700                                ?_vfpfcnvrt 006D  
                          ??_can_send_rdy 0060                       __end_of_move_window 8E32  
                             _SDFAST_open A454              ??_can_generate_timing_params 0066  
                               millis@res 0064                         txb_init@pool_size 0071  
                     __end_of_timer0_init A374                                  dbc_2nd@c 0062  
                                _can_init 7706                                  _can_send 87F2  
                              sprintf@fmt 0081                                  dbc_1st@c 0062  
             _SD_SPI_MediaInitialize$6578 00A1                                  ___xxtofl 73A6  
                                _check_fs 7B62                                _T0CON0bits 3FB8  
                   SD_SendCmd@longTimeout 0072                                _T0CON1bits 3FB9  
                      send_status_ok@time 0197                        send_status_ok@text 0194  
                            _I2C1CON0bits 3D73                             ??_txb_enqueue 0078  
                                __pivt0x8 0008                           ___lwdiv@divisor 0062  
                         dir_register@res 013D                               _RED_LED_OFF A47E  
                           dir_clear@ibuf 00D0                             dir_clear@clst 00CA  
                         ___lwdiv@counter 0064                             dir_clear@sect 00D2  
                                __ptext10 81C8                                  __ptext11 9F40  
                                __ptext20 620A                                  __ptext12 9EAC  
                                __ptext21 93A6                                  __ptext13 64BE  
                                __ptext30 53E0                                  __ptext22 755E  
                                __ptext14 8F02                                  __ptext31 42B4  
                                __ptext23 3E0A                                  __ptext15 A492  
                                __ptext40 698A                                  __ptext32 7CC2  
                                __ptext24 A432                                  __ptext16 931C  
                                __ptext41 94B8                                  __ptext33 8C82  
                                __ptext25 A43E                                  __ptext17 0ED2  
                                __ptext50 9086                                  __ptext42 A0B8  
                                __ptext34 2DF4                                  __ptext26 97B6  
                                __ptext18 1F40                                  __ptext51 9C42  
                                __ptext43 A312                                  __ptext35 33E0  
                                __ptext27 86F0                                  __ptext19 6748  
                                __ptext60 83E0                                  __ptext52 A204  
                                __ptext44 9E04                                  __ptext36 4FC8  
                                __ptext28 9644                                  __ptext61 4B78  
                                __ptext53 A230                                  __ptext45 A19E  
                                __ptext37 9D56                                  __ptext29 79F2  
                                __ptext70 8BA2                                  __ptext62 5B8E  
                                __ptext54 82D8                                  __ptext46 A46A  
                                __ptext38 6BC4                                  __ptext71 001E  
                                __ptext63 953E                                  __ptext55 A12C  
                                __ptext47 9F84                                  __ptext39 809E  
                                __ptext80 9978                                  __ptext72 8FC8  
                                __ptext64 A256                                  __ptext56 A46E  
                                __ptext48 A0F2                                  __ptext81 989E  
                                __ptext73 7880                                  __ptext65 A3AC  
                                __ptext57 A1D4                                  __ptext49 89DC  
                                __ptext90 A464                                  __ptext82 7B62  
                                __ptext74 982A                                  __ptext66 A3C4  
                                __ptext58 5F2A                                  __ptext91 4726  
                                __ptext83 8D5E                                  __ptext75 A472  
                                __ptext67 9AB4                                  __ptext59 73A6  
                                __ptext92 9B7E                                  __ptext84 71DC  
                                __ptext76 A476                                  __ptext68 84E8  
                                _dir_find 755E                                  __ptext93 9138  
                                __ptext85 99E4                                  __ptext77 A40A  
                                __ptext69 85EC                                  __ptext94 3904  
                                __ptext86 7E1A                                  __ptext78 9EF8  
                                __ptext95 9CA0                                  __ptext87 272E  
                                __ptext79 1724                                  __ptext96 A27C  
                                __ptext88 9A4C                                  __ptext97 A454  
                                __ptext89 7F5C                                  __ptext98 A45C  
                                __ptext99 88EE                                  _dir_next 42B4  
                           dir_alloc@nent 012F                          ?_disk_initialize 0001  
                                _ld_clust 93A6                          ?_BLUE_LED_TOGGLE 0001  
                                _ld_dword 8FC8                            sync_window@res 00C7  
                   txb_heartbeat@msg_sent 0075                       __end_of_srb_is_full 9138  
                              sync_fs@res 00D2                              _remove_chain 6748  
                           ?_BLUE_LED_OFF 0001                          find_volume@bsect 0131  
                        find_volume@nclst 0129           write_timestamp_2bytes@timestamp 0060  
 SD_SPI_AsyncReadTasks@longTimeoutCounter 01CC                          find_volume@tsect 0124  
                                f_open@dj 0169                                  f_open@cl 015A  
                                f_open@fp 0141                                  f_open@fs 0166  
                                f_open@dw 014E                                  f_open@sc 0152  
                 __end_of_can_msg_handler 8F02                                  _validate 809E  
                                isa$xinst 0000                                  _srb_init 95C2  
                can_init@receive_callback 0062                                  f_sync@fp 00D3  
                                f_sync@fs 00D8               ?_can_generate_timing_params 0060  
              ??_ADCC_GetSingleConversion 0062                                  _srb_push 89DC  
                       fxls_init@sys_mode 006C                               ??_dir_clear 00CE  
                             ??_dir_alloc 0131                                  _st_clust 9E04  
                                _st_dword 94B8                               ??_clst2sect 0072  
                                _vfprintf 9EAC            build_analog_data_msg@sensor_id 006C  
                           ??_sync_window 00B7                                  _txb_init A166  
                             ??_disk_read 00B0            build_analog_data_msg@timestamp 0068  
             SPI1_ExchangeBlock@blockSize 0062                            _millis_counter 003E  
                             _RXB0DLCbits 3F85                          ?_send_status_err 0001  
                             _RXB1DLCbits 37F5                             _GREEN_LED_OFF A486  
                             _RXB0CONbits 3F80                 ??_timer0_handle_interrupt 0001  
                             _SDSLOW_open A45C                               _RXB1CONbits 37F0  
                                mem_cmp@d 0068                                  mem_cmp@r 006C  
                                mem_cmp@s 006A                    ??_can_handle_interrupt 0011  
                               put_fat@bc 00F1                                  mem_cpy@d 0066  
                               put_fat@fs 00D3                                  mem_cpy@s 0068  
                                mem_set@d 0066                                  memcpy@d1 0060  
                                memcpy@s1 0062                      txb_init@can_tx_ready 0075  
                           clst2sect@clst 006E                                  intlevel2 0000  
                               sprintf@ap 0087                           _fxls_get_whoami A3AC  
                          dir_register@dp 0139                            dir_register@fs 013B  
            can_handle_interrupt@rcvd_msg 0015                               ??_fxls_init 006C  
                     __end_of_txb_enqueue A12C                                _RED_LED_ON A47A  
                          ??_BLUE_LED_OFF 0001                              dir_clear@szb 00D6  
                        ___lldiv@dividend 0060                   ?_PIN_MANAGER_Initialize 0001  
                            dir_alloc@res 0138                               _TXB0DLCbits 37E5  
                           sync_window@fs 00B5      SD_SPI_AsyncReadTasks@SingleBlockRead 004C  
                             f_mount@path 00E9                               _TXB0CONbits 37E0  
                               sync_fs@fs 00C8                              ?_BLUE_LED_ON 0001  
                             _move_window 8D5E                    _SD_SPI_MediaInitialize 1724  
                            _srb_is_empty A004                                _SPI1SDIPPS 3AE1  
                              _SPI1SCKPPS 3AE0                        i2c_read_reg8@value 0067  
                     txb_init@can_send_fp 0073                               _timer0_init A356  
                           _overflow_flag 004E                               ??_vfpfcnvrt 0070  
                                put_fat@p 00EF                                _SPI1_Close A464  
                          ?_GREEN_LED_OFF 0001         SD_SPI_MediaInitialize@c_size_mult 00A5  
                           ?_dir_register 0139           SD_SPI_MediaInitialize@block_len 00A7  
                                sprintf@f 0088                                  sprintf@s 007F  
                             dir_clear@fs 00C8                               dir_alloc@dp 012D  
                             dir_alloc@fs 0134                          ___lldiv@quotient 0068  
            write_timestamp_2bytes@output 0062                       __end_of_sync_window 73A6  
                             dir_find@res 0132                         remove_chain@pclst 00FA  
                   _build_analog_data_msg 9430                          i2c_write@address 0063  
                           ?_create_chain 00F4                         i2c_read_reg8@data 006B  
                             _srb_is_full 9086                              dir_next@clst 0129  
                        _create_name$2961 006E                          _create_name$2966 0070  
                           ?_GREEN_LED_ON 0001                               clst2sect@fs 006C  
                             dir_sdi@clst 0104                __end_of_SD_SPI_SectorWrite 7F5C  
          __end_of_PIN_MANAGER_Initialize 9B7E                         ??_ADCC_Initialize 0060  
                        i2c_read_reg8@reg 0066                              ?_create_name 0068  
                    __end_of_can_send_rdy A40A                               dir_next@ofs 0123  
                            f_write@csect 0132                          i2c_write@timeout 0064  
         __end_of_timer0_handle_interrupt A2EE                         ?_get_offset_bytes 0066  
                            f_write@wbuff 012F                              _put_fat$2606 00EB  
                            _put_fat$2607 00ED                      fxls_get_prod_rev@res 006C  
                             f_write@buff 0119                               f_write@clst 013A  
                              _SD_SendCmd 3904                               f_write@sect 0136  
                            ?_find_volume 00DA                               f_write@wcnt 013E  
                           ?_get_ldnumber 0060                  SD_SPI_SectorWrite@buffer 0094  
                       ?_get_message_type 0001                              ?_disk_status 0001  
              __end_of_spi1_configuration FFCA                ??_SD_SPI_DelayMilliseconds 0061  
                        ?_can_msg_handler 000A                        ??_get_offset_bytes 006A  
                  SD_SPI_SectorWrite@info 009E  
