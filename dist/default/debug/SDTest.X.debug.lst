

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 20:58:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=3
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=3
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	text123,global,reloc=2,class=CODE,delta=1
   140                           	psect	text124,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text125,global,reloc=2,class=CODE,delta=1,inline
   142                           	psect	text126,global,reloc=2,class=CODE,delta=1,inline
   143                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   144                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   146                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   147                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   148                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   149                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   150   000000                     
   151                           ; Generated 12/10/2023 GMT
   152                           ; 
   153                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution. Publication is not required when
   167                           ;        this file is used in an embedded application.
   168                           ; 
   169                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   170                           ;        software without specific prior written permission.
   171                           ; 
   172                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   173                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   174                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   175                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   176                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   177                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   178                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   179                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   180                           ; 
   181                           ; 
   182                           ; Code-generator required, PIC18F26K83 Definitions
   183                           ; 
   184                           ; SFR Addresses
   185   000000                     
   186 ;; Function _SPI1_WriteBlock is unused but had its address taken
   187   000000                     
   188 ;; Function _SPI1_ReadBlock is unused but had its address taken
   189   000000                     
   190 ;; Function _SPI1_WriteByte is unused but had its address taken
   191   000000                     
   192 ;; Function _SPI1_ReadByte is unused but had its address taken
   193   000000                     
   194                           	psect	idataCOMRAM
   195   00A4CC                     __pidataCOMRAM:
   196                           	callstack 0
   197                           
   198                           ;initializer for _mediaInformation
   199   00A4CC  00                 	db	0
   200   00A4CD  0200               	dw	512
   201   00A4CF  00                 	db	0
   202   00A4D0  0000               	dw	0
   203   00A4D2  0000               	dw	0
   204   00A4D4  00                 	db	0
   205                           
   206                           	psect	mediumconst
   207   00FEC2                     __pmediumconst:
   208                           	callstack 0
   209   00FEC2  00                 	db	0
   210   00FEC3                     _ExCvt:
   211                           	callstack 0
   212   00FEC3  80                 	db	128
   213   00FEC4  9A                 	db	154
   214   00FEC5  45                 	db	69
   215   00FEC6  41                 	db	65
   216   00FEC7  8E                 	db	142
   217   00FEC8  41                 	db	65
   218   00FEC9  8F                 	db	143
   219   00FECA  80                 	db	128
   220   00FECB  45                 	db	69
   221   00FECC  45                 	db	69
   222   00FECD  45                 	db	69
   223   00FECE  49                 	db	73
   224   00FECF  49                 	db	73
   225   00FED0  49                 	db	73
   226   00FED1  8E                 	db	142
   227   00FED2  8F                 	db	143
   228   00FED3  90                 	db	144
   229   00FED4  92                 	db	146
   230   00FED5  92                 	db	146
   231   00FED6  4F                 	db	79
   232   00FED7  99                 	db	153
   233   00FED8  4F                 	db	79
   234   00FED9  55                 	db	85
   235   00FEDA  55                 	db	85
   236   00FEDB  59                 	db	89
   237   00FEDC  99                 	db	153
   238   00FEDD  9A                 	db	154
   239   00FEDE  9B                 	db	155
   240   00FEDF  9C                 	db	156
   241   00FEE0  9D                 	db	157
   242   00FEE1  9E                 	db	158
   243   00FEE2  9F                 	db	159
   244   00FEE3  41                 	db	65
   245   00FEE4  49                 	db	73
   246   00FEE5  4F                 	db	79
   247   00FEE6  55                 	db	85
   248   00FEE7  A5                 	db	165
   249   00FEE8  A5                 	db	165
   250   00FEE9  A6                 	db	166
   251   00FEEA  A7                 	db	167
   252   00FEEB  A8                 	db	168
   253   00FEEC  A9                 	db	169
   254   00FEED  AA                 	db	170
   255   00FEEE  AB                 	db	171
   256   00FEEF  AC                 	db	172
   257   00FEF0  AD                 	db	173
   258   00FEF1  AE                 	db	174
   259   00FEF2  AF                 	db	175
   260   00FEF3  B0                 	db	176
   261   00FEF4  B1                 	db	177
   262   00FEF5  B2                 	db	178
   263   00FEF6  B3                 	db	179
   264   00FEF7  B4                 	db	180
   265   00FEF8  B5                 	db	181
   266   00FEF9  B6                 	db	182
   267   00FEFA  B7                 	db	183
   268   00FEFB  B8                 	db	184
   269   00FEFC  B9                 	db	185
   270   00FEFD  BA                 	db	186
   271   00FEFE  BB                 	db	187
   272   00FEFF  BC                 	db	188
   273   00FF00  BD                 	db	189
   274   00FF01  BE                 	db	190
   275   00FF02  BF                 	db	191
   276   00FF03  C0                 	db	192
   277   00FF04  C1                 	db	193
   278   00FF05  C2                 	db	194
   279   00FF06  C3                 	db	195
   280   00FF07  C4                 	db	196
   281   00FF08  C5                 	db	197
   282   00FF09  C6                 	db	198
   283   00FF0A  C7                 	db	199
   284   00FF0B  C8                 	db	200
   285   00FF0C  C9                 	db	201
   286   00FF0D  CA                 	db	202
   287   00FF0E  CB                 	db	203
   288   00FF0F  CC                 	db	204
   289   00FF10  CD                 	db	205
   290   00FF11  CE                 	db	206
   291   00FF12  CF                 	db	207
   292   00FF13  D0                 	db	208
   293   00FF14  D1                 	db	209
   294   00FF15  D2                 	db	210
   295   00FF16  D3                 	db	211
   296   00FF17  D4                 	db	212
   297   00FF18  D5                 	db	213
   298   00FF19  D6                 	db	214
   299   00FF1A  D7                 	db	215
   300   00FF1B  D8                 	db	216
   301   00FF1C  D9                 	db	217
   302   00FF1D  DA                 	db	218
   303   00FF1E  DB                 	db	219
   304   00FF1F  DC                 	db	220
   305   00FF20  DD                 	db	221
   306   00FF21  DE                 	db	222
   307   00FF22  DF                 	db	223
   308   00FF23  E0                 	db	224
   309   00FF24  E1                 	db	225
   310   00FF25  E2                 	db	226
   311   00FF26  E3                 	db	227
   312   00FF27  E4                 	db	228
   313   00FF28  E5                 	db	229
   314   00FF29  E6                 	db	230
   315   00FF2A  E7                 	db	231
   316   00FF2B  E8                 	db	232
   317   00FF2C  E9                 	db	233
   318   00FF2D  EA                 	db	234
   319   00FF2E  EB                 	db	235
   320   00FF2F  EC                 	db	236
   321   00FF30  ED                 	db	237
   322   00FF31  EE                 	db	238
   323   00FF32  EF                 	db	239
   324   00FF33  F0                 	db	240
   325   00FF34  F1                 	db	241
   326   00FF35  F2                 	db	242
   327   00FF36  F3                 	db	243
   328   00FF37  F4                 	db	244
   329   00FF38  F5                 	db	245
   330   00FF39  F6                 	db	246
   331   00FF3A  F7                 	db	247
   332   00FF3B  F8                 	db	248
   333   00FF3C  F9                 	db	249
   334   00FF3D  FA                 	db	250
   335   00FF3E  FB                 	db	251
   336   00FF3F  FC                 	db	252
   337   00FF40  FD                 	db	253
   338   00FF41  FE                 	db	254
   339   00FF42  FF                 	db	255
   340   00FF43                     __end_of_ExCvt:
   341                           	callstack 0
   342   00FF43                     _sdmmc_cmdtable:
   343                           	callstack 0
   344   00FF43  00                 	db	0
   345   00FF44  95                 	db	149
   346   00FF45  00                 	db	0
   347   00FF46  00                 	db	0
   348   00FF47  01                 	db	1
   349   00FF48  F9                 	db	249
   350   00FF49  00                 	db	0
   351   00FF4A  00                 	db	0
   352   00FF4B  08                 	db	8
   353   00FF4C  87                 	db	135
   354   00FF4D  04                 	db	4
   355   00FF4E  00                 	db	0
   356   00FF4F  09                 	db	9
   357   00FF50  AF                 	db	175
   358   00FF51  00                 	db	0
   359   00FF52  01                 	db	1
   360   00FF53  0A                 	db	10
   361   00FF54  1B                 	db	27
   362   00FF55  00                 	db	0
   363   00FF56  01                 	db	1
   364   00FF57  0C                 	db	12
   365   00FF58  C3                 	db	195
   366   00FF59  01                 	db	1
   367   00FF5A  00                 	db	0
   368   00FF5B  0D                 	db	13
   369   00FF5C  AF                 	db	175
   370   00FF5D  02                 	db	2
   371   00FF5E  00                 	db	0
   372   00FF5F  10                 	db	16
   373   00FF60  FF                 	db	255
   374   00FF61  00                 	db	0
   375   00FF62  00                 	db	0
   376   00FF63  11                 	db	17
   377   00FF64  FF                 	db	255
   378   00FF65  00                 	db	0
   379   00FF66  01                 	db	1
   380   00FF67  12                 	db	18
   381   00FF68  FF                 	db	255
   382   00FF69  00                 	db	0
   383   00FF6A  01                 	db	1
   384   00FF6B  18                 	db	24
   385   00FF6C  FF                 	db	255
   386   00FF6D  00                 	db	0
   387   00FF6E  01                 	db	1
   388   00FF6F  19                 	db	25
   389   00FF70  FF                 	db	255
   390   00FF71  00                 	db	0
   391   00FF72  01                 	db	1
   392   00FF73  20                 	db	32
   393   00FF74  FF                 	db	255
   394   00FF75  00                 	db	0
   395   00FF76  00                 	db	0
   396   00FF77  21                 	db	33
   397   00FF78  FF                 	db	255
   398   00FF79  00                 	db	0
   399   00FF7A  00                 	db	0
   400   00FF7B  26                 	db	38
   401   00FF7C  DF                 	db	223
   402   00FF7D  01                 	db	1
   403   00FF7E  00                 	db	0
   404   00FF7F  37                 	db	55
   405   00FF80  73                 	db	115
   406   00FF81  00                 	db	0
   407   00FF82  00                 	db	0
   408   00FF83  3A                 	db	58
   409   00FF84  25                 	db	37
   410   00FF85  04                 	db	4
   411   00FF86  00                 	db	0
   412   00FF87  3B                 	db	59
   413   00FF88  25                 	db	37
   414   00FF89  00                 	db	0
   415   00FF8A  00                 	db	0
   416   00FF8B  29                 	db	41
   417   00FF8C  FF                 	db	255
   418   00FF8D  04                 	db	4
   419   00FF8E  00                 	db	0
   420   00FF8F  17                 	db	23
   421   00FF90  FF                 	db	255
   422   00FF91  00                 	db	0
   423   00FF92  00                 	db	0
   424   00FF93                     __end_of_sdmmc_cmdtable:
   425                           	callstack 0
   426   00FF93                     _spiMaster:
   427                           	callstack 0
   428   00FF93  E6                 	db	low _SPI1_Close
   429   00FF94  A4                 	db	high _SPI1_Close
   430   00FF95  D6                 	db	low _SDFAST_open
   431   00FF96  A4                 	db	high _SDFAST_open
   432   00FF97  FE                 	db	low _SPI1_ExchangeByte
   433   00FF98  A2                 	db	high _SPI1_ExchangeByte
   434   00FF99  8E                 	db	low _SPI1_ExchangeBlock
   435   00FF9A  91                 	db	high _SPI1_ExchangeBlock
   436   00FF9B  00                 	db	0
   437   00FF9C  00                 	db	0
   438   00FF9D  00                 	db	0
   439   00FF9E  00                 	db	0
   440   00FF9F  00                 	db	0
   441   00FFA0  00                 	db	0
   442   00FFA1  00                 	db	0
   443   00FFA2  00                 	db	0
   444   00FFA3  00                 	db	0
   445   00FFA4  00                 	db	0
   446   00FFA5  00                 	db	0
   447   00FFA6  00                 	db	0
   448   00FFA7  E6                 	db	low _SPI1_Close
   449   00FFA8  A4                 	db	high _SPI1_Close
   450   00FFA9  DE                 	db	low _SDSLOW_open
   451   00FFAA  A4                 	db	high _SDSLOW_open
   452   00FFAB  FE                 	db	low _SPI1_ExchangeByte
   453   00FFAC  A2                 	db	high _SPI1_ExchangeByte
   454   00FFAD  8E                 	db	low _SPI1_ExchangeBlock
   455   00FFAE  91                 	db	high _SPI1_ExchangeBlock
   456   00FFAF  00                 	db	0
   457   00FFB0  00                 	db	0
   458   00FFB1  00                 	db	0
   459   00FFB2  00                 	db	0
   460   00FFB3  00                 	db	0
   461   00FFB4  00                 	db	0
   462   00FFB5  00                 	db	0
   463   00FFB6  00                 	db	0
   464   00FFB7  00                 	db	0
   465   00FFB8  00                 	db	0
   466   00FFB9  00                 	db	0
   467   00FFBA  00                 	db	0
   468   00FFBB                     __end_of_spiMaster:
   469                           	callstack 0
   470   00FFBB                     _spi1_configuration:
   471                           	callstack 0
   472   00FFBB  02                 	db	2
   473   00FFBC  20                 	db	32
   474   00FFBD  00                 	db	0
   475   00FFBE  01                 	db	1
   476   00FFBF  00                 	db	0
   477   00FFC0  02                 	db	2
   478   00FFC1  20                 	db	32
   479   00FFC2  00                 	db	0
   480   00FFC3  0E                 	db	14
   481   00FFC4  00                 	db	0
   482   00FFC5  02                 	db	2
   483   00FFC6  40                 	db	64
   484   00FFC7  00                 	db	0
   485   00FFC8  00                 	db	0
   486   00FFC9  00                 	db	0
   487   00FFCA                     __end_of_spi1_configuration:
   488                           	callstack 0
   489   000000                     _OSCTUNE	set	14814
   490   000000                     _OSCFRQ	set	14815
   491   000000                     _ADERRL	set	16098
   492   000000                     _ADERRH	set	16099
   493   000000                     _ADPREVL	set	16109
   494   000000                     _ADPREVH	set	16110
   495   000000                     _ADFLTRL	set	16102
   496   000000                     _ADFLTRH	set	16103
   497   000000                     _ADACCL	set	16104
   498   000000                     _ADACCH	set	16105
   499   000000                     _ADCNT	set	16107
   500   000000                     _ADRESL	set	16111
   501   000000                     _ADRESH	set	16112
   502   000000                     _ADCON0	set	16120
   503   000000                     _ADCON1	set	16121
   504   000000                     _ADPREH	set	16119
   505   000000                     _ADPREL	set	16118
   506   000000                     _ADCAP	set	16117
   507   000000                     _ADACQH	set	16116
   508   000000                     _ADPCH	set	16113
   509   000000                     _ADRPT	set	16108
   510   000000                     _ADACCU	set	16106
   511   000000                     _ADSTPTH	set	16101
   512   000000                     _ADSTPTL	set	16100
   513   000000                     _ADUTHH	set	16097
   514   000000                     _ADUTHL	set	16096
   515   000000                     _ADLTHH	set	16095
   516   000000                     _COMSTATbits	set	16272
   517   000000                     _ECANCONbits	set	16273
   518   000000                     _PIR5	set	14757
   519   000000                     _ANSELC0	set	119552
   520   000000                     _I2C1CON0bits	set	15731
   521   000000                     _I2C1ERRbits	set	15734
   522   000000                     _I2C1PIRbits	set	15737
   523   000000                     _SPI1CON0bits	set	15636
   524   000000                     _ADCON1bits	set	16121
   525   000000                     _ADSTATbits	set	16124
   526   000000                     _ADCON2bits	set	16122
   527   000000                     _ADCON3bits	set	16123
   528   000000                     _ADCON0bits	set	16120
   529   000000                     _TRISCbits	set	16324
   530   000000                     _LATA	set	16314
   531   000000                     _TRISC2	set	130594
   532   000000                     _TRISA4	set	130580
   533   000000                     _TRISA3	set	130579
   534   000000                     _TRISA2	set	130578
   535   000000                     _LATB3	set	130523
   536   000000                     _TRISB3	set	130587
   537   000000                     _LATC6	set	130534
   538   000000                     _TRISC6	set	130598
   539   000000                     _TRISC0	set	130592
   540   000000                     _TRISC1	set	130593
   541   000000                     _LATC2	set	130530
   542   000000                     _LATA4	set	130516
   543   000000                     _LATA3	set	130515
   544   000000                     _LATA2	set	130514
   545   000000                     _BRGCON1bits	set	14083
   546   000000                     _CIOCONbits	set	14080
   547   000000                     _CANSTATbits	set	16270
   548   000000                     _CANCONbits	set	16271
   549   000000                     _T0CON0bits	set	16312
   550   000000                     _INTCON0bits	set	16338
   551   000000                     _RXM0SIDH	set	14264
   552   000000                     _BRGCON3bits	set	14085
   553   000000                     _BRGCON2bits	set	14084
   554   000000                     _RXM1SIDH	set	14268
   555   000000                     _RXM0SIDL	set	14265
   556   000000                     _TXB0CONbits	set	14304
   557   000000                     _PIE5bits	set	14741
   558   000000                     _RXB0CONbits	set	16256
   559   000000                     _RXM1SIDL	set	14269
   560   000000                     _RXB0DLCbits	set	16261
   561   000000                     _RXB0SIDL	set	16258
   562   000000                     _RXB0SIDH	set	16257
   563   000000                     _PIR1bits	set	14753
   564   000000                     _PIR5bits	set	14757
   565   000000                     _TXB0DLCbits	set	14309
   566   000000                     _TXB0SIDL	set	14306
   567   000000                     _TXB0SIDH	set	14305
   568   000000                     _RXB1CONbits	set	14320
   569   000000                     _RXB1SIDH	set	14321
   570   000000                     _TXB0D0	set	14310
   571   000000                     _PMD0	set	14784
   572   000000                     _OSCCON1	set	14809
   573   000000                     _ADLTHL	set	16094
   574   000000                     _RXB0D0	set	16262
   575   000000                     _RXB1DLCbits	set	14325
   576   000000                     _RXB1SIDL	set	14322
   577   000000                     _PIE3bits	set	14739
   578   000000                     _RXB1D0	set	14326
   579   000000                     _TRISA	set	16322
   580   000000                     _LATC	set	16316
   581   000000                     _LATB	set	16315
   582   000000                     _LATAbits	set	16314
   583   000000                     _T0CON1bits	set	16313
   584   000000                     _ADACQL	set	16115
   585   000000                     _ADCLK	set	16127
   586   000000                     _ADACT	set	16126
   587   000000                     _ADREF	set	16125
   588   000000                     _ADSTAT	set	16124
   589   000000                     _ADCON3	set	16123
   590   000000                     _ADCON2	set	16122
   591   000000                     _PIR3bits	set	14755
   592   000000                     _PIR2bits	set	14754
   593   000000                     _OSCCON3	set	14811
   594   000000                     _OSCEN	set	14813
   595   000000                     _RB1PPS	set	14857
   596   000000                     _RB2PPS	set	14858
   597   000000                     _RC1PPS	set	14865
   598   000000                     _RC3PPS	set	14867
   599   000000                     _ANSELA	set	14912
   600   000000                     _ANSELB	set	14928
   601   000000                     _ANSELC	set	14944
   602   000000                     _PMD7	set	14791
   603   000000                     _PMD6	set	14790
   604   000000                     _PMD5	set	14789
   605   000000                     _PMD4	set	14788
   606   000000                     _PMD3	set	14787
   607   000000                     _PMD2	set	14786
   608   000000                     _PMD1	set	14785
   609   000000                     _TRISC	set	16324
   610   000000                     _TRISB	set	16323
   611   000000                     _INLVLC	set	14948
   612   000000                     _SLRCONC	set	14947
   613   000000                     _ODCONC	set	14946
   614   000000                     _WPUC	set	14945
   615   000000                     _WPUE	set	14977
   616   000000                     _INLVLB	set	14932
   617   000000                     _SLRCONB	set	14931
   618   000000                     _ODCONB	set	14930
   619   000000                     _WPUB	set	14929
   620   000000                     _INLVLA	set	14916
   621   000000                     _SLRCONA	set	14915
   622   000000                     _ODCONA	set	14914
   623   000000                     _WPUA	set	14913
   624   000000                     _INLVLE	set	14980
   625   000000                     _SPI1SCKPPS	set	15072
   626   000000                     _I2C1SCLPPS	set	15075
   627   000000                     _I2C1SDAPPS	set	15076
   628   000000                     _CANRXPPS	set	15085
   629   000000                     _CLKRCON	set	15589
   630   000000                     _SPI1RXB	set	15632
   631   000000                     _SPI1TXB	set	15633
   632   000000                     _SPI1TCNTL	set	15634
   633   000000                     _SPI1CON0	set	15636
   634   000000                     _SPI1SDIPPS	set	15073
   635   000000                     _RC5PPS	set	14869
   636   000000                     _SPI1BAUD	set	15641
   637   000000                     _SPI1CLK	set	15644
   638   000000                     _SPI1CON2	set	15638
   639   000000                     _SPI1CON1	set	15637
   640   000000                     _I2C1RXB	set	15722
   641   000000                     _I2C1TXB	set	15723
   642   000000                     _I2C1CNT	set	15724
   643   000000                     _I2C1ADB1	set	15726
   644   000000                     _I2C1CON0	set	15731
   645   000000                     _I2C1STAT1bits	set	15736
   646   000000                     _I2C1ERR	set	15734
   647   000000                     _I2C1PIR	set	15737
   648   000000                     _I2C1CLK	set	15739
   649   000000                     _I2C1CON2	set	15733
   650   000000                     _I2C1CON1	set	15732
   651   000000                     _CLKRCLK	set	15590
   652   00FFCA                     STR_1:
   653   00FFCA  22                 	db	34
   654   00FFCB  2A                 	db	42
   655   00FFCC  2B                 	db	43
   656   00FFCD  2C                 	db	44
   657   00FFCE  3A                 	db	58	;':'
   658   00FFCF  3B                 	db	59	;';'
   659   00FFD0  3C                 	db	60	;'<'
   660   00FFD1  3D                 	db	61	;'='
   661   00FFD2  3E                 	db	62	;'>'
   662   00FFD3  3F                 	db	63	;'?'
   663   00FFD4  5B                 	db	91	;'['
   664   00FFD5  5D                 	db	93	;']'
   665   00FFD6  7C                 	db	124
   666   00FFD7  7F                 	db	127
   667   00FFD8  00                 	db	0
   668   00FFD9                     STR_9:
   669   00FFD9  42                 	db	66	;'B'
   670   00FFDA  45                 	db	69	;'E'
   671   00FFDB  47                 	db	71	;'G'
   672   00FFDC  49                 	db	73	;'I'
   673   00FFDD  4E                 	db	78	;'N'
   674   00FFDE  20                 	db	32
   675   00FFDF  4C                 	db	76	;'L'
   676   00FFE0  4F                 	db	79	;'O'
   677   00FFE1  47                 	db	71	;'G'
   678   00FFE2  0D                 	db	13
   679   00FFE3  0A                 	db	10
   680   00FFE4  00                 	db	0
   681   00FFE5                     STR_8:
   682   00FFE5  44                 	db	68	;'D'
   683   00FFE6  61                 	db	97	;'a'
   684   00FFE7  74                 	db	116	;'t'
   685   00FFE8  61                 	db	97	;'a'
   686   00FFE9  2E                 	db	46
   687   00FFEA  74                 	db	116	;'t'
   688   00FFEB  78                 	db	120	;'x'
   689   00FFEC  74                 	db	116	;'t'
   690   00FFED  00                 	db	0
   691   00FFEE                     STR_11:
   692   00FFEE  25                 	db	37
   693   00FFEF  6C                 	db	108	;'l'
   694   00FFF0  75                 	db	117	;'u'
   695   00FFF1  64                 	db	100	;'d'
   696   00FFF2  0D                 	db	13
   697   00FFF3  0A                 	db	10
   698   00FFF4  00                 	db	0
   699   00FFF5                     STR_5:
   700   00FFF5  46                 	db	70	;'F'
   701   00FFF6  41                 	db	65	;'A'
   702   00FFF7  54                 	db	84	;'T'
   703   00FFF8  33                 	db	51	;'3'
   704   00FFF9  32                 	db	50	;'2'
   705   00FFFA  00                 	db	0
   706   00FFFB                     STR_3:
   707   00FFFB  46                 	db	70	;'F'
   708   00FFFC  41                 	db	65	;'A'
   709   00FFFD  54                 	db	84	;'T'
   710   00FFFE  00                 	db	0
   711   00FFFF  00                 	db	0	; dummy byte at the end
   712   000000                     
   713                           ; #config settings
   714                           
   715                           	psect	cinit
   716   009962                     __pcinit:
   717                           	callstack 0
   718   009962                     start_initialization:
   719                           	callstack 0
   720   009962                     __initialization:
   721                           	callstack 0
   722                           
   723                           ; Initialize objects allocated to COMRAM (9 bytes)
   724                           ; load TBLPTR registers with __pidataCOMRAM
   725   009962  0ECC               	movlw	low __pidataCOMRAM
   726   009964  6EF6               	movwf	tblptrl,c
   727   009966  0EA4               	movlw	high __pidataCOMRAM
   728   009968  6EF7               	movwf	tblptrh,c
   729   00996A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   730   00996C  6EF8               	movwf	tblptru,c
   731   00996E  EE00  F050         	lfsr	0,__pdataCOMRAM
   732   009972  EE10 F009          	lfsr	1,9
   733   009976                     copy_data0:
   734   009976  0009               	tblrd		*+
   735   009978  006F FFD7 FFEE     	movff	tablat,postinc0
   736   00997E  50E5               	movf	postdec1,w,c
   737   009980  50E1               	movf	fsr1l,w,c
   738   009982  E1F9               	bnz	copy_data0
   739                           
   740                           ; Clear objects allocated to BIGRAM (1109 bytes)
   741   009984  EE00  F2B6         	lfsr	0,__pbssBIGRAM
   742   009988  EE11 F055          	lfsr	1,1109
   743   00998C                     clear_0:
   744   00998C  6AEE               	clrf	postinc0,c
   745   00998E  50E5               	movf	postdec1,w,c
   746   009990  50E1               	movf	fsr1l,w,c
   747   009992  E1FC               	bnz	clear_0
   748   009994  50E2               	movf	fsr1h,w,c
   749   009996  E1FA               	bnz	clear_0
   750                           
   751                           ; Clear objects allocated to BANK2 (182 bytes)
   752   009998  EE00  F200         	lfsr	0,__pbssBANK2
   753   00999C  0EB6               	movlw	182
   754   00999E                     clear_1:
   755   00999E  6AEE               	clrf	postinc0,c
   756   0099A0  06E8               	decf	wreg,f,c
   757   0099A2  E1FD               	bnz	clear_1
   758                           
   759                           ; Clear objects allocated to BANK1 (43 bytes)
   760   0099A4  EE00  F1CF         	lfsr	0,__pbssBANK1
   761   0099A8  0E2B               	movlw	43
   762   0099AA                     clear_2:
   763   0099AA  6AEE               	clrf	postinc0,c
   764   0099AC  06E8               	decf	wreg,f,c
   765   0099AE  E1FD               	bnz	clear_2
   766                           
   767                           ; Clear objects allocated to COMRAM (35 bytes)
   768   0099B0  EE00  F02D         	lfsr	0,__pbssCOMRAM
   769   0099B4  0E23               	movlw	35
   770   0099B6                     clear_3:
   771   0099B6  6AEE               	clrf	postinc0,c
   772   0099B8  06E8               	decf	wreg,f,c
   773   0099BA  E1FD               	bnz	clear_3
   774                           
   775                           ;
   776                           ; Setup IVTBASE
   777                           ;
   778   0099BC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   779   0099BE  6ED5               	movwf	213,c
   780   0099C0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   781   0099C2  6ED6               	movwf	214,c
   782   0099C4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   783   0099C6  6ED7               	movwf	215,c
   784   0099C8                     end_of_initialization:
   785                           	callstack 0
   786   0099C8                     __end_of__initialization:
   787                           	callstack 0
   788   0099C8  0100               	movlb	0
   789   0099CA  EFF0  F029         	goto	_main	;jump to C main() function
   790                           
   791                           	psect	bssCOMRAM
   792   00002D                     __pbssCOMRAM:
   793                           	callstack 0
   794   00002D                     _ioInfo:
   795                           	callstack 0
   796   00002D                     	ds	13
   797   00003A                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   798                           	callstack 0
   799   00003A                     	ds	4
   800   00003E                     _millis_counter:
   801                           	callstack 0
   802   00003E                     	ds	4
   803   000042                     SD_SPI_AsyncWriteTasks@blockCounter:
   804                           	callstack 0
   805   000042                     	ds	2
   806   000044                     SD_SPI_AsyncReadTasks@blockCounter:
   807                           	callstack 0
   808   000044                     	ds	2
   809   000046                     _can_rcv_cb:
   810                           	callstack 0
   811   000046                     	ds	2
   812   000048                     _flags:
   813                           	callstack 0
   814   000048                     	ds	1
   815   000049                     _seen_can_message:
   816                           	callstack 0
   817   000049                     	ds	1
   818   00004A                     SD_SPI_AsyncWriteTasks@command:
   819                           	callstack 0
   820   00004A                     	ds	1
   821   00004B                     SD_SPI_AsyncWriteTasks@data_byte:
   822                           	callstack 0
   823   00004B                     	ds	1
   824   00004C                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   825                           	callstack 0
   826   00004C                     	ds	1
   827   00004D                     _CurrVol:
   828                           	callstack 0
   829   00004D                     	ds	1
   830   00004E                     _overflow_flag:
   831                           	callstack 0
   832   00004E                     	ds	1
   833   00004F                     timer0_handle_interrupt@internal_count:
   834                           	callstack 0
   835   00004F                     	ds	1
   836                           
   837                           	psect	dataCOMRAM
   838   000050                     __pdataCOMRAM:
   839                           	callstack 0
   840   000050                     _mediaInformation:
   841                           	callstack 0
   842   000050                     	ds	9
   843                           
   844                           	psect	bssBANK1
   845   0001CF                     __pbssBANK1:
   846                           	callstack 0
   847   0001CF                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   848                           	callstack 0
   849   0001CF                     	ds	4
   850   0001D3                     _ctx:
   851                           	callstack 0
   852   0001D3                     	ds	4
   853   0001D7                     	ds	3
   854   0001DA                     _width:
   855                           	callstack 0
   856   0001DA                     	ds	2
   857   0001DC                     _prec:
   858                           	callstack 0
   859   0001DC                     	ds	2
   860   0001DE                     	ds	2
   861   0001E0                     _Fsid:
   862                           	callstack 0
   863   0001E0                     	ds	2
   864   0001E2                     _FatFs@ff$F2407:
   865                           	callstack 0
   866   0001E2                     	ds	2
   867   0001E4                     _buf@can_tx_buffer$F1072:
   868                           	callstack 0
   869   0001E4                     	ds	10
   870   0001EE                     _buf:
   871                           	callstack 0
   872   0001EE                     	ds	10
   873   0001F8                     _bw:
   874                           	callstack 0
   875   0001F8                     	ds	2
   876                           
   877                           	psect	bssBANK2
   878   000200                     __pbssBANK2:
   879                           	callstack 0
   880   000200                     _dbuf:
   881                           	callstack 0
   882   000200                     	ds	32
   883   000220                     _tx_pool:
   884                           	callstack 0
   885   000220                     	ds	150
   886                           
   887                           	psect	bssBIGRAM
   888   0002B6                     __pbssBIGRAM:
   889                           	callstack 0
   890   0002B6                     _FatFs:
   891                           	callstack 0
   892   0002B6                     	ds	563
   893   0004E9                     _Fil:
   894                           	callstack 0
   895   0004E9                     	ds	546
   896                           
   897                           	psect	cstackBANK1
   898   000100                     __pcstackBANK1:
   899                           	callstack 0
   900   000100                     ??_remove_chain:
   901   000100                     ??_create_chain:
   902   000100                     dir_sdi@csz:
   903                           	callstack 0
   904   000100                     find_volume@br:
   905                           	callstack 0
   906                           
   907                           ; 16 bytes @ 0x0
   908   000100                     	ds	4
   909   000104                     dir_sdi@clst:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x4
   913   000104                     	ds	4
   914   000108                     create_chain@res:
   915                           	callstack 0
   916   000108                     dir_sdi@fs:
   917                           	callstack 0
   918   000108                     remove_chain@nxt:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x8
   922   000108                     	ds	1
   923   000109                     create_chain@scl:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x9
   927   000109                     	ds	3
   928   00010C                     remove_chain@res:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0xC
   932   00010C                     	ds	1
   933   00010D                     remove_chain@fs:
   934                           	callstack 0
   935   00010D                     create_chain@ncl:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0xD
   939   00010D                     	ds	3
   940   000110                     _find_volume$3099:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x10
   944   000110                     	ds	1
   945   000111                     create_chain@fs:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x11
   949   000111                     	ds	2
   950   000113                     create_chain@cs:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x13
   954   000113                     	ds	1
   955   000114                     _find_volume$3100:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x14
   959   000114                     	ds	2
   960   000116                     find_volume@szbfat:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x16
   964   000116                     	ds	1
   965   000117                     ??_dir_next:
   966   000117                     f_write@fp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x17
   970   000117                     	ds	2
   971   000119                     f_write@buff:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x19
   975   000119                     	ds	1
   976   00011A                     find_volume@pt:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x1A
   980   00011A                     	ds	1
   981   00011B                     f_write@btw:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1B
   985   00011B                     	ds	1
   986   00011C                     find_volume@sysect:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x1C
   990   00011C                     	ds	1
   991   00011D                     f_write@bw:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x1D
   995   00011D                     	ds	2
   996   00011F                     ??_f_write:
   997                           
   998                           ; 1 bytes @ 0x1F
   999   00011F                     	ds	1
  1000   000120                     find_volume@vol:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x20
  1004   000120                     	ds	2
  1005   000122                     find_volume@nrsv:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x22
  1009   000122                     	ds	1
  1010   000123                     dir_next@ofs:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x23
  1014   000123                     	ds	1
  1015   000124                     find_volume@tsect:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x24
  1019   000124                     	ds	3
  1020   000127                     dir_next@fs:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x27
  1024   000127                     	ds	1
  1025   000128                     find_volume@stat:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x28
  1029   000128                     	ds	1
  1030   000129                     dir_next@clst:
  1031                           	callstack 0
  1032   000129                     find_volume@nclst:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x29
  1036   000129                     	ds	2
  1037   00012B                     _f_write$3415:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x2B
  1041   00012B                     	ds	2
  1042   00012D                     dir_alloc@dp:
  1043                           	callstack 0
  1044   00012D                     dir_find@dp:
  1045                           	callstack 0
  1046   00012D                     find_volume@fasize:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x2D
  1050   00012D                     	ds	2
  1051   00012F                     dir_alloc@nent:
  1052                           	callstack 0
  1053   00012F                     dir_find@fs:
  1054                           	callstack 0
  1055   00012F                     f_write@wbuff:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x2F
  1059   00012F                     	ds	2
  1060   000131                     ??_dir_alloc:
  1061   000131                     dir_find@c:
  1062                           	callstack 0
  1063   000131                     f_write@res:
  1064                           	callstack 0
  1065   000131                     find_volume@bsect:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x31
  1069   000131                     	ds	1
  1070   000132                     dir_find@res:
  1071                           	callstack 0
  1072   000132                     f_write@csect:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x32
  1076   000132                     	ds	1
  1077   000133                     follow_path@dp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x33
  1081   000133                     	ds	1
  1082   000134                     dir_alloc@fs:
  1083                           	callstack 0
  1084   000134                     f_write@cc:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x34
  1088   000134                     	ds	1
  1089   000135                     follow_path@path:
  1090                           	callstack 0
  1091   000135                     find_volume@i:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x35
  1095   000135                     	ds	1
  1096   000136                     dir_alloc@n:
  1097                           	callstack 0
  1098   000136                     f_write@sect:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x36
  1102   000136                     	ds	1
  1103   000137                     ??_follow_path:
  1104   000137                     find_volume@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x37
  1108   000137                     	ds	1
  1109   000138                     dir_alloc@res:
  1110                           	callstack 0
  1111   000138                     find_volume@fs:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x38
  1115   000138                     	ds	1
  1116   000139                     dir_register@dp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x39
  1120   000139                     	ds	1
  1121   00013A                     f_write@clst:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x3A
  1125   00013A                     	ds	1
  1126   00013B                     dir_register@fs:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x3B
  1130   00013B                     	ds	2
  1131   00013D                     dir_register@res:
  1132                           	callstack 0
  1133   00013D                     follow_path@fs:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x3D
  1137   00013D                     	ds	1
  1138   00013E                     f_write@wcnt:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x3E
  1142   00013E                     	ds	1
  1143   00013F                     follow_path@ns:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x3F
  1147   00013F                     	ds	1
  1148   000140                     follow_path@res:
  1149                           	callstack 0
  1150   000140                     f_write@fs:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x40
  1154   000140                     	ds	1
  1155   000141                     f_open@fp:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x41
  1159   000141                     	ds	2
  1160   000143                     f_open@path:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x43
  1164   000143                     	ds	2
  1165   000145                     f_open@mode:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x45
  1169   000145                     	ds	1
  1170   000146                     ??_f_open:
  1171                           
  1172                           ; 1 bytes @ 0x46
  1173   000146                     	ds	8
  1174   00014E                     f_open@dw:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x4E
  1178   00014E                     	ds	4
  1179   000152                     f_open@sc:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x52
  1183   000152                     	ds	4
  1184   000156                     f_open@bcs:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x56
  1188   000156                     	ds	4
  1189   00015A                     f_open@cl:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x5A
  1193   00015A                     	ds	4
  1194   00015E                     f_open@ofs:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x5E
  1198   00015E                     	ds	4
  1199   000162                     f_open@clst:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x62
  1203   000162                     	ds	4
  1204   000166                     f_open@fs:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x66
  1208   000166                     	ds	2
  1209   000168                     f_open@res:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x68
  1213   000168                     	ds	1
  1214   000169                     f_open@dj:
  1215                           	callstack 0
  1216                           
  1217                           ; 40 bytes @ 0x69
  1218   000169                     	ds	40
  1219   000191                     send_status_ok@timestamp:
  1220                           	callstack 0
  1221                           
  1222                           ; 3 bytes @ 0x91
  1223   000191                     	ds	3
  1224   000194                     send_status_ok@text:
  1225                           	callstack 0
  1226                           
  1227                           ; 3 bytes @ 0x94
  1228   000194                     	ds	3
  1229   000197                     send_status_ok@time:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x97
  1233   000197                     	ds	4
  1234   00019B                     send_status_ok@board_stat_msg:
  1235                           	callstack 0
  1236                           
  1237                           ; 11 bytes @ 0x9B
  1238   00019B                     	ds	11
  1239   0001A6                     ??_main:
  1240                           
  1241                           ; 1 bytes @ 0xA6
  1242   0001A6                     	ds	4
  1243   0001AA                     main@last_accel_millis:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0xAA
  1247   0001AA                     	ds	4
  1248   0001AE                     main@sys_mode:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0xAE
  1252   0001AE                     	ds	1
  1253   0001AF                     main@buf_status:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0xAF
  1257   0001AF                     	ds	1
  1258   0001B0                     main@status:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0xB0
  1262   0001B0                     	ds	1
  1263   0001B1                     main@who:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0xB1
  1267   0001B1                     	ds	1
  1268   0001B2                     main@rev:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0xB2
  1272   0001B2                     	ds	1
  1273   0001B3                     main@last_status_millis:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0xB3
  1277   0001B3                     	ds	4
  1278   0001B7                     main@x:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0xB7
  1282   0001B7                     	ds	2
  1283   0001B9                     main@y:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0xB9
  1287   0001B9                     	ds	2
  1288   0001BB                     main@z:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0xBB
  1292   0001BB                     	ds	2
  1293   0001BD                     main@msg:
  1294                           	callstack 0
  1295                           
  1296                           ; 11 bytes @ 0xBD
  1297   0001BD                     	ds	11
  1298   0001C8                     main@can_setup:
  1299                           	callstack 0
  1300                           
  1301                           ; 7 bytes @ 0xC8
  1302   0001C8                     	ds	7
  1303                           
  1304                           	psect	cstackBANK0
  1305   000060                     __pcstackBANK0:
  1306                           	callstack 0
  1307   000060                     ??_SPI1_Open:
  1308   000060                     ?_ADCC_GetSingleConversion:
  1309                           	callstack 0
  1310   000060                     ?_ld_word:
  1311                           	callstack 0
  1312   000060                     ?_mem_cmp:
  1313                           	callstack 0
  1314   000060                     ?_chk_chr:
  1315                           	callstack 0
  1316   000060                     ?_dbc_1st:
  1317                           	callstack 0
  1318   000060                     ?_dbc_2nd:
  1319                           	callstack 0
  1320   000060                     ?_get_ldnumber:
  1321                           	callstack 0
  1322   000060                     ?___wmul:
  1323                           	callstack 0
  1324   000060                     ?___lwdiv:
  1325                           	callstack 0
  1326   000060                     ?_millis:
  1327                           	callstack 0
  1328   000060                     ?_ld_dword:
  1329                           	callstack 0
  1330   000060                     ?___lmul:
  1331                           	callstack 0
  1332   000060                     ?___lldiv:
  1333                           	callstack 0
  1334   000060                     ?___llmod:
  1335                           	callstack 0
  1336   000060                     ?___xxtofl:
  1337                           	callstack 0
  1338   000060                     disk_status@pdrv:
  1339                           	callstack 0
  1340   000060                     disk_ioctl@cmd:
  1341                           	callstack 0
  1342   000060                     SPI1_ExchangeByte@data:
  1343                           	callstack 0
  1344   000060                     i2c_init@clkdiv:
  1345                           	callstack 0
  1346   000060                     i2c_write@data:
  1347                           	callstack 0
  1348   000060                     i2c_read@data:
  1349                           	callstack 0
  1350   000060                     SET_ACCEL_I2C_ADDR@addr:
  1351                           	callstack 0
  1352   000060                     can_init@timing:
  1353                           	callstack 0
  1354   000060                     srb_is_full@ctx:
  1355                           	callstack 0
  1356   000060                     srb_is_empty@ctx:
  1357                           	callstack 0
  1358   000060                     write_timestamp_2bytes@timestamp:
  1359                           	callstack 0
  1360   000060                     ld_word@ptr:
  1361                           	callstack 0
  1362   000060                     ld_dword@ptr:
  1363                           	callstack 0
  1364   000060                     st_word@ptr:
  1365                           	callstack 0
  1366   000060                     st_dword@ptr:
  1367                           	callstack 0
  1368   000060                     mem_cpy@dst:
  1369                           	callstack 0
  1370   000060                     mem_set@dst:
  1371                           	callstack 0
  1372   000060                     mem_cmp@dst:
  1373                           	callstack 0
  1374   000060                     chk_chr@str:
  1375                           	callstack 0
  1376   000060                     get_ldnumber@path:
  1377                           	callstack 0
  1378   000060                     SPI1_ExchangeBlock@block:
  1379                           	callstack 0
  1380   000060                     ___wmul@multiplier:
  1381                           	callstack 0
  1382   000060                     ___lwdiv@dividend:
  1383                           	callstack 0
  1384   000060                     memcpy@d1:
  1385                           	callstack 0
  1386   000060                     memset@dest:
  1387                           	callstack 0
  1388   000060                     fputc@c:
  1389                           	callstack 0
  1390   000060                     can_generate_timing_params@can_frequency:
  1391                           	callstack 0
  1392   000060                     write_timestamp_3bytes@timestamp:
  1393                           	callstack 0
  1394   000060                     ___lmul@multiplier:
  1395                           	callstack 0
  1396   000060                     ___lldiv@dividend:
  1397                           	callstack 0
  1398   000060                     ___llmod@dividend:
  1399                           	callstack 0
  1400   000060                     ___xxtofl@val:
  1401                           	callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x0
  1404   000060                     	ds	1
  1405   000061                     ??_SD_SPI_DelayMilliseconds:
  1406   000061                     disk_status@stat:
  1407                           	callstack 0
  1408   000061                     SPI1_Open@spi1UniqueConfiguration:
  1409                           	callstack 0
  1410   000061                     i2c_write@len:
  1411                           	callstack 0
  1412   000061                     i2c_read@len:
  1413                           	callstack 0
  1414   000061                     disk_ioctl@buff:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x1
  1418   000061                     	ds	1
  1419   000062                     ??_srb_is_full:
  1420   000062                     ??_ADCC_GetSingleConversion:
  1421   000062                     ??_ld_word:
  1422   000062                     ??_get_ldnumber:
  1423   000062                     ??_i2c_write:
  1424   000062                     ??_i2c_read:
  1425   000062                     dbc_1st@c:
  1426                           	callstack 0
  1427   000062                     dbc_2nd@c:
  1428                           	callstack 0
  1429   000062                     fputc@fp:
  1430                           	callstack 0
  1431   000062                     can_init@receive_callback:
  1432                           	callstack 0
  1433   000062                     write_timestamp_2bytes@output:
  1434                           	callstack 0
  1435   000062                     st_word@val:
  1436                           	callstack 0
  1437   000062                     mem_cpy@src:
  1438                           	callstack 0
  1439   000062                     mem_set@val:
  1440                           	callstack 0
  1441   000062                     mem_cmp@src:
  1442                           	callstack 0
  1443   000062                     chk_chr@chr:
  1444                           	callstack 0
  1445   000062                     validate@obj:
  1446                           	callstack 0
  1447   000062                     SPI1_ExchangeBlock@blockSize:
  1448                           	callstack 0
  1449   000062                     ___wmul@multiplicand:
  1450                           	callstack 0
  1451   000062                     ___lwdiv@divisor:
  1452                           	callstack 0
  1453   000062                     memcpy@s1:
  1454                           	callstack 0
  1455   000062                     memset@c:
  1456                           	callstack 0
  1457   000062                     st_dword@val:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x2
  1461   000062                     	ds	1
  1462   000063                     ??_fputc:
  1463   000063                     disk_ioctl@pdrv:
  1464                           	callstack 0
  1465   000063                     SD_SPI_DelayMilliseconds@milliseconds:
  1466                           	callstack 0
  1467   000063                     i2c_write@address:
  1468                           	callstack 0
  1469   000063                     i2c_read@address:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x3
  1473   000063                     	ds	1
  1474   000064                     ??_can_init:
  1475   000064                     ??_ld_dword:
  1476   000064                     ??_chk_chr:
  1477   000064                     ??___xxtofl:
  1478   000064                     ADCC_GetSingleConversion@channel:
  1479                           	callstack 0
  1480   000064                     ___lwdiv@counter:
  1481                           	callstack 0
  1482   000064                     can_generate_timing_params@timing:
  1483                           	callstack 0
  1484   000064                     write_timestamp_3bytes@output:
  1485                           	callstack 0
  1486   000064                     mem_cpy@cnt:
  1487                           	callstack 0
  1488   000064                     mem_set@cnt:
  1489                           	callstack 0
  1490   000064                     mem_cmp@cnt:
  1491                           	callstack 0
  1492   000064                     st_clust@fs:
  1493                           	callstack 0
  1494   000064                     get_ldnumber@i:
  1495                           	callstack 0
  1496   000064                     validate@rfs:
  1497                           	callstack 0
  1498   000064                     SD_SPI_DelayMilliseconds@timeout:
  1499                           	callstack 0
  1500   000064                     SPI1_ExchangeBlock@data:
  1501                           	callstack 0
  1502   000064                     i2c_write@timeout:
  1503                           	callstack 0
  1504   000064                     i2c_read@timeout:
  1505                           	callstack 0
  1506   000064                     ___wmul@product:
  1507                           	callstack 0
  1508   000064                     memcpy@n:
  1509                           	callstack 0
  1510   000064                     memset@n:
  1511                           	callstack 0
  1512   000064                     millis@res:
  1513                           	callstack 0
  1514   000064                     ___lmul@multiplicand:
  1515                           	callstack 0
  1516   000064                     ___lldiv@divisor:
  1517                           	callstack 0
  1518   000064                     ___llmod@divisor:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x4
  1522   000064                     	ds	1
  1523   000065                     ld_word@rv:
  1524                           	callstack 0
  1525   000065                     ___lwdiv@quotient:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x5
  1529   000065                     	ds	1
  1530   000066                     ??_can_generate_timing_params:
  1531   000066                     ??_mem_cmp:
  1532   000066                     ??_validate:
  1533   000066                     ?_get_offset_bytes:
  1534                           	callstack 0
  1535   000066                     get_ldnumber@tc:
  1536                           	callstack 0
  1537   000066                     i2c_write_reg8@reg:
  1538                           	callstack 0
  1539   000066                     i2c_read_reg8@reg:
  1540                           	callstack 0
  1541   000066                     memcpy@tmp:
  1542                           	callstack 0
  1543   000066                     get_offset_bytes@ctx:
  1544                           	callstack 0
  1545   000066                     mem_cpy@d:
  1546                           	callstack 0
  1547   000066                     mem_set@d:
  1548                           	callstack 0
  1549   000066                     st_clust@dir:
  1550                           	callstack 0
  1551   000066                     memset@p:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x6
  1555   000066                     	ds	1
  1556   000067                     ?_ld_clust:
  1557                           	callstack 0
  1558   000067                     i2c_write_reg8@val:
  1559                           	callstack 0
  1560   000067                     srb_init@ctx:
  1561                           	callstack 0
  1562   000067                     ld_clust@fs:
  1563                           	callstack 0
  1564   000067                     get_ldnumber@tt:
  1565                           	callstack 0
  1566   000067                     i2c_read_reg8@value:
  1567                           	callstack 0
  1568   000067                     memcpy@d:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x7
  1572   000067                     	ds	1
  1573   000068                     i2c_write_reg8@address:
  1574                           	callstack 0
  1575   000068                     ___llmod@counter:
  1576                           	callstack 0
  1577   000068                     ___xxtofl@sign:
  1578                           	callstack 0
  1579   000068                     get_offset_bytes@index:
  1580                           	callstack 0
  1581   000068                     mem_cpy@s:
  1582                           	callstack 0
  1583   000068                     mem_cmp@d:
  1584                           	callstack 0
  1585   000068                     create_name@dp:
  1586                           	callstack 0
  1587   000068                     build_board_stat_msg@timestamp:
  1588                           	callstack 0
  1589   000068                     build_analog_data_msg@timestamp:
  1590                           	callstack 0
  1591   000068                     st_clust@cl:
  1592                           	callstack 0
  1593   000068                     ___lmul@product:
  1594                           	callstack 0
  1595   000068                     ___lldiv@quotient:
  1596                           	callstack 0
  1597                           
  1598                           ; 4 bytes @ 0x8
  1599   000068                     	ds	1
  1600   000069                     i2c_read_reg8@address:
  1601                           	callstack 0
  1602   000069                     ___xxtofl@exp:
  1603                           	callstack 0
  1604   000069                     srb_init@pool:
  1605                           	callstack 0
  1606   000069                     ld_clust@dir:
  1607                           	callstack 0
  1608   000069                     get_ldnumber@vol:
  1609                           	callstack 0
  1610   000069                     i2c_write_reg8@data:
  1611                           	callstack 0
  1612   000069                     memcpy@s:
  1613                           	callstack 0
  1614   000069                     ld_dword@rv:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x9
  1618   000069                     	ds	1
  1619   00006A                     i2c_read_reg8@success:
  1620                           	callstack 0
  1621   00006A                     mem_cmp@s:
  1622                           	callstack 0
  1623   00006A                     create_name@path:
  1624                           	callstack 0
  1625   00006A                     _validate$3131:
  1626                           	callstack 0
  1627   00006A                     ___xxtofl@arg:
  1628                           	callstack 0
  1629                           
  1630                           ; 4 bytes @ 0xA
  1631   00006A                     	ds	1
  1632   00006B                     ??_ld_clust:
  1633   00006B                     ?_SD_SendCmd:
  1634                           	callstack 0
  1635   00006B                     can_send@message:
  1636                           	callstack 0
  1637   00006B                     i2c_read_reg8@data:
  1638                           	callstack 0
  1639   00006B                     srb_init@pool_size:
  1640                           	callstack 0
  1641   00006B                     get_ldnumber@tp:
  1642                           	callstack 0
  1643   00006B                     SD_SendCmd@address:
  1644                           	callstack 0
  1645                           
  1646                           ; 4 bytes @ 0xB
  1647   00006B                     	ds	1
  1648   00006C                     ??_can_send:
  1649   00006C                     ??_create_name:
  1650   00006C                     ?_data_ready:
  1651                           	callstack 0
  1652   00006C                     ?_clst2sect:
  1653                           	callstack 0
  1654   00006C                     build_board_stat_msg@error_code:
  1655                           	callstack 0
  1656   00006C                     build_analog_data_msg@sensor_id:
  1657                           	callstack 0
  1658   00006C                     validate@res:
  1659                           	callstack 0
  1660   00006C                     fxls_init@sys_mode:
  1661                           	callstack 0
  1662   00006C                     fxls_get_prod_rev@res:
  1663                           	callstack 0
  1664   00006C                     fxls_get_whoami@res:
  1665                           	callstack 0
  1666   00006C                     ___lldiv@counter:
  1667                           	callstack 0
  1668   00006C                     srb_push@ctx:
  1669                           	callstack 0
  1670   00006C                     srb_pop@ctx:
  1671                           	callstack 0
  1672   00006C                     mem_cmp@r:
  1673                           	callstack 0
  1674   00006C                     clst2sect@fs:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0xC
  1678   00006C                     	ds	1
  1679   00006D                     vfpfcnvrt@fp:
  1680                           	callstack 0
  1681   00006D                     srb_init@element_size:
  1682                           	callstack 0
  1683   00006D                     build_board_stat_msg@error_data:
  1684                           	callstack 0
  1685   00006D                     build_analog_data_msg@sensor_data:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0xD
  1689   00006D                     	ds	1
  1690   00006E                     ?___flmul:
  1691                           	callstack 0
  1692   00006E                     srb_pop@element:
  1693                           	callstack 0
  1694   00006E                     data_ready@status:
  1695                           	callstack 0
  1696   00006E                     vfpfcnvrt@fmt:
  1697                           	callstack 0
  1698   00006E                     srb_push@element:
  1699                           	callstack 0
  1700   00006E                     _create_name$2961:
  1701                           	callstack 0
  1702   00006E                     clst2sect@clst:
  1703                           	callstack 0
  1704   00006E                     ___flmul@b:
  1705                           	callstack 0
  1706                           
  1707                           ; 4 bytes @ 0xE
  1708   00006E                     	ds	1
  1709   00006F                     ??_srb_pop:
  1710   00006F                     build_board_stat_msg@error_data_len:
  1711                           	callstack 0
  1712   00006F                     vfpfcnvrt@ap:
  1713                           	callstack 0
  1714   00006F                     txb_init@pool:
  1715                           	callstack 0
  1716   00006F                     build_analog_data_msg@output:
  1717                           	callstack 0
  1718   00006F                     ld_clust@cl:
  1719                           	callstack 0
  1720                           
  1721                           ; 4 bytes @ 0xF
  1722   00006F                     	ds	1
  1723   000070                     ??_srb_push:
  1724   000070                     ??_SD_SendCmd:
  1725   000070                     ??_vfpfcnvrt:
  1726   000070                     build_board_stat_msg@output:
  1727                           	callstack 0
  1728   000070                     _create_name$2966:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x10
  1732   000070                     	ds	1
  1733   000071                     txb_init@pool_size:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x11
  1737   000071                     	ds	1
  1738   000072                     ??_build_board_stat_msg:
  1739   000072                     ??_clst2sect:
  1740   000072                     create_name@d:
  1741                           	callstack 0
  1742   000072                     SD_SendCmd@longTimeout:
  1743                           	callstack 0
  1744   000072                     ___flmul@a:
  1745                           	callstack 0
  1746   000072                     vfpfcnvrt@convarg:
  1747                           	callstack 0
  1748                           
  1749                           ; 4 bytes @ 0x12
  1750   000072                     	ds	1
  1751   000073                     txb_init@can_send_fp:
  1752                           	callstack 0
  1753   000073                     srb_pop@offset:
  1754                           	callstack 0
  1755   000073                     create_name@ni:
  1756                           	callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x13
  1759   000073                     	ds	1
  1760   000074                     srb_push@offset:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x14
  1764   000074                     	ds	1
  1765   000075                     txb_init@can_tx_ready:
  1766                           	callstack 0
  1767   000075                     build_board_stat_msg@i:
  1768                           	callstack 0
  1769   000075                     create_name@p:
  1770                           	callstack 0
  1771   000075                     txb_heartbeat@msg_sent:
  1772                           	callstack 0
  1773                           
  1774                           ; 11 bytes @ 0x15
  1775   000075                     	ds	1
  1776   000076                     ??___flmul:
  1777   000076                     txb_enqueue@msg:
  1778                           	callstack 0
  1779   000076                     SD_SendCmd@timeout:
  1780                           	callstack 0
  1781   000076                     vfpfcnvrt@cp:
  1782                           	callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x16
  1785   000076                     	ds	1
  1786   000077                     create_name@i:
  1787                           	callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x17
  1790   000077                     	ds	1
  1791   000078                     vfpfcnvrt@c:
  1792                           	callstack 0
  1793   000078                     SD_SendCmd@address_bytes:
  1794                           	callstack 0
  1795   000078                     send_status_err@board_stat_msg:
  1796                           	callstack 0
  1797                           
  1798                           ; 11 bytes @ 0x18
  1799   000078                     	ds	1
  1800   000079                     ?_vfprintf:
  1801                           	callstack 0
  1802   000079                     vfprintf@fp:
  1803                           	callstack 0
  1804   000079                     create_name@sfn:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x19
  1808   000079                     	ds	1
  1809   00007A                     ___flmul@sign:
  1810                           	callstack 0
  1811   00007A                     vfprintf@fmt:
  1812                           	callstack 0
  1813                           
  1814                           ; 2 bytes @ 0x1A
  1815   00007A                     	ds	1
  1816   00007B                     create_name@si:
  1817                           	callstack 0
  1818   00007B                     ___flmul@grs:
  1819                           	callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x1B
  1822   00007B                     	ds	1
  1823   00007C                     SD_SendCmd@cmd:
  1824                           	callstack 0
  1825   00007C                     vfprintf@ap:
  1826                           	callstack 0
  1827                           
  1828                           ; 1 bytes @ 0x1C
  1829   00007C                     	ds	1
  1830   00007D                     create_name@c:
  1831                           	callstack 0
  1832   00007D                     vfprintf@cfmt:
  1833                           	callstack 0
  1834   00007D                     SD_SendCmd@response:
  1835                           	callstack 0
  1836                           
  1837                           ; 5 bytes @ 0x1D
  1838   00007D                     	ds	2
  1839   00007F                     ?_sprintf:
  1840                           	callstack 0
  1841   00007F                     ___flmul@aexp:
  1842                           	callstack 0
  1843   00007F                     sprintf@s:
  1844                           	callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x1F
  1847   00007F                     	ds	1
  1848   000080                     ___flmul@bexp:
  1849                           	callstack 0
  1850                           
  1851                           ; 1 bytes @ 0x20
  1852   000080                     	ds	1
  1853   000081                     sprintf@fmt:
  1854                           	callstack 0
  1855   000081                     ___flmul@prod:
  1856                           	callstack 0
  1857                           
  1858                           ; 4 bytes @ 0x21
  1859   000081                     	ds	1
  1860   000082                     ??_SD_SPI_MediaInitialize:
  1861   000082                     SD_SPI_AsyncReadTasks@info:
  1862                           	callstack 0
  1863   000082                     SD_SPI_AsyncWriteTasks@info:
  1864                           	callstack 0
  1865                           
  1866                           ; 1 bytes @ 0x22
  1867   000082                     	ds	1
  1868   000083                     ??_SD_SPI_AsyncReadTasks:
  1869   000083                     ??_SD_SPI_AsyncWriteTasks:
  1870                           
  1871                           ; 1 bytes @ 0x23
  1872   000083                     	ds	2
  1873   000085                     ___flmul@temp:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x25
  1877   000085                     	ds	2
  1878   000087                     ?___fldiv:
  1879                           	callstack 0
  1880   000087                     sprintf@ap:
  1881                           	callstack 0
  1882   000087                     ___fldiv@b:
  1883                           	callstack 0
  1884   000087                     SD_SPI_AsyncReadTasks@response:
  1885                           	callstack 0
  1886   000087                     SD_SPI_AsyncWriteTasks@response:
  1887                           	callstack 0
  1888                           
  1889                           ; 5 bytes @ 0x27
  1890   000087                     	ds	1
  1891   000088                     sprintf@f:
  1892                           	callstack 0
  1893                           
  1894                           ; 12 bytes @ 0x28
  1895   000088                     	ds	3
  1896   00008B                     ___fldiv@a:
  1897                           	callstack 0
  1898                           
  1899                           ; 4 bytes @ 0x2B
  1900   00008B                     	ds	1
  1901   00008C                     SD_SPI_AsyncReadTasks@bData:
  1902                           	callstack 0
  1903   00008C                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1904                           	callstack 0
  1905                           
  1906                           ; 4 bytes @ 0x2C
  1907   00008C                     	ds	1
  1908   00008D                     SD_SPI_SectorRead@sector_address:
  1909                           	callstack 0
  1910   00008D                     SD_SPI_MediaInitialize@CSDResponse:
  1911                           	callstack 0
  1912                           
  1913                           ; 20 bytes @ 0x2D
  1914   00008D                     	ds	2
  1915   00008F                     ??___fldiv:
  1916                           
  1917                           ; 1 bytes @ 0x2F
  1918   00008F                     	ds	1
  1919   000090                     SD_SPI_SectorWrite@sector_address:
  1920                           	callstack 0
  1921                           
  1922                           ; 4 bytes @ 0x30
  1923   000090                     	ds	1
  1924   000091                     SD_SPI_SectorRead@buffer:
  1925                           	callstack 0
  1926                           
  1927                           ; 2 bytes @ 0x31
  1928   000091                     	ds	2
  1929   000093                     SD_SPI_SectorRead@sector_count:
  1930                           	callstack 0
  1931   000093                     ___fldiv@rem:
  1932                           	callstack 0
  1933                           
  1934                           ; 4 bytes @ 0x33
  1935   000093                     	ds	1
  1936   000094                     SD_SPI_SectorWrite@buffer:
  1937                           	callstack 0
  1938                           
  1939                           ; 2 bytes @ 0x34
  1940   000094                     	ds	1
  1941   000095                     ??_SD_SPI_SectorRead:
  1942                           
  1943                           ; 1 bytes @ 0x35
  1944   000095                     	ds	1
  1945   000096                     SD_SPI_SectorWrite@sector_count:
  1946                           	callstack 0
  1947                           
  1948                           ; 2 bytes @ 0x36
  1949   000096                     	ds	1
  1950   000097                     SD_SPI_SectorRead@result:
  1951                           	callstack 0
  1952   000097                     ___fldiv@sign:
  1953                           	callstack 0
  1954                           
  1955                           ; 1 bytes @ 0x37
  1956   000097                     	ds	1
  1957   000098                     ??_SD_SPI_SectorWrite:
  1958   000098                     SD_SPI_SectorRead@status:
  1959                           	callstack 0
  1960   000098                     ___fldiv@new_exp:
  1961                           	callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x38
  1964   000098                     	ds	1
  1965   000099                     SD_SPI_SectorRead@i:
  1966                           	callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x39
  1969   000099                     	ds	1
  1970   00009A                     SD_SPI_SectorWrite@result:
  1971                           	callstack 0
  1972   00009A                     ___fldiv@grs:
  1973                           	callstack 0
  1974                           
  1975                           ; 4 bytes @ 0x3A
  1976   00009A                     	ds	1
  1977   00009B                     SD_SPI_SectorWrite@status:
  1978                           	callstack 0
  1979   00009B                     SD_SPI_SectorRead@info:
  1980                           	callstack 0
  1981                           
  1982                           ; 13 bytes @ 0x3B
  1983   00009B                     	ds	1
  1984   00009C                     SD_SPI_SectorWrite@i:
  1985                           	callstack 0
  1986                           
  1987                           ; 2 bytes @ 0x3C
  1988   00009C                     	ds	2
  1989   00009E                     ___fldiv@bexp:
  1990                           	callstack 0
  1991   00009E                     SD_SPI_SectorWrite@info:
  1992                           	callstack 0
  1993                           
  1994                           ; 13 bytes @ 0x3E
  1995   00009E                     	ds	1
  1996   00009F                     ___fldiv@aexp:
  1997                           	callstack 0
  1998                           
  1999                           ; 1 bytes @ 0x3F
  2000   00009F                     	ds	1
  2001   0000A0                     ?___fltol:
  2002                           	callstack 0
  2003   0000A0                     ___fltol@f1:
  2004                           	callstack 0
  2005                           
  2006                           ; 4 bytes @ 0x40
  2007   0000A0                     	ds	1
  2008   0000A1                     _SD_SPI_MediaInitialize$6582:
  2009                           	callstack 0
  2010                           
  2011                           ; 4 bytes @ 0x41
  2012   0000A1                     	ds	3
  2013   0000A4                     ??___fltol:
  2014                           
  2015                           ; 1 bytes @ 0x44
  2016   0000A4                     	ds	1
  2017   0000A5                     SD_SPI_MediaInitialize@c_size_mult:
  2018                           	callstack 0
  2019                           
  2020                           ; 1 bytes @ 0x45
  2021   0000A5                     	ds	1
  2022   0000A6                     SD_SPI_MediaInitialize@index:
  2023                           	callstack 0
  2024                           
  2025                           ; 1 bytes @ 0x46
  2026   0000A6                     	ds	1
  2027   0000A7                     SD_SPI_MediaInitialize@block_len:
  2028                           	callstack 0
  2029                           
  2030                           ; 1 bytes @ 0x47
  2031   0000A7                     	ds	1
  2032   0000A8                     SD_SPI_MediaInitialize@count:
  2033                           	callstack 0
  2034   0000A8                     ___fltol@sign1:
  2035                           	callstack 0
  2036   0000A8                     disk_read@buff:
  2037                           	callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x48
  2040   0000A8                     	ds	1
  2041   0000A9                     ___fltol@exp1:
  2042                           	callstack 0
  2043   0000A9                     SD_SPI_MediaInitialize@c_size:
  2044                           	callstack 0
  2045                           
  2046                           ; 4 bytes @ 0x49
  2047   0000A9                     	ds	1
  2048   0000AA                     fxls_read_accel_data@x:
  2049                           	callstack 0
  2050   0000AA                     disk_read@sector:
  2051                           	callstack 0
  2052                           
  2053                           ; 4 bytes @ 0x4A
  2054   0000AA                     	ds	1
  2055   0000AB                     disk_write@buff:
  2056                           	callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x4B
  2059   0000AB                     	ds	1
  2060   0000AC                     fxls_read_accel_data@y:
  2061                           	callstack 0
  2062                           
  2063                           ; 2 bytes @ 0x4C
  2064   0000AC                     	ds	1
  2065   0000AD                     disk_write@sector:
  2066                           	callstack 0
  2067   0000AD                     SD_SPI_MediaInitialize@response:
  2068                           	callstack 0
  2069                           
  2070                           ; 5 bytes @ 0x4D
  2071   0000AD                     	ds	1
  2072   0000AE                     disk_read@count:
  2073                           	callstack 0
  2074   0000AE                     fxls_read_accel_data@z:
  2075                           	callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x4E
  2078   0000AE                     	ds	2
  2079   0000B0                     ??_fxls_read_accel_data:
  2080   0000B0                     disk_read@pdrv:
  2081                           	callstack 0
  2082                           
  2083                           ; 1 bytes @ 0x50
  2084   0000B0                     	ds	1
  2085   0000B1                     disk_read@res:
  2086                           	callstack 0
  2087   0000B1                     disk_write@count:
  2088                           	callstack 0
  2089                           
  2090                           ; 2 bytes @ 0x51
  2091   0000B1                     	ds	1
  2092   0000B2                     fxls_read_accel_data@status:
  2093                           	callstack 0
  2094   0000B2                     SD_SPI_MediaInitialize@timeout:
  2095                           	callstack 0
  2096                           
  2097                           ; 2 bytes @ 0x52
  2098   0000B2                     	ds	1
  2099   0000B3                     disk_write@pdrv:
  2100                           	callstack 0
  2101   0000B3                     fxls_read_accel_data@x_lsb:
  2102                           	callstack 0
  2103                           
  2104                           ; 1 bytes @ 0x53
  2105   0000B3                     	ds	1
  2106   0000B4                     disk_initialize@pdrv:
  2107                           	callstack 0
  2108   0000B4                     disk_write@res:
  2109                           	callstack 0
  2110   0000B4                     fxls_read_accel_data@x_msb:
  2111                           	callstack 0
  2112                           
  2113                           ; 1 bytes @ 0x54
  2114   0000B4                     	ds	1
  2115   0000B5                     disk_initialize@stat:
  2116                           	callstack 0
  2117   0000B5                     fxls_read_accel_data@y_lsb:
  2118                           	callstack 0
  2119   0000B5                     sync_window@fs:
  2120                           	callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x55
  2123   0000B5                     	ds	1
  2124   0000B6                     fxls_read_accel_data@y_msb:
  2125                           	callstack 0
  2126                           
  2127                           ; 1 bytes @ 0x56
  2128   0000B6                     	ds	1
  2129   0000B7                     ??_sync_window:
  2130   0000B7                     fxls_read_accel_data@z_lsb:
  2131                           	callstack 0
  2132                           
  2133                           ; 1 bytes @ 0x57
  2134   0000B7                     	ds	1
  2135   0000B8                     fxls_read_accel_data@z_msb:
  2136                           	callstack 0
  2137                           
  2138                           ; 1 bytes @ 0x58
  2139   0000B8                     	ds	15
  2140   0000C7                     sync_window@res:
  2141                           	callstack 0
  2142                           
  2143                           ; 1 bytes @ 0x67
  2144   0000C7                     	ds	1
  2145   0000C8                     move_window@fs:
  2146                           	callstack 0
  2147   0000C8                     sync_fs@fs:
  2148                           	callstack 0
  2149   0000C8                     dir_clear@fs:
  2150                           	callstack 0
  2151                           
  2152                           ; 2 bytes @ 0x68
  2153   0000C8                     	ds	2
  2154   0000CA                     ??_sync_fs:
  2155   0000CA                     move_window@sector:
  2156                           	callstack 0
  2157   0000CA                     dir_clear@clst:
  2158                           	callstack 0
  2159                           
  2160                           ; 4 bytes @ 0x6A
  2161   0000CA                     	ds	4
  2162   0000CE                     
  2163                           ; 1 bytes @ 0x6E
  2164   0000CE                     	ds	2
  2165   0000D0                     dir_clear@ibuf:
  2166                           	callstack 0
  2167                           
  2168                           ; 2 bytes @ 0x70
  2169   0000D0                     	ds	2
  2170   0000D2                     move_window@res:
  2171                           	callstack 0
  2172   0000D2                     sync_fs@res:
  2173                           	callstack 0
  2174   0000D2                     dir_clear@sect:
  2175                           	callstack 0
  2176                           
  2177                           ; 4 bytes @ 0x72
  2178   0000D2                     	ds	1
  2179   0000D3                     ?_get_fat:
  2180                           	callstack 0
  2181   0000D3                     get_fat@obj:
  2182                           	callstack 0
  2183   0000D3                     put_fat@fs:
  2184                           	callstack 0
  2185   0000D3                     check_fs@fs:
  2186                           	callstack 0
  2187   0000D3                     f_sync@fp:
  2188                           	callstack 0
  2189                           
  2190                           ; 2 bytes @ 0x73
  2191   0000D3                     	ds	2
  2192   0000D5                     f_sync@res:
  2193                           	callstack 0
  2194   0000D5                     get_fat@clst:
  2195                           	callstack 0
  2196   0000D5                     put_fat@clst:
  2197                           	callstack 0
  2198   0000D5                     check_fs@sect:
  2199                           	callstack 0
  2200                           
  2201                           ; 4 bytes @ 0x75
  2202   0000D5                     	ds	1
  2203   0000D6                     dir_clear@szb:
  2204                           	callstack 0
  2205   0000D6                     f_sync@dir:
  2206                           	callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x76
  2209   0000D6                     	ds	2
  2210   0000D8                     dir_clear@n:
  2211                           	callstack 0
  2212   0000D8                     f_sync@fs:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x78
  2216   0000D8                     	ds	1
  2217   0000D9                     ??_get_fat:
  2218   0000D9                     put_fat@val:
  2219                           	callstack 0
  2220                           
  2221                           ; 4 bytes @ 0x79
  2222   0000D9                     	ds	1
  2223   0000DA                     find_volume@path:
  2224                           	callstack 0
  2225   0000DA                     f_close@fp:
  2226                           	callstack 0
  2227                           
  2228                           ; 2 bytes @ 0x7A
  2229   0000DA                     	ds	2
  2230   0000DC                     find_volume@rfs:
  2231                           	callstack 0
  2232   0000DC                     f_close@fs:
  2233                           	callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x7C
  2236   0000DC                     	ds	1
  2237   0000DD                     ??_put_fat:
  2238                           
  2239                           ; 1 bytes @ 0x7D
  2240   0000DD                     	ds	1
  2241   0000DE                     find_volume@mode:
  2242                           	callstack 0
  2243   0000DE                     f_close@res:
  2244                           	callstack 0
  2245                           
  2246                           ; 1 bytes @ 0x7E
  2247   0000DE                     	ds	1
  2248   0000DF                     ??_find_volume:
  2249                           
  2250                           ; 1 bytes @ 0x7F
  2251   0000DF                     	ds	2
  2252   0000E1                     _get_fat$2577:
  2253                           	callstack 0
  2254                           
  2255                           ; 2 bytes @ 0x81
  2256   0000E1                     	ds	2
  2257   0000E3                     get_fat@wc:
  2258                           	callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x83
  2261   0000E3                     	ds	2
  2262   0000E5                     get_fat@val:
  2263                           	callstack 0
  2264                           
  2265                           ; 4 bytes @ 0x85
  2266   0000E5                     	ds	2
  2267   0000E7                     f_mount@fs:
  2268                           	callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x87
  2271   0000E7                     	ds	2
  2272   0000E9                     get_fat@bc:
  2273                           	callstack 0
  2274   0000E9                     f_mount@path:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x89
  2278   0000E9                     	ds	2
  2279   0000EB                     f_mount@opt:
  2280                           	callstack 0
  2281   0000EB                     get_fat@fs:
  2282                           	callstack 0
  2283   0000EB                     _put_fat$2606:
  2284                           	callstack 0
  2285                           
  2286                           ; 2 bytes @ 0x8B
  2287   0000EB                     	ds	1
  2288   0000EC                     f_mount@res:
  2289                           	callstack 0
  2290                           
  2291                           ; 1 bytes @ 0x8C
  2292   0000EC                     	ds	1
  2293   0000ED                     _put_fat$2607:
  2294                           	callstack 0
  2295   0000ED                     dir_sdi@dp:
  2296                           	callstack 0
  2297   0000ED                     f_mount@rp:
  2298                           	callstack 0
  2299                           
  2300                           ; 2 bytes @ 0x8D
  2301   0000ED                     	ds	2
  2302   0000EF                     put_fat@p:
  2303                           	callstack 0
  2304   0000EF                     f_mount@cfs:
  2305                           	callstack 0
  2306   0000EF                     dir_sdi@ofs:
  2307                           	callstack 0
  2308                           
  2309                           ; 4 bytes @ 0x8F
  2310   0000EF                     	ds	2
  2311   0000F1                     put_fat@bc:
  2312                           	callstack 0
  2313   0000F1                     f_mount@vol:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x91
  2317   0000F1                     	ds	2
  2318   0000F3                     ??_dir_sdi:
  2319   0000F3                     put_fat@res:
  2320                           	callstack 0
  2321                           
  2322                           ; 1 bytes @ 0x93
  2323   0000F3                     	ds	1
  2324   0000F4                     ?_create_chain:
  2325                           	callstack 0
  2326   0000F4                     remove_chain@obj:
  2327                           	callstack 0
  2328   0000F4                     create_chain@obj:
  2329                           	callstack 0
  2330                           
  2331                           ; 2 bytes @ 0x94
  2332   0000F4                     	ds	2
  2333   0000F6                     remove_chain@clst:
  2334                           	callstack 0
  2335   0000F6                     create_chain@clst:
  2336                           	callstack 0
  2337                           
  2338                           ; 4 bytes @ 0x96
  2339   0000F6                     	ds	4
  2340   0000FA                     dir_next@dp:
  2341                           	callstack 0
  2342   0000FA                     remove_chain@pclst:
  2343                           	callstack 0
  2344                           
  2345                           ; 4 bytes @ 0x9A
  2346   0000FA                     	ds	2
  2347   0000FC                     dir_next@stretch:
  2348                           	callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x9C
  2351   0000FC                     	ds	2
  2352   0000FE                     ??_dir_find:
  2353   0000FE                     
  2354                           ; 1 bytes @ 0x9E
  2355   0000FE                     	ds	2
  2356   000100                     
  2357                           ; 1 bytes @ 0xA0
  2358                           
  2359                           	psect	cstackCOMRAM
  2360   000001                     __pcstackCOMRAM:
  2361                           	callstack 0
  2362   000001                     ?_get_message_type:
  2363                           	callstack 0
  2364   000001                     get_message_type@msg:
  2365                           	callstack 0
  2366   000001                     get_board_unique_id@msg:
  2367                           	callstack 0
  2368   000001                     i2memcpy@d1:
  2369                           	callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x0
  2372   000001                     	ds	1
  2373   000002                     
  2374                           ; 1 bytes @ 0x1
  2375   000002                     	ds	1
  2376   000003                     ??_get_message_type:
  2377   000003                     i2memcpy@s1:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x2
  2381   000003                     	ds	2
  2382   000005                     ?_get_reset_board_id:
  2383                           	callstack 0
  2384   000005                     get_reset_board_id@msg:
  2385                           	callstack 0
  2386   000005                     i2memcpy@n:
  2387                           	callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x4
  2390   000005                     	ds	2
  2391   000007                     ??_get_reset_board_id:
  2392   000007                     i2memcpy@d:
  2393                           	callstack 0
  2394                           
  2395                           ; 2 bytes @ 0x6
  2396   000007                     	ds	1
  2397   000008                     get_reset_board_id@msg_type:
  2398                           	callstack 0
  2399                           
  2400                           ; 2 bytes @ 0x7
  2401   000008                     	ds	1
  2402   000009                     i2memcpy@s:
  2403                           	callstack 0
  2404                           
  2405                           ; 2 bytes @ 0x8
  2406   000009                     	ds	1
  2407   00000A                     can_msg_handler@msg:
  2408                           	callstack 0
  2409                           
  2410                           ; 1 bytes @ 0x9
  2411   00000A                     	ds	1
  2412   00000B                     ??_can_msg_handler:
  2413   00000B                     i2memcpy@tmp:
  2414                           	callstack 0
  2415                           
  2416                           ; 1 bytes @ 0xA
  2417   00000B                     	ds	2
  2418   00000D                     can_msg_handler@msg_type:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0xC
  2422   00000D                     	ds	2
  2423   00000F                     can_msg_handler@dest_id:
  2424                           	callstack 0
  2425                           
  2426                           ; 2 bytes @ 0xE
  2427   00000F                     	ds	2
  2428   000011                     ??_can_handle_interrupt:
  2429                           
  2430                           ; 1 bytes @ 0x10
  2431   000011                     	ds	4
  2432   000015                     can_handle_interrupt@rcvd_msg:
  2433                           	callstack 0
  2434                           
  2435                           ; 11 bytes @ 0x14
  2436   000015                     	ds	11
  2437   000020                     can_handle_interrupt@rcvd_msg_753:
  2438                           	callstack 0
  2439                           
  2440                           ; 11 bytes @ 0x1F
  2441   000020                     	ds	11
  2442   00002B                     ??_interrupt_handler:
  2443                           
  2444                           ; 1 bytes @ 0x2A
  2445   00002B                     	ds	2
  2446                           
  2447 ;;
  2448 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2449 ;;
  2450 ;; *************** function _main *****************
  2451 ;; Defined at:
  2452 ;;		line 36 in file "main.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  rev             1  178[BANK1 ] unsigned char 
  2457 ;;  who             1  177[BANK1 ] unsigned char 
  2458 ;;  status          1  176[BANK1 ] unsigned char 
  2459 ;;  buf_status      1  175[BANK1 ] unsigned char 
  2460 ;;  sys_mode        1  174[BANK1 ] unsigned char 
  2461 ;;  z               2  187[BANK1 ] unsigned short 
  2462 ;;  y               2  185[BANK1 ] unsigned short 
  2463 ;;  x               2  183[BANK1 ] unsigned short 
  2464 ;;  adc_value       2    0        unsigned short 
  2465 ;;  msg            11  189[BANK1 ] struct .
  2466 ;;  can_setup       7  200[BANK1 ] struct .
  2467 ;;  last_status_    4  179[BANK1 ] unsigned long 
  2468 ;;  last_accel_m    4  170[BANK1 ] unsigned long 
  2469 ;;  last_message    4    0        unsigned long 
  2470 ;;  last_flow_mi    4    0        unsigned long 
  2471 ;;  prod_rev        1    0        unsigned char 
  2472 ;;  whoami          1    0        unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;Total ram usage:       41 bytes
  2487 ;; Hardware stack levels required when called: 19
  2488 ;; This function calls:
  2489 ;;		_ADCC_GetSingleConversion
  2490 ;;		_ADCC_Initialize
  2491 ;;		_SET_ACCEL_I2C_ADDR
  2492 ;;		_SYSTEM_Initialize
  2493 ;;		_build_analog_data_msg
  2494 ;;		_can_generate_timing_params
  2495 ;;		_can_init
  2496 ;;		_data_ready
  2497 ;;		_f_close
  2498 ;;		_f_mount
  2499 ;;		_f_open
  2500 ;;		_f_write
  2501 ;;		_fxls_get_prod_rev
  2502 ;;		_fxls_get_whoami
  2503 ;;		_fxls_init
  2504 ;;		_fxls_read_accel_data
  2505 ;;		_i2c_init
  2506 ;;		_i2c_read_reg8
  2507 ;;		_millis
  2508 ;;		_send_status_err
  2509 ;;		_send_status_ok
  2510 ;;		_timer0_init
  2511 ;;		_txb_heartbeat
  2512 ;;		_txb_init
  2513 ;; This function is called by:
  2514 ;;		Startup code after reset
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text0
  2519   0053E0                     __ptext0:
  2520                           	callstack 0
  2521   0053E0                     _main:
  2522                           	callstack 12
  2523   0053E0                     
  2524                           ;main.c: 38:     SYSTEM_Initialize();
  2525   0053E0  EC51  F052         	call	_SYSTEM_Initialize	;wreg free
  2526                           
  2527                           ;main.c: 39:     ADCC_Initialize();
  2528   0053E4  EC1B  F04E         	call	_ADCC_Initialize	;wreg free
  2529   0053E8                     
  2530                           ;main.c: 42:     INTCON0bits.GIE = 1;
  2531   0053E8  8ED2               	bsf	210,7,c	;volatile
  2532                           
  2533                           ;main.c: 45:     timer0_init();
  2534   0053EA  ECEC  F051         	call	_timer0_init	;wreg free
  2535   0053EE                     
  2536                           ;main.c: 46:     uint32_t last_status_millis = millis();
  2537   0053EE  EC59  F051         	call	_millis	;wreg free
  2538   0053F2  C060  F1B3         	movff	?_millis,main@last_status_millis
  2539   0053F6  C061  F1B4         	movff	?_millis+1,main@last_status_millis+1
  2540   0053FA  C062  F1B5         	movff	?_millis+2,main@last_status_millis+2
  2541   0053FE  C063  F1B6         	movff	?_millis+3,main@last_status_millis+3
  2542   005402                     
  2543                           ;main.c: 47:     uint32_t last_accel_millis = millis();
  2544   005402  EC59  F051         	call	_millis	;wreg free
  2545   005406  C060  F1AA         	movff	?_millis,main@last_accel_millis
  2546   00540A  C061  F1AB         	movff	?_millis+1,main@last_accel_millis+1
  2547   00540E  C062  F1AC         	movff	?_millis+2,main@last_accel_millis+2
  2548   005412  C063  F1AD         	movff	?_millis+3,main@last_accel_millis+3
  2549   005416  EC59  F051         	call	_millis	;wreg free
  2550   00541A  EC59  F051         	call	_millis	;wreg free
  2551   00541E                     
  2552                           ;main.c: 52:     TRISC1 = 0;
  2553   00541E  92C4               	bcf	16324,1,c	;volatile
  2554   005420                     
  2555                           ;main.c: 53:     RC1PPS = 0x33;
  2556   005420  0E33               	movlw	51
  2557   005422  013A               	movlb	58	; () banked
  2558   005424  6F11               	movwf	17,b	;volatile
  2559   005426                     
  2560                           ; BSR set to: 58
  2561                           ;main.c: 56:     TRISC0 = 1;
  2562   005426  80C4               	bsf	16324,0,c	;volatile
  2563   005428                     
  2564                           ; BSR set to: 58
  2565                           ;main.c: 57:     ANSELC0 = 0;
  2566   005428  9160               	bcf	96,0,b	;volatile
  2567   00542A                     
  2568                           ; BSR set to: 58
  2569                           ;main.c: 58:     CANRXPPS = 0b00010000;
  2570   00542A  0E10               	movlw	16
  2571   00542C  6FED               	movwf	237,b	;volatile
  2572   00542E                     
  2573                           ; BSR set to: 58
  2574                           ;main.c: 61:     can_timing_t can_setup;;main.c: 62:     can_generate_timing_params(1200
      +                          0000, &can_setup);
  2575   00542E  0E00               	movlw	0
  2576   005430  0100               	movlb	0	; () banked
  2577   005432  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
  2578   005434  0E1B               	movlw	27
  2579   005436  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
  2580   005438  0EB7               	movlw	183
  2581   00543A  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
  2582   00543C  0E00               	movlw	0
  2583   00543E  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
  2584   005440  0EC8               	movlw	low main@can_setup
  2585   005442  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
  2586   005444  0E01               	movlw	high main@can_setup
  2587   005446  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
  2588   005448  EC1F  F038         	call	_can_generate_timing_params	;wreg free
  2589   00544C                     
  2590                           ;main.c: 63:     can_init(&can_setup, can_msg_handler);
  2591   00544C  0EC8               	movlw	low main@can_setup
  2592   00544E  0100               	movlb	0	; () banked
  2593   005450  6F60               	movwf	can_init@timing& (0+255),b
  2594   005452  0E01               	movlw	high main@can_setup
  2595   005454  6F61               	movwf	(can_init@timing+1)& (0+255),b
  2596   005456  0E88               	movlw	low _can_msg_handler
  2597   005458  6F62               	movwf	can_init@receive_callback& (0+255),b
  2598   00545A  0E8E               	movlw	high _can_msg_handler
  2599   00545C  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
  2600   00545E  ECAE  F03B         	call	_can_init	;wreg free
  2601   005462                     
  2602                           ;main.c: 65:     txb_init(tx_pool, sizeof (tx_pool), can_send, can_send_rdy);
  2603   005462  0E20               	movlw	low _tx_pool
  2604   005464  0100               	movlb	0	; () banked
  2605   005466  6F6F               	movwf	txb_init@pool& (0+255),b
  2606   005468  0E02               	movlw	high _tx_pool
  2607   00546A  6F70               	movwf	(txb_init@pool+1)& (0+255),b
  2608   00546C  0E00               	movlw	0
  2609   00546E  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
  2610   005470  0E96               	movlw	150
  2611   005472  6F71               	movwf	txb_init@pool_size& (0+255),b
  2612   005474  0E48               	movlw	low _can_send
  2613   005476  6F73               	movwf	txb_init@can_send_fp& (0+255),b
  2614   005478  0E88               	movlw	high _can_send
  2615   00547A  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
  2616   00547C  0E76               	movlw	low _can_send_rdy
  2617   00547E  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
  2618   005480  0EA4               	movlw	high _can_send_rdy
  2619   005482  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
  2620   005484  ECDE  F050         	call	_txb_init	;wreg free
  2621   005488                     
  2622                           ;main.c: 67:     can_msg_t msg;;main.c: 70:     I2C1SDAPPS = 0b01010;
  2623   005488  0E0A               	movlw	10
  2624   00548A  013A               	movlb	58	; () banked
  2625   00548C  6FE4               	movwf	228,b	;volatile
  2626   00548E                     
  2627                           ; BSR set to: 58
  2628                           ;main.c: 71:     I2C1SCLPPS = 0b01001;
  2629   00548E  0E09               	movlw	9
  2630   005490  6FE3               	movwf	227,b	;volatile
  2631   005492                     
  2632                           ; BSR set to: 58
  2633                           ;main.c: 72:     RB2PPS = 0b100010;
  2634   005492  0E22               	movlw	34
  2635   005494  6F0A               	movwf	10,b	;volatile
  2636   005496                     
  2637                           ; BSR set to: 58
  2638                           ;main.c: 73:     RB1PPS = 0b100001;
  2639   005496  0E21               	movlw	33
  2640   005498  6F09               	movwf	9,b	;volatile
  2641   00549A                     
  2642                           ; BSR set to: 58
  2643                           ;main.c: 74:     SET_ACCEL_I2C_ADDR(0x31);
  2644   00549A  0E31               	movlw	49
  2645   00549C  ECFB  F051         	call	_SET_ACCEL_I2C_ADDR
  2646   0054A0                     
  2647                           ;main.c: 75:     i2c_init(0b000);
  2648   0054A0  0E00               	movlw	0
  2649   0054A2  EC15  F051         	call	_i2c_init
  2650   0054A6                     
  2651                           ;main.c: 78:     TRISC6 = 0;
  2652   0054A6  9CC4               	bcf	16324,6,c	;volatile
  2653   0054A8                     
  2654                           ;main.c: 79:     LATC6 = 1;
  2655   0054A8  8CBC               	bsf	16316,6,c	;volatile
  2656   0054AA  EC17  F052         	call	_fxls_get_whoami	;wreg free
  2657   0054AE  EC23  F052         	call	_fxls_get_prod_rev	;wreg free
  2658   0054B2                     
  2659                           ;main.c: 85:     TRISB3 = 0;
  2660   0054B2  96C3               	bcf	16323,3,c	;volatile
  2661   0054B4                     
  2662                           ;main.c: 86:     LATB3 = 0;
  2663   0054B4  96BB               	bcf	16315,3,c	;volatile
  2664   0054B6                     
  2665                           ;main.c: 88:     TRISA2 = 0;
  2666   0054B6  94C2               	bcf	16322,2,c	;volatile
  2667   0054B8                     
  2668                           ;main.c: 89:     TRISA3 = 0;
  2669   0054B8  96C2               	bcf	16322,3,c	;volatile
  2670   0054BA                     
  2671                           ;main.c: 90:     TRISA4 = 0;
  2672   0054BA  98C2               	bcf	16322,4,c	;volatile
  2673   0054BC                     
  2674                           ;main.c: 91:     TRISC2 = 0;
  2675   0054BC  94C4               	bcf	16324,2,c	;volatile
  2676   0054BE                     
  2677                           ;main.c: 93:     if (f_mount(&FatFs, "", 1) == FR_OK) {
  2678   0054BE  0EB6               	movlw	low _FatFs
  2679   0054C0  0100               	movlb	0	; () banked
  2680   0054C2  6FE7               	movwf	f_mount@fs& (0+255),b
  2681   0054C4  0E02               	movlw	high _FatFs
  2682   0054C6  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2683   0054C8  0EE4               	movlw	low (STR_9+11)
  2684   0054CA  6FE9               	movwf	f_mount@path& (0+255),b
  2685   0054CC  0EFF               	movlw	high (STR_9+11)
  2686   0054CE  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2687   0054D0  0E01               	movlw	1
  2688   0054D2  6FEB               	movwf	f_mount@opt& (0+255),b
  2689   0054D4  ECFC  F045         	call	_f_mount	;wreg free
  2690   0054D8  0900               	iorlw	0
  2691   0054DA  A4D8               	btfss	status,2,c
  2692   0054DC  EF72  F02A         	goto	u23061
  2693   0054E0  EF74  F02A         	goto	u23060
  2694   0054E4                     u23061:
  2695   0054E4  EFD8  F02A         	goto	l18847
  2696   0054E8                     u23060:
  2697   0054E8                     
  2698                           ;main.c: 94:         if (f_open(&Fil, "Data.txt", 0x04 | 0x01 | 0x02) == FR_OK) {
  2699   0054E8  0EE9               	movlw	low _Fil
  2700   0054EA  0101               	movlb	1	; () banked
  2701   0054EC  6F41               	movwf	f_open@fp& (0+255),b
  2702   0054EE  0E04               	movlw	high _Fil
  2703   0054F0  6F42               	movwf	(f_open@fp+1)& (0+255),b
  2704   0054F2  0EE5               	movlw	low STR_8
  2705   0054F4  6F43               	movwf	f_open@path& (0+255),b
  2706   0054F6  0EFF               	movlw	high STR_8
  2707   0054F8  6F44               	movwf	(f_open@path+1)& (0+255),b
  2708   0054FA  0E07               	movlw	7
  2709   0054FC  6F45               	movwf	f_open@mode& (0+255),b
  2710   0054FE  ECA0  F00F         	call	_f_open	;wreg free
  2711   005502  0900               	iorlw	0
  2712   005504  A4D8               	btfss	status,2,c
  2713   005506  EF87  F02A         	goto	u23071
  2714   00550A  EF89  F02A         	goto	u23070
  2715   00550E                     u23071:
  2716   00550E  EFED  F02A         	goto	l2208
  2717   005512                     u23070:
  2718   005512                     
  2719                           ;main.c: 95:             f_write(&Fil, "BEGIN LOG\r\n", 10, &bw);
  2720   005512  0EE9               	movlw	low _Fil
  2721   005514  0101               	movlb	1	; () banked
  2722   005516  6F17               	movwf	f_write@fp& (0+255),b
  2723   005518  0E04               	movlw	high _Fil
  2724   00551A  6F18               	movwf	(f_write@fp+1)& (0+255),b
  2725   00551C  0ED9               	movlw	low STR_9
  2726   00551E  6F19               	movwf	f_write@buff& (0+255),b
  2727   005520  0EFF               	movlw	high STR_9
  2728   005522  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  2729   005524  0E00               	movlw	0
  2730   005526  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  2731   005528  0E0A               	movlw	10
  2732   00552A  6F1B               	movwf	f_write@btw& (0+255),b
  2733   00552C  0EF8               	movlw	low _bw
  2734   00552E  6F1D               	movwf	f_write@bw& (0+255),b
  2735   005530  0E01               	movlw	high _bw
  2736   005532  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  2737   005534  EC69  F007         	call	_f_write	;wreg free
  2738                           
  2739                           ;main.c: 96:             f_close(&Fil);
  2740   005538  0EE9               	movlw	low _Fil
  2741   00553A  0100               	movlb	0	; () banked
  2742   00553C  6FDA               	movwf	f_close@fp& (0+255),b
  2743   00553E  0E04               	movlw	high _Fil
  2744   005540  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  2745   005542  ECD6  F04E         	call	_f_close	;wreg free
  2746   005546  EFED  F02A         	goto	l2208
  2747   00554A                     l18839:
  2748                           
  2749                           ;main.c: 100:             if (millis() - last_status_millis > 500) {
  2750   00554A  EC59  F051         	call	_millis	;wreg free
  2751   00554E  0101               	movlb	1	; () banked
  2752   005550  51B3               	movf	main@last_status_millis& (0+255),w,b
  2753   005552  0100               	movlb	0	; () banked
  2754   005554  5D60               	subwf	?_millis& (0+255),w,b
  2755   005556  0101               	movlb	1	; () banked
  2756   005558  6FA6               	movwf	??_main& (0+255),b
  2757   00555A  51B4               	movf	(main@last_status_millis+1)& (0+255),w,b
  2758   00555C  0100               	movlb	0	; () banked
  2759   00555E  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2760   005560  0101               	movlb	1	; () banked
  2761   005562  6FA7               	movwf	(??_main+1)& (0+255),b
  2762   005564  51B5               	movf	(main@last_status_millis+2)& (0+255),w,b
  2763   005566  0100               	movlb	0	; () banked
  2764   005568  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2765   00556A  0101               	movlb	1	; () banked
  2766   00556C  6FA8               	movwf	(??_main+2)& (0+255),b
  2767   00556E  51B6               	movf	(main@last_status_millis+3)& (0+255),w,b
  2768   005570  0100               	movlb	0	; () banked
  2769   005572  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2770   005574  0101               	movlb	1	; () banked
  2771   005576  6FA9               	movwf	(??_main+3)& (0+255),b
  2772   005578  51A9               	movf	(??_main+3)& (0+255),w,b
  2773   00557A  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2774   00557C  E10B               	bnz	u23080
  2775   00557E  0EF5               	movlw	245
  2776   005580  5DA6               	subwf	??_main& (0+255),w,b
  2777   005582  0E01               	movlw	1
  2778   005584  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2779   005586  A0D8               	btfss	status,0,c
  2780   005588  EFC8  F02A         	goto	u23081
  2781   00558C  EFCA  F02A         	goto	u23080
  2782   005590                     u23081:
  2783   005590  EFD6  F02A         	goto	l18845
  2784   005594                     u23080:
  2785   005594                     
  2786                           ; BSR set to: 1
  2787                           ;main.c: 101:                 last_status_millis = millis();
  2788   005594  EC59  F051         	call	_millis	;wreg free
  2789   005598  C060  F1B3         	movff	?_millis,main@last_status_millis
  2790   00559C  C061  F1B4         	movff	?_millis+1,main@last_status_millis+1
  2791   0055A0  C062  F1B5         	movff	?_millis+2,main@last_status_millis+2
  2792   0055A4  C063  F1B6         	movff	?_millis+3,main@last_status_millis+3
  2793   0055A8                     
  2794                           ;main.c: 102:                 send_status_err();
  2795   0055A8  ECED  F04F         	call	_send_status_err	;wreg free
  2796   0055AC                     l18845:
  2797                           
  2798                           ;main.c: 105:             txb_heartbeat();
  2799   0055AC  EC8D  F04B         	call	_txb_heartbeat	;wreg free
  2800   0055B0                     l18847:
  2801                           
  2802                           ;main.c: 99:         while (f_mount(&FatFs, "", 1) != FR_OK) {
  2803   0055B0  0EB6               	movlw	low _FatFs
  2804   0055B2  0100               	movlb	0	; () banked
  2805   0055B4  6FE7               	movwf	f_mount@fs& (0+255),b
  2806   0055B6  0E02               	movlw	high _FatFs
  2807   0055B8  6FE8               	movwf	(f_mount@fs+1)& (0+255),b
  2808   0055BA  0EE4               	movlw	low (STR_9+11)
  2809   0055BC  6FE9               	movwf	f_mount@path& (0+255),b
  2810   0055BE  0EFF               	movlw	high (STR_9+11)
  2811   0055C0  6FEA               	movwf	(f_mount@path+1)& (0+255),b
  2812   0055C2  0E01               	movlw	1
  2813   0055C4  6FEB               	movwf	f_mount@opt& (0+255),b
  2814   0055C6  ECFC  F045         	call	_f_mount	;wreg free
  2815   0055CA  0900               	iorlw	0
  2816   0055CC  A4D8               	btfss	status,2,c
  2817   0055CE  EFEB  F02A         	goto	u23091
  2818   0055D2  EFED  F02A         	goto	u23090
  2819   0055D6                     u23091:
  2820   0055D6  EFA5  F02A         	goto	l18839
  2821   0055DA                     u23090:
  2822   0055DA                     l2208:
  2823   0055DA  0004               	clrwdt		;# 
  2824   0055DC  0E00               	movlw	0
  2825   0055DE  EC4B  F050         	call	_ADCC_GetSingleConversion
  2826                           
  2827                           ;main.c: 115:         if (millis() - last_status_millis > 500) {
  2828   0055E2  EC59  F051         	call	_millis	;wreg free
  2829   0055E6  0101               	movlb	1	; () banked
  2830   0055E8  51B3               	movf	main@last_status_millis& (0+255),w,b
  2831   0055EA  0100               	movlb	0	; () banked
  2832   0055EC  5D60               	subwf	?_millis& (0+255),w,b
  2833   0055EE  0101               	movlb	1	; () banked
  2834   0055F0  6FA6               	movwf	??_main& (0+255),b
  2835   0055F2  51B4               	movf	(main@last_status_millis+1)& (0+255),w,b
  2836   0055F4  0100               	movlb	0	; () banked
  2837   0055F6  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2838   0055F8  0101               	movlb	1	; () banked
  2839   0055FA  6FA7               	movwf	(??_main+1)& (0+255),b
  2840   0055FC  51B5               	movf	(main@last_status_millis+2)& (0+255),w,b
  2841   0055FE  0100               	movlb	0	; () banked
  2842   005600  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2843   005602  0101               	movlb	1	; () banked
  2844   005604  6FA8               	movwf	(??_main+2)& (0+255),b
  2845   005606  51B6               	movf	(main@last_status_millis+3)& (0+255),w,b
  2846   005608  0100               	movlb	0	; () banked
  2847   00560A  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2848   00560C  0101               	movlb	1	; () banked
  2849   00560E  6FA9               	movwf	(??_main+3)& (0+255),b
  2850   005610  51A9               	movf	(??_main+3)& (0+255),w,b
  2851   005612  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2852   005614  E10B               	bnz	u23100
  2853   005616  0EF5               	movlw	245
  2854   005618  5DA6               	subwf	??_main& (0+255),w,b
  2855   00561A  0E01               	movlw	1
  2856   00561C  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2857   00561E  A0D8               	btfss	status,0,c
  2858   005620  EF14  F02B         	goto	u23101
  2859   005624  EF16  F02B         	goto	u23100
  2860   005628                     u23101:
  2861   005628  EF22  F02B         	goto	l18855
  2862   00562C                     u23100:
  2863   00562C                     
  2864                           ; BSR set to: 1
  2865                           ;main.c: 116:             last_status_millis = millis();
  2866   00562C  EC59  F051         	call	_millis	;wreg free
  2867   005630  C060  F1B3         	movff	?_millis,main@last_status_millis
  2868   005634  C061  F1B4         	movff	?_millis+1,main@last_status_millis+1
  2869   005638  C062  F1B5         	movff	?_millis+2,main@last_status_millis+2
  2870   00563C  C063  F1B6         	movff	?_millis+3,main@last_status_millis+3
  2871   005640                     
  2872                           ;main.c: 117:             send_status_ok();
  2873   005640  EC0F  F041         	call	_send_status_ok	;wreg free
  2874   005644                     l18855:
  2875                           
  2876                           ;main.c: 123:         if (millis() - last_accel_millis > 500) {
  2877   005644  EC59  F051         	call	_millis	;wreg free
  2878   005648  0101               	movlb	1	; () banked
  2879   00564A  51AA               	movf	main@last_accel_millis& (0+255),w,b
  2880   00564C  0100               	movlb	0	; () banked
  2881   00564E  5D60               	subwf	?_millis& (0+255),w,b
  2882   005650  0101               	movlb	1	; () banked
  2883   005652  6FA6               	movwf	??_main& (0+255),b
  2884   005654  51AB               	movf	(main@last_accel_millis+1)& (0+255),w,b
  2885   005656  0100               	movlb	0	; () banked
  2886   005658  5961               	subwfb	(?_millis+1)& (0+255),w,b
  2887   00565A  0101               	movlb	1	; () banked
  2888   00565C  6FA7               	movwf	(??_main+1)& (0+255),b
  2889   00565E  51AC               	movf	(main@last_accel_millis+2)& (0+255),w,b
  2890   005660  0100               	movlb	0	; () banked
  2891   005662  5962               	subwfb	(?_millis+2)& (0+255),w,b
  2892   005664  0101               	movlb	1	; () banked
  2893   005666  6FA8               	movwf	(??_main+2)& (0+255),b
  2894   005668  51AD               	movf	(main@last_accel_millis+3)& (0+255),w,b
  2895   00566A  0100               	movlb	0	; () banked
  2896   00566C  5963               	subwfb	(?_millis+3)& (0+255),w,b
  2897   00566E  0101               	movlb	1	; () banked
  2898   005670  6FA9               	movwf	(??_main+3)& (0+255),b
  2899   005672  51A9               	movf	(??_main+3)& (0+255),w,b
  2900   005674  11A8               	iorwf	(??_main+2)& (0+255),w,b
  2901   005676  E10B               	bnz	u23110
  2902   005678  0EF5               	movlw	245
  2903   00567A  5DA6               	subwf	??_main& (0+255),w,b
  2904   00567C  0E01               	movlw	1
  2905   00567E  59A7               	subwfb	(??_main+1)& (0+255),w,b
  2906   005680  A0D8               	btfss	status,0,c
  2907   005682  EF45  F02B         	goto	u23111
  2908   005686  EF47  F02B         	goto	u23110
  2909   00568A                     u23111:
  2910   00568A  EFEB  F02B         	goto	l18873
  2911   00568E                     u23110:
  2912   00568E                     
  2913                           ; BSR set to: 1
  2914                           ;main.c: 124:             fxls_init();
  2915   00568E  ECCA  F04A         	call	_fxls_init	;wreg free
  2916   005692                     
  2917                           ;main.c: 126:             LATB3 = 1;
  2918   005692  86BB               	bsf	16315,3,c	;volatile
  2919                           
  2920                           ;main.c: 127:             while (!data_ready()) {
  2921   005694  EF7D  F02B         	goto	l2211
  2922   005698                     l18861:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;main.c: 128:                 uint8_t sys_mode;;main.c: 129:                 i2c_read_re
      +                          g8(0x31, 0x14, &sys_mode);
  2926   005698  0E14               	movlw	20
  2927   00569A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2928   00569C  0EAE               	movlw	low main@sys_mode
  2929   00569E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2930   0056A0  0E01               	movlw	high main@sys_mode
  2931   0056A2  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2932   0056A4  0E31               	movlw	49
  2933   0056A6  EC85  F04D         	call	_i2c_read_reg8
  2934                           
  2935                           ;main.c: 134:                 uint8_t buf_status;;main.c: 135:                 i2c_read_
      +                          reg8(0x31, 0x0b, &buf_status);
  2936   0056AA  0E0B               	movlw	11
  2937   0056AC  0100               	movlb	0	; () banked
  2938   0056AE  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2939   0056B0  0EAF               	movlw	low main@buf_status
  2940   0056B2  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2941   0056B4  0E01               	movlw	high main@buf_status
  2942   0056B6  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2943   0056B8  0E31               	movlw	49
  2944   0056BA  EC85  F04D         	call	_i2c_read_reg8
  2945                           
  2946                           ;main.c: 140:                 uint8_t status;;main.c: 141:                 i2c_read_reg8
      +                          (0x31, 0x00, &status);
  2947   0056BE  0E00               	movlw	0
  2948   0056C0  0100               	movlb	0	; () banked
  2949   0056C2  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2950   0056C4  0EB0               	movlw	low main@status
  2951   0056C6  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2952   0056C8  0E01               	movlw	high main@status
  2953   0056CA  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2954   0056CC  0E31               	movlw	49
  2955   0056CE  EC85  F04D         	call	_i2c_read_reg8
  2956                           
  2957                           ;main.c: 151:                 uint8_t who;;main.c: 152:                 i2c_read_reg8(0x
      +                          31, 0x13, &who);
  2958   0056D2  0E13               	movlw	19
  2959   0056D4  0100               	movlb	0	; () banked
  2960   0056D6  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2961   0056D8  0EB1               	movlw	low main@who
  2962   0056DA  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2963   0056DC  0E01               	movlw	high main@who
  2964   0056DE  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2965   0056E0  0E31               	movlw	49
  2966   0056E2  EC85  F04D         	call	_i2c_read_reg8
  2967                           
  2968                           ;main.c: 154:                 uint8_t rev;;main.c: 155:                 i2c_read_reg8(0x
      +                          31, 0x12, &rev);
  2969   0056E6  0E12               	movlw	18
  2970   0056E8  0100               	movlb	0	; () banked
  2971   0056EA  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
  2972   0056EC  0EB2               	movlw	low main@rev
  2973   0056EE  6F67               	movwf	i2c_read_reg8@value& (0+255),b
  2974   0056F0  0E01               	movlw	high main@rev
  2975   0056F2  6F68               	movwf	(i2c_read_reg8@value+1)& (0+255),b
  2976   0056F4  0E31               	movlw	49
  2977   0056F6  EC85  F04D         	call	_i2c_read_reg8
  2978   0056FA                     l2211:
  2979                           
  2980                           ;main.c: 127:             while (!data_ready()) {
  2981   0056FA  EC43  F051         	call	_data_ready	;wreg free
  2982   0056FE  0100               	movlb	0	; () banked
  2983   005700  516C               	movf	?_data_ready& (0+255),w,b
  2984   005702  116D               	iorwf	(?_data_ready+1)& (0+255),w,b
  2985   005704  B4D8               	btfsc	status,2,c
  2986   005706  EF87  F02B         	goto	u23121
  2987   00570A  EF89  F02B         	goto	u23120
  2988   00570E                     u23121:
  2989   00570E  EF4C  F02B         	goto	l18861
  2990   005712                     u23120:
  2991   005712                     
  2992                           ; BSR set to: 0
  2993                           ;main.c: 157:             LATB3 = 0;
  2994   005712  96BB               	bcf	16315,3,c	;volatile
  2995   005714                     
  2996                           ; BSR set to: 0
  2997                           ;main.c: 160:             uint16_t x = 0;
  2998   005714  0E00               	movlw	0
  2999   005716  0101               	movlb	1	; () banked
  3000   005718  6FB8               	movwf	(main@x+1)& (0+255),b
  3001   00571A  0E00               	movlw	0
  3002   00571C  6FB7               	movwf	main@x& (0+255),b
  3003                           
  3004                           ;main.c: 161:             uint16_t y = 0;
  3005   00571E  0E00               	movlw	0
  3006   005720  6FBA               	movwf	(main@y+1)& (0+255),b
  3007   005722  0E00               	movlw	0
  3008   005724  6FB9               	movwf	main@y& (0+255),b
  3009                           
  3010                           ;main.c: 162:             uint16_t z = 0;
  3011   005726  0E00               	movlw	0
  3012   005728  6FBC               	movwf	(main@z+1)& (0+255),b
  3013   00572A  0E00               	movlw	0
  3014   00572C  6FBB               	movwf	main@z& (0+255),b
  3015   00572E                     
  3016                           ; BSR set to: 1
  3017                           ;main.c: 165:             fxls_read_accel_data(&x, &y, &z);
  3018   00572E  0EB7               	movlw	low main@x
  3019   005730  0100               	movlb	0	; () banked
  3020   005732  6FAA               	movwf	fxls_read_accel_data@x& (0+255),b
  3021   005734  0E01               	movlw	high main@x
  3022   005736  6FAB               	movwf	(fxls_read_accel_data@x+1)& (0+255),b
  3023   005738  0EB9               	movlw	low main@y
  3024   00573A  6FAC               	movwf	fxls_read_accel_data@y& (0+255),b
  3025   00573C  0E01               	movlw	high main@y
  3026   00573E  6FAD               	movwf	(fxls_read_accel_data@y+1)& (0+255),b
  3027   005740  0EBB               	movlw	low main@z
  3028   005742  6FAE               	movwf	fxls_read_accel_data@z& (0+255),b
  3029   005744  0E01               	movlw	high main@z
  3030   005746  6FAF               	movwf	(fxls_read_accel_data@z+1)& (0+255),b
  3031   005748  ECC0  F02F         	call	_fxls_read_accel_data	;wreg free
  3032   00574C                     
  3033                           ;main.c: 167:             build_analog_data_msg(millis(), SENSOR_MAG_2, x, &msg);
  3034   00574C  EC59  F051         	call	_millis	;wreg free
  3035   005750  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  3036   005754  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  3037   005758  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  3038   00575C  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  3039   005760  0E12               	movlw	18
  3040   005762  0100               	movlb	0	; () banked
  3041   005764  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3042   005766  C1B7  F06D         	movff	main@x,build_analog_data_msg@sensor_data
  3043   00576A  C1B8  F06E         	movff	main@x+1,build_analog_data_msg@sensor_data+1
  3044   00576E  0EBD               	movlw	low main@msg
  3045   005770  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  3046   005772  0E01               	movlw	high main@msg
  3047   005774  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3048   005776  EC43  F04A         	call	_build_analog_data_msg	;wreg free
  3049   00577A                     
  3050                           ;main.c: 169:             build_analog_data_msg(millis(), SENSOR_VELOCITY, y, &msg);
  3051   00577A  EC59  F051         	call	_millis	;wreg free
  3052   00577E  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  3053   005782  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  3054   005786  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  3055   00578A  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  3056   00578E  0E13               	movlw	19
  3057   005790  0100               	movlb	0	; () banked
  3058   005792  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3059   005794  C1B9  F06D         	movff	main@y,build_analog_data_msg@sensor_data
  3060   005798  C1BA  F06E         	movff	main@y+1,build_analog_data_msg@sensor_data+1
  3061   00579C  0EBD               	movlw	low main@msg
  3062   00579E  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  3063   0057A0  0E01               	movlw	high main@msg
  3064   0057A2  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3065   0057A4  EC43  F04A         	call	_build_analog_data_msg	;wreg free
  3066   0057A8                     
  3067                           ;main.c: 171:             build_analog_data_msg(millis(), SENSOR_ARM_BATT_1, z, &msg);
  3068   0057A8  EC59  F051         	call	_millis	;wreg free
  3069   0057AC  C060  F068         	movff	?_millis,build_analog_data_msg@timestamp
  3070   0057B0  C061  F069         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  3071   0057B4  C062  F06A         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  3072   0057B8  C063  F06B         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  3073   0057BC  0E0F               	movlw	15
  3074   0057BE  0100               	movlb	0	; () banked
  3075   0057C0  6F6C               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3076   0057C2  C1BB  F06D         	movff	main@z,build_analog_data_msg@sensor_data
  3077   0057C6  C1BC  F06E         	movff	main@z+1,build_analog_data_msg@sensor_data+1
  3078   0057CA  0EBD               	movlw	low main@msg
  3079   0057CC  6F6F               	movwf	build_analog_data_msg@output& (0+255),b
  3080   0057CE  0E01               	movlw	high main@msg
  3081   0057D0  6F70               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3082   0057D2  EC43  F04A         	call	_build_analog_data_msg	;wreg free
  3083   0057D6                     l18873:
  3084                           
  3085                           ;main.c: 201:         txb_heartbeat();
  3086   0057D6  EC8D  F04B         	call	_txb_heartbeat	;wreg free
  3087   0057DA  EFED  F02A         	goto	l2208
  3088   0057DE  EF0D  F000         	goto	start
  3089   0057E2                     __end_of_main:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _txb_init *****************
  3093 ;; Defined at:
  3094 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  pool            2   15[BANK0 ] PTR void 
  3097 ;;		 -> tx_pool(150), 
  3098 ;;  pool_size       2   17[BANK0 ] unsigned int 
  3099 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  3100 ;;		 -> can_send(1), 
  3101 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()_Bool 
  3102 ;;		 -> can_send_rdy(1), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        8 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 7
  3121 ;; This function calls:
  3122 ;;		_srb_init
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text1
  3129   00A1BC                     __ptext1:
  3130                           	callstack 0
  3131   00A1BC                     _txb_init:
  3132                           	callstack 23
  3133   00A1BC                     
  3134                           ;canlib/util/can_tx_buffer.c: 15: void txb_init(void *pool, size_t pool_size,;canlib/uti
      +                          l/can_tx_buffer.c: 16:               void (*can_send_fp)(const can_msg_t *),;canlib/util
      +                          /can_tx_buffer.c: 17:               _Bool (*can_tx_ready)(void)) {;canlib/util/can_tx_bu
      +                          ffer.c: 18:     ctx.can_send_fp = can_send_fp;
  3135   00A1BC  C073  F1D3         	movff	txb_init@can_send_fp,_ctx
  3136   00A1C0  C074  F1D4         	movff	txb_init@can_send_fp+1,_ctx+1
  3137                           
  3138                           ;canlib/util/can_tx_buffer.c: 19:     ctx.can_tx_ready = can_tx_ready;
  3139   00A1C4  C075  F1D5         	movff	txb_init@can_tx_ready,_ctx+2
  3140   00A1C8  C076  F1D6         	movff	txb_init@can_tx_ready+1,_ctx+3
  3141   00A1CC                     
  3142                           ;canlib/util/can_tx_buffer.c: 20:     srb_init(&buf, pool, pool_size, sizeof(can_msg_t))
      +                          ;
  3143   00A1CC  0EE4               	movlw	low _buf@can_tx_buffer$F1072
  3144   00A1CE  0100               	movlb	0	; () banked
  3145   00A1D0  6F67               	movwf	srb_init@ctx& (0+255),b
  3146   00A1D2  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3147   00A1D4  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  3148   00A1D6  C06F  F069         	movff	txb_init@pool,srb_init@pool
  3149   00A1DA  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  3150   00A1DE  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  3151   00A1E2  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  3152   00A1E6  0E00               	movlw	0
  3153   00A1E8  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  3154   00A1EA  0E0B               	movlw	11
  3155   00A1EC  6F6D               	movwf	srb_init@element_size& (0+255),b
  3156   00A1EE  EC0C  F04B         	call	_srb_init	;wreg free
  3157   00A1F2  0012               	return		;funcret
  3158   00A1F4                     __end_of_txb_init:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _srb_init *****************
  3162 ;; Defined at:
  3163 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  ctx             2    7[BANK0 ] PTR struct .
  3166 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3167 ;;  pool            2    9[BANK0 ] PTR void 
  3168 ;;		 -> tx_pool(150), 
  3169 ;;  pool_size       2   11[BANK0 ] unsigned int 
  3170 ;;  element_size    2   13[BANK0 ] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        8 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 6
  3189 ;; This function calls:
  3190 ;;		___lwdiv
  3191 ;; This function is called by:
  3192 ;;		_txb_init
  3193 ;;		_rcvb_init
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text2
  3198   009618                     __ptext2:
  3199                           	callstack 0
  3200   009618                     _srb_init:
  3201                           	callstack 23
  3202   009618                     
  3203                           ;canlib/util/safe_ring_buffer.c: 14: void srb_init(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 15:               void *pool,;canlib/util/safe_ring_buffer.c: 16:            
      +                             size_t pool_size,;canlib/util/safe_ring_buffer.c: 17:               size_t element_si
      +                          ze);canlib/util/safe_ring_buffer.c: 18: {;canlib/util/safe_ring_buffer.c: 19:     ctx->m
      +                          emory_pool = pool;
  3204   009618  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  3205   00961E  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  3206   009624  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  3207   00962A  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  3208   009630                     
  3209                           ;canlib/util/safe_ring_buffer.c: 20:     ctx->element_size = element_size;
  3210   009630  0100               	movlb	0	; () banked
  3211   009632  EE20 F002          	lfsr	2,2
  3212   009636  5167               	movf	srb_init@ctx& (0+255),w,b
  3213   009638  26D9               	addwf	fsr2l,f,c
  3214   00963A  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3215   00963C  22DA               	addwfc	fsr2h,f,c
  3216   00963E  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  3217   009644  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  3218   00964A                     
  3219                           ; BSR set to: 0
  3220                           ;canlib/util/safe_ring_buffer.c: 21:     ctx->max_elements = (pool_size / (element_size)
      +                          );
  3221   00964A  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  3222   00964E  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  3223   009652  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  3224   009656  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  3225   00965A  ECCB  F04B         	call	___lwdiv	;wreg free
  3226   00965E  0100               	movlb	0	; () banked
  3227   009660  EE20 F004          	lfsr	2,4
  3228   009664  5167               	movf	srb_init@ctx& (0+255),w,b
  3229   009666  26D9               	addwf	fsr2l,f,c
  3230   009668  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3231   00966A  22DA               	addwfc	fsr2h,f,c
  3232   00966C  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  3233   009672  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  3234   009678                     
  3235                           ; BSR set to: 0
  3236                           ;canlib/util/safe_ring_buffer.c: 22:     ctx->rd_idx = 0;
  3237   009678  EE20 F006          	lfsr	2,6
  3238   00967C  5167               	movf	srb_init@ctx& (0+255),w,b
  3239   00967E  26D9               	addwf	fsr2l,f,c
  3240   009680  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3241   009682  22DA               	addwfc	fsr2h,f,c
  3242   009684  6ADE               	clrf	postinc2,c
  3243   009686  6ADD               	clrf	postdec2,c
  3244   009688                     
  3245                           ; BSR set to: 0
  3246                           ;canlib/util/safe_ring_buffer.c: 23:     ctx->wr_idx = 0;
  3247   009688  EE20 F008          	lfsr	2,8
  3248   00968C  5167               	movf	srb_init@ctx& (0+255),w,b
  3249   00968E  26D9               	addwf	fsr2l,f,c
  3250   009690  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  3251   009692  22DA               	addwfc	fsr2h,f,c
  3252   009694  6ADE               	clrf	postinc2,c
  3253   009696  6ADD               	clrf	postdec2,c
  3254   009698                     
  3255                           ; BSR set to: 0
  3256   009698  0012               	return		;funcret
  3257   00969A                     __end_of_srb_init:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function ___lwdiv *****************
  3261 ;; Defined at:
  3262 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  dividend        2    0[BANK0 ] unsigned int 
  3265 ;;  divisor         2    2[BANK0 ] unsigned int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  quotient        2    5[BANK0 ] unsigned int 
  3268 ;;  counter         1    4[BANK0 ] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2    0[BANK0 ] unsigned int 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        7 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 5
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_srb_init
  3289 ;;		_read_flow_sensor_data
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text3
  3294   009796                     __ptext3:
  3295                           	callstack 0
  3296   009796                     ___lwdiv:
  3297                           	callstack 23
  3298   009796  0E00               	movlw	0
  3299   009798  0100               	movlb	0	; () banked
  3300   00979A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3301   00979C  0E00               	movlw	0
  3302   00979E  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3303   0097A0                     
  3304                           ; BSR set to: 0
  3305   0097A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3306   0097A2  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3307   0097A4  B4D8               	btfsc	status,2,c
  3308   0097A6  EFD7  F04B         	goto	u20871
  3309   0097AA  EFD9  F04B         	goto	u20870
  3310   0097AE                     u20871:
  3311   0097AE  EF01  F04C         	goto	l2764
  3312   0097B2                     u20870:
  3313   0097B2                     
  3314                           ; BSR set to: 0
  3315   0097B2  0E01               	movlw	1
  3316   0097B4  6F64               	movwf	___lwdiv@counter& (0+255),b
  3317   0097B6  EFE1  F04B         	goto	l16911
  3318   0097BA                     l16909:
  3319                           
  3320                           ; BSR set to: 0
  3321   0097BA  90D8               	bcf	status,0,c
  3322   0097BC  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3323   0097BE  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3324   0097C0  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3325   0097C2                     l16911:
  3326                           
  3327                           ; BSR set to: 0
  3328   0097C2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3329   0097C4  EFE6  F04B         	goto	u20881
  3330   0097C8  EFE8  F04B         	goto	u20880
  3331   0097CC                     u20881:
  3332   0097CC  EFDD  F04B         	goto	l16909
  3333   0097D0                     u20880:
  3334   0097D0                     l16913:
  3335                           
  3336                           ; BSR set to: 0
  3337   0097D0  90D8               	bcf	status,0,c
  3338   0097D2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3339   0097D4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3340   0097D6                     
  3341                           ; BSR set to: 0
  3342   0097D6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3343   0097D8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3344   0097DA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3345   0097DC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3346   0097DE  A0D8               	btfss	status,0,c
  3347   0097E0  EFF4  F04B         	goto	u20891
  3348   0097E4  EFF6  F04B         	goto	u20890
  3349   0097E8                     u20891:
  3350   0097E8  EFFB  F04B         	goto	l16921
  3351   0097EC                     u20890:
  3352   0097EC                     
  3353                           ; BSR set to: 0
  3354   0097EC  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3355   0097EE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3356   0097F0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3357   0097F2  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3358   0097F4                     
  3359                           ; BSR set to: 0
  3360   0097F4  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3361   0097F6                     l16921:
  3362                           
  3363                           ; BSR set to: 0
  3364   0097F6  90D8               	bcf	status,0,c
  3365   0097F8  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3366   0097FA  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3367   0097FC                     
  3368                           ; BSR set to: 0
  3369   0097FC  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3370   0097FE  EFE8  F04B         	goto	l16913
  3371   009802                     l2764:
  3372                           
  3373                           ; BSR set to: 0
  3374   009802  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3375   009806  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3376   00980A                     
  3377                           ; BSR set to: 0
  3378   00980A  0012               	return		;funcret
  3379   00980C                     __end_of___lwdiv:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _txb_heartbeat *****************
  3383 ;; Defined at:
  3384 ;;		line 31 in file "canlib/util/can_tx_buffer.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  msg_sent       11   21[BANK0 ] struct .
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:       11 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 8
  3405 ;; This function calls:
  3406 ;;		_can_send
  3407 ;;		_can_send_rdy
  3408 ;;		_srb_is_empty
  3409 ;;		_srb_pop
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text4
  3416   00971A                     __ptext4:
  3417                           	callstack 0
  3418   00971A                     _txb_heartbeat:
  3419                           	callstack 22
  3420   00971A                     
  3421                           ;canlib/util/can_tx_buffer.c: 32:     if (!srb_is_empty(&buf)) {
  3422   00971A  0EE4               	movlw	low _buf@can_tx_buffer$F1072
  3423   00971C  0100               	movlb	0	; () banked
  3424   00971E  6F60               	movwf	srb_is_empty@ctx& (0+255),b
  3425   009720  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3426   009722  6F61               	movwf	(srb_is_empty@ctx+1)& (0+255),b
  3427   009724  EC2D  F050         	call	_srb_is_empty	;wreg free
  3428   009728  0900               	iorlw	0
  3429   00972A  A4D8               	btfss	status,2,c
  3430   00972C  EF9A  F04B         	goto	u21911
  3431   009730  EF9C  F04B         	goto	u21910
  3432   009734                     u21911:
  3433   009734  EFCA  F04B         	goto	l192
  3434   009738                     u21910:
  3435   009738                     
  3436                           ;canlib/util/can_tx_buffer.c: 33:         if ((*(ctx.can_tx_ready))()) {
  3437   009738  D802               	call	u21928
  3438   00973A  EFA9  F04B         	goto	u21929
  3439   00973E                     u21928:
  3440   00973E  0005               	push	
  3441   009740  6EFA               	movwf	pclath,c
  3442   009742  0101               	movlb	1	; () banked
  3443   009744  51D5               	movf	(_ctx+2)& (0+255),w,b
  3444   009746  6EFD               	movwf	tosl,c
  3445   009748  51D6               	movf	(_ctx+3)& (0+255),w,b
  3446   00974A  6EFE               	movwf	tosh,c
  3447   00974C  6AFF               	clrf	tosu,c
  3448   00974E  50FA               	movf	pclath,w,c
  3449   009750  0012               	return		;indir
  3450   009752                     u21929:
  3451   009752  0900               	iorlw	0
  3452   009754  B4D8               	btfsc	status,2,c
  3453   009756  EFAF  F04B         	goto	u21931
  3454   00975A  EFB1  F04B         	goto	u21930
  3455   00975E                     u21931:
  3456   00975E  EFCA  F04B         	goto	l192
  3457   009762                     u21930:
  3458   009762                     
  3459                           ;canlib/util/can_tx_buffer.c: 34:             can_msg_t msg_sent;;canlib/util/can_tx_buf
      +                          fer.c: 35:             srb_pop(&buf, &msg_sent);
  3460   009762  0EE4               	movlw	low _buf@can_tx_buffer$F1072
  3461   009764  0100               	movlb	0	; () banked
  3462   009766  6F6C               	movwf	srb_pop@ctx& (0+255),b
  3463   009768  0E01               	movlw	high _buf@can_tx_buffer$F1072
  3464   00976A  6F6D               	movwf	(srb_pop@ctx+1)& (0+255),b
  3465   00976C  0E75               	movlw	low txb_heartbeat@msg_sent
  3466   00976E  6F6E               	movwf	srb_pop@element& (0+255),b
  3467   009770  EC8B  F045         	call	_srb_pop	;wreg free
  3468   009774                     
  3469                           ;canlib/util/can_tx_buffer.c: 36:             (*(ctx.can_send_fp))(&msg_sent);
  3470   009774  0E75               	movlw	low txb_heartbeat@msg_sent
  3471   009776  0100               	movlb	0	; () banked
  3472   009778  6F6B               	movwf	can_send@message& (0+255),b
  3473   00977A  D802               	call	u21948
  3474   00977C  EFCA  F04B         	goto	u21949
  3475   009780                     u21948:
  3476   009780  0005               	push	
  3477   009782  6EFA               	movwf	pclath,c
  3478   009784  0101               	movlb	1	; () banked
  3479   009786  51D3               	movf	_ctx& (0+255),w,b
  3480   009788  6EFD               	movwf	tosl,c
  3481   00978A  51D4               	movf	(_ctx+1)& (0+255),w,b
  3482   00978C  6EFE               	movwf	tosh,c
  3483   00978E  6AFF               	clrf	tosu,c
  3484   009790  50FA               	movf	pclath,w,c
  3485   009792  0012               	return		;indir
  3486   009794                     u21949:
  3487   009794                     l192:
  3488   009794  0012               	return		;funcret
  3489   009796                     __end_of_txb_heartbeat:
  3490                           	callstack 0
  3491                           
  3492 ;; *************** function _srb_pop *****************
  3493 ;; Defined at:
  3494 ;;		line 58 in file "canlib/util/safe_ring_buffer.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  ctx             2   12[BANK0 ] PTR struct .
  3497 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3498 ;;  element         1   14[BANK0 ] PTR void 
  3499 ;;		 -> txb_heartbeat@msg_sent(11), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  offset          2   19[BANK0 ] unsigned int 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      _Bool 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3511 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;Total ram usage:        9 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 7
  3518 ;; This function calls:
  3519 ;;		_get_offset_bytes
  3520 ;;		_memcpy
  3521 ;;		_srb_is_empty
  3522 ;; This function is called by:
  3523 ;;		_txb_heartbeat
  3524 ;;		_rcvb_pop_message
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text5
  3529   008B16                     __ptext5:
  3530                           	callstack 0
  3531   008B16                     _srb_pop:
  3532                           	callstack 22
  3533   008B16                     
  3534                           ;canlib/util/safe_ring_buffer.c: 58: _Bool srb_pop(srb_ctx_t *ctx,;canlib/util/safe_ring
      +                          _buffer.c: 59:              void *element);canlib/util/safe_ring_buffer.c: 60: {;canlib/
      +                          util/safe_ring_buffer.c: 61:     if (srb_is_empty(ctx)) {
  3535   008B16  C06C  F060         	movff	srb_pop@ctx,srb_is_empty@ctx
  3536   008B1A  C06D  F061         	movff	srb_pop@ctx+1,srb_is_empty@ctx+1
  3537   008B1E  EC2D  F050         	call	_srb_is_empty	;wreg free
  3538   008B22  0900               	iorlw	0
  3539   008B24  B4D8               	btfsc	status,2,c
  3540   008B26  EF97  F045         	goto	u20971
  3541   008B2A  EF99  F045         	goto	u20970
  3542   008B2E                     u20971:
  3543   008B2E  EF9C  F045         	goto	l16979
  3544   008B32                     u20970:
  3545   008B32                     
  3546                           ;canlib/util/safe_ring_buffer.c: 62:         return 0;
  3547   008B32  0E00               	movlw	0
  3548   008B34  EFFB  F045         	goto	l224
  3549   008B38                     l16979:
  3550                           
  3551                           ;canlib/util/safe_ring_buffer.c: 64:     size_t offset = get_offset_bytes(ctx, ctx->rd_i
      +                          dx);
  3552   008B38  C06C  F066         	movff	srb_pop@ctx,get_offset_bytes@ctx
  3553   008B3C  C06D  F067         	movff	srb_pop@ctx+1,get_offset_bytes@ctx+1
  3554   008B40  0100               	movlb	0	; () banked
  3555   008B42  EE20 F006          	lfsr	2,6
  3556   008B46  516C               	movf	srb_pop@ctx& (0+255),w,b
  3557   008B48  26D9               	addwf	fsr2l,f,c
  3558   008B4A  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3559   008B4C  22DA               	addwfc	fsr2h,f,c
  3560   008B4E  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  3561   008B54  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  3562   008B5A  EC4C  F04E         	call	_get_offset_bytes	;wreg free
  3563   008B5E  C066  F073         	movff	?_get_offset_bytes,srb_pop@offset
  3564   008B62  C067  F074         	movff	?_get_offset_bytes+1,srb_pop@offset+1
  3565   008B66                     
  3566                           ;canlib/util/safe_ring_buffer.c: 65:     memcpy(element, ((uint8_t *)ctx->memory_pool) +
      +                           offset, ctx->element_size);
  3567   008B66  C06E  F060         	movff	srb_pop@element,memcpy@d1
  3568   008B6A  0100               	movlb	0	; () banked
  3569   008B6C  6B61               	clrf	(memcpy@d1+1)& (0+255),b
  3570   008B6E  0060  F1B3  FFD9   	movff	srb_pop@ctx,fsr2l
  3571   008B74  0060  F1B7  FFDA   	movff	srb_pop@ctx+1,fsr2h
  3572   008B7A  006F FF78  F06F    	movff	postinc2,??_srb_pop
  3573   008B80  006F FF74  F070    	movff	postdec2,??_srb_pop+1
  3574   008B86  5173               	movf	srb_pop@offset& (0+255),w,b
  3575   008B88  256F               	addwf	??_srb_pop& (0+255),w,b
  3576   008B8A  6F62               	movwf	memcpy@s1& (0+255),b
  3577   008B8C  5174               	movf	(srb_pop@offset+1)& (0+255),w,b
  3578   008B8E  2170               	addwfc	(??_srb_pop+1)& (0+255),w,b
  3579   008B90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3580   008B92  EE20 F002          	lfsr	2,2
  3581   008B96  516C               	movf	srb_pop@ctx& (0+255),w,b
  3582   008B98  26D9               	addwf	fsr2l,f,c
  3583   008B9A  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3584   008B9C  22DA               	addwfc	fsr2h,f,c
  3585   008B9E  006F FF78  F064    	movff	postinc2,memcpy@n
  3586   008BA4  006F FF74  F065    	movff	postdec2,memcpy@n+1
  3587   008BAA  EC7B  F04E         	call	_memcpy	;wreg free
  3588   008BAE                     
  3589                           ;canlib/util/safe_ring_buffer.c: 66:     if ( ++(ctx->rd_idx) >= ctx->max_elements) {
  3590   008BAE  0100               	movlb	0	; () banked
  3591   008BB0  EE20 F004          	lfsr	2,4
  3592   008BB4  516C               	movf	srb_pop@ctx& (0+255),w,b
  3593   008BB6  26D9               	addwf	fsr2l,f,c
  3594   008BB8  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3595   008BBA  22DA               	addwfc	fsr2h,f,c
  3596   008BBC  EE10 F006          	lfsr	1,6
  3597   008BC0  516C               	movf	srb_pop@ctx& (0+255),w,b
  3598   008BC2  26E1               	addwf	fsr1l,f,c
  3599   008BC4  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3600   008BC6  22E2               	addwfc	fsr1h,f,c
  3601   008BC8  2AE6               	incf	postinc1,f,c
  3602   008BCA  0E00               	movlw	0
  3603   008BCC  22E5               	addwfc	postdec1,f,c
  3604   008BCE  50DE               	movf	postinc2,w,c
  3605   008BD0  5CE6               	subwf	postinc1,w,c
  3606   008BD2  50DE               	movf	postinc2,w,c
  3607   008BD4  58E6               	subwfb	postinc1,w,c
  3608   008BD6  A0D8               	btfss	status,0,c
  3609   008BD8  EFF0  F045         	goto	u20981
  3610   008BDC  EFF2  F045         	goto	u20980
  3611   008BE0                     u20981:
  3612   008BE0  EFFA  F045         	goto	l16987
  3613   008BE4                     u20980:
  3614   008BE4                     
  3615                           ; BSR set to: 0
  3616                           ;canlib/util/safe_ring_buffer.c: 67:         ctx->rd_idx = 0;
  3617   008BE4  EE20 F006          	lfsr	2,6
  3618   008BE8  516C               	movf	srb_pop@ctx& (0+255),w,b
  3619   008BEA  26D9               	addwf	fsr2l,f,c
  3620   008BEC  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  3621   008BEE  22DA               	addwfc	fsr2h,f,c
  3622   008BF0  6ADE               	clrf	postinc2,c
  3623   008BF2  6ADD               	clrf	postdec2,c
  3624   008BF4                     l16987:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;canlib/util/safe_ring_buffer.c: 69:     return 1;
  3628   008BF4  0E01               	movlw	1
  3629   008BF6                     l224:
  3630   008BF6  0012               	return		;funcret
  3631   008BF8                     __end_of_srb_pop:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _srb_is_empty *****************
  3635 ;; Defined at:
  3636 ;;		line 49 in file "canlib/util/safe_ring_buffer.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  ctx             2    0[BANK0 ] PTR const struct .
  3639 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      _Bool 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 5
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_txb_heartbeat
  3662 ;;		_srb_pop
  3663 ;;		_rcvb_is_empty
  3664 ;;		_srb_peek
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text6
  3669   00A05A                     __ptext6:
  3670                           	callstack 0
  3671   00A05A                     _srb_is_empty:
  3672                           	callstack 23
  3673   00A05A                     
  3674                           ;canlib/util/safe_ring_buffer.c: 49: _Bool srb_is_empty(const srb_ctx_t *ctx);canlib/uti
      +                          l/safe_ring_buffer.c: 50: {;canlib/util/safe_ring_buffer.c: 51:     if (ctx->wr_idx == c
      +                          tx->rd_idx) {
  3675   00A05A  0100               	movlb	0	; () banked
  3676   00A05C  EE20 F006          	lfsr	2,6
  3677   00A060  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  3678   00A062  26D9               	addwf	fsr2l,f,c
  3679   00A064  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  3680   00A066  22DA               	addwfc	fsr2h,f,c
  3681   00A068  EE10 F008          	lfsr	1,8
  3682   00A06C  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  3683   00A06E  26E1               	addwf	fsr1l,f,c
  3684   00A070  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  3685   00A072  22E2               	addwfc	fsr1h,f,c
  3686   00A074  50DE               	movf	postinc2,w,c
  3687   00A076  18E6               	xorwf	postinc1,w,c
  3688   00A078  E107               	bnz	u19901
  3689   00A07A  50DE               	movf	postinc2,w,c
  3690   00A07C  18E6               	xorwf	postinc1,w,c
  3691   00A07E  A4D8               	btfss	status,2,c
  3692   00A080  EF44  F050         	goto	u19901
  3693   00A084  EF46  F050         	goto	u19900
  3694   00A088                     u19901:
  3695   00A088  EF49  F050         	goto	l16343
  3696   00A08C                     u19900:
  3697   00A08C                     
  3698                           ; BSR set to: 0
  3699                           ;canlib/util/safe_ring_buffer.c: 52:         return 1;
  3700   00A08C  0E01               	movlw	1
  3701   00A08E  EF4A  F050         	goto	l219
  3702   00A092                     l16343:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;canlib/util/safe_ring_buffer.c: 54:         return 0;
  3706   00A092  0E00               	movlw	0
  3707   00A094                     l219:
  3708                           
  3709                           ; BSR set to: 0
  3710   00A094  0012               	return		;funcret
  3711   00A096                     __end_of_srb_is_empty:
  3712                           	callstack 0
  3713                           
  3714 ;; *************** function _can_send_rdy *****************
  3715 ;; Defined at:
  3716 ;;		line 114 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      _Bool 
  3723 ;; Registers used:
  3724 ;;		wreg
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 5
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;;		_txb_heartbeat
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text7
  3746   00A476                     __ptext7:
  3747                           	callstack 0
  3748   00A476                     _can_send_rdy:
  3749                           	callstack 24
  3750   00A476                     
  3751                           ;canlib/pic18f26k83/pic18f26k83_can.c: 115:     return TXB0CONbits.TXREQ == 0;
  3752   00A476  0137               	movlb	55	; () banked
  3753   00A478  A7E0               	btfss	224,3,b	;volatile
  3754   00A47A  EF41  F052         	goto	u20951
  3755   00A47E  EF44  F052         	goto	u20950
  3756   00A482                     u20951:
  3757   00A482  0E01               	movlw	1
  3758   00A484  EF45  F052         	goto	u20960
  3759   00A488                     u20950:
  3760   00A488  0E00               	movlw	0
  3761   00A48A                     u20960:
  3762   00A48A                     
  3763                           ; BSR set to: 55
  3764   00A48A  0012               	return		;funcret
  3765   00A48C                     __end_of_can_send_rdy:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _can_send *****************
  3769 ;; Defined at:
  3770 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  message         1   11[BANK0 ] PTR const struct .
  3773 ;;		 -> txb_heartbeat@msg_sent(11), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3785 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 6
  3792 ;; This function calls:
  3793 ;;		_memcpy
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;;		_txb_heartbeat
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text8
  3801   008848                     __ptext8:
  3802                           	callstack 0
  3803   008848                     _can_send:
  3804                           	callstack 23
  3805   008848                     
  3806                           ;canlib/pic18f26k83/pic18f26k83_can.c: 87:     if (TXB0CONbits.TXREQ != 0) {
  3807   008848  0137               	movlb	55	; () banked
  3808   00884A  A7E0               	btfss	224,3,b	;volatile
  3809   00884C  EF2A  F044         	goto	u20911
  3810   008850  EF2C  F044         	goto	u20910
  3811   008854                     u20911:
  3812   008854  EF2E  F044         	goto	l16939
  3813   008858                     u20910:
  3814   008858  EFA1  F044         	goto	l75
  3815   00885C                     l16939:
  3816                           
  3817                           ; BSR set to: 55
  3818                           ;canlib/pic18f26k83/pic18f26k83_can.c: 92:     if(message->data_len > 8 || message->sid 
      +                          > 0x7FF) {
  3819   00885C  0100               	movlb	0	; () banked
  3820   00885E  516B               	movf	can_send@message& (0+255),w,b
  3821   008860  6ED9               	movwf	fsr2l,c
  3822   008862  6ADA               	clrf	fsr2h,c
  3823   008864  0E02               	movlw	2
  3824   008866  26D9               	addwf	fsr2l,f,c
  3825   008868  0E09               	movlw	9
  3826   00886A  60DF               	cpfslt	indf2,c
  3827   00886C  EF3A  F044         	goto	u20921
  3828   008870  EF3C  F044         	goto	u20920
  3829   008874                     u20921:
  3830   008874  EFA1  F044         	goto	l75
  3831   008878                     u20920:
  3832   008878                     
  3833                           ; BSR set to: 0
  3834   008878  516B               	movf	can_send@message& (0+255),w,b
  3835   00887A  6ED9               	movwf	fsr2l,c
  3836   00887C  6ADA               	clrf	fsr2h,c
  3837   00887E  52DE               	movf	postinc2,f,c
  3838   008880  0E08               	movlw	8
  3839   008882  5CDE               	subwf	postinc2,w,c
  3840   008884  A0D8               	btfss	status,0,c
  3841   008886  EF47  F044         	goto	u20931
  3842   00888A  EF49  F044         	goto	u20930
  3843   00888E                     u20931:
  3844   00888E  EF4B  F044         	goto	l16943
  3845   008892                     u20930:
  3846   008892  EFA1  F044         	goto	l75
  3847   008896                     l16943:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;canlib/pic18f26k83/pic18f26k83_can.c: 97:     TXB0CONbits.TXPRI = 0;
  3851   008896  0EFC               	movlw	-4
  3852   008898  0137               	movlb	55	; () banked
  3853   00889A  17E0               	andwf	224,f,b	;volatile
  3854   00889C                     
  3855                           ; BSR set to: 55
  3856                           ;canlib/pic18f26k83/pic18f26k83_can.c: 98:     TXB0SIDH = ((message->sid) >> 3);
  3857   00889C  0100               	movlb	0	; () banked
  3858   00889E  516B               	movf	can_send@message& (0+255),w,b
  3859   0088A0  6ED9               	movwf	fsr2l,c
  3860   0088A2  6ADA               	clrf	fsr2h,c
  3861   0088A4  006F FF78  F06C    	movff	postinc2,??_can_send
  3862   0088AA  006F FF74  F06D    	movff	postdec2,??_can_send+1
  3863   0088B0  90D8               	bcf	status,0,c
  3864   0088B2  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3865   0088B4  336C               	rrcf	??_can_send& (0+255),f,b
  3866   0088B6  90D8               	bcf	status,0,c
  3867   0088B8  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3868   0088BA  336C               	rrcf	??_can_send& (0+255),f,b
  3869   0088BC  90D8               	bcf	status,0,c
  3870   0088BE  336D               	rrcf	(??_can_send+1)& (0+255),f,b
  3871   0088C0  336C               	rrcf	??_can_send& (0+255),f,b
  3872   0088C2  516C               	movf	??_can_send& (0+255),w,b
  3873   0088C4  0137               	movlb	55	; () banked
  3874   0088C6  6FE1               	movwf	225,b	;volatile
  3875   0088C8                     
  3876                           ; BSR set to: 55
  3877                           ;canlib/pic18f26k83/pic18f26k83_can.c: 99:     TXB0SIDL = (((message->sid) & 0x7) << 5);
  3878   0088C8  0100               	movlb	0	; () banked
  3879   0088CA  516B               	movf	can_send@message& (0+255),w,b
  3880   0088CC  6ED9               	movwf	fsr2l,c
  3881   0088CE  6ADA               	clrf	fsr2h,c
  3882   0088D0  50DF               	movf	indf2,w,c
  3883   0088D2  6F6C               	movwf	??_can_send& (0+255),b
  3884   0088D4  0E07               	movlw	7
  3885   0088D6  176C               	andwf	??_can_send& (0+255),f,b
  3886   0088D8  0E05               	movlw	5
  3887   0088DA  6F6D               	movwf	(??_can_send+1)& (0+255),b
  3888   0088DC                     u20945:
  3889   0088DC  90D8               	bcf	status,0,c
  3890   0088DE  376C               	rlcf	??_can_send& (0+255),f,b
  3891   0088E0  2F6D               	decfsz	(??_can_send+1)& (0+255),f,b
  3892   0088E2  EF6E  F044         	goto	u20945
  3893   0088E6  516C               	movf	??_can_send& (0+255),w,b
  3894   0088E8  0137               	movlb	55	; () banked
  3895   0088EA  6FE2               	movwf	226,b	;volatile
  3896   0088EC                     
  3897                           ; BSR set to: 55
  3898                           ;canlib/pic18f26k83/pic18f26k83_can.c: 102:     TXB0DLCbits.TXRTR = 0;
  3899   0088EC  9DE5               	bcf	229,6,b	;volatile
  3900   0088EE                     
  3901                           ; BSR set to: 55
  3902                           ;canlib/pic18f26k83/pic18f26k83_can.c: 104:     TXB0DLCbits.DLC = message->data_len;
  3903   0088EE  0100               	movlb	0	; () banked
  3904   0088F0  516B               	movf	can_send@message& (0+255),w,b
  3905   0088F2  6ED9               	movwf	fsr2l,c
  3906   0088F4  6ADA               	clrf	fsr2h,c
  3907   0088F6  0E02               	movlw	2
  3908   0088F8  26D9               	addwf	fsr2l,f,c
  3909   0088FA  50DF               	movf	indf2,w,c
  3910   0088FC  6F6C               	movwf	??_can_send& (0+255),b
  3911   0088FE  0137               	movlb	55	; () banked
  3912   008900  51E5               	movf	229,w,b	;volatile
  3913   008902  0100               	movlb	0	; () banked
  3914   008904  196C               	xorwf	??_can_send& (0+255),w,b
  3915   008906  0BF0               	andlw	-16
  3916   008908  196C               	xorwf	??_can_send& (0+255),w,b
  3917   00890A  0137               	movlb	55	; () banked
  3918   00890C  6FE5               	movwf	229,b	;volatile
  3919   00890E                     
  3920                           ; BSR set to: 55
  3921                           ;canlib/pic18f26k83/pic18f26k83_can.c: 108:     memcpy((void*) &TXB0D0, message->data, m
      +                          essage->data_len);
  3922   00890E  0EE6               	movlw	230
  3923   008910  0100               	movlb	0	; () banked
  3924   008912  6F60               	movwf	memcpy@d1& (0+255),b
  3925   008914  0E37               	movlw	55
  3926   008916  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3927   008918  C06B  F06C         	movff	can_send@message,??_can_send
  3928   00891C  0E03               	movlw	3
  3929   00891E  276C               	addwf	??_can_send& (0+255),f,b
  3930   008920  C06C  F062         	movff	??_can_send,memcpy@s1
  3931   008924  6B63               	clrf	(memcpy@s1+1)& (0+255),b
  3932   008926  516B               	movf	can_send@message& (0+255),w,b
  3933   008928  6ED9               	movwf	fsr2l,c
  3934   00892A  6ADA               	clrf	fsr2h,c
  3935   00892C  0E02               	movlw	2
  3936   00892E  26D9               	addwf	fsr2l,f,c
  3937   008930  50DF               	movf	indf2,w,c
  3938   008932  6F6D               	movwf	(??_can_send+1)& (0+255),b
  3939   008934  516D               	movf	(??_can_send+1)& (0+255),w,b
  3940   008936  6F64               	movwf	memcpy@n& (0+255),b
  3941   008938  6B65               	clrf	(memcpy@n+1)& (0+255),b
  3942   00893A  EC7B  F04E         	call	_memcpy	;wreg free
  3943   00893E                     
  3944                           ;canlib/pic18f26k83/pic18f26k83_can.c: 111:     TXB0CONbits.TXREQ = 1;
  3945   00893E  0137               	movlb	55	; () banked
  3946   008940  87E0               	bsf	224,3,b	;volatile
  3947   008942                     l75:
  3948   008942  0012               	return		;funcret
  3949   008944                     __end_of_can_send:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _timer0_init *****************
  3953 ;; Defined at:
  3954 ;;		line 33 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;Total ram usage:        0 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 5
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text9
  3983   00A3D8                     __ptext9:
  3984                           	callstack 0
  3985   00A3D8                     _timer0_init:
  3986                           	callstack 25
  3987   00A3D8                     
  3988                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 34:     PIE3bits.TMR0IE = 1;
  3989   00A3D8  0139               	movlb	57	; () banked
  3990   00A3DA  8F93               	bsf	147,7,b	;volatile
  3991                           
  3992                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 36:     T0CON0bits.EN = 0;
  3993   00A3DC  9EB8               	bcf	184,7,c	;volatile
  3994                           
  3995                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 37:     T0CON0bits.MD16 = 0;
  3996   00A3DE  98B8               	bcf	184,4,c	;volatile
  3997   00A3E0                     
  3998                           ; BSR set to: 57
  3999                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 39:     T0CON0bits.OUTPS = 0;
  4000   00A3E0  0EF0               	movlw	-16
  4001   00A3E2  16B8               	andwf	184,f,c	;volatile
  4002                           
  4003                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 40:     T0CON1bits.CKPS = 0;
  4004   00A3E4  0EF0               	movlw	-16
  4005   00A3E6  16B9               	andwf	185,f,c	;volatile
  4006                           
  4007                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 42:     T0CON1bits.CS = 0x5;
  4008   00A3E8  50B9               	movf	185,w,c	;volatile
  4009   00A3EA  0B1F               	andlw	-225
  4010   00A3EC  09A0               	iorlw	160
  4011   00A3EE  6EB9               	movwf	185,c	;volatile
  4012   00A3F0                     
  4013                           ; BSR set to: 57
  4014                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 43:     T0CON1bits.ASYNC = 0;
  4015   00A3F0  98B9               	bcf	185,4,c	;volatile
  4016   00A3F2                     
  4017                           ; BSR set to: 57
  4018                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 46:     T0CON0bits.EN = 1;
  4019   00A3F2  8EB8               	bsf	184,7,c	;volatile
  4020   00A3F4                     
  4021                           ; BSR set to: 57
  4022   00A3F4  0012               	return		;funcret
  4023   00A3F6                     __end_of_timer0_init:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _send_status_ok *****************
  4027 ;; Defined at:
  4028 ;;		line 243 in file "main.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  board_stat_m   11  155[BANK1 ] struct .
  4033 ;;  time            4  151[BANK1 ] unsigned long 
  4034 ;;  text            3  148[BANK1 ] unsigned char [3]
  4035 ;;  timestamp       3  145[BANK1 ] unsigned char [3]
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;Total ram usage:       21 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 18
  4052 ;; This function calls:
  4053 ;;		_BLUE_LED_TOGGLE
  4054 ;;		_build_board_stat_msg
  4055 ;;		_f_close
  4056 ;;		_f_open
  4057 ;;		_f_write
  4058 ;;		_millis
  4059 ;;		_sprintf
  4060 ;;		_txb_enqueue
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text10
  4067   00821E                     __ptext10:
  4068                           	callstack 0
  4069   00821E                     _send_status_ok:
  4070                           	callstack 12
  4071   00821E                     
  4072                           ;main.c: 244:     can_msg_t board_stat_msg;;main.c: 245:     build_board_stat_msg(millis
      +                          (), E_NOMINAL, ((void*)0), 0, &board_stat_msg);
  4073   00821E  EC59  F051         	call	_millis	;wreg free
  4074   008222  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
  4075   008226  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  4076   00822A  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  4077   00822E  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  4078   008232  0E00               	movlw	0
  4079   008234  0100               	movlb	0	; () banked
  4080   008236  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
  4081   008238  0E00               	movlw	0
  4082   00823A  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
  4083   00823C  0E00               	movlw	0
  4084   00823E  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  4085   008240  0E00               	movlw	0
  4086   008242  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  4087   008244  0E9B               	movlw	low send_status_ok@board_stat_msg
  4088   008246  6F70               	movwf	build_board_stat_msg@output& (0+255),b
  4089   008248  0E01               	movlw	high send_status_ok@board_stat_msg
  4090   00824A  6F71               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  4091   00824C  EC97  F041         	call	_build_board_stat_msg	;wreg free
  4092   008250                     
  4093                           ;main.c: 248:     txb_enqueue(&board_stat_msg);
  4094   008250  0E9B               	movlw	low send_status_ok@board_stat_msg
  4095   008252  0100               	movlb	0	; () banked
  4096   008254  6F76               	movwf	txb_enqueue@msg& (0+255),b
  4097   008256  0E01               	movlw	high send_status_ok@board_stat_msg
  4098   008258  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  4099   00825A  ECA4  F050         	call	_txb_enqueue	;wreg free
  4100   00825E                     
  4101                           ;main.c: 250:     uint32_t time = millis();
  4102   00825E  EC59  F051         	call	_millis	;wreg free
  4103   008262  C060  F197         	movff	?_millis,send_status_ok@time
  4104   008266  C061  F198         	movff	?_millis+1,send_status_ok@time+1
  4105   00826A  C062  F199         	movff	?_millis+2,send_status_ok@time+2
  4106   00826E  C063  F19A         	movff	?_millis+3,send_status_ok@time+3
  4107   008272                     
  4108                           ;main.c: 251:     uint8_t timestamp[3];;main.c: 253:     timestamp[0] = (time >> 16) & 0
      +                          xff;
  4109   008272  C199  F191         	movff	send_status_ok@time+2,send_status_ok@timestamp
  4110   008276                     
  4111                           ;main.c: 254:     timestamp[1] = (time >> 8) & 0xff;
  4112   008276  C198  F192         	movff	send_status_ok@time+1,send_status_ok@timestamp+1
  4113   00827A                     
  4114                           ;main.c: 255:     timestamp[2] = (time >> 0) & 0xff;
  4115   00827A  C197  F193         	movff	send_status_ok@time,send_status_ok@timestamp+2
  4116   00827E                     
  4117                           ;main.c: 257:     char text[3];;main.c: 258:     sprintf(text, "%lud\r\n", time);
  4118   00827E  0E94               	movlw	low send_status_ok@text
  4119   008280  0100               	movlb	0	; () banked
  4120   008282  6F7F               	movwf	sprintf@s& (0+255),b
  4121   008284  0E01               	movlw	high send_status_ok@text
  4122   008286  6F80               	movwf	(sprintf@s+1)& (0+255),b
  4123   008288  0EEE               	movlw	low STR_11
  4124   00828A  6F81               	movwf	sprintf@fmt& (0+255),b
  4125   00828C  0EFF               	movlw	high STR_11
  4126   00828E  6F82               	movwf	(sprintf@fmt+1)& (0+255),b
  4127   008290  C197  F083         	movff	send_status_ok@time,?_sprintf+4
  4128   008294  C198  F084         	movff	send_status_ok@time+1,?_sprintf+5
  4129   008298  C199  F085         	movff	send_status_ok@time+2,?_sprintf+6
  4130   00829C  C19A  F086         	movff	send_status_ok@time+3,?_sprintf+7
  4131   0082A0  ECCB  F04F         	call	_sprintf	;wreg free
  4132   0082A4                     
  4133                           ;main.c: 260:     if (f_open(&Fil, "Data.txt", 0x30 | 0x01 | 0x02) == FR_OK) {
  4134   0082A4  0EE9               	movlw	low _Fil
  4135   0082A6  0101               	movlb	1	; () banked
  4136   0082A8  6F41               	movwf	f_open@fp& (0+255),b
  4137   0082AA  0E04               	movlw	high _Fil
  4138   0082AC  6F42               	movwf	(f_open@fp+1)& (0+255),b
  4139   0082AE  0EE5               	movlw	low STR_8
  4140   0082B0  6F43               	movwf	f_open@path& (0+255),b
  4141   0082B2  0EFF               	movlw	high STR_8
  4142   0082B4  6F44               	movwf	(f_open@path+1)& (0+255),b
  4143   0082B6  0E33               	movlw	51
  4144   0082B8  6F45               	movwf	f_open@mode& (0+255),b
  4145   0082BA  ECA0  F00F         	call	_f_open	;wreg free
  4146   0082BE  0900               	iorlw	0
  4147   0082C0  A4D8               	btfss	status,2,c
  4148   0082C2  EF65  F041         	goto	u22281
  4149   0082C6  EF67  F041         	goto	u22280
  4150   0082CA                     u22281:
  4151   0082CA  EF96  F041         	goto	l2233
  4152   0082CE                     u22280:
  4153   0082CE                     
  4154                           ;main.c: 262:         f_write(&Fil, text, sizeof (text), &bw);
  4155   0082CE  0EE9               	movlw	low _Fil
  4156   0082D0  0101               	movlb	1	; () banked
  4157   0082D2  6F17               	movwf	f_write@fp& (0+255),b
  4158   0082D4  0E04               	movlw	high _Fil
  4159   0082D6  6F18               	movwf	(f_write@fp+1)& (0+255),b
  4160   0082D8  0E94               	movlw	low send_status_ok@text
  4161   0082DA  6F19               	movwf	f_write@buff& (0+255),b
  4162   0082DC  0E01               	movlw	high send_status_ok@text
  4163   0082DE  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  4164   0082E0  0E00               	movlw	0
  4165   0082E2  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  4166   0082E4  0E03               	movlw	3
  4167   0082E6  6F1B               	movwf	f_write@btw& (0+255),b
  4168   0082E8  0EF8               	movlw	low _bw
  4169   0082EA  6F1D               	movwf	f_write@bw& (0+255),b
  4170   0082EC  0E01               	movlw	high _bw
  4171   0082EE  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  4172   0082F0  EC69  F007         	call	_f_write	;wreg free
  4173                           
  4174                           ;main.c: 263:         f_write(&Fil, "\n", 1, &bw);
  4175   0082F4  0EE9               	movlw	low _Fil
  4176   0082F6  0101               	movlb	1	; () banked
  4177   0082F8  6F17               	movwf	f_write@fp& (0+255),b
  4178   0082FA  0E04               	movlw	high _Fil
  4179   0082FC  6F18               	movwf	(f_write@fp+1)& (0+255),b
  4180   0082FE  0EE3               	movlw	low (STR_9+10)
  4181   008300  6F19               	movwf	f_write@buff& (0+255),b
  4182   008302  0EFF               	movlw	high (STR_9+10)
  4183   008304  6F1A               	movwf	(f_write@buff+1)& (0+255),b
  4184   008306  0E00               	movlw	0
  4185   008308  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  4186   00830A  0E01               	movlw	1
  4187   00830C  6F1B               	movwf	f_write@btw& (0+255),b
  4188   00830E  0EF8               	movlw	low _bw
  4189   008310  6F1D               	movwf	f_write@bw& (0+255),b
  4190   008312  0E01               	movlw	high _bw
  4191   008314  6F1E               	movwf	(f_write@bw+1)& (0+255),b
  4192   008316  EC69  F007         	call	_f_write	;wreg free
  4193                           
  4194                           ;main.c: 264:         f_close(&Fil);
  4195   00831A  0EE9               	movlw	low _Fil
  4196   00831C  0100               	movlb	0	; () banked
  4197   00831E  6FDA               	movwf	f_close@fp& (0+255),b
  4198   008320  0E04               	movlw	high _Fil
  4199   008322  6FDB               	movwf	(f_close@fp+1)& (0+255),b
  4200   008324  ECD6  F04E         	call	_f_close	;wreg free
  4201   008328                     
  4202                           ;main.c: 266:         BLUE_LED_TOGGLE();
  4203   008328  EC76  F052         	call	_BLUE_LED_TOGGLE	;wreg free
  4204   00832C                     l2233:
  4205   00832C  0012               	return		;funcret
  4206   00832E                     __end_of_send_status_ok:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _sprintf *****************
  4210 ;; Defined at:
  4211 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  s               2   31[BANK0 ] PTR unsigned char 
  4214 ;;		 -> send_status_ok@text(3), 
  4215 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  4216 ;;		 -> STR_11(7), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  f              12   40[BANK0 ] struct _IO_FILE
  4219 ;;  ret             2    0        int 
  4220 ;;  ap              1   39[BANK0 ] PTR void [1]
  4221 ;;		 -> ?_sprintf(2), 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2   31[BANK0 ] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:       21 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 9
  4238 ;; This function calls:
  4239 ;;		_vfprintf
  4240 ;; This function is called by:
  4241 ;;		_send_status_ok
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text11
  4246   009F96                     __ptext11:
  4247                           	callstack 0
  4248   009F96                     _sprintf:
  4249                           	callstack 20
  4250   009F96  0E83               	movlw	low (?_sprintf+4)
  4251   009F98  0100               	movlb	0	; () banked
  4252   009F9A  6F87               	movwf	sprintf@ap& (0+255),b
  4253   009F9C  C07F  F088         	movff	sprintf@s,sprintf@f
  4254   009FA0  C080  F089         	movff	sprintf@s+1,sprintf@f+1
  4255   009FA4                     
  4256                           ; BSR set to: 0
  4257   009FA4  0E00               	movlw	0
  4258   009FA6  6F8C               	movwf	(sprintf@f+4)& (0+255),b
  4259   009FA8  0E00               	movlw	0
  4260   009FAA  6F8B               	movwf	(sprintf@f+3)& (0+255),b
  4261   009FAC                     
  4262                           ; BSR set to: 0
  4263   009FAC  0E00               	movlw	0
  4264   009FAE  6F93               	movwf	(sprintf@f+11)& (0+255),b
  4265   009FB0  0E00               	movlw	0
  4266   009FB2  6F92               	movwf	(sprintf@f+10)& (0+255),b
  4267   009FB4                     
  4268                           ; BSR set to: 0
  4269   009FB4  0E88               	movlw	low sprintf@f
  4270   009FB6  6F79               	movwf	vfprintf@fp& (0+255),b
  4271   009FB8  C081  F07A         	movff	sprintf@fmt,vfprintf@fmt
  4272   009FBC  C082  F07B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4273   009FC0  0E87               	movlw	low sprintf@ap
  4274   009FC2  6F7C               	movwf	vfprintf@ap& (0+255),b
  4275   009FC4  EC81  F04F         	call	_vfprintf	;wreg free
  4276   009FC8  0100               	movlb	0	; () banked
  4277   009FCA  518B               	movf	(sprintf@f+3)& (0+255),w,b
  4278   009FCC  257F               	addwf	sprintf@s& (0+255),w,b
  4279   009FCE  6ED9               	movwf	fsr2l,c
  4280   009FD0  518C               	movf	(sprintf@f+4)& (0+255),w,b
  4281   009FD2  2180               	addwfc	(sprintf@s+1)& (0+255),w,b
  4282   009FD4  6EDA               	movwf	fsr2h,c
  4283   009FD6  6ADF               	clrf	indf2,c
  4284   009FD8                     
  4285                           ; BSR set to: 0
  4286   009FD8  0012               	return		;funcret
  4287   009FDA                     __end_of_sprintf:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _vfprintf *****************
  4291 ;; Defined at:
  4292 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  4295 ;;		 -> sprintf@f(12), 
  4296 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  4297 ;;		 -> STR_11(7), 
  4298 ;;  ap              1   28[BANK0 ] PTR PTR void 
  4299 ;;		 -> sprintf@ap(1), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  cfmt            2   29[BANK0 ] PTR unsigned char 
  4302 ;;		 -> STR_11(7), 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2   25[BANK0 ] int 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        6 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 8
  4319 ;; This function calls:
  4320 ;;		_vfpfcnvrt
  4321 ;; This function is called by:
  4322 ;;		_sprintf
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text12
  4327   009F02                     __ptext12:
  4328                           	callstack 0
  4329   009F02                     _vfprintf:
  4330                           	callstack 20
  4331   009F02                     
  4332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4333   009F02  C07A  F07D         	movff	vfprintf@fmt,vfprintf@cfmt
  4334   009F06  C07B  F07E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4337   009F0A  EF90  F04F         	goto	l16929
  4338   009F0E                     l16927:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4341   009F0E  C079  F06D         	movff	vfprintf@fp,vfpfcnvrt@fp
  4342   009F12  0E7D               	movlw	low vfprintf@cfmt
  4343   009F14  0100               	movlb	0	; () banked
  4344   009F16  6F6E               	movwf	vfpfcnvrt@fmt& (0+255),b
  4345   009F18  C07C  F06F         	movff	vfprintf@ap,vfpfcnvrt@ap
  4346   009F1C  EC8A  F032         	call	_vfpfcnvrt	;wreg free
  4347   009F20                     l16929:
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4350   009F20  0060  F1F7  FFF6   	movff	vfprintf@cfmt,tblptrl
  4351   009F26  0060  F1FB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4352   009F2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4353   009F2C  6AF8               	clrf	tblptru,c
  4354   009F2E                     	endif
  4355   009F2E                     	if	0	;tblptru may be non-zero
  4356   009F2E                     	endif
  4357   009F2E  0008               	tblrd		*
  4358   009F30  50F5               	movf	tablat,w,c
  4359   009F32  0900               	iorlw	0
  4360   009F34  A4D8               	btfss	status,2,c
  4361   009F36  EF9F  F04F         	goto	u20901
  4362   009F3A  EFA1  F04F         	goto	u20900
  4363   009F3E                     u20901:
  4364   009F3E  EF87  F04F         	goto	l16927
  4365   009F42                     u20900:
  4366   009F42                     
  4367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4368   009F42  0E00               	movlw	0
  4369   009F44  0100               	movlb	0	; () banked
  4370   009F46  6F7A               	movwf	(?_vfprintf+1)& (0+255),b
  4371   009F48  0E00               	movlw	0
  4372   009F4A  6F79               	movwf	?_vfprintf& (0+255),b
  4373   009F4C                     
  4374                           ; BSR set to: 0
  4375   009F4C  0012               	return		;funcret
  4376   009F4E                     __end_of_vfprintf:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _vfpfcnvrt *****************
  4380 ;; Defined at:
  4381 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  4384 ;;		 -> sprintf@f(12), 
  4385 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  4386 ;;		 -> vfprintf@cfmt(2), 
  4387 ;;  ap              1   15[BANK0 ] PTR PTR void 
  4388 ;;		 -> sprintf@ap(1), 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  convarg         4   18[BANK0 ] struct .
  4391 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  4392 ;;		 -> STR_11(7), 
  4393 ;;  c               1   24[BANK0 ] unsigned char 
  4394 ;;  done            1    0        _Bool 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4404 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;Total ram usage:       12 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 7
  4411 ;; This function calls:
  4412 ;;		___lldiv
  4413 ;;		___llmod
  4414 ;;		_fputc
  4415 ;; This function is called by:
  4416 ;;		_vfprintf
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text13
  4421   006514                     __ptext13:
  4422                           	callstack 0
  4423   006514                     _vfpfcnvrt:
  4424                           	callstack 20
  4425   006514                     
  4426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4427   006514  0100               	movlb	0	; () banked
  4428   006516  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4429   006518  6ED9               	movwf	fsr2l,c
  4430   00651A  6ADA               	clrf	fsr2h,c
  4431   00651C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4432   006522  006F FF77 FFF7     	movff	postdec2,tblptrh
  4433   006528                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4434   006528  6AF8               	clrf	tblptru,c
  4435   00652A                     	endif
  4436   00652A                     	if	0	;tblptru may be non-zero
  4437   00652A                     	endif
  4438   00652A  0008               	tblrd		*
  4439   00652C  50F5               	movf	tablat,w,c
  4440   00652E  0A25               	xorlw	37
  4441   006530  A4D8               	btfss	status,2,c
  4442   006532  EF9D  F032         	goto	u19831
  4443   006536  EF9F  F032         	goto	u19830
  4444   00653A                     u19831:
  4445   00653A  EFBA  F033         	goto	l16311
  4446   00653E                     u19830:
  4447   00653E                     
  4448                           ; BSR set to: 0
  4449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4450   00653E  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4451   006540  6ED9               	movwf	fsr2l,c
  4452   006542  6ADA               	clrf	fsr2h,c
  4453   006544  2ADE               	incf	postinc2,f,c
  4454   006546  0E00               	movlw	0
  4455   006548  22DD               	addwfc	postdec2,f,c
  4456   00654A                     
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4459   00654A  0E00               	movlw	0
  4460   00654C  0101               	movlb	1	; () banked
  4461   00654E  6FDB               	movwf	(_width+1)& (0+255),b
  4462   006550  0E00               	movlw	0
  4463   006552  6FDA               	movwf	_width& (0+255),b
  4464   006554  C1DA  F048         	movff	_width,_flags
  4465   006558                     
  4466                           ; BSR set to: 1
  4467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4468   006558  69DC               	setf	_prec& (0+255),b
  4469   00655A  69DD               	setf	(_prec+1)& (0+255),b
  4470   00655C                     
  4471                           ; BSR set to: 1
  4472                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4473   00655C  0100               	movlb	0	; () banked
  4474   00655E  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4475   006560  6ED9               	movwf	fsr2l,c
  4476   006562  6ADA               	clrf	fsr2h,c
  4477   006564  006F FF78  F076    	movff	postinc2,vfpfcnvrt@cp
  4478   00656A  006F FF74  F077    	movff	postdec2,vfpfcnvrt@cp+1
  4479   006570                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  4482   006570  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4483   006576  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4484   00657C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4485   00657C  6AF8               	clrf	tblptru,c
  4486   00657E                     	endif
  4487   00657E                     	if	0	;tblptru may be non-zero
  4488   00657E                     	endif
  4489   00657E  0008               	tblrd		*
  4490   006580  006F FFD4  F078    	movff	tablat,vfpfcnvrt@c
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  4493   006586  EFD1  F032         	goto	l16273
  4494   00658A                     l16265:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  4498   00658A  4B76               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  4499   00658C  2B77               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  4502   00658E  EFDC  F032         	goto	l16275
  4503   006592                     l16267:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  4507   006592  0E69               	movlw	105
  4508   006594  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  4511   006596  EFDC  F032         	goto	l16275
  4512   00659A                     l16269:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  4516   00659A  0E00               	movlw	0
  4517   00659C  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4518                           
  4519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  4520   00659E  EFDC  F032         	goto	l16275
  4521   0065A2                     l16273:
  4522                           
  4523                           ; BSR set to: 0
  4524   0065A2  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4525                           
  4526                           ; Switch size 1, requested type "simple"
  4527                           ; Number of cases is 2, Range of values is 108 to 117
  4528                           ; switch strategies available:
  4529                           ; Name         Instructions Cycles
  4530                           ; simple_byte            7     4 (average)
  4531                           ;	Chosen strategy is simple_byte
  4532   0065A4  0A6C               	xorlw	108	; case 108
  4533   0065A6  B4D8               	btfsc	status,2,c
  4534   0065A8  EFC5  F032         	goto	l16265
  4535   0065AC  0A19               	xorlw	25	; case 117
  4536   0065AE  B4D8               	btfsc	status,2,c
  4537   0065B0  EFC9  F032         	goto	l16267
  4538   0065B4  EFCD  F032         	goto	l16269
  4539   0065B8                     l16275:
  4540                           
  4541                           ; BSR set to: 0
  4542   0065B8  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4543   0065BE  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4544   0065C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4545   0065C4  6AF8               	clrf	tblptru,c
  4546   0065C6                     	endif
  4547   0065C6                     	if	0	;tblptru may be non-zero
  4548   0065C6                     	endif
  4549   0065C6  0008               	tblrd		*
  4550   0065C8  50F5               	movf	tablat,w,c
  4551   0065CA  0A75               	xorlw	117
  4552   0065CC  A4D8               	btfss	status,2,c
  4553   0065CE  EFEB  F032         	goto	u19841
  4554   0065D2  EFED  F032         	goto	u19840
  4555   0065D6                     u19841:
  4556   0065D6  EFB1  F033         	goto	l16307
  4557   0065DA                     u19840:
  4558   0065DA  EF1B  F033         	goto	l16283
  4559   0065DE                     l16277:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4563   0065DE  516F               	movf	vfpfcnvrt@ap& (0+255),w,b
  4564   0065E0  6ED9               	movwf	fsr2l,c
  4565   0065E2  6ADA               	clrf	fsr2h,c
  4566   0065E4  50DF               	movf	indf2,w,c
  4567   0065E6  2ADF               	incf	indf2,f,c
  4568   0065E8  2ADF               	incf	indf2,f,c
  4569   0065EA  6ED9               	movwf	fsr2l,c
  4570   0065EC  6ADA               	clrf	fsr2h,c
  4571   0065EE  006F FF78  F070    	movff	postinc2,??_vfpfcnvrt
  4572   0065F4  006F FF74  F071    	movff	postdec2,??_vfpfcnvrt+1
  4573   0065FA  C070  F072         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  4574   0065FE  C071  F073         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  4575   006602  6B74               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  4576   006604  6B75               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
  4579   006606  EF26  F033         	goto	l16285
  4580   00660A                     l16279:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  4584   00660A  516F               	movf	vfpfcnvrt@ap& (0+255),w,b
  4585   00660C  6ED9               	movwf	fsr2l,c
  4586   00660E  6ADA               	clrf	fsr2h,c
  4587   006610  0E04               	movlw	4
  4588   006612  26DF               	addwf	indf2,f,c
  4589   006614  5CDF               	subwf	indf2,w,c
  4590   006616  6ED9               	movwf	fsr2l,c
  4591   006618  6ADA               	clrf	fsr2h,c
  4592   00661A  006F FF78  F072    	movff	postinc2,vfpfcnvrt@convarg
  4593   006620  006F FF78  F073    	movff	postinc2,vfpfcnvrt@convarg+1
  4594   006626  006F FF78  F074    	movff	postinc2,vfpfcnvrt@convarg+2
  4595   00662C  006F FF78  F075    	movff	postinc2,vfpfcnvrt@convarg+3
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
  4598   006632  EF26  F033         	goto	l16285
  4599   006636                     l16283:
  4600                           
  4601                           ; BSR set to: 0
  4602   006636  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4603                           
  4604                           ; Switch size 1, requested type "simple"
  4605                           ; Number of cases is 2, Range of values is 105 to 108
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte            7     4 (average)
  4609                           ;	Chosen strategy is simple_byte
  4610   006638  0A69               	xorlw	105	; case 105
  4611   00663A  B4D8               	btfsc	status,2,c
  4612   00663C  EFEF  F032         	goto	l16277
  4613   006640  0A05               	xorlw	5	; case 108
  4614   006642  B4D8               	btfsc	status,2,c
  4615   006644  EF05  F033         	goto	l16279
  4616   006648  EF26  F033         	goto	l16285
  4617   00664C                     l16285:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  4621   00664C  0E01               	movlw	1
  4622   00664E  2576               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4623   006650  6F70               	movwf	??_vfpfcnvrt& (0+255),b
  4624   006652  0E00               	movlw	0
  4625   006654  2177               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4626   006656  6F71               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4627   006658  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4628   00665A  6ED9               	movwf	fsr2l,c
  4629   00665C  6ADA               	clrf	fsr2h,c
  4630   00665E  0060  F1C3  FFDE   	movff	??_vfpfcnvrt,postinc2
  4631   006664  0060  F1C7  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  4634   00666A  EFA2  F033         	goto	l16305
  4635   00666E                     l16287:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  4639   00666E  0E20               	movlw	32
  4640   006670  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  4641   006672                     l16289:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  4645   006672  0778               	decf	vfpfcnvrt@c& (0+255),f,b
  4646   006674  0E00               	movlw	low _dbuf
  4647   006676  2578               	addwf	vfpfcnvrt@c& (0+255),w,b
  4648   006678  6ED9               	movwf	fsr2l,c
  4649   00667A  6ADA               	clrf	fsr2h,c
  4650   00667C  0E02               	movlw	high _dbuf
  4651   00667E  22DA               	addwfc	fsr2h,f,c
  4652   006680  C072  F060         	movff	vfpfcnvrt@convarg,___llmod@dividend
  4653   006684  C073  F061         	movff	vfpfcnvrt@convarg+1,___llmod@dividend+1
  4654   006688  C074  F062         	movff	vfpfcnvrt@convarg+2,___llmod@dividend+2
  4655   00668C  C075  F063         	movff	vfpfcnvrt@convarg+3,___llmod@dividend+3
  4656   006690  0E0A               	movlw	10
  4657   006692  6F64               	movwf	___llmod@divisor& (0+255),b
  4658   006694  0E00               	movlw	0
  4659   006696  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4660   006698  0E00               	movlw	0
  4661   00669A  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4662   00669C  0E00               	movlw	0
  4663   00669E  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4664   0066A0  ECB9  F049         	call	___llmod	;wreg free
  4665   0066A4  0100               	movlb	0	; () banked
  4666   0066A6  5160               	movf	?___llmod& (0+255),w,b
  4667   0066A8  0F30               	addlw	48
  4668   0066AA  6EDF               	movwf	indf2,c
  4669   0066AC                     
  4670                           ; BSR set to: 0
  4671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  4672   0066AC  C072  F060         	movff	vfpfcnvrt@convarg,___lldiv@dividend
  4673   0066B0  C073  F061         	movff	vfpfcnvrt@convarg+1,___lldiv@dividend+1
  4674   0066B4  C074  F062         	movff	vfpfcnvrt@convarg+2,___lldiv@dividend+2
  4675   0066B8  C075  F063         	movff	vfpfcnvrt@convarg+3,___lldiv@dividend+3
  4676   0066BC  0E0A               	movlw	10
  4677   0066BE  6F64               	movwf	___lldiv@divisor& (0+255),b
  4678   0066C0  0E00               	movlw	0
  4679   0066C2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  4680   0066C4  0E00               	movlw	0
  4681   0066C6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  4682   0066C8  0E00               	movlw	0
  4683   0066CA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  4684   0066CC  EC1A  F049         	call	___lldiv	;wreg free
  4685   0066D0  C060  F072         	movff	?___lldiv,vfpfcnvrt@convarg
  4686   0066D4  C061  F073         	movff	?___lldiv+1,vfpfcnvrt@convarg+1
  4687   0066D8  C062  F074         	movff	?___lldiv+2,vfpfcnvrt@convarg+2
  4688   0066DC  C063  F075         	movff	?___lldiv+3,vfpfcnvrt@convarg+3
  4689   0066E0                     
  4690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  4691   0066E0  0100               	movlb	0	; () banked
  4692   0066E2  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  4693   0066E4  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  4694   0066E6  1174               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  4695   0066E8  1175               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  4696   0066EA  B4D8               	btfsc	status,2,c
  4697   0066EC  EF7A  F033         	goto	u19851
  4698   0066F0  EF7C  F033         	goto	u19850
  4699   0066F4                     u19851:
  4700   0066F4  EF97  F033         	goto	l16301
  4701   0066F8                     u19850:
  4702   0066F8                     
  4703                           ; BSR set to: 0
  4704   0066F8  5178               	movf	vfpfcnvrt@c& (0+255),w,b
  4705   0066FA  A4D8               	btfss	status,2,c
  4706   0066FC  EF82  F033         	goto	u19861
  4707   006700  EF84  F033         	goto	u19860
  4708   006704                     u19861:
  4709   006704  EF39  F033         	goto	l16289
  4710   006708                     u19860:
  4711   006708  EF97  F033         	goto	l16301
  4712   00670C                     l16297:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  4716   00670C  0E00               	movlw	low _dbuf
  4717   00670E  2578               	addwf	vfpfcnvrt@c& (0+255),w,b
  4718   006710  6ED9               	movwf	fsr2l,c
  4719   006712  6ADA               	clrf	fsr2h,c
  4720   006714  0E02               	movlw	high _dbuf
  4721   006716  22DA               	addwfc	fsr2h,f,c
  4722   006718  50DF               	movf	indf2,w,c
  4723   00671A  6F70               	movwf	??_vfpfcnvrt& (0+255),b
  4724   00671C  5170               	movf	??_vfpfcnvrt& (0+255),w,b
  4725   00671E  6F60               	movwf	fputc@c& (0+255),b
  4726   006720  6B61               	clrf	(fputc@c+1)& (0+255),b
  4727   006722  C06D  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4728   006726  ECAC  F047         	call	_fputc	;wreg free
  4729   00672A  0100               	movlb	0	; () banked
  4730   00672C  2B78               	incf	vfpfcnvrt@c& (0+255),f,b
  4731   00672E                     l16301:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  4735   00672E  0E20               	movlw	32
  4736   006730  1978               	xorwf	vfpfcnvrt@c& (0+255),w,b
  4737   006732  A4D8               	btfss	status,2,c
  4738   006734  EF9E  F033         	goto	u19871
  4739   006738  EFA0  F033         	goto	u19870
  4740   00673C                     u19871:
  4741   00673C  EF86  F033         	goto	l16297
  4742   006740                     u19870:
  4743   006740  EFCE  F033         	goto	l3009
  4744   006744                     l16305:
  4745                           
  4746                           ; BSR set to: 0
  4747   006744  0060  F1DB  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  4748   00674A  0060  F1DF  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  4749   006750                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4750   006750  6AF8               	clrf	tblptru,c
  4751   006752                     	endif
  4752   006752                     	if	0	;tblptru may be non-zero
  4753   006752                     	endif
  4754   006752  0008               	tblrd		*
  4755   006754  50F5               	movf	tablat,w,c
  4756                           
  4757                           ; Switch size 1, requested type "simple"
  4758                           ; Number of cases is 1, Range of values is 117 to 117
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte            4     3 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763   006756  0A75               	xorlw	117	; case 117
  4764   006758  B4D8               	btfsc	status,2,c
  4765   00675A  EF37  F033         	goto	l16287
  4766   00675E  EFB1  F033         	goto	l16307
  4767   006762                     l16307:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4770   006762  0100               	movlb	0	; () banked
  4771   006764  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4772   006766  6ED9               	movwf	fsr2l,c
  4773   006768  6ADA               	clrf	fsr2h,c
  4774   00676A  2ADE               	incf	postinc2,f,c
  4775   00676C  0E00               	movlw	0
  4776   00676E  22DD               	addwfc	postdec2,f,c
  4777   006770  EFCE  F033         	goto	l3009
  4778   006774                     l16311:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4782   006774  516E               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4783   006776  6ED9               	movwf	fsr2l,c
  4784   006778  6ADA               	clrf	fsr2h,c
  4785   00677A  006F FF7B FFF6     	movff	postinc2,tblptrl
  4786   006780  006F FF77 FFF7     	movff	postdec2,tblptrh
  4787   006786                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4788   006786  6AF8               	clrf	tblptru,c
  4789   006788                     	endif
  4790   006788                     	if	0	;tblptru may be non-zero
  4791   006788                     	endif
  4792   006788  0008               	tblrd		*
  4793   00678A  50F5               	movf	tablat,w,c
  4794   00678C  6F60               	movwf	fputc@c& (0+255),b
  4795   00678E  6B61               	clrf	(fputc@c+1)& (0+255),b
  4796   006790  C06D  F062         	movff	vfpfcnvrt@fp,fputc@fp
  4797   006794  ECAC  F047         	call	_fputc	;wreg free
  4798   006798  EFB1  F033         	goto	l16307
  4799   00679C                     l3009:
  4800                           
  4801                           ; BSR set to: 0
  4802   00679C  0012               	return		;funcret
  4803   00679E                     __end_of_vfpfcnvrt:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _fputc *****************
  4807 ;; Defined at:
  4808 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  c               2    0[BANK0 ] int 
  4811 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  4812 ;;		 -> sprintf@f(12), 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    0[BANK0 ] int 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        8 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 6
  4831 ;; This function calls:
  4832 ;;		_putch
  4833 ;; This function is called by:
  4834 ;;		_vfpfcnvrt
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text14
  4839   008F58                     __ptext14:
  4840                           	callstack 0
  4841   008F58                     _fputc:
  4842                           	callstack 20
  4843   008F58  0100               	movlb	0	; () banked
  4844   008F5A  5162               	movf	fputc@fp& (0+255),w,b
  4845   008F5C  B4D8               	btfsc	status,2,c
  4846   008F5E  EFB3  F047         	goto	u19051
  4847   008F62  EFB5  F047         	goto	u19050
  4848   008F66                     u19051:
  4849   008F66  EFBD  F047         	goto	l15837
  4850   008F6A                     u19050:
  4851   008F6A                     
  4852                           ; BSR set to: 0
  4853   008F6A  5162               	movf	fputc@fp& (0+255),w,b
  4854   008F6C  A4D8               	btfss	status,2,c
  4855   008F6E  EFBB  F047         	goto	u19061
  4856   008F72  EFBD  F047         	goto	u19060
  4857   008F76                     u19061:
  4858   008F76  EFC2  F047         	goto	l15839
  4859   008F7A                     u19060:
  4860   008F7A                     l15837:
  4861                           
  4862                           ; BSR set to: 0
  4863   008F7A  5160               	movf	fputc@c& (0+255),w,b
  4864   008F7C  EC8A  F052         	call	_putch
  4865   008F80  EF0E  F048         	goto	l3028
  4866   008F84                     l15839:
  4867                           
  4868                           ; BSR set to: 0
  4869   008F84  5162               	movf	fputc@fp& (0+255),w,b
  4870   008F86  6ED9               	movwf	fsr2l,c
  4871   008F88  6ADA               	clrf	fsr2h,c
  4872   008F8A  0E0A               	movlw	10
  4873   008F8C  26D9               	addwf	fsr2l,f,c
  4874   008F8E  50DE               	movf	postinc2,w,c
  4875   008F90  10DE               	iorwf	postinc2,w,c
  4876   008F92  B4D8               	btfsc	status,2,c
  4877   008F94  EFCE  F047         	goto	u19071
  4878   008F98  EFD0  F047         	goto	u19070
  4879   008F9C                     u19071:
  4880   008F9C  EFE9  F047         	goto	l15843
  4881   008FA0                     u19070:
  4882   008FA0                     
  4883                           ; BSR set to: 0
  4884   008FA0  5162               	movf	fputc@fp& (0+255),w,b
  4885   008FA2  6ED9               	movwf	fsr2l,c
  4886   008FA4  6ADA               	clrf	fsr2h,c
  4887   008FA6  0E0A               	movlw	10
  4888   008FA8  26D9               	addwf	fsr2l,f,c
  4889   008FAA  5162               	movf	fputc@fp& (0+255),w,b
  4890   008FAC  6EE1               	movwf	fsr1l,c
  4891   008FAE  6AE2               	clrf	fsr1h,c
  4892   008FB0  0E03               	movlw	3
  4893   008FB2  26E1               	addwf	fsr1l,f,c
  4894   008FB4  50DE               	movf	postinc2,w,c
  4895   008FB6  5CE6               	subwf	postinc1,w,c
  4896   008FB8  50E6               	movf	postinc1,w,c
  4897   008FBA  0A80               	xorlw	128
  4898   008FBC  6F67               	movwf	(??_fputc+4)& (0+255),b
  4899   008FBE  50DE               	movf	postinc2,w,c
  4900   008FC0  0A80               	xorlw	128
  4901   008FC2  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  4902   008FC4  B0D8               	btfsc	status,0,c
  4903   008FC6  EFE7  F047         	goto	u19081
  4904   008FCA  EFE9  F047         	goto	u19080
  4905   008FCE                     u19081:
  4906   008FCE  EF0E  F048         	goto	l3028
  4907   008FD2                     u19080:
  4908   008FD2                     l15843:
  4909                           
  4910                           ; BSR set to: 0
  4911   008FD2  5162               	movf	fputc@fp& (0+255),w,b
  4912   008FD4  6ED9               	movwf	fsr2l,c
  4913   008FD6  6ADA               	clrf	fsr2h,c
  4914   008FD8  0E03               	movlw	3
  4915   008FDA  26D9               	addwf	fsr2l,f,c
  4916   008FDC  006F FF78  F063    	movff	postinc2,??_fputc
  4917   008FE2  006F FF74  F064    	movff	postdec2,??_fputc+1
  4918   008FE8  5162               	movf	fputc@fp& (0+255),w,b
  4919   008FEA  6ED9               	movwf	fsr2l,c
  4920   008FEC  6ADA               	clrf	fsr2h,c
  4921   008FEE  006F FF78  F065    	movff	postinc2,??_fputc+2
  4922   008FF4  006F FF74  F066    	movff	postdec2,??_fputc+3
  4923   008FFA  5163               	movf	??_fputc& (0+255),w,b
  4924   008FFC  2565               	addwf	(??_fputc+2)& (0+255),w,b
  4925   008FFE  6ED9               	movwf	fsr2l,c
  4926   009000  5164               	movf	(??_fputc+1)& (0+255),w,b
  4927   009002  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  4928   009004  6EDA               	movwf	fsr2h,c
  4929   009006  0060  F183  FFDF   	movff	fputc@c,indf2
  4930   00900C  5162               	movf	fputc@fp& (0+255),w,b
  4931   00900E  6ED9               	movwf	fsr2l,c
  4932   009010  6ADA               	clrf	fsr2h,c
  4933   009012  0E03               	movlw	3
  4934   009014  26D9               	addwf	fsr2l,f,c
  4935   009016  2ADE               	incf	postinc2,f,c
  4936   009018  0E00               	movlw	0
  4937   00901A  22DD               	addwfc	postdec2,f,c
  4938   00901C                     l3028:
  4939   00901C  0012               	return		;funcret
  4940   00901E                     __end_of_fputc:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _putch *****************
  4944 ;; Defined at:
  4945 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  c               1    wreg     unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  c               1    0[COMRAM] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 5
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_fputc
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text15
  4974   00A514                     __ptext15:
  4975                           	callstack 0
  4976   00A514                     _putch:
  4977                           	callstack 20
  4978   00A514  0012               	return		;funcret
  4979   00A516                     __end_of_putch:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function ___llmod *****************
  4983 ;; Defined at:
  4984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  dividend        4    0[BANK0 ] unsigned long 
  4987 ;;  divisor         4    4[BANK0 ] unsigned long 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  counter         1    8[BANK0 ] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  4    0[BANK0 ] unsigned long 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:        9 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 5
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_vfpfcnvrt
  5010 ;;		_f_printf
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text16
  5015   009372                     __ptext16:
  5016                           	callstack 0
  5017   009372                     ___llmod:
  5018                           	callstack 21
  5019   009372  0100               	movlb	0	; () banked
  5020   009374  5164               	movf	___llmod@divisor& (0+255),w,b
  5021   009376  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5022   009378  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5023   00937A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5024   00937C  B4D8               	btfsc	status,2,c
  5025   00937E  EFC3  F049         	goto	u19021
  5026   009382  EFC5  F049         	goto	u19020
  5027   009386                     u19021:
  5028   009386  EFF5  F049         	goto	l2693
  5029   00938A                     u19020:
  5030   00938A                     
  5031                           ; BSR set to: 0
  5032   00938A  0E01               	movlw	1
  5033   00938C  6F68               	movwf	___llmod@counter& (0+255),b
  5034   00938E  EFCF  F049         	goto	l15823
  5035   009392                     l15821:
  5036                           
  5037                           ; BSR set to: 0
  5038   009392  90D8               	bcf	status,0,c
  5039   009394  3764               	rlcf	___llmod@divisor& (0+255),f,b
  5040   009396  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5041   009398  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5042   00939A  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5043   00939C  2B68               	incf	___llmod@counter& (0+255),f,b
  5044   00939E                     l15823:
  5045                           
  5046                           ; BSR set to: 0
  5047   00939E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5048   0093A0  EFD4  F049         	goto	u19031
  5049   0093A4  EFD6  F049         	goto	u19030
  5050   0093A8                     u19031:
  5051   0093A8  EFC9  F049         	goto	l15821
  5052   0093AC                     u19030:
  5053   0093AC                     l15825:
  5054                           
  5055                           ; BSR set to: 0
  5056   0093AC  5164               	movf	___llmod@divisor& (0+255),w,b
  5057   0093AE  5D60               	subwf	___llmod@dividend& (0+255),w,b
  5058   0093B0  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5059   0093B2  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5060   0093B4  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5061   0093B6  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5062   0093B8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5063   0093BA  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5064   0093BC  A0D8               	btfss	status,0,c
  5065   0093BE  EFE3  F049         	goto	u19041
  5066   0093C2  EFE5  F049         	goto	u19040
  5067   0093C6                     u19041:
  5068   0093C6  EFED  F049         	goto	l15829
  5069   0093CA                     u19040:
  5070   0093CA                     
  5071                           ; BSR set to: 0
  5072   0093CA  5164               	movf	___llmod@divisor& (0+255),w,b
  5073   0093CC  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5074   0093CE  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5075   0093D0  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5076   0093D2  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5077   0093D4  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5078   0093D6  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5079   0093D8  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5080   0093DA                     l15829:
  5081                           
  5082                           ; BSR set to: 0
  5083   0093DA  90D8               	bcf	status,0,c
  5084   0093DC  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5085   0093DE  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5086   0093E0  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5087   0093E2  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5088   0093E4                     
  5089                           ; BSR set to: 0
  5090   0093E4  2F68               	decfsz	___llmod@counter& (0+255),f,b
  5091   0093E6  EFD6  F049         	goto	l15825
  5092   0093EA                     l2693:
  5093                           
  5094                           ; BSR set to: 0
  5095   0093EA  C060  F060         	movff	___llmod@dividend,?___llmod
  5096   0093EE  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5097   0093F2  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5098   0093F6  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5099   0093FA                     
  5100                           ; BSR set to: 0
  5101   0093FA  0012               	return		;funcret
  5102   0093FC                     __end_of___llmod:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _f_write *****************
  5106 ;; Defined at:
  5107 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  fp              2   23[BANK1 ] PTR struct .
  5110 ;;		 -> Fil(546), pb$fp(3), 
  5111 ;;  buff            2   25[BANK1 ] PTR const void 
  5112 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  5113 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  5114 ;;  btw             2   27[BANK1 ] unsigned int 
  5115 ;;  bw              2   29[BANK1 ] PTR unsigned int 
  5116 ;;		 -> bw(2), putc_flush@nw(2), putc_bfd@n(2), 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  clst            4   58[BANK1 ] unsigned long 
  5119 ;;  sect            4   54[BANK1 ] unsigned long 
  5120 ;;  fs              2   64[BANK1 ] PTR struct .
  5121 ;;		 -> FatFs(563), NULL(0), 
  5122 ;;  wcnt            2   62[BANK1 ] unsigned int 
  5123 ;;  cc              2   52[BANK1 ] unsigned int 
  5124 ;;  csect           2   50[BANK1 ] unsigned int 
  5125 ;;  wbuff           2   47[BANK1 ] PTR const unsigned char 
  5126 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  5127 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  5128 ;;  res             1   49[BANK1 ] enum E68
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      enum E68
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5138 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;Total ram usage:       43 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 14
  5145 ;; This function calls:
  5146 ;;		_clst2sect
  5147 ;;		_create_chain
  5148 ;;		_disk_read
  5149 ;;		_disk_write
  5150 ;;		_mem_cpy
  5151 ;;		_validate
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;;		_send_status_ok
  5155 ;;		_putc_bfd
  5156 ;;		_putc_flush
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text17
  5161   000ED2                     __ptext17:
  5162                           	callstack 0
  5163   000ED2                     _f_write:
  5164                           	callstack 15
  5165   000ED2                     
  5166                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  5167   000ED2  C119  F12F         	movff	f_write@buff,f_write@wbuff
  5168   000ED6  C11A  F130         	movff	f_write@buff+1,f_write@wbuff+1
  5169   000EDA                     
  5170                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  5171   000EDA  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  5172   000EE0  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  5173   000EE6  6ADE               	clrf	postinc2,c
  5174   000EE8  6ADD               	clrf	postdec2,c
  5175   000EEA                     
  5176                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  5177   000EEA  C117  F062         	movff	f_write@fp,validate@obj
  5178   000EEE  C118  F063         	movff	f_write@fp+1,validate@obj+1
  5179   000EF2  0E40               	movlw	low f_write@fs
  5180   000EF4  0100               	movlb	0	; () banked
  5181   000EF6  6F64               	movwf	validate@rfs& (0+255),b
  5182   000EF8  0E01               	movlw	high f_write@fs
  5183   000EFA  6F65               	movwf	(validate@rfs+1)& (0+255),b
  5184   000EFC  EC7A  F040         	call	_validate	;wreg free
  5185   000F00  0101               	movlb	1	; () banked
  5186   000F02  6F31               	movwf	f_write@res& (0+255),b
  5187   000F04                     
  5188                           ; BSR set to: 1
  5189                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  5190   000F04  5131               	movf	f_write@res& (0+255),w,b
  5191   000F06  A4D8               	btfss	status,2,c
  5192   000F08  EF88  F007         	goto	u21381
  5193   000F0C  EF8A  F007         	goto	u21380
  5194   000F10                     u21381:
  5195   000F10  EF9A  F007         	goto	l17195
  5196   000F14                     u21380:
  5197   000F14                     
  5198                           ; BSR set to: 1
  5199   000F14  EE20 F00F          	lfsr	2,15
  5200   000F18  5117               	movf	f_write@fp& (0+255),w,b
  5201   000F1A  26D9               	addwf	fsr2l,f,c
  5202   000F1C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5203   000F1E  22DA               	addwfc	fsr2h,f,c
  5204   000F20  50DF               	movf	indf2,w,c
  5205   000F22  6F31               	movwf	f_write@res& (0+255),b
  5206   000F24  5131               	movf	f_write@res& (0+255),w,b
  5207   000F26  B4D8               	btfsc	status,2,c
  5208   000F28  EF98  F007         	goto	u21391
  5209   000F2C  EF9A  F007         	goto	u21390
  5210   000F30                     u21391:
  5211   000F30  EF9D  F007         	goto	l17199
  5212   000F34                     u21390:
  5213   000F34                     l17195:
  5214                           
  5215                           ; BSR set to: 1
  5216   000F34  5131               	movf	f_write@res& (0+255),w,b
  5217   000F36  EF91  F00B         	goto	l1355
  5218   000F3A                     l17199:
  5219                           
  5220                           ; BSR set to: 1
  5221                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  5222   000F3A  EE20 F00E          	lfsr	2,14
  5223   000F3E  5117               	movf	f_write@fp& (0+255),w,b
  5224   000F40  26D9               	addwf	fsr2l,f,c
  5225   000F42  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5226   000F44  22DA               	addwfc	fsr2h,f,c
  5227   000F46  B2DF               	btfsc	indf2,1,c
  5228   000F48  EFA8  F007         	goto	u21401
  5229   000F4C  EFAA  F007         	goto	u21400
  5230   000F50                     u21401:
  5231   000F50  EFAD  F007         	goto	l17207
  5232   000F54                     u21400:
  5233   000F54                     
  5234                           ; BSR set to: 1
  5235   000F54  0E07               	movlw	7
  5236   000F56  EF91  F00B         	goto	l1355
  5237   000F5A                     l17207:
  5238                           
  5239                           ; BSR set to: 1
  5240   000F5A  EE20 F010          	lfsr	2,16
  5241   000F5E  5117               	movf	f_write@fp& (0+255),w,b
  5242   000F60  26D9               	addwf	fsr2l,f,c
  5243   000F62  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5244   000F64  22DA               	addwfc	fsr2h,f,c
  5245   000F66  EE10 F010          	lfsr	1,16
  5246   000F6A  5117               	movf	f_write@fp& (0+255),w,b
  5247   000F6C  26E1               	addwf	fsr1l,f,c
  5248   000F6E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5249   000F70  22E2               	addwfc	fsr1h,f,c
  5250   000F72  006F FF98  F123    	movff	postinc1,??_f_write+4
  5251   000F78  006F FF98  F124    	movff	postinc1,??_f_write+5
  5252   000F7E  006F FF98  F125    	movff	postinc1,??_f_write+6
  5253   000F84  006F FF98  F126    	movff	postinc1,??_f_write+7
  5254   000F8A  511B               	movf	f_write@btw& (0+255),w,b
  5255   000F8C  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5256   000F8E  6F27               	movwf	(??_f_write+8)& (0+255),b
  5257   000F90  511C               	movf	(f_write@btw+1)& (0+255),w,b
  5258   000F92  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5259   000F94  6F28               	movwf	(??_f_write+9)& (0+255),b
  5260   000F96  0E00               	movlw	0
  5261   000F98  2125               	addwfc	(??_f_write+6)& (0+255),w,b
  5262   000F9A  6F29               	movwf	(??_f_write+10)& (0+255),b
  5263   000F9C  0E00               	movlw	0
  5264   000F9E  2126               	addwfc	(??_f_write+7)& (0+255),w,b
  5265   000FA0  6F2A               	movwf	(??_f_write+11)& (0+255),b
  5266   000FA2  50DE               	movf	postinc2,w,c
  5267   000FA4  5D27               	subwf	(??_f_write+8)& (0+255),w,b
  5268   000FA6  50DE               	movf	postinc2,w,c
  5269   000FA8  5928               	subwfb	(??_f_write+9)& (0+255),w,b
  5270   000FAA  50DE               	movf	postinc2,w,c
  5271   000FAC  5929               	subwfb	(??_f_write+10)& (0+255),w,b
  5272   000FAE  50DE               	movf	postinc2,w,c
  5273   000FB0  592A               	subwfb	(??_f_write+11)& (0+255),w,b
  5274   000FB2  B0D8               	btfsc	status,0,c
  5275   000FB4  EFDE  F007         	goto	u21411
  5276   000FB8  EFE0  F007         	goto	u21410
  5277   000FBC                     u21411:
  5278   000FBC  EF7F  F00B         	goto	l17327
  5279   000FC0                     u21410:
  5280   000FC0                     
  5281                           ; BSR set to: 1
  5282                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  5283   000FC0  EE20 F010          	lfsr	2,16
  5284   000FC4  5117               	movf	f_write@fp& (0+255),w,b
  5285   000FC6  26D9               	addwf	fsr2l,f,c
  5286   000FC8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5287   000FCA  22DA               	addwfc	fsr2h,f,c
  5288   000FCC  006F FF78  F11F    	movff	postinc2,??_f_write
  5289   000FD2  006F FF74  F120    	movff	postdec2,??_f_write+1
  5290   000FD8  1D1F               	comf	??_f_write& (0+255),w,b
  5291   000FDA  6F1B               	movwf	f_write@btw& (0+255),b
  5292   000FDC  1D20               	comf	(??_f_write+1)& (0+255),w,b
  5293   000FDE  6F1C               	movwf	(f_write@btw+1)& (0+255),b
  5294   000FE0  EF7F  F00B         	goto	l17327
  5295   000FE4                     l17211:
  5296                           
  5297                           ; BSR set to: 1
  5298                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  5299   000FE4  EE20 F010          	lfsr	2,16
  5300   000FE8  5117               	movf	f_write@fp& (0+255),w,b
  5301   000FEA  26D9               	addwf	fsr2l,f,c
  5302   000FEC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5303   000FEE  22DA               	addwfc	fsr2h,f,c
  5304   000FF0  0EFF               	movlw	255
  5305   000FF2  14DE               	andwf	postinc2,w,c
  5306   000FF4  6F1F               	movwf	??_f_write& (0+255),b
  5307   000FF6  0E01               	movlw	1
  5308   000FF8  14DE               	andwf	postinc2,w,c
  5309   000FFA  6F20               	movwf	(??_f_write+1)& (0+255),b
  5310   000FFC  0E00               	movlw	0
  5311   000FFE  14DE               	andwf	postinc2,w,c
  5312   001000  6F21               	movwf	(??_f_write+2)& (0+255),b
  5313   001002  0E00               	movlw	0
  5314   001004  14DE               	andwf	postinc2,w,c
  5315   001006  6F22               	movwf	(??_f_write+3)& (0+255),b
  5316   001008  511F               	movf	??_f_write& (0+255),w,b
  5317   00100A  1120               	iorwf	(??_f_write+1)& (0+255),w,b
  5318   00100C  1121               	iorwf	(??_f_write+2)& (0+255),w,b
  5319   00100E  1122               	iorwf	(??_f_write+3)& (0+255),w,b
  5320   001010  A4D8               	btfss	status,2,c
  5321   001012  EF0D  F008         	goto	u21421
  5322   001016  EF0F  F008         	goto	u21420
  5323   00101A                     u21421:
  5324   00101A  EFB0  F00A         	goto	l1362
  5325   00101E                     u21420:
  5326   00101E                     
  5327                           ; BSR set to: 1
  5328                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  5329   00101E  EE20 F010          	lfsr	2,16
  5330   001022  5117               	movf	f_write@fp& (0+255),w,b
  5331   001024  26D9               	addwf	fsr2l,f,c
  5332   001026  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5333   001028  22DA               	addwfc	fsr2h,f,c
  5334   00102A  006F FF78  F11F    	movff	postinc2,??_f_write
  5335   001030  006F FF78  F120    	movff	postinc2,??_f_write+1
  5336   001036  006F FF78  F121    	movff	postinc2,??_f_write+2
  5337   00103C  006F FF78  F122    	movff	postinc2,??_f_write+3
  5338   001042  0E0A               	movlw	10
  5339   001044  EF29  F008         	goto	u21430
  5340   001048                     u21435:
  5341   001048  90D8               	bcf	status,0,c
  5342   00104A  3322               	rrcf	(??_f_write+3)& (0+255),f,b
  5343   00104C  3321               	rrcf	(??_f_write+2)& (0+255),f,b
  5344   00104E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  5345   001050  331F               	rrcf	??_f_write& (0+255),f,b
  5346   001052                     u21430:
  5347   001052  2EE8               	decfsz	wreg,f,c
  5348   001054  EF24  F008         	goto	u21435
  5349   001058  EE20 F009          	lfsr	2,9
  5350   00105C  5140               	movf	f_write@fs& (0+255),w,b
  5351   00105E  26D9               	addwf	fsr2l,f,c
  5352   001060  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5353   001062  22DA               	addwfc	fsr2h,f,c
  5354   001064  006F FF78  F123    	movff	postinc2,??_f_write+4
  5355   00106A  006F FF74  F124    	movff	postdec2,??_f_write+5
  5356   001070  0EFF               	movlw	255
  5357   001072  2523               	addwf	(??_f_write+4)& (0+255),w,b
  5358   001074  6F25               	movwf	(??_f_write+6)& (0+255),b
  5359   001076  0EFF               	movlw	255
  5360   001078  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  5361   00107A  6F26               	movwf	(??_f_write+7)& (0+255),b
  5362   00107C  511F               	movf	??_f_write& (0+255),w,b
  5363   00107E  1525               	andwf	(??_f_write+6)& (0+255),w,b
  5364   001080  6F32               	movwf	f_write@csect& (0+255),b
  5365   001082  5120               	movf	(??_f_write+1)& (0+255),w,b
  5366   001084  1526               	andwf	(??_f_write+7)& (0+255),w,b
  5367   001086  6F33               	movwf	(f_write@csect+1)& (0+255),b
  5368   001088                     
  5369                           ; BSR set to: 1
  5370                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  5371   001088  5132               	movf	f_write@csect& (0+255),w,b
  5372   00108A  1133               	iorwf	(f_write@csect+1)& (0+255),w,b
  5373   00108C  A4D8               	btfss	status,2,c
  5374   00108E  EF4B  F008         	goto	u21441
  5375   001092  EF4D  F008         	goto	u21440
  5376   001096                     u21441:
  5377   001096  EF26  F009         	goto	l1363
  5378   00109A                     u21440:
  5379   00109A                     
  5380                           ; BSR set to: 1
  5381                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  5382   00109A  EE20 F010          	lfsr	2,16
  5383   00109E  5117               	movf	f_write@fp& (0+255),w,b
  5384   0010A0  26D9               	addwf	fsr2l,f,c
  5385   0010A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5386   0010A4  22DA               	addwfc	fsr2h,f,c
  5387   0010A6  50DE               	movf	postinc2,w,c
  5388   0010A8  10DE               	iorwf	postinc2,w,c
  5389   0010AA  10DE               	iorwf	postinc2,w,c
  5390   0010AC  10DE               	iorwf	postinc2,w,c
  5391   0010AE  A4D8               	btfss	status,2,c
  5392   0010B0  EF5C  F008         	goto	u21451
  5393   0010B4  EF5E  F008         	goto	u21450
  5394   0010B8                     u21451:
  5395   0010B8  EF94  F008         	goto	l17225
  5396   0010BC                     u21450:
  5397   0010BC                     
  5398                           ; BSR set to: 1
  5399                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  5400   0010BC  EE20 F006          	lfsr	2,6
  5401   0010C0  5117               	movf	f_write@fp& (0+255),w,b
  5402   0010C2  26D9               	addwf	fsr2l,f,c
  5403   0010C4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5404   0010C6  22DA               	addwfc	fsr2h,f,c
  5405   0010C8  006F FF78  F13A    	movff	postinc2,f_write@clst
  5406   0010CE  006F FF78  F13B    	movff	postinc2,f_write@clst+1
  5407   0010D4  006F FF78  F13C    	movff	postinc2,f_write@clst+2
  5408   0010DA  006F FF78  F13D    	movff	postinc2,f_write@clst+3
  5409   0010E0                     
  5410                           ; BSR set to: 1
  5411                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  5412   0010E0  513A               	movf	f_write@clst& (0+255),w,b
  5413   0010E2  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5414   0010E4  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5415   0010E6  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5416   0010E8  A4D8               	btfss	status,2,c
  5417   0010EA  EF79  F008         	goto	u21461
  5418   0010EE  EF7B  F008         	goto	u21460
  5419   0010F2                     u21461:
  5420   0010F2  EFB4  F008         	goto	l17227
  5421   0010F6                     u21460:
  5422   0010F6                     
  5423                           ; BSR set to: 1
  5424                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  5425   0010F6  C117  F0F4         	movff	f_write@fp,create_chain@obj
  5426   0010FA  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  5427   0010FE  0E00               	movlw	0
  5428   001100  0100               	movlb	0	; () banked
  5429   001102  6FF6               	movwf	create_chain@clst& (0+255),b
  5430   001104  0E00               	movlw	0
  5431   001106  6FF7               	movwf	(create_chain@clst+1)& (0+255),b
  5432   001108  0E00               	movlw	0
  5433   00110A  6FF8               	movwf	(create_chain@clst+2)& (0+255),b
  5434   00110C  0E00               	movlw	0
  5435   00110E  6FF9               	movwf	(create_chain@clst+3)& (0+255),b
  5436   001110  ECFA  F016         	call	_create_chain	;wreg free
  5437   001114  C0F4  F13A         	movff	?_create_chain,f_write@clst
  5438   001118  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  5439   00111C  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  5440   001120  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  5441   001124  EFB4  F008         	goto	l17227
  5442   001128                     l17225:
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  5446   001128  C117  F0F4         	movff	f_write@fp,create_chain@obj
  5447   00112C  C118  F0F5         	movff	f_write@fp+1,create_chain@obj+1
  5448   001130  EE20 F014          	lfsr	2,20
  5449   001134  5117               	movf	f_write@fp& (0+255),w,b
  5450   001136  26D9               	addwf	fsr2l,f,c
  5451   001138  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5452   00113A  22DA               	addwfc	fsr2h,f,c
  5453   00113C  006F FF78  F0F6    	movff	postinc2,create_chain@clst
  5454   001142  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
  5455   001148  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
  5456   00114E  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
  5457   001154  ECFA  F016         	call	_create_chain	;wreg free
  5458   001158  C0F4  F13A         	movff	?_create_chain,f_write@clst
  5459   00115C  C0F5  F13B         	movff	?_create_chain+1,f_write@clst+1
  5460   001160  C0F6  F13C         	movff	?_create_chain+2,f_write@clst+2
  5461   001164  C0F7  F13D         	movff	?_create_chain+3,f_write@clst+3
  5462   001168                     l17227:
  5463                           
  5464                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  5465   001168  0101               	movlb	1	; () banked
  5466   00116A  513A               	movf	f_write@clst& (0+255),w,b
  5467   00116C  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5468   00116E  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5469   001170  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5470   001172  A4D8               	btfss	status,2,c
  5471   001174  EFBE  F008         	goto	u21471
  5472   001178  EFC0  F008         	goto	u21470
  5473   00117C                     u21471:
  5474   00117C  EFC2  F008         	goto	l17231
  5475   001180                     u21470:
  5476   001180  EF88  F00B         	goto	l17329
  5477   001184                     l17231:
  5478                           
  5479                           ; BSR set to: 1
  5480                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  5481   001184  053A               	decf	f_write@clst& (0+255),w,b
  5482   001186  113B               	iorwf	(f_write@clst+1)& (0+255),w,b
  5483   001188  113C               	iorwf	(f_write@clst+2)& (0+255),w,b
  5484   00118A  113D               	iorwf	(f_write@clst+3)& (0+255),w,b
  5485   00118C  A4D8               	btfss	status,2,c
  5486   00118E  EFCB  F008         	goto	u21481
  5487   001192  EFCD  F008         	goto	u21480
  5488   001196                     u21481:
  5489   001196  EFD8  F008         	goto	l17239
  5490   00119A                     u21480:
  5491   00119A                     
  5492                           ; BSR set to: 1
  5493   00119A  EE20 F00F          	lfsr	2,15
  5494   00119E  5117               	movf	f_write@fp& (0+255),w,b
  5495   0011A0  26D9               	addwf	fsr2l,f,c
  5496   0011A2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5497   0011A4  22DA               	addwfc	fsr2h,f,c
  5498   0011A6  0E02               	movlw	2
  5499   0011A8  6EDF               	movwf	indf2,c
  5500   0011AA                     l17235:
  5501                           
  5502                           ; BSR set to: 1
  5503   0011AA  0E02               	movlw	2
  5504   0011AC  EF91  F00B         	goto	l1355
  5505   0011B0                     l17239:
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  5509   0011B0  293A               	incf	f_write@clst& (0+255),w,b
  5510   0011B2  E10A               	bnz	u21491
  5511   0011B4  293B               	incf	(f_write@clst+1)& (0+255),w,b
  5512   0011B6  E108               	bnz	u21491
  5513   0011B8  293C               	incf	(f_write@clst+2)& (0+255),w,b
  5514   0011BA  E106               	bnz	u21491
  5515   0011BC  293D               	incf	(f_write@clst+3)& (0+255),w,b
  5516   0011BE  A4D8               	btfss	status,2,c
  5517   0011C0  EFE4  F008         	goto	u21491
  5518   0011C4  EFE6  F008         	goto	u21490
  5519   0011C8                     u21491:
  5520   0011C8  EFF1  F008         	goto	l17247
  5521   0011CC                     u21490:
  5522   0011CC                     
  5523                           ; BSR set to: 1
  5524   0011CC  EE20 F00F          	lfsr	2,15
  5525   0011D0  5117               	movf	f_write@fp& (0+255),w,b
  5526   0011D2  26D9               	addwf	fsr2l,f,c
  5527   0011D4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5528   0011D6  22DA               	addwfc	fsr2h,f,c
  5529   0011D8  0E01               	movlw	1
  5530   0011DA  6EDF               	movwf	indf2,c
  5531   0011DC                     l17243:
  5532                           
  5533                           ; BSR set to: 1
  5534   0011DC  0E01               	movlw	1
  5535   0011DE  EF91  F00B         	goto	l1355
  5536   0011E2                     l17247:
  5537                           
  5538                           ; BSR set to: 1
  5539                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  5540   0011E2  EE20 F014          	lfsr	2,20
  5541   0011E6  5117               	movf	f_write@fp& (0+255),w,b
  5542   0011E8  26D9               	addwf	fsr2l,f,c
  5543   0011EA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5544   0011EC  22DA               	addwfc	fsr2h,f,c
  5545   0011EE  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  5546   0011F4  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  5547   0011FA  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  5548   001200  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  5549                           
  5550                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  5551   001206  EE20 F006          	lfsr	2,6
  5552   00120A  5117               	movf	f_write@fp& (0+255),w,b
  5553   00120C  26D9               	addwf	fsr2l,f,c
  5554   00120E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5555   001210  22DA               	addwfc	fsr2h,f,c
  5556   001212  50DE               	movf	postinc2,w,c
  5557   001214  10DE               	iorwf	postinc2,w,c
  5558   001216  10DE               	iorwf	postinc2,w,c
  5559   001218  10DE               	iorwf	postinc2,w,c
  5560   00121A  A4D8               	btfss	status,2,c
  5561   00121C  EF12  F009         	goto	u21501
  5562   001220  EF14  F009         	goto	u21500
  5563   001224                     u21501:
  5564   001224  EF26  F009         	goto	l1363
  5565   001228                     u21500:
  5566   001228                     
  5567                           ; BSR set to: 1
  5568   001228  EE20 F006          	lfsr	2,6
  5569   00122C  5117               	movf	f_write@fp& (0+255),w,b
  5570   00122E  26D9               	addwf	fsr2l,f,c
  5571   001230  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5572   001232  22DA               	addwfc	fsr2h,f,c
  5573   001234  0060  F4EB  FFDE   	movff	f_write@clst,postinc2
  5574   00123A  0060  F4EF  FFDE   	movff	f_write@clst+1,postinc2
  5575   001240  0060  F4F3  FFDE   	movff	f_write@clst+2,postinc2
  5576   001246  0060  F4F7  FFDE   	movff	f_write@clst+3,postinc2
  5577   00124C                     l1363:
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  5581   00124C  EE20 F00E          	lfsr	2,14
  5582   001250  5117               	movf	f_write@fp& (0+255),w,b
  5583   001252  26D9               	addwf	fsr2l,f,c
  5584   001254  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5585   001256  22DA               	addwfc	fsr2h,f,c
  5586   001258  AEDF               	btfss	indf2,7,c
  5587   00125A  EF31  F009         	goto	u21511
  5588   00125E  EF33  F009         	goto	u21510
  5589   001262                     u21511:
  5590   001262  EF7A  F009         	goto	l17261
  5591   001266                     u21510:
  5592   001266                     
  5593                           ; BSR set to: 1
  5594                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  5595   001266  0E22               	movlw	34
  5596   001268  2517               	addwf	f_write@fp& (0+255),w,b
  5597   00126A  0100               	movlb	0	; () banked
  5598   00126C  6FAB               	movwf	disk_write@buff& (0+255),b
  5599   00126E  0E00               	movlw	0
  5600   001270  0101               	movlb	1	; () banked
  5601   001272  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5602   001274  0100               	movlb	0	; () banked
  5603   001276  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
  5604   001278  0101               	movlb	1	; () banked
  5605   00127A  EE20 F018          	lfsr	2,24
  5606   00127E  5117               	movf	f_write@fp& (0+255),w,b
  5607   001280  26D9               	addwf	fsr2l,f,c
  5608   001282  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5609   001284  22DA               	addwfc	fsr2h,f,c
  5610   001286  006F FF78  F0AD    	movff	postinc2,disk_write@sector
  5611   00128C  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
  5612   001292  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
  5613   001298  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
  5614   00129E  0E00               	movlw	0
  5615   0012A0  0100               	movlb	0	; () banked
  5616   0012A2  6FB2               	movwf	(disk_write@count+1)& (0+255),b
  5617   0012A4  0E01               	movlw	1
  5618   0012A6  6FB1               	movwf	disk_write@count& (0+255),b
  5619   0012A8  0101               	movlb	1	; () banked
  5620   0012AA  EE20 F001          	lfsr	2,1
  5621   0012AE  5140               	movf	f_write@fs& (0+255),w,b
  5622   0012B0  26D9               	addwf	fsr2l,f,c
  5623   0012B2  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5624   0012B4  22DA               	addwfc	fsr2h,f,c
  5625   0012B6  50DF               	movf	indf2,w,c
  5626   0012B8  EC1D  F04D         	call	_disk_write
  5627   0012BC  0900               	iorlw	0
  5628   0012BE  B4D8               	btfsc	status,2,c
  5629   0012C0  EF64  F009         	goto	u21521
  5630   0012C4  EF66  F009         	goto	u21520
  5631   0012C8                     u21521:
  5632   0012C8  EF71  F009         	goto	l17259
  5633   0012CC                     u21520:
  5634   0012CC  0101               	movlb	1	; () banked
  5635   0012CE  EE20 F00F          	lfsr	2,15
  5636   0012D2  5117               	movf	f_write@fp& (0+255),w,b
  5637   0012D4  26D9               	addwf	fsr2l,f,c
  5638   0012D6  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5639   0012D8  22DA               	addwfc	fsr2h,f,c
  5640   0012DA  0E01               	movlw	1
  5641   0012DC  6EDF               	movwf	indf2,c
  5642   0012DE  EFEE  F008         	goto	l17243
  5643   0012E2                     l17259:
  5644                           
  5645                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  5646   0012E2  0101               	movlb	1	; () banked
  5647   0012E4  EE20 F00E          	lfsr	2,14
  5648   0012E8  5117               	movf	f_write@fp& (0+255),w,b
  5649   0012EA  26D9               	addwf	fsr2l,f,c
  5650   0012EC  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5651   0012EE  22DA               	addwfc	fsr2h,f,c
  5652   0012F0  0E7F               	movlw	127
  5653   0012F2  16DF               	andwf	indf2,f,c
  5654   0012F4                     l17261:
  5655                           
  5656                           ; BSR set to: 1
  5657                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  5658   0012F4  C140  F06C         	movff	f_write@fs,clst2sect@fs
  5659   0012F8  C141  F06D         	movff	f_write@fs+1,clst2sect@fs+1
  5660   0012FC  EE20 F014          	lfsr	2,20
  5661   001300  5117               	movf	f_write@fp& (0+255),w,b
  5662   001302  26D9               	addwf	fsr2l,f,c
  5663   001304  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5664   001306  22DA               	addwfc	fsr2h,f,c
  5665   001308  006F FF78  F06E    	movff	postinc2,clst2sect@clst
  5666   00130E  006F FF78  F06F    	movff	postinc2,clst2sect@clst+1
  5667   001314  006F FF78  F070    	movff	postinc2,clst2sect@clst+2
  5668   00131A  006F FF78  F071    	movff	postinc2,clst2sect@clst+3
  5669   001320  EC6C  F046         	call	_clst2sect	;wreg free
  5670   001324  C06C  F136         	movff	?_clst2sect,f_write@sect
  5671   001328  C06D  F137         	movff	?_clst2sect+1,f_write@sect+1
  5672   00132C  C06E  F138         	movff	?_clst2sect+2,f_write@sect+2
  5673   001330  C06F  F139         	movff	?_clst2sect+3,f_write@sect+3
  5674   001334                     
  5675                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  5676   001334  0101               	movlb	1	; () banked
  5677   001336  5136               	movf	f_write@sect& (0+255),w,b
  5678   001338  1137               	iorwf	(f_write@sect+1)& (0+255),w,b
  5679   00133A  1138               	iorwf	(f_write@sect+2)& (0+255),w,b
  5680   00133C  1139               	iorwf	(f_write@sect+3)& (0+255),w,b
  5681   00133E  A4D8               	btfss	status,2,c
  5682   001340  EFA4  F009         	goto	u21531
  5683   001344  EFA6  F009         	goto	u21530
  5684   001348                     u21531:
  5685   001348  EFB0  F009         	goto	l17271
  5686   00134C                     u21530:
  5687   00134C                     
  5688                           ; BSR set to: 1
  5689   00134C  EE20 F00F          	lfsr	2,15
  5690   001350  5117               	movf	f_write@fp& (0+255),w,b
  5691   001352  26D9               	addwf	fsr2l,f,c
  5692   001354  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5693   001356  22DA               	addwfc	fsr2h,f,c
  5694   001358  0E02               	movlw	2
  5695   00135A  6EDF               	movwf	indf2,c
  5696   00135C  EFD5  F008         	goto	l17235
  5697   001360                     l17271:
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  5701   001360  5132               	movf	f_write@csect& (0+255),w,b
  5702   001362  2736               	addwf	f_write@sect& (0+255),f,b
  5703   001364  5133               	movf	(f_write@csect+1)& (0+255),w,b
  5704   001366  2337               	addwfc	(f_write@sect+1)& (0+255),f,b
  5705   001368  0E00               	movlw	0
  5706   00136A  2338               	addwfc	(f_write@sect+2)& (0+255),f,b
  5707   00136C  0E00               	movlw	0
  5708   00136E  2339               	addwfc	(f_write@sect+3)& (0+255),f,b
  5709   001370                     
  5710                           ; BSR set to: 1
  5711                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  5712   001370  C11B  F11F         	movff	f_write@btw,??_f_write
  5713   001374  C11C  F120         	movff	f_write@btw+1,??_f_write+1
  5714   001378  0E09               	movlw	9
  5715   00137A  6F21               	movwf	(??_f_write+2)& (0+255),b
  5716   00137C                     u21545:
  5717   00137C  90D8               	bcf	status,0,c
  5718   00137E  3320               	rrcf	(??_f_write+1)& (0+255),f,b
  5719   001380  331F               	rrcf	??_f_write& (0+255),f,b
  5720   001382  2F21               	decfsz	(??_f_write+2)& (0+255),f,b
  5721   001384  EFBE  F009         	goto	u21545
  5722   001388  C11F  F134         	movff	??_f_write,f_write@cc
  5723   00138C  C120  F135         	movff	??_f_write+1,f_write@cc+1
  5724   001390                     
  5725                           ; BSR set to: 1
  5726                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  5727   001390  5134               	movf	f_write@cc& (0+255),w,b
  5728   001392  1135               	iorwf	(f_write@cc+1)& (0+255),w,b
  5729   001394  B4D8               	btfsc	status,2,c
  5730   001396  EFCF  F009         	goto	u21551
  5731   00139A  EFD1  F009         	goto	u21550
  5732   00139E                     u21551:
  5733   00139E  EF38  F00A         	goto	l17291
  5734   0013A2                     u21550:
  5735   0013A2                     
  5736                           ; BSR set to: 1
  5737                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  5738   0013A2  5134               	movf	f_write@cc& (0+255),w,b
  5739   0013A4  2532               	addwf	f_write@csect& (0+255),w,b
  5740   0013A6  6F1F               	movwf	??_f_write& (0+255),b
  5741   0013A8  5135               	movf	(f_write@cc+1)& (0+255),w,b
  5742   0013AA  2133               	addwfc	(f_write@csect+1)& (0+255),w,b
  5743   0013AC  6F20               	movwf	(??_f_write+1)& (0+255),b
  5744   0013AE  EE20 F009          	lfsr	2,9
  5745   0013B2  5140               	movf	f_write@fs& (0+255),w,b
  5746   0013B4  26D9               	addwf	fsr2l,f,c
  5747   0013B6  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5748   0013B8  22DA               	addwfc	fsr2h,f,c
  5749   0013BA  511F               	movf	??_f_write& (0+255),w,b
  5750   0013BC  5CDE               	subwf	postinc2,w,c
  5751   0013BE  5120               	movf	(??_f_write+1)& (0+255),w,b
  5752   0013C0  58DE               	subwfb	postinc2,w,c
  5753   0013C2  B0D8               	btfsc	status,0,c
  5754   0013C4  EFE6  F009         	goto	u21561
  5755   0013C8  EFE8  F009         	goto	u21560
  5756   0013CC                     u21561:
  5757   0013CC  EFFA  F009         	goto	l17281
  5758   0013D0                     u21560:
  5759   0013D0                     
  5760                           ; BSR set to: 1
  5761                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  5762   0013D0  EE20 F009          	lfsr	2,9
  5763   0013D4  5140               	movf	f_write@fs& (0+255),w,b
  5764   0013D6  26D9               	addwf	fsr2l,f,c
  5765   0013D8  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5766   0013DA  22DA               	addwfc	fsr2h,f,c
  5767   0013DC  006F FF78  F11F    	movff	postinc2,??_f_write
  5768   0013E2  006F FF74  F120    	movff	postdec2,??_f_write+1
  5769   0013E8  5132               	movf	f_write@csect& (0+255),w,b
  5770   0013EA  5D1F               	subwf	??_f_write& (0+255),w,b
  5771   0013EC  6F34               	movwf	f_write@cc& (0+255),b
  5772   0013EE  5133               	movf	(f_write@csect+1)& (0+255),w,b
  5773   0013F0  5920               	subwfb	(??_f_write+1)& (0+255),w,b
  5774   0013F2  6F35               	movwf	(f_write@cc+1)& (0+255),b
  5775   0013F4                     l17281:
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  5779   0013F4  C12F  F0AB         	movff	f_write@wbuff,disk_write@buff
  5780   0013F8  C130  F0AC         	movff	f_write@wbuff+1,disk_write@buff+1
  5781   0013FC  C136  F0AD         	movff	f_write@sect,disk_write@sector
  5782   001400  C137  F0AE         	movff	f_write@sect+1,disk_write@sector+1
  5783   001404  C138  F0AF         	movff	f_write@sect+2,disk_write@sector+2
  5784   001408  C139  F0B0         	movff	f_write@sect+3,disk_write@sector+3
  5785   00140C  C134  F0B1         	movff	f_write@cc,disk_write@count
  5786   001410  C135  F0B2         	movff	f_write@cc+1,disk_write@count+1
  5787   001414  EE20 F001          	lfsr	2,1
  5788   001418  5140               	movf	f_write@fs& (0+255),w,b
  5789   00141A  26D9               	addwf	fsr2l,f,c
  5790   00141C  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5791   00141E  22DA               	addwfc	fsr2h,f,c
  5792   001420  50DF               	movf	indf2,w,c
  5793   001422  EC1D  F04D         	call	_disk_write
  5794   001426  0900               	iorlw	0
  5795   001428  B4D8               	btfsc	status,2,c
  5796   00142A  EF19  F00A         	goto	u21571
  5797   00142E  EF1B  F00A         	goto	u21570
  5798   001432                     u21571:
  5799   001432  EF26  F00A         	goto	l17289
  5800   001436                     u21570:
  5801   001436  0101               	movlb	1	; () banked
  5802   001438  EE20 F00F          	lfsr	2,15
  5803   00143C  5117               	movf	f_write@fp& (0+255),w,b
  5804   00143E  26D9               	addwf	fsr2l,f,c
  5805   001440  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5806   001442  22DA               	addwfc	fsr2h,f,c
  5807   001444  0E01               	movlw	1
  5808   001446  6EDF               	movwf	indf2,c
  5809   001448  EFEE  F008         	goto	l17243
  5810   00144C                     l17289:
  5811                           
  5812                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  5813   00144C  C134  F11F         	movff	f_write@cc,??_f_write
  5814   001450  C135  F120         	movff	f_write@cc+1,??_f_write+1
  5815   001454  0E09               	movlw	9
  5816   001456                     u21585:
  5817   001456  90D8               	bcf	status,0,c
  5818   001458  0101               	movlb	1	; () banked
  5819   00145A  371F               	rlcf	??_f_write& (0+255),f,b
  5820   00145C  3720               	rlcf	(??_f_write+1)& (0+255),f,b
  5821   00145E  2EE8               	decfsz	wreg,f,c
  5822   001460  EF2B  F00A         	goto	u21585
  5823   001464  C11F  F13E         	movff	??_f_write,f_write@wcnt
  5824   001468  C120  F13F         	movff	??_f_write+1,f_write@wcnt+1
  5825                           
  5826                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  5827   00146C  EF0D  F00B         	goto	l17313
  5828   001470                     l17291:
  5829                           
  5830                           ; BSR set to: 1
  5831                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  5832   001470  EE20 F018          	lfsr	2,24
  5833   001474  5117               	movf	f_write@fp& (0+255),w,b
  5834   001476  26D9               	addwf	fsr2l,f,c
  5835   001478  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5836   00147A  22DA               	addwfc	fsr2h,f,c
  5837   00147C  5136               	movf	f_write@sect& (0+255),w,b
  5838   00147E  18DE               	xorwf	postinc2,w,c
  5839   001480  E10F               	bnz	u21590
  5840   001482  5137               	movf	(f_write@sect+1)& (0+255),w,b
  5841   001484  18DE               	xorwf	postinc2,w,c
  5842   001486  E10C               	bnz	u21590
  5843   001488  5138               	movf	(f_write@sect+2)& (0+255),w,b
  5844   00148A  18DE               	xorwf	postinc2,w,c
  5845   00148C  E109               	bnz	u21590
  5846   00148E  5139               	movf	(f_write@sect+3)& (0+255),w,b
  5847   001490  18DE               	xorwf	postinc2,w,c
  5848   001492  B4D8               	btfsc	status,2,c
  5849   001494  EF4E  F00A         	goto	u21591
  5850   001498  EF50  F00A         	goto	u21590
  5851   00149C                     u21591:
  5852   00149C  EF9D  F00A         	goto	l17303
  5853   0014A0                     u21590:
  5854   0014A0                     
  5855                           ; BSR set to: 1
  5856   0014A0  EE20 F00A          	lfsr	2,10
  5857   0014A4  5117               	movf	f_write@fp& (0+255),w,b
  5858   0014A6  26D9               	addwf	fsr2l,f,c
  5859   0014A8  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5860   0014AA  22DA               	addwfc	fsr2h,f,c
  5861   0014AC  EE10 F010          	lfsr	1,16
  5862   0014B0  5117               	movf	f_write@fp& (0+255),w,b
  5863   0014B2  26E1               	addwf	fsr1l,f,c
  5864   0014B4  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5865   0014B6  22E2               	addwfc	fsr1h,f,c
  5866   0014B8  50DE               	movf	postinc2,w,c
  5867   0014BA  5CE6               	subwf	postinc1,w,c
  5868   0014BC  50DE               	movf	postinc2,w,c
  5869   0014BE  58E6               	subwfb	postinc1,w,c
  5870   0014C0  50DE               	movf	postinc2,w,c
  5871   0014C2  58E6               	subwfb	postinc1,w,c
  5872   0014C4  50DE               	movf	postinc2,w,c
  5873   0014C6  58E6               	subwfb	postinc1,w,c
  5874   0014C8  B0D8               	btfsc	status,0,c
  5875   0014CA  EF69  F00A         	goto	u21601
  5876   0014CE  EF6B  F00A         	goto	u21600
  5877   0014D2                     u21601:
  5878   0014D2  EF9D  F00A         	goto	l17303
  5879   0014D6                     u21600:
  5880   0014D6                     
  5881                           ; BSR set to: 1
  5882   0014D6  0E22               	movlw	34
  5883   0014D8  2517               	addwf	f_write@fp& (0+255),w,b
  5884   0014DA  0100               	movlb	0	; () banked
  5885   0014DC  6FA8               	movwf	disk_read@buff& (0+255),b
  5886   0014DE  0E00               	movlw	0
  5887   0014E0  0101               	movlb	1	; () banked
  5888   0014E2  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  5889   0014E4  0100               	movlb	0	; () banked
  5890   0014E6  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  5891   0014E8  C136  F0AA         	movff	f_write@sect,disk_read@sector
  5892   0014EC  C137  F0AB         	movff	f_write@sect+1,disk_read@sector+1
  5893   0014F0  C138  F0AC         	movff	f_write@sect+2,disk_read@sector+2
  5894   0014F4  C139  F0AD         	movff	f_write@sect+3,disk_read@sector+3
  5895   0014F8  0E00               	movlw	0
  5896   0014FA  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  5897   0014FC  0E01               	movlw	1
  5898   0014FE  6FAE               	movwf	disk_read@count& (0+255),b
  5899   001500  0101               	movlb	1	; () banked
  5900   001502  EE20 F001          	lfsr	2,1
  5901   001506  5140               	movf	f_write@fs& (0+255),w,b
  5902   001508  26D9               	addwf	fsr2l,f,c
  5903   00150A  5141               	movf	(f_write@fs+1)& (0+255),w,b
  5904   00150C  22DA               	addwfc	fsr2h,f,c
  5905   00150E  50DF               	movf	indf2,w,c
  5906   001510  EC51  F04D         	call	_disk_read
  5907   001514  0900               	iorlw	0
  5908   001516  B4D8               	btfsc	status,2,c
  5909   001518  EF90  F00A         	goto	u21611
  5910   00151C  EF92  F00A         	goto	u21610
  5911   001520                     u21611:
  5912   001520  EF9D  F00A         	goto	l17303
  5913   001524                     u21610:
  5914   001524                     
  5915                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  5916   001524  0101               	movlb	1	; () banked
  5917   001526  EE20 F00F          	lfsr	2,15
  5918   00152A  5117               	movf	f_write@fp& (0+255),w,b
  5919   00152C  26D9               	addwf	fsr2l,f,c
  5920   00152E  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5921   001530  22DA               	addwfc	fsr2h,f,c
  5922   001532  0E01               	movlw	1
  5923   001534  6EDF               	movwf	indf2,c
  5924   001536  EFEE  F008         	goto	l17243
  5925   00153A                     l17303:
  5926                           
  5927                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  5928   00153A  0101               	movlb	1	; () banked
  5929   00153C  EE20 F018          	lfsr	2,24
  5930   001540  5117               	movf	f_write@fp& (0+255),w,b
  5931   001542  26D9               	addwf	fsr2l,f,c
  5932   001544  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5933   001546  22DA               	addwfc	fsr2h,f,c
  5934   001548  0060  F4DB  FFDE   	movff	f_write@sect,postinc2
  5935   00154E  0060  F4DF  FFDE   	movff	f_write@sect+1,postinc2
  5936   001554  0060  F4E3  FFDE   	movff	f_write@sect+2,postinc2
  5937   00155A  0060  F4E7  FFDE   	movff	f_write@sect+3,postinc2
  5938   001560                     l1362:
  5939                           
  5940                           ; BSR set to: 1
  5941                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  5942   001560  EE20 F010          	lfsr	2,16
  5943   001564  5117               	movf	f_write@fp& (0+255),w,b
  5944   001566  26D9               	addwf	fsr2l,f,c
  5945   001568  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5946   00156A  22DA               	addwfc	fsr2h,f,c
  5947   00156C  006F FF78  F11F    	movff	postinc2,??_f_write
  5948   001572  006F FF74  F120    	movff	postdec2,??_f_write+1
  5949   001578  0EFF               	movlw	255
  5950   00157A  151F               	andwf	??_f_write& (0+255),w,b
  5951   00157C  6F21               	movwf	(??_f_write+2)& (0+255),b
  5952   00157E  0E01               	movlw	1
  5953   001580  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5954   001582  6F22               	movwf	(??_f_write+3)& (0+255),b
  5955   001584  5121               	movf	(??_f_write+2)& (0+255),w,b
  5956   001586  0800               	sublw	0
  5957   001588  6F3E               	movwf	f_write@wcnt& (0+255),b
  5958   00158A  5122               	movf	(??_f_write+3)& (0+255),w,b
  5959   00158C  A0D8               	btfss	status,0,c
  5960   00158E  2AE8               	incf	wreg,f,c
  5961   001590  0802               	sublw	2
  5962   001592  6F3F               	movwf	(f_write@wcnt+1)& (0+255),b
  5963   001594                     
  5964                           ; BSR set to: 1
  5965                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  5966   001594  513E               	movf	f_write@wcnt& (0+255),w,b
  5967   001596  5D1B               	subwf	f_write@btw& (0+255),w,b
  5968   001598  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  5969   00159A  591C               	subwfb	(f_write@btw+1)& (0+255),w,b
  5970   00159C  B0D8               	btfsc	status,0,c
  5971   00159E  EFD3  F00A         	goto	u21621
  5972   0015A2  EFD5  F00A         	goto	u21620
  5973   0015A6                     u21621:
  5974   0015A6  EFD9  F00A         	goto	l17309
  5975   0015AA                     u21620:
  5976   0015AA                     
  5977                           ; BSR set to: 1
  5978   0015AA  C11B  F13E         	movff	f_write@btw,f_write@wcnt
  5979   0015AE  C11C  F13F         	movff	f_write@btw+1,f_write@wcnt+1
  5980   0015B2                     l17309:
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  5984   0015B2  EE20 F010          	lfsr	2,16
  5985   0015B6  5117               	movf	f_write@fp& (0+255),w,b
  5986   0015B8  26D9               	addwf	fsr2l,f,c
  5987   0015BA  5118               	movf	(f_write@fp+1)& (0+255),w,b
  5988   0015BC  22DA               	addwfc	fsr2h,f,c
  5989   0015BE  006F FF78  F11F    	movff	postinc2,??_f_write
  5990   0015C4  006F FF74  F120    	movff	postdec2,??_f_write+1
  5991   0015CA  0EFF               	movlw	255
  5992   0015CC  151F               	andwf	??_f_write& (0+255),w,b
  5993   0015CE  6F21               	movwf	(??_f_write+2)& (0+255),b
  5994   0015D0  0E01               	movlw	1
  5995   0015D2  1520               	andwf	(??_f_write+1)& (0+255),w,b
  5996   0015D4  6F22               	movwf	(??_f_write+3)& (0+255),b
  5997   0015D6  5121               	movf	(??_f_write+2)& (0+255),w,b
  5998   0015D8  2517               	addwf	f_write@fp& (0+255),w,b
  5999   0015DA  6F23               	movwf	(??_f_write+4)& (0+255),b
  6000   0015DC  5122               	movf	(??_f_write+3)& (0+255),w,b
  6001   0015DE  2118               	addwfc	(f_write@fp+1)& (0+255),w,b
  6002   0015E0  6F24               	movwf	(??_f_write+5)& (0+255),b
  6003   0015E2  0E22               	movlw	34
  6004   0015E4  2523               	addwf	(??_f_write+4)& (0+255),w,b
  6005   0015E6  0100               	movlb	0	; () banked
  6006   0015E8  6F60               	movwf	mem_cpy@dst& (0+255),b
  6007   0015EA  0E00               	movlw	0
  6008   0015EC  0101               	movlb	1	; () banked
  6009   0015EE  2124               	addwfc	(??_f_write+5)& (0+255),w,b
  6010   0015F0  0100               	movlb	0	; () banked
  6011   0015F2  6F61               	movwf	(mem_cpy@dst+1)& (0+255),b
  6012   0015F4  C12F  F062         	movff	f_write@wbuff,mem_cpy@src
  6013   0015F8  C130  F063         	movff	f_write@wbuff+1,mem_cpy@src+1
  6014   0015FC  C13E  F064         	movff	f_write@wcnt,mem_cpy@cnt
  6015   001600  C13F  F065         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  6016   001604  EC4D  F04B         	call	_mem_cpy	;wreg free
  6017   001608                     
  6018                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  6019   001608  0101               	movlb	1	; () banked
  6020   00160A  EE20 F00E          	lfsr	2,14
  6021   00160E  5117               	movf	f_write@fp& (0+255),w,b
  6022   001610  26D9               	addwf	fsr2l,f,c
  6023   001612  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6024   001614  22DA               	addwfc	fsr2h,f,c
  6025   001616  0E00               	movlw	0
  6026   001618  8EDB               	bsf	plusw2,7,c
  6027   00161A                     l17313:
  6028                           
  6029                           ; BSR set to: 1
  6030   00161A  513E               	movf	f_write@wcnt& (0+255),w,b
  6031   00161C  5F1B               	subwf	f_write@btw& (0+255),f,b
  6032   00161E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  6033   001620  5B1C               	subwfb	(f_write@btw+1)& (0+255),f,b
  6034   001622                     
  6035                           ; BSR set to: 1
  6036   001622  0060  F477  FFD9   	movff	f_write@bw,fsr2l
  6037   001628  0060  F47B  FFDA   	movff	f_write@bw+1,fsr2h
  6038   00162E  513E               	movf	f_write@wcnt& (0+255),w,b
  6039   001630  26DE               	addwf	postinc2,f,c
  6040   001632  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  6041   001634  22DD               	addwfc	postdec2,f,c
  6042   001636                     
  6043                           ; BSR set to: 1
  6044   001636  513E               	movf	f_write@wcnt& (0+255),w,b
  6045   001638  272F               	addwf	f_write@wbuff& (0+255),f,b
  6046   00163A  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  6047   00163C  2330               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  6048   00163E                     
  6049                           ; BSR set to: 1
  6050   00163E  EE20 F010          	lfsr	2,16
  6051   001642  5117               	movf	f_write@fp& (0+255),w,b
  6052   001644  26D9               	addwf	fsr2l,f,c
  6053   001646  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6054   001648  22DA               	addwfc	fsr2h,f,c
  6055   00164A  513E               	movf	f_write@wcnt& (0+255),w,b
  6056   00164C  26DE               	addwf	postinc2,f,c
  6057   00164E  513F               	movf	(f_write@wcnt+1)& (0+255),w,b
  6058   001650  22DE               	addwfc	postinc2,f,c
  6059   001652  0E00               	movlw	0
  6060   001654  22DE               	addwfc	postinc2,f,c
  6061   001656  22DE               	addwfc	postinc2,f,c
  6062   001658                     
  6063                           ; BSR set to: 1
  6064   001658  EE20 F010          	lfsr	2,16
  6065   00165C  5117               	movf	f_write@fp& (0+255),w,b
  6066   00165E  26D9               	addwf	fsr2l,f,c
  6067   001660  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6068   001662  22DA               	addwfc	fsr2h,f,c
  6069   001664  EE10 F00A          	lfsr	1,10
  6070   001668  5117               	movf	f_write@fp& (0+255),w,b
  6071   00166A  26E1               	addwf	fsr1l,f,c
  6072   00166C  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6073   00166E  22E2               	addwfc	fsr1h,f,c
  6074   001670  50DE               	movf	postinc2,w,c
  6075   001672  5CE6               	subwf	postinc1,w,c
  6076   001674  50DE               	movf	postinc2,w,c
  6077   001676  58E6               	subwfb	postinc1,w,c
  6078   001678  50DE               	movf	postinc2,w,c
  6079   00167A  58E6               	subwfb	postinc1,w,c
  6080   00167C  50DE               	movf	postinc2,w,c
  6081   00167E  58E6               	subwfb	postinc1,w,c
  6082   001680  A0D8               	btfss	status,0,c
  6083   001682  EF45  F00B         	goto	u21631
  6084   001686  EF47  F00B         	goto	u21630
  6085   00168A                     u21631:
  6086   00168A  EF5B  F00B         	goto	l17325
  6087   00168E                     u21630:
  6088   00168E                     
  6089                           ; BSR set to: 1
  6090   00168E  EE20 F00A          	lfsr	2,10
  6091   001692  5117               	movf	f_write@fp& (0+255),w,b
  6092   001694  26D9               	addwf	fsr2l,f,c
  6093   001696  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6094   001698  22DA               	addwfc	fsr2h,f,c
  6095   00169A  006F FF78  F12B    	movff	postinc2,_f_write$3415
  6096   0016A0  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  6097   0016A6  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  6098   0016AC  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  6099   0016B2  EF6D  F00B         	goto	l1384
  6100   0016B6                     l17325:
  6101                           
  6102                           ; BSR set to: 1
  6103   0016B6  EE20 F010          	lfsr	2,16
  6104   0016BA  5117               	movf	f_write@fp& (0+255),w,b
  6105   0016BC  26D9               	addwf	fsr2l,f,c
  6106   0016BE  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6107   0016C0  22DA               	addwfc	fsr2h,f,c
  6108   0016C2  006F FF78  F12B    	movff	postinc2,_f_write$3415
  6109   0016C8  006F FF78  F12C    	movff	postinc2,_f_write$3415+1
  6110   0016CE  006F FF78  F12D    	movff	postinc2,_f_write$3415+2
  6111   0016D4  006F FF78  F12E    	movff	postinc2,_f_write$3415+3
  6112   0016DA                     l1384:
  6113                           
  6114                           ; BSR set to: 1
  6115   0016DA  EE20 F00A          	lfsr	2,10
  6116   0016DE  5117               	movf	f_write@fp& (0+255),w,b
  6117   0016E0  26D9               	addwf	fsr2l,f,c
  6118   0016E2  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6119   0016E4  22DA               	addwfc	fsr2h,f,c
  6120   0016E6  0060  F4AF  FFDE   	movff	_f_write$3415,postinc2
  6121   0016EC  0060  F4B3  FFDE   	movff	_f_write$3415+1,postinc2
  6122   0016F2  0060  F4B7  FFDE   	movff	_f_write$3415+2,postinc2
  6123   0016F8  0060  F4BB  FFDE   	movff	_f_write$3415+3,postinc2
  6124   0016FE                     l17327:
  6125                           
  6126                           ; BSR set to: 1
  6127   0016FE  511B               	movf	f_write@btw& (0+255),w,b
  6128   001700  111C               	iorwf	(f_write@btw+1)& (0+255),w,b
  6129   001702  A4D8               	btfss	status,2,c
  6130   001704  EF86  F00B         	goto	u21641
  6131   001708  EF88  F00B         	goto	u21640
  6132   00170C                     u21641:
  6133   00170C  EFF2  F007         	goto	l17211
  6134   001710                     u21640:
  6135   001710                     l17329:
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  6139   001710  EE20 F00E          	lfsr	2,14
  6140   001714  5117               	movf	f_write@fp& (0+255),w,b
  6141   001716  26D9               	addwf	fsr2l,f,c
  6142   001718  5118               	movf	(f_write@fp+1)& (0+255),w,b
  6143   00171A  22DA               	addwfc	fsr2h,f,c
  6144   00171C  0E00               	movlw	0
  6145   00171E  8CDB               	bsf	plusw2,6,c
  6146   001720                     
  6147                           ; BSR set to: 1
  6148                           ;mcc_generated_files/fatfs/ff.c: 3921:  return FR_OK;
  6149   001720  0E00               	movlw	0
  6150   001722                     l1355:
  6151                           
  6152                           ; BSR set to: 1
  6153   001722  0012               	return		;funcret
  6154   001724                     __end_of_f_write:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _f_open *****************
  6158 ;; Defined at:
  6159 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  fp              2   65[BANK1 ] PTR struct .
  6162 ;;		 -> Fil(546), 
  6163 ;;  path            2   67[BANK1 ] PTR const unsigned char 
  6164 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  6165 ;;  mode            1   69[BANK1 ] unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  dj             40  105[BANK1 ] struct .
  6168 ;;  clst            4   98[BANK1 ] unsigned long 
  6169 ;;  ofs             4   94[BANK1 ] unsigned long 
  6170 ;;  cl              4   90[BANK1 ] unsigned long 
  6171 ;;  bcs             4   86[BANK1 ] unsigned long 
  6172 ;;  sc              4   82[BANK1 ] unsigned long 
  6173 ;;  dw              4   78[BANK1 ] unsigned long 
  6174 ;;  fs              2  102[BANK1 ] PTR struct .
  6175 ;;		 -> FatFs(563), NULL(0), 
  6176 ;;  res             1  104[BANK1 ] enum E68
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      enum E68
  6179 ;; Registers used:
  6180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6186 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;Total ram usage:       80 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 17
  6193 ;; This function calls:
  6194 ;;		_clst2sect
  6195 ;;		_dir_register
  6196 ;;		_disk_read
  6197 ;;		_find_volume
  6198 ;;		_follow_path
  6199 ;;		_get_fat
  6200 ;;		_ld_clust
  6201 ;;		_ld_dword
  6202 ;;		_mem_set
  6203 ;;		_move_window
  6204 ;;		_remove_chain
  6205 ;;		_st_clust
  6206 ;;		_st_dword
  6207 ;; This function is called by:
  6208 ;;		_main
  6209 ;;		_send_status_ok
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text18
  6214   001F40                     __ptext18:
  6215                           	callstack 0
  6216   001F40                     _f_open:
  6217                           	callstack 12
  6218   001F40                     
  6219                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  6220   001F40  0101               	movlb	1	; () banked
  6221   001F42  5141               	movf	f_open@fp& (0+255),w,b
  6222   001F44  1142               	iorwf	(f_open@fp+1)& (0+255),w,b
  6223   001F46  A4D8               	btfss	status,2,c
  6224   001F48  EFA8  F00F         	goto	u21051
  6225   001F4C  EFAA  F00F         	goto	u21050
  6226   001F50                     u21051:
  6227   001F50  EFAD  F00F         	goto	l17039
  6228   001F54                     u21050:
  6229   001F54                     
  6230                           ; BSR set to: 1
  6231   001F54  0E09               	movlw	9
  6232   001F56  EF96  F013         	goto	l1284
  6233   001F5A                     l17039:
  6234   001F5A                     
  6235                           ; BSR set to: 1
  6236   001F5A  0E3F               	movlw	63
  6237   001F5C  1745               	andwf	f_open@mode& (0+255),f,b
  6238   001F5E                     
  6239                           ; BSR set to: 1
  6240                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  6241   001F5E  0E43               	movlw	low f_open@path
  6242   001F60  0100               	movlb	0	; () banked
  6243   001F62  6FDA               	movwf	find_volume@path& (0+255),b
  6244   001F64  0E01               	movlw	high f_open@path
  6245   001F66  6FDB               	movwf	(find_volume@path+1)& (0+255),b
  6246   001F68  0E66               	movlw	low f_open@fs
  6247   001F6A  6FDC               	movwf	find_volume@rfs& (0+255),b
  6248   001F6C  0E01               	movlw	high f_open@fs
  6249   001F6E  6FDD               	movwf	(find_volume@rfs+1)& (0+255),b
  6250   001F70  C145  F0DE         	movff	f_open@mode,find_volume@mode
  6251   001F74  EC0F  F000         	call	_find_volume	;wreg free
  6252   001F78  0101               	movlb	1	; () banked
  6253   001F7A  6F68               	movwf	f_open@res& (0+255),b
  6254   001F7C                     
  6255                           ; BSR set to: 1
  6256                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  6257   001F7C  5168               	movf	f_open@res& (0+255),w,b
  6258   001F7E  A4D8               	btfss	status,2,c
  6259   001F80  EFC4  F00F         	goto	u21061
  6260   001F84  EFC6  F00F         	goto	u21060
  6261   001F88                     u21061:
  6262   001F88  EF84  F013         	goto	l1289
  6263   001F8C                     u21060:
  6264   001F8C                     
  6265                           ; BSR set to: 1
  6266                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  6267   001F8C  C166  F169         	movff	f_open@fs,f_open@dj
  6268   001F90  C167  F16A         	movff	f_open@fs+1,f_open@dj+1
  6269   001F94                     
  6270                           ; BSR set to: 1
  6271                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  6272   001F94  0E69               	movlw	low f_open@dj
  6273   001F96  6F33               	movwf	follow_path@dp& (0+255),b
  6274   001F98  0E01               	movlw	high f_open@dj
  6275   001F9A  6F34               	movwf	(follow_path@dp+1)& (0+255),b
  6276   001F9C  C143  F135         	movff	f_open@path,follow_path@path
  6277   001FA0  C144  F136         	movff	f_open@path+1,follow_path@path+1
  6278   001FA4  EC30  F031         	call	_follow_path	;wreg free
  6279   001FA8  0101               	movlb	1	; () banked
  6280   001FAA  6F68               	movwf	f_open@res& (0+255),b
  6281   001FAC                     
  6282                           ; BSR set to: 1
  6283                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  6284   001FAC  5168               	movf	f_open@res& (0+255),w,b
  6285   001FAE  A4D8               	btfss	status,2,c
  6286   001FB0  EFDC  F00F         	goto	u21071
  6287   001FB4  EFDE  F00F         	goto	u21070
  6288   001FB8                     u21071:
  6289   001FB8  EFE7  F00F         	goto	l17059
  6290   001FBC                     u21070:
  6291   001FBC                     
  6292                           ; BSR set to: 1
  6293                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  6294   001FBC  AF90               	btfss	(f_open@dj+39)& (0+255),7,b
  6295   001FBE  EFE3  F00F         	goto	u21081
  6296   001FC2  EFE5  F00F         	goto	u21080
  6297   001FC6                     u21081:
  6298   001FC6  EFE7  F00F         	goto	l17059
  6299   001FCA                     u21080:
  6300   001FCA                     
  6301                           ; BSR set to: 1
  6302                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  6303   001FCA  0E06               	movlw	6
  6304   001FCC  6F68               	movwf	f_open@res& (0+255),b
  6305   001FCE                     l17059:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  6309   001FCE  C145  F146         	movff	f_open@mode,??_f_open
  6310   001FD2  0E1C               	movlw	28
  6311   001FD4  1746               	andwf	??_f_open& (0+255),f,b
  6312   001FD6  B4D8               	btfsc	status,2,c
  6313   001FD8  EFF0  F00F         	goto	u21091
  6314   001FDC  EFF2  F00F         	goto	u21090
  6315   001FE0                     u21091:
  6316   001FE0  EF02  F011         	goto	l17099
  6317   001FE4                     u21090:
  6318   001FE4                     
  6319                           ; BSR set to: 1
  6320                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  6321   001FE4  5168               	movf	f_open@res& (0+255),w,b
  6322   001FE6  B4D8               	btfsc	status,2,c
  6323   001FE8  EFF8  F00F         	goto	u21101
  6324   001FEC  EFFA  F00F         	goto	u21100
  6325   001FF0                     u21101:
  6326   001FF0  EF0E  F010         	goto	l17069
  6327   001FF4                     u21100:
  6328   001FF4                     
  6329                           ; BSR set to: 1
  6330                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  6331   001FF4  0E04               	movlw	4
  6332   001FF6  1968               	xorwf	f_open@res& (0+255),w,b
  6333   001FF8  A4D8               	btfss	status,2,c
  6334   001FFA  EF01  F010         	goto	u21111
  6335   001FFE  EF03  F010         	goto	u21110
  6336   002002                     u21111:
  6337   002002  EF0B  F010         	goto	l17067
  6338   002006                     u21110:
  6339   002006                     
  6340                           ; BSR set to: 1
  6341                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  6342   002006  0E69               	movlw	low f_open@dj
  6343   002008  6F39               	movwf	dir_register@dp& (0+255),b
  6344   00200A  0E01               	movlw	high f_open@dj
  6345   00200C  6F3A               	movwf	(dir_register@dp+1)& (0+255),b
  6346   00200E  ECA3  F043         	call	_dir_register	;wreg free
  6347   002012  0101               	movlb	1	; () banked
  6348   002014  6F68               	movwf	f_open@res& (0+255),b
  6349   002016                     l17067:
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  6353   002016  8745               	bsf	f_open@mode& (0+255),3,b
  6354                           
  6355                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  6356   002018  EF26  F010         	goto	l1295
  6357   00201C                     l17069:
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  6361   00201C  C16D  F146         	movff	f_open@dj+4,??_f_open
  6362   002020  0E11               	movlw	17
  6363   002022  1746               	andwf	??_f_open& (0+255),f,b
  6364   002024  B4D8               	btfsc	status,2,c
  6365   002026  EF17  F010         	goto	u21121
  6366   00202A  EF19  F010         	goto	u21120
  6367   00202E                     u21121:
  6368   00202E  EF1D  F010         	goto	l1296
  6369   002032                     u21120:
  6370   002032                     
  6371                           ; BSR set to: 1
  6372                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  6373   002032  0E07               	movlw	7
  6374   002034  6F68               	movwf	f_open@res& (0+255),b
  6375                           
  6376                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  6377   002036  EF26  F010         	goto	l1295
  6378   00203A                     l1296:
  6379                           
  6380                           ; BSR set to: 1
  6381                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  6382   00203A  A545               	btfss	f_open@mode& (0+255),2,b
  6383   00203C  EF22  F010         	goto	u21131
  6384   002040  EF24  F010         	goto	u21130
  6385   002044                     u21131:
  6386   002044  EF26  F010         	goto	l1295
  6387   002048                     u21130:
  6388   002048                     
  6389                           ; BSR set to: 1
  6390   002048  0E08               	movlw	8
  6391   00204A  6F68               	movwf	f_open@res& (0+255),b
  6392   00204C                     l1295:
  6393                           
  6394                           ; BSR set to: 1
  6395                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  6396   00204C  5168               	movf	f_open@res& (0+255),w,b
  6397   00204E  A4D8               	btfss	status,2,c
  6398   002050  EF2C  F010         	goto	u21141
  6399   002054  EF2E  F010         	goto	u21140
  6400   002058                     u21141:
  6401   002058  EF25  F011         	goto	l1302
  6402   00205C                     u21140:
  6403   00205C                     
  6404                           ; BSR set to: 1
  6405   00205C  A745               	btfss	f_open@mode& (0+255),3,b
  6406   00205E  EF33  F010         	goto	u21151
  6407   002062  EF35  F010         	goto	u21150
  6408   002066                     u21151:
  6409   002066  EF25  F011         	goto	l1302
  6410   00206A                     u21150:
  6411   00206A                     
  6412                           ; BSR set to: 1
  6413                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  6414   00206A  C166  F067         	movff	f_open@fs,ld_clust@fs
  6415   00206E  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  6416   002072  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  6417   002076  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  6418   00207A  ECFE  F049         	call	_ld_clust	;wreg free
  6419   00207E  C067  F15A         	movff	?_ld_clust,f_open@cl
  6420   002082  C068  F15B         	movff	?_ld_clust+1,f_open@cl+1
  6421   002086  C069  F15C         	movff	?_ld_clust+2,f_open@cl+2
  6422   00208A  C06A  F15D         	movff	?_ld_clust+3,f_open@cl+3
  6423                           
  6424                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2024 - 1980) 
      +                          << 25 | (DWORD)7 << 21 | (DWORD)23 << 16));
  6425   00208E  0E0E               	movlw	14
  6426   002090  0101               	movlb	1	; () banked
  6427   002092  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6428   002094  0100               	movlb	0	; () banked
  6429   002096  6F60               	movwf	st_dword@ptr& (0+255),b
  6430   002098  0E00               	movlw	0
  6431   00209A  0101               	movlb	1	; () banked
  6432   00209C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6433   00209E  0100               	movlb	0	; () banked
  6434   0020A0  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  6435   0020A2  0E00               	movlw	0
  6436   0020A4  6F62               	movwf	st_dword@val& (0+255),b
  6437   0020A6  0E00               	movlw	0
  6438   0020A8  6F63               	movwf	(st_dword@val+1)& (0+255),b
  6439   0020AA  0EF7               	movlw	247
  6440   0020AC  6F64               	movwf	(st_dword@val+2)& (0+255),b
  6441   0020AE  0E58               	movlw	88
  6442   0020B0  6F65               	movwf	(st_dword@val+3)& (0+255),b
  6443   0020B2  EC87  F04A         	call	_st_dword	;wreg free
  6444   0020B6                     
  6445                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  6446   0020B6  0101               	movlb	1	; () banked
  6447   0020B8  EE20 F00B          	lfsr	2,11
  6448   0020BC  5183               	movf	(f_open@dj+26)& (0+255),w,b
  6449   0020BE  26D9               	addwf	fsr2l,f,c
  6450   0020C0  5184               	movf	(f_open@dj+27)& (0+255),w,b
  6451   0020C2  22DA               	addwfc	fsr2h,f,c
  6452   0020C4  0E20               	movlw	32
  6453   0020C6  6EDF               	movwf	indf2,c
  6454   0020C8                     
  6455                           ; BSR set to: 1
  6456                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  6457   0020C8  C166  F064         	movff	f_open@fs,st_clust@fs
  6458   0020CC  C167  F065         	movff	f_open@fs+1,st_clust@fs+1
  6459   0020D0  C183  F066         	movff	f_open@dj+26,st_clust@dir
  6460   0020D4  C184  F067         	movff	f_open@dj+27,st_clust@dir+1
  6461   0020D8  0E00               	movlw	0
  6462   0020DA  0100               	movlb	0	; () banked
  6463   0020DC  6F68               	movwf	st_clust@cl& (0+255),b
  6464   0020DE  0E00               	movlw	0
  6465   0020E0  6F69               	movwf	(st_clust@cl+1)& (0+255),b
  6466   0020E2  0E00               	movlw	0
  6467   0020E4  6F6A               	movwf	(st_clust@cl+2)& (0+255),b
  6468   0020E6  0E00               	movlw	0
  6469   0020E8  6F6B               	movwf	(st_clust@cl+3)& (0+255),b
  6470   0020EA  EC2D  F04F         	call	_st_clust	;wreg free
  6471   0020EE                     
  6472                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  6473   0020EE  0E1C               	movlw	28
  6474   0020F0  0101               	movlb	1	; () banked
  6475   0020F2  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6476   0020F4  0100               	movlb	0	; () banked
  6477   0020F6  6F60               	movwf	st_dword@ptr& (0+255),b
  6478   0020F8  0E00               	movlw	0
  6479   0020FA  0101               	movlb	1	; () banked
  6480   0020FC  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6481   0020FE  0100               	movlb	0	; () banked
  6482   002100  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
  6483   002102  0E00               	movlw	0
  6484   002104  6F62               	movwf	st_dword@val& (0+255),b
  6485   002106  0E00               	movlw	0
  6486   002108  6F63               	movwf	(st_dword@val+1)& (0+255),b
  6487   00210A  0E00               	movlw	0
  6488   00210C  6F64               	movwf	(st_dword@val+2)& (0+255),b
  6489   00210E  0E00               	movlw	0
  6490   002110  6F65               	movwf	(st_dword@val+3)& (0+255),b
  6491   002112  EC87  F04A         	call	_st_dword	;wreg free
  6492   002116                     
  6493                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  6494   002116  0101               	movlb	1	; () banked
  6495   002118  EE20 F003          	lfsr	2,3
  6496   00211C  5166               	movf	f_open@fs& (0+255),w,b
  6497   00211E  26D9               	addwf	fsr2l,f,c
  6498   002120  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6499   002122  22DA               	addwfc	fsr2h,f,c
  6500   002124  0E01               	movlw	1
  6501   002126  6EDF               	movwf	indf2,c
  6502   002128                     
  6503                           ; BSR set to: 1
  6504                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  6505   002128  515A               	movf	f_open@cl& (0+255),w,b
  6506   00212A  115B               	iorwf	(f_open@cl+1)& (0+255),w,b
  6507   00212C  115C               	iorwf	(f_open@cl+2)& (0+255),w,b
  6508   00212E  115D               	iorwf	(f_open@cl+3)& (0+255),w,b
  6509   002130  B4D8               	btfsc	status,2,c
  6510   002132  EF9D  F010         	goto	u21161
  6511   002136  EF9F  F010         	goto	u21160
  6512   00213A                     u21161:
  6513   00213A  EF25  F011         	goto	l1302
  6514   00213E                     u21160:
  6515   00213E                     
  6516                           ; BSR set to: 1
  6517                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  6518   00213E  EE20 F02F          	lfsr	2,47
  6519   002142  5166               	movf	f_open@fs& (0+255),w,b
  6520   002144  26D9               	addwf	fsr2l,f,c
  6521   002146  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6522   002148  22DA               	addwfc	fsr2h,f,c
  6523   00214A  006F FF78  F14E    	movff	postinc2,f_open@dw
  6524   002150  006F FF78  F14F    	movff	postinc2,f_open@dw+1
  6525   002156  006F FF78  F150    	movff	postinc2,f_open@dw+2
  6526   00215C  006F FF78  F151    	movff	postinc2,f_open@dw+3
  6527   002162                     
  6528                           ; BSR set to: 1
  6529                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  6530   002162  0E69               	movlw	low f_open@dj
  6531   002164  0100               	movlb	0	; () banked
  6532   002166  6FF4               	movwf	remove_chain@obj& (0+255),b
  6533   002168  0E01               	movlw	high f_open@dj
  6534   00216A  6FF5               	movwf	(remove_chain@obj+1)& (0+255),b
  6535   00216C  C15A  F0F6         	movff	f_open@cl,remove_chain@clst
  6536   002170  C15B  F0F7         	movff	f_open@cl+1,remove_chain@clst+1
  6537   002174  C15C  F0F8         	movff	f_open@cl+2,remove_chain@clst+2
  6538   002178  C15D  F0F9         	movff	f_open@cl+3,remove_chain@clst+3
  6539   00217C  0E00               	movlw	0
  6540   00217E  6FFA               	movwf	remove_chain@pclst& (0+255),b
  6541   002180  0E00               	movlw	0
  6542   002182  6FFB               	movwf	(remove_chain@pclst+1)& (0+255),b
  6543   002184  0E00               	movlw	0
  6544   002186  6FFC               	movwf	(remove_chain@pclst+2)& (0+255),b
  6545   002188  0E00               	movlw	0
  6546   00218A  6FFD               	movwf	(remove_chain@pclst+3)& (0+255),b
  6547   00218C  ECCF  F033         	call	_remove_chain	;wreg free
  6548   002190  0101               	movlb	1	; () banked
  6549   002192  6F68               	movwf	f_open@res& (0+255),b
  6550   002194                     
  6551                           ; BSR set to: 1
  6552                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  6553   002194  5168               	movf	f_open@res& (0+255),w,b
  6554   002196  A4D8               	btfss	status,2,c
  6555   002198  EFD0  F010         	goto	u21171
  6556   00219C  EFD2  F010         	goto	u21170
  6557   0021A0                     u21171:
  6558   0021A0  EF25  F011         	goto	l1302
  6559   0021A4                     u21170:
  6560   0021A4                     
  6561                           ; BSR set to: 1
  6562                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  6563   0021A4  C166  F0C8         	movff	f_open@fs,move_window@fs
  6564   0021A8  C167  F0C9         	movff	f_open@fs+1,move_window@fs+1
  6565   0021AC  C14E  F0CA         	movff	f_open@dw,move_window@sector
  6566   0021B0  C14F  F0CB         	movff	f_open@dw+1,move_window@sector+1
  6567   0021B4  C150  F0CC         	movff	f_open@dw+2,move_window@sector+2
  6568   0021B8  C151  F0CD         	movff	f_open@dw+3,move_window@sector+3
  6569   0021BC  ECDA  F046         	call	_move_window	;wreg free
  6570   0021C0  0101               	movlb	1	; () banked
  6571   0021C2  6F68               	movwf	f_open@res& (0+255),b
  6572   0021C4                     
  6573                           ; BSR set to: 1
  6574                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  6575   0021C4  0EFF               	movlw	255
  6576   0021C6  255A               	addwf	f_open@cl& (0+255),w,b
  6577   0021C8  6F46               	movwf	??_f_open& (0+255),b
  6578   0021CA  0EFF               	movlw	255
  6579   0021CC  215B               	addwfc	(f_open@cl+1)& (0+255),w,b
  6580   0021CE  6F47               	movwf	(??_f_open+1)& (0+255),b
  6581   0021D0  0EFF               	movlw	255
  6582   0021D2  215C               	addwfc	(f_open@cl+2)& (0+255),w,b
  6583   0021D4  6F48               	movwf	(??_f_open+2)& (0+255),b
  6584   0021D6  0EFF               	movlw	255
  6585   0021D8  215D               	addwfc	(f_open@cl+3)& (0+255),w,b
  6586   0021DA  6F49               	movwf	(??_f_open+3)& (0+255),b
  6587   0021DC  EE20 F00B          	lfsr	2,11
  6588   0021E0  5166               	movf	f_open@fs& (0+255),w,b
  6589   0021E2  26D9               	addwf	fsr2l,f,c
  6590   0021E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6591   0021E6  22DA               	addwfc	fsr2h,f,c
  6592   0021E8  0060  F51B  FFDE   	movff	??_f_open,postinc2
  6593   0021EE  0060  F51F  FFDE   	movff	??_f_open+1,postinc2
  6594   0021F4  0060  F523  FFDE   	movff	??_f_open+2,postinc2
  6595   0021FA  0060  F527  FFDE   	movff	??_f_open+3,postinc2
  6596   002200  EF25  F011         	goto	l1302
  6597   002204                     l17099:
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  6601   002204  5168               	movf	f_open@res& (0+255),w,b
  6602   002206  A4D8               	btfss	status,2,c
  6603   002208  EF08  F011         	goto	u21181
  6604   00220C  EF0A  F011         	goto	u21180
  6605   002210                     u21181:
  6606   002210  EF25  F011         	goto	l1302
  6607   002214                     u21180:
  6608   002214                     
  6609                           ; BSR set to: 1
  6610                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  6611   002214  A96D               	btfss	(f_open@dj+4)& (0+255),4,b
  6612   002216  EF0F  F011         	goto	u21191
  6613   00221A  EF11  F011         	goto	u21190
  6614   00221E                     u21191:
  6615   00221E  EF15  F011         	goto	l1304
  6616   002222                     u21190:
  6617   002222                     
  6618                           ; BSR set to: 1
  6619                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  6620   002222  0E04               	movlw	4
  6621   002224  6F68               	movwf	f_open@res& (0+255),b
  6622                           
  6623                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  6624   002226  EF25  F011         	goto	l1302
  6625   00222A                     l1304:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  6629   00222A  A345               	btfss	f_open@mode& (0+255),1,b
  6630   00222C  EF1A  F011         	goto	u21201
  6631   002230  EF1C  F011         	goto	u21200
  6632   002234                     u21201:
  6633   002234  EF25  F011         	goto	l1302
  6634   002238                     u21200:
  6635   002238                     
  6636                           ; BSR set to: 1
  6637   002238  A16D               	btfss	(f_open@dj+4)& (0+255),0,b
  6638   00223A  EF21  F011         	goto	u21211
  6639   00223E  EF23  F011         	goto	u21210
  6640   002242                     u21211:
  6641   002242  EF25  F011         	goto	l1302
  6642   002246                     u21210:
  6643   002246                     
  6644                           ; BSR set to: 1
  6645                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  6646   002246  0E07               	movlw	7
  6647   002248  6F68               	movwf	f_open@res& (0+255),b
  6648   00224A                     l1302:
  6649                           
  6650                           ; BSR set to: 1
  6651                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  6652   00224A  5168               	movf	f_open@res& (0+255),w,b
  6653   00224C  A4D8               	btfss	status,2,c
  6654   00224E  EF2B  F011         	goto	u21221
  6655   002252  EF2D  F011         	goto	u21220
  6656   002256                     u21221:
  6657   002256  EF59  F011         	goto	l17117
  6658   00225A                     u21220:
  6659   00225A                     
  6660                           ; BSR set to: 1
  6661                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  6662   00225A  A745               	btfss	f_open@mode& (0+255),3,b
  6663   00225C  EF32  F011         	goto	u21231
  6664   002260  EF34  F011         	goto	u21230
  6665   002264                     u21231:
  6666   002264  EF35  F011         	goto	l17113
  6667   002268                     u21230:
  6668   002268                     
  6669                           ; BSR set to: 1
  6670   002268  8D45               	bsf	f_open@mode& (0+255),6,b
  6671   00226A                     l17113:
  6672                           
  6673                           ; BSR set to: 1
  6674                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  6675   00226A  EE20 F02F          	lfsr	2,47
  6676   00226E  5166               	movf	f_open@fs& (0+255),w,b
  6677   002270  26D9               	addwf	fsr2l,f,c
  6678   002272  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6679   002274  22DA               	addwfc	fsr2h,f,c
  6680   002276  EE10 F01C          	lfsr	1,28
  6681   00227A  5141               	movf	f_open@fp& (0+255),w,b
  6682   00227C  26E1               	addwf	fsr1l,f,c
  6683   00227E  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6684   002280  22E2               	addwfc	fsr1h,f,c
  6685   002282  006F FF7B FFE6     	movff	postinc2,postinc1
  6686   002288  006F FF7B FFE6     	movff	postinc2,postinc1
  6687   00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  6688   002294  006F FF7B FFE6     	movff	postinc2,postinc1
  6689   00229A                     
  6690                           ; BSR set to: 1
  6691                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  6692   00229A  EE20 F020          	lfsr	2,32
  6693   00229E  5141               	movf	f_open@fp& (0+255),w,b
  6694   0022A0  26D9               	addwf	fsr2l,f,c
  6695   0022A2  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6696   0022A4  22DA               	addwfc	fsr2h,f,c
  6697   0022A6  0060  F60F  FFDE   	movff	f_open@dj+26,postinc2
  6698   0022AC  0060  F613  FFDD   	movff	f_open@dj+27,postdec2
  6699   0022B2                     l17117:
  6700                           
  6701                           ; BSR set to: 1
  6702                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  6703   0022B2  5168               	movf	f_open@res& (0+255),w,b
  6704   0022B4  A4D8               	btfss	status,2,c
  6705   0022B6  EF5F  F011         	goto	u21241
  6706   0022BA  EF61  F011         	goto	u21240
  6707   0022BE                     u21241:
  6708   0022BE  EF84  F013         	goto	l1289
  6709   0022C2                     u21240:
  6710   0022C2                     
  6711                           ; BSR set to: 1
  6712                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  6713   0022C2  C166  F067         	movff	f_open@fs,ld_clust@fs
  6714   0022C6  C167  F068         	movff	f_open@fs+1,ld_clust@fs+1
  6715   0022CA  C183  F069         	movff	f_open@dj+26,ld_clust@dir
  6716   0022CE  C184  F06A         	movff	f_open@dj+27,ld_clust@dir+1
  6717   0022D2  ECFE  F049         	call	_ld_clust	;wreg free
  6718   0022D6  0101               	movlb	1	; () banked
  6719   0022D8  EE20 F006          	lfsr	2,6
  6720   0022DC  5141               	movf	f_open@fp& (0+255),w,b
  6721   0022DE  26D9               	addwf	fsr2l,f,c
  6722   0022E0  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6723   0022E2  22DA               	addwfc	fsr2h,f,c
  6724   0022E4  0100               	movlb	0	; () banked
  6725   0022E6  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  6726   0022EC  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  6727   0022F2  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  6728   0022F8  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  6729                           
  6730                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  6731   0022FE  0E1C               	movlw	28
  6732   002300  0101               	movlb	1	; () banked
  6733   002302  2583               	addwf	(f_open@dj+26)& (0+255),w,b
  6734   002304  0100               	movlb	0	; () banked
  6735   002306  6F60               	movwf	ld_dword@ptr& (0+255),b
  6736   002308  0E00               	movlw	0
  6737   00230A  0101               	movlb	1	; () banked
  6738   00230C  2184               	addwfc	(f_open@dj+27)& (0+255),w,b
  6739   00230E  0100               	movlb	0	; () banked
  6740   002310  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
  6741   002312  EC0F  F048         	call	_ld_dword	;wreg free
  6742   002316  0101               	movlb	1	; () banked
  6743   002318  EE20 F00A          	lfsr	2,10
  6744   00231C  5141               	movf	f_open@fp& (0+255),w,b
  6745   00231E  26D9               	addwf	fsr2l,f,c
  6746   002320  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6747   002322  22DA               	addwfc	fsr2h,f,c
  6748   002324  0100               	movlb	0	; () banked
  6749   002326  0060  F183  FFDE   	movff	?_ld_dword,postinc2
  6750   00232C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
  6751   002332  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
  6752   002338  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
  6753   00233E                     
  6754                           ; BSR set to: 0
  6755                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  6756   00233E  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  6757   002344  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  6758   00234A  0060  F59B  FFDE   	movff	f_open@fs,postinc2
  6759   002350  0060  F59F  FFDD   	movff	f_open@fs+1,postdec2
  6760   002356                     
  6761                           ; BSR set to: 0
  6762                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  6763   002356  0101               	movlb	1	; () banked
  6764   002358  EE20 F005          	lfsr	2,5
  6765   00235C  5166               	movf	f_open@fs& (0+255),w,b
  6766   00235E  26D9               	addwf	fsr2l,f,c
  6767   002360  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6768   002362  22DA               	addwfc	fsr2h,f,c
  6769   002364  EE10 F002          	lfsr	1,2
  6770   002368  5141               	movf	f_open@fp& (0+255),w,b
  6771   00236A  26E1               	addwf	fsr1l,f,c
  6772   00236C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6773   00236E  22E2               	addwfc	fsr1h,f,c
  6774   002370  006F FF7B FFE6     	movff	postinc2,postinc1
  6775   002376  006F FF77 FFE5     	movff	postdec2,postdec1
  6776   00237C                     
  6777                           ; BSR set to: 1
  6778                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  6779   00237C  EE20 F00E          	lfsr	2,14
  6780   002380  5141               	movf	f_open@fp& (0+255),w,b
  6781   002382  26D9               	addwf	fsr2l,f,c
  6782   002384  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6783   002386  22DA               	addwfc	fsr2h,f,c
  6784   002388  0060  F517  FFDF   	movff	f_open@mode,indf2
  6785   00238E                     
  6786                           ; BSR set to: 1
  6787                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  6788   00238E  EE20 F00F          	lfsr	2,15
  6789   002392  5141               	movf	f_open@fp& (0+255),w,b
  6790   002394  26D9               	addwf	fsr2l,f,c
  6791   002396  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6792   002398  22DA               	addwfc	fsr2h,f,c
  6793   00239A  6ADF               	clrf	indf2,c
  6794   00239C                     
  6795                           ; BSR set to: 1
  6796                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  6797   00239C  EE20 F018          	lfsr	2,24
  6798   0023A0  5141               	movf	f_open@fp& (0+255),w,b
  6799   0023A2  26D9               	addwf	fsr2l,f,c
  6800   0023A4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6801   0023A6  22DA               	addwfc	fsr2h,f,c
  6802   0023A8  6ADE               	clrf	postinc2,c
  6803   0023AA  6ADE               	clrf	postinc2,c
  6804   0023AC  6ADE               	clrf	postinc2,c
  6805   0023AE  6ADD               	clrf	postdec2,c
  6806   0023B0                     
  6807                           ; BSR set to: 1
  6808                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  6809   0023B0  EE20 F010          	lfsr	2,16
  6810   0023B4  5141               	movf	f_open@fp& (0+255),w,b
  6811   0023B6  26D9               	addwf	fsr2l,f,c
  6812   0023B8  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6813   0023BA  22DA               	addwfc	fsr2h,f,c
  6814   0023BC  6ADE               	clrf	postinc2,c
  6815   0023BE  6ADE               	clrf	postinc2,c
  6816   0023C0  6ADE               	clrf	postinc2,c
  6817   0023C2  6ADD               	clrf	postdec2,c
  6818   0023C4                     
  6819                           ; BSR set to: 1
  6820                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  6821   0023C4  0E22               	movlw	34
  6822   0023C6  2541               	addwf	f_open@fp& (0+255),w,b
  6823   0023C8  0100               	movlb	0	; () banked
  6824   0023CA  6F60               	movwf	mem_set@dst& (0+255),b
  6825   0023CC  0E00               	movlw	0
  6826   0023CE  0101               	movlb	1	; () banked
  6827   0023D0  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  6828   0023D2  0100               	movlb	0	; () banked
  6829   0023D4  6F61               	movwf	(mem_set@dst+1)& (0+255),b
  6830   0023D6  0E00               	movlw	0
  6831   0023D8  6F63               	movwf	(mem_set@val+1)& (0+255),b
  6832   0023DA  0E00               	movlw	0
  6833   0023DC  6F62               	movwf	mem_set@val& (0+255),b
  6834   0023DE  0E02               	movlw	2
  6835   0023E0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  6836   0023E2  0E00               	movlw	0
  6837   0023E4  6F64               	movwf	mem_set@cnt& (0+255),b
  6838   0023E6  EC87  F050         	call	_mem_set	;wreg free
  6839   0023EA                     
  6840                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  6841   0023EA  0101               	movlb	1	; () banked
  6842   0023EC  AB45               	btfss	f_open@mode& (0+255),5,b
  6843   0023EE  EFFB  F011         	goto	u21251
  6844   0023F2  EFFD  F011         	goto	u21250
  6845   0023F6                     u21251:
  6846   0023F6  EF84  F013         	goto	l1289
  6847   0023FA                     u21250:
  6848   0023FA                     
  6849                           ; BSR set to: 1
  6850   0023FA  EE20 F00A          	lfsr	2,10
  6851   0023FE  5141               	movf	f_open@fp& (0+255),w,b
  6852   002400  26D9               	addwf	fsr2l,f,c
  6853   002402  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6854   002404  22DA               	addwfc	fsr2h,f,c
  6855   002406  50DE               	movf	postinc2,w,c
  6856   002408  10DE               	iorwf	postinc2,w,c
  6857   00240A  10DE               	iorwf	postinc2,w,c
  6858   00240C  10DE               	iorwf	postinc2,w,c
  6859   00240E  B4D8               	btfsc	status,2,c
  6860   002410  EF0C  F012         	goto	u21261
  6861   002414  EF0E  F012         	goto	u21260
  6862   002418                     u21261:
  6863   002418  EF84  F013         	goto	l1289
  6864   00241C                     u21260:
  6865   00241C                     
  6866                           ; BSR set to: 1
  6867                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  6868   00241C  EE20 F00A          	lfsr	2,10
  6869   002420  5141               	movf	f_open@fp& (0+255),w,b
  6870   002422  26D9               	addwf	fsr2l,f,c
  6871   002424  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6872   002426  22DA               	addwfc	fsr2h,f,c
  6873   002428  EE10 F010          	lfsr	1,16
  6874   00242C  5141               	movf	f_open@fp& (0+255),w,b
  6875   00242E  26E1               	addwf	fsr1l,f,c
  6876   002430  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6877   002432  22E2               	addwfc	fsr1h,f,c
  6878   002434  006F FF7B FFE6     	movff	postinc2,postinc1
  6879   00243A  006F FF7B FFE6     	movff	postinc2,postinc1
  6880   002440  006F FF7B FFE6     	movff	postinc2,postinc1
  6881   002446  006F FF7B FFE6     	movff	postinc2,postinc1
  6882   00244C                     
  6883                           ; BSR set to: 1
  6884                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  6885   00244C  EE20 F009          	lfsr	2,9
  6886   002450  5166               	movf	f_open@fs& (0+255),w,b
  6887   002452  26D9               	addwf	fsr2l,f,c
  6888   002454  5167               	movf	(f_open@fs+1)& (0+255),w,b
  6889   002456  22DA               	addwfc	fsr2h,f,c
  6890   002458  006F FF78  F146    	movff	postinc2,??_f_open
  6891   00245E  006F FF74  F147    	movff	postdec2,??_f_open+1
  6892   002464  5146               	movf	??_f_open& (0+255),w,b
  6893   002466  6F48               	movwf	(??_f_open+2)& (0+255),b
  6894   002468  5147               	movf	(??_f_open+1)& (0+255),w,b
  6895   00246A  6F49               	movwf	(??_f_open+3)& (0+255),b
  6896   00246C  6B4A               	clrf	(??_f_open+4)& (0+255),b
  6897   00246E  6B4B               	clrf	(??_f_open+5)& (0+255),b
  6898   002470  0E09               	movlw	9
  6899   002472                     u21275:
  6900   002472  90D8               	bcf	status,0,c
  6901   002474  3748               	rlcf	(??_f_open+2)& (0+255),f,b
  6902   002476  3749               	rlcf	(??_f_open+3)& (0+255),f,b
  6903   002478  374A               	rlcf	(??_f_open+4)& (0+255),f,b
  6904   00247A  374B               	rlcf	(??_f_open+5)& (0+255),f,b
  6905   00247C  2EE8               	decfsz	wreg,f,c
  6906   00247E  EF39  F012         	goto	u21275
  6907   002482  C148  F156         	movff	??_f_open+2,f_open@bcs
  6908   002486  C149  F157         	movff	??_f_open+3,f_open@bcs+1
  6909   00248A  C14A  F158         	movff	??_f_open+4,f_open@bcs+2
  6910   00248E  C14B  F159         	movff	??_f_open+5,f_open@bcs+3
  6911   002492                     
  6912                           ; BSR set to: 1
  6913                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  6914   002492  EE20 F006          	lfsr	2,6
  6915   002496  5141               	movf	f_open@fp& (0+255),w,b
  6916   002498  26D9               	addwf	fsr2l,f,c
  6917   00249A  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6918   00249C  22DA               	addwfc	fsr2h,f,c
  6919   00249E  006F FF78  F162    	movff	postinc2,f_open@clst
  6920   0024A4  006F FF78  F163    	movff	postinc2,f_open@clst+1
  6921   0024AA  006F FF78  F164    	movff	postinc2,f_open@clst+2
  6922   0024B0  006F FF78  F165    	movff	postinc2,f_open@clst+3
  6923   0024B6                     
  6924                           ; BSR set to: 1
  6925                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  6926   0024B6  EE20 F00A          	lfsr	2,10
  6927   0024BA  5141               	movf	f_open@fp& (0+255),w,b
  6928   0024BC  26D9               	addwf	fsr2l,f,c
  6929   0024BE  5142               	movf	(f_open@fp+1)& (0+255),w,b
  6930   0024C0  22DA               	addwfc	fsr2h,f,c
  6931   0024C2  006F FF78  F15E    	movff	postinc2,f_open@ofs
  6932   0024C8  006F FF78  F15F    	movff	postinc2,f_open@ofs+1
  6933   0024CE  006F FF78  F160    	movff	postinc2,f_open@ofs+2
  6934   0024D4  006F FF78  F161    	movff	postinc2,f_open@ofs+3
  6935   0024DA  EFAD  F012         	goto	l17159
  6936   0024DE                     l17147:
  6937                           
  6938                           ; BSR set to: 1
  6939                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  6940   0024DE  C141  F0D3         	movff	f_open@fp,get_fat@obj
  6941   0024E2  C142  F0D4         	movff	f_open@fp+1,get_fat@obj+1
  6942   0024E6  C162  F0D5         	movff	f_open@clst,get_fat@clst
  6943   0024EA  C163  F0D6         	movff	f_open@clst+1,get_fat@clst+1
  6944   0024EE  C164  F0D7         	movff	f_open@clst+2,get_fat@clst+2
  6945   0024F2  C165  F0D8         	movff	f_open@clst+3,get_fat@clst+3
  6946   0024F6  ECE4  F027         	call	_get_fat	;wreg free
  6947   0024FA  C0D3  F162         	movff	?_get_fat,f_open@clst
  6948   0024FE  C0D4  F163         	movff	?_get_fat+1,f_open@clst+1
  6949   002502  C0D5  F164         	movff	?_get_fat+2,f_open@clst+2
  6950   002506  C0D6  F165         	movff	?_get_fat+3,f_open@clst+3
  6951   00250A                     
  6952                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  6953   00250A  0101               	movlb	1	; () banked
  6954   00250C  5165               	movf	(f_open@clst+3)& (0+255),w,b
  6955   00250E  1164               	iorwf	(f_open@clst+2)& (0+255),w,b
  6956   002510  1163               	iorwf	(f_open@clst+1)& (0+255),w,b
  6957   002512  E107               	bnz	u21281
  6958   002514  0E02               	movlw	2
  6959   002516  5D62               	subwf	f_open@clst& (0+255),w,b
  6960   002518  B0D8               	btfsc	status,0,c
  6961   00251A  EF91  F012         	goto	u21281
  6962   00251E  EF93  F012         	goto	u21280
  6963   002522                     u21281:
  6964   002522  EF95  F012         	goto	l17153
  6965   002526                     u21280:
  6966   002526                     
  6967                           ; BSR set to: 1
  6968   002526  0E02               	movlw	2
  6969   002528  6F68               	movwf	f_open@res& (0+255),b
  6970   00252A                     l17153:
  6971                           
  6972                           ; BSR set to: 1
  6973                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  6974   00252A  2962               	incf	f_open@clst& (0+255),w,b
  6975   00252C  E10A               	bnz	u21291
  6976   00252E  2963               	incf	(f_open@clst+1)& (0+255),w,b
  6977   002530  E108               	bnz	u21291
  6978   002532  2964               	incf	(f_open@clst+2)& (0+255),w,b
  6979   002534  E106               	bnz	u21291
  6980   002536  2965               	incf	(f_open@clst+3)& (0+255),w,b
  6981   002538  A4D8               	btfss	status,2,c
  6982   00253A  EFA1  F012         	goto	u21291
  6983   00253E  EFA3  F012         	goto	u21290
  6984   002542                     u21291:
  6985   002542  EFA5  F012         	goto	l17157
  6986   002546                     u21290:
  6987   002546                     
  6988                           ; BSR set to: 1
  6989   002546  0E01               	movlw	1
  6990   002548  6F68               	movwf	f_open@res& (0+255),b
  6991   00254A                     l17157:
  6992                           
  6993                           ; BSR set to: 1
  6994                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  6995   00254A  5156               	movf	f_open@bcs& (0+255),w,b
  6996   00254C  5F5E               	subwf	f_open@ofs& (0+255),f,b
  6997   00254E  5157               	movf	(f_open@bcs+1)& (0+255),w,b
  6998   002550  5B5F               	subwfb	(f_open@ofs+1)& (0+255),f,b
  6999   002552  5158               	movf	(f_open@bcs+2)& (0+255),w,b
  7000   002554  5B60               	subwfb	(f_open@ofs+2)& (0+255),f,b
  7001   002556  5159               	movf	(f_open@bcs+3)& (0+255),w,b
  7002   002558  5B61               	subwfb	(f_open@ofs+3)& (0+255),f,b
  7003   00255A                     l17159:
  7004                           
  7005                           ; BSR set to: 1
  7006   00255A  5168               	movf	f_open@res& (0+255),w,b
  7007   00255C  A4D8               	btfss	status,2,c
  7008   00255E  EFB3  F012         	goto	u21301
  7009   002562  EFB5  F012         	goto	u21300
  7010   002566                     u21301:
  7011   002566  EFC4  F012         	goto	l17163
  7012   00256A                     u21300:
  7013   00256A                     
  7014                           ; BSR set to: 1
  7015   00256A  515E               	movf	f_open@ofs& (0+255),w,b
  7016   00256C  5D56               	subwf	f_open@bcs& (0+255),w,b
  7017   00256E  515F               	movf	(f_open@ofs+1)& (0+255),w,b
  7018   002570  5957               	subwfb	(f_open@bcs+1)& (0+255),w,b
  7019   002572  5160               	movf	(f_open@ofs+2)& (0+255),w,b
  7020   002574  5958               	subwfb	(f_open@bcs+2)& (0+255),w,b
  7021   002576  5161               	movf	(f_open@ofs+3)& (0+255),w,b
  7022   002578  5959               	subwfb	(f_open@bcs+3)& (0+255),w,b
  7023   00257A  A0D8               	btfss	status,0,c
  7024   00257C  EFC2  F012         	goto	u21311
  7025   002580  EFC4  F012         	goto	u21310
  7026   002584                     u21311:
  7027   002584  EF6F  F012         	goto	l17147
  7028   002588                     u21310:
  7029   002588                     l17163:
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  7033   002588  EE20 F014          	lfsr	2,20
  7034   00258C  5141               	movf	f_open@fp& (0+255),w,b
  7035   00258E  26D9               	addwf	fsr2l,f,c
  7036   002590  5142               	movf	(f_open@fp+1)& (0+255),w,b
  7037   002592  22DA               	addwfc	fsr2h,f,c
  7038   002594  0060  F58B  FFDE   	movff	f_open@clst,postinc2
  7039   00259A  0060  F58F  FFDE   	movff	f_open@clst+1,postinc2
  7040   0025A0  0060  F593  FFDE   	movff	f_open@clst+2,postinc2
  7041   0025A6  0060  F597  FFDE   	movff	f_open@clst+3,postinc2
  7042   0025AC                     
  7043                           ; BSR set to: 1
  7044                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  7045   0025AC  5168               	movf	f_open@res& (0+255),w,b
  7046   0025AE  A4D8               	btfss	status,2,c
  7047   0025B0  EFDC  F012         	goto	u21321
  7048   0025B4  EFDE  F012         	goto	u21320
  7049   0025B8                     u21321:
  7050   0025B8  EF84  F013         	goto	l1289
  7051   0025BC                     u21320:
  7052   0025BC                     
  7053                           ; BSR set to: 1
  7054   0025BC  0EFF               	movlw	255
  7055   0025BE  155E               	andwf	f_open@ofs& (0+255),w,b
  7056   0025C0  6F46               	movwf	??_f_open& (0+255),b
  7057   0025C2  0E01               	movlw	1
  7058   0025C4  155F               	andwf	(f_open@ofs+1)& (0+255),w,b
  7059   0025C6  6F47               	movwf	(??_f_open+1)& (0+255),b
  7060   0025C8  0E00               	movlw	0
  7061   0025CA  1560               	andwf	(f_open@ofs+2)& (0+255),w,b
  7062   0025CC  6F48               	movwf	(??_f_open+2)& (0+255),b
  7063   0025CE  0E00               	movlw	0
  7064   0025D0  1561               	andwf	(f_open@ofs+3)& (0+255),w,b
  7065   0025D2  6F49               	movwf	(??_f_open+3)& (0+255),b
  7066   0025D4  5146               	movf	??_f_open& (0+255),w,b
  7067   0025D6  1147               	iorwf	(??_f_open+1)& (0+255),w,b
  7068   0025D8  1148               	iorwf	(??_f_open+2)& (0+255),w,b
  7069   0025DA  1149               	iorwf	(??_f_open+3)& (0+255),w,b
  7070   0025DC  B4D8               	btfsc	status,2,c
  7071   0025DE  EFF3  F012         	goto	u21331
  7072   0025E2  EFF5  F012         	goto	u21330
  7073   0025E6                     u21331:
  7074   0025E6  EF84  F013         	goto	l1289
  7075   0025EA                     u21330:
  7076   0025EA                     
  7077                           ; BSR set to: 1
  7078                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  7079   0025EA  C166  F06C         	movff	f_open@fs,clst2sect@fs
  7080   0025EE  C167  F06D         	movff	f_open@fs+1,clst2sect@fs+1
  7081   0025F2  C162  F06E         	movff	f_open@clst,clst2sect@clst
  7082   0025F6  C163  F06F         	movff	f_open@clst+1,clst2sect@clst+1
  7083   0025FA  C164  F070         	movff	f_open@clst+2,clst2sect@clst+2
  7084   0025FE  C165  F071         	movff	f_open@clst+3,clst2sect@clst+3
  7085   002602  EC6C  F046         	call	_clst2sect	;wreg free
  7086   002606  C06C  F152         	movff	?_clst2sect,f_open@sc
  7087   00260A  C06D  F153         	movff	?_clst2sect+1,f_open@sc+1
  7088   00260E  C06E  F154         	movff	?_clst2sect+2,f_open@sc+2
  7089   002612  C06F  F155         	movff	?_clst2sect+3,f_open@sc+3
  7090   002616  0101               	movlb	1	; () banked
  7091   002618  5152               	movf	f_open@sc& (0+255),w,b
  7092   00261A  1153               	iorwf	(f_open@sc+1)& (0+255),w,b
  7093   00261C  1154               	iorwf	(f_open@sc+2)& (0+255),w,b
  7094   00261E  1155               	iorwf	(f_open@sc+3)& (0+255),w,b
  7095   002620  A4D8               	btfss	status,2,c
  7096   002622  EF15  F013         	goto	u21341
  7097   002626  EF17  F013         	goto	u21340
  7098   00262A                     u21341:
  7099   00262A  EF1B  F013         	goto	l17173
  7100   00262E                     u21340:
  7101   00262E                     
  7102                           ; BSR set to: 1
  7103                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  7104   00262E  0E02               	movlw	2
  7105   002630  6F68               	movwf	f_open@res& (0+255),b
  7106                           
  7107                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  7108   002632  EF84  F013         	goto	l1289
  7109   002636                     l17173:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  7113   002636  C15E  F146         	movff	f_open@ofs,??_f_open
  7114   00263A  C15F  F147         	movff	f_open@ofs+1,??_f_open+1
  7115   00263E  C160  F148         	movff	f_open@ofs+2,??_f_open+2
  7116   002642  C161  F149         	movff	f_open@ofs+3,??_f_open+3
  7117   002646  0E0A               	movlw	10
  7118   002648  EF2B  F013         	goto	u21350
  7119   00264C                     u21355:
  7120   00264C  90D8               	bcf	status,0,c
  7121   00264E  3349               	rrcf	(??_f_open+3)& (0+255),f,b
  7122   002650  3348               	rrcf	(??_f_open+2)& (0+255),f,b
  7123   002652  3347               	rrcf	(??_f_open+1)& (0+255),f,b
  7124   002654  3346               	rrcf	??_f_open& (0+255),f,b
  7125   002656                     u21350:
  7126   002656  2EE8               	decfsz	wreg,f,c
  7127   002658  EF26  F013         	goto	u21355
  7128   00265C  5152               	movf	f_open@sc& (0+255),w,b
  7129   00265E  2546               	addwf	??_f_open& (0+255),w,b
  7130   002660  6F4A               	movwf	(??_f_open+4)& (0+255),b
  7131   002662  5153               	movf	(f_open@sc+1)& (0+255),w,b
  7132   002664  2147               	addwfc	(??_f_open+1)& (0+255),w,b
  7133   002666  6F4B               	movwf	(??_f_open+5)& (0+255),b
  7134   002668  5154               	movf	(f_open@sc+2)& (0+255),w,b
  7135   00266A  2148               	addwfc	(??_f_open+2)& (0+255),w,b
  7136   00266C  6F4C               	movwf	(??_f_open+6)& (0+255),b
  7137   00266E  5155               	movf	(f_open@sc+3)& (0+255),w,b
  7138   002670  2149               	addwfc	(??_f_open+3)& (0+255),w,b
  7139   002672  6F4D               	movwf	(??_f_open+7)& (0+255),b
  7140   002674  EE20 F018          	lfsr	2,24
  7141   002678  5141               	movf	f_open@fp& (0+255),w,b
  7142   00267A  26D9               	addwf	fsr2l,f,c
  7143   00267C  5142               	movf	(f_open@fp+1)& (0+255),w,b
  7144   00267E  22DA               	addwfc	fsr2h,f,c
  7145   002680  0060  F52B  FFDE   	movff	??_f_open+4,postinc2
  7146   002686  0060  F52F  FFDE   	movff	??_f_open+5,postinc2
  7147   00268C  0060  F533  FFDE   	movff	??_f_open+6,postinc2
  7148   002692  0060  F537  FFDE   	movff	??_f_open+7,postinc2
  7149   002698                     
  7150                           ; BSR set to: 1
  7151                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  7152   002698  0E22               	movlw	34
  7153   00269A  2541               	addwf	f_open@fp& (0+255),w,b
  7154   00269C  0100               	movlb	0	; () banked
  7155   00269E  6FA8               	movwf	disk_read@buff& (0+255),b
  7156   0026A0  0E00               	movlw	0
  7157   0026A2  0101               	movlb	1	; () banked
  7158   0026A4  2142               	addwfc	(f_open@fp+1)& (0+255),w,b
  7159   0026A6  0100               	movlb	0	; () banked
  7160   0026A8  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
  7161   0026AA  0101               	movlb	1	; () banked
  7162   0026AC  EE20 F018          	lfsr	2,24
  7163   0026B0  5141               	movf	f_open@fp& (0+255),w,b
  7164   0026B2  26D9               	addwf	fsr2l,f,c
  7165   0026B4  5142               	movf	(f_open@fp+1)& (0+255),w,b
  7166   0026B6  22DA               	addwfc	fsr2h,f,c
  7167   0026B8  006F FF78  F0AA    	movff	postinc2,disk_read@sector
  7168   0026BE  006F FF78  F0AB    	movff	postinc2,disk_read@sector+1
  7169   0026C4  006F FF78  F0AC    	movff	postinc2,disk_read@sector+2
  7170   0026CA  006F FF78  F0AD    	movff	postinc2,disk_read@sector+3
  7171   0026D0  0E00               	movlw	0
  7172   0026D2  0100               	movlb	0	; () banked
  7173   0026D4  6FAF               	movwf	(disk_read@count+1)& (0+255),b
  7174   0026D6  0E01               	movlw	1
  7175   0026D8  6FAE               	movwf	disk_read@count& (0+255),b
  7176   0026DA  0101               	movlb	1	; () banked
  7177   0026DC  EE20 F001          	lfsr	2,1
  7178   0026E0  5166               	movf	f_open@fs& (0+255),w,b
  7179   0026E2  26D9               	addwf	fsr2l,f,c
  7180   0026E4  5167               	movf	(f_open@fs+1)& (0+255),w,b
  7181   0026E6  22DA               	addwfc	fsr2h,f,c
  7182   0026E8  50DF               	movf	indf2,w,c
  7183   0026EA  EC51  F04D         	call	_disk_read
  7184   0026EE  0900               	iorlw	0
  7185   0026F0  B4D8               	btfsc	status,2,c
  7186   0026F2  EF7D  F013         	goto	u21361
  7187   0026F6  EF7F  F013         	goto	u21360
  7188   0026FA                     u21361:
  7189   0026FA  EF84  F013         	goto	l1310
  7190   0026FE                     u21360:
  7191   0026FE  0E01               	movlw	1
  7192   002700  0101               	movlb	1	; () banked
  7193   002702  6F68               	movwf	f_open@res& (0+255),b
  7194   002704  EF84  F013         	goto	l1289
  7195   002708                     l1310:
  7196   002708                     l1289:
  7197                           
  7198                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  7199   002708  0101               	movlb	1	; () banked
  7200   00270A  5168               	movf	f_open@res& (0+255),w,b
  7201   00270C  B4D8               	btfsc	status,2,c
  7202   00270E  EF8B  F013         	goto	u21371
  7203   002712  EF8D  F013         	goto	u21370
  7204   002716                     u21371:
  7205   002716  EF95  F013         	goto	l17181
  7206   00271A                     u21370:
  7207   00271A                     
  7208                           ; BSR set to: 1
  7209   00271A  0060  F507  FFD9   	movff	f_open@fp,fsr2l
  7210   002720  0060  F50B  FFDA   	movff	f_open@fp+1,fsr2h
  7211   002726  6ADE               	clrf	postinc2,c
  7212   002728  6ADD               	clrf	postdec2,c
  7213   00272A                     l17181:
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  7217   00272A  5168               	movf	f_open@res& (0+255),w,b
  7218   00272C                     l1284:
  7219                           
  7220                           ; BSR set to: 1
  7221   00272C  0012               	return		;funcret
  7222   00272E                     __end_of_f_open:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function _remove_chain *****************
  7226 ;; Defined at:
  7227 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  obj             2  148[BANK0 ] PTR struct .
  7230 ;;		 -> f_open@dj(40), 
  7231 ;;  clst            4  150[BANK0 ] unsigned long 
  7232 ;;  pclst           4  154[BANK0 ] unsigned long 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  nxt             4    8[BANK1 ] unsigned long 
  7235 ;;  fs              2   13[BANK1 ] PTR struct .
  7236 ;;		 -> FatFs(563), NULL(0), 
  7237 ;;  res             1   12[BANK1 ] enum E68
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      enum E68
  7240 ;; Registers used:
  7241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7247 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Totals:         0      10      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;Total ram usage:       25 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 13
  7254 ;; This function calls:
  7255 ;;		_get_fat
  7256 ;;		_put_fat
  7257 ;; This function is called by:
  7258 ;;		_f_open
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text19
  7263   00679E                     __ptext19:
  7264                           	callstack 0
  7265   00679E                     _remove_chain:
  7266                           	callstack 15
  7267   00679E                     
  7268                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  7269   00679E  0060  F3D3  FFD9   	movff	remove_chain@obj,fsr2l
  7270   0067A4  0060  F3D7  FFDA   	movff	remove_chain@obj+1,fsr2h
  7271   0067AA  006F FF78  F10D    	movff	postinc2,remove_chain@fs
  7272   0067B0  006F FF74  F10E    	movff	postdec2,remove_chain@fs+1
  7273   0067B6                     
  7274                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  7275   0067B6  0100               	movlb	0	; () banked
  7276   0067B8  51F9               	movf	(remove_chain@clst+3)& (0+255),w,b
  7277   0067BA  11F8               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  7278   0067BC  11F7               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  7279   0067BE  E109               	bnz	u19910
  7280   0067C0  0E02               	movlw	2
  7281   0067C2  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7282   0067C4  A0D8               	btfss	status,0,c
  7283   0067C6  EFE7  F033         	goto	u19911
  7284   0067CA  EFE9  F033         	goto	u19910
  7285   0067CE                     u19911:
  7286   0067CE  EF00  F034         	goto	l16357
  7287   0067D2                     u19910:
  7288   0067D2                     
  7289                           ; BSR set to: 0
  7290   0067D2  0101               	movlb	1	; () banked
  7291   0067D4  EE20 F017          	lfsr	2,23
  7292   0067D8  510D               	movf	remove_chain@fs& (0+255),w,b
  7293   0067DA  26D9               	addwf	fsr2l,f,c
  7294   0067DC  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7295   0067DE  22DA               	addwfc	fsr2h,f,c
  7296   0067E0  50DE               	movf	postinc2,w,c
  7297   0067E2  0100               	movlb	0	; () banked
  7298   0067E4  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7299   0067E6  50DE               	movf	postinc2,w,c
  7300   0067E8  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  7301   0067EA  50DE               	movf	postinc2,w,c
  7302   0067EC  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  7303   0067EE  50DE               	movf	postinc2,w,c
  7304   0067F0  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  7305   0067F2  A0D8               	btfss	status,0,c
  7306   0067F4  EFFE  F033         	goto	u19921
  7307   0067F8  EF00  F034         	goto	u19920
  7308   0067FC                     u19921:
  7309   0067FC  EF03  F034         	goto	l16361
  7310   006800                     u19920:
  7311   006800                     l16357:
  7312   006800  0E02               	movlw	2
  7313   006802  EFEF  F034         	goto	l970
  7314   006806                     l16361:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  7318   006806  51FA               	movf	remove_chain@pclst& (0+255),w,b
  7319   006808  11FB               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  7320   00680A  11FC               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  7321   00680C  11FD               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  7322   00680E  B4D8               	btfsc	status,2,c
  7323   006810  EF0C  F034         	goto	u19931
  7324   006814  EF0E  F034         	goto	u19930
  7325   006818                     u19931:
  7326   006818  EF31  F034         	goto	l16377
  7327   00681C                     u19930:
  7328   00681C                     
  7329                           ; BSR set to: 0
  7330                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  7331   00681C  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  7332   006820  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  7333   006824  C0FA  F0D5         	movff	remove_chain@pclst,put_fat@clst
  7334   006828  C0FB  F0D6         	movff	remove_chain@pclst+1,put_fat@clst+1
  7335   00682C  C0FC  F0D7         	movff	remove_chain@pclst+2,put_fat@clst+2
  7336   006830  C0FD  F0D8         	movff	remove_chain@pclst+3,put_fat@clst+3
  7337   006834  0EFF               	movlw	255
  7338   006836  6FD9               	movwf	put_fat@val& (0+255),b
  7339   006838  0EFF               	movlw	255
  7340   00683A  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  7341   00683C  0EFF               	movlw	255
  7342   00683E  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  7343   006840  0EFF               	movlw	255
  7344   006842  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  7345   006844  ECF0  F019         	call	_put_fat	;wreg free
  7346   006848  0101               	movlb	1	; () banked
  7347   00684A  6F0C               	movwf	remove_chain@res& (0+255),b
  7348   00684C                     
  7349                           ; BSR set to: 1
  7350                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  7351   00684C  510C               	movf	remove_chain@res& (0+255),w,b
  7352   00684E  B4D8               	btfsc	status,2,c
  7353   006850  EF2C  F034         	goto	u19941
  7354   006854  EF2E  F034         	goto	u19940
  7355   006858                     u19941:
  7356   006858  EF31  F034         	goto	l16377
  7357   00685C                     u19940:
  7358   00685C                     l16373:
  7359                           
  7360                           ; BSR set to: 1
  7361   00685C  510C               	movf	remove_chain@res& (0+255),w,b
  7362   00685E  EFEF  F034         	goto	l970
  7363   006862                     l16377:
  7364                           
  7365                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  7366   006862  C0F4  F0D3         	movff	remove_chain@obj,get_fat@obj
  7367   006866  C0F5  F0D4         	movff	remove_chain@obj+1,get_fat@obj+1
  7368   00686A  C0F6  F0D5         	movff	remove_chain@clst,get_fat@clst
  7369   00686E  C0F7  F0D6         	movff	remove_chain@clst+1,get_fat@clst+1
  7370   006872  C0F8  F0D7         	movff	remove_chain@clst+2,get_fat@clst+2
  7371   006876  C0F9  F0D8         	movff	remove_chain@clst+3,get_fat@clst+3
  7372   00687A  ECE4  F027         	call	_get_fat	;wreg free
  7373   00687E  C0D3  F108         	movff	?_get_fat,remove_chain@nxt
  7374   006882  C0D4  F109         	movff	?_get_fat+1,remove_chain@nxt+1
  7375   006886  C0D5  F10A         	movff	?_get_fat+2,remove_chain@nxt+2
  7376   00688A  C0D6  F10B         	movff	?_get_fat+3,remove_chain@nxt+3
  7377   00688E                     
  7378                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  7379   00688E  0101               	movlb	1	; () banked
  7380   006890  5108               	movf	remove_chain@nxt& (0+255),w,b
  7381   006892  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7382   006894  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7383   006896  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7384   006898  A4D8               	btfss	status,2,c
  7385   00689A  EF51  F034         	goto	u19951
  7386   00689E  EF53  F034         	goto	u19950
  7387   0068A2                     u19951:
  7388   0068A2  EF55  F034         	goto	l16383
  7389   0068A6                     u19950:
  7390   0068A6  EFEE  F034         	goto	l16411
  7391   0068AA                     l16383:
  7392                           
  7393                           ; BSR set to: 1
  7394                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  7395   0068AA  0508               	decf	remove_chain@nxt& (0+255),w,b
  7396   0068AC  1109               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7397   0068AE  110A               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7398   0068B0  110B               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7399   0068B2  A4D8               	btfss	status,2,c
  7400   0068B4  EF5E  F034         	goto	u19961
  7401   0068B8  EF60  F034         	goto	u19960
  7402   0068BC                     u19961:
  7403   0068BC  EF62  F034         	goto	l16389
  7404   0068C0                     u19960:
  7405   0068C0  EF00  F034         	goto	l16357
  7406   0068C4                     l16389:
  7407                           
  7408                           ; BSR set to: 1
  7409                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  7410   0068C4  2908               	incf	remove_chain@nxt& (0+255),w,b
  7411   0068C6  E10A               	bnz	u19971
  7412   0068C8  2909               	incf	(remove_chain@nxt+1)& (0+255),w,b
  7413   0068CA  E108               	bnz	u19971
  7414   0068CC  290A               	incf	(remove_chain@nxt+2)& (0+255),w,b
  7415   0068CE  E106               	bnz	u19971
  7416   0068D0  290B               	incf	(remove_chain@nxt+3)& (0+255),w,b
  7417   0068D2  A4D8               	btfss	status,2,c
  7418   0068D4  EF6E  F034         	goto	u19971
  7419   0068D8  EF70  F034         	goto	u19970
  7420   0068DC                     u19971:
  7421   0068DC  EF73  F034         	goto	l16397
  7422   0068E0                     u19970:
  7423   0068E0                     
  7424                           ; BSR set to: 1
  7425   0068E0  0E01               	movlw	1
  7426   0068E2  EFEF  F034         	goto	l970
  7427   0068E6                     l16397:
  7428                           
  7429                           ; BSR set to: 1
  7430                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  7431   0068E6  C10D  F0D3         	movff	remove_chain@fs,put_fat@fs
  7432   0068EA  C10E  F0D4         	movff	remove_chain@fs+1,put_fat@fs+1
  7433   0068EE  C0F6  F0D5         	movff	remove_chain@clst,put_fat@clst
  7434   0068F2  C0F7  F0D6         	movff	remove_chain@clst+1,put_fat@clst+1
  7435   0068F6  C0F8  F0D7         	movff	remove_chain@clst+2,put_fat@clst+2
  7436   0068FA  C0F9  F0D8         	movff	remove_chain@clst+3,put_fat@clst+3
  7437   0068FE  0E00               	movlw	0
  7438   006900  0100               	movlb	0	; () banked
  7439   006902  6FD9               	movwf	put_fat@val& (0+255),b
  7440   006904  0E00               	movlw	0
  7441   006906  6FDA               	movwf	(put_fat@val+1)& (0+255),b
  7442   006908  0E00               	movlw	0
  7443   00690A  6FDB               	movwf	(put_fat@val+2)& (0+255),b
  7444   00690C  0E00               	movlw	0
  7445   00690E  6FDC               	movwf	(put_fat@val+3)& (0+255),b
  7446   006910  ECF0  F019         	call	_put_fat	;wreg free
  7447   006914  0101               	movlb	1	; () banked
  7448   006916  6F0C               	movwf	remove_chain@res& (0+255),b
  7449   006918                     
  7450                           ; BSR set to: 1
  7451                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  7452   006918  510C               	movf	remove_chain@res& (0+255),w,b
  7453   00691A  B4D8               	btfsc	status,2,c
  7454   00691C  EF92  F034         	goto	u19981
  7455   006920  EF94  F034         	goto	u19980
  7456   006924                     u19981:
  7457   006924  EF96  F034         	goto	l16405
  7458   006928                     u19980:
  7459   006928  EF2E  F034         	goto	l16373
  7460   00692C                     l16405:
  7461                           
  7462                           ; BSR set to: 1
  7463                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  7464   00692C  EE20 F017          	lfsr	2,23
  7465   006930  510D               	movf	remove_chain@fs& (0+255),w,b
  7466   006932  26D9               	addwf	fsr2l,f,c
  7467   006934  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7468   006936  22DA               	addwfc	fsr2h,f,c
  7469   006938  0EFE               	movlw	254
  7470   00693A  24DE               	addwf	postinc2,w,c
  7471   00693C  6F00               	movwf	??_remove_chain& (0+255),b
  7472   00693E  0EFF               	movlw	255
  7473   006940  20DE               	addwfc	postinc2,w,c
  7474   006942  6F01               	movwf	(??_remove_chain+1)& (0+255),b
  7475   006944  0EFF               	movlw	255
  7476   006946  20DE               	addwfc	postinc2,w,c
  7477   006948  6F02               	movwf	(??_remove_chain+2)& (0+255),b
  7478   00694A  0EFF               	movlw	255
  7479   00694C  20DE               	addwfc	postinc2,w,c
  7480   00694E  6F03               	movwf	(??_remove_chain+3)& (0+255),b
  7481   006950  EE20 F00F          	lfsr	2,15
  7482   006954  510D               	movf	remove_chain@fs& (0+255),w,b
  7483   006956  26D9               	addwf	fsr2l,f,c
  7484   006958  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7485   00695A  22DA               	addwfc	fsr2h,f,c
  7486   00695C  5100               	movf	??_remove_chain& (0+255),w,b
  7487   00695E  5CDE               	subwf	postinc2,w,c
  7488   006960  5101               	movf	(??_remove_chain+1)& (0+255),w,b
  7489   006962  58DE               	subwfb	postinc2,w,c
  7490   006964  5102               	movf	(??_remove_chain+2)& (0+255),w,b
  7491   006966  58DE               	subwfb	postinc2,w,c
  7492   006968  5103               	movf	(??_remove_chain+3)& (0+255),w,b
  7493   00696A  58DE               	subwfb	postinc2,w,c
  7494   00696C  B0D8               	btfsc	status,0,c
  7495   00696E  EFBB  F034         	goto	u19991
  7496   006972  EFBD  F034         	goto	u19990
  7497   006976                     u19991:
  7498   006976  EFD0  F034         	goto	l16409
  7499   00697A                     u19990:
  7500   00697A                     
  7501                           ; BSR set to: 1
  7502                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  7503   00697A  EE20 F00F          	lfsr	2,15
  7504   00697E  510D               	movf	remove_chain@fs& (0+255),w,b
  7505   006980  26D9               	addwf	fsr2l,f,c
  7506   006982  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7507   006984  22DA               	addwfc	fsr2h,f,c
  7508   006986  2ADE               	incf	postinc2,f,c
  7509   006988  0E00               	movlw	0
  7510   00698A  22DE               	addwfc	postinc2,f,c
  7511   00698C  22DE               	addwfc	postinc2,f,c
  7512   00698E  22DE               	addwfc	postinc2,f,c
  7513                           
  7514                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  7515   006990  EE20 F004          	lfsr	2,4
  7516   006994  510D               	movf	remove_chain@fs& (0+255),w,b
  7517   006996  26D9               	addwf	fsr2l,f,c
  7518   006998  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7519   00699A  22DA               	addwfc	fsr2h,f,c
  7520   00699C  0E00               	movlw	0
  7521   00699E  80DB               	bsf	plusw2,0,c
  7522   0069A0                     l16409:
  7523                           
  7524                           ; BSR set to: 1
  7525                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  7526   0069A0  C108  F0F6         	movff	remove_chain@nxt,remove_chain@clst
  7527   0069A4  C109  F0F7         	movff	remove_chain@nxt+1,remove_chain@clst+1
  7528   0069A8  C10A  F0F8         	movff	remove_chain@nxt+2,remove_chain@clst+2
  7529   0069AC  C10B  F0F9         	movff	remove_chain@nxt+3,remove_chain@clst+3
  7530                           
  7531                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  7532   0069B0  EE20 F017          	lfsr	2,23
  7533   0069B4  510D               	movf	remove_chain@fs& (0+255),w,b
  7534   0069B6  26D9               	addwf	fsr2l,f,c
  7535   0069B8  510E               	movf	(remove_chain@fs+1)& (0+255),w,b
  7536   0069BA  22DA               	addwfc	fsr2h,f,c
  7537   0069BC  50DE               	movf	postinc2,w,c
  7538   0069BE  0100               	movlb	0	; () banked
  7539   0069C0  5DF6               	subwf	remove_chain@clst& (0+255),w,b
  7540   0069C2  50DE               	movf	postinc2,w,c
  7541   0069C4  59F7               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  7542   0069C6  50DE               	movf	postinc2,w,c
  7543   0069C8  59F8               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  7544   0069CA  50DE               	movf	postinc2,w,c
  7545   0069CC  59F9               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  7546   0069CE  A0D8               	btfss	status,0,c
  7547   0069D0  EFEC  F034         	goto	u20001
  7548   0069D4  EFEE  F034         	goto	u20000
  7549   0069D8                     u20001:
  7550   0069D8  EF31  F034         	goto	l16377
  7551   0069DC                     u20000:
  7552   0069DC                     l16411:
  7553                           
  7554                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  7555   0069DC  0E00               	movlw	0
  7556   0069DE                     l970:
  7557   0069DE  0012               	return		;funcret
  7558   0069E0                     __end_of_remove_chain:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _follow_path *****************
  7562 ;; Defined at:
  7563 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  dp              2   51[BANK1 ] PTR struct .
  7566 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  7567 ;;  path            2   53[BANK1 ] PTR const unsigned char 
  7568 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  fs              2   61[BANK1 ] PTR struct .
  7571 ;;		 -> FatFs(563), NULL(0), 
  7572 ;;  res             1   64[BANK1 ] enum E68
  7573 ;;  ns              1   63[BANK1 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      enum E68
  7576 ;; Registers used:
  7577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7583 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7584 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7585 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;Total ram usage:       14 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; Hardware stack levels required when called: 16
  7590 ;; This function calls:
  7591 ;;		_create_name
  7592 ;;		_dir_find
  7593 ;;		_dir_sdi
  7594 ;;		_ld_clust
  7595 ;; This function is called by:
  7596 ;;		_f_open
  7597 ;;		_f_chdir
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text20
  7602   006260                     __ptext20:
  7603                           	callstack 0
  7604   006260                     _follow_path:
  7605                           	callstack 12
  7606   006260                     
  7607                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  7608   006260  0060  F4CF  FFD9   	movff	follow_path@dp,fsr2l
  7609   006266  0060  F4D3  FFDA   	movff	follow_path@dp+1,fsr2h
  7610   00626C  006F FF78  F13D    	movff	postinc2,follow_path@fs
  7611   006272  006F FF74  F13E    	movff	postdec2,follow_path@fs+1
  7612   006278                     
  7613                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  7614   006278  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7615   00627E  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7616   006284                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7617   006284  6AF8               	clrf	tblptru,c
  7618   006286                     	endif
  7619   006286                     	if	0	;tblptru may be non-zero
  7620   006286                     	endif
  7621   006286  0008               	tblrd		*
  7622   006288  50F5               	movf	tablat,w,c
  7623   00628A  0A2F               	xorlw	47
  7624   00628C  B4D8               	btfsc	status,2,c
  7625   00628E  EF4B  F031         	goto	u20031
  7626   006292  EF4D  F031         	goto	u20030
  7627   006296                     u20031:
  7628   006296  EF7C  F031         	goto	l16445
  7629   00629A                     u20030:
  7630   00629A  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7631   0062A0  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7632   0062A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7633   0062A6  6AF8               	clrf	tblptru,c
  7634   0062A8                     	endif
  7635   0062A8                     	if	0	;tblptru may be non-zero
  7636   0062A8                     	endif
  7637   0062A8  0008               	tblrd		*
  7638   0062AA  50F5               	movf	tablat,w,c
  7639   0062AC  0A5C               	xorlw	92
  7640   0062AE  B4D8               	btfsc	status,2,c
  7641   0062B0  EF5C  F031         	goto	u20041
  7642   0062B4  EF5E  F031         	goto	u20040
  7643   0062B8                     u20041:
  7644   0062B8  EF7C  F031         	goto	l16445
  7645   0062BC                     u20040:
  7646   0062BC                     
  7647                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  7648   0062BC  0101               	movlb	1	; () banked
  7649   0062BE  EE20 F013          	lfsr	2,19
  7650   0062C2  513D               	movf	follow_path@fs& (0+255),w,b
  7651   0062C4  26D9               	addwf	fsr2l,f,c
  7652   0062C6  513E               	movf	(follow_path@fs+1)& (0+255),w,b
  7653   0062C8  22DA               	addwfc	fsr2h,f,c
  7654   0062CA  EE10 F006          	lfsr	1,6
  7655   0062CE  5133               	movf	follow_path@dp& (0+255),w,b
  7656   0062D0  26E1               	addwf	fsr1l,f,c
  7657   0062D2  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7658   0062D4  22E2               	addwfc	fsr1h,f,c
  7659   0062D6  006F FF7B FFE6     	movff	postinc2,postinc1
  7660   0062DC  006F FF7B FFE6     	movff	postinc2,postinc1
  7661   0062E2  006F FF7B FFE6     	movff	postinc2,postinc1
  7662   0062E8  006F FF7B FFE6     	movff	postinc2,postinc1
  7663                           
  7664                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  7665   0062EE  EFA9  F031         	goto	l16451
  7666   0062F2                     l16443:
  7667   0062F2  0101               	movlb	1	; () banked
  7668   0062F4  4B35               	infsnz	follow_path@path& (0+255),f,b
  7669   0062F6  2B36               	incf	(follow_path@path+1)& (0+255),f,b
  7670   0062F8                     l16445:
  7671   0062F8  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7672   0062FE  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7673   006304                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7674   006304  6AF8               	clrf	tblptru,c
  7675   006306                     	endif
  7676   006306                     	if	0	;tblptru may be non-zero
  7677   006306                     	endif
  7678   006306  0008               	tblrd		*
  7679   006308  50F5               	movf	tablat,w,c
  7680   00630A  0A2F               	xorlw	47
  7681   00630C  B4D8               	btfsc	status,2,c
  7682   00630E  EF8B  F031         	goto	u20051
  7683   006312  EF8D  F031         	goto	u20050
  7684   006316                     u20051:
  7685   006316  EF79  F031         	goto	l16443
  7686   00631A                     u20050:
  7687   00631A  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7688   006320  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7689   006326                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7690   006326  6AF8               	clrf	tblptru,c
  7691   006328                     	endif
  7692   006328                     	if	0	;tblptru may be non-zero
  7693   006328                     	endif
  7694   006328  0008               	tblrd		*
  7695   00632A  50F5               	movf	tablat,w,c
  7696   00632C  0A5C               	xorlw	92
  7697   00632E  B4D8               	btfsc	status,2,c
  7698   006330  EF9C  F031         	goto	u20061
  7699   006334  EF9E  F031         	goto	u20060
  7700   006338                     u20061:
  7701   006338  EF79  F031         	goto	l16443
  7702   00633C                     u20060:
  7703   00633C                     
  7704                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  7705   00633C  0101               	movlb	1	; () banked
  7706   00633E  EE20 F006          	lfsr	2,6
  7707   006342  5133               	movf	follow_path@dp& (0+255),w,b
  7708   006344  26D9               	addwf	fsr2l,f,c
  7709   006346  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7710   006348  22DA               	addwfc	fsr2h,f,c
  7711   00634A  6ADE               	clrf	postinc2,c
  7712   00634C  6ADE               	clrf	postinc2,c
  7713   00634E  6ADE               	clrf	postinc2,c
  7714   006350  6ADD               	clrf	postdec2,c
  7715   006352                     l16451:
  7716                           
  7717                           ; BSR set to: 1
  7718                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  7719   006352  0060  F4D7  FFF6   	movff	follow_path@path,tblptrl
  7720   006358  0060  F4DB  FFF7   	movff	follow_path@path+1,tblptrh
  7721   00635E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7722   00635E  6AF8               	clrf	tblptru,c
  7723   006360                     	endif
  7724   006360                     	if	0	;tblptru may be non-zero
  7725   006360                     	endif
  7726   006360  0E20               	movlw	32
  7727   006362  0008               	tblrd		*
  7728   006364  60F5               	cpfslt	tablat,c
  7729   006366  EFB7  F031         	goto	u20071
  7730   00636A  EFB9  F031         	goto	u20070
  7731   00636E                     u20071:
  7732   00636E  EFD4  F031         	goto	l16457
  7733   006372                     u20070:
  7734   006372                     
  7735                           ; BSR set to: 1
  7736                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  7737   006372  EE20 F027          	lfsr	2,39
  7738   006376  5133               	movf	follow_path@dp& (0+255),w,b
  7739   006378  26D9               	addwf	fsr2l,f,c
  7740   00637A  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7741   00637C  22DA               	addwfc	fsr2h,f,c
  7742   00637E  0E80               	movlw	128
  7743   006380  6EDF               	movwf	indf2,c
  7744   006382                     
  7745                           ; BSR set to: 1
  7746                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  7747   006382  C133  F0ED         	movff	follow_path@dp,dir_sdi@dp
  7748   006386  C134  F0EE         	movff	follow_path@dp+1,dir_sdi@dp+1
  7749   00638A  0E00               	movlw	0
  7750   00638C  0100               	movlb	0	; () banked
  7751   00638E  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  7752   006390  0E00               	movlw	0
  7753   006392  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  7754   006394  0E00               	movlw	0
  7755   006396  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  7756   006398  0E00               	movlw	0
  7757   00639A  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  7758   00639C  ECF1  F02B         	call	_dir_sdi	;wreg free
  7759   0063A0  0101               	movlb	1	; () banked
  7760   0063A2  6F40               	movwf	follow_path@res& (0+255),b
  7761                           
  7762                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  7763   0063A4  EF88  F032         	goto	l16491
  7764   0063A8                     l16457:
  7765                           
  7766                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  7767   0063A8  C133  F068         	movff	follow_path@dp,create_name@dp
  7768   0063AC  C134  F069         	movff	follow_path@dp+1,create_name@dp+1
  7769   0063B0  0E35               	movlw	low follow_path@path
  7770   0063B2  0100               	movlb	0	; () banked
  7771   0063B4  6F6A               	movwf	create_name@path& (0+255),b
  7772   0063B6  0E01               	movlw	high follow_path@path
  7773   0063B8  6F6B               	movwf	(create_name@path+1)& (0+255),b
  7774   0063BA  EC05  F01F         	call	_create_name	;wreg free
  7775   0063BE  0101               	movlb	1	; () banked
  7776   0063C0  6F40               	movwf	follow_path@res& (0+255),b
  7777   0063C2                     
  7778                           ; BSR set to: 1
  7779                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  7780   0063C2  5140               	movf	follow_path@res& (0+255),w,b
  7781   0063C4  B4D8               	btfsc	status,2,c
  7782   0063C6  EFE7  F031         	goto	u20081
  7783   0063CA  EFE9  F031         	goto	u20080
  7784   0063CE                     u20081:
  7785   0063CE  EFEB  F031         	goto	l16463
  7786   0063D2                     u20080:
  7787   0063D2  EF88  F032         	goto	l16491
  7788   0063D6                     l16463:
  7789                           
  7790                           ; BSR set to: 1
  7791                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  7792   0063D6  C133  F12D         	movff	follow_path@dp,dir_find@dp
  7793   0063DA  C134  F12E         	movff	follow_path@dp+1,dir_find@dp+1
  7794   0063DE  ECDA  F03A         	call	_dir_find	;wreg free
  7795   0063E2  0101               	movlb	1	; () banked
  7796   0063E4  6F40               	movwf	follow_path@res& (0+255),b
  7797   0063E6                     
  7798                           ; BSR set to: 1
  7799                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  7800   0063E6  EE20 F027          	lfsr	2,39
  7801   0063EA  5133               	movf	follow_path@dp& (0+255),w,b
  7802   0063EC  26D9               	addwf	fsr2l,f,c
  7803   0063EE  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7804   0063F0  22DA               	addwfc	fsr2h,f,c
  7805   0063F2  50DF               	movf	indf2,w,c
  7806   0063F4  6F3F               	movwf	follow_path@ns& (0+255),b
  7807   0063F6                     
  7808                           ; BSR set to: 1
  7809                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  7810   0063F6  5140               	movf	follow_path@res& (0+255),w,b
  7811   0063F8  B4D8               	btfsc	status,2,c
  7812   0063FA  EF01  F032         	goto	u20091
  7813   0063FE  EF03  F032         	goto	u20090
  7814   006402                     u20091:
  7815   006402  EF33  F032         	goto	l1173
  7816   006406                     u20090:
  7817   006406                     
  7818                           ; BSR set to: 1
  7819                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  7820   006406  0E04               	movlw	4
  7821   006408  1940               	xorwf	follow_path@res& (0+255),w,b
  7822   00640A  A4D8               	btfss	status,2,c
  7823   00640C  EF0A  F032         	goto	u20101
  7824   006410  EF0C  F032         	goto	u20100
  7825   006414                     u20101:
  7826   006414  EF88  F032         	goto	l16491
  7827   006418                     u20100:
  7828   006418                     
  7829                           ; BSR set to: 1
  7830   006418  AB3F               	btfss	follow_path@ns& (0+255),5,b
  7831   00641A  EF11  F032         	goto	u20111
  7832   00641E  EF13  F032         	goto	u20110
  7833   006422                     u20111:
  7834   006422  EF28  F032         	goto	l1175
  7835   006426                     u20110:
  7836   006426                     
  7837                           ; BSR set to: 1
  7838                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  7839   006426  B53F               	btfsc	follow_path@ns& (0+255),2,b
  7840   006428  EF18  F032         	goto	u20121
  7841   00642C  EF1A  F032         	goto	u20120
  7842   006430                     u20121:
  7843   006430  EF1C  F032         	goto	l16477
  7844   006434                     u20120:
  7845   006434  EFD4  F031         	goto	l16457
  7846   006438                     l16477:
  7847                           
  7848                           ; BSR set to: 1
  7849                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  7850   006438  EE20 F027          	lfsr	2,39
  7851   00643C  5133               	movf	follow_path@dp& (0+255),w,b
  7852   00643E  26D9               	addwf	fsr2l,f,c
  7853   006440  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7854   006442  22DA               	addwfc	fsr2h,f,c
  7855   006444  0E80               	movlw	128
  7856   006446  6EDF               	movwf	indf2,c
  7857   006448                     
  7858                           ; BSR set to: 1
  7859                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  7860   006448  0E00               	movlw	0
  7861   00644A  6F40               	movwf	follow_path@res& (0+255),b
  7862                           
  7863                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  7864   00644C  EF88  F032         	goto	l16491
  7865   006450                     l1175:
  7866                           
  7867                           ; BSR set to: 1
  7868                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  7869   006450  B53F               	btfsc	follow_path@ns& (0+255),2,b
  7870   006452  EF2D  F032         	goto	u20131
  7871   006456  EF2F  F032         	goto	u20130
  7872   00645A                     u20131:
  7873   00645A  EF88  F032         	goto	l16491
  7874   00645E                     u20130:
  7875   00645E                     l16481:
  7876                           
  7877                           ; BSR set to: 1
  7878   00645E  0E05               	movlw	5
  7879   006460  6F40               	movwf	follow_path@res& (0+255),b
  7880   006462  EF88  F032         	goto	l16491
  7881   006466                     l1173:
  7882                           
  7883                           ; BSR set to: 1
  7884                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  7885   006466  A53F               	btfss	follow_path@ns& (0+255),2,b
  7886   006468  EF38  F032         	goto	u20141
  7887   00646C  EF3A  F032         	goto	u20140
  7888   006470                     u20141:
  7889   006470  EF3C  F032         	goto	l16485
  7890   006474                     u20140:
  7891   006474  EF88  F032         	goto	l16491
  7892   006478                     l16485:
  7893                           
  7894                           ; BSR set to: 1
  7895                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  7896   006478  EE20 F004          	lfsr	2,4
  7897   00647C  5133               	movf	follow_path@dp& (0+255),w,b
  7898   00647E  26D9               	addwf	fsr2l,f,c
  7899   006480  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7900   006482  22DA               	addwfc	fsr2h,f,c
  7901   006484  B8DF               	btfsc	indf2,4,c
  7902   006486  EF47  F032         	goto	u20151
  7903   00648A  EF49  F032         	goto	u20150
  7904   00648E                     u20151:
  7905   00648E  EF4B  F032         	goto	l16489
  7906   006492                     u20150:
  7907   006492  EF2F  F032         	goto	l16481
  7908   006496                     l16489:
  7909                           
  7910                           ; BSR set to: 1
  7911                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  7912   006496  C13D  F067         	movff	follow_path@fs,ld_clust@fs
  7913   00649A  C13E  F068         	movff	follow_path@fs+1,ld_clust@fs+1
  7914   00649E  EE20 F00E          	lfsr	2,14
  7915   0064A2  5133               	movf	follow_path@dp& (0+255),w,b
  7916   0064A4  26D9               	addwf	fsr2l,f,c
  7917   0064A6  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7918   0064A8  22DA               	addwfc	fsr2h,f,c
  7919   0064AA  006F FF78  F137    	movff	postinc2,??_follow_path
  7920   0064B0  006F FF74  F138    	movff	postdec2,??_follow_path+1
  7921   0064B6  0EFF               	movlw	255
  7922   0064B8  1537               	andwf	??_follow_path& (0+255),w,b
  7923   0064BA  6F39               	movwf	(??_follow_path+2)& (0+255),b
  7924   0064BC  0E01               	movlw	1
  7925   0064BE  1538               	andwf	(??_follow_path+1)& (0+255),w,b
  7926   0064C0  6F3A               	movwf	(??_follow_path+3)& (0+255),b
  7927   0064C2  5139               	movf	(??_follow_path+2)& (0+255),w,b
  7928   0064C4  253D               	addwf	follow_path@fs& (0+255),w,b
  7929   0064C6  6F3B               	movwf	(??_follow_path+4)& (0+255),b
  7930   0064C8  513A               	movf	(??_follow_path+3)& (0+255),w,b
  7931   0064CA  213E               	addwfc	(follow_path@fs+1)& (0+255),w,b
  7932   0064CC  6F3C               	movwf	(??_follow_path+5)& (0+255),b
  7933   0064CE  0E33               	movlw	51
  7934   0064D0  253B               	addwf	(??_follow_path+4)& (0+255),w,b
  7935   0064D2  0100               	movlb	0	; () banked
  7936   0064D4  6F69               	movwf	ld_clust@dir& (0+255),b
  7937   0064D6  0E00               	movlw	0
  7938   0064D8  0101               	movlb	1	; () banked
  7939   0064DA  213C               	addwfc	(??_follow_path+5)& (0+255),w,b
  7940   0064DC  0100               	movlb	0	; () banked
  7941   0064DE  6F6A               	movwf	(ld_clust@dir+1)& (0+255),b
  7942   0064E0  ECFE  F049         	call	_ld_clust	;wreg free
  7943   0064E4  0101               	movlb	1	; () banked
  7944   0064E6  EE20 F006          	lfsr	2,6
  7945   0064EA  5133               	movf	follow_path@dp& (0+255),w,b
  7946   0064EC  26D9               	addwf	fsr2l,f,c
  7947   0064EE  5134               	movf	(follow_path@dp+1)& (0+255),w,b
  7948   0064F0  22DA               	addwfc	fsr2h,f,c
  7949   0064F2  0100               	movlb	0	; () banked
  7950   0064F4  0060  F19F  FFDE   	movff	?_ld_clust,postinc2
  7951   0064FA  0060  F1A3  FFDE   	movff	?_ld_clust+1,postinc2
  7952   006500  0060  F1A7  FFDE   	movff	?_ld_clust+2,postinc2
  7953   006506  0060  F1AB  FFDE   	movff	?_ld_clust+3,postinc2
  7954   00650C  EFD4  F031         	goto	l16457
  7955   006510                     l16491:
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  7959   006510  5140               	movf	follow_path@res& (0+255),w,b
  7960   006512                     
  7961                           ; BSR set to: 1
  7962   006512  0012               	return		;funcret
  7963   006514                     __end_of_follow_path:
  7964                           	callstack 0
  7965                           
  7966 ;; *************** function _ld_clust *****************
  7967 ;; Defined at:
  7968 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  fs              2    7[BANK0 ] PTR struct .
  7971 ;;		 -> FatFs(563), NULL(0), 
  7972 ;;  dir             2    9[BANK0 ] PTR const unsigned char 
  7973 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  cl              4   15[BANK0 ] unsigned long 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  4    7[BANK0 ] unsigned long 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;Total ram usage:       12 bytes
  7990 ;; Hardware stack levels used: 1
  7991 ;; Hardware stack levels required when called: 6
  7992 ;; This function calls:
  7993 ;;		_ld_word
  7994 ;; This function is called by:
  7995 ;;		_follow_path
  7996 ;;		_f_open
  7997 ;;		_f_chdir
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text21
  8002   0093FC                     __ptext21:
  8003                           	callstack 0
  8004   0093FC                     _ld_clust:
  8005                           	callstack 22
  8006   0093FC                     
  8007                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  8008   0093FC  0E1A               	movlw	26
  8009   0093FE  0100               	movlb	0	; () banked
  8010   009400  2569               	addwf	ld_clust@dir& (0+255),w,b
  8011   009402  6F60               	movwf	ld_word@ptr& (0+255),b
  8012   009404  0E00               	movlw	0
  8013   009406  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  8014   009408  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  8015   00940A  EC0E  F050         	call	_ld_word	;wreg free
  8016   00940E  0100               	movlb	0	; () banked
  8017   009410  C060  F06F         	movff	?_ld_word,ld_clust@cl
  8018   009414  C061  F070         	movff	?_ld_word+1,ld_clust@cl+1
  8019   009418  6B71               	clrf	(ld_clust@cl+2)& (0+255),b
  8020   00941A  6B72               	clrf	(ld_clust@cl+3)& (0+255),b
  8021   00941C                     
  8022                           ; BSR set to: 0
  8023                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  8024   00941C  0060  F19F  FFD9   	movff	ld_clust@fs,fsr2l
  8025   009422  0060  F1A3  FFDA   	movff	ld_clust@fs+1,fsr2h
  8026   009428  0E03               	movlw	3
  8027   00942A  18DE               	xorwf	postinc2,w,c
  8028   00942C  A4D8               	btfss	status,2,c
  8029   00942E  EF1B  F04A         	goto	u19281
  8030   009432  EF1D  F04A         	goto	u19280
  8031   009436                     u19281:
  8032   009436  EF3A  F04A         	goto	l15961
  8033   00943A                     u19280:
  8034   00943A                     
  8035                           ; BSR set to: 0
  8036                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  8037   00943A  0E14               	movlw	20
  8038   00943C  2569               	addwf	ld_clust@dir& (0+255),w,b
  8039   00943E  6F60               	movwf	ld_word@ptr& (0+255),b
  8040   009440  0E00               	movlw	0
  8041   009442  216A               	addwfc	(ld_clust@dir+1)& (0+255),w,b
  8042   009444  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
  8043   009446  EC0E  F050         	call	_ld_word	;wreg free
  8044   00944A  0100               	movlb	0	; () banked
  8045   00944C  5160               	movf	?_ld_word& (0+255),w,b
  8046   00944E  6F6B               	movwf	??_ld_clust& (0+255),b
  8047   009450  5161               	movf	(?_ld_word+1)& (0+255),w,b
  8048   009452  6F6C               	movwf	(??_ld_clust+1)& (0+255),b
  8049   009454  6B6D               	clrf	(??_ld_clust+2)& (0+255),b
  8050   009456  6B6E               	clrf	(??_ld_clust+3)& (0+255),b
  8051   009458  C06C  F06E         	movff	??_ld_clust+1,??_ld_clust+3
  8052   00945C  C06B  F06D         	movff	??_ld_clust,??_ld_clust+2
  8053   009460  6B6C               	clrf	(??_ld_clust+1)& (0+255),b
  8054   009462  6B6B               	clrf	??_ld_clust& (0+255),b
  8055   009464  516B               	movf	??_ld_clust& (0+255),w,b
  8056   009466  136F               	iorwf	ld_clust@cl& (0+255),f,b
  8057   009468  516C               	movf	(??_ld_clust+1)& (0+255),w,b
  8058   00946A  1370               	iorwf	(ld_clust@cl+1)& (0+255),f,b
  8059   00946C  516D               	movf	(??_ld_clust+2)& (0+255),w,b
  8060   00946E  1371               	iorwf	(ld_clust@cl+2)& (0+255),f,b
  8061   009470  516E               	movf	(??_ld_clust+3)& (0+255),w,b
  8062   009472  1372               	iorwf	(ld_clust@cl+3)& (0+255),f,b
  8063   009474                     l15961:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  8067   009474  C06F  F067         	movff	ld_clust@cl,?_ld_clust
  8068   009478  C070  F068         	movff	ld_clust@cl+1,?_ld_clust+1
  8069   00947C  C071  F069         	movff	ld_clust@cl+2,?_ld_clust+2
  8070   009480  C072  F06A         	movff	ld_clust@cl+3,?_ld_clust+3
  8071   009484                     
  8072                           ; BSR set to: 0
  8073   009484  0012               	return		;funcret
  8074   009486                     __end_of_ld_clust:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _dir_find *****************
  8078 ;; Defined at:
  8079 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  dp              2   45[BANK1 ] PTR struct .
  8082 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  fs              2   47[BANK1 ] PTR struct .
  8085 ;;		 -> FatFs(563), NULL(0), 
  8086 ;;  res             1   50[BANK1 ] enum E68
  8087 ;;  c               1   49[BANK1 ] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      enum E68
  8090 ;; Registers used:
  8091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8097 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;Total ram usage:        8 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 15
  8104 ;; This function calls:
  8105 ;;		_dir_next
  8106 ;;		_dir_sdi
  8107 ;;		_mem_cmp
  8108 ;;		_move_window
  8109 ;; This function is called by:
  8110 ;;		_follow_path
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text22
  8115   0075B4                     __ptext22:
  8116                           	callstack 0
  8117   0075B4                     _dir_find:
  8118                           	callstack 12
  8119   0075B4                     
  8120                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  8121   0075B4  0060  F4B7  FFD9   	movff	dir_find@dp,fsr2l
  8122   0075BA  0060  F4BB  FFDA   	movff	dir_find@dp+1,fsr2h
  8123   0075C0  006F FF78  F12F    	movff	postinc2,dir_find@fs
  8124   0075C6  006F FF74  F130    	movff	postdec2,dir_find@fs+1
  8125   0075CC                     
  8126                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  8127   0075CC  C12D  F0ED         	movff	dir_find@dp,dir_sdi@dp
  8128   0075D0  C12E  F0EE         	movff	dir_find@dp+1,dir_sdi@dp+1
  8129   0075D4  0E00               	movlw	0
  8130   0075D6  0100               	movlb	0	; () banked
  8131   0075D8  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  8132   0075DA  0E00               	movlw	0
  8133   0075DC  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  8134   0075DE  0E00               	movlw	0
  8135   0075E0  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  8136   0075E2  0E00               	movlw	0
  8137   0075E4  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  8138   0075E6  ECF1  F02B         	call	_dir_sdi	;wreg free
  8139   0075EA  0101               	movlb	1	; () banked
  8140   0075EC  6F32               	movwf	dir_find@res& (0+255),b
  8141   0075EE                     
  8142                           ; BSR set to: 1
  8143                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  8144   0075EE  5132               	movf	dir_find@res& (0+255),w,b
  8145   0075F0  B4D8               	btfsc	status,2,c
  8146   0075F2  EFFD  F03A         	goto	u19301
  8147   0075F6  EFFF  F03A         	goto	u19300
  8148   0075FA                     u19301:
  8149   0075FA  EF03  F03B         	goto	l15981
  8150   0075FE                     u19300:
  8151   0075FE                     l15977:
  8152   0075FE  0101               	movlb	1	; () banked
  8153   007600  5132               	movf	dir_find@res& (0+255),w,b
  8154   007602  EFAD  F03B         	goto	l1106
  8155   007606                     l15981:
  8156                           
  8157                           ; BSR set to: 1
  8158                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  8159   007606  C12F  F0C8         	movff	dir_find@fs,move_window@fs
  8160   00760A  C130  F0C9         	movff	dir_find@fs+1,move_window@fs+1
  8161   00760E  EE20 F016          	lfsr	2,22
  8162   007612  512D               	movf	dir_find@dp& (0+255),w,b
  8163   007614  26D9               	addwf	fsr2l,f,c
  8164   007616  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8165   007618  22DA               	addwfc	fsr2h,f,c
  8166   00761A  006F FF78  F0CA    	movff	postinc2,move_window@sector
  8167   007620  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  8168   007626  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  8169   00762C  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  8170   007632  ECDA  F046         	call	_move_window	;wreg free
  8171   007636  0101               	movlb	1	; () banked
  8172   007638  6F32               	movwf	dir_find@res& (0+255),b
  8173   00763A                     
  8174                           ; BSR set to: 1
  8175                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  8176   00763A  5132               	movf	dir_find@res& (0+255),w,b
  8177   00763C  B4D8               	btfsc	status,2,c
  8178   00763E  EF23  F03B         	goto	u19311
  8179   007642  EF25  F03B         	goto	u19310
  8180   007646                     u19311:
  8181   007646  EF27  F03B         	goto	l15987
  8182   00764A                     u19310:
  8183   00764A  EFFF  F03A         	goto	l15977
  8184   00764E                     l15987:
  8185                           
  8186                           ; BSR set to: 1
  8187                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  8188   00764E  EE20 F01A          	lfsr	2,26
  8189   007652  512D               	movf	dir_find@dp& (0+255),w,b
  8190   007654  26D9               	addwf	fsr2l,f,c
  8191   007656  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8192   007658  22DA               	addwfc	fsr2h,f,c
  8193   00765A  006F FF78  F0FE    	movff	postinc2,??_dir_find
  8194   007660  006F FF74  F0FF    	movff	postdec2,??_dir_find+1
  8195   007666  0060  F3FB  FFD9   	movff	??_dir_find,fsr2l
  8196   00766C  0060  F3FF  FFDA   	movff	??_dir_find+1,fsr2h
  8197   007672  50DF               	movf	indf2,w,c
  8198   007674  6F31               	movwf	dir_find@c& (0+255),b
  8199   007676                     
  8200                           ; BSR set to: 1
  8201                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  8202   007676  5131               	movf	dir_find@c& (0+255),w,b
  8203   007678  A4D8               	btfss	status,2,c
  8204   00767A  EF41  F03B         	goto	u19321
  8205   00767E  EF43  F03B         	goto	u19320
  8206   007682                     u19321:
  8207   007682  EF47  F03B         	goto	l15993
  8208   007686                     u19320:
  8209   007686                     
  8210                           ; BSR set to: 1
  8211   007686  0E04               	movlw	4
  8212   007688  6F32               	movwf	dir_find@res& (0+255),b
  8213   00768A  EFFF  F03A         	goto	l15977
  8214   00768E                     l15993:
  8215                           
  8216                           ; BSR set to: 1
  8217                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  8218   00768E  EE20 F004          	lfsr	2,4
  8219   007692  512D               	movf	dir_find@dp& (0+255),w,b
  8220   007694  26D9               	addwf	fsr2l,f,c
  8221   007696  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8222   007698  22DA               	addwfc	fsr2h,f,c
  8223   00769A  EE10 F01A          	lfsr	1,26
  8224   00769E  512D               	movf	dir_find@dp& (0+255),w,b
  8225   0076A0  26E1               	addwf	fsr1l,f,c
  8226   0076A2  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8227   0076A4  22E2               	addwfc	fsr1h,f,c
  8228   0076A6  EE00 F00B          	lfsr	0,11
  8229   0076AA  50E6               	movf	postinc1,w,c
  8230   0076AC  26E9               	addwf	fsr0l,f,c
  8231   0076AE  50E5               	movf	postdec1,w,c
  8232   0076B0  22EA               	addwfc	fsr0h,f,c
  8233   0076B2  50EF               	movf	indf0,w,c
  8234   0076B4  0B3F               	andlw	63
  8235   0076B6  6EDF               	movwf	indf2,c
  8236   0076B8                     
  8237                           ; BSR set to: 1
  8238                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  8239   0076B8  EE20 F01A          	lfsr	2,26
  8240   0076BC  512D               	movf	dir_find@dp& (0+255),w,b
  8241   0076BE  26D9               	addwf	fsr2l,f,c
  8242   0076C0  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8243   0076C2  22DA               	addwfc	fsr2h,f,c
  8244   0076C4  EE10 F00B          	lfsr	1,11
  8245   0076C8  50DE               	movf	postinc2,w,c
  8246   0076CA  26E1               	addwf	fsr1l,f,c
  8247   0076CC  50DD               	movf	postdec2,w,c
  8248   0076CE  22E2               	addwfc	fsr1h,f,c
  8249   0076D0  B6E7               	btfsc	indf1,3,c
  8250   0076D2  EF6D  F03B         	goto	u19331
  8251   0076D6  EF6F  F03B         	goto	u19330
  8252   0076DA                     u19331:
  8253   0076DA  EF96  F03B         	goto	l16001
  8254   0076DE                     u19330:
  8255   0076DE                     
  8256                           ; BSR set to: 1
  8257   0076DE  EE20 F01A          	lfsr	2,26
  8258   0076E2  512D               	movf	dir_find@dp& (0+255),w,b
  8259   0076E4  26D9               	addwf	fsr2l,f,c
  8260   0076E6  512E               	movf	(dir_find@dp+1)& (0+255),w,b
  8261   0076E8  22DA               	addwfc	fsr2h,f,c
  8262   0076EA  006F FF78  F060    	movff	postinc2,mem_cmp@dst
  8263   0076F0  006F FF74  F061    	movff	postdec2,mem_cmp@dst+1
  8264   0076F6  0E1C               	movlw	28
  8265   0076F8  252D               	addwf	dir_find@dp& (0+255),w,b
  8266   0076FA  0100               	movlb	0	; () banked
  8267   0076FC  6F62               	movwf	mem_cmp@src& (0+255),b
  8268   0076FE  0E00               	movlw	0
  8269   007700  0101               	movlb	1	; () banked
  8270   007702  212E               	addwfc	(dir_find@dp+1)& (0+255),w,b
  8271   007704  0100               	movlb	0	; () banked
  8272   007706  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
  8273   007708  0E00               	movlw	0
  8274   00770A  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
  8275   00770C  0E0B               	movlw	11
  8276   00770E  6F64               	movwf	mem_cmp@cnt& (0+255),b
  8277   007710  EC6D  F049         	call	_mem_cmp	;wreg free
  8278   007714  0100               	movlb	0	; () banked
  8279   007716  5160               	movf	?_mem_cmp& (0+255),w,b
  8280   007718  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
  8281   00771A  A4D8               	btfss	status,2,c
  8282   00771C  EF92  F03B         	goto	u19341
  8283   007720  EF94  F03B         	goto	u19340
  8284   007724                     u19341:
  8285   007724  EF96  F03B         	goto	l16001
  8286   007728                     u19340:
  8287   007728  EFFF  F03A         	goto	l15977
  8288   00772C                     l16001:
  8289                           
  8290                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  8291   00772C  C12D  F0FA         	movff	dir_find@dp,dir_next@dp
  8292   007730  C12E  F0FB         	movff	dir_find@dp+1,dir_next@dp+1
  8293   007734  0E00               	movlw	0
  8294   007736  0100               	movlb	0	; () banked
  8295   007738  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  8296   00773A  0E00               	movlw	0
  8297   00773C  6FFC               	movwf	dir_next@stretch& (0+255),b
  8298   00773E  EC5A  F021         	call	_dir_next	;wreg free
  8299   007742  0101               	movlb	1	; () banked
  8300   007744  6F32               	movwf	dir_find@res& (0+255),b
  8301   007746                     
  8302                           ; BSR set to: 1
  8303                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  8304   007746  5132               	movf	dir_find@res& (0+255),w,b
  8305   007748  B4D8               	btfsc	status,2,c
  8306   00774A  EFA9  F03B         	goto	u19351
  8307   00774E  EFAB  F03B         	goto	u19350
  8308   007752                     u19351:
  8309   007752  EF03  F03B         	goto	l15981
  8310   007756                     u19350:
  8311   007756  EFFF  F03A         	goto	l15977
  8312   00775A                     l1106:
  8313                           
  8314                           ; BSR set to: 1
  8315   00775A  0012               	return		;funcret
  8316   00775C                     __end_of_dir_find:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _create_name *****************
  8320 ;; Defined at:
  8321 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  dp              2    8[BANK0 ] PTR struct .
  8324 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  8325 ;;  path            2   10[BANK0 ] PTR PTR const unsigned c
  8326 ;;		 -> follow_path@path(2), 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  si              2   27[BANK0 ] unsigned int 
  8329 ;;  sfn             2   25[BANK0 ] PTR unsigned char 
  8330 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
  8331 ;;  i               2   23[BANK0 ] unsigned int 
  8332 ;;  p               2   21[BANK0 ] PTR const unsigned char 
  8333 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
  8334 ;;  ni              2   19[BANK0 ] unsigned int 
  8335 ;;  c               1   29[BANK0 ] unsigned char 
  8336 ;;  d               1   18[BANK0 ] unsigned char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      enum E68
  8339 ;; Registers used:
  8340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;Total ram usage:       22 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 6
  8353 ;; This function calls:
  8354 ;;		_chk_chr
  8355 ;;		_dbc_1st
  8356 ;;		_dbc_2nd
  8357 ;;		_mem_set
  8358 ;; This function is called by:
  8359 ;;		_follow_path
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text23
  8364   003E0A                     __ptext23:
  8365                           	callstack 0
  8366   003E0A                     _create_name:
  8367                           	callstack 21
  8368   003E0A                     
  8369                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  8370   003E0A  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8371   003E10  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8372   003E16  006F FF78  F075    	movff	postinc2,create_name@p
  8373   003E1C  006F FF74  F076    	movff	postdec2,create_name@p+1
  8374   003E22  0E1C               	movlw	28
  8375   003E24  0100               	movlb	0	; () banked
  8376   003E26  2568               	addwf	create_name@dp& (0+255),w,b
  8377   003E28  6F79               	movwf	create_name@sfn& (0+255),b
  8378   003E2A  0E00               	movlw	0
  8379   003E2C  2169               	addwfc	(create_name@dp+1)& (0+255),w,b
  8380   003E2E  6F7A               	movwf	(create_name@sfn+1)& (0+255),b
  8381   003E30                     
  8382                           ; BSR set to: 0
  8383                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  8384   003E30  C079  F060         	movff	create_name@sfn,mem_set@dst
  8385   003E34  C07A  F061         	movff	create_name@sfn+1,mem_set@dst+1
  8386   003E38  0E00               	movlw	0
  8387   003E3A  6F63               	movwf	(mem_set@val+1)& (0+255),b
  8388   003E3C  0E20               	movlw	32
  8389   003E3E  6F62               	movwf	mem_set@val& (0+255),b
  8390   003E40  0E00               	movlw	0
  8391   003E42  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  8392   003E44  0E0B               	movlw	11
  8393   003E46  6F64               	movwf	mem_set@cnt& (0+255),b
  8394   003E48  EC87  F050         	call	_mem_set	;wreg free
  8395   003E4C                     
  8396                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  8397   003E4C  0E00               	movlw	0
  8398   003E4E  0100               	movlb	0	; () banked
  8399   003E50  6F78               	movwf	(create_name@i+1)& (0+255),b
  8400   003E52  0E00               	movlw	0
  8401   003E54  6F77               	movwf	create_name@i& (0+255),b
  8402   003E56  C077  F07B         	movff	create_name@i,create_name@si
  8403   003E5A  C078  F07C         	movff	create_name@i+1,create_name@si+1
  8404   003E5E                     
  8405                           ; BSR set to: 0
  8406   003E5E  0E00               	movlw	0
  8407   003E60  6F74               	movwf	(create_name@ni+1)& (0+255),b
  8408   003E62  0E08               	movlw	8
  8409   003E64  6F73               	movwf	create_name@ni& (0+255),b
  8410   003E66                     
  8411                           ; BSR set to: 0
  8412                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  8413   003E66  517B               	movf	create_name@si& (0+255),w,b
  8414   003E68  2575               	addwf	create_name@p& (0+255),w,b
  8415   003E6A  6F6C               	movwf	??_create_name& (0+255),b
  8416   003E6C  517C               	movf	(create_name@si+1)& (0+255),w,b
  8417   003E6E  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8418   003E70  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8419   003E72  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8420   003E78  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8421   003E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8422   003E7E  6AF8               	clrf	tblptru,c
  8423   003E80                     	endif
  8424   003E80                     	if	0	;tblptru may be non-zero
  8425   003E80                     	endif
  8426   003E80  0008               	tblrd		*
  8427   003E82  50F5               	movf	tablat,w,c
  8428   003E84  0A2E               	xorlw	46
  8429   003E86  A4D8               	btfss	status,2,c
  8430   003E88  EF48  F01F         	goto	u19361
  8431   003E8C  EF4A  F01F         	goto	u19360
  8432   003E90                     u19361:
  8433   003E90  EFCD  F01F         	goto	l16057
  8434   003E94                     u19360:
  8435   003E94                     l16021:
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  8439   003E94  517B               	movf	create_name@si& (0+255),w,b
  8440   003E96  2575               	addwf	create_name@p& (0+255),w,b
  8441   003E98  6F6C               	movwf	??_create_name& (0+255),b
  8442   003E9A  517C               	movf	(create_name@si+1)& (0+255),w,b
  8443   003E9C  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8444   003E9E  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8445   003EA0  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8446   003EA6  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8447   003EAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8448   003EAC  6AF8               	clrf	tblptru,c
  8449   003EAE                     	endif
  8450   003EAE                     	if	0	;tblptru may be non-zero
  8451   003EAE                     	endif
  8452   003EAE  0008               	tblrd		*
  8453   003EB0  006F FFD4  F07D    	movff	tablat,create_name@c
  8454   003EB6                     
  8455                           ; BSR set to: 0
  8456   003EB6  4B7B               	infsnz	create_name@si& (0+255),f,b
  8457   003EB8  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8458   003EBA                     
  8459                           ; BSR set to: 0
  8460                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  8461   003EBA  0E2E               	movlw	46
  8462   003EBC  197D               	xorwf	create_name@c& (0+255),w,b
  8463   003EBE  A4D8               	btfss	status,2,c
  8464   003EC0  EF64  F01F         	goto	u19371
  8465   003EC4  EF66  F01F         	goto	u19370
  8466   003EC8                     u19371:
  8467   003EC8  EF80  F01F         	goto	l16033
  8468   003ECC                     u19370:
  8469   003ECC                     
  8470                           ; BSR set to: 0
  8471   003ECC  517C               	movf	(create_name@si+1)& (0+255),w,b
  8472   003ECE  E109               	bnz	u19380
  8473   003ED0  0E03               	movlw	3
  8474   003ED2  5D7B               	subwf	create_name@si& (0+255),w,b
  8475   003ED4  A0D8               	btfss	status,0,c
  8476   003ED6  EF6F  F01F         	goto	u19381
  8477   003EDA  EF71  F01F         	goto	u19380
  8478   003EDE                     u19381:
  8479   003EDE  EF73  F01F         	goto	l16029
  8480   003EE2                     u19380:
  8481   003EE2  EF80  F01F         	goto	l16033
  8482   003EE6                     l16029:
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  8486   003EE6  5177               	movf	create_name@i& (0+255),w,b
  8487   003EE8  2579               	addwf	create_name@sfn& (0+255),w,b
  8488   003EEA  6ED9               	movwf	fsr2l,c
  8489   003EEC  5178               	movf	(create_name@i+1)& (0+255),w,b
  8490   003EEE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8491   003EF0  6EDA               	movwf	fsr2h,c
  8492   003EF2  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8493   003EF8                     
  8494                           ; BSR set to: 0
  8495   003EF8  4B77               	infsnz	create_name@i& (0+255),f,b
  8496   003EFA  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8497                           
  8498                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  8499   003EFC  EF4A  F01F         	goto	l16021
  8500   003F00                     l16033:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  8504   003F00  0E2F               	movlw	47
  8505   003F02  197D               	xorwf	create_name@c& (0+255),w,b
  8506   003F04  B4D8               	btfsc	status,2,c
  8507   003F06  EF87  F01F         	goto	u19391
  8508   003F0A  EF89  F01F         	goto	u19390
  8509   003F0E                     u19391:
  8510   003F0E  EF9D  F01F         	goto	l16043
  8511   003F12                     u19390:
  8512   003F12                     
  8513                           ; BSR set to: 0
  8514   003F12  0E5C               	movlw	92
  8515   003F14  197D               	xorwf	create_name@c& (0+255),w,b
  8516   003F16  B4D8               	btfsc	status,2,c
  8517   003F18  EF90  F01F         	goto	u19401
  8518   003F1C  EF92  F01F         	goto	u19400
  8519   003F20                     u19401:
  8520   003F20  EF9D  F01F         	goto	l16043
  8521   003F24                     u19400:
  8522   003F24                     
  8523                           ; BSR set to: 0
  8524   003F24  0E20               	movlw	32
  8525   003F26  657D               	cpfsgt	create_name@c& (0+255),b
  8526   003F28  EF98  F01F         	goto	u19411
  8527   003F2C  EF9A  F01F         	goto	u19410
  8528   003F30                     u19411:
  8529   003F30  EF9D  F01F         	goto	l16043
  8530   003F34                     u19410:
  8531   003F34                     l16039:
  8532                           
  8533                           ; BSR set to: 0
  8534   003F34  0E06               	movlw	6
  8535   003F36  EF59  F021         	goto	l1126
  8536   003F3A                     l16043:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  8540   003F3A  517B               	movf	create_name@si& (0+255),w,b
  8541   003F3C  2575               	addwf	create_name@p& (0+255),w,b
  8542   003F3E  6F6C               	movwf	??_create_name& (0+255),b
  8543   003F40  517C               	movf	(create_name@si+1)& (0+255),w,b
  8544   003F42  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8545   003F44  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8546   003F46  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8547   003F4C  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8548   003F52  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  8549   003F58  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  8550   003F5E                     
  8551                           ; BSR set to: 0
  8552                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  8553   003F5E  0E20               	movlw	32
  8554   003F60  657D               	cpfsgt	create_name@c& (0+255),b
  8555   003F62  EFB5  F01F         	goto	u19421
  8556   003F66  EFB7  F01F         	goto	u19420
  8557   003F6A                     u19421:
  8558   003F6A  EFBD  F01F         	goto	l16049
  8559   003F6E                     u19420:
  8560   003F6E                     
  8561                           ; BSR set to: 0
  8562   003F6E  0E00               	movlw	0
  8563   003F70  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  8564   003F72  0E20               	movlw	32
  8565   003F74  6F6E               	movwf	_create_name$2961& (0+255),b
  8566   003F76  EFC1  F01F         	goto	l16051
  8567   003F7A                     l16049:
  8568                           
  8569                           ; BSR set to: 0
  8570   003F7A  0E00               	movlw	0
  8571   003F7C  6F6F               	movwf	(_create_name$2961+1)& (0+255),b
  8572   003F7E  0E24               	movlw	36
  8573   003F80  6F6E               	movwf	_create_name$2961& (0+255),b
  8574   003F82                     l16051:
  8575                           
  8576                           ; BSR set to: 0
  8577   003F82  EE20 F00B          	lfsr	2,11
  8578   003F86  5179               	movf	create_name@sfn& (0+255),w,b
  8579   003F88  26D9               	addwf	fsr2l,f,c
  8580   003F8A  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  8581   003F8C  22DA               	addwfc	fsr2h,f,c
  8582   003F8E  0060  F1BB  FFDF   	movff	_create_name$2961,indf2
  8583   003F94                     l16053:
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  8587   003F94  0E00               	movlw	0
  8588   003F96  EF59  F021         	goto	l1126
  8589   003F9A                     l16057:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  8593   003F9A  517B               	movf	create_name@si& (0+255),w,b
  8594   003F9C  2575               	addwf	create_name@p& (0+255),w,b
  8595   003F9E  6F6C               	movwf	??_create_name& (0+255),b
  8596   003FA0  517C               	movf	(create_name@si+1)& (0+255),w,b
  8597   003FA2  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8598   003FA4  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8599   003FA6  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8600   003FAC  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8601   003FB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8602   003FB2  6AF8               	clrf	tblptru,c
  8603   003FB4                     	endif
  8604   003FB4                     	if	0	;tblptru may be non-zero
  8605   003FB4                     	endif
  8606   003FB4  0008               	tblrd		*
  8607   003FB6  006F FFD4  F07D    	movff	tablat,create_name@c
  8608   003FBC                     
  8609                           ; BSR set to: 0
  8610   003FBC  4B7B               	infsnz	create_name@si& (0+255),f,b
  8611   003FBE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8612   003FC0                     
  8613                           ; BSR set to: 0
  8614                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  8615   003FC0  0E21               	movlw	33
  8616   003FC2  617D               	cpfslt	create_name@c& (0+255),b
  8617   003FC4  EFE6  F01F         	goto	u19431
  8618   003FC8  EFE8  F01F         	goto	u19430
  8619   003FCC                     u19431:
  8620   003FCC  EFEA  F01F         	goto	l16065
  8621   003FD0                     u19430:
  8622   003FD0  EF08  F021         	goto	l16129
  8623   003FD4                     l16065:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  8627   003FD4  0E2F               	movlw	47
  8628   003FD6  197D               	xorwf	create_name@c& (0+255),w,b
  8629   003FD8  B4D8               	btfsc	status,2,c
  8630   003FDA  EFF1  F01F         	goto	u19441
  8631   003FDE  EFF3  F01F         	goto	u19440
  8632   003FE2                     u19441:
  8633   003FE2  EF00  F020         	goto	l16071
  8634   003FE6                     u19440:
  8635   003FE6                     
  8636                           ; BSR set to: 0
  8637   003FE6  0E5C               	movlw	92
  8638   003FE8  197D               	xorwf	create_name@c& (0+255),w,b
  8639   003FEA  A4D8               	btfss	status,2,c
  8640   003FEC  EFFA  F01F         	goto	u19451
  8641   003FF0  EFFC  F01F         	goto	u19450
  8642   003FF4                     u19451:
  8643   003FF4  EF30  F020         	goto	l16075
  8644   003FF8                     u19450:
  8645   003FF8  EF00  F020         	goto	l16071
  8646   003FFC                     l16069:
  8647                           
  8648                           ; BSR set to: 0
  8649   003FFC  4B7B               	infsnz	create_name@si& (0+255),f,b
  8650   003FFE  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8651   004000                     l16071:
  8652                           
  8653                           ; BSR set to: 0
  8654   004000  517B               	movf	create_name@si& (0+255),w,b
  8655   004002  2575               	addwf	create_name@p& (0+255),w,b
  8656   004004  6F6C               	movwf	??_create_name& (0+255),b
  8657   004006  517C               	movf	(create_name@si+1)& (0+255),w,b
  8658   004008  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8659   00400A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8660   00400C  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8661   004012  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8662   004018                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8663   004018  6AF8               	clrf	tblptru,c
  8664   00401A                     	endif
  8665   00401A                     	if	0	;tblptru may be non-zero
  8666   00401A                     	endif
  8667   00401A  0008               	tblrd		*
  8668   00401C  50F5               	movf	tablat,w,c
  8669   00401E  0A2F               	xorlw	47
  8670   004020  B4D8               	btfsc	status,2,c
  8671   004022  EF15  F020         	goto	u19461
  8672   004026  EF17  F020         	goto	u19460
  8673   00402A                     u19461:
  8674   00402A  EFFE  F01F         	goto	l16069
  8675   00402E                     u19460:
  8676   00402E                     
  8677                           ; BSR set to: 0
  8678   00402E  517B               	movf	create_name@si& (0+255),w,b
  8679   004030  2575               	addwf	create_name@p& (0+255),w,b
  8680   004032  6F6C               	movwf	??_create_name& (0+255),b
  8681   004034  517C               	movf	(create_name@si+1)& (0+255),w,b
  8682   004036  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8683   004038  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8684   00403A  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8685   004040  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8686   004046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8687   004046  6AF8               	clrf	tblptru,c
  8688   004048                     	endif
  8689   004048                     	if	0	;tblptru may be non-zero
  8690   004048                     	endif
  8691   004048  0008               	tblrd		*
  8692   00404A  50F5               	movf	tablat,w,c
  8693   00404C  0A5C               	xorlw	92
  8694   00404E  B4D8               	btfsc	status,2,c
  8695   004050  EF2C  F020         	goto	u19471
  8696   004054  EF2E  F020         	goto	u19470
  8697   004058                     u19471:
  8698   004058  EFFE  F01F         	goto	l16069
  8699   00405C                     u19470:
  8700   00405C  EF08  F021         	goto	l16129
  8701   004060                     l16075:
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  8705   004060  0E2E               	movlw	46
  8706   004062  197D               	xorwf	create_name@c& (0+255),w,b
  8707   004064  B4D8               	btfsc	status,2,c
  8708   004066  EF37  F020         	goto	u19481
  8709   00406A  EF39  F020         	goto	u19480
  8710   00406E                     u19481:
  8711   00406E  EF44  F020         	goto	l16079
  8712   004072                     u19480:
  8713   004072                     
  8714                           ; BSR set to: 0
  8715   004072  5173               	movf	create_name@ni& (0+255),w,b
  8716   004074  5D77               	subwf	create_name@i& (0+255),w,b
  8717   004076  5174               	movf	(create_name@ni+1)& (0+255),w,b
  8718   004078  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  8719   00407A  A0D8               	btfss	status,0,c
  8720   00407C  EF42  F020         	goto	u19491
  8721   004080  EF44  F020         	goto	u19490
  8722   004084                     u19491:
  8723   004084  EF63  F020         	goto	l16089
  8724   004088                     u19490:
  8725   004088                     l16079:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  8729   004088  0E0B               	movlw	11
  8730   00408A  1973               	xorwf	create_name@ni& (0+255),w,b
  8731   00408C  1174               	iorwf	(create_name@ni+1)& (0+255),w,b
  8732   00408E  B4D8               	btfsc	status,2,c
  8733   004090  EF4C  F020         	goto	u19501
  8734   004094  EF4E  F020         	goto	u19500
  8735   004098                     u19501:
  8736   004098  EF9A  F01F         	goto	l16039
  8737   00409C                     u19500:
  8738   00409C                     
  8739                           ; BSR set to: 0
  8740   00409C  0E2E               	movlw	46
  8741   00409E  197D               	xorwf	create_name@c& (0+255),w,b
  8742   0040A0  B4D8               	btfsc	status,2,c
  8743   0040A2  EF55  F020         	goto	u19511
  8744   0040A6  EF57  F020         	goto	u19510
  8745   0040AA                     u19511:
  8746   0040AA  EF59  F020         	goto	l16087
  8747   0040AE                     u19510:
  8748   0040AE  EF9A  F01F         	goto	l16039
  8749   0040B2                     l16087:
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  8753   0040B2  0E00               	movlw	0
  8754   0040B4  6F78               	movwf	(create_name@i+1)& (0+255),b
  8755   0040B6  0E08               	movlw	8
  8756   0040B8  6F77               	movwf	create_name@i& (0+255),b
  8757   0040BA  0E00               	movlw	0
  8758   0040BC  6F74               	movwf	(create_name@ni+1)& (0+255),b
  8759   0040BE  0E0B               	movlw	11
  8760   0040C0  6F73               	movwf	create_name@ni& (0+255),b
  8761                           
  8762                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  8763   0040C2  EFCD  F01F         	goto	l16057
  8764   0040C6                     l16089:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  8768   0040C6  0E7F               	movlw	127
  8769   0040C8  657D               	cpfsgt	create_name@c& (0+255),b
  8770   0040CA  EF69  F020         	goto	u19521
  8771   0040CE  EF6B  F020         	goto	u19520
  8772   0040D2                     u19521:
  8773   0040D2  EF7C  F020         	goto	l16093
  8774   0040D6                     u19520:
  8775   0040D6                     
  8776                           ; BSR set to: 0
  8777                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  8778   0040D6  517D               	movf	create_name@c& (0+255),w,b
  8779   0040D8  0B7F               	andlw	127
  8780   0040DA  6F6C               	movwf	??_create_name& (0+255),b
  8781   0040DC  6B6D               	clrf	(??_create_name+1)& (0+255),b
  8782   0040DE  0EC3               	movlw	low _ExCvt
  8783   0040E0  256C               	addwf	??_create_name& (0+255),w,b
  8784   0040E2  6EF6               	movwf	tblptrl,c
  8785   0040E4  0EFE               	movlw	high _ExCvt
  8786   0040E6  216D               	addwfc	(??_create_name+1)& (0+255),w,b
  8787   0040E8  6EF7               	movwf	tblptrh,c
  8788   0040EA                     	if	1	;There are 3 active tblptr bytes
  8789   0040EA  6AF8               	clrf	tblptru,c
  8790   0040EC  0E00               	movlw	low (__mediumconst shr (0+16))
  8791   0040EE  22F8               	addwfc	tblptru,f,c
  8792   0040F0                     	endif
  8793   0040F0  0008               	tblrd		*
  8794   0040F2  006F FFD4  F07D    	movff	tablat,create_name@c
  8795   0040F8                     l16093:
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  8799   0040F8  517D               	movf	create_name@c& (0+255),w,b
  8800   0040FA  EC60  F052         	call	_dbc_1st
  8801   0040FE  0100               	movlb	0	; () banked
  8802   004100  5160               	movf	?_dbc_1st& (0+255),w,b
  8803   004102  1161               	iorwf	(?_dbc_1st+1)& (0+255),w,b
  8804   004104  B4D8               	btfsc	status,2,c
  8805   004106  EF87  F020         	goto	u19531
  8806   00410A  EF89  F020         	goto	u19530
  8807   00410E                     u19531:
  8808   00410E  EFD4  F020         	goto	l16113
  8809   004112                     u19530:
  8810   004112                     
  8811                           ; BSR set to: 0
  8812                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  8813   004112  517B               	movf	create_name@si& (0+255),w,b
  8814   004114  2575               	addwf	create_name@p& (0+255),w,b
  8815   004116  6F6C               	movwf	??_create_name& (0+255),b
  8816   004118  517C               	movf	(create_name@si+1)& (0+255),w,b
  8817   00411A  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8818   00411C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8819   00411E  0060  F1B3  FFF6   	movff	??_create_name,tblptrl
  8820   004124  0060  F1B7  FFF7   	movff	??_create_name+1,tblptrh
  8821   00412A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8822   00412A  6AF8               	clrf	tblptru,c
  8823   00412C                     	endif
  8824   00412C                     	if	0	;tblptru may be non-zero
  8825   00412C                     	endif
  8826   00412C  0008               	tblrd		*
  8827   00412E  006F FFD4  F072    	movff	tablat,create_name@d
  8828   004134                     
  8829                           ; BSR set to: 0
  8830   004134  4B7B               	infsnz	create_name@si& (0+255),f,b
  8831   004136  2B7C               	incf	(create_name@si+1)& (0+255),f,b
  8832   004138                     
  8833                           ; BSR set to: 0
  8834                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  8835   004138  5172               	movf	create_name@d& (0+255),w,b
  8836   00413A  EC5A  F052         	call	_dbc_2nd
  8837   00413E  0100               	movlb	0	; () banked
  8838   004140  5160               	movf	?_dbc_2nd& (0+255),w,b
  8839   004142  1161               	iorwf	(?_dbc_2nd+1)& (0+255),w,b
  8840   004144  B4D8               	btfsc	status,2,c
  8841   004146  EFA7  F020         	goto	u19541
  8842   00414A  EFA9  F020         	goto	u19540
  8843   00414E                     u19541:
  8844   00414E  EF9A  F01F         	goto	l16039
  8845   004152                     u19540:
  8846   004152                     
  8847                           ; BSR set to: 0
  8848   004152  0EFF               	movlw	255
  8849   004154  2573               	addwf	create_name@ni& (0+255),w,b
  8850   004156  6F6C               	movwf	??_create_name& (0+255),b
  8851   004158  0EFF               	movlw	255
  8852   00415A  2174               	addwfc	(create_name@ni+1)& (0+255),w,b
  8853   00415C  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8854   00415E  516C               	movf	??_create_name& (0+255),w,b
  8855   004160  5D77               	subwf	create_name@i& (0+255),w,b
  8856   004162  516D               	movf	(??_create_name+1)& (0+255),w,b
  8857   004164  5978               	subwfb	(create_name@i+1)& (0+255),w,b
  8858   004166  A0D8               	btfss	status,0,c
  8859   004168  EFB8  F020         	goto	u19551
  8860   00416C  EFBA  F020         	goto	u19550
  8861   004170                     u19551:
  8862   004170  EFBC  F020         	goto	l16107
  8863   004174                     u19550:
  8864   004174  EF9A  F01F         	goto	l16039
  8865   004178                     l16107:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  8869   004178  5177               	movf	create_name@i& (0+255),w,b
  8870   00417A  2579               	addwf	create_name@sfn& (0+255),w,b
  8871   00417C  6ED9               	movwf	fsr2l,c
  8872   00417E  5178               	movf	(create_name@i+1)& (0+255),w,b
  8873   004180  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8874   004182  6EDA               	movwf	fsr2h,c
  8875   004184  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8876   00418A                     
  8877                           ; BSR set to: 0
  8878   00418A  4B77               	infsnz	create_name@i& (0+255),f,b
  8879   00418C  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8880   00418E                     
  8881                           ; BSR set to: 0
  8882                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  8883   00418E  5177               	movf	create_name@i& (0+255),w,b
  8884   004190  2579               	addwf	create_name@sfn& (0+255),w,b
  8885   004192  6ED9               	movwf	fsr2l,c
  8886   004194  5178               	movf	(create_name@i+1)& (0+255),w,b
  8887   004196  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8888   004198  6EDA               	movwf	fsr2h,c
  8889   00419A  0060  F1CB  FFDF   	movff	create_name@d,indf2
  8890   0041A0  4B77               	infsnz	create_name@i& (0+255),f,b
  8891   0041A2  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8892                           
  8893                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  8894   0041A4  EFCD  F01F         	goto	l16057
  8895   0041A8                     l16113:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  8899   0041A8  0ECA               	movlw	low STR_1
  8900   0041AA  6F60               	movwf	chk_chr@str& (0+255),b
  8901   0041AC  0EFF               	movlw	high STR_1
  8902   0041AE  6F61               	movwf	(chk_chr@str+1)& (0+255),b
  8903   0041B0  C07D  F062         	movff	create_name@c,chk_chr@chr
  8904   0041B4  6B63               	clrf	(chk_chr@chr+1)& (0+255),b
  8905   0041B6  EC06  F04C         	call	_chk_chr	;wreg free
  8906   0041BA  0100               	movlb	0	; () banked
  8907   0041BC  5160               	movf	?_chk_chr& (0+255),w,b
  8908   0041BE  1161               	iorwf	(?_chk_chr+1)& (0+255),w,b
  8909   0041C0  B4D8               	btfsc	status,2,c
  8910   0041C2  EFE5  F020         	goto	u19561
  8911   0041C6  EFE7  F020         	goto	u19560
  8912   0041CA                     u19561:
  8913   0041CA  EFE9  F020         	goto	l16119
  8914   0041CE                     u19560:
  8915   0041CE  EF9A  F01F         	goto	l16039
  8916   0041D2                     l16119:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  8920   0041D2  0E60               	movlw	96
  8921   0041D4  657D               	cpfsgt	create_name@c& (0+255),b
  8922   0041D6  EFEF  F020         	goto	u19571
  8923   0041DA  EFF1  F020         	goto	u19570
  8924   0041DE                     u19571:
  8925   0041DE  EFFB  F020         	goto	l16125
  8926   0041E2                     u19570:
  8927   0041E2                     
  8928                           ; BSR set to: 0
  8929   0041E2  0E7B               	movlw	123
  8930   0041E4  617D               	cpfslt	create_name@c& (0+255),b
  8931   0041E6  EFF7  F020         	goto	u19581
  8932   0041EA  EFF9  F020         	goto	u19580
  8933   0041EE                     u19581:
  8934   0041EE  EFFB  F020         	goto	l16125
  8935   0041F2                     u19580:
  8936   0041F2                     
  8937                           ; BSR set to: 0
  8938   0041F2  0E20               	movlw	32
  8939   0041F4  5F7D               	subwf	create_name@c& (0+255),f,b
  8940   0041F6                     l16125:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  8944   0041F6  5177               	movf	create_name@i& (0+255),w,b
  8945   0041F8  2579               	addwf	create_name@sfn& (0+255),w,b
  8946   0041FA  6ED9               	movwf	fsr2l,c
  8947   0041FC  5178               	movf	(create_name@i+1)& (0+255),w,b
  8948   0041FE  217A               	addwfc	(create_name@sfn+1)& (0+255),w,b
  8949   004200  6EDA               	movwf	fsr2h,c
  8950   004202  0060  F1F7  FFDF   	movff	create_name@c,indf2
  8951   004208                     
  8952                           ; BSR set to: 0
  8953   004208  4B77               	infsnz	create_name@i& (0+255),f,b
  8954   00420A  2B78               	incf	(create_name@i+1)& (0+255),f,b
  8955   00420C  EFCD  F01F         	goto	l16057
  8956   004210                     l16129:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  8960   004210  517B               	movf	create_name@si& (0+255),w,b
  8961   004212  2575               	addwf	create_name@p& (0+255),w,b
  8962   004214  6F6C               	movwf	??_create_name& (0+255),b
  8963   004216  517C               	movf	(create_name@si+1)& (0+255),w,b
  8964   004218  2176               	addwfc	(create_name@p+1)& (0+255),w,b
  8965   00421A  6F6D               	movwf	(??_create_name+1)& (0+255),b
  8966   00421C  0060  F1AB  FFD9   	movff	create_name@path,fsr2l
  8967   004222  0060  F1AF  FFDA   	movff	create_name@path+1,fsr2h
  8968   004228  0060  F1B3  FFDE   	movff	??_create_name,postinc2
  8969   00422E  0060  F1B7  FFDD   	movff	??_create_name+1,postdec2
  8970   004234                     
  8971                           ; BSR set to: 0
  8972                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  8973   004234  5177               	movf	create_name@i& (0+255),w,b
  8974   004236  1178               	iorwf	(create_name@i+1)& (0+255),w,b
  8975   004238  A4D8               	btfss	status,2,c
  8976   00423A  EF21  F021         	goto	u19591
  8977   00423E  EF23  F021         	goto	u19590
  8978   004242                     u19591:
  8979   004242  EF25  F021         	goto	l16137
  8980   004246                     u19590:
  8981   004246  EF9A  F01F         	goto	l16039
  8982   00424A                     l16137:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  8986   00424A  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8987   004250  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  8988   004256  0EE5               	movlw	229
  8989   004258  18DE               	xorwf	postinc2,w,c
  8990   00425A  A4D8               	btfss	status,2,c
  8991   00425C  EF32  F021         	goto	u19601
  8992   004260  EF34  F021         	goto	u19600
  8993   004264                     u19601:
  8994   004264  EF3C  F021         	goto	l16141
  8995   004268                     u19600:
  8996   004268                     
  8997                           ; BSR set to: 0
  8998   004268  0060  F1E7  FFD9   	movff	create_name@sfn,fsr2l
  8999   00426E  0060  F1EB  FFDA   	movff	create_name@sfn+1,fsr2h
  9000   004274  0E05               	movlw	5
  9001   004276  6EDF               	movwf	indf2,c
  9002   004278                     l16141:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  9006   004278  0E20               	movlw	32
  9007   00427A  657D               	cpfsgt	create_name@c& (0+255),b
  9008   00427C  EF42  F021         	goto	u19611
  9009   004280  EF44  F021         	goto	u19610
  9010   004284                     u19611:
  9011   004284  EF4A  F021         	goto	l16145
  9012   004288                     u19610:
  9013   004288                     
  9014                           ; BSR set to: 0
  9015   004288  0E00               	movlw	0
  9016   00428A  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  9017   00428C  0E00               	movlw	0
  9018   00428E  6F70               	movwf	_create_name$2966& (0+255),b
  9019   004290  EF4E  F021         	goto	l16147
  9020   004294                     l16145:
  9021                           
  9022                           ; BSR set to: 0
  9023   004294  0E00               	movlw	0
  9024   004296  6F71               	movwf	(_create_name$2966+1)& (0+255),b
  9025   004298  0E04               	movlw	4
  9026   00429A  6F70               	movwf	_create_name$2966& (0+255),b
  9027   00429C                     l16147:
  9028                           
  9029                           ; BSR set to: 0
  9030   00429C  EE20 F00B          	lfsr	2,11
  9031   0042A0  5179               	movf	create_name@sfn& (0+255),w,b
  9032   0042A2  26D9               	addwf	fsr2l,f,c
  9033   0042A4  517A               	movf	(create_name@sfn+1)& (0+255),w,b
  9034   0042A6  22DA               	addwfc	fsr2h,f,c
  9035   0042A8  0060  F1C3  FFDF   	movff	_create_name$2966,indf2
  9036   0042AE  EFCA  F01F         	goto	l16053
  9037   0042B2                     l1126:
  9038                           
  9039                           ; BSR set to: 0
  9040   0042B2  0012               	return		;funcret
  9041   0042B4                     __end_of_create_name:
  9042                           	callstack 0
  9043                           
  9044 ;; *************** function _dbc_2nd *****************
  9045 ;; Defined at:
  9046 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  c               1    wreg     unsigned char 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  c               1    2[BANK0 ] unsigned char 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  2    0[BANK0 ] int 
  9053 ;; Registers used:
  9054 ;;		wreg, status,2
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;Total ram usage:        3 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; Hardware stack levels required when called: 5
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_create_name
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text24
  9075   00A4B4                     __ptext24:
  9076                           	callstack 0
  9077   00A4B4                     _dbc_2nd:
  9078                           	callstack 21
  9079   00A4B4  0E00               	movlw	0
  9080   00A4B6  0100               	movlb	0	; () banked
  9081   00A4B8  6F61               	movwf	(?_dbc_2nd+1)& (0+255),b
  9082   00A4BA  0E00               	movlw	0
  9083   00A4BC  6F60               	movwf	?_dbc_2nd& (0+255),b
  9084   00A4BE                     
  9085                           ; BSR set to: 0
  9086   00A4BE  0012               	return		;funcret
  9087   00A4C0                     __end_of_dbc_2nd:
  9088                           	callstack 0
  9089                           
  9090 ;; *************** function _dbc_1st *****************
  9091 ;; Defined at:
  9092 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  c               1    wreg     unsigned char 
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;  c               1    2[BANK0 ] unsigned char 
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  2    0[BANK0 ] int 
  9099 ;; Registers used:
  9100 ;;		wreg, status,2
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9109 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9110 ;;Total ram usage:        3 bytes
  9111 ;; Hardware stack levels used: 1
  9112 ;; Hardware stack levels required when called: 5
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_create_name
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text25
  9121   00A4C0                     __ptext25:
  9122                           	callstack 0
  9123   00A4C0                     _dbc_1st:
  9124                           	callstack 21
  9125   00A4C0  0E00               	movlw	0
  9126   00A4C2  0100               	movlb	0	; () banked
  9127   00A4C4  6F61               	movwf	(?_dbc_1st+1)& (0+255),b
  9128   00A4C6  0E00               	movlw	0
  9129   00A4C8  6F60               	movwf	?_dbc_1st& (0+255),b
  9130   00A4CA                     
  9131                           ; BSR set to: 0
  9132   00A4CA  0012               	return		;funcret
  9133   00A4CC                     __end_of_dbc_1st:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function _chk_chr *****************
  9137 ;; Defined at:
  9138 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  9141 ;;		 -> STR_2(15), 
  9142 ;;  chr             2    2[BANK0 ] int 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  2    0[BANK0 ] int 
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;Total ram usage:        6 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 5
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_create_name
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text26
  9169   00980C                     __ptext26:
  9170                           	callstack 0
  9171   00980C                     _chk_chr:
  9172                           	callstack 21
  9173   00980C                     
  9174                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  9175   00980C  EF0A  F04C         	goto	l15593
  9176   009810                     l15591:
  9177                           
  9178                           ; BSR set to: 0
  9179   009810  4B60               	infsnz	chk_chr@str& (0+255),f,b
  9180   009812  2B61               	incf	(chk_chr@str+1)& (0+255),f,b
  9181   009814                     l15593:
  9182   009814  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9183   00981A  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9184   009820                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9185   009820  6AF8               	clrf	tblptru,c
  9186   009822                     	endif
  9187   009822                     	if	0	;tblptru may be non-zero
  9188   009822                     	endif
  9189   009822  0008               	tblrd		*
  9190   009824  50F5               	movf	tablat,w,c
  9191   009826  0900               	iorlw	0
  9192   009828  B4D8               	btfsc	status,2,c
  9193   00982A  EF19  F04C         	goto	u18671
  9194   00982E  EF1B  F04C         	goto	u18670
  9195   009832                     u18671:
  9196   009832  EF33  F04C         	goto	l15597
  9197   009836                     u18670:
  9198   009836  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9199   00983C  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9200   009842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9201   009842  6AF8               	clrf	tblptru,c
  9202   009844                     	endif
  9203   009844                     	if	0	;tblptru may be non-zero
  9204   009844                     	endif
  9205   009844  0008               	tblrd		*
  9206   009846  50F5               	movf	tablat,w,c
  9207   009848  0100               	movlb	0	; () banked
  9208   00984A  6F64               	movwf	??_chk_chr& (0+255),b
  9209   00984C  6B65               	clrf	(??_chk_chr+1)& (0+255),b
  9210   00984E  5162               	movf	chk_chr@chr& (0+255),w,b
  9211   009850  1964               	xorwf	??_chk_chr& (0+255),w,b
  9212   009852  E107               	bnz	u18681
  9213   009854  5163               	movf	(chk_chr@chr+1)& (0+255),w,b
  9214   009856  1965               	xorwf	(??_chk_chr+1)& (0+255),w,b
  9215   009858  A4D8               	btfss	status,2,c
  9216   00985A  EF31  F04C         	goto	u18681
  9217   00985E  EF33  F04C         	goto	u18680
  9218   009862                     u18681:
  9219   009862  EF08  F04C         	goto	l15591
  9220   009866                     u18680:
  9221   009866                     l15597:
  9222                           
  9223                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  9224   009866  0060  F183  FFF6   	movff	chk_chr@str,tblptrl
  9225   00986C  0060  F187  FFF7   	movff	chk_chr@str+1,tblptrh
  9226   009872                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9227   009872  6AF8               	clrf	tblptru,c
  9228   009874                     	endif
  9229   009874                     	if	0	;tblptru may be non-zero
  9230   009874                     	endif
  9231   009874  0008               	tblrd		*
  9232   009876  50F5               	movf	tablat,w,c
  9233   009878  0100               	movlb	0	; () banked
  9234   00987A  6F60               	movwf	?_chk_chr& (0+255),b
  9235   00987C  6B61               	clrf	(?_chk_chr+1)& (0+255),b
  9236   00987E                     
  9237                           ; BSR set to: 0
  9238   00987E  0012               	return		;funcret
  9239   009880                     __end_of_chk_chr:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _dir_register *****************
  9243 ;; Defined at:
  9244 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  dp              2   57[BANK1 ] PTR struct .
  9247 ;;		 -> f_open@dj(40), 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  fs              2   59[BANK1 ] PTR struct .
  9250 ;;		 -> FatFs(563), NULL(0), 
  9251 ;;  res             1   61[BANK1 ] enum E68
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      enum E68
  9254 ;; Registers used:
  9255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9261 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;Total ram usage:        5 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 16
  9268 ;; This function calls:
  9269 ;;		_dir_alloc
  9270 ;;		_mem_cpy
  9271 ;;		_mem_set
  9272 ;;		_move_window
  9273 ;; This function is called by:
  9274 ;;		_f_open
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text27
  9279   008746                     __ptext27:
  9280                           	callstack 0
  9281   008746                     _dir_register:
  9282                           	callstack 12
  9283   008746                     
  9284                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  9285   008746  0060  F4E7  FFD9   	movff	dir_register@dp,fsr2l
  9286   00874C  0060  F4EB  FFDA   	movff	dir_register@dp+1,fsr2h
  9287   008752  006F FF78  F13B    	movff	postinc2,dir_register@fs
  9288   008758  006F FF74  F13C    	movff	postdec2,dir_register@fs+1
  9289   00875E                     
  9290                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  9291   00875E  C139  F12D         	movff	dir_register@dp,dir_alloc@dp
  9292   008762  C13A  F12E         	movff	dir_register@dp+1,dir_alloc@dp+1
  9293   008766  0E00               	movlw	0
  9294   008768  0101               	movlb	1	; () banked
  9295   00876A  6F30               	movwf	(dir_alloc@nent+1)& (0+255),b
  9296   00876C  0E01               	movlw	1
  9297   00876E  6F2F               	movwf	dir_alloc@nent& (0+255),b
  9298   008770  EC24  F03D         	call	_dir_alloc	;wreg free
  9299   008774  0101               	movlb	1	; () banked
  9300   008776  6F3D               	movwf	dir_register@res& (0+255),b
  9301   008778                     
  9302                           ; BSR set to: 1
  9303                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  9304   008778  513D               	movf	dir_register@res& (0+255),w,b
  9305   00877A  A4D8               	btfss	status,2,c
  9306   00877C  EFC2  F043         	goto	u20011
  9307   008780  EFC4  F043         	goto	u20010
  9308   008784                     u20011:
  9309   008784  EF22  F044         	goto	l16431
  9310   008788                     u20010:
  9311   008788                     
  9312                           ; BSR set to: 1
  9313                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  9314   008788  C13B  F0C8         	movff	dir_register@fs,move_window@fs
  9315   00878C  C13C  F0C9         	movff	dir_register@fs+1,move_window@fs+1
  9316   008790  EE20 F016          	lfsr	2,22
  9317   008794  5139               	movf	dir_register@dp& (0+255),w,b
  9318   008796  26D9               	addwf	fsr2l,f,c
  9319   008798  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9320   00879A  22DA               	addwfc	fsr2h,f,c
  9321   00879C  006F FF78  F0CA    	movff	postinc2,move_window@sector
  9322   0087A2  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  9323   0087A8  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  9324   0087AE  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  9325   0087B4  ECDA  F046         	call	_move_window	;wreg free
  9326   0087B8  0101               	movlb	1	; () banked
  9327   0087BA  6F3D               	movwf	dir_register@res& (0+255),b
  9328   0087BC                     
  9329                           ; BSR set to: 1
  9330                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  9331   0087BC  513D               	movf	dir_register@res& (0+255),w,b
  9332   0087BE  A4D8               	btfss	status,2,c
  9333   0087C0  EFE4  F043         	goto	u20021
  9334   0087C4  EFE6  F043         	goto	u20020
  9335   0087C8                     u20021:
  9336   0087C8  EF22  F044         	goto	l16431
  9337   0087CC                     u20020:
  9338   0087CC                     
  9339                           ; BSR set to: 1
  9340                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  9341   0087CC  EE20 F01A          	lfsr	2,26
  9342   0087D0  5139               	movf	dir_register@dp& (0+255),w,b
  9343   0087D2  26D9               	addwf	fsr2l,f,c
  9344   0087D4  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9345   0087D6  22DA               	addwfc	fsr2h,f,c
  9346   0087D8  006F FF78  F060    	movff	postinc2,mem_set@dst
  9347   0087DE  006F FF74  F061    	movff	postdec2,mem_set@dst+1
  9348   0087E4  0E00               	movlw	0
  9349   0087E6  0100               	movlb	0	; () banked
  9350   0087E8  6F63               	movwf	(mem_set@val+1)& (0+255),b
  9351   0087EA  0E00               	movlw	0
  9352   0087EC  6F62               	movwf	mem_set@val& (0+255),b
  9353   0087EE  0E00               	movlw	0
  9354   0087F0  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
  9355   0087F2  0E20               	movlw	32
  9356   0087F4  6F64               	movwf	mem_set@cnt& (0+255),b
  9357   0087F6  EC87  F050         	call	_mem_set	;wreg free
  9358   0087FA                     
  9359                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  9360   0087FA  0101               	movlb	1	; () banked
  9361   0087FC  EE20 F01A          	lfsr	2,26
  9362   008800  5139               	movf	dir_register@dp& (0+255),w,b
  9363   008802  26D9               	addwf	fsr2l,f,c
  9364   008804  513A               	movf	(dir_register@dp+1)& (0+255),w,b
  9365   008806  22DA               	addwfc	fsr2h,f,c
  9366   008808  006F FF78  F060    	movff	postinc2,mem_cpy@dst
  9367   00880E  006F FF74  F061    	movff	postdec2,mem_cpy@dst+1
  9368   008814  0E1C               	movlw	28
  9369   008816  2539               	addwf	dir_register@dp& (0+255),w,b
  9370   008818  0100               	movlb	0	; () banked
  9371   00881A  6F62               	movwf	mem_cpy@src& (0+255),b
  9372   00881C  0E00               	movlw	0
  9373   00881E  0101               	movlb	1	; () banked
  9374   008820  213A               	addwfc	(dir_register@dp+1)& (0+255),w,b
  9375   008822  0100               	movlb	0	; () banked
  9376   008824  6F63               	movwf	(mem_cpy@src+1)& (0+255),b
  9377   008826  0E00               	movlw	0
  9378   008828  6F65               	movwf	(mem_cpy@cnt+1)& (0+255),b
  9379   00882A  0E0B               	movlw	11
  9380   00882C  6F64               	movwf	mem_cpy@cnt& (0+255),b
  9381   00882E  EC4D  F04B         	call	_mem_cpy	;wreg free
  9382   008832                     
  9383                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  9384   008832  0101               	movlb	1	; () banked
  9385   008834  EE20 F003          	lfsr	2,3
  9386   008838  513B               	movf	dir_register@fs& (0+255),w,b
  9387   00883A  26D9               	addwf	fsr2l,f,c
  9388   00883C  513C               	movf	(dir_register@fs+1)& (0+255),w,b
  9389   00883E  22DA               	addwfc	fsr2h,f,c
  9390   008840  0E01               	movlw	1
  9391   008842  6EDF               	movwf	indf2,c
  9392   008844                     l16431:
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  9396   008844  513D               	movf	dir_register@res& (0+255),w,b
  9397   008846                     
  9398                           ; BSR set to: 1
  9399   008846  0012               	return		;funcret
  9400   008848                     __end_of_dir_register:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _mem_cpy *****************
  9404 ;; Defined at:
  9405 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  dst             2    0[BANK0 ] PTR void 
  9408 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  9409 ;;		 -> NULL(0), 
  9410 ;;  src             2    2[BANK0 ] PTR const void 
  9411 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  9412 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), dj$fn(12), 
  9413 ;;		 -> f_open@dj(40), 
  9414 ;;  cnt             2    4[BANK0 ] unsigned int 
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  9417 ;;		 -> pb$buf(64), STR_13(2), send_status_ok@text(3), STR_9(12), 
  9418 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), dj$fn(12), 
  9419 ;;		 -> f_open@dj(40), 
  9420 ;;  d               2    6[BANK0 ] PTR unsigned char 
  9421 ;;		 -> Fil$buf(512), Fil(546), FatFs(563), f_gets@s(4), 
  9422 ;;		 -> NULL(0), 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9432 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;Total ram usage:       10 bytes
  9437 ;; Hardware stack levels used: 1
  9438 ;; Hardware stack levels required when called: 5
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_dir_register
  9443 ;;		_f_write
  9444 ;;		_f_read
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text28
  9449   00969A                     __ptext28:
  9450                           	callstack 0
  9451   00969A                     _mem_cpy:
  9452                           	callstack 23
  9453   00969A                     
  9454                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  9455   00969A  C060  F066         	movff	mem_cpy@dst,mem_cpy@d
  9456   00969E  C061  F067         	movff	mem_cpy@dst+1,mem_cpy@d+1
  9457                           
  9458                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  9459   0096A2  C062  F068         	movff	mem_cpy@src,mem_cpy@s
  9460   0096A6  C063  F069         	movff	mem_cpy@src+1,mem_cpy@s+1
  9461                           
  9462                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  9463   0096AA  0100               	movlb	0	; () banked
  9464   0096AC  5164               	movf	mem_cpy@cnt& (0+255),w,b
  9465   0096AE  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  9466   0096B0  B4D8               	btfsc	status,2,c
  9467   0096B2  EF5D  F04B         	goto	u19141
  9468   0096B6  EF5F  F04B         	goto	u19140
  9469   0096BA                     u19141:
  9470   0096BA  EF8C  F04B         	goto	l867
  9471   0096BE                     u19140:
  9472   0096BE                     l15891:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  9476   0096BE  0060  F1A3  FFF6   	movff	mem_cpy@s,tblptrl
  9477   0096C4  0060  F1A7  FFF7   	movff	mem_cpy@s+1,tblptrh
  9478   0096CA  0E00               	movlw	low (__mediumconst shr (0+16))
  9479   0096CC  6EF8               	movwf	tblptru,c
  9480   0096CE  0060  F19B  FFD9   	movff	mem_cpy@d,fsr2l
  9481   0096D4  0060  F19F  FFDA   	movff	mem_cpy@d+1,fsr2h
  9482   0096DA  0E0F               	movlw	(high __ramtop+-1)
  9483   0096DC  64F7               	cpfsgt	tblptrh,c
  9484   0096DE  D003               	bra	u19157
  9485   0096E0  0008               	tblrd		*
  9486   0096E2  50F5               	movf	tablat,w,c
  9487   0096E4  D007               	bra	u19150
  9488   0096E6                     u19157:
  9489   0096E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9490   0096EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9491   0096F2  50EF               	movf	indf0,w,c
  9492   0096F4                     u19150:
  9493   0096F4  6EDF               	movwf	indf2,c
  9494   0096F6  0100               	movlb	0	; () banked
  9495   0096F8  4B68               	infsnz	mem_cpy@s& (0+255),f,b
  9496   0096FA  2B69               	incf	(mem_cpy@s+1)& (0+255),f,b
  9497   0096FC                     
  9498                           ; BSR set to: 0
  9499   0096FC  4B66               	infsnz	mem_cpy@d& (0+255),f,b
  9500   0096FE  2B67               	incf	(mem_cpy@d+1)& (0+255),f,b
  9501   009700                     
  9502                           ; BSR set to: 0
  9503                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  9504   009700  0764               	decf	mem_cpy@cnt& (0+255),f,b
  9505   009702  A0D8               	btfss	status,0,c
  9506   009704  0765               	decf	(mem_cpy@cnt+1)& (0+255),f,b
  9507   009706  5164               	movf	mem_cpy@cnt& (0+255),w,b
  9508   009708  1165               	iorwf	(mem_cpy@cnt+1)& (0+255),w,b
  9509   00970A  A4D8               	btfss	status,2,c
  9510   00970C  EF8A  F04B         	goto	u19161
  9511   009710  EF8C  F04B         	goto	u19160
  9512   009714                     u19161:
  9513   009714  EF5F  F04B         	goto	l15891
  9514   009718                     u19160:
  9515   009718                     l867:
  9516                           
  9517                           ; BSR set to: 0
  9518   009718  0012               	return		;funcret
  9519   00971A                     __end_of_mem_cpy:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _dir_alloc *****************
  9523 ;; Defined at:
  9524 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  dp              2   45[BANK1 ] PTR struct .
  9527 ;;		 -> f_open@dj(40), 
  9528 ;;  nent            2   47[BANK1 ] unsigned int 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  n               2   54[BANK1 ] unsigned int 
  9531 ;;  fs              2   52[BANK1 ] PTR struct .
  9532 ;;		 -> FatFs(563), NULL(0), 
  9533 ;;  res             1   56[BANK1 ] enum E68
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      enum E68
  9536 ;; Registers used:
  9537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9543 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:       12 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 15
  9550 ;; This function calls:
  9551 ;;		_dir_next
  9552 ;;		_dir_sdi
  9553 ;;		_move_window
  9554 ;; This function is called by:
  9555 ;;		_dir_register
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text29
  9560   007A48                     __ptext29:
  9561                           	callstack 0
  9562   007A48                     _dir_alloc:
  9563                           	callstack 12
  9564   007A48                     
  9565                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  9566   007A48  0060  F4B7  FFD9   	movff	dir_alloc@dp,fsr2l
  9567   007A4E  0060  F4BB  FFDA   	movff	dir_alloc@dp+1,fsr2h
  9568   007A54  006F FF78  F134    	movff	postinc2,dir_alloc@fs
  9569   007A5A  006F FF74  F135    	movff	postdec2,dir_alloc@fs+1
  9570   007A60                     
  9571                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  9572   007A60  C12D  F0ED         	movff	dir_alloc@dp,dir_sdi@dp
  9573   007A64  C12E  F0EE         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  9574   007A68  0E00               	movlw	0
  9575   007A6A  0100               	movlb	0	; () banked
  9576   007A6C  6FEF               	movwf	dir_sdi@ofs& (0+255),b
  9577   007A6E  0E00               	movlw	0
  9578   007A70  6FF0               	movwf	(dir_sdi@ofs+1)& (0+255),b
  9579   007A72  0E00               	movlw	0
  9580   007A74  6FF1               	movwf	(dir_sdi@ofs+2)& (0+255),b
  9581   007A76  0E00               	movlw	0
  9582   007A78  6FF2               	movwf	(dir_sdi@ofs+3)& (0+255),b
  9583   007A7A  ECF1  F02B         	call	_dir_sdi	;wreg free
  9584   007A7E  0101               	movlb	1	; () banked
  9585   007A80  6F38               	movwf	dir_alloc@res& (0+255),b
  9586   007A82                     
  9587                           ; BSR set to: 1
  9588                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  9589   007A82  5138               	movf	dir_alloc@res& (0+255),w,b
  9590   007A84  A4D8               	btfss	status,2,c
  9591   007A86  EF47  F03D         	goto	u19211
  9592   007A8A  EF49  F03D         	goto	u19210
  9593   007A8E                     u19211:
  9594   007A8E  EFCF  F03D         	goto	l15949
  9595   007A92                     u19210:
  9596   007A92                     
  9597                           ; BSR set to: 1
  9598                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  9599   007A92  0E00               	movlw	0
  9600   007A94  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  9601   007A96  0E00               	movlw	0
  9602   007A98  6F36               	movwf	dir_alloc@n& (0+255),b
  9603   007A9A                     l15929:
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  9607   007A9A  C134  F0C8         	movff	dir_alloc@fs,move_window@fs
  9608   007A9E  C135  F0C9         	movff	dir_alloc@fs+1,move_window@fs+1
  9609   007AA2  EE20 F016          	lfsr	2,22
  9610   007AA6  512D               	movf	dir_alloc@dp& (0+255),w,b
  9611   007AA8  26D9               	addwf	fsr2l,f,c
  9612   007AAA  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9613   007AAC  22DA               	addwfc	fsr2h,f,c
  9614   007AAE  006F FF78  F0CA    	movff	postinc2,move_window@sector
  9615   007AB4  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
  9616   007ABA  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
  9617   007AC0  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
  9618   007AC6  ECDA  F046         	call	_move_window	;wreg free
  9619   007ACA  0101               	movlb	1	; () banked
  9620   007ACC  6F38               	movwf	dir_alloc@res& (0+255),b
  9621   007ACE                     
  9622                           ; BSR set to: 1
  9623                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  9624   007ACE  5138               	movf	dir_alloc@res& (0+255),w,b
  9625   007AD0  B4D8               	btfsc	status,2,c
  9626   007AD2  EF6D  F03D         	goto	u19221
  9627   007AD6  EF6F  F03D         	goto	u19220
  9628   007ADA                     u19221:
  9629   007ADA  EF71  F03D         	goto	l15935
  9630   007ADE                     u19220:
  9631   007ADE  EFCF  F03D         	goto	l15949
  9632   007AE2                     l15935:
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  9636   007AE2  EE20 F01A          	lfsr	2,26
  9637   007AE6  512D               	movf	dir_alloc@dp& (0+255),w,b
  9638   007AE8  26D9               	addwf	fsr2l,f,c
  9639   007AEA  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9640   007AEC  22DA               	addwfc	fsr2h,f,c
  9641   007AEE  006F FF78  F131    	movff	postinc2,??_dir_alloc
  9642   007AF4  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  9643   007AFA  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  9644   007B00  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  9645   007B06  0EE5               	movlw	229
  9646   007B08  18DE               	xorwf	postinc2,w,c
  9647   007B0A  B4D8               	btfsc	status,2,c
  9648   007B0C  EF8A  F03D         	goto	u19231
  9649   007B10  EF8C  F03D         	goto	u19230
  9650   007B14                     u19231:
  9651   007B14  EFA6  F03D         	goto	l15939
  9652   007B18                     u19230:
  9653   007B18                     
  9654                           ; BSR set to: 1
  9655   007B18  EE20 F01A          	lfsr	2,26
  9656   007B1C  512D               	movf	dir_alloc@dp& (0+255),w,b
  9657   007B1E  26D9               	addwf	fsr2l,f,c
  9658   007B20  512E               	movf	(dir_alloc@dp+1)& (0+255),w,b
  9659   007B22  22DA               	addwfc	fsr2h,f,c
  9660   007B24  006F FF78  F131    	movff	postinc2,??_dir_alloc
  9661   007B2A  006F FF74  F132    	movff	postdec2,??_dir_alloc+1
  9662   007B30  0060  F4C7  FFD9   	movff	??_dir_alloc,fsr2l
  9663   007B36  0060  F4CB  FFDA   	movff	??_dir_alloc+1,fsr2h
  9664   007B3C  50DF               	movf	indf2,w,c
  9665   007B3E  A4D8               	btfss	status,2,c
  9666   007B40  EFA4  F03D         	goto	u19241
  9667   007B44  EFA6  F03D         	goto	u19240
  9668   007B48                     u19241:
  9669   007B48  EFB6  F03D         	goto	l15943
  9670   007B4C                     u19240:
  9671   007B4C                     l15939:
  9672                           
  9673                           ; BSR set to: 1
  9674                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  9675   007B4C  4B36               	infsnz	dir_alloc@n& (0+255),f,b
  9676   007B4E  2B37               	incf	(dir_alloc@n+1)& (0+255),f,b
  9677   007B50  512F               	movf	dir_alloc@nent& (0+255),w,b
  9678   007B52  1936               	xorwf	dir_alloc@n& (0+255),w,b
  9679   007B54  E107               	bnz	u19251
  9680   007B56  5130               	movf	(dir_alloc@nent+1)& (0+255),w,b
  9681   007B58  1937               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  9682   007B5A  A4D8               	btfss	status,2,c
  9683   007B5C  EFB2  F03D         	goto	u19251
  9684   007B60  EFB4  F03D         	goto	u19250
  9685   007B64                     u19251:
  9686   007B64  EFBA  F03D         	goto	l15945
  9687   007B68                     u19250:
  9688   007B68  EFCF  F03D         	goto	l15949
  9689   007B6C                     l15943:
  9690                           
  9691                           ; BSR set to: 1
  9692                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  9693   007B6C  0E00               	movlw	0
  9694   007B6E  6F37               	movwf	(dir_alloc@n+1)& (0+255),b
  9695   007B70  0E00               	movlw	0
  9696   007B72  6F36               	movwf	dir_alloc@n& (0+255),b
  9697   007B74                     l15945:
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  9701   007B74  C12D  F0FA         	movff	dir_alloc@dp,dir_next@dp
  9702   007B78  C12E  F0FB         	movff	dir_alloc@dp+1,dir_next@dp+1
  9703   007B7C  0E00               	movlw	0
  9704   007B7E  0100               	movlb	0	; () banked
  9705   007B80  6FFD               	movwf	(dir_next@stretch+1)& (0+255),b
  9706   007B82  0E01               	movlw	1
  9707   007B84  6FFC               	movwf	dir_next@stretch& (0+255),b
  9708   007B86  EC5A  F021         	call	_dir_next	;wreg free
  9709   007B8A  0101               	movlb	1	; () banked
  9710   007B8C  6F38               	movwf	dir_alloc@res& (0+255),b
  9711   007B8E                     
  9712                           ; BSR set to: 1
  9713                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  9714   007B8E  5138               	movf	dir_alloc@res& (0+255),w,b
  9715   007B90  B4D8               	btfsc	status,2,c
  9716   007B92  EFCD  F03D         	goto	u19261
  9717   007B96  EFCF  F03D         	goto	u19260
  9718   007B9A                     u19261:
  9719   007B9A  EF4D  F03D         	goto	l15929
  9720   007B9E                     u19260:
  9721   007B9E                     l15949:
  9722                           
  9723                           ; BSR set to: 1
  9724                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  9725   007B9E  0E04               	movlw	4
  9726   007BA0  1938               	xorwf	dir_alloc@res& (0+255),w,b
  9727   007BA2  A4D8               	btfss	status,2,c
  9728   007BA4  EFD6  F03D         	goto	u19271
  9729   007BA8  EFD8  F03D         	goto	u19270
  9730   007BAC                     u19271:
  9731   007BAC  EFDA  F03D         	goto	l1093
  9732   007BB0                     u19270:
  9733   007BB0                     
  9734                           ; BSR set to: 1
  9735   007BB0  0E07               	movlw	7
  9736   007BB2  6F38               	movwf	dir_alloc@res& (0+255),b
  9737   007BB4                     l1093:
  9738                           
  9739                           ; BSR set to: 1
  9740                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  9741   007BB4  5138               	movf	dir_alloc@res& (0+255),w,b
  9742   007BB6                     
  9743                           ; BSR set to: 1
  9744   007BB6  0012               	return		;funcret
  9745   007BB8                     __end_of_dir_alloc:
  9746                           	callstack 0
  9747                           
  9748 ;; *************** function _dir_sdi *****************
  9749 ;; Defined at:
  9750 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  dp              2  141[BANK0 ] PTR struct .
  9753 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  9754 ;;  ofs             4  143[BANK0 ] unsigned long 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  clst            4    4[BANK1 ] unsigned long 
  9757 ;;  csz             4    0[BANK1 ] unsigned long 
  9758 ;;  fs              2    8[BANK1 ] PTR struct .
  9759 ;;		 -> FatFs(563), NULL(0), 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      enum E68
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Totals:         0      16      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;Total ram usage:       26 bytes
  9774 ;; Hardware stack levels used: 1
  9775 ;; Hardware stack levels required when called: 13
  9776 ;; This function calls:
  9777 ;;		_clst2sect
  9778 ;;		_get_fat
  9779 ;; This function is called by:
  9780 ;;		_dir_alloc
  9781 ;;		_dir_find
  9782 ;;		_follow_path
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text30
  9787   0057E2                     __ptext30:
  9788                           	callstack 0
  9789   0057E2                     _dir_sdi:
  9790                           	callstack 14
  9791   0057E2                     
  9792                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  9793   0057E2  0060  F3B7  FFD9   	movff	dir_sdi@dp,fsr2l
  9794   0057E8  0060  F3BB  FFDA   	movff	dir_sdi@dp+1,fsr2h
  9795   0057EE  006F FF78  F108    	movff	postinc2,dir_sdi@fs
  9796   0057F4  006F FF74  F109    	movff	postdec2,dir_sdi@fs+1
  9797   0057FA  0100               	movlb	0	; () banked
  9798   0057FC  51F2               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  9799   0057FE  E107               	bnz	u18691
  9800   005800  0E20               	movlw	32
  9801   005802  5DF1               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  9802   005804  B0D8               	btfsc	status,0,c
  9803   005806  EF07  F02C         	goto	u18691
  9804   00580A  EF09  F02C         	goto	u18690
  9805   00580E                     u18691:
  9806   00580E  EF20  F02C         	goto	l15633
  9807   005812                     u18690:
  9808   005812                     
  9809                           ; BSR set to: 0
  9810   005812  0E1F               	movlw	31
  9811   005814  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
  9812   005816  6FF3               	movwf	??_dir_sdi& (0+255),b
  9813   005818  0E00               	movlw	0
  9814   00581A  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  9815   00581C  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
  9816   00581E  0E00               	movlw	0
  9817   005820  15F1               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  9818   005822  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9819   005824  0E00               	movlw	0
  9820   005826  15F2               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  9821   005828  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9822   00582A  51F3               	movf	??_dir_sdi& (0+255),w,b
  9823   00582C  11F4               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  9824   00582E  11F5               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  9825   005830  11F6               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  9826   005832  B4D8               	btfsc	status,2,c
  9827   005834  EF1E  F02C         	goto	u18701
  9828   005838  EF20  F02C         	goto	u18700
  9829   00583C                     u18701:
  9830   00583C  EF23  F02C         	goto	l15637
  9831   005840                     u18700:
  9832   005840                     l15633:
  9833                           
  9834                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  9835   005840  0E02               	movlw	2
  9836   005842  EFF1  F02D         	goto	l1042
  9837   005846                     l15637:
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  9841   005846  EE20 F00E          	lfsr	2,14
  9842   00584A  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9843   00584C  26D9               	addwf	fsr2l,f,c
  9844   00584E  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9845   005850  22DA               	addwfc	fsr2h,f,c
  9846   005852  0060  F3BF  FFDE   	movff	dir_sdi@ofs,postinc2
  9847   005858  0060  F3C3  FFDE   	movff	dir_sdi@ofs+1,postinc2
  9848   00585E  0060  F3C7  FFDE   	movff	dir_sdi@ofs+2,postinc2
  9849   005864  0060  F3CB  FFDE   	movff	dir_sdi@ofs+3,postinc2
  9850                           
  9851                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  9852   00586A  EE20 F006          	lfsr	2,6
  9853   00586E  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9854   005870  26D9               	addwf	fsr2l,f,c
  9855   005872  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9856   005874  22DA               	addwfc	fsr2h,f,c
  9857   005876  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  9858   00587C  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  9859   005882  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  9860   005888  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  9861   00588E                     
  9862                           ; BSR set to: 0
  9863                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  9864   00588E  0101               	movlb	1	; () banked
  9865   005890  5104               	movf	dir_sdi@clst& (0+255),w,b
  9866   005892  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9867   005894  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9868   005896  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  9869   005898  A4D8               	btfss	status,2,c
  9870   00589A  EF51  F02C         	goto	u18711
  9871   00589E  EF53  F02C         	goto	u18710
  9872   0058A2                     u18711:
  9873   0058A2  EF73  F02C         	goto	l15647
  9874   0058A6                     u18710:
  9875   0058A6                     
  9876                           ; BSR set to: 1
  9877   0058A6  0060  F423  FFD9   	movff	dir_sdi@fs,fsr2l
  9878   0058AC  0060  F427  FFDA   	movff	dir_sdi@fs+1,fsr2h
  9879   0058B2  0E02               	movlw	2
  9880   0058B4  64DF               	cpfsgt	indf2,c
  9881   0058B6  EF5F  F02C         	goto	u18721
  9882   0058BA  EF61  F02C         	goto	u18720
  9883   0058BE                     u18721:
  9884   0058BE  EF73  F02C         	goto	l15647
  9885   0058C2                     u18720:
  9886   0058C2                     
  9887                           ; BSR set to: 1
  9888                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  9889   0058C2  EE20 F027          	lfsr	2,39
  9890   0058C6  5108               	movf	dir_sdi@fs& (0+255),w,b
  9891   0058C8  26D9               	addwf	fsr2l,f,c
  9892   0058CA  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9893   0058CC  22DA               	addwfc	fsr2h,f,c
  9894   0058CE  006F FF78  F104    	movff	postinc2,dir_sdi@clst
  9895   0058D4  006F FF78  F105    	movff	postinc2,dir_sdi@clst+1
  9896   0058DA  006F FF78  F106    	movff	postinc2,dir_sdi@clst+2
  9897   0058E0  006F FF78  F107    	movff	postinc2,dir_sdi@clst+3
  9898   0058E6                     l15647:
  9899                           
  9900                           ; BSR set to: 1
  9901                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  9902   0058E6  5104               	movf	dir_sdi@clst& (0+255),w,b
  9903   0058E8  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  9904   0058EA  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  9905   0058EC  1107               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  9906   0058EE  A4D8               	btfss	status,2,c
  9907   0058F0  EF7C  F02C         	goto	u18731
  9908   0058F4  EF7E  F02C         	goto	u18730
  9909   0058F8                     u18731:
  9910   0058F8  EFD1  F02C         	goto	l15657
  9911   0058FC                     u18730:
  9912   0058FC                     
  9913                           ; BSR set to: 1
  9914                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  9915   0058FC  EE20 F007          	lfsr	2,7
  9916   005900  5108               	movf	dir_sdi@fs& (0+255),w,b
  9917   005902  26D9               	addwf	fsr2l,f,c
  9918   005904  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9919   005906  22DA               	addwfc	fsr2h,f,c
  9920   005908  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9921   00590E  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9922   005914  0100               	movlb	0	; () banked
  9923   005916  51F3               	movf	??_dir_sdi& (0+255),w,b
  9924   005918  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9925   00591A  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9926   00591C  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9927   00591E  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9928   005920  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
  9929   005922  C0EF  F0F9         	movff	dir_sdi@ofs,??_dir_sdi+6
  9930   005926  C0F0  F0FA         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  9931   00592A  C0F1  F0FB         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  9932   00592E  C0F2  F0FC         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  9933   005932  0E06               	movlw	6
  9934   005934  EFA1  F02C         	goto	u18740
  9935   005938                     u18745:
  9936   005938  90D8               	bcf	status,0,c
  9937   00593A  33FC               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  9938   00593C  33FB               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  9939   00593E  33FA               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  9940   005940  33F9               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  9941   005942                     u18740:
  9942   005942  2EE8               	decfsz	wreg,f,c
  9943   005944  EF9C  F02C         	goto	u18745
  9944   005948  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
  9945   00594A  5DF9               	subwf	(??_dir_sdi+6)& (0+255),w,b
  9946   00594C  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
  9947   00594E  59FA               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  9948   005950  51F7               	movf	(??_dir_sdi+4)& (0+255),w,b
  9949   005952  59FB               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  9950   005954  51F8               	movf	(??_dir_sdi+5)& (0+255),w,b
  9951   005956  59FC               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  9952   005958  A0D8               	btfss	status,0,c
  9953   00595A  EFB1  F02C         	goto	u18751
  9954   00595E  EFB3  F02C         	goto	u18750
  9955   005962                     u18751:
  9956   005962  EFB5  F02C         	goto	l15655
  9957   005966                     u18750:
  9958   005966  EF20  F02C         	goto	l15633
  9959   00596A                     l15655:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  9963   00596A  0101               	movlb	1	; () banked
  9964   00596C  EE20 F027          	lfsr	2,39
  9965   005970  5108               	movf	dir_sdi@fs& (0+255),w,b
  9966   005972  26D9               	addwf	fsr2l,f,c
  9967   005974  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9968   005976  22DA               	addwfc	fsr2h,f,c
  9969   005978  0100               	movlb	0	; () banked
  9970   00597A  EE10 F016          	lfsr	1,22
  9971   00597E  51ED               	movf	dir_sdi@dp& (0+255),w,b
  9972   005980  26E1               	addwf	fsr1l,f,c
  9973   005982  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
  9974   005984  22E2               	addwfc	fsr1h,f,c
  9975   005986  006F FF7B FFE6     	movff	postinc2,postinc1
  9976   00598C  006F FF7B FFE6     	movff	postinc2,postinc1
  9977   005992  006F FF7B FFE6     	movff	postinc2,postinc1
  9978   005998  006F FF7B FFE6     	movff	postinc2,postinc1
  9979                           
  9980                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  9981   00599E  EF8A  F02D         	goto	l15679
  9982   0059A2                     l15657:
  9983                           
  9984                           ; BSR set to: 1
  9985                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  9986   0059A2  EE20 F009          	lfsr	2,9
  9987   0059A6  5108               	movf	dir_sdi@fs& (0+255),w,b
  9988   0059A8  26D9               	addwf	fsr2l,f,c
  9989   0059AA  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
  9990   0059AC  22DA               	addwfc	fsr2h,f,c
  9991   0059AE  006F FF78  F0F3    	movff	postinc2,??_dir_sdi
  9992   0059B4  006F FF74  F0F4    	movff	postdec2,??_dir_sdi+1
  9993   0059BA  0100               	movlb	0	; () banked
  9994   0059BC  51F3               	movf	??_dir_sdi& (0+255),w,b
  9995   0059BE  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
  9996   0059C0  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
  9997   0059C2  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
  9998   0059C4  6BF7               	clrf	(??_dir_sdi+4)& (0+255),b
  9999   0059C6  6BF8               	clrf	(??_dir_sdi+5)& (0+255),b
 10000   0059C8  0E09               	movlw	9
 10001   0059CA                     u18765:
 10002   0059CA  90D8               	bcf	status,0,c
 10003   0059CC  37F5               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 10004   0059CE  37F6               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 10005   0059D0  37F7               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 10006   0059D2  37F8               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 10007   0059D4  2EE8               	decfsz	wreg,f,c
 10008   0059D6  EFE5  F02C         	goto	u18765
 10009   0059DA  C0F5  F100         	movff	??_dir_sdi+2,dir_sdi@csz
 10010   0059DE  C0F6  F101         	movff	??_dir_sdi+3,dir_sdi@csz+1
 10011   0059E2  C0F7  F102         	movff	??_dir_sdi+4,dir_sdi@csz+2
 10012   0059E6  C0F8  F103         	movff	??_dir_sdi+5,dir_sdi@csz+3
 10013                           
 10014                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
 10015   0059EA  EF52  F02D         	goto	l1048
 10016   0059EE                     l15659:
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
 10020   0059EE  C0ED  F0D3         	movff	dir_sdi@dp,get_fat@obj
 10021   0059F2  C0EE  F0D4         	movff	dir_sdi@dp+1,get_fat@obj+1
 10022   0059F6  C104  F0D5         	movff	dir_sdi@clst,get_fat@clst
 10023   0059FA  C105  F0D6         	movff	dir_sdi@clst+1,get_fat@clst+1
 10024   0059FE  C106  F0D7         	movff	dir_sdi@clst+2,get_fat@clst+2
 10025   005A02  C107  F0D8         	movff	dir_sdi@clst+3,get_fat@clst+3
 10026   005A06  ECE4  F027         	call	_get_fat	;wreg free
 10027   005A0A  C0D3  F104         	movff	?_get_fat,dir_sdi@clst
 10028   005A0E  C0D4  F105         	movff	?_get_fat+1,dir_sdi@clst+1
 10029   005A12  C0D5  F106         	movff	?_get_fat+2,dir_sdi@clst+2
 10030   005A16  C0D6  F107         	movff	?_get_fat+3,dir_sdi@clst+3
 10031   005A1A                     
 10032                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 10033   005A1A  0101               	movlb	1	; () banked
 10034   005A1C  2904               	incf	dir_sdi@clst& (0+255),w,b
 10035   005A1E  E10A               	bnz	u18771
 10036   005A20  2905               	incf	(dir_sdi@clst+1)& (0+255),w,b
 10037   005A22  E108               	bnz	u18771
 10038   005A24  2906               	incf	(dir_sdi@clst+2)& (0+255),w,b
 10039   005A26  E106               	bnz	u18771
 10040   005A28  2907               	incf	(dir_sdi@clst+3)& (0+255),w,b
 10041   005A2A  A4D8               	btfss	status,2,c
 10042   005A2C  EF1A  F02D         	goto	u18771
 10043   005A30  EF1C  F02D         	goto	u18770
 10044   005A34                     u18771:
 10045   005A34  EF1F  F02D         	goto	l15667
 10046   005A38                     u18770:
 10047   005A38                     
 10048                           ; BSR set to: 1
 10049   005A38  0E01               	movlw	1
 10050   005A3A  EFF1  F02D         	goto	l1042
 10051   005A3E                     l15667:
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
 10055   005A3E  5107               	movf	(dir_sdi@clst+3)& (0+255),w,b
 10056   005A40  1106               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 10057   005A42  1105               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 10058   005A44  E109               	bnz	u18780
 10059   005A46  0E02               	movlw	2
 10060   005A48  5D04               	subwf	dir_sdi@clst& (0+255),w,b
 10061   005A4A  A0D8               	btfss	status,0,c
 10062   005A4C  EF2A  F02D         	goto	u18781
 10063   005A50  EF2C  F02D         	goto	u18780
 10064   005A54                     u18781:
 10065   005A54  EF20  F02C         	goto	l15633
 10066   005A58                     u18780:
 10067   005A58                     
 10068                           ; BSR set to: 1
 10069   005A58  EE20 F017          	lfsr	2,23
 10070   005A5C  5108               	movf	dir_sdi@fs& (0+255),w,b
 10071   005A5E  26D9               	addwf	fsr2l,f,c
 10072   005A60  5109               	movf	(dir_sdi@fs+1)& (0+255),w,b
 10073   005A62  22DA               	addwfc	fsr2h,f,c
 10074   005A64  50DE               	movf	postinc2,w,c
 10075   005A66  5D04               	subwf	dir_sdi@clst& (0+255),w,b
 10076   005A68  50DE               	movf	postinc2,w,c
 10077   005A6A  5905               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 10078   005A6C  50DE               	movf	postinc2,w,c
 10079   005A6E  5906               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 10080   005A70  50DE               	movf	postinc2,w,c
 10081   005A72  5907               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 10082   005A74  A0D8               	btfss	status,0,c
 10083   005A76  EF3F  F02D         	goto	u18791
 10084   005A7A  EF41  F02D         	goto	u18790
 10085   005A7E                     u18791:
 10086   005A7E  EF43  F02D         	goto	l15675
 10087   005A82                     u18790:
 10088   005A82  EF20  F02C         	goto	l15633
 10089   005A86                     l15675:
 10090                           
 10091                           ; BSR set to: 1
 10092                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
 10093   005A86  5100               	movf	dir_sdi@csz& (0+255),w,b
 10094   005A88  0100               	movlb	0	; () banked
 10095   005A8A  5FEF               	subwf	dir_sdi@ofs& (0+255),f,b
 10096   005A8C  0101               	movlb	1	; () banked
 10097   005A8E  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
 10098   005A90  0100               	movlb	0	; () banked
 10099   005A92  5BF0               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 10100   005A94  0101               	movlb	1	; () banked
 10101   005A96  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
 10102   005A98  0100               	movlb	0	; () banked
 10103   005A9A  5BF1               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 10104   005A9C  0101               	movlb	1	; () banked
 10105   005A9E  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
 10106   005AA0  0100               	movlb	0	; () banked
 10107   005AA2  5BF2               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 10108   005AA4                     l1048:
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
 10112   005AA4  0101               	movlb	1	; () banked
 10113   005AA6  5100               	movf	dir_sdi@csz& (0+255),w,b
 10114   005AA8  0100               	movlb	0	; () banked
 10115   005AAA  5DEF               	subwf	dir_sdi@ofs& (0+255),w,b
 10116   005AAC  0101               	movlb	1	; () banked
 10117   005AAE  5101               	movf	(dir_sdi@csz+1)& (0+255),w,b
 10118   005AB0  0100               	movlb	0	; () banked
 10119   005AB2  59F0               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 10120   005AB4  0101               	movlb	1	; () banked
 10121   005AB6  5102               	movf	(dir_sdi@csz+2)& (0+255),w,b
 10122   005AB8  0100               	movlb	0	; () banked
 10123   005ABA  59F1               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 10124   005ABC  0101               	movlb	1	; () banked
 10125   005ABE  5103               	movf	(dir_sdi@csz+3)& (0+255),w,b
 10126   005AC0  0100               	movlb	0	; () banked
 10127   005AC2  59F2               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 10128   005AC4  B0D8               	btfsc	status,0,c
 10129   005AC6  EF67  F02D         	goto	u18801
 10130   005ACA  EF69  F02D         	goto	u18800
 10131   005ACE                     u18801:
 10132   005ACE  EFF7  F02C         	goto	l15659
 10133   005AD2                     u18800:
 10134   005AD2                     
 10135                           ; BSR set to: 0
 10136                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
 10137   005AD2  C108  F06C         	movff	dir_sdi@fs,clst2sect@fs
 10138   005AD6  C109  F06D         	movff	dir_sdi@fs+1,clst2sect@fs+1
 10139   005ADA  C104  F06E         	movff	dir_sdi@clst,clst2sect@clst
 10140   005ADE  C105  F06F         	movff	dir_sdi@clst+1,clst2sect@clst+1
 10141   005AE2  C106  F070         	movff	dir_sdi@clst+2,clst2sect@clst+2
 10142   005AE6  C107  F071         	movff	dir_sdi@clst+3,clst2sect@clst+3
 10143   005AEA  EC6C  F046         	call	_clst2sect	;wreg free
 10144   005AEE  0100               	movlb	0	; () banked
 10145   005AF0  EE20 F016          	lfsr	2,22
 10146   005AF4  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10147   005AF6  26D9               	addwf	fsr2l,f,c
 10148   005AF8  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10149   005AFA  22DA               	addwfc	fsr2h,f,c
 10150   005AFC  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
 10151   005B02  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
 10152   005B08  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
 10153   005B0E  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
 10154   005B14                     l15679:
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
 10158   005B14  EE20 F012          	lfsr	2,18
 10159   005B18  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10160   005B1A  26D9               	addwf	fsr2l,f,c
 10161   005B1C  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10162   005B1E  22DA               	addwfc	fsr2h,f,c
 10163   005B20  0060  F413  FFDE   	movff	dir_sdi@clst,postinc2
 10164   005B26  0060  F417  FFDE   	movff	dir_sdi@clst+1,postinc2
 10165   005B2C  0060  F41B  FFDE   	movff	dir_sdi@clst+2,postinc2
 10166   005B32  0060  F41F  FFDE   	movff	dir_sdi@clst+3,postinc2
 10167   005B38                     
 10168                           ; BSR set to: 0
 10169                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
 10170   005B38  EE20 F016          	lfsr	2,22
 10171   005B3C  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10172   005B3E  26D9               	addwf	fsr2l,f,c
 10173   005B40  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10174   005B42  22DA               	addwfc	fsr2h,f,c
 10175   005B44  50DE               	movf	postinc2,w,c
 10176   005B46  10DE               	iorwf	postinc2,w,c
 10177   005B48  10DE               	iorwf	postinc2,w,c
 10178   005B4A  10DE               	iorwf	postinc2,w,c
 10179   005B4C  A4D8               	btfss	status,2,c
 10180   005B4E  EFAB  F02D         	goto	u18811
 10181   005B52  EFAD  F02D         	goto	u18810
 10182   005B56                     u18811:
 10183   005B56  EFAF  F02D         	goto	l15687
 10184   005B5A                     u18810:
 10185   005B5A  EF20  F02C         	goto	l15633
 10186   005B5E                     l15687:
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
 10190   005B5E  C0EF  F0F3         	movff	dir_sdi@ofs,??_dir_sdi
 10191   005B62  C0F0  F0F4         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 10192   005B66  C0F1  F0F5         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 10193   005B6A  C0F2  F0F6         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 10194   005B6E  0E0A               	movlw	10
 10195   005B70  EFBF  F02D         	goto	u18820
 10196   005B74                     u18825:
 10197   005B74  90D8               	bcf	status,0,c
 10198   005B76  33F6               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 10199   005B78  33F5               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 10200   005B7A  33F4               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 10201   005B7C  33F3               	rrcf	??_dir_sdi& (0+255),f,b
 10202   005B7E                     u18820:
 10203   005B7E  2EE8               	decfsz	wreg,f,c
 10204   005B80  EFBA  F02D         	goto	u18825
 10205   005B84  EE20 F016          	lfsr	2,22
 10206   005B88  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10207   005B8A  26D9               	addwf	fsr2l,f,c
 10208   005B8C  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10209   005B8E  22DA               	addwfc	fsr2h,f,c
 10210   005B90  51F3               	movf	??_dir_sdi& (0+255),w,b
 10211   005B92  26DE               	addwf	postinc2,f,c
 10212   005B94  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
 10213   005B96  22DE               	addwfc	postinc2,f,c
 10214   005B98  51F5               	movf	(??_dir_sdi+2)& (0+255),w,b
 10215   005B9A  22DE               	addwfc	postinc2,f,c
 10216   005B9C  51F6               	movf	(??_dir_sdi+3)& (0+255),w,b
 10217   005B9E  22DE               	addwfc	postinc2,f,c
 10218                           
 10219                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
 10220   005BA0  0EFF               	movlw	255
 10221   005BA2  15EF               	andwf	dir_sdi@ofs& (0+255),w,b
 10222   005BA4  6FF3               	movwf	??_dir_sdi& (0+255),b
 10223   005BA6  0E01               	movlw	1
 10224   005BA8  15F0               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 10225   005BAA  6FF4               	movwf	(??_dir_sdi+1)& (0+255),b
 10226   005BAC  51F3               	movf	??_dir_sdi& (0+255),w,b
 10227   005BAE  0101               	movlb	1	; () banked
 10228   005BB0  2508               	addwf	dir_sdi@fs& (0+255),w,b
 10229   005BB2  0100               	movlb	0	; () banked
 10230   005BB4  6FF5               	movwf	(??_dir_sdi+2)& (0+255),b
 10231   005BB6  51F4               	movf	(??_dir_sdi+1)& (0+255),w,b
 10232   005BB8  0101               	movlb	1	; () banked
 10233   005BBA  2109               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 10234   005BBC  0100               	movlb	0	; () banked
 10235   005BBE  6FF6               	movwf	(??_dir_sdi+3)& (0+255),b
 10236   005BC0  0E33               	movlw	51
 10237   005BC2  27F5               	addwf	(??_dir_sdi+2)& (0+255),f,b
 10238   005BC4  0E00               	movlw	0
 10239   005BC6  23F6               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 10240   005BC8  EE20 F01A          	lfsr	2,26
 10241   005BCC  51ED               	movf	dir_sdi@dp& (0+255),w,b
 10242   005BCE  26D9               	addwf	fsr2l,f,c
 10243   005BD0  51EE               	movf	(dir_sdi@dp+1)& (0+255),w,b
 10244   005BD2  22DA               	addwfc	fsr2h,f,c
 10245   005BD4  0060  F3D7  FFDE   	movff	??_dir_sdi+2,postinc2
 10246   005BDA  0060  F3DB  FFDD   	movff	??_dir_sdi+3,postdec2
 10247   005BE0                     
 10248                           ; BSR set to: 0
 10249                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
 10250   005BE0  0E00               	movlw	0
 10251   005BE2                     l1042:
 10252   005BE2  0012               	return		;funcret
 10253   005BE4                     __end_of_dir_sdi:
 10254                           	callstack 0
 10255                           
 10256 ;; *************** function _dir_next *****************
 10257 ;; Defined at:
 10258 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  dp              2  154[BANK0 ] PTR struct .
 10261 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
 10262 ;;  stretch         2  156[BANK0 ] int 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;  clst            4   41[BANK1 ] unsigned long 
 10265 ;;  ofs             4   35[BANK1 ] unsigned long 
 10266 ;;  fs              2   39[BANK1 ] PTR struct .
 10267 ;;		 -> FatFs(563), NULL(0), 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      enum E68
 10270 ;; Registers used:
 10271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Totals:         0       4      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;Total ram usage:       26 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 14
 10284 ;; This function calls:
 10285 ;;		_clst2sect
 10286 ;;		_create_chain
 10287 ;;		_dir_clear
 10288 ;;		_get_fat
 10289 ;; This function is called by:
 10290 ;;		_dir_alloc
 10291 ;;		_dir_find
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text31
 10296   0042B4                     __ptext31:
 10297                           	callstack 0
 10298   0042B4                     _dir_next:
 10299                           	callstack 12
 10300   0042B4                     
 10301                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
 10302   0042B4  0060  F3EB  FFD9   	movff	dir_next@dp,fsr2l
 10303   0042BA  0060  F3EF  FFDA   	movff	dir_next@dp+1,fsr2h
 10304   0042C0  006F FF78  F127    	movff	postinc2,dir_next@fs
 10305   0042C6  006F FF74  F128    	movff	postdec2,dir_next@fs+1
 10306   0042CC                     
 10307                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
 10308   0042CC  0100               	movlb	0	; () banked
 10309   0042CE  EE20 F00E          	lfsr	2,14
 10310   0042D2  51FA               	movf	dir_next@dp& (0+255),w,b
 10311   0042D4  26D9               	addwf	fsr2l,f,c
 10312   0042D6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10313   0042D8  22DA               	addwfc	fsr2h,f,c
 10314   0042DA  006F FF78  F117    	movff	postinc2,??_dir_next
 10315   0042E0  006F FF78  F118    	movff	postinc2,??_dir_next+1
 10316   0042E6  006F FF78  F119    	movff	postinc2,??_dir_next+2
 10317   0042EC  006F FF78  F11A    	movff	postinc2,??_dir_next+3
 10318   0042F2  0E20               	movlw	32
 10319   0042F4  0101               	movlb	1	; () banked
 10320   0042F6  2517               	addwf	??_dir_next& (0+255),w,b
 10321   0042F8  6F23               	movwf	dir_next@ofs& (0+255),b
 10322   0042FA  0E00               	movlw	0
 10323   0042FC  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
 10324   0042FE  6F24               	movwf	(dir_next@ofs+1)& (0+255),b
 10325   004300  0E00               	movlw	0
 10326   004302  2119               	addwfc	(??_dir_next+2)& (0+255),w,b
 10327   004304  6F25               	movwf	(dir_next@ofs+2)& (0+255),b
 10328   004306  0E00               	movlw	0
 10329   004308  211A               	addwfc	(??_dir_next+3)& (0+255),w,b
 10330   00430A  6F26               	movwf	(dir_next@ofs+3)& (0+255),b
 10331   00430C                     
 10332                           ; BSR set to: 1
 10333                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
 10334   00430C  0100               	movlb	0	; () banked
 10335   00430E  EE20 F016          	lfsr	2,22
 10336   004312  51FA               	movf	dir_next@dp& (0+255),w,b
 10337   004314  26D9               	addwf	fsr2l,f,c
 10338   004316  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10339   004318  22DA               	addwfc	fsr2h,f,c
 10340   00431A  50DE               	movf	postinc2,w,c
 10341   00431C  10DE               	iorwf	postinc2,w,c
 10342   00431E  10DE               	iorwf	postinc2,w,c
 10343   004320  10DE               	iorwf	postinc2,w,c
 10344   004322  B4D8               	btfsc	status,2,c
 10345   004324  EF96  F021         	goto	u18831
 10346   004328  EF98  F021         	goto	u18830
 10347   00432C                     u18831:
 10348   00432C  EFA4  F021         	goto	l15709
 10349   004330                     u18830:
 10350   004330                     
 10351                           ; BSR set to: 0
 10352   004330  0101               	movlb	1	; () banked
 10353   004332  5126               	movf	(dir_next@ofs+3)& (0+255),w,b
 10354   004334  E109               	bnz	u18840
 10355   004336  0E20               	movlw	32
 10356   004338  5D25               	subwf	(dir_next@ofs+2)& (0+255),w,b
 10357   00433A  A0D8               	btfss	status,0,c
 10358   00433C  EFA2  F021         	goto	u18841
 10359   004340  EFA4  F021         	goto	u18840
 10360   004344                     u18841:
 10361   004344  EFA7  F021         	goto	l15713
 10362   004348                     u18840:
 10363   004348                     l15709:
 10364   004348  0E04               	movlw	4
 10365   00434A  EF92  F023         	goto	l1067
 10366   00434E                     l15713:
 10367                           
 10368                           ; BSR set to: 1
 10369                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
 10370   00434E  0EFF               	movlw	255
 10371   004350  1523               	andwf	dir_next@ofs& (0+255),w,b
 10372   004352  6F17               	movwf	??_dir_next& (0+255),b
 10373   004354  0E01               	movlw	1
 10374   004356  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
 10375   004358  6F18               	movwf	(??_dir_next+1)& (0+255),b
 10376   00435A  0E00               	movlw	0
 10377   00435C  1525               	andwf	(dir_next@ofs+2)& (0+255),w,b
 10378   00435E  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10379   004360  0E00               	movlw	0
 10380   004362  1526               	andwf	(dir_next@ofs+3)& (0+255),w,b
 10381   004364  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10382   004366  5117               	movf	??_dir_next& (0+255),w,b
 10383   004368  1118               	iorwf	(??_dir_next+1)& (0+255),w,b
 10384   00436A  1119               	iorwf	(??_dir_next+2)& (0+255),w,b
 10385   00436C  111A               	iorwf	(??_dir_next+3)& (0+255),w,b
 10386   00436E  A4D8               	btfss	status,2,c
 10387   004370  EFBC  F021         	goto	u18851
 10388   004374  EFBE  F021         	goto	u18850
 10389   004378                     u18851:
 10390   004378  EF60  F023         	goto	l15781
 10391   00437C                     u18850:
 10392   00437C                     
 10393                           ; BSR set to: 1
 10394                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
 10395   00437C  0100               	movlb	0	; () banked
 10396   00437E  EE20 F016          	lfsr	2,22
 10397   004382  51FA               	movf	dir_next@dp& (0+255),w,b
 10398   004384  26D9               	addwf	fsr2l,f,c
 10399   004386  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10400   004388  22DA               	addwfc	fsr2h,f,c
 10401   00438A  2ADE               	incf	postinc2,f,c
 10402   00438C  0E00               	movlw	0
 10403   00438E  22DE               	addwfc	postinc2,f,c
 10404   004390  22DE               	addwfc	postinc2,f,c
 10405   004392  22DE               	addwfc	postinc2,f,c
 10406                           
 10407                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
 10408   004394  EE20 F012          	lfsr	2,18
 10409   004398  51FA               	movf	dir_next@dp& (0+255),w,b
 10410   00439A  26D9               	addwf	fsr2l,f,c
 10411   00439C  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10412   00439E  22DA               	addwfc	fsr2h,f,c
 10413   0043A0  50DE               	movf	postinc2,w,c
 10414   0043A2  10DE               	iorwf	postinc2,w,c
 10415   0043A4  10DE               	iorwf	postinc2,w,c
 10416   0043A6  10DE               	iorwf	postinc2,w,c
 10417   0043A8  A4D8               	btfss	status,2,c
 10418   0043AA  EFD9  F021         	goto	u18861
 10419   0043AE  EFDB  F021         	goto	u18860
 10420   0043B2                     u18861:
 10421   0043B2  EF1D  F022         	goto	l15725
 10422   0043B6                     u18860:
 10423   0043B6                     
 10424                           ; BSR set to: 0
 10425                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
 10426   0043B6  0101               	movlb	1	; () banked
 10427   0043B8  EE20 F007          	lfsr	2,7
 10428   0043BC  5127               	movf	dir_next@fs& (0+255),w,b
 10429   0043BE  26D9               	addwf	fsr2l,f,c
 10430   0043C0  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10431   0043C2  22DA               	addwfc	fsr2h,f,c
 10432   0043C4  006F FF78  F117    	movff	postinc2,??_dir_next
 10433   0043CA  006F FF74  F118    	movff	postdec2,??_dir_next+1
 10434   0043D0  5117               	movf	??_dir_next& (0+255),w,b
 10435   0043D2  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10436   0043D4  5118               	movf	(??_dir_next+1)& (0+255),w,b
 10437   0043D6  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10438   0043D8  6B1B               	clrf	(??_dir_next+4)& (0+255),b
 10439   0043DA  6B1C               	clrf	(??_dir_next+5)& (0+255),b
 10440   0043DC  C123  F11D         	movff	dir_next@ofs,??_dir_next+6
 10441   0043E0  C124  F11E         	movff	dir_next@ofs+1,??_dir_next+7
 10442   0043E4  C125  F11F         	movff	dir_next@ofs+2,??_dir_next+8
 10443   0043E8  C126  F120         	movff	dir_next@ofs+3,??_dir_next+9
 10444   0043EC  0E06               	movlw	6
 10445   0043EE  EFFE  F021         	goto	u18870
 10446   0043F2                     u18875:
 10447   0043F2  90D8               	bcf	status,0,c
 10448   0043F4  3320               	rrcf	(??_dir_next+9)& (0+255),f,b
 10449   0043F6  331F               	rrcf	(??_dir_next+8)& (0+255),f,b
 10450   0043F8  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
 10451   0043FA  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
 10452   0043FC                     u18870:
 10453   0043FC  2EE8               	decfsz	wreg,f,c
 10454   0043FE  EFF9  F021         	goto	u18875
 10455   004402  5119               	movf	(??_dir_next+2)& (0+255),w,b
 10456   004404  5D1D               	subwf	(??_dir_next+6)& (0+255),w,b
 10457   004406  511A               	movf	(??_dir_next+3)& (0+255),w,b
 10458   004408  591E               	subwfb	(??_dir_next+7)& (0+255),w,b
 10459   00440A  511B               	movf	(??_dir_next+4)& (0+255),w,b
 10460   00440C  591F               	subwfb	(??_dir_next+8)& (0+255),w,b
 10461   00440E  511C               	movf	(??_dir_next+5)& (0+255),w,b
 10462   004410  5920               	subwfb	(??_dir_next+9)& (0+255),w,b
 10463   004412  A0D8               	btfss	status,0,c
 10464   004414  EF0E  F022         	goto	u18881
 10465   004418  EF10  F022         	goto	u18880
 10466   00441C                     u18881:
 10467   00441C  EF60  F023         	goto	l15781
 10468   004420                     u18880:
 10469   004420                     
 10470                           ; BSR set to: 1
 10471                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
 10472   004420  0100               	movlb	0	; () banked
 10473   004422  EE20 F016          	lfsr	2,22
 10474   004426  51FA               	movf	dir_next@dp& (0+255),w,b
 10475   004428  26D9               	addwf	fsr2l,f,c
 10476   00442A  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10477   00442C  22DA               	addwfc	fsr2h,f,c
 10478   00442E  6ADE               	clrf	postinc2,c
 10479   004430  6ADE               	clrf	postinc2,c
 10480   004432  6ADE               	clrf	postinc2,c
 10481   004434  6ADD               	clrf	postdec2,c
 10482   004436  EFA4  F021         	goto	l15709
 10483   00443A                     l15725:
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
 10487   00443A  0101               	movlb	1	; () banked
 10488   00443C  EE20 F009          	lfsr	2,9
 10489   004440  5127               	movf	dir_next@fs& (0+255),w,b
 10490   004442  26D9               	addwf	fsr2l,f,c
 10491   004444  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10492   004446  22DA               	addwfc	fsr2h,f,c
 10493   004448  006F FF78  F117    	movff	postinc2,??_dir_next
 10494   00444E  006F FF74  F118    	movff	postdec2,??_dir_next+1
 10495   004454  0EFF               	movlw	255
 10496   004456  2517               	addwf	??_dir_next& (0+255),w,b
 10497   004458  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10498   00445A  0EFF               	movlw	255
 10499   00445C  2118               	addwfc	(??_dir_next+1)& (0+255),w,b
 10500   00445E  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10501   004460  C123  F11B         	movff	dir_next@ofs,??_dir_next+4
 10502   004464  C124  F11C         	movff	dir_next@ofs+1,??_dir_next+5
 10503   004468  C125  F11D         	movff	dir_next@ofs+2,??_dir_next+6
 10504   00446C  C126  F11E         	movff	dir_next@ofs+3,??_dir_next+7
 10505   004470  0E0A               	movlw	10
 10506   004472  EF40  F022         	goto	u18890
 10507   004476                     u18895:
 10508   004476  90D8               	bcf	status,0,c
 10509   004478  331E               	rrcf	(??_dir_next+7)& (0+255),f,b
 10510   00447A  331D               	rrcf	(??_dir_next+6)& (0+255),f,b
 10511   00447C  331C               	rrcf	(??_dir_next+5)& (0+255),f,b
 10512   00447E  331B               	rrcf	(??_dir_next+4)& (0+255),f,b
 10513   004480                     u18890:
 10514   004480  2EE8               	decfsz	wreg,f,c
 10515   004482  EF3B  F022         	goto	u18895
 10516   004486  5119               	movf	(??_dir_next+2)& (0+255),w,b
 10517   004488  151B               	andwf	(??_dir_next+4)& (0+255),w,b
 10518   00448A  6F1F               	movwf	(??_dir_next+8)& (0+255),b
 10519   00448C  511A               	movf	(??_dir_next+3)& (0+255),w,b
 10520   00448E  151C               	andwf	(??_dir_next+5)& (0+255),w,b
 10521   004490  6F20               	movwf	(??_dir_next+9)& (0+255),b
 10522   004492  0E00               	movlw	0
 10523   004494  151D               	andwf	(??_dir_next+6)& (0+255),w,b
 10524   004496  6F21               	movwf	(??_dir_next+10)& (0+255),b
 10525   004498  0E00               	movlw	0
 10526   00449A  151E               	andwf	(??_dir_next+7)& (0+255),w,b
 10527   00449C  6F22               	movwf	(??_dir_next+11)& (0+255),b
 10528   00449E  511F               	movf	(??_dir_next+8)& (0+255),w,b
 10529   0044A0  1120               	iorwf	(??_dir_next+9)& (0+255),w,b
 10530   0044A2  1121               	iorwf	(??_dir_next+10)& (0+255),w,b
 10531   0044A4  1122               	iorwf	(??_dir_next+11)& (0+255),w,b
 10532   0044A6  A4D8               	btfss	status,2,c
 10533   0044A8  EF58  F022         	goto	u18901
 10534   0044AC  EF5A  F022         	goto	u18900
 10535   0044B0                     u18901:
 10536   0044B0  EF60  F023         	goto	l15781
 10537   0044B4                     u18900:
 10538   0044B4                     
 10539                           ; BSR set to: 1
 10540                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
 10541   0044B4  C0FA  F0D3         	movff	dir_next@dp,get_fat@obj
 10542   0044B8  C0FB  F0D4         	movff	dir_next@dp+1,get_fat@obj+1
 10543   0044BC  0100               	movlb	0	; () banked
 10544   0044BE  EE20 F012          	lfsr	2,18
 10545   0044C2  51FA               	movf	dir_next@dp& (0+255),w,b
 10546   0044C4  26D9               	addwf	fsr2l,f,c
 10547   0044C6  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10548   0044C8  22DA               	addwfc	fsr2h,f,c
 10549   0044CA  006F FF78  F0D5    	movff	postinc2,get_fat@clst
 10550   0044D0  006F FF78  F0D6    	movff	postinc2,get_fat@clst+1
 10551   0044D6  006F FF78  F0D7    	movff	postinc2,get_fat@clst+2
 10552   0044DC  006F FF78  F0D8    	movff	postinc2,get_fat@clst+3
 10553   0044E2  ECE4  F027         	call	_get_fat	;wreg free
 10554   0044E6  C0D3  F129         	movff	?_get_fat,dir_next@clst
 10555   0044EA  C0D4  F12A         	movff	?_get_fat+1,dir_next@clst+1
 10556   0044EE  C0D5  F12B         	movff	?_get_fat+2,dir_next@clst+2
 10557   0044F2  C0D6  F12C         	movff	?_get_fat+3,dir_next@clst+3
 10558   0044F6                     
 10559                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
 10560   0044F6  0101               	movlb	1	; () banked
 10561   0044F8  512C               	movf	(dir_next@clst+3)& (0+255),w,b
 10562   0044FA  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10563   0044FC  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10564   0044FE  E107               	bnz	u18911
 10565   004500  0E02               	movlw	2
 10566   004502  5D29               	subwf	dir_next@clst& (0+255),w,b
 10567   004504  B0D8               	btfsc	status,0,c
 10568   004506  EF87  F022         	goto	u18911
 10569   00450A  EF89  F022         	goto	u18910
 10570   00450E                     u18911:
 10571   00450E  EF8C  F022         	goto	l15735
 10572   004512                     u18910:
 10573   004512                     l15731:
 10574                           
 10575                           ; BSR set to: 1
 10576   004512  0E02               	movlw	2
 10577   004514  EF92  F023         	goto	l1067
 10578   004518                     l15735:
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 10582   004518  2929               	incf	dir_next@clst& (0+255),w,b
 10583   00451A  E10A               	bnz	u18921
 10584   00451C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
 10585   00451E  E108               	bnz	u18921
 10586   004520  292B               	incf	(dir_next@clst+2)& (0+255),w,b
 10587   004522  E106               	bnz	u18921
 10588   004524  292C               	incf	(dir_next@clst+3)& (0+255),w,b
 10589   004526  A4D8               	btfss	status,2,c
 10590   004528  EF98  F022         	goto	u18921
 10591   00452C  EF9A  F022         	goto	u18920
 10592   004530                     u18921:
 10593   004530  EF9D  F022         	goto	l15741
 10594   004534                     u18920:
 10595   004534                     l15737:
 10596   004534  0E01               	movlw	1
 10597   004536  EF92  F023         	goto	l1067
 10598   00453A                     l15741:
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
 10602   00453A  EE20 F017          	lfsr	2,23
 10603   00453E  5127               	movf	dir_next@fs& (0+255),w,b
 10604   004540  26D9               	addwf	fsr2l,f,c
 10605   004542  5128               	movf	(dir_next@fs+1)& (0+255),w,b
 10606   004544  22DA               	addwfc	fsr2h,f,c
 10607   004546  50DE               	movf	postinc2,w,c
 10608   004548  5D29               	subwf	dir_next@clst& (0+255),w,b
 10609   00454A  50DE               	movf	postinc2,w,c
 10610   00454C  592A               	subwfb	(dir_next@clst+1)& (0+255),w,b
 10611   00454E  50DE               	movf	postinc2,w,c
 10612   004550  592B               	subwfb	(dir_next@clst+2)& (0+255),w,b
 10613   004552  50DE               	movf	postinc2,w,c
 10614   004554  592C               	subwfb	(dir_next@clst+3)& (0+255),w,b
 10615   004556  A0D8               	btfss	status,0,c
 10616   004558  EFB0  F022         	goto	u18931
 10617   00455C  EFB2  F022         	goto	u18930
 10618   004560                     u18931:
 10619   004560  EF2C  F023         	goto	l1075
 10620   004564                     u18930:
 10621   004564                     
 10622                           ; BSR set to: 1
 10623                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
 10624   004564  0100               	movlb	0	; () banked
 10625   004566  51FC               	movf	dir_next@stretch& (0+255),w,b
 10626   004568  11FD               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 10627   00456A  A4D8               	btfss	status,2,c
 10628   00456C  EFBA  F022         	goto	u18941
 10629   004570  EFBC  F022         	goto	u18940
 10630   004574                     u18941:
 10631   004574  EFC8  F022         	goto	l15751
 10632   004578                     u18940:
 10633   004578                     
 10634                           ; BSR set to: 0
 10635                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
 10636   004578  EE20 F016          	lfsr	2,22
 10637   00457C  51FA               	movf	dir_next@dp& (0+255),w,b
 10638   00457E  26D9               	addwf	fsr2l,f,c
 10639   004580  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10640   004582  22DA               	addwfc	fsr2h,f,c
 10641   004584  6ADE               	clrf	postinc2,c
 10642   004586  6ADE               	clrf	postinc2,c
 10643   004588  6ADE               	clrf	postinc2,c
 10644   00458A  6ADD               	clrf	postdec2,c
 10645   00458C  EFA4  F021         	goto	l15709
 10646   004590                     l15751:
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
 10650   004590  C0FA  F0F4         	movff	dir_next@dp,create_chain@obj
 10651   004594  C0FB  F0F5         	movff	dir_next@dp+1,create_chain@obj+1
 10652   004598  EE20 F012          	lfsr	2,18
 10653   00459C  51FA               	movf	dir_next@dp& (0+255),w,b
 10654   00459E  26D9               	addwf	fsr2l,f,c
 10655   0045A0  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10656   0045A2  22DA               	addwfc	fsr2h,f,c
 10657   0045A4  006F FF78  F0F6    	movff	postinc2,create_chain@clst
 10658   0045AA  006F FF78  F0F7    	movff	postinc2,create_chain@clst+1
 10659   0045B0  006F FF78  F0F8    	movff	postinc2,create_chain@clst+2
 10660   0045B6  006F FF78  F0F9    	movff	postinc2,create_chain@clst+3
 10661   0045BC  ECFA  F016         	call	_create_chain	;wreg free
 10662   0045C0  C0F4  F129         	movff	?_create_chain,dir_next@clst
 10663   0045C4  C0F5  F12A         	movff	?_create_chain+1,dir_next@clst+1
 10664   0045C8  C0F6  F12B         	movff	?_create_chain+2,dir_next@clst+2
 10665   0045CC  C0F7  F12C         	movff	?_create_chain+3,dir_next@clst+3
 10666   0045D0                     
 10667                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
 10668   0045D0  0101               	movlb	1	; () banked
 10669   0045D2  5129               	movf	dir_next@clst& (0+255),w,b
 10670   0045D4  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10671   0045D6  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10672   0045D8  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
 10673   0045DA  A4D8               	btfss	status,2,c
 10674   0045DC  EFF2  F022         	goto	u18951
 10675   0045E0  EFF4  F022         	goto	u18950
 10676   0045E4                     u18951:
 10677   0045E4  EFF7  F022         	goto	l15759
 10678   0045E8                     u18950:
 10679   0045E8                     
 10680                           ; BSR set to: 1
 10681   0045E8  0E07               	movlw	7
 10682   0045EA  EF92  F023         	goto	l1067
 10683   0045EE                     l15759:
 10684                           
 10685                           ; BSR set to: 1
 10686                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
 10687   0045EE  0529               	decf	dir_next@clst& (0+255),w,b
 10688   0045F0  112A               	iorwf	(dir_next@clst+1)& (0+255),w,b
 10689   0045F2  112B               	iorwf	(dir_next@clst+2)& (0+255),w,b
 10690   0045F4  112C               	iorwf	(dir_next@clst+3)& (0+255),w,b
 10691   0045F6  A4D8               	btfss	status,2,c
 10692   0045F8  EF00  F023         	goto	u18961
 10693   0045FC  EF02  F023         	goto	u18960
 10694   004600                     u18961:
 10695   004600  EF04  F023         	goto	l15765
 10696   004604                     u18960:
 10697   004604  EF89  F022         	goto	l15731
 10698   004608                     l15765:
 10699                           
 10700                           ; BSR set to: 1
 10701                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 10702   004608  2929               	incf	dir_next@clst& (0+255),w,b
 10703   00460A  E10A               	bnz	u18971
 10704   00460C  292A               	incf	(dir_next@clst+1)& (0+255),w,b
 10705   00460E  E108               	bnz	u18971
 10706   004610  292B               	incf	(dir_next@clst+2)& (0+255),w,b
 10707   004612  E106               	bnz	u18971
 10708   004614  292C               	incf	(dir_next@clst+3)& (0+255),w,b
 10709   004616  A4D8               	btfss	status,2,c
 10710   004618  EF10  F023         	goto	u18971
 10711   00461C  EF12  F023         	goto	u18970
 10712   004620                     u18971:
 10713   004620  EF14  F023         	goto	l15771
 10714   004624                     u18970:
 10715   004624  EF9A  F022         	goto	l15737
 10716   004628                     l15771:
 10717                           
 10718                           ; BSR set to: 1
 10719                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
 10720   004628  C127  F0C8         	movff	dir_next@fs,dir_clear@fs
 10721   00462C  C128  F0C9         	movff	dir_next@fs+1,dir_clear@fs+1
 10722   004630  C129  F0CA         	movff	dir_next@clst,dir_clear@clst
 10723   004634  C12A  F0CB         	movff	dir_next@clst+1,dir_clear@clst+1
 10724   004638  C12B  F0CC         	movff	dir_next@clst+2,dir_clear@clst+2
 10725   00463C  C12C  F0CD         	movff	dir_next@clst+3,dir_clear@clst+3
 10726   004640  EC8C  F03E         	call	_dir_clear	;wreg free
 10727   004644  0900               	iorlw	0
 10728   004646  B4D8               	btfsc	status,2,c
 10729   004648  EF28  F023         	goto	u18981
 10730   00464C  EF2A  F023         	goto	u18980
 10731   004650                     u18981:
 10732   004650  EF2C  F023         	goto	l1075
 10733   004654                     u18980:
 10734   004654  EF9A  F022         	goto	l15737
 10735   004658                     l1075:
 10736                           
 10737                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
 10738   004658  0100               	movlb	0	; () banked
 10739   00465A  EE20 F012          	lfsr	2,18
 10740   00465E  51FA               	movf	dir_next@dp& (0+255),w,b
 10741   004660  26D9               	addwf	fsr2l,f,c
 10742   004662  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10743   004664  22DA               	addwfc	fsr2h,f,c
 10744   004666  0060  F4A7  FFDE   	movff	dir_next@clst,postinc2
 10745   00466C  0060  F4AB  FFDE   	movff	dir_next@clst+1,postinc2
 10746   004672  0060  F4AF  FFDE   	movff	dir_next@clst+2,postinc2
 10747   004678  0060  F4B3  FFDE   	movff	dir_next@clst+3,postinc2
 10748   00467E                     
 10749                           ; BSR set to: 0
 10750                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
 10751   00467E  C127  F06C         	movff	dir_next@fs,clst2sect@fs
 10752   004682  C128  F06D         	movff	dir_next@fs+1,clst2sect@fs+1
 10753   004686  C129  F06E         	movff	dir_next@clst,clst2sect@clst
 10754   00468A  C12A  F06F         	movff	dir_next@clst+1,clst2sect@clst+1
 10755   00468E  C12B  F070         	movff	dir_next@clst+2,clst2sect@clst+2
 10756   004692  C12C  F071         	movff	dir_next@clst+3,clst2sect@clst+3
 10757   004696  EC6C  F046         	call	_clst2sect	;wreg free
 10758   00469A  0100               	movlb	0	; () banked
 10759   00469C  EE20 F016          	lfsr	2,22
 10760   0046A0  51FA               	movf	dir_next@dp& (0+255),w,b
 10761   0046A2  26D9               	addwf	fsr2l,f,c
 10762   0046A4  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10763   0046A6  22DA               	addwfc	fsr2h,f,c
 10764   0046A8  0060  F1B3  FFDE   	movff	?_clst2sect,postinc2
 10765   0046AE  0060  F1B7  FFDE   	movff	?_clst2sect+1,postinc2
 10766   0046B4  0060  F1BB  FFDE   	movff	?_clst2sect+2,postinc2
 10767   0046BA  0060  F1BF  FFDE   	movff	?_clst2sect+3,postinc2
 10768   0046C0                     l15781:
 10769                           
 10770                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
 10771   0046C0  0100               	movlb	0	; () banked
 10772   0046C2  EE20 F00E          	lfsr	2,14
 10773   0046C6  51FA               	movf	dir_next@dp& (0+255),w,b
 10774   0046C8  26D9               	addwf	fsr2l,f,c
 10775   0046CA  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10776   0046CC  22DA               	addwfc	fsr2h,f,c
 10777   0046CE  0060  F48F  FFDE   	movff	dir_next@ofs,postinc2
 10778   0046D4  0060  F493  FFDE   	movff	dir_next@ofs+1,postinc2
 10779   0046DA  0060  F497  FFDE   	movff	dir_next@ofs+2,postinc2
 10780   0046E0  0060  F49B  FFDE   	movff	dir_next@ofs+3,postinc2
 10781   0046E6                     
 10782                           ; BSR set to: 0
 10783                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
 10784   0046E6  0EFF               	movlw	255
 10785   0046E8  0101               	movlb	1	; () banked
 10786   0046EA  1523               	andwf	dir_next@ofs& (0+255),w,b
 10787   0046EC  6F17               	movwf	??_dir_next& (0+255),b
 10788   0046EE  0E01               	movlw	1
 10789   0046F0  1524               	andwf	(dir_next@ofs+1)& (0+255),w,b
 10790   0046F2  6F18               	movwf	(??_dir_next+1)& (0+255),b
 10791   0046F4  5117               	movf	??_dir_next& (0+255),w,b
 10792   0046F6  2527               	addwf	dir_next@fs& (0+255),w,b
 10793   0046F8  6F19               	movwf	(??_dir_next+2)& (0+255),b
 10794   0046FA  5118               	movf	(??_dir_next+1)& (0+255),w,b
 10795   0046FC  2128               	addwfc	(dir_next@fs+1)& (0+255),w,b
 10796   0046FE  6F1A               	movwf	(??_dir_next+3)& (0+255),b
 10797   004700  0E33               	movlw	51
 10798   004702  2719               	addwf	(??_dir_next+2)& (0+255),f,b
 10799   004704  0E00               	movlw	0
 10800   004706  231A               	addwfc	(??_dir_next+3)& (0+255),f,b
 10801   004708  0100               	movlb	0	; () banked
 10802   00470A  EE20 F01A          	lfsr	2,26
 10803   00470E  51FA               	movf	dir_next@dp& (0+255),w,b
 10804   004710  26D9               	addwf	fsr2l,f,c
 10805   004712  51FB               	movf	(dir_next@dp+1)& (0+255),w,b
 10806   004714  22DA               	addwfc	fsr2h,f,c
 10807   004716  0060  F467  FFDE   	movff	??_dir_next+2,postinc2
 10808   00471C  0060  F46B  FFDD   	movff	??_dir_next+3,postdec2
 10809   004722                     
 10810                           ; BSR set to: 0
 10811                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
 10812   004722  0E00               	movlw	0
 10813   004724                     l1067:
 10814   004724  0012               	return		;funcret
 10815   004726                     __end_of_dir_next:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _dir_clear *****************
 10819 ;; Defined at:
 10820 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  fs              2  104[BANK0 ] PTR struct .
 10823 ;;		 -> FatFs(563), NULL(0), 
 10824 ;;  clst            4  106[BANK0 ] unsigned long 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  sect            4  114[BANK0 ] unsigned long 
 10827 ;;  n               2  120[BANK0 ] unsigned int 
 10828 ;;  szb             2  118[BANK0 ] unsigned int 
 10829 ;;  ibuf            2  112[BANK0 ] PTR unsigned char 
 10830 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      enum E68
 10833 ;; Registers used:
 10834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10840 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;Total ram usage:       18 bytes
 10845 ;; Hardware stack levels used: 1
 10846 ;; Hardware stack levels required when called: 11
 10847 ;; This function calls:
 10848 ;;		_clst2sect
 10849 ;;		_disk_write
 10850 ;;		_mem_set
 10851 ;;		_sync_window
 10852 ;; This function is called by:
 10853 ;;		_dir_next
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text32
 10858   007D18                     __ptext32:
 10859                           	callstack 0
 10860   007D18                     _dir_clear:
 10861                           	callstack 14
 10862   007D18                     
 10863                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
 10864   007D18  C0C8  F0B5         	movff	dir_clear@fs,sync_window@fs
 10865   007D1C  C0C9  F0B6         	movff	dir_clear@fs+1,sync_window@fs+1
 10866   007D20  EC19  F039         	call	_sync_window	;wreg free
 10867   007D24  0900               	iorlw	0
 10868   007D26  B4D8               	btfsc	status,2,c
 10869   007D28  EF98  F03E         	goto	u18091
 10870   007D2C  EF9A  F03E         	goto	u18090
 10871   007D30                     u18091:
 10872   007D30  EF9D  F03E         	goto	l15319
 10873   007D34                     u18090:
 10874   007D34  0E01               	movlw	1
 10875   007D36  EF37  F03F         	goto	l1025
 10876   007D3A                     l15319:
 10877                           
 10878                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
 10879   007D3A  C0C8  F06C         	movff	dir_clear@fs,clst2sect@fs
 10880   007D3E  C0C9  F06D         	movff	dir_clear@fs+1,clst2sect@fs+1
 10881   007D42  C0CA  F06E         	movff	dir_clear@clst,clst2sect@clst
 10882   007D46  C0CB  F06F         	movff	dir_clear@clst+1,clst2sect@clst+1
 10883   007D4A  C0CC  F070         	movff	dir_clear@clst+2,clst2sect@clst+2
 10884   007D4E  C0CD  F071         	movff	dir_clear@clst+3,clst2sect@clst+3
 10885   007D52  EC6C  F046         	call	_clst2sect	;wreg free
 10886   007D56  C06C  F0D2         	movff	?_clst2sect,dir_clear@sect
 10887   007D5A  C06D  F0D3         	movff	?_clst2sect+1,dir_clear@sect+1
 10888   007D5E  C06E  F0D4         	movff	?_clst2sect+2,dir_clear@sect+2
 10889   007D62  C06F  F0D5         	movff	?_clst2sect+3,dir_clear@sect+3
 10890   007D66                     
 10891                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
 10892   007D66  0100               	movlb	0	; () banked
 10893   007D68  EE20 F02F          	lfsr	2,47
 10894   007D6C  51C8               	movf	dir_clear@fs& (0+255),w,b
 10895   007D6E  26D9               	addwf	fsr2l,f,c
 10896   007D70  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10897   007D72  22DA               	addwfc	fsr2h,f,c
 10898   007D74  0060  F34B  FFDE   	movff	dir_clear@sect,postinc2
 10899   007D7A  0060  F34F  FFDE   	movff	dir_clear@sect+1,postinc2
 10900   007D80  0060  F353  FFDE   	movff	dir_clear@sect+2,postinc2
 10901   007D86  0060  F357  FFDE   	movff	dir_clear@sect+3,postinc2
 10902   007D8C                     
 10903                           ; BSR set to: 0
 10904                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
 10905   007D8C  0E33               	movlw	51
 10906   007D8E  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10907   007D90  6F60               	movwf	mem_set@dst& (0+255),b
 10908   007D92  0E00               	movlw	0
 10909   007D94  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10910   007D96  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 10911   007D98  0E00               	movlw	0
 10912   007D9A  6F63               	movwf	(mem_set@val+1)& (0+255),b
 10913   007D9C  0E00               	movlw	0
 10914   007D9E  6F62               	movwf	mem_set@val& (0+255),b
 10915   007DA0  0E02               	movlw	2
 10916   007DA2  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 10917   007DA4  0E00               	movlw	0
 10918   007DA6  6F64               	movwf	mem_set@cnt& (0+255),b
 10919   007DA8  EC87  F050         	call	_mem_set	;wreg free
 10920   007DAC                     
 10921                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
 10922   007DAC  0E33               	movlw	51
 10923   007DAE  0100               	movlb	0	; () banked
 10924   007DB0  25C8               	addwf	dir_clear@fs& (0+255),w,b
 10925   007DB2  6FD0               	movwf	dir_clear@ibuf& (0+255),b
 10926   007DB4  0E00               	movlw	0
 10927   007DB6  21C9               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 10928   007DB8  6FD1               	movwf	(dir_clear@ibuf+1)& (0+255),b
 10929   007DBA                     
 10930                           ; BSR set to: 0
 10931   007DBA  0E00               	movlw	0
 10932   007DBC  6FD7               	movwf	(dir_clear@szb+1)& (0+255),b
 10933   007DBE  0E01               	movlw	1
 10934   007DC0  6FD6               	movwf	dir_clear@szb& (0+255),b
 10935   007DC2                     
 10936                           ; BSR set to: 0
 10937                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
 10938   007DC2  0E00               	movlw	0
 10939   007DC4  6FD9               	movwf	(dir_clear@n+1)& (0+255),b
 10940   007DC6  0E00               	movlw	0
 10941   007DC8  6FD8               	movwf	dir_clear@n& (0+255),b
 10942   007DCA  EFEC  F03E         	goto	l15333
 10943   007DCE                     l15331:
 10944   007DCE  0100               	movlb	0	; () banked
 10945   007DD0  51D6               	movf	dir_clear@szb& (0+255),w,b
 10946   007DD2  27D8               	addwf	dir_clear@n& (0+255),f,b
 10947   007DD4  51D7               	movf	(dir_clear@szb+1)& (0+255),w,b
 10948   007DD6  23D9               	addwfc	(dir_clear@n+1)& (0+255),f,b
 10949   007DD8                     l15333:
 10950                           
 10951                           ; BSR set to: 0
 10952   007DD8  EE20 F009          	lfsr	2,9
 10953   007DDC  51C8               	movf	dir_clear@fs& (0+255),w,b
 10954   007DDE  26D9               	addwf	fsr2l,f,c
 10955   007DE0  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10956   007DE2  22DA               	addwfc	fsr2h,f,c
 10957   007DE4  50DE               	movf	postinc2,w,c
 10958   007DE6  5DD8               	subwf	dir_clear@n& (0+255),w,b
 10959   007DE8  50DE               	movf	postinc2,w,c
 10960   007DEA  59D9               	subwfb	(dir_clear@n+1)& (0+255),w,b
 10961   007DEC  B0D8               	btfsc	status,0,c
 10962   007DEE  EFFB  F03E         	goto	u18101
 10963   007DF2  EFFD  F03E         	goto	u18100
 10964   007DF6                     u18101:
 10965   007DF6  EF22  F03F         	goto	l15337
 10966   007DFA                     u18100:
 10967   007DFA                     
 10968                           ; BSR set to: 0
 10969   007DFA  C0D0  F0AB         	movff	dir_clear@ibuf,disk_write@buff
 10970   007DFE  C0D1  F0AC         	movff	dir_clear@ibuf+1,disk_write@buff+1
 10971   007E02  51D8               	movf	dir_clear@n& (0+255),w,b
 10972   007E04  25D2               	addwf	dir_clear@sect& (0+255),w,b
 10973   007E06  6FAD               	movwf	disk_write@sector& (0+255),b
 10974   007E08  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 10975   007E0A  21D3               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 10976   007E0C  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 10977   007E0E  0E00               	movlw	0
 10978   007E10  21D4               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 10979   007E12  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 10980   007E14  0E00               	movlw	0
 10981   007E16  21D5               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 10982   007E18  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 10983   007E1A  C0D6  F0B1         	movff	dir_clear@szb,disk_write@count
 10984   007E1E  C0D7  F0B2         	movff	dir_clear@szb+1,disk_write@count+1
 10985   007E22  EE20 F001          	lfsr	2,1
 10986   007E26  51C8               	movf	dir_clear@fs& (0+255),w,b
 10987   007E28  26D9               	addwf	fsr2l,f,c
 10988   007E2A  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 10989   007E2C  22DA               	addwfc	fsr2h,f,c
 10990   007E2E  50DF               	movf	indf2,w,c
 10991   007E30  EC1D  F04D         	call	_disk_write
 10992   007E34  0900               	iorlw	0
 10993   007E36  B4D8               	btfsc	status,2,c
 10994   007E38  EF20  F03F         	goto	u18111
 10995   007E3C  EF22  F03F         	goto	u18110
 10996   007E40                     u18111:
 10997   007E40  EFE7  F03E         	goto	l15331
 10998   007E44                     u18110:
 10999   007E44                     l15337:
 11000                           
 11001                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 11002   007E44  0100               	movlb	0	; () banked
 11003   007E46  EE20 F009          	lfsr	2,9
 11004   007E4A  51C8               	movf	dir_clear@fs& (0+255),w,b
 11005   007E4C  26D9               	addwf	fsr2l,f,c
 11006   007E4E  51C9               	movf	(dir_clear@fs+1)& (0+255),w,b
 11007   007E50  22DA               	addwfc	fsr2h,f,c
 11008   007E52  51D8               	movf	dir_clear@n& (0+255),w,b
 11009   007E54  18DE               	xorwf	postinc2,w,c
 11010   007E56  E107               	bnz	u18121
 11011   007E58  51D9               	movf	(dir_clear@n+1)& (0+255),w,b
 11012   007E5A  18DE               	xorwf	postinc2,w,c
 11013   007E5C  A4D8               	btfss	status,2,c
 11014   007E5E  EF33  F03F         	goto	u18121
 11015   007E62  EF36  F03F         	goto	u18120
 11016   007E66                     u18121:
 11017   007E66  0E01               	movlw	1
 11018   007E68  EF37  F03F         	goto	u18130
 11019   007E6C                     u18120:
 11020   007E6C  0E00               	movlw	0
 11021   007E6E                     u18130:
 11022   007E6E                     l1025:
 11023   007E6E  0012               	return		;funcret
 11024   007E70                     __end_of_dir_clear:
 11025                           	callstack 0
 11026                           
 11027 ;; *************** function _clst2sect *****************
 11028 ;; Defined at:
 11029 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  fs              2   12[BANK0 ] PTR struct .
 11032 ;;		 -> FatFs(563), NULL(0), 
 11033 ;;  clst            4   14[BANK0 ] unsigned long 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;		None
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  4   12[BANK0 ] unsigned long 
 11038 ;; Registers used:
 11039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;Total ram usage:       12 bytes
 11050 ;; Hardware stack levels used: 1
 11051 ;; Hardware stack levels required when called: 6
 11052 ;; This function calls:
 11053 ;;		___lmul
 11054 ;; This function is called by:
 11055 ;;		_dir_clear
 11056 ;;		_dir_sdi
 11057 ;;		_dir_next
 11058 ;;		_f_open
 11059 ;;		_f_write
 11060 ;;		_f_read
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text33
 11065   008CD8                     __ptext33:
 11066                           	callstack 0
 11067   008CD8                     _clst2sect:
 11068                           	callstack 22
 11069   008CD8                     
 11070                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
 11071   008CD8  0E02               	movlw	2
 11072   008CDA  0100               	movlb	0	; () banked
 11073   008CDC  5F6E               	subwf	clst2sect@clst& (0+255),f,b
 11074   008CDE  0E00               	movlw	0
 11075   008CE0  5B6F               	subwfb	(clst2sect@clst+1)& (0+255),f,b
 11076   008CE2  5B70               	subwfb	(clst2sect@clst+2)& (0+255),f,b
 11077   008CE4  5B71               	subwfb	(clst2sect@clst+3)& (0+255),f,b
 11078   008CE6                     
 11079                           ; BSR set to: 0
 11080                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
 11081   008CE6  EE20 F017          	lfsr	2,23
 11082   008CEA  516C               	movf	clst2sect@fs& (0+255),w,b
 11083   008CEC  26D9               	addwf	fsr2l,f,c
 11084   008CEE  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11085   008CF0  22DA               	addwfc	fsr2h,f,c
 11086   008CF2  0EFE               	movlw	254
 11087   008CF4  24DE               	addwf	postinc2,w,c
 11088   008CF6  6F72               	movwf	??_clst2sect& (0+255),b
 11089   008CF8  0EFF               	movlw	255
 11090   008CFA  20DE               	addwfc	postinc2,w,c
 11091   008CFC  6F73               	movwf	(??_clst2sect+1)& (0+255),b
 11092   008CFE  0EFF               	movlw	255
 11093   008D00  20DE               	addwfc	postinc2,w,c
 11094   008D02  6F74               	movwf	(??_clst2sect+2)& (0+255),b
 11095   008D04  0EFF               	movlw	255
 11096   008D06  20DE               	addwfc	postinc2,w,c
 11097   008D08  6F75               	movwf	(??_clst2sect+3)& (0+255),b
 11098   008D0A  5172               	movf	??_clst2sect& (0+255),w,b
 11099   008D0C  5D6E               	subwf	clst2sect@clst& (0+255),w,b
 11100   008D0E  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 11101   008D10  596F               	subwfb	(clst2sect@clst+1)& (0+255),w,b
 11102   008D12  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 11103   008D14  5970               	subwfb	(clst2sect@clst+2)& (0+255),w,b
 11104   008D16  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 11105   008D18  5971               	subwfb	(clst2sect@clst+3)& (0+255),w,b
 11106   008D1A  A0D8               	btfss	status,0,c
 11107   008D1C  EF92  F046         	goto	u17571
 11108   008D20  EF94  F046         	goto	u17570
 11109   008D24                     u17571:
 11110   008D24  EF9E  F046         	goto	l15059
 11111   008D28                     u17570:
 11112   008D28                     
 11113                           ; BSR set to: 0
 11114   008D28  0E00               	movlw	0
 11115   008D2A  6F6C               	movwf	?_clst2sect& (0+255),b
 11116   008D2C  0E00               	movlw	0
 11117   008D2E  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 11118   008D30  0E00               	movlw	0
 11119   008D32  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 11120   008D34  0E00               	movlw	0
 11121   008D36  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 11122   008D38  EFD9  F046         	goto	l919
 11123   008D3C                     l15059:
 11124                           
 11125                           ; BSR set to: 0
 11126                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
 11127   008D3C  EE20 F02B          	lfsr	2,43
 11128   008D40  516C               	movf	clst2sect@fs& (0+255),w,b
 11129   008D42  26D9               	addwf	fsr2l,f,c
 11130   008D44  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11131   008D46  22DA               	addwfc	fsr2h,f,c
 11132   008D48  006F FF78  F072    	movff	postinc2,??_clst2sect
 11133   008D4E  006F FF78  F073    	movff	postinc2,??_clst2sect+1
 11134   008D54  006F FF78  F074    	movff	postinc2,??_clst2sect+2
 11135   008D5A  006F FF78  F075    	movff	postinc2,??_clst2sect+3
 11136   008D60  EE20 F009          	lfsr	2,9
 11137   008D64  516C               	movf	clst2sect@fs& (0+255),w,b
 11138   008D66  26D9               	addwf	fsr2l,f,c
 11139   008D68  516D               	movf	(clst2sect@fs+1)& (0+255),w,b
 11140   008D6A  22DA               	addwfc	fsr2h,f,c
 11141   008D6C  006F FF78  F076    	movff	postinc2,??_clst2sect+4
 11142   008D72  006F FF74  F077    	movff	postdec2,??_clst2sect+5
 11143   008D78  C076  F060         	movff	??_clst2sect+4,___lmul@multiplier
 11144   008D7C  C077  F061         	movff	??_clst2sect+5,___lmul@multiplier+1
 11145   008D80  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 11146   008D82  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 11147   008D84  C06E  F064         	movff	clst2sect@clst,___lmul@multiplicand
 11148   008D88  C06F  F065         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 11149   008D8C  C070  F066         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 11150   008D90  C071  F067         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 11151   008D94  ECE7  F04C         	call	___lmul	;wreg free
 11152   008D98  0100               	movlb	0	; () banked
 11153   008D9A  5172               	movf	??_clst2sect& (0+255),w,b
 11154   008D9C  2560               	addwf	?___lmul& (0+255),w,b
 11155   008D9E  6F6C               	movwf	?_clst2sect& (0+255),b
 11156   008DA0  5173               	movf	(??_clst2sect+1)& (0+255),w,b
 11157   008DA2  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 11158   008DA4  6F6D               	movwf	(?_clst2sect+1)& (0+255),b
 11159   008DA6  5174               	movf	(??_clst2sect+2)& (0+255),w,b
 11160   008DA8  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 11161   008DAA  6F6E               	movwf	(?_clst2sect+2)& (0+255),b
 11162   008DAC  5175               	movf	(??_clst2sect+3)& (0+255),w,b
 11163   008DAE  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 11164   008DB0  6F6F               	movwf	(?_clst2sect+3)& (0+255),b
 11165   008DB2                     l919:
 11166                           
 11167                           ; BSR set to: 0
 11168   008DB2  0012               	return		;funcret
 11169   008DB4                     __end_of_clst2sect:
 11170                           	callstack 0
 11171                           
 11172 ;; *************** function _create_chain *****************
 11173 ;; Defined at:
 11174 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  obj             2  148[BANK0 ] PTR struct .
 11177 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 11178 ;;  clst            4  150[BANK0 ] unsigned long 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  cs              4   19[BANK1 ] unsigned long 
 11181 ;;  ncl             4   13[BANK1 ] unsigned long 
 11182 ;;  scl             4    9[BANK1 ] unsigned long 
 11183 ;;  fs              2   17[BANK1 ] PTR struct .
 11184 ;;		 -> FatFs(563), NULL(0), 
 11185 ;;  res             1    8[BANK1 ] enum E68
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  4  148[BANK0 ] unsigned long 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11195 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;      Totals:         0       6      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;Total ram usage:       29 bytes
 11200 ;; Hardware stack levels used: 1
 11201 ;; Hardware stack levels required when called: 13
 11202 ;; This function calls:
 11203 ;;		_get_fat
 11204 ;;		_put_fat
 11205 ;; This function is called by:
 11206 ;;		_dir_next
 11207 ;;		_f_write
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text34
 11212   002DF4                     __ptext34:
 11213                           	callstack 0
 11214   002DF4                     _create_chain:
 11215                           	callstack 15
 11216   002DF4                     
 11217                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
 11218   002DF4  0060  F3D3  FFD9   	movff	create_chain@obj,fsr2l
 11219   002DFA  0060  F3D7  FFDA   	movff	create_chain@obj+1,fsr2h
 11220   002E00  006F FF78  F111    	movff	postinc2,create_chain@fs
 11221   002E06  006F FF74  F112    	movff	postdec2,create_chain@fs+1
 11222   002E0C                     
 11223                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
 11224   002E0C  0100               	movlb	0	; () banked
 11225   002E0E  51F6               	movf	create_chain@clst& (0+255),w,b
 11226   002E10  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 11227   002E12  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 11228   002E14  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 11229   002E16  A4D8               	btfss	status,2,c
 11230   002E18  EF10  F017         	goto	u17831
 11231   002E1C  EF12  F017         	goto	u17830
 11232   002E20                     u17831:
 11233   002E20  EF4F  F017         	goto	l15211
 11234   002E24                     u17830:
 11235   002E24                     
 11236                           ; BSR set to: 0
 11237                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
 11238   002E24  0101               	movlb	1	; () banked
 11239   002E26  EE20 F00B          	lfsr	2,11
 11240   002E2A  5111               	movf	create_chain@fs& (0+255),w,b
 11241   002E2C  26D9               	addwf	fsr2l,f,c
 11242   002E2E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11243   002E30  22DA               	addwfc	fsr2h,f,c
 11244   002E32  006F FF78  F109    	movff	postinc2,create_chain@scl
 11245   002E38  006F FF78  F10A    	movff	postinc2,create_chain@scl+1
 11246   002E3E  006F FF78  F10B    	movff	postinc2,create_chain@scl+2
 11247   002E44  006F FF78  F10C    	movff	postinc2,create_chain@scl+3
 11248   002E4A                     
 11249                           ; BSR set to: 1
 11250                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 11251   002E4A  5109               	movf	create_chain@scl& (0+255),w,b
 11252   002E4C  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 11253   002E4E  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 11254   002E50  110C               	iorwf	(create_chain@scl+3)& (0+255),w,b
 11255   002E52  B4D8               	btfsc	status,2,c
 11256   002E54  EF2E  F017         	goto	u17841
 11257   002E58  EF30  F017         	goto	u17840
 11258   002E5C                     u17841:
 11259   002E5C  EF45  F017         	goto	l15209
 11260   002E60                     u17840:
 11261   002E60                     
 11262                           ; BSR set to: 1
 11263   002E60  EE20 F017          	lfsr	2,23
 11264   002E64  5111               	movf	create_chain@fs& (0+255),w,b
 11265   002E66  26D9               	addwf	fsr2l,f,c
 11266   002E68  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11267   002E6A  22DA               	addwfc	fsr2h,f,c
 11268   002E6C  50DE               	movf	postinc2,w,c
 11269   002E6E  5D09               	subwf	create_chain@scl& (0+255),w,b
 11270   002E70  50DE               	movf	postinc2,w,c
 11271   002E72  590A               	subwfb	(create_chain@scl+1)& (0+255),w,b
 11272   002E74  50DE               	movf	postinc2,w,c
 11273   002E76  590B               	subwfb	(create_chain@scl+2)& (0+255),w,b
 11274   002E78  50DE               	movf	postinc2,w,c
 11275   002E7A  590C               	subwfb	(create_chain@scl+3)& (0+255),w,b
 11276   002E7C  A0D8               	btfss	status,0,c
 11277   002E7E  EF43  F017         	goto	u17851
 11278   002E82  EF45  F017         	goto	u17850
 11279   002E86                     u17851:
 11280   002E86  EFB5  F017         	goto	l15227
 11281   002E8A                     u17850:
 11282   002E8A                     l15209:
 11283                           
 11284                           ; BSR set to: 1
 11285   002E8A  0E01               	movlw	1
 11286   002E8C  6F09               	movwf	create_chain@scl& (0+255),b
 11287   002E8E  0E00               	movlw	0
 11288   002E90  6F0A               	movwf	(create_chain@scl+1)& (0+255),b
 11289   002E92  0E00               	movlw	0
 11290   002E94  6F0B               	movwf	(create_chain@scl+2)& (0+255),b
 11291   002E96  0E00               	movlw	0
 11292   002E98  6F0C               	movwf	(create_chain@scl+3)& (0+255),b
 11293   002E9A  EFB5  F017         	goto	l15227
 11294   002E9E                     l15211:
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
 11298   002E9E  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11299   002EA2  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11300   002EA6  C0F6  F0D5         	movff	create_chain@clst,get_fat@clst
 11301   002EAA  C0F7  F0D6         	movff	create_chain@clst+1,get_fat@clst+1
 11302   002EAE  C0F8  F0D7         	movff	create_chain@clst+2,get_fat@clst+2
 11303   002EB2  C0F9  F0D8         	movff	create_chain@clst+3,get_fat@clst+3
 11304   002EB6  ECE4  F027         	call	_get_fat	;wreg free
 11305   002EBA  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11306   002EBE  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11307   002EC2  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11308   002EC6  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11309   002ECA                     
 11310                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
 11311   002ECA  0101               	movlb	1	; () banked
 11312   002ECC  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 11313   002ECE  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11314   002ED0  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11315   002ED2  E107               	bnz	u17861
 11316   002ED4  0E02               	movlw	2
 11317   002ED6  5D13               	subwf	create_chain@cs& (0+255),w,b
 11318   002ED8  B0D8               	btfsc	status,0,c
 11319   002EDA  EF71  F017         	goto	u17861
 11320   002EDE  EF73  F017         	goto	u17860
 11321   002EE2                     u17861:
 11322   002EE2  EF7E  F017         	goto	l15219
 11323   002EE6                     u17860:
 11324   002EE6                     
 11325                           ; BSR set to: 1
 11326   002EE6  0E01               	movlw	1
 11327   002EE8  0100               	movlb	0	; () banked
 11328   002EEA  6FF4               	movwf	?_create_chain& (0+255),b
 11329   002EEC  0E00               	movlw	0
 11330   002EEE  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 11331   002EF0  0E00               	movlw	0
 11332   002EF2  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 11333   002EF4  0E00               	movlw	0
 11334   002EF6  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 11335   002EF8  EFEF  F019         	goto	l993
 11336   002EFC                     l15219:
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
 11340   002EFC  2913               	incf	create_chain@cs& (0+255),w,b
 11341   002EFE  E10A               	bnz	u17871
 11342   002F00  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11343   002F02  E108               	bnz	u17871
 11344   002F04  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11345   002F06  E106               	bnz	u17871
 11346   002F08  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11347   002F0A  A4D8               	btfss	status,2,c
 11348   002F0C  EF8A  F017         	goto	u17871
 11349   002F10  EF8C  F017         	goto	u17870
 11350   002F14                     u17871:
 11351   002F14  EF96  F017         	goto	l15223
 11352   002F18                     u17870:
 11353   002F18                     l15221:
 11354                           
 11355                           ; BSR set to: 1
 11356   002F18  C113  F0F4         	movff	create_chain@cs,?_create_chain
 11357   002F1C  C114  F0F5         	movff	create_chain@cs+1,?_create_chain+1
 11358   002F20  C115  F0F6         	movff	create_chain@cs+2,?_create_chain+2
 11359   002F24  C116  F0F7         	movff	create_chain@cs+3,?_create_chain+3
 11360   002F28  EFEF  F019         	goto	l993
 11361   002F2C                     l15223:
 11362                           
 11363                           ; BSR set to: 1
 11364                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
 11365   002F2C  EE20 F017          	lfsr	2,23
 11366   002F30  5111               	movf	create_chain@fs& (0+255),w,b
 11367   002F32  26D9               	addwf	fsr2l,f,c
 11368   002F34  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11369   002F36  22DA               	addwfc	fsr2h,f,c
 11370   002F38  50DE               	movf	postinc2,w,c
 11371   002F3A  5D13               	subwf	create_chain@cs& (0+255),w,b
 11372   002F3C  50DE               	movf	postinc2,w,c
 11373   002F3E  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 11374   002F40  50DE               	movf	postinc2,w,c
 11375   002F42  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 11376   002F44  50DE               	movf	postinc2,w,c
 11377   002F46  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 11378   002F48  B0D8               	btfsc	status,0,c
 11379   002F4A  EFA9  F017         	goto	u17881
 11380   002F4E  EFAB  F017         	goto	u17880
 11381   002F52                     u17881:
 11382   002F52  EFAD  F017         	goto	l995
 11383   002F56                     u17880:
 11384   002F56  EF8C  F017         	goto	l15221
 11385   002F5A                     l995:
 11386                           
 11387                           ; BSR set to: 1
 11388                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
 11389   002F5A  C0F6  F109         	movff	create_chain@clst,create_chain@scl
 11390   002F5E  C0F7  F10A         	movff	create_chain@clst+1,create_chain@scl+1
 11391   002F62  C0F8  F10B         	movff	create_chain@clst+2,create_chain@scl+2
 11392   002F66  C0F9  F10C         	movff	create_chain@clst+3,create_chain@scl+3
 11393   002F6A                     l15227:
 11394                           
 11395                           ; BSR set to: 1
 11396                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
 11397   002F6A  EE20 F00F          	lfsr	2,15
 11398   002F6E  5111               	movf	create_chain@fs& (0+255),w,b
 11399   002F70  26D9               	addwf	fsr2l,f,c
 11400   002F72  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11401   002F74  22DA               	addwfc	fsr2h,f,c
 11402   002F76  50DE               	movf	postinc2,w,c
 11403   002F78  10DE               	iorwf	postinc2,w,c
 11404   002F7A  10DE               	iorwf	postinc2,w,c
 11405   002F7C  10DE               	iorwf	postinc2,w,c
 11406   002F7E  A4D8               	btfss	status,2,c
 11407   002F80  EFC4  F017         	goto	u17891
 11408   002F84  EFC6  F017         	goto	u17890
 11409   002F88                     u17891:
 11410   002F88  EFD1  F017         	goto	l15233
 11411   002F8C                     u17890:
 11412   002F8C                     l15229:
 11413                           
 11414                           ; BSR set to: 1
 11415   002F8C  0E00               	movlw	0
 11416   002F8E  0100               	movlb	0	; () banked
 11417   002F90  6FF4               	movwf	?_create_chain& (0+255),b
 11418   002F92  0E00               	movlw	0
 11419   002F94  6FF5               	movwf	(?_create_chain+1)& (0+255),b
 11420   002F96  0E00               	movlw	0
 11421   002F98  6FF6               	movwf	(?_create_chain+2)& (0+255),b
 11422   002F9A  0E00               	movlw	0
 11423   002F9C  6FF7               	movwf	(?_create_chain+3)& (0+255),b
 11424   002F9E  EFEF  F019         	goto	l993
 11425   002FA2                     l15233:
 11426                           
 11427                           ; BSR set to: 1
 11428                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
 11429   002FA2  0E00               	movlw	0
 11430   002FA4  6F0D               	movwf	create_chain@ncl& (0+255),b
 11431   002FA6  0E00               	movlw	0
 11432   002FA8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11433   002FAA  0E00               	movlw	0
 11434   002FAC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11435   002FAE  0E00               	movlw	0
 11436   002FB0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11437   002FB2                     
 11438                           ; BSR set to: 1
 11439                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
 11440   002FB2  0100               	movlb	0	; () banked
 11441   002FB4  51F6               	movf	create_chain@clst& (0+255),w,b
 11442   002FB6  0101               	movlb	1	; () banked
 11443   002FB8  1909               	xorwf	create_chain@scl& (0+255),w,b
 11444   002FBA  E113               	bnz	u17901
 11445   002FBC  0100               	movlb	0	; () banked
 11446   002FBE  51F7               	movf	(create_chain@clst+1)& (0+255),w,b
 11447   002FC0  0101               	movlb	1	; () banked
 11448   002FC2  190A               	xorwf	(create_chain@scl+1)& (0+255),w,b
 11449   002FC4  E10E               	bnz	u17901
 11450   002FC6  0100               	movlb	0	; () banked
 11451   002FC8  51F8               	movf	(create_chain@clst+2)& (0+255),w,b
 11452   002FCA  0101               	movlb	1	; () banked
 11453   002FCC  190B               	xorwf	(create_chain@scl+2)& (0+255),w,b
 11454   002FCE  E109               	bnz	u17901
 11455   002FD0  0100               	movlb	0	; () banked
 11456   002FD2  51F9               	movf	(create_chain@clst+3)& (0+255),w,b
 11457   002FD4  0101               	movlb	1	; () banked
 11458   002FD6  190C               	xorwf	(create_chain@scl+3)& (0+255),w,b
 11459   002FD8  A4D8               	btfss	status,2,c
 11460   002FDA  EFF1  F017         	goto	u17901
 11461   002FDE  EFF3  F017         	goto	u17900
 11462   002FE2                     u17901:
 11463   002FE2  EF9D  F018         	goto	l15261
 11464   002FE6                     u17900:
 11465   002FE6                     
 11466                           ; BSR set to: 1
 11467                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
 11468   002FE6  0E01               	movlw	1
 11469   002FE8  2509               	addwf	create_chain@scl& (0+255),w,b
 11470   002FEA  6F0D               	movwf	create_chain@ncl& (0+255),b
 11471   002FEC  0E00               	movlw	0
 11472   002FEE  210A               	addwfc	(create_chain@scl+1)& (0+255),w,b
 11473   002FF0  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11474   002FF2  0E00               	movlw	0
 11475   002FF4  210B               	addwfc	(create_chain@scl+2)& (0+255),w,b
 11476   002FF6  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11477   002FF8  0E00               	movlw	0
 11478   002FFA  210C               	addwfc	(create_chain@scl+3)& (0+255),w,b
 11479   002FFC  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11480   002FFE                     
 11481                           ; BSR set to: 1
 11482                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
 11483   002FFE  EE20 F017          	lfsr	2,23
 11484   003002  5111               	movf	create_chain@fs& (0+255),w,b
 11485   003004  26D9               	addwf	fsr2l,f,c
 11486   003006  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11487   003008  22DA               	addwfc	fsr2h,f,c
 11488   00300A  50DE               	movf	postinc2,w,c
 11489   00300C  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 11490   00300E  50DE               	movf	postinc2,w,c
 11491   003010  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 11492   003012  50DE               	movf	postinc2,w,c
 11493   003014  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 11494   003016  50DE               	movf	postinc2,w,c
 11495   003018  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 11496   00301A  A0D8               	btfss	status,0,c
 11497   00301C  EF12  F018         	goto	u17911
 11498   003020  EF14  F018         	goto	u17910
 11499   003024                     u17911:
 11500   003024  EF1C  F018         	goto	l15243
 11501   003028                     u17910:
 11502   003028                     
 11503                           ; BSR set to: 1
 11504   003028  0E02               	movlw	2
 11505   00302A  6F0D               	movwf	create_chain@ncl& (0+255),b
 11506   00302C  0E00               	movlw	0
 11507   00302E  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11508   003030  0E00               	movlw	0
 11509   003032  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11510   003034  0E00               	movlw	0
 11511   003036  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11512   003038                     l15243:
 11513                           
 11514                           ; BSR set to: 1
 11515                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
 11516   003038  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11517   00303C  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11518   003040  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 11519   003044  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 11520   003048  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 11521   00304C  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 11522   003050  ECE4  F027         	call	_get_fat	;wreg free
 11523   003054  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11524   003058  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11525   00305C  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11526   003060  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11527   003064                     
 11528                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 11529   003064  0101               	movlb	1	; () banked
 11530   003066  0513               	decf	create_chain@cs& (0+255),w,b
 11531   003068  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11532   00306A  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11533   00306C  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11534   00306E  B4D8               	btfsc	status,2,c
 11535   003070  EF3C  F018         	goto	u17921
 11536   003074  EF3E  F018         	goto	u17920
 11537   003078                     u17921:
 11538   003078  EF8C  F017         	goto	l15221
 11539   00307C                     u17920:
 11540   00307C                     
 11541                           ; BSR set to: 1
 11542   00307C  2913               	incf	create_chain@cs& (0+255),w,b
 11543   00307E  E10A               	bnz	u17931
 11544   003080  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11545   003082  E108               	bnz	u17931
 11546   003084  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11547   003086  E106               	bnz	u17931
 11548   003088  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11549   00308A  A4D8               	btfss	status,2,c
 11550   00308C  EF4A  F018         	goto	u17931
 11551   003090  EF4C  F018         	goto	u17930
 11552   003094                     u17931:
 11553   003094  EF4E  F018         	goto	l15249
 11554   003098                     u17930:
 11555   003098  EF8C  F017         	goto	l15221
 11556   00309C                     l15249:
 11557                           
 11558                           ; BSR set to: 1
 11559                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
 11560   00309C  5113               	movf	create_chain@cs& (0+255),w,b
 11561   00309E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11562   0030A0  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11563   0030A2  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11564   0030A4  B4D8               	btfsc	status,2,c
 11565   0030A6  EF57  F018         	goto	u17941
 11566   0030AA  EF59  F018         	goto	u17940
 11567   0030AE                     u17941:
 11568   0030AE  EF9D  F018         	goto	l15261
 11569   0030B2                     u17940:
 11570   0030B2                     
 11571                           ; BSR set to: 1
 11572                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
 11573   0030B2  EE20 F00B          	lfsr	2,11
 11574   0030B6  5111               	movf	create_chain@fs& (0+255),w,b
 11575   0030B8  26D9               	addwf	fsr2l,f,c
 11576   0030BA  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11577   0030BC  22DA               	addwfc	fsr2h,f,c
 11578   0030BE  006F FF78  F113    	movff	postinc2,create_chain@cs
 11579   0030C4  006F FF78  F114    	movff	postinc2,create_chain@cs+1
 11580   0030CA  006F FF78  F115    	movff	postinc2,create_chain@cs+2
 11581   0030D0  006F FF78  F116    	movff	postinc2,create_chain@cs+3
 11582   0030D6                     
 11583                           ; BSR set to: 1
 11584                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 11585   0030D6  5116               	movf	(create_chain@cs+3)& (0+255),w,b
 11586   0030D8  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11587   0030DA  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11588   0030DC  E109               	bnz	u17950
 11589   0030DE  0E02               	movlw	2
 11590   0030E0  5D13               	subwf	create_chain@cs& (0+255),w,b
 11591   0030E2  A0D8               	btfss	status,0,c
 11592   0030E4  EF76  F018         	goto	u17951
 11593   0030E8  EF78  F018         	goto	u17950
 11594   0030EC                     u17951:
 11595   0030EC  EF95  F018         	goto	l15259
 11596   0030F0                     u17950:
 11597   0030F0                     
 11598                           ; BSR set to: 1
 11599   0030F0  EE20 F017          	lfsr	2,23
 11600   0030F4  5111               	movf	create_chain@fs& (0+255),w,b
 11601   0030F6  26D9               	addwf	fsr2l,f,c
 11602   0030F8  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11603   0030FA  22DA               	addwfc	fsr2h,f,c
 11604   0030FC  50DE               	movf	postinc2,w,c
 11605   0030FE  5D13               	subwf	create_chain@cs& (0+255),w,b
 11606   003100  50DE               	movf	postinc2,w,c
 11607   003102  5914               	subwfb	(create_chain@cs+1)& (0+255),w,b
 11608   003104  50DE               	movf	postinc2,w,c
 11609   003106  5915               	subwfb	(create_chain@cs+2)& (0+255),w,b
 11610   003108  50DE               	movf	postinc2,w,c
 11611   00310A  5916               	subwfb	(create_chain@cs+3)& (0+255),w,b
 11612   00310C  B0D8               	btfsc	status,0,c
 11613   00310E  EF8B  F018         	goto	u17961
 11614   003112  EF8D  F018         	goto	u17960
 11615   003116                     u17961:
 11616   003116  EF95  F018         	goto	l15259
 11617   00311A                     u17960:
 11618   00311A                     
 11619                           ; BSR set to: 1
 11620   00311A  C113  F109         	movff	create_chain@cs,create_chain@scl
 11621   00311E  C114  F10A         	movff	create_chain@cs+1,create_chain@scl+1
 11622   003122  C115  F10B         	movff	create_chain@cs+2,create_chain@scl+2
 11623   003126  C116  F10C         	movff	create_chain@cs+3,create_chain@scl+3
 11624   00312A                     l15259:
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
 11628   00312A  0E00               	movlw	0
 11629   00312C  6F0D               	movwf	create_chain@ncl& (0+255),b
 11630   00312E  0E00               	movlw	0
 11631   003130  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11632   003132  0E00               	movlw	0
 11633   003134  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11634   003136  0E00               	movlw	0
 11635   003138  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11636   00313A                     l15261:
 11637                           
 11638                           ; BSR set to: 1
 11639                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
 11640   00313A  510D               	movf	create_chain@ncl& (0+255),w,b
 11641   00313C  110E               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 11642   00313E  110F               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 11643   003140  1110               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 11644   003142  A4D8               	btfss	status,2,c
 11645   003144  EFA6  F018         	goto	u17971
 11646   003148  EFA8  F018         	goto	u17970
 11647   00314C                     u17971:
 11648   00314C  EF35  F019         	goto	l15293
 11649   003150                     u17970:
 11650   003150                     
 11651                           ; BSR set to: 1
 11652                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
 11653   003150  C109  F10D         	movff	create_chain@scl,create_chain@ncl
 11654   003154  C10A  F10E         	movff	create_chain@scl+1,create_chain@ncl+1
 11655   003158  C10B  F10F         	movff	create_chain@scl+2,create_chain@ncl+2
 11656   00315C  C10C  F110         	movff	create_chain@scl+3,create_chain@ncl+3
 11657   003160                     l15265:
 11658                           
 11659                           ; BSR set to: 1
 11660                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
 11661   003160  0E01               	movlw	1
 11662   003162  270D               	addwf	create_chain@ncl& (0+255),f,b
 11663   003164  0E00               	movlw	0
 11664   003166  230E               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 11665   003168  230F               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 11666   00316A  2310               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 11667   00316C                     
 11668                           ; BSR set to: 1
 11669                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
 11670   00316C  EE20 F017          	lfsr	2,23
 11671   003170  5111               	movf	create_chain@fs& (0+255),w,b
 11672   003172  26D9               	addwf	fsr2l,f,c
 11673   003174  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11674   003176  22DA               	addwfc	fsr2h,f,c
 11675   003178  50DE               	movf	postinc2,w,c
 11676   00317A  5D0D               	subwf	create_chain@ncl& (0+255),w,b
 11677   00317C  50DE               	movf	postinc2,w,c
 11678   00317E  590E               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 11679   003180  50DE               	movf	postinc2,w,c
 11680   003182  590F               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 11681   003184  50DE               	movf	postinc2,w,c
 11682   003186  5910               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 11683   003188  A0D8               	btfss	status,0,c
 11684   00318A  EFC9  F018         	goto	u17981
 11685   00318E  EFCB  F018         	goto	u17980
 11686   003192                     u17981:
 11687   003192  EFE2  F018         	goto	l15277
 11688   003196                     u17980:
 11689   003196                     
 11690                           ; BSR set to: 1
 11691                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
 11692   003196  0E02               	movlw	2
 11693   003198  6F0D               	movwf	create_chain@ncl& (0+255),b
 11694   00319A  0E00               	movlw	0
 11695   00319C  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11696   00319E  0E00               	movlw	0
 11697   0031A0  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11698   0031A2  0E00               	movlw	0
 11699   0031A4  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11700   0031A6                     
 11701                           ; BSR set to: 1
 11702                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
 11703   0031A6  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 11704   0031A8  110B               	iorwf	(create_chain@scl+2)& (0+255),w,b
 11705   0031AA  110A               	iorwf	(create_chain@scl+1)& (0+255),w,b
 11706   0031AC  E107               	bnz	u17991
 11707   0031AE  0E02               	movlw	2
 11708   0031B0  5D09               	subwf	create_chain@scl& (0+255),w,b
 11709   0031B2  B0D8               	btfsc	status,0,c
 11710   0031B4  EFDE  F018         	goto	u17991
 11711   0031B8  EFE0  F018         	goto	u17990
 11712   0031BC                     u17991:
 11713   0031BC  EFE2  F018         	goto	l15277
 11714   0031C0                     u17990:
 11715   0031C0  EFC6  F017         	goto	l15229
 11716   0031C4                     l15277:
 11717                           
 11718                           ; BSR set to: 1
 11719                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
 11720   0031C4  C0F4  F0D3         	movff	create_chain@obj,get_fat@obj
 11721   0031C8  C0F5  F0D4         	movff	create_chain@obj+1,get_fat@obj+1
 11722   0031CC  C10D  F0D5         	movff	create_chain@ncl,get_fat@clst
 11723   0031D0  C10E  F0D6         	movff	create_chain@ncl+1,get_fat@clst+1
 11724   0031D4  C10F  F0D7         	movff	create_chain@ncl+2,get_fat@clst+2
 11725   0031D8  C110  F0D8         	movff	create_chain@ncl+3,get_fat@clst+3
 11726   0031DC  ECE4  F027         	call	_get_fat	;wreg free
 11727   0031E0  C0D3  F113         	movff	?_get_fat,create_chain@cs
 11728   0031E4  C0D4  F114         	movff	?_get_fat+1,create_chain@cs+1
 11729   0031E8  C0D5  F115         	movff	?_get_fat+2,create_chain@cs+2
 11730   0031EC  C0D6  F116         	movff	?_get_fat+3,create_chain@cs+3
 11731   0031F0                     
 11732                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
 11733   0031F0  0101               	movlb	1	; () banked
 11734   0031F2  5113               	movf	create_chain@cs& (0+255),w,b
 11735   0031F4  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11736   0031F6  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11737   0031F8  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11738   0031FA  A4D8               	btfss	status,2,c
 11739   0031FC  EF02  F019         	goto	u18001
 11740   003200  EF04  F019         	goto	u18000
 11741   003204                     u18001:
 11742   003204  EF06  F019         	goto	l15283
 11743   003208                     u18000:
 11744   003208  EF35  F019         	goto	l15293
 11745   00320C                     l15283:
 11746                           
 11747                           ; BSR set to: 1
 11748                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 11749   00320C  0513               	decf	create_chain@cs& (0+255),w,b
 11750   00320E  1114               	iorwf	(create_chain@cs+1)& (0+255),w,b
 11751   003210  1115               	iorwf	(create_chain@cs+2)& (0+255),w,b
 11752   003212  1116               	iorwf	(create_chain@cs+3)& (0+255),w,b
 11753   003214  B4D8               	btfsc	status,2,c
 11754   003216  EF0F  F019         	goto	u18011
 11755   00321A  EF11  F019         	goto	u18010
 11756   00321E                     u18011:
 11757   00321E  EF8C  F017         	goto	l15221
 11758   003222                     u18010:
 11759   003222                     
 11760                           ; BSR set to: 1
 11761   003222  2913               	incf	create_chain@cs& (0+255),w,b
 11762   003224  E10A               	bnz	u18021
 11763   003226  2914               	incf	(create_chain@cs+1)& (0+255),w,b
 11764   003228  E108               	bnz	u18021
 11765   00322A  2915               	incf	(create_chain@cs+2)& (0+255),w,b
 11766   00322C  E106               	bnz	u18021
 11767   00322E  2916               	incf	(create_chain@cs+3)& (0+255),w,b
 11768   003230  A4D8               	btfss	status,2,c
 11769   003232  EF1D  F019         	goto	u18021
 11770   003236  EF1F  F019         	goto	u18020
 11771   00323A                     u18021:
 11772   00323A  EF21  F019         	goto	l15287
 11773   00323E                     u18020:
 11774   00323E  EF8C  F017         	goto	l15221
 11775   003242                     l15287:
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
 11779   003242  5109               	movf	create_chain@scl& (0+255),w,b
 11780   003244  190D               	xorwf	create_chain@ncl& (0+255),w,b
 11781   003246  E10D               	bnz	u18031
 11782   003248  510A               	movf	(create_chain@scl+1)& (0+255),w,b
 11783   00324A  190E               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 11784   00324C  E10A               	bnz	u18031
 11785   00324E  510B               	movf	(create_chain@scl+2)& (0+255),w,b
 11786   003250  190F               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 11787   003252  E107               	bnz	u18031
 11788   003254  510C               	movf	(create_chain@scl+3)& (0+255),w,b
 11789   003256  1910               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 11790   003258  A4D8               	btfss	status,2,c
 11791   00325A  EF31  F019         	goto	u18031
 11792   00325E  EF33  F019         	goto	u18030
 11793   003262                     u18031:
 11794   003262  EFB0  F018         	goto	l15265
 11795   003266                     u18030:
 11796   003266  EFC6  F017         	goto	l15229
 11797   00326A                     l15293:
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 11801   00326A  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 11802   00326E  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 11803   003272  C10D  F0D5         	movff	create_chain@ncl,put_fat@clst
 11804   003276  C10E  F0D6         	movff	create_chain@ncl+1,put_fat@clst+1
 11805   00327A  C10F  F0D7         	movff	create_chain@ncl+2,put_fat@clst+2
 11806   00327E  C110  F0D8         	movff	create_chain@ncl+3,put_fat@clst+3
 11807   003282  0EFF               	movlw	255
 11808   003284  0100               	movlb	0	; () banked
 11809   003286  6FD9               	movwf	put_fat@val& (0+255),b
 11810   003288  0EFF               	movlw	255
 11811   00328A  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 11812   00328C  0EFF               	movlw	255
 11813   00328E  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 11814   003290  0EFF               	movlw	255
 11815   003292  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 11816   003294  ECF0  F019         	call	_put_fat	;wreg free
 11817   003298  0101               	movlb	1	; () banked
 11818   00329A  6F08               	movwf	create_chain@res& (0+255),b
 11819   00329C                     
 11820                           ; BSR set to: 1
 11821                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
 11822   00329C  5108               	movf	create_chain@res& (0+255),w,b
 11823   00329E  A4D8               	btfss	status,2,c
 11824   0032A0  EF54  F019         	goto	u18041
 11825   0032A4  EF56  F019         	goto	u18040
 11826   0032A8                     u18041:
 11827   0032A8  EF7A  F019         	goto	l15301
 11828   0032AC                     u18040:
 11829   0032AC                     
 11830                           ; BSR set to: 1
 11831   0032AC  0100               	movlb	0	; () banked
 11832   0032AE  51F6               	movf	create_chain@clst& (0+255),w,b
 11833   0032B0  11F7               	iorwf	(create_chain@clst+1)& (0+255),w,b
 11834   0032B2  11F8               	iorwf	(create_chain@clst+2)& (0+255),w,b
 11835   0032B4  11F9               	iorwf	(create_chain@clst+3)& (0+255),w,b
 11836   0032B6  B4D8               	btfsc	status,2,c
 11837   0032B8  EF60  F019         	goto	u18051
 11838   0032BC  EF62  F019         	goto	u18050
 11839   0032C0                     u18051:
 11840   0032C0  EF7A  F019         	goto	l15301
 11841   0032C4                     u18050:
 11842   0032C4                     
 11843                           ; BSR set to: 0
 11844                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
 11845   0032C4  C111  F0D3         	movff	create_chain@fs,put_fat@fs
 11846   0032C8  C112  F0D4         	movff	create_chain@fs+1,put_fat@fs+1
 11847   0032CC  C0F6  F0D5         	movff	create_chain@clst,put_fat@clst
 11848   0032D0  C0F7  F0D6         	movff	create_chain@clst+1,put_fat@clst+1
 11849   0032D4  C0F8  F0D7         	movff	create_chain@clst+2,put_fat@clst+2
 11850   0032D8  C0F9  F0D8         	movff	create_chain@clst+3,put_fat@clst+3
 11851   0032DC  C10D  F0D9         	movff	create_chain@ncl,put_fat@val
 11852   0032E0  C10E  F0DA         	movff	create_chain@ncl+1,put_fat@val+1
 11853   0032E4  C10F  F0DB         	movff	create_chain@ncl+2,put_fat@val+2
 11854   0032E8  C110  F0DC         	movff	create_chain@ncl+3,put_fat@val+3
 11855   0032EC  ECF0  F019         	call	_put_fat	;wreg free
 11856   0032F0  0101               	movlb	1	; () banked
 11857   0032F2  6F08               	movwf	create_chain@res& (0+255),b
 11858   0032F4                     l15301:
 11859                           
 11860                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
 11861   0032F4  0101               	movlb	1	; () banked
 11862   0032F6  5108               	movf	create_chain@res& (0+255),w,b
 11863   0032F8  A4D8               	btfss	status,2,c
 11864   0032FA  EF81  F019         	goto	u18061
 11865   0032FE  EF83  F019         	goto	u18060
 11866   003302                     u18061:
 11867   003302  EFD1  F019         	goto	l15309
 11868   003306                     u18060:
 11869   003306                     
 11870                           ; BSR set to: 1
 11871                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
 11872   003306  EE20 F00B          	lfsr	2,11
 11873   00330A  5111               	movf	create_chain@fs& (0+255),w,b
 11874   00330C  26D9               	addwf	fsr2l,f,c
 11875   00330E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11876   003310  22DA               	addwfc	fsr2h,f,c
 11877   003312  0060  F437  FFDE   	movff	create_chain@ncl,postinc2
 11878   003318  0060  F43B  FFDE   	movff	create_chain@ncl+1,postinc2
 11879   00331E  0060  F43F  FFDE   	movff	create_chain@ncl+2,postinc2
 11880   003324  0060  F443  FFDE   	movff	create_chain@ncl+3,postinc2
 11881   00332A                     
 11882                           ; BSR set to: 1
 11883                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
 11884   00332A  EE20 F00F          	lfsr	2,15
 11885   00332E  5111               	movf	create_chain@fs& (0+255),w,b
 11886   003330  26D9               	addwf	fsr2l,f,c
 11887   003332  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11888   003334  22DA               	addwfc	fsr2h,f,c
 11889   003336  EE10 F017          	lfsr	1,23
 11890   00333A  5111               	movf	create_chain@fs& (0+255),w,b
 11891   00333C  26E1               	addwf	fsr1l,f,c
 11892   00333E  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11893   003340  22E2               	addwfc	fsr1h,f,c
 11894   003342  0EFE               	movlw	254
 11895   003344  24E6               	addwf	postinc1,w,c
 11896   003346  6F04               	movwf	(??_create_chain+4)& (0+255),b
 11897   003348  0EFF               	movlw	255
 11898   00334A  20E6               	addwfc	postinc1,w,c
 11899   00334C  6F05               	movwf	(??_create_chain+5)& (0+255),b
 11900   00334E  0EFF               	movlw	255
 11901   003350  20E6               	addwfc	postinc1,w,c
 11902   003352  6F06               	movwf	(??_create_chain+6)& (0+255),b
 11903   003354  0EFF               	movlw	255
 11904   003356  20E6               	addwfc	postinc1,w,c
 11905   003358  6F07               	movwf	(??_create_chain+7)& (0+255),b
 11906   00335A  50DE               	movf	postinc2,w,c
 11907   00335C  5D04               	subwf	(??_create_chain+4)& (0+255),w,b
 11908   00335E  50DE               	movf	postinc2,w,c
 11909   003360  5905               	subwfb	(??_create_chain+5)& (0+255),w,b
 11910   003362  50DE               	movf	postinc2,w,c
 11911   003364  5906               	subwfb	(??_create_chain+6)& (0+255),w,b
 11912   003366  50DE               	movf	postinc2,w,c
 11913   003368  5907               	subwfb	(??_create_chain+7)& (0+255),w,b
 11914   00336A  A0D8               	btfss	status,0,c
 11915   00336C  EFBA  F019         	goto	u18071
 11916   003370  EFBC  F019         	goto	u18070
 11917   003374                     u18071:
 11918   003374  EFC7  F019         	goto	l1016
 11919   003378                     u18070:
 11920   003378                     
 11921                           ; BSR set to: 1
 11922   003378  EE20 F00F          	lfsr	2,15
 11923   00337C  5111               	movf	create_chain@fs& (0+255),w,b
 11924   00337E  26D9               	addwf	fsr2l,f,c
 11925   003380  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11926   003382  22DA               	addwfc	fsr2h,f,c
 11927   003384  06DE               	decf	postinc2,f,c
 11928   003386  0E00               	movlw	0
 11929   003388  5ADE               	subwfb	postinc2,f,c
 11930   00338A  5ADE               	subwfb	postinc2,f,c
 11931   00338C  5ADE               	subwfb	postinc2,f,c
 11932   00338E                     l1016:
 11933                           
 11934                           ; BSR set to: 1
 11935                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
 11936   00338E  EE20 F004          	lfsr	2,4
 11937   003392  5111               	movf	create_chain@fs& (0+255),w,b
 11938   003394  26D9               	addwf	fsr2l,f,c
 11939   003396  5112               	movf	(create_chain@fs+1)& (0+255),w,b
 11940   003398  22DA               	addwfc	fsr2h,f,c
 11941   00339A  0E00               	movlw	0
 11942   00339C  80DB               	bsf	plusw2,0,c
 11943                           
 11944                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
 11945   00339E  EFE7  F019         	goto	l1017
 11946   0033A2                     l15309:
 11947                           
 11948                           ; BSR set to: 1
 11949                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 11950   0033A2  0508               	decf	create_chain@res& (0+255),w,b
 11951   0033A4  B4D8               	btfsc	status,2,c
 11952   0033A6  EFD7  F019         	goto	u18081
 11953   0033AA  EFD9  F019         	goto	u18080
 11954   0033AE                     u18081:
 11955   0033AE  EFE3  F019         	goto	l1019
 11956   0033B2                     u18080:
 11957   0033B2                     
 11958                           ; BSR set to: 1
 11959   0033B2  0E01               	movlw	1
 11960   0033B4  6F0D               	movwf	create_chain@ncl& (0+255),b
 11961   0033B6  0E00               	movlw	0
 11962   0033B8  6F0E               	movwf	(create_chain@ncl+1)& (0+255),b
 11963   0033BA  0E00               	movlw	0
 11964   0033BC  6F0F               	movwf	(create_chain@ncl+2)& (0+255),b
 11965   0033BE  0E00               	movlw	0
 11966   0033C0  6F10               	movwf	(create_chain@ncl+3)& (0+255),b
 11967   0033C2  EFE7  F019         	goto	l1017
 11968   0033C6                     l1019:
 11969                           
 11970                           ; BSR set to: 1
 11971   0033C6  690D               	setf	create_chain@ncl& (0+255),b
 11972   0033C8  690E               	setf	(create_chain@ncl+1)& (0+255),b
 11973   0033CA  690F               	setf	(create_chain@ncl+2)& (0+255),b
 11974   0033CC  6910               	setf	(create_chain@ncl+3)& (0+255),b
 11975   0033CE                     l1017:
 11976                           
 11977                           ; BSR set to: 1
 11978                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
 11979   0033CE  C10D  F0F4         	movff	create_chain@ncl,?_create_chain
 11980   0033D2  C10E  F0F5         	movff	create_chain@ncl+1,?_create_chain+1
 11981   0033D6  C10F  F0F6         	movff	create_chain@ncl+2,?_create_chain+2
 11982   0033DA  C110  F0F7         	movff	create_chain@ncl+3,?_create_chain+3
 11983   0033DE                     l993:
 11984   0033DE  0012               	return		;funcret
 11985   0033E0                     __end_of_create_chain:
 11986                           	callstack 0
 11987                           
 11988 ;; *************** function _put_fat *****************
 11989 ;; Defined at:
 11990 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  fs              2  115[BANK0 ] PTR struct .
 11993 ;;		 -> FatFs(563), NULL(0), 
 11994 ;;  clst            4  117[BANK0 ] unsigned long 
 11995 ;;  val             4  121[BANK0 ] unsigned long 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  bc              2  145[BANK0 ] unsigned int 
 11998 ;;  p               2  143[BANK0 ] PTR unsigned char 
 11999 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 12000 ;;  res             1  147[BANK0 ] enum E68
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      enum E68
 12003 ;; Registers used:
 12004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12010 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12012 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12013 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;Total ram usage:       33 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; Hardware stack levels required when called: 12
 12017 ;; This function calls:
 12018 ;;		_ld_dword
 12019 ;;		_move_window
 12020 ;;		_st_dword
 12021 ;;		_st_word
 12022 ;; This function is called by:
 12023 ;;		_remove_chain
 12024 ;;		_create_chain
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text35
 12029   0033E0                     __ptext35:
 12030                           	callstack 0
 12031   0033E0                     _put_fat:
 12032                           	callstack 15
 12033   0033E0                     
 12034                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 12035   0033E0  0E02               	movlw	2
 12036   0033E2  0100               	movlb	0	; () banked
 12037   0033E4  6FF3               	movwf	put_fat@res& (0+255),b
 12038   0033E6                     
 12039                           ; BSR set to: 0
 12040                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 12041   0033E6  51D8               	movf	(put_fat@clst+3)& (0+255),w,b
 12042   0033E8  11D7               	iorwf	(put_fat@clst+2)& (0+255),w,b
 12043   0033EA  11D6               	iorwf	(put_fat@clst+1)& (0+255),w,b
 12044   0033EC  E109               	bnz	u17690
 12045   0033EE  0E02               	movlw	2
 12046   0033F0  5DD5               	subwf	put_fat@clst& (0+255),w,b
 12047   0033F2  A0D8               	btfss	status,0,c
 12048   0033F4  EFFE  F019         	goto	u17691
 12049   0033F8  EF00  F01A         	goto	u17690
 12050   0033FC                     u17691:
 12051   0033FC  EF80  F01C         	goto	l15183
 12052   003400                     u17690:
 12053   003400                     
 12054                           ; BSR set to: 0
 12055   003400  EE20 F017          	lfsr	2,23
 12056   003404  51D3               	movf	put_fat@fs& (0+255),w,b
 12057   003406  26D9               	addwf	fsr2l,f,c
 12058   003408  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12059   00340A  22DA               	addwfc	fsr2h,f,c
 12060   00340C  50DE               	movf	postinc2,w,c
 12061   00340E  5DD5               	subwf	put_fat@clst& (0+255),w,b
 12062   003410  50DE               	movf	postinc2,w,c
 12063   003412  59D6               	subwfb	(put_fat@clst+1)& (0+255),w,b
 12064   003414  50DE               	movf	postinc2,w,c
 12065   003416  59D7               	subwfb	(put_fat@clst+2)& (0+255),w,b
 12066   003418  50DE               	movf	postinc2,w,c
 12067   00341A  59D8               	subwfb	(put_fat@clst+3)& (0+255),w,b
 12068   00341C  B0D8               	btfsc	status,0,c
 12069   00341E  EF13  F01A         	goto	u17701
 12070   003422  EF15  F01A         	goto	u17700
 12071   003426                     u17701:
 12072   003426  EF80  F01C         	goto	l15183
 12073   00342A                     u17700:
 12074   00342A  EF6B  F01C         	goto	l15181
 12075   00342E                     l945:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 12079   00342E  C0D5  F0F1         	movff	put_fat@clst,put_fat@bc
 12080   003432  C0D6  F0F2         	movff	put_fat@clst+1,put_fat@bc+1
 12081   003436                     
 12082                           ; BSR set to: 0
 12083   003436  90D8               	bcf	status,0,c
 12084   003438  31F2               	rrcf	(put_fat@bc+1)& (0+255),w,b
 12085   00343A  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12086   00343C  31F1               	rrcf	put_fat@bc& (0+255),w,b
 12087   00343E  6FDD               	movwf	??_put_fat& (0+255),b
 12088   003440  51DD               	movf	??_put_fat& (0+255),w,b
 12089   003442  27F1               	addwf	put_fat@bc& (0+255),f,b
 12090   003444  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12091   003446  23F2               	addwfc	(put_fat@bc+1)& (0+255),f,b
 12092   003448                     
 12093                           ; BSR set to: 0
 12094                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 12095   003448  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12096   00344C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12097   003450  EE20 F023          	lfsr	2,35
 12098   003454  51D3               	movf	put_fat@fs& (0+255),w,b
 12099   003456  26D9               	addwf	fsr2l,f,c
 12100   003458  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12101   00345A  22DA               	addwfc	fsr2h,f,c
 12102   00345C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12103   003462  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12104   003468  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12105   00346E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12106   003474  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 12107   003478  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 12108   00347C  0E09               	movlw	9
 12109   00347E  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12110   003480                     u17715:
 12111   003480  90D8               	bcf	status,0,c
 12112   003482  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12113   003484  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12114   003486  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 12115   003488  EF40  F01A         	goto	u17715
 12116   00348C  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12117   00348E  25DD               	addwf	??_put_fat& (0+255),w,b
 12118   003490  6FCA               	movwf	move_window@sector& (0+255),b
 12119   003492  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 12120   003494  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 12121   003496  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12122   003498  0E00               	movlw	0
 12123   00349A  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 12124   00349C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12125   00349E  0E00               	movlw	0
 12126   0034A0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12127   0034A2  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12128   0034A4  ECDA  F046         	call	_move_window	;wreg free
 12129   0034A8  0100               	movlb	0	; () banked
 12130   0034AA  6FF3               	movwf	put_fat@res& (0+255),b
 12131   0034AC                     
 12132                           ; BSR set to: 0
 12133                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 12134   0034AC  51F3               	movf	put_fat@res& (0+255),w,b
 12135   0034AE  B4D8               	btfsc	status,2,c
 12136   0034B0  EF5C  F01A         	goto	u17721
 12137   0034B4  EF5E  F01A         	goto	u17720
 12138   0034B8                     u17721:
 12139   0034B8  EF60  F01A         	goto	l15127
 12140   0034BC                     u17720:
 12141   0034BC  EF80  F01C         	goto	l15183
 12142   0034C0                     l15127:
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 12146   0034C0  0EFF               	movlw	255
 12147   0034C2  15F1               	andwf	put_fat@bc& (0+255),w,b
 12148   0034C4  6FDD               	movwf	??_put_fat& (0+255),b
 12149   0034C6  0E01               	movlw	1
 12150   0034C8  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 12151   0034CA  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12152   0034CC  51DD               	movf	??_put_fat& (0+255),w,b
 12153   0034CE  25D3               	addwf	put_fat@fs& (0+255),w,b
 12154   0034D0  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12155   0034D2  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12156   0034D4  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12157   0034D6  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12158   0034D8  0E33               	movlw	51
 12159   0034DA  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 12160   0034DC  6FEF               	movwf	put_fat@p& (0+255),b
 12161   0034DE  0E00               	movlw	0
 12162   0034E0  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12163   0034E2  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 12164   0034E4                     
 12165                           ; BSR set to: 0
 12166   0034E4  4BF1               	infsnz	put_fat@bc& (0+255),f,b
 12167   0034E6  2BF2               	incf	(put_fat@bc+1)& (0+255),f,b
 12168   0034E8                     
 12169                           ; BSR set to: 0
 12170                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 12171   0034E8  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 12172   0034EA  EF79  F01A         	goto	u17731
 12173   0034EE  EF7B  F01A         	goto	u17730
 12174   0034F2                     u17731:
 12175   0034F2  EF80  F01A         	goto	l15135
 12176   0034F6                     u17730:
 12177   0034F6                     
 12178                           ; BSR set to: 0
 12179   0034F6  C0D9  F0EB         	movff	put_fat@val,_put_fat$2606
 12180   0034FA  6BEC               	clrf	(_put_fat$2606+1)& (0+255),b
 12181   0034FC  EF9C  F01A         	goto	l15137
 12182   003500                     l15135:
 12183                           
 12184                           ; BSR set to: 0
 12185   003500  51D9               	movf	put_fat@val& (0+255),w,b
 12186   003502  6FDD               	movwf	??_put_fat& (0+255),b
 12187   003504  6BDE               	clrf	(??_put_fat+1)& (0+255),b
 12188   003506  3BDD               	swapf	??_put_fat& (0+255),f,b
 12189   003508  3BDE               	swapf	(??_put_fat+1)& (0+255),f,b
 12190   00350A  0EF0               	movlw	240
 12191   00350C  17DE               	andwf	(??_put_fat+1)& (0+255),f,b
 12192   00350E  51DD               	movf	??_put_fat& (0+255),w,b
 12193   003510  0B0F               	andlw	15
 12194   003512  13DE               	iorwf	(??_put_fat+1)& (0+255),f,b
 12195   003514  0EF0               	movlw	240
 12196   003516  17DD               	andwf	??_put_fat& (0+255),f,b
 12197   003518  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12198   00351E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12199   003524  50DF               	movf	indf2,w,c
 12200   003526  0B0F               	andlw	15
 12201   003528  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12202   00352A  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 12203   00352C  51DD               	movf	??_put_fat& (0+255),w,b
 12204   00352E  11DF               	iorwf	(??_put_fat+2)& (0+255),w,b
 12205   003530  6FEB               	movwf	_put_fat$2606& (0+255),b
 12206   003532  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12207   003534  11E0               	iorwf	(??_put_fat+3)& (0+255),w,b
 12208   003536  6FEC               	movwf	(_put_fat$2606+1)& (0+255),b
 12209   003538                     l15137:
 12210                           
 12211                           ; BSR set to: 0
 12212   003538  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12213   00353E  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12214   003544  0060  F3AF  FFDF   	movff	_put_fat$2606,indf2
 12215   00354A                     
 12216                           ; BSR set to: 0
 12217                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 12218   00354A  EE20 F003          	lfsr	2,3
 12219   00354E  51D3               	movf	put_fat@fs& (0+255),w,b
 12220   003550  26D9               	addwf	fsr2l,f,c
 12221   003552  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12222   003554  22DA               	addwfc	fsr2h,f,c
 12223   003556  0E01               	movlw	1
 12224   003558  6EDF               	movwf	indf2,c
 12225   00355A                     
 12226                           ; BSR set to: 0
 12227                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 12228   00355A  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12229   00355E  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12230   003562  EE20 F023          	lfsr	2,35
 12231   003566  51D3               	movf	put_fat@fs& (0+255),w,b
 12232   003568  26D9               	addwf	fsr2l,f,c
 12233   00356A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12234   00356C  22DA               	addwfc	fsr2h,f,c
 12235   00356E  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12236   003574  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12237   00357A  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12238   003580  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12239   003586  C0F1  F0E1         	movff	put_fat@bc,??_put_fat+4
 12240   00358A  C0F2  F0E2         	movff	put_fat@bc+1,??_put_fat+5
 12241   00358E  0E09               	movlw	9
 12242   003590  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12243   003592                     u17745:
 12244   003592  90D8               	bcf	status,0,c
 12245   003594  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12246   003596  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12247   003598  2FE3               	decfsz	(??_put_fat+6)& (0+255),f,b
 12248   00359A  EFC9  F01A         	goto	u17745
 12249   00359E  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12250   0035A0  25DD               	addwf	??_put_fat& (0+255),w,b
 12251   0035A2  6FCA               	movwf	move_window@sector& (0+255),b
 12252   0035A4  51E2               	movf	(??_put_fat+5)& (0+255),w,b
 12253   0035A6  21DE               	addwfc	(??_put_fat+1)& (0+255),w,b
 12254   0035A8  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12255   0035AA  0E00               	movlw	0
 12256   0035AC  21DF               	addwfc	(??_put_fat+2)& (0+255),w,b
 12257   0035AE  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12258   0035B0  0E00               	movlw	0
 12259   0035B2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12260   0035B4  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12261   0035B6  ECDA  F046         	call	_move_window	;wreg free
 12262   0035BA  0100               	movlb	0	; () banked
 12263   0035BC  6FF3               	movwf	put_fat@res& (0+255),b
 12264   0035BE                     
 12265                           ; BSR set to: 0
 12266                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 12267   0035BE  51F3               	movf	put_fat@res& (0+255),w,b
 12268   0035C0  B4D8               	btfsc	status,2,c
 12269   0035C2  EFE5  F01A         	goto	u17751
 12270   0035C6  EFE7  F01A         	goto	u17750
 12271   0035CA                     u17751:
 12272   0035CA  EFE9  F01A         	goto	l15147
 12273   0035CE                     u17750:
 12274   0035CE  EF80  F01C         	goto	l15183
 12275   0035D2                     l15147:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 12279   0035D2  0EFF               	movlw	255
 12280   0035D4  15F1               	andwf	put_fat@bc& (0+255),w,b
 12281   0035D6  6FDD               	movwf	??_put_fat& (0+255),b
 12282   0035D8  0E01               	movlw	1
 12283   0035DA  15F2               	andwf	(put_fat@bc+1)& (0+255),w,b
 12284   0035DC  6FDE               	movwf	(??_put_fat+1)& (0+255),b
 12285   0035DE  51DD               	movf	??_put_fat& (0+255),w,b
 12286   0035E0  25D3               	addwf	put_fat@fs& (0+255),w,b
 12287   0035E2  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12288   0035E4  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12289   0035E6  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12290   0035E8  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12291   0035EA  0E33               	movlw	51
 12292   0035EC  25DF               	addwf	(??_put_fat+2)& (0+255),w,b
 12293   0035EE  6FEF               	movwf	put_fat@p& (0+255),b
 12294   0035F0  0E00               	movlw	0
 12295   0035F2  21E0               	addwfc	(??_put_fat+3)& (0+255),w,b
 12296   0035F4  6FF0               	movwf	(put_fat@p+1)& (0+255),b
 12297   0035F6                     
 12298                           ; BSR set to: 0
 12299                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 12300   0035F6  B1D5               	btfsc	put_fat@clst& (0+255),0,b
 12301   0035F8  EF00  F01B         	goto	u17761
 12302   0035FC  EF02  F01B         	goto	u17760
 12303   003600                     u17761:
 12304   003600  EF22  F01B         	goto	l15153
 12305   003604                     u17760:
 12306   003604                     
 12307                           ; BSR set to: 0
 12308   003604  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 12309   003608  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 12310   00360C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 12311   003610  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 12312   003614  C0DE  F0DD         	movff	??_put_fat+1,??_put_fat
 12313   003618  C0DF  F0DE         	movff	??_put_fat+2,??_put_fat+1
 12314   00361C  C0E0  F0DF         	movff	??_put_fat+3,??_put_fat+2
 12315   003620  6BE0               	clrf	(??_put_fat+3)& (0+255),b
 12316   003622  0E0F               	movlw	15
 12317   003624  17DD               	andwf	??_put_fat& (0+255),f,b
 12318   003626  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12319   00362C  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12320   003632  50DF               	movf	indf2,w,c
 12321   003634  0BF0               	andlw	240
 12322   003636  11DD               	iorwf	??_put_fat& (0+255),w,b
 12323   003638  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12324   00363A  51E1               	movf	(??_put_fat+4)& (0+255),w,b
 12325   00363C  6FED               	movwf	_put_fat$2607& (0+255),b
 12326   00363E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 12327   003640  EF38  F01B         	goto	l15155
 12328   003644                     l15153:
 12329                           
 12330                           ; BSR set to: 0
 12331   003644  C0D9  F0DD         	movff	put_fat@val,??_put_fat
 12332   003648  C0DA  F0DE         	movff	put_fat@val+1,??_put_fat+1
 12333   00364C  C0DB  F0DF         	movff	put_fat@val+2,??_put_fat+2
 12334   003650  C0DC  F0E0         	movff	put_fat@val+3,??_put_fat+3
 12335   003654  0E05               	movlw	5
 12336   003656  EF32  F01B         	goto	u17770
 12337   00365A                     u17775:
 12338   00365A  90D8               	bcf	status,0,c
 12339   00365C  33E0               	rrcf	(??_put_fat+3)& (0+255),f,b
 12340   00365E  33DF               	rrcf	(??_put_fat+2)& (0+255),f,b
 12341   003660  33DE               	rrcf	(??_put_fat+1)& (0+255),f,b
 12342   003662  33DD               	rrcf	??_put_fat& (0+255),f,b
 12343   003664                     u17770:
 12344   003664  2EE8               	decfsz	wreg,f,c
 12345   003666  EF2D  F01B         	goto	u17775
 12346   00366A  51DD               	movf	??_put_fat& (0+255),w,b
 12347   00366C  6FED               	movwf	_put_fat$2607& (0+255),b
 12348   00366E  6BEE               	clrf	(_put_fat$2607+1)& (0+255),b
 12349   003670                     l15155:
 12350                           
 12351                           ; BSR set to: 0
 12352   003670  0060  F3BF  FFD9   	movff	put_fat@p,fsr2l
 12353   003676  0060  F3C3  FFDA   	movff	put_fat@p+1,fsr2h
 12354   00367C  0060  F3B7  FFDF   	movff	_put_fat$2607,indf2
 12355                           
 12356                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 12357   003682  EE20 F003          	lfsr	2,3
 12358   003686  51D3               	movf	put_fat@fs& (0+255),w,b
 12359   003688  26D9               	addwf	fsr2l,f,c
 12360   00368A  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12361   00368C  22DA               	addwfc	fsr2h,f,c
 12362   00368E  0E01               	movlw	1
 12363   003690  6EDF               	movwf	indf2,c
 12364                           
 12365                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 12366   003692  EF80  F01C         	goto	l15183
 12367   003696                     l15157:
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 12371   003696  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12372   00369A  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12373   00369E  EE20 F023          	lfsr	2,35
 12374   0036A2  51D3               	movf	put_fat@fs& (0+255),w,b
 12375   0036A4  26D9               	addwf	fsr2l,f,c
 12376   0036A6  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12377   0036A8  22DA               	addwfc	fsr2h,f,c
 12378   0036AA  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12379   0036B0  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12380   0036B6  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12381   0036BC  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12382   0036C2  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 12383   0036C6  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 12384   0036CA  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 12385   0036CE  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 12386   0036D2  C0E2  F0E1         	movff	??_put_fat+5,??_put_fat+4
 12387   0036D6  C0E3  F0E2         	movff	??_put_fat+6,??_put_fat+5
 12388   0036DA  C0E4  F0E3         	movff	??_put_fat+7,??_put_fat+6
 12389   0036DE  6BE4               	clrf	(??_put_fat+7)& (0+255),b
 12390   0036E0  51DD               	movf	??_put_fat& (0+255),w,b
 12391   0036E2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12392   0036E4  6FCA               	movwf	move_window@sector& (0+255),b
 12393   0036E6  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12394   0036E8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12395   0036EA  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12396   0036EC  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12397   0036EE  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 12398   0036F0  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12399   0036F2  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12400   0036F4  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 12401   0036F6  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12402   0036F8  ECDA  F046         	call	_move_window	;wreg free
 12403   0036FC  0100               	movlb	0	; () banked
 12404   0036FE  6FF3               	movwf	put_fat@res& (0+255),b
 12405   003700                     
 12406                           ; BSR set to: 0
 12407                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 12408   003700  51F3               	movf	put_fat@res& (0+255),w,b
 12409   003702  B4D8               	btfsc	status,2,c
 12410   003704  EF86  F01B         	goto	u17781
 12411   003708  EF88  F01B         	goto	u17780
 12412   00370C                     u17781:
 12413   00370C  EF8A  F01B         	goto	l15163
 12414   003710                     u17780:
 12415   003710  EF80  F01C         	goto	l15183
 12416   003714                     l15163:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 12420   003714  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12421   003718  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12422   00371C  90D8               	bcf	status,0,c
 12423   00371E  37DD               	rlcf	??_put_fat& (0+255),f,b
 12424   003720  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12425   003722  0EFF               	movlw	255
 12426   003724  15DD               	andwf	??_put_fat& (0+255),w,b
 12427   003726  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12428   003728  0E01               	movlw	1
 12429   00372A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12430   00372C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12431   00372E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12432   003730  25D3               	addwf	put_fat@fs& (0+255),w,b
 12433   003732  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12434   003734  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12435   003736  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12436   003738  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12437   00373A  0E33               	movlw	51
 12438   00373C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12439   00373E  6F60               	movwf	st_word@ptr& (0+255),b
 12440   003740  0E00               	movlw	0
 12441   003742  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12442   003744  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 12443   003746  C0D9  F062         	movff	put_fat@val,st_word@val
 12444   00374A  C0DA  F063         	movff	put_fat@val+1,st_word@val+1
 12445   00374E  ECFA  F050         	call	_st_word	;wreg free
 12446   003752                     
 12447                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 12448   003752  0100               	movlb	0	; () banked
 12449   003754  EE20 F003          	lfsr	2,3
 12450   003758  51D3               	movf	put_fat@fs& (0+255),w,b
 12451   00375A  26D9               	addwf	fsr2l,f,c
 12452   00375C  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12453   00375E  22DA               	addwfc	fsr2h,f,c
 12454   003760  0E01               	movlw	1
 12455   003762  6EDF               	movwf	indf2,c
 12456                           
 12457                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 12458   003764  EF80  F01C         	goto	l15183
 12459   003768                     l15167:
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 12463   003768  C0D3  F0C8         	movff	put_fat@fs,move_window@fs
 12464   00376C  C0D4  F0C9         	movff	put_fat@fs+1,move_window@fs+1
 12465   003770  EE20 F023          	lfsr	2,35
 12466   003774  51D3               	movf	put_fat@fs& (0+255),w,b
 12467   003776  26D9               	addwf	fsr2l,f,c
 12468   003778  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12469   00377A  22DA               	addwfc	fsr2h,f,c
 12470   00377C  006F FF78  F0DD    	movff	postinc2,??_put_fat
 12471   003782  006F FF78  F0DE    	movff	postinc2,??_put_fat+1
 12472   003788  006F FF78  F0DF    	movff	postinc2,??_put_fat+2
 12473   00378E  006F FF78  F0E0    	movff	postinc2,??_put_fat+3
 12474   003794  C0D5  F0E1         	movff	put_fat@clst,??_put_fat+4
 12475   003798  C0D6  F0E2         	movff	put_fat@clst+1,??_put_fat+5
 12476   00379C  C0D7  F0E3         	movff	put_fat@clst+2,??_put_fat+6
 12477   0037A0  C0D8  F0E4         	movff	put_fat@clst+3,??_put_fat+7
 12478   0037A4  0E08               	movlw	8
 12479   0037A6  EFDA  F01B         	goto	u17790
 12480   0037AA                     u17795:
 12481   0037AA  90D8               	bcf	status,0,c
 12482   0037AC  33E4               	rrcf	(??_put_fat+7)& (0+255),f,b
 12483   0037AE  33E3               	rrcf	(??_put_fat+6)& (0+255),f,b
 12484   0037B0  33E2               	rrcf	(??_put_fat+5)& (0+255),f,b
 12485   0037B2  33E1               	rrcf	(??_put_fat+4)& (0+255),f,b
 12486   0037B4                     u17790:
 12487   0037B4  2EE8               	decfsz	wreg,f,c
 12488   0037B6  EFD5  F01B         	goto	u17795
 12489   0037BA  51DD               	movf	??_put_fat& (0+255),w,b
 12490   0037BC  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12491   0037BE  6FCA               	movwf	move_window@sector& (0+255),b
 12492   0037C0  51DE               	movf	(??_put_fat+1)& (0+255),w,b
 12493   0037C2  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12494   0037C4  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12495   0037C6  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12496   0037C8  21E3               	addwfc	(??_put_fat+6)& (0+255),w,b
 12497   0037CA  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12498   0037CC  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12499   0037CE  21E4               	addwfc	(??_put_fat+7)& (0+255),w,b
 12500   0037D0  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12501   0037D2  ECDA  F046         	call	_move_window	;wreg free
 12502   0037D6  0100               	movlb	0	; () banked
 12503   0037D8  6FF3               	movwf	put_fat@res& (0+255),b
 12504   0037DA                     
 12505                           ; BSR set to: 0
 12506                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 12507   0037DA  51F3               	movf	put_fat@res& (0+255),w,b
 12508   0037DC  B4D8               	btfsc	status,2,c
 12509   0037DE  EFF3  F01B         	goto	u17801
 12510   0037E2  EFF5  F01B         	goto	u17800
 12511   0037E6                     u17801:
 12512   0037E6  EFF7  F01B         	goto	l15175
 12513   0037EA                     u17800:
 12514   0037EA  EF80  F01C         	goto	l15183
 12515   0037EE                     l15175:
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 12519   0037EE  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12520   0037F2  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12521   0037F6  90D8               	bcf	status,0,c
 12522   0037F8  37DD               	rlcf	??_put_fat& (0+255),f,b
 12523   0037FA  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12524   0037FC  90D8               	bcf	status,0,c
 12525   0037FE  37DD               	rlcf	??_put_fat& (0+255),f,b
 12526   003800  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12527   003802  0EFF               	movlw	255
 12528   003804  15DD               	andwf	??_put_fat& (0+255),w,b
 12529   003806  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12530   003808  0E01               	movlw	1
 12531   00380A  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12532   00380C  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12533   00380E  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12534   003810  25D3               	addwf	put_fat@fs& (0+255),w,b
 12535   003812  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12536   003814  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12537   003816  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12538   003818  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12539   00381A  0E33               	movlw	51
 12540   00381C  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12541   00381E  6F60               	movwf	ld_dword@ptr& (0+255),b
 12542   003820  0E00               	movlw	0
 12543   003822  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12544   003824  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 12545   003826  EC0F  F048         	call	_ld_dword	;wreg free
 12546   00382A  0E00               	movlw	0
 12547   00382C  0100               	movlb	0	; () banked
 12548   00382E  1560               	andwf	?_ld_dword& (0+255),w,b
 12549   003830  6FE3               	movwf	(??_put_fat+6)& (0+255),b
 12550   003832  0E00               	movlw	0
 12551   003834  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 12552   003836  6FE4               	movwf	(??_put_fat+7)& (0+255),b
 12553   003838  0E00               	movlw	0
 12554   00383A  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 12555   00383C  6FE5               	movwf	(??_put_fat+8)& (0+255),b
 12556   00383E  0EF0               	movlw	240
 12557   003840  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 12558   003842  6FE6               	movwf	(??_put_fat+9)& (0+255),b
 12559   003844  0EFF               	movlw	255
 12560   003846  15D9               	andwf	put_fat@val& (0+255),w,b
 12561   003848  6FE7               	movwf	(??_put_fat+10)& (0+255),b
 12562   00384A  0EFF               	movlw	255
 12563   00384C  15DA               	andwf	(put_fat@val+1)& (0+255),w,b
 12564   00384E  6FE8               	movwf	(??_put_fat+11)& (0+255),b
 12565   003850  0EFF               	movlw	255
 12566   003852  15DB               	andwf	(put_fat@val+2)& (0+255),w,b
 12567   003854  6FE9               	movwf	(??_put_fat+12)& (0+255),b
 12568   003856  0E0F               	movlw	15
 12569   003858  15DC               	andwf	(put_fat@val+3)& (0+255),w,b
 12570   00385A  6FEA               	movwf	(??_put_fat+13)& (0+255),b
 12571   00385C  51E3               	movf	(??_put_fat+6)& (0+255),w,b
 12572   00385E  11E7               	iorwf	(??_put_fat+10)& (0+255),w,b
 12573   003860  6FD9               	movwf	put_fat@val& (0+255),b
 12574   003862  51E4               	movf	(??_put_fat+7)& (0+255),w,b
 12575   003864  11E8               	iorwf	(??_put_fat+11)& (0+255),w,b
 12576   003866  6FDA               	movwf	(put_fat@val+1)& (0+255),b
 12577   003868  51E5               	movf	(??_put_fat+8)& (0+255),w,b
 12578   00386A  11E9               	iorwf	(??_put_fat+12)& (0+255),w,b
 12579   00386C  6FDB               	movwf	(put_fat@val+2)& (0+255),b
 12580   00386E  51E6               	movf	(??_put_fat+9)& (0+255),w,b
 12581   003870  11EA               	iorwf	(??_put_fat+13)& (0+255),w,b
 12582   003872  6FDC               	movwf	(put_fat@val+3)& (0+255),b
 12583   003874                     
 12584                           ; BSR set to: 0
 12585                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 12586   003874  C0D5  F0DD         	movff	put_fat@clst,??_put_fat
 12587   003878  C0D6  F0DE         	movff	put_fat@clst+1,??_put_fat+1
 12588   00387C  90D8               	bcf	status,0,c
 12589   00387E  37DD               	rlcf	??_put_fat& (0+255),f,b
 12590   003880  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12591   003882  90D8               	bcf	status,0,c
 12592   003884  37DD               	rlcf	??_put_fat& (0+255),f,b
 12593   003886  37DE               	rlcf	(??_put_fat+1)& (0+255),f,b
 12594   003888  0EFF               	movlw	255
 12595   00388A  15DD               	andwf	??_put_fat& (0+255),w,b
 12596   00388C  6FDF               	movwf	(??_put_fat+2)& (0+255),b
 12597   00388E  0E01               	movlw	1
 12598   003890  15DE               	andwf	(??_put_fat+1)& (0+255),w,b
 12599   003892  6FE0               	movwf	(??_put_fat+3)& (0+255),b
 12600   003894  51DF               	movf	(??_put_fat+2)& (0+255),w,b
 12601   003896  25D3               	addwf	put_fat@fs& (0+255),w,b
 12602   003898  6FE1               	movwf	(??_put_fat+4)& (0+255),b
 12603   00389A  51E0               	movf	(??_put_fat+3)& (0+255),w,b
 12604   00389C  21D4               	addwfc	(put_fat@fs+1)& (0+255),w,b
 12605   00389E  6FE2               	movwf	(??_put_fat+5)& (0+255),b
 12606   0038A0  0E33               	movlw	51
 12607   0038A2  25E1               	addwf	(??_put_fat+4)& (0+255),w,b
 12608   0038A4  6F60               	movwf	st_dword@ptr& (0+255),b
 12609   0038A6  0E00               	movlw	0
 12610   0038A8  21E2               	addwfc	(??_put_fat+5)& (0+255),w,b
 12611   0038AA  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 12612   0038AC  C0D9  F062         	movff	put_fat@val,st_dword@val
 12613   0038B0  C0DA  F063         	movff	put_fat@val+1,st_dword@val+1
 12614   0038B4  C0DB  F064         	movff	put_fat@val+2,st_dword@val+2
 12615   0038B8  C0DC  F065         	movff	put_fat@val+3,st_dword@val+3
 12616   0038BC  EC87  F04A         	call	_st_dword	;wreg free
 12617   0038C0                     
 12618                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 12619   0038C0  0100               	movlb	0	; () banked
 12620   0038C2  EE20 F003          	lfsr	2,3
 12621   0038C6  51D3               	movf	put_fat@fs& (0+255),w,b
 12622   0038C8  26D9               	addwf	fsr2l,f,c
 12623   0038CA  51D4               	movf	(put_fat@fs+1)& (0+255),w,b
 12624   0038CC  22DA               	addwfc	fsr2h,f,c
 12625   0038CE  0E01               	movlw	1
 12626   0038D0  6EDF               	movwf	indf2,c
 12627                           
 12628                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 12629   0038D2  EF80  F01C         	goto	l15183
 12630   0038D6                     l15181:
 12631                           
 12632                           ; BSR set to: 0
 12633   0038D6  0060  F34F  FFD9   	movff	put_fat@fs,fsr2l
 12634   0038DC  0060  F353  FFDA   	movff	put_fat@fs+1,fsr2h
 12635   0038E2  50DF               	movf	indf2,w,c
 12636                           
 12637                           ; Switch size 1, requested type "simple"
 12638                           ; Number of cases is 3, Range of values is 1 to 3
 12639                           ; switch strategies available:
 12640                           ; Name         Instructions Cycles
 12641                           ; simple_byte           10     6 (average)
 12642                           ;	Chosen strategy is simple_byte
 12643   0038E4  0A01               	xorlw	1	; case 1
 12644   0038E6  B4D8               	btfsc	status,2,c
 12645   0038E8  EF17  F01A         	goto	l945
 12646   0038EC  0A03               	xorlw	3	; case 2
 12647   0038EE  B4D8               	btfsc	status,2,c
 12648   0038F0  EF4B  F01B         	goto	l15157
 12649   0038F4  0A01               	xorlw	1	; case 3
 12650   0038F6  B4D8               	btfsc	status,2,c
 12651   0038F8  EFB4  F01B         	goto	l15167
 12652   0038FC  EF80  F01C         	goto	l15183
 12653   003900                     l15183:
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 12657   003900  51F3               	movf	put_fat@res& (0+255),w,b
 12658   003902                     
 12659                           ; BSR set to: 0
 12660   003902  0012               	return		;funcret
 12661   003904                     __end_of_put_fat:
 12662                           	callstack 0
 12663                           
 12664 ;; *************** function _get_fat *****************
 12665 ;; Defined at:
 12666 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  obj             2  115[BANK0 ] PTR struct .
 12669 ;;		 -> Fil(546), pb$fp(3), f_chdir@dj(40), f_open@dj(40), 
 12670 ;;  clst            4  117[BANK0 ] unsigned long 
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;  val             4  133[BANK0 ] unsigned long 
 12673 ;;  fs              2  139[BANK0 ] PTR struct .
 12674 ;;		 -> FatFs(563), NULL(0), 
 12675 ;;  bc              2  137[BANK0 ] unsigned int 
 12676 ;;  wc              2  131[BANK0 ] unsigned int 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  4  115[BANK0 ] unsigned long 
 12679 ;; Registers used:
 12680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:       26 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 12
 12693 ;; This function calls:
 12694 ;;		_ld_dword
 12695 ;;		_ld_word
 12696 ;;		_move_window
 12697 ;; This function is called by:
 12698 ;;		_remove_chain
 12699 ;;		_create_chain
 12700 ;;		_dir_sdi
 12701 ;;		_dir_next
 12702 ;;		_f_open
 12703 ;;		_f_read
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text36
 12708   004FC8                     __ptext36:
 12709                           	callstack 0
 12710   004FC8                     _get_fat:
 12711                           	callstack 15
 12712   004FC8                     
 12713                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 12714   004FC8  0060  F34F  FFD9   	movff	get_fat@obj,fsr2l
 12715   004FCE  0060  F353  FFDA   	movff	get_fat@obj+1,fsr2h
 12716   004FD4  006F FF78  F0EB    	movff	postinc2,get_fat@fs
 12717   004FDA  006F FF74  F0EC    	movff	postdec2,get_fat@fs+1
 12718   004FE0                     
 12719                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 12720   004FE0  0100               	movlb	0	; () banked
 12721   004FE2  51D8               	movf	(get_fat@clst+3)& (0+255),w,b
 12722   004FE4  11D7               	iorwf	(get_fat@clst+2)& (0+255),w,b
 12723   004FE6  11D6               	iorwf	(get_fat@clst+1)& (0+255),w,b
 12724   004FE8  E109               	bnz	u17580
 12725   004FEA  0E02               	movlw	2
 12726   004FEC  5DD5               	subwf	get_fat@clst& (0+255),w,b
 12727   004FEE  A0D8               	btfss	status,0,c
 12728   004FF0  EFFC  F027         	goto	u17581
 12729   004FF4  EFFE  F027         	goto	u17580
 12730   004FF8                     u17581:
 12731   004FF8  EF13  F028         	goto	l15069
 12732   004FFC                     u17580:
 12733   004FFC                     
 12734                           ; BSR set to: 0
 12735   004FFC  EE20 F017          	lfsr	2,23
 12736   005000  51EB               	movf	get_fat@fs& (0+255),w,b
 12737   005002  26D9               	addwf	fsr2l,f,c
 12738   005004  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12739   005006  22DA               	addwfc	fsr2h,f,c
 12740   005008  50DE               	movf	postinc2,w,c
 12741   00500A  5DD5               	subwf	get_fat@clst& (0+255),w,b
 12742   00500C  50DE               	movf	postinc2,w,c
 12743   00500E  59D6               	subwfb	(get_fat@clst+1)& (0+255),w,b
 12744   005010  50DE               	movf	postinc2,w,c
 12745   005012  59D7               	subwfb	(get_fat@clst+2)& (0+255),w,b
 12746   005014  50DE               	movf	postinc2,w,c
 12747   005016  59D8               	subwfb	(get_fat@clst+3)& (0+255),w,b
 12748   005018  A0D8               	btfss	status,0,c
 12749   00501A  EF11  F028         	goto	u17591
 12750   00501E  EF13  F028         	goto	u17590
 12751   005022                     u17591:
 12752   005022  EF1D  F028         	goto	l922
 12753   005026                     u17590:
 12754   005026                     l15069:
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 12758   005026  0E01               	movlw	1
 12759   005028  6FE5               	movwf	get_fat@val& (0+255),b
 12760   00502A  0E00               	movlw	0
 12761   00502C  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 12762   00502E  0E00               	movlw	0
 12763   005030  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 12764   005032  0E00               	movlw	0
 12765   005034  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 12766                           
 12767                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 12768   005036  EFE7  F029         	goto	l925
 12769   00503A                     l922:
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 12773   00503A  69E5               	setf	get_fat@val& (0+255),b
 12774   00503C  69E6               	setf	(get_fat@val+1)& (0+255),b
 12775   00503E  69E7               	setf	(get_fat@val+2)& (0+255),b
 12776   005040  69E8               	setf	(get_fat@val+3)& (0+255),b
 12777                           
 12778                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 12779   005042  EFD2  F029         	goto	l15109
 12780   005046                     l927:
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 12784   005046  C0D5  F0E9         	movff	get_fat@clst,get_fat@bc
 12785   00504A  C0D6  F0EA         	movff	get_fat@clst+1,get_fat@bc+1
 12786   00504E                     
 12787                           ; BSR set to: 0
 12788   00504E  90D8               	bcf	status,0,c
 12789   005050  31EA               	rrcf	(get_fat@bc+1)& (0+255),w,b
 12790   005052  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12791   005054  31E9               	rrcf	get_fat@bc& (0+255),w,b
 12792   005056  6FD9               	movwf	??_get_fat& (0+255),b
 12793   005058  51D9               	movf	??_get_fat& (0+255),w,b
 12794   00505A  27E9               	addwf	get_fat@bc& (0+255),f,b
 12795   00505C  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12796   00505E  23EA               	addwfc	(get_fat@bc+1)& (0+255),f,b
 12797   005060                     
 12798                           ; BSR set to: 0
 12799                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 12800   005060  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12801   005064  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12802   005068  EE20 F023          	lfsr	2,35
 12803   00506C  51EB               	movf	get_fat@fs& (0+255),w,b
 12804   00506E  26D9               	addwf	fsr2l,f,c
 12805   005070  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12806   005072  22DA               	addwfc	fsr2h,f,c
 12807   005074  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12808   00507A  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12809   005080  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12810   005086  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12811   00508C  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 12812   005090  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 12813   005094  0E09               	movlw	9
 12814   005096  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12815   005098                     u17605:
 12816   005098  90D8               	bcf	status,0,c
 12817   00509A  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12818   00509C  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12819   00509E  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 12820   0050A0  EF4C  F028         	goto	u17605
 12821   0050A4  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12822   0050A6  25D9               	addwf	??_get_fat& (0+255),w,b
 12823   0050A8  6FCA               	movwf	move_window@sector& (0+255),b
 12824   0050AA  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12825   0050AC  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 12826   0050AE  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12827   0050B0  0E00               	movlw	0
 12828   0050B2  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 12829   0050B4  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12830   0050B6  0E00               	movlw	0
 12831   0050B8  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12832   0050BA  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12833   0050BC  ECDA  F046         	call	_move_window	;wreg free
 12834   0050C0  0900               	iorlw	0
 12835   0050C2  B4D8               	btfsc	status,2,c
 12836   0050C4  EF66  F028         	goto	u17611
 12837   0050C8  EF68  F028         	goto	u17610
 12838   0050CC                     u17611:
 12839   0050CC  EF6A  F028         	goto	l15077
 12840   0050D0                     u17610:
 12841   0050D0  EFE7  F029         	goto	l925
 12842   0050D4                     l15077:
 12843                           
 12844                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 12845   0050D4  0EFF               	movlw	255
 12846   0050D6  0100               	movlb	0	; () banked
 12847   0050D8  15E9               	andwf	get_fat@bc& (0+255),w,b
 12848   0050DA  6FD9               	movwf	??_get_fat& (0+255),b
 12849   0050DC  0E01               	movlw	1
 12850   0050DE  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 12851   0050E0  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12852   0050E2  51D9               	movf	??_get_fat& (0+255),w,b
 12853   0050E4  25EB               	addwf	get_fat@fs& (0+255),w,b
 12854   0050E6  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12855   0050E8  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12856   0050EA  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12857   0050EC  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12858   0050EE  0E33               	movlw	51
 12859   0050F0  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 12860   0050F2  6ED9               	movwf	fsr2l,c
 12861   0050F4  0E00               	movlw	0
 12862   0050F6  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12863   0050F8  6EDA               	movwf	fsr2h,c
 12864   0050FA  50DF               	movf	indf2,w,c
 12865   0050FC  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12866   0050FE  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12867   005100  6FE3               	movwf	get_fat@wc& (0+255),b
 12868   005102  6BE4               	clrf	(get_fat@wc+1)& (0+255),b
 12869   005104                     
 12870                           ; BSR set to: 0
 12871   005104  4BE9               	infsnz	get_fat@bc& (0+255),f,b
 12872   005106  2BEA               	incf	(get_fat@bc+1)& (0+255),f,b
 12873   005108                     
 12874                           ; BSR set to: 0
 12875                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 12876   005108  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12877   00510C  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12878   005110  EE20 F023          	lfsr	2,35
 12879   005114  51EB               	movf	get_fat@fs& (0+255),w,b
 12880   005116  26D9               	addwf	fsr2l,f,c
 12881   005118  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 12882   00511A  22DA               	addwfc	fsr2h,f,c
 12883   00511C  006F FF78  F0D9    	movff	postinc2,??_get_fat
 12884   005122  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 12885   005128  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 12886   00512E  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 12887   005134  C0E9  F0DD         	movff	get_fat@bc,??_get_fat+4
 12888   005138  C0EA  F0DE         	movff	get_fat@bc+1,??_get_fat+5
 12889   00513C  0E09               	movlw	9
 12890   00513E  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12891   005140                     u17625:
 12892   005140  90D8               	bcf	status,0,c
 12893   005142  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 12894   005144  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 12895   005146  2FDF               	decfsz	(??_get_fat+6)& (0+255),f,b
 12896   005148  EFA0  F028         	goto	u17625
 12897   00514C  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12898   00514E  25D9               	addwf	??_get_fat& (0+255),w,b
 12899   005150  6FCA               	movwf	move_window@sector& (0+255),b
 12900   005152  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12901   005154  21DA               	addwfc	(??_get_fat+1)& (0+255),w,b
 12902   005156  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 12903   005158  0E00               	movlw	0
 12904   00515A  21DB               	addwfc	(??_get_fat+2)& (0+255),w,b
 12905   00515C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 12906   00515E  0E00               	movlw	0
 12907   005160  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12908   005162  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 12909   005164  ECDA  F046         	call	_move_window	;wreg free
 12910   005168  0900               	iorlw	0
 12911   00516A  B4D8               	btfsc	status,2,c
 12912   00516C  EFBA  F028         	goto	u17631
 12913   005170  EFBC  F028         	goto	u17630
 12914   005174                     u17631:
 12915   005174  EFBE  F028         	goto	l15085
 12916   005178                     u17630:
 12917   005178  EFE7  F029         	goto	l925
 12918   00517C                     l15085:
 12919                           
 12920                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 12921   00517C  0EFF               	movlw	255
 12922   00517E  0100               	movlb	0	; () banked
 12923   005180  15E9               	andwf	get_fat@bc& (0+255),w,b
 12924   005182  6FD9               	movwf	??_get_fat& (0+255),b
 12925   005184  0E01               	movlw	1
 12926   005186  15EA               	andwf	(get_fat@bc+1)& (0+255),w,b
 12927   005188  6FDA               	movwf	(??_get_fat+1)& (0+255),b
 12928   00518A  51D9               	movf	??_get_fat& (0+255),w,b
 12929   00518C  25EB               	addwf	get_fat@fs& (0+255),w,b
 12930   00518E  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12931   005190  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 12932   005192  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 12933   005194  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 12934   005196  0E33               	movlw	51
 12935   005198  25DB               	addwf	(??_get_fat+2)& (0+255),w,b
 12936   00519A  6ED9               	movwf	fsr2l,c
 12937   00519C  0E00               	movlw	0
 12938   00519E  21DC               	addwfc	(??_get_fat+3)& (0+255),w,b
 12939   0051A0  6EDA               	movwf	fsr2h,c
 12940   0051A2  50DF               	movf	indf2,w,c
 12941   0051A4  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 12942   0051A6  51DD               	movf	(??_get_fat+4)& (0+255),w,b
 12943   0051A8  6FDF               	movwf	(??_get_fat+6)& (0+255),b
 12944   0051AA  6BDE               	clrf	(??_get_fat+5)& (0+255),b
 12945   0051AC  51DE               	movf	(??_get_fat+5)& (0+255),w,b
 12946   0051AE  13E3               	iorwf	get_fat@wc& (0+255),f,b
 12947   0051B0  51DF               	movf	(??_get_fat+6)& (0+255),w,b
 12948   0051B2  13E4               	iorwf	(get_fat@wc+1)& (0+255),f,b
 12949   0051B4                     
 12950                           ; BSR set to: 0
 12951                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 12952   0051B4  B1D5               	btfsc	get_fat@clst& (0+255),0,b
 12953   0051B6  EFDF  F028         	goto	u17641
 12954   0051BA  EFE1  F028         	goto	u17640
 12955   0051BE                     u17641:
 12956   0051BE  EFE9  F028         	goto	l15091
 12957   0051C2                     u17640:
 12958   0051C2                     
 12959                           ; BSR set to: 0
 12960   0051C2  0EFF               	movlw	255
 12961   0051C4  15E3               	andwf	get_fat@wc& (0+255),w,b
 12962   0051C6  6FE1               	movwf	_get_fat$2577& (0+255),b
 12963   0051C8  0E0F               	movlw	15
 12964   0051CA  15E4               	andwf	(get_fat@wc+1)& (0+255),w,b
 12965   0051CC  6FE2               	movwf	(_get_fat$2577+1)& (0+255),b
 12966   0051CE  EFF9  F028         	goto	l15093
 12967   0051D2                     l15091:
 12968                           
 12969                           ; BSR set to: 0
 12970   0051D2  C0E3  F0D9         	movff	get_fat@wc,??_get_fat
 12971   0051D6  C0E4  F0DA         	movff	get_fat@wc+1,??_get_fat+1
 12972   0051DA  0E04               	movlw	4
 12973   0051DC  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 12974   0051DE                     u17655:
 12975   0051DE  90D8               	bcf	status,0,c
 12976   0051E0  33DA               	rrcf	(??_get_fat+1)& (0+255),f,b
 12977   0051E2  33D9               	rrcf	??_get_fat& (0+255),f,b
 12978   0051E4  2FDB               	decfsz	(??_get_fat+2)& (0+255),f,b
 12979   0051E6  EFEF  F028         	goto	u17655
 12980   0051EA  C0D9  F0E1         	movff	??_get_fat,_get_fat$2577
 12981   0051EE  C0DA  F0E2         	movff	??_get_fat+1,_get_fat$2577+1
 12982   0051F2                     l15093:
 12983                           
 12984                           ; BSR set to: 0
 12985   0051F2  C0E1  F0E5         	movff	_get_fat$2577,get_fat@val
 12986   0051F6  C0E2  F0E6         	movff	_get_fat$2577+1,get_fat@val+1
 12987   0051FA  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 12988   0051FC  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 12989                           
 12990                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 12991   0051FE  EFE7  F029         	goto	l925
 12992   005202                     l15095:
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 12996   005202  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 12997   005206  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 12998   00520A  EE20 F023          	lfsr	2,35
 12999   00520E  51EB               	movf	get_fat@fs& (0+255),w,b
 13000   005210  26D9               	addwf	fsr2l,f,c
 13001   005212  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 13002   005214  22DA               	addwfc	fsr2h,f,c
 13003   005216  006F FF78  F0D9    	movff	postinc2,??_get_fat
 13004   00521C  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 13005   005222  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 13006   005228  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 13007   00522E  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 13008   005232  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 13009   005236  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 13010   00523A  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 13011   00523E  C0DE  F0DD         	movff	??_get_fat+5,??_get_fat+4
 13012   005242  C0DF  F0DE         	movff	??_get_fat+6,??_get_fat+5
 13013   005246  C0E0  F0DF         	movff	??_get_fat+7,??_get_fat+6
 13014   00524A  6BE0               	clrf	(??_get_fat+7)& (0+255),b
 13015   00524C  51D9               	movf	??_get_fat& (0+255),w,b
 13016   00524E  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13017   005250  6FCA               	movwf	move_window@sector& (0+255),b
 13018   005252  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 13019   005254  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13020   005256  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 13021   005258  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13022   00525A  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 13023   00525C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 13024   00525E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13025   005260  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 13026   005262  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 13027   005264  ECDA  F046         	call	_move_window	;wreg free
 13028   005268  0900               	iorlw	0
 13029   00526A  B4D8               	btfsc	status,2,c
 13030   00526C  EF3A  F029         	goto	u17661
 13031   005270  EF3C  F029         	goto	u17660
 13032   005274                     u17661:
 13033   005274  EF3E  F029         	goto	l15099
 13034   005278                     u17660:
 13035   005278  EFE7  F029         	goto	l925
 13036   00527C                     l15099:
 13037                           
 13038                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 13039   00527C  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 13040   005280  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 13041   005284  90D8               	bcf	status,0,c
 13042   005286  0100               	movlb	0	; () banked
 13043   005288  37D9               	rlcf	??_get_fat& (0+255),f,b
 13044   00528A  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 13045   00528C  0EFF               	movlw	255
 13046   00528E  15D9               	andwf	??_get_fat& (0+255),w,b
 13047   005290  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 13048   005292  0E01               	movlw	1
 13049   005294  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 13050   005296  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 13051   005298  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13052   00529A  25EB               	addwf	get_fat@fs& (0+255),w,b
 13053   00529C  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 13054   00529E  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13055   0052A0  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 13056   0052A2  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 13057   0052A4  0E33               	movlw	51
 13058   0052A6  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13059   0052A8  6F60               	movwf	ld_word@ptr& (0+255),b
 13060   0052AA  0E00               	movlw	0
 13061   0052AC  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13062   0052AE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 13063   0052B0  EC0E  F050         	call	_ld_word	;wreg free
 13064   0052B4  0100               	movlb	0	; () banked
 13065   0052B6  C060  F0E5         	movff	?_ld_word,get_fat@val
 13066   0052BA  C061  F0E6         	movff	?_ld_word+1,get_fat@val+1
 13067   0052BE  6BE7               	clrf	(get_fat@val+2)& (0+255),b
 13068   0052C0  6BE8               	clrf	(get_fat@val+3)& (0+255),b
 13069                           
 13070                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 13071   0052C2  EFE7  F029         	goto	l925
 13072   0052C6                     l15101:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 13076   0052C6  C0EB  F0C8         	movff	get_fat@fs,move_window@fs
 13077   0052CA  C0EC  F0C9         	movff	get_fat@fs+1,move_window@fs+1
 13078   0052CE  EE20 F023          	lfsr	2,35
 13079   0052D2  51EB               	movf	get_fat@fs& (0+255),w,b
 13080   0052D4  26D9               	addwf	fsr2l,f,c
 13081   0052D6  51EC               	movf	(get_fat@fs+1)& (0+255),w,b
 13082   0052D8  22DA               	addwfc	fsr2h,f,c
 13083   0052DA  006F FF78  F0D9    	movff	postinc2,??_get_fat
 13084   0052E0  006F FF78  F0DA    	movff	postinc2,??_get_fat+1
 13085   0052E6  006F FF78  F0DB    	movff	postinc2,??_get_fat+2
 13086   0052EC  006F FF78  F0DC    	movff	postinc2,??_get_fat+3
 13087   0052F2  C0D5  F0DD         	movff	get_fat@clst,??_get_fat+4
 13088   0052F6  C0D6  F0DE         	movff	get_fat@clst+1,??_get_fat+5
 13089   0052FA  C0D7  F0DF         	movff	get_fat@clst+2,??_get_fat+6
 13090   0052FE  C0D8  F0E0         	movff	get_fat@clst+3,??_get_fat+7
 13091   005302  0E08               	movlw	8
 13092   005304  EF89  F029         	goto	u17670
 13093   005308                     u17675:
 13094   005308  90D8               	bcf	status,0,c
 13095   00530A  33E0               	rrcf	(??_get_fat+7)& (0+255),f,b
 13096   00530C  33DF               	rrcf	(??_get_fat+6)& (0+255),f,b
 13097   00530E  33DE               	rrcf	(??_get_fat+5)& (0+255),f,b
 13098   005310  33DD               	rrcf	(??_get_fat+4)& (0+255),f,b
 13099   005312                     u17670:
 13100   005312  2EE8               	decfsz	wreg,f,c
 13101   005314  EF84  F029         	goto	u17675
 13102   005318  51D9               	movf	??_get_fat& (0+255),w,b
 13103   00531A  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13104   00531C  6FCA               	movwf	move_window@sector& (0+255),b
 13105   00531E  51DA               	movf	(??_get_fat+1)& (0+255),w,b
 13106   005320  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13107   005322  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 13108   005324  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13109   005326  21DF               	addwfc	(??_get_fat+6)& (0+255),w,b
 13110   005328  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 13111   00532A  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13112   00532C  21E0               	addwfc	(??_get_fat+7)& (0+255),w,b
 13113   00532E  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 13114   005330  ECDA  F046         	call	_move_window	;wreg free
 13115   005334  0900               	iorlw	0
 13116   005336  B4D8               	btfsc	status,2,c
 13117   005338  EFA0  F029         	goto	u17681
 13118   00533C  EFA2  F029         	goto	u17680
 13119   005340                     u17681:
 13120   005340  EFA4  F029         	goto	l15105
 13121   005344                     u17680:
 13122   005344  EFE7  F029         	goto	l925
 13123   005348                     l15105:
 13124                           
 13125                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 13126   005348  C0D5  F0D9         	movff	get_fat@clst,??_get_fat
 13127   00534C  C0D6  F0DA         	movff	get_fat@clst+1,??_get_fat+1
 13128   005350  0100               	movlb	0	; () banked
 13129   005352  90D8               	bcf	status,0,c
 13130   005354  37D9               	rlcf	??_get_fat& (0+255),f,b
 13131   005356  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 13132   005358  90D8               	bcf	status,0,c
 13133   00535A  37D9               	rlcf	??_get_fat& (0+255),f,b
 13134   00535C  37DA               	rlcf	(??_get_fat+1)& (0+255),f,b
 13135   00535E  0EFF               	movlw	255
 13136   005360  15D9               	andwf	??_get_fat& (0+255),w,b
 13137   005362  6FDB               	movwf	(??_get_fat+2)& (0+255),b
 13138   005364  0E01               	movlw	1
 13139   005366  15DA               	andwf	(??_get_fat+1)& (0+255),w,b
 13140   005368  6FDC               	movwf	(??_get_fat+3)& (0+255),b
 13141   00536A  51DB               	movf	(??_get_fat+2)& (0+255),w,b
 13142   00536C  25EB               	addwf	get_fat@fs& (0+255),w,b
 13143   00536E  6FDD               	movwf	(??_get_fat+4)& (0+255),b
 13144   005370  51DC               	movf	(??_get_fat+3)& (0+255),w,b
 13145   005372  21EC               	addwfc	(get_fat@fs+1)& (0+255),w,b
 13146   005374  6FDE               	movwf	(??_get_fat+5)& (0+255),b
 13147   005376  0E33               	movlw	51
 13148   005378  25DD               	addwf	(??_get_fat+4)& (0+255),w,b
 13149   00537A  6F60               	movwf	ld_dword@ptr& (0+255),b
 13150   00537C  0E00               	movlw	0
 13151   00537E  21DE               	addwfc	(??_get_fat+5)& (0+255),w,b
 13152   005380  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 13153   005382  EC0F  F048         	call	_ld_dword	;wreg free
 13154   005386  0EFF               	movlw	255
 13155   005388  0100               	movlb	0	; () banked
 13156   00538A  1560               	andwf	?_ld_dword& (0+255),w,b
 13157   00538C  6FE5               	movwf	get_fat@val& (0+255),b
 13158   00538E  0EFF               	movlw	255
 13159   005390  1561               	andwf	(?_ld_dword+1)& (0+255),w,b
 13160   005392  6FE6               	movwf	(get_fat@val+1)& (0+255),b
 13161   005394  0EFF               	movlw	255
 13162   005396  1562               	andwf	(?_ld_dword+2)& (0+255),w,b
 13163   005398  6FE7               	movwf	(get_fat@val+2)& (0+255),b
 13164   00539A  0E0F               	movlw	15
 13165   00539C  1563               	andwf	(?_ld_dword+3)& (0+255),w,b
 13166   00539E  6FE8               	movwf	(get_fat@val+3)& (0+255),b
 13167                           
 13168                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 13169   0053A0  EFE7  F029         	goto	l925
 13170   0053A4                     l15109:
 13171                           
 13172                           ; BSR set to: 0
 13173   0053A4  0060  F3AF  FFD9   	movff	get_fat@fs,fsr2l
 13174   0053AA  0060  F3B3  FFDA   	movff	get_fat@fs+1,fsr2h
 13175   0053B0  50DF               	movf	indf2,w,c
 13176                           
 13177                           ; Switch size 1, requested type "simple"
 13178                           ; Number of cases is 3, Range of values is 1 to 3
 13179                           ; switch strategies available:
 13180                           ; Name         Instructions Cycles
 13181                           ; simple_byte           10     6 (average)
 13182                           ;	Chosen strategy is simple_byte
 13183   0053B2  0A01               	xorlw	1	; case 1
 13184   0053B4  B4D8               	btfsc	status,2,c
 13185   0053B6  EF23  F028         	goto	l927
 13186   0053BA  0A03               	xorlw	3	; case 2
 13187   0053BC  B4D8               	btfsc	status,2,c
 13188   0053BE  EF01  F029         	goto	l15095
 13189   0053C2  0A01               	xorlw	1	; case 3
 13190   0053C4  B4D8               	btfsc	status,2,c
 13191   0053C6  EF63  F029         	goto	l15101
 13192   0053CA  EF13  F028         	goto	l15069
 13193   0053CE                     l925:
 13194                           
 13195                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 13196   0053CE  C0E5  F0D3         	movff	get_fat@val,?_get_fat
 13197   0053D2  C0E6  F0D4         	movff	get_fat@val+1,?_get_fat+1
 13198   0053D6  C0E7  F0D5         	movff	get_fat@val+2,?_get_fat+2
 13199   0053DA  C0E8  F0D6         	movff	get_fat@val+3,?_get_fat+3
 13200   0053DE  0012               	return		;funcret
 13201   0053E0                     __end_of_get_fat:
 13202                           	callstack 0
 13203                           
 13204 ;; *************** function _f_close *****************
 13205 ;; Defined at:
 13206 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;  fp              2  122[BANK0 ] PTR struct .
 13209 ;;		 -> Fil(546), 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  fs              2  124[BANK0 ] PTR struct .
 13212 ;;		 -> FatFs(563), NULL(0), 
 13213 ;;  res             1  126[BANK0 ] enum E68
 13214 ;; Return value:  Size  Location     Type
 13215 ;;                  1    wreg      enum E68
 13216 ;; Registers used:
 13217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13218 ;; Tracked objects:
 13219 ;;		On entry : 0/0
 13220 ;;		On exit  : 0/0
 13221 ;;		Unchanged: 0/0
 13222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;Total ram usage:        5 bytes
 13228 ;; Hardware stack levels used: 1
 13229 ;; Hardware stack levels required when called: 13
 13230 ;; This function calls:
 13231 ;;		_f_sync
 13232 ;;		_validate
 13233 ;; This function is called by:
 13234 ;;		_main
 13235 ;;		_send_status_ok
 13236 ;; This function uses a non-reentrant model
 13237 ;;
 13238                           
 13239                           	psect	text37
 13240   009DAC                     __ptext37:
 13241                           	callstack 0
 13242   009DAC                     _f_close:
 13243                           	callstack 16
 13244   009DAC                     
 13245                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 13246   009DAC  C0DA  F0D3         	movff	f_close@fp,f_sync@fp
 13247   009DB0  C0DB  F0D4         	movff	f_close@fp+1,f_sync@fp+1
 13248   009DB4  EC0D  F036         	call	_f_sync	;wreg free
 13249   009DB8  0100               	movlb	0	; () banked
 13250   009DBA  6FDE               	movwf	f_close@res& (0+255),b
 13251   009DBC                     
 13252                           ; BSR set to: 0
 13253                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 13254   009DBC  51DE               	movf	f_close@res& (0+255),w,b
 13255   009DBE  A4D8               	btfss	status,2,c
 13256   009DC0  EFE4  F04E         	goto	u21651
 13257   009DC4  EFE6  F04E         	goto	u21650
 13258   009DC8                     u21651:
 13259   009DC8  EF01  F04F         	goto	l1397
 13260   009DCC                     u21650:
 13261   009DCC                     
 13262                           ; BSR set to: 0
 13263                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 13264   009DCC  C0DA  F062         	movff	f_close@fp,validate@obj
 13265   009DD0  C0DB  F063         	movff	f_close@fp+1,validate@obj+1
 13266   009DD4  0EDC               	movlw	low f_close@fs
 13267   009DD6  6F64               	movwf	validate@rfs& (0+255),b
 13268   009DD8  6B65               	clrf	(validate@rfs+1)& (0+255),b
 13269   009DDA  EC7A  F040         	call	_validate	;wreg free
 13270   009DDE  0100               	movlb	0	; () banked
 13271   009DE0  6FDE               	movwf	f_close@res& (0+255),b
 13272   009DE2                     
 13273                           ; BSR set to: 0
 13274                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 13275   009DE2  51DE               	movf	f_close@res& (0+255),w,b
 13276   009DE4  A4D8               	btfss	status,2,c
 13277   009DE6  EFF7  F04E         	goto	u21661
 13278   009DEA  EFF9  F04E         	goto	u21660
 13279   009DEE                     u21661:
 13280   009DEE  EF01  F04F         	goto	l1397
 13281   009DF2                     u21660:
 13282   009DF2                     
 13283                           ; BSR set to: 0
 13284                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 13285   009DF2  0060  F36B  FFD9   	movff	f_close@fp,fsr2l
 13286   009DF8  0060  F36F  FFDA   	movff	f_close@fp+1,fsr2h
 13287   009DFE  6ADE               	clrf	postinc2,c
 13288   009E00  6ADD               	clrf	postdec2,c
 13289   009E02                     l1397:
 13290                           
 13291                           ; BSR set to: 0
 13292   009E02  0012               	return		;funcret
 13293   009E04                     __end_of_f_close:
 13294                           	callstack 0
 13295                           
 13296 ;; *************** function _f_sync *****************
 13297 ;; Defined at:
 13298 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  fp              2  115[BANK0 ] PTR struct .
 13301 ;;		 -> Fil(546), 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  tm              4    0        unsigned long 
 13304 ;;  fs              2  120[BANK0 ] PTR struct .
 13305 ;;		 -> FatFs(563), NULL(0), 
 13306 ;;  dir             2  118[BANK0 ] PTR unsigned char 
 13307 ;;		 -> FatFs(563), NULL(0), 
 13308 ;;  res             1  117[BANK0 ] enum E68
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      enum E68
 13311 ;; Registers used:
 13312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;Total ram usage:        7 bytes
 13323 ;; Hardware stack levels used: 1
 13324 ;; Hardware stack levels required when called: 12
 13325 ;; This function calls:
 13326 ;;		_disk_write
 13327 ;;		_move_window
 13328 ;;		_st_clust
 13329 ;;		_st_dword
 13330 ;;		_st_word
 13331 ;;		_sync_fs
 13332 ;;		_validate
 13333 ;; This function is called by:
 13334 ;;		_f_close
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           	psect	text38
 13339   006C1A                     __ptext38:
 13340                           	callstack 0
 13341   006C1A                     _f_sync:
 13342                           	callstack 16
 13343   006C1A                     
 13344                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 13345   006C1A  C0D3  F062         	movff	f_sync@fp,validate@obj
 13346   006C1E  C0D4  F063         	movff	f_sync@fp+1,validate@obj+1
 13347   006C22  0ED8               	movlw	low f_sync@fs
 13348   006C24  0100               	movlb	0	; () banked
 13349   006C26  6F64               	movwf	validate@rfs& (0+255),b
 13350   006C28  6B65               	clrf	(validate@rfs+1)& (0+255),b
 13351   006C2A  EC7A  F040         	call	_validate	;wreg free
 13352   006C2E  0100               	movlb	0	; () banked
 13353   006C30  6FD5               	movwf	f_sync@res& (0+255),b
 13354   006C32                     
 13355                           ; BSR set to: 0
 13356                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 13357   006C32  51D5               	movf	f_sync@res& (0+255),w,b
 13358   006C34  A4D8               	btfss	status,2,c
 13359   006C36  EF1F  F036         	goto	u20641
 13360   006C3A  EF21  F036         	goto	u20640
 13361   006C3E                     u20641:
 13362   006C3E  EF20  F037         	goto	l16811
 13363   006C42                     u20640:
 13364   006C42                     
 13365                           ; BSR set to: 0
 13366                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 13367   006C42  EE20 F00E          	lfsr	2,14
 13368   006C46  51D3               	movf	f_sync@fp& (0+255),w,b
 13369   006C48  26D9               	addwf	fsr2l,f,c
 13370   006C4A  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13371   006C4C  22DA               	addwfc	fsr2h,f,c
 13372   006C4E  ACDF               	btfss	indf2,6,c
 13373   006C50  EF2C  F036         	goto	u20651
 13374   006C54  EF2E  F036         	goto	u20650
 13375   006C58                     u20651:
 13376   006C58  EF20  F037         	goto	l16811
 13377   006C5C                     u20650:
 13378   006C5C                     
 13379                           ; BSR set to: 0
 13380                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 13381   006C5C  EE20 F00E          	lfsr	2,14
 13382   006C60  51D3               	movf	f_sync@fp& (0+255),w,b
 13383   006C62  26D9               	addwf	fsr2l,f,c
 13384   006C64  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13385   006C66  22DA               	addwfc	fsr2h,f,c
 13386   006C68  AEDF               	btfss	indf2,7,c
 13387   006C6A  EF39  F036         	goto	u20661
 13388   006C6E  EF3B  F036         	goto	u20660
 13389   006C72                     u20661:
 13390   006C72  EF74  F036         	goto	l16791
 13391   006C76                     u20660:
 13392   006C76                     
 13393                           ; BSR set to: 0
 13394                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 13395   006C76  0E22               	movlw	34
 13396   006C78  25D3               	addwf	f_sync@fp& (0+255),w,b
 13397   006C7A  6FAB               	movwf	disk_write@buff& (0+255),b
 13398   006C7C  0E00               	movlw	0
 13399   006C7E  21D4               	addwfc	(f_sync@fp+1)& (0+255),w,b
 13400   006C80  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 13401   006C82  EE20 F018          	lfsr	2,24
 13402   006C86  51D3               	movf	f_sync@fp& (0+255),w,b
 13403   006C88  26D9               	addwf	fsr2l,f,c
 13404   006C8A  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13405   006C8C  22DA               	addwfc	fsr2h,f,c
 13406   006C8E  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 13407   006C94  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 13408   006C9A  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 13409   006CA0  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 13410   006CA6  0E00               	movlw	0
 13411   006CA8  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 13412   006CAA  0E01               	movlw	1
 13413   006CAC  6FB1               	movwf	disk_write@count& (0+255),b
 13414   006CAE  EE20 F001          	lfsr	2,1
 13415   006CB2  51D8               	movf	f_sync@fs& (0+255),w,b
 13416   006CB4  26D9               	addwf	fsr2l,f,c
 13417   006CB6  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 13418   006CB8  22DA               	addwfc	fsr2h,f,c
 13419   006CBA  50DF               	movf	indf2,w,c
 13420   006CBC  EC1D  F04D         	call	_disk_write
 13421   006CC0  0900               	iorlw	0
 13422   006CC2  B4D8               	btfsc	status,2,c
 13423   006CC4  EF66  F036         	goto	u20671
 13424   006CC8  EF68  F036         	goto	u20670
 13425   006CCC                     u20671:
 13426   006CCC  EF6B  F036         	goto	l16789
 13427   006CD0                     u20670:
 13428   006CD0  0E01               	movlw	1
 13429   006CD2  EF21  F037         	goto	l1391
 13430   006CD6                     l16789:
 13431                           
 13432                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 13433   006CD6  0100               	movlb	0	; () banked
 13434   006CD8  EE20 F00E          	lfsr	2,14
 13435   006CDC  51D3               	movf	f_sync@fp& (0+255),w,b
 13436   006CDE  26D9               	addwf	fsr2l,f,c
 13437   006CE0  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13438   006CE2  22DA               	addwfc	fsr2h,f,c
 13439   006CE4  0E7F               	movlw	127
 13440   006CE6  16DF               	andwf	indf2,f,c
 13441   006CE8                     l16791:
 13442   006CE8                     
 13443                           ; BSR set to: 0
 13444                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 13445   006CE8  C0D8  F0C8         	movff	f_sync@fs,move_window@fs
 13446   006CEC  C0D9  F0C9         	movff	f_sync@fs+1,move_window@fs+1
 13447   006CF0  EE20 F01C          	lfsr	2,28
 13448   006CF4  51D3               	movf	f_sync@fp& (0+255),w,b
 13449   006CF6  26D9               	addwf	fsr2l,f,c
 13450   006CF8  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13451   006CFA  22DA               	addwfc	fsr2h,f,c
 13452   006CFC  006F FF78  F0CA    	movff	postinc2,move_window@sector
 13453   006D02  006F FF78  F0CB    	movff	postinc2,move_window@sector+1
 13454   006D08  006F FF78  F0CC    	movff	postinc2,move_window@sector+2
 13455   006D0E  006F FF78  F0CD    	movff	postinc2,move_window@sector+3
 13456   006D14  ECDA  F046         	call	_move_window	;wreg free
 13457   006D18  0100               	movlb	0	; () banked
 13458   006D1A  6FD5               	movwf	f_sync@res& (0+255),b
 13459   006D1C                     
 13460                           ; BSR set to: 0
 13461                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 13462   006D1C  51D5               	movf	f_sync@res& (0+255),w,b
 13463   006D1E  A4D8               	btfss	status,2,c
 13464   006D20  EF94  F036         	goto	u20681
 13465   006D24  EF96  F036         	goto	u20680
 13466   006D28                     u20681:
 13467   006D28  EF20  F037         	goto	l16811
 13468   006D2C                     u20680:
 13469   006D2C                     
 13470                           ; BSR set to: 0
 13471                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 13472   006D2C  EE20 F020          	lfsr	2,32
 13473   006D30  51D3               	movf	f_sync@fp& (0+255),w,b
 13474   006D32  26D9               	addwf	fsr2l,f,c
 13475   006D34  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13476   006D36  22DA               	addwfc	fsr2h,f,c
 13477   006D38  006F FF78  F0D6    	movff	postinc2,f_sync@dir
 13478   006D3E  006F FF74  F0D7    	movff	postdec2,f_sync@dir+1
 13479                           
 13480                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 13481   006D44  EE20 F00B          	lfsr	2,11
 13482   006D48  51D6               	movf	f_sync@dir& (0+255),w,b
 13483   006D4A  26D9               	addwf	fsr2l,f,c
 13484   006D4C  51D7               	movf	(f_sync@dir+1)& (0+255),w,b
 13485   006D4E  22DA               	addwfc	fsr2h,f,c
 13486   006D50  0E00               	movlw	0
 13487   006D52  8ADB               	bsf	plusw2,5,c
 13488   006D54                     
 13489                           ; BSR set to: 0
 13490                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 13491   006D54  0060  F34F  FFD9   	movff	f_sync@fp,fsr2l
 13492   006D5A  0060  F353  FFDA   	movff	f_sync@fp+1,fsr2h
 13493   006D60  006F FF78  F064    	movff	postinc2,st_clust@fs
 13494   006D66  006F FF74  F065    	movff	postdec2,st_clust@fs+1
 13495   006D6C  C0D6  F066         	movff	f_sync@dir,st_clust@dir
 13496   006D70  C0D7  F067         	movff	f_sync@dir+1,st_clust@dir+1
 13497   006D74  EE20 F006          	lfsr	2,6
 13498   006D78  51D3               	movf	f_sync@fp& (0+255),w,b
 13499   006D7A  26D9               	addwf	fsr2l,f,c
 13500   006D7C  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13501   006D7E  22DA               	addwfc	fsr2h,f,c
 13502   006D80  006F FF78  F068    	movff	postinc2,st_clust@cl
 13503   006D86  006F FF78  F069    	movff	postinc2,st_clust@cl+1
 13504   006D8C  006F FF78  F06A    	movff	postinc2,st_clust@cl+2
 13505   006D92  006F FF78  F06B    	movff	postinc2,st_clust@cl+3
 13506   006D98  EC2D  F04F         	call	_st_clust	;wreg free
 13507   006D9C                     
 13508                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 13509   006D9C  0E1C               	movlw	28
 13510   006D9E  0100               	movlb	0	; () banked
 13511   006DA0  25D6               	addwf	f_sync@dir& (0+255),w,b
 13512   006DA2  6F60               	movwf	st_dword@ptr& (0+255),b
 13513   006DA4  0E00               	movlw	0
 13514   006DA6  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13515   006DA8  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13516   006DAA  EE20 F00A          	lfsr	2,10
 13517   006DAE  51D3               	movf	f_sync@fp& (0+255),w,b
 13518   006DB0  26D9               	addwf	fsr2l,f,c
 13519   006DB2  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13520   006DB4  22DA               	addwfc	fsr2h,f,c
 13521   006DB6  006F FF78  F062    	movff	postinc2,st_dword@val
 13522   006DBC  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13523   006DC2  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13524   006DC8  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13525   006DCE  EC87  F04A         	call	_st_dword	;wreg free
 13526   006DD2                     
 13527                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 13528   006DD2  0E16               	movlw	22
 13529   006DD4  0100               	movlb	0	; () banked
 13530   006DD6  25D6               	addwf	f_sync@dir& (0+255),w,b
 13531   006DD8  6F60               	movwf	st_dword@ptr& (0+255),b
 13532   006DDA  0E00               	movlw	0
 13533   006DDC  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13534   006DDE  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13535   006DE0  0E00               	movlw	0
 13536   006DE2  6F62               	movwf	st_dword@val& (0+255),b
 13537   006DE4  0E00               	movlw	0
 13538   006DE6  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13539   006DE8  0EF7               	movlw	247
 13540   006DEA  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13541   006DEC  0E58               	movlw	88
 13542   006DEE  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13543   006DF0  EC87  F04A         	call	_st_dword	;wreg free
 13544   006DF4                     
 13545                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 13546   006DF4  0E12               	movlw	18
 13547   006DF6  0100               	movlb	0	; () banked
 13548   006DF8  25D6               	addwf	f_sync@dir& (0+255),w,b
 13549   006DFA  6F60               	movwf	st_word@ptr& (0+255),b
 13550   006DFC  0E00               	movlw	0
 13551   006DFE  21D7               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13552   006E00  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13553   006E02  0E00               	movlw	0
 13554   006E04  6F63               	movwf	(st_word@val+1)& (0+255),b
 13555   006E06  0E00               	movlw	0
 13556   006E08  6F62               	movwf	st_word@val& (0+255),b
 13557   006E0A  ECFA  F050         	call	_st_word	;wreg free
 13558                           
 13559                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 13560   006E0E  0100               	movlb	0	; () banked
 13561   006E10  EE20 F003          	lfsr	2,3
 13562   006E14  51D8               	movf	f_sync@fs& (0+255),w,b
 13563   006E16  26D9               	addwf	fsr2l,f,c
 13564   006E18  51D9               	movf	(f_sync@fs+1)& (0+255),w,b
 13565   006E1A  22DA               	addwfc	fsr2h,f,c
 13566   006E1C  0E01               	movlw	1
 13567   006E1E  6EDF               	movwf	indf2,c
 13568   006E20                     
 13569                           ; BSR set to: 0
 13570                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 13571   006E20  C0D8  F0C8         	movff	f_sync@fs,sync_fs@fs
 13572   006E24  C0D9  F0C9         	movff	f_sync@fs+1,sync_fs@fs+1
 13573   006E28  ECF0  F034         	call	_sync_fs	;wreg free
 13574   006E2C  0100               	movlb	0	; () banked
 13575   006E2E  6FD5               	movwf	f_sync@res& (0+255),b
 13576   006E30                     
 13577                           ; BSR set to: 0
 13578                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 13579   006E30  EE20 F00E          	lfsr	2,14
 13580   006E34  51D3               	movf	f_sync@fp& (0+255),w,b
 13581   006E36  26D9               	addwf	fsr2l,f,c
 13582   006E38  51D4               	movf	(f_sync@fp+1)& (0+255),w,b
 13583   006E3A  22DA               	addwfc	fsr2h,f,c
 13584   006E3C  0EBF               	movlw	191
 13585   006E3E  16DF               	andwf	indf2,f,c
 13586   006E40                     l16811:
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 13590   006E40  51D5               	movf	f_sync@res& (0+255),w,b
 13591   006E42                     l1391:
 13592   006E42  0012               	return		;funcret
 13593   006E44                     __end_of_f_sync:
 13594                           	callstack 0
 13595                           
 13596 ;; *************** function _validate *****************
 13597 ;; Defined at:
 13598 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;  obj             2    2[BANK0 ] PTR struct .
 13601 ;;		 -> Fil(546), pb$fp(3), 
 13602 ;;  rfs             2    4[BANK0 ] PTR PTR struct .
 13603 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 13604 ;; Auto vars:     Size  Location     Type
 13605 ;;  res             1   12[BANK0 ] enum E68
 13606 ;; Return value:  Size  Location     Type
 13607 ;;                  1    wreg      enum E68
 13608 ;; Registers used:
 13609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13610 ;; Tracked objects:
 13611 ;;		On entry : 0/0
 13612 ;;		On exit  : 0/0
 13613 ;;		Unchanged: 0/0
 13614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13615 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13616 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;Total ram usage:       11 bytes
 13620 ;; Hardware stack levels used: 1
 13621 ;; Hardware stack levels required when called: 7
 13622 ;; This function calls:
 13623 ;;		_disk_status
 13624 ;; This function is called by:
 13625 ;;		_f_write
 13626 ;;		_f_sync
 13627 ;;		_f_close
 13628 ;;		_f_read
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632                           	psect	text39
 13633   0080F4                     __ptext39:
 13634                           	callstack 0
 13635   0080F4                     _validate:
 13636                           	callstack 21
 13637   0080F4                     
 13638                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 13639   0080F4  0E09               	movlw	9
 13640   0080F6  0100               	movlb	0	; () banked
 13641   0080F8  6F6C               	movwf	validate@res& (0+255),b
 13642   0080FA                     
 13643                           ; BSR set to: 0
 13644                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 13645   0080FA  5162               	movf	validate@obj& (0+255),w,b
 13646   0080FC  1163               	iorwf	(validate@obj+1)& (0+255),w,b
 13647   0080FE  B4D8               	btfsc	status,2,c
 13648   008100  EF84  F040         	goto	u19771
 13649   008104  EF86  F040         	goto	u19770
 13650   008108                     u19771:
 13651   008108  EFE7  F040         	goto	l1267
 13652   00810C                     u19770:
 13653   00810C                     
 13654                           ; BSR set to: 0
 13655   00810C  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13656   008112  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13657   008118  50DE               	movf	postinc2,w,c
 13658   00811A  10DE               	iorwf	postinc2,w,c
 13659   00811C  B4D8               	btfsc	status,2,c
 13660   00811E  EF93  F040         	goto	u19781
 13661   008122  EF95  F040         	goto	u19780
 13662   008126                     u19781:
 13663   008126  EFE7  F040         	goto	l1267
 13664   00812A                     u19780:
 13665   00812A                     
 13666                           ; BSR set to: 0
 13667   00812A  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13668   008130  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13669   008136  006F FF78  F066    	movff	postinc2,??_validate
 13670   00813C  006F FF74  F067    	movff	postdec2,??_validate+1
 13671   008142  0060  F19B  FFD9   	movff	??_validate,fsr2l
 13672   008148  0060  F19F  FFDA   	movff	??_validate+1,fsr2h
 13673   00814E  50DF               	movf	indf2,w,c
 13674   008150  B4D8               	btfsc	status,2,c
 13675   008152  EFAD  F040         	goto	u19791
 13676   008156  EFAF  F040         	goto	u19790
 13677   00815A                     u19791:
 13678   00815A  EFE7  F040         	goto	l1267
 13679   00815E                     u19790:
 13680   00815E                     
 13681                           ; BSR set to: 0
 13682   00815E  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13683   008164  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13684   00816A  EE10 F005          	lfsr	1,5
 13685   00816E  50DE               	movf	postinc2,w,c
 13686   008170  26E1               	addwf	fsr1l,f,c
 13687   008172  50DD               	movf	postdec2,w,c
 13688   008174  22E2               	addwfc	fsr1h,f,c
 13689   008176  EE20 F002          	lfsr	2,2
 13690   00817A  5162               	movf	validate@obj& (0+255),w,b
 13691   00817C  26D9               	addwf	fsr2l,f,c
 13692   00817E  5163               	movf	(validate@obj+1)& (0+255),w,b
 13693   008180  22DA               	addwfc	fsr2h,f,c
 13694   008182  50E6               	movf	postinc1,w,c
 13695   008184  18DE               	xorwf	postinc2,w,c
 13696   008186  E107               	bnz	u19801
 13697   008188  50E6               	movf	postinc1,w,c
 13698   00818A  18DE               	xorwf	postinc2,w,c
 13699   00818C  A4D8               	btfss	status,2,c
 13700   00818E  EFCB  F040         	goto	u19801
 13701   008192  EFCD  F040         	goto	u19800
 13702   008196                     u19801:
 13703   008196  EFE7  F040         	goto	l1267
 13704   00819A                     u19800:
 13705   00819A                     
 13706                           ; BSR set to: 0
 13707                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 13708   00819A  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13709   0081A0  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13710   0081A6  EE10 F001          	lfsr	1,1
 13711   0081AA  50DE               	movf	postinc2,w,c
 13712   0081AC  26E1               	addwf	fsr1l,f,c
 13713   0081AE  50DD               	movf	postdec2,w,c
 13714   0081B0  22E2               	addwfc	fsr1h,f,c
 13715   0081B2  50E7               	movf	indf1,w,c
 13716   0081B4  EC40  F04C         	call	_disk_status
 13717   0081B8  0100               	movlb	0	; () banked
 13718   0081BA  6F66               	movwf	??_validate& (0+255),b
 13719   0081BC  B166               	btfsc	??_validate& (0+255),0,b
 13720   0081BE  EFE3  F040         	goto	u19811
 13721   0081C2  EFE5  F040         	goto	u19810
 13722   0081C6                     u19811:
 13723   0081C6  EFE7  F040         	goto	l1267
 13724   0081CA                     u19810:
 13725   0081CA                     
 13726                           ; BSR set to: 0
 13727                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 13728   0081CA  0E00               	movlw	0
 13729   0081CC  6F6C               	movwf	validate@res& (0+255),b
 13730   0081CE                     l1267:
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 13734   0081CE  516C               	movf	validate@res& (0+255),w,b
 13735   0081D0  B4D8               	btfsc	status,2,c
 13736   0081D2  EFED  F040         	goto	u19821
 13737   0081D6  EFEF  F040         	goto	u19820
 13738   0081DA                     u19821:
 13739   0081DA  EFF5  F040         	goto	l16247
 13740   0081DE                     u19820:
 13741   0081DE                     
 13742                           ; BSR set to: 0
 13743   0081DE  0E00               	movlw	0
 13744   0081E0  6F6A               	movwf	_validate$3131& (0+255),b
 13745   0081E2  0E00               	movlw	0
 13746   0081E4  6F6B               	movwf	(_validate$3131+1)& (0+255),b
 13747   0081E6  EF01  F041         	goto	l1272
 13748   0081EA                     l16247:
 13749                           
 13750                           ; BSR set to: 0
 13751   0081EA  0060  F18B  FFD9   	movff	validate@obj,fsr2l
 13752   0081F0  0060  F18F  FFDA   	movff	validate@obj+1,fsr2h
 13753   0081F6  006F FF78  F06A    	movff	postinc2,_validate$3131
 13754   0081FC  006F FF74  F06B    	movff	postdec2,_validate$3131+1
 13755   008202                     l1272:
 13756                           
 13757                           ; BSR set to: 0
 13758   008202  0060  F193  FFD9   	movff	validate@rfs,fsr2l
 13759   008208  0060  F197  FFDA   	movff	validate@rfs+1,fsr2h
 13760   00820E  0060  F1AB  FFDE   	movff	_validate$3131,postinc2
 13761   008214  0060  F1AF  FFDD   	movff	_validate$3131+1,postdec2
 13762   00821A                     
 13763                           ; BSR set to: 0
 13764                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 13765   00821A  516C               	movf	validate@res& (0+255),w,b
 13766   00821C                     
 13767                           ; BSR set to: 0
 13768   00821C  0012               	return		;funcret
 13769   00821E                     __end_of_validate:
 13770                           	callstack 0
 13771                           
 13772 ;; *************** function _sync_fs *****************
 13773 ;; Defined at:
 13774 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;  fs              2  104[BANK0 ] PTR struct .
 13777 ;;		 -> FatFs(563), NULL(0), 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  res             1  114[BANK0 ] enum E68
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      enum E68
 13782 ;; Registers used:
 13783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13791 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13792 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13793 ;;Total ram usage:       11 bytes
 13794 ;; Hardware stack levels used: 1
 13795 ;; Hardware stack levels required when called: 11
 13796 ;; This function calls:
 13797 ;;		_disk_ioctl
 13798 ;;		_disk_write
 13799 ;;		_mem_set
 13800 ;;		_st_dword
 13801 ;;		_st_word
 13802 ;;		_sync_window
 13803 ;; This function is called by:
 13804 ;;		_f_sync
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808                           	psect	text40
 13809   0069E0                     __ptext40:
 13810                           	callstack 0
 13811   0069E0                     _sync_fs:
 13812                           	callstack 16
 13813   0069E0                     
 13814                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 13815   0069E0  C0C8  F0B5         	movff	sync_fs@fs,sync_window@fs
 13816   0069E4  C0C9  F0B6         	movff	sync_fs@fs+1,sync_window@fs+1
 13817   0069E8  EC19  F039         	call	_sync_window	;wreg free
 13818   0069EC  0100               	movlb	0	; () banked
 13819   0069EE  6FD2               	movwf	sync_fs@res& (0+255),b
 13820   0069F0                     
 13821                           ; BSR set to: 0
 13822                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 13823   0069F0  51D2               	movf	sync_fs@res& (0+255),w,b
 13824   0069F2  A4D8               	btfss	status,2,c
 13825   0069F4  EFFE  F034         	goto	u19171
 13826   0069F8  EF00  F035         	goto	u19170
 13827   0069FC                     u19171:
 13828   0069FC  EF0A  F036         	goto	l912
 13829   006A00                     u19170:
 13830   006A00                     
 13831                           ; BSR set to: 0
 13832                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 13833   006A00  0060  F323  FFD9   	movff	sync_fs@fs,fsr2l
 13834   006A06  0060  F327  FFDA   	movff	sync_fs@fs+1,fsr2h
 13835   006A0C  0E03               	movlw	3
 13836   006A0E  18DE               	xorwf	postinc2,w,c
 13837   006A10  A4D8               	btfss	status,2,c
 13838   006A12  EF0D  F035         	goto	u19181
 13839   006A16  EF0F  F035         	goto	u19180
 13840   006A1A                     u19181:
 13841   006A1A  EFF0  F035         	goto	l15915
 13842   006A1E                     u19180:
 13843   006A1E                     
 13844                           ; BSR set to: 0
 13845   006A1E  EE20 F004          	lfsr	2,4
 13846   006A22  51C8               	movf	sync_fs@fs& (0+255),w,b
 13847   006A24  26D9               	addwf	fsr2l,f,c
 13848   006A26  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13849   006A28  22DA               	addwfc	fsr2h,f,c
 13850   006A2A  04DE               	decf	postinc2,w,c
 13851   006A2C  A4D8               	btfss	status,2,c
 13852   006A2E  EF1B  F035         	goto	u19191
 13853   006A32  EF1D  F035         	goto	u19190
 13854   006A36                     u19191:
 13855   006A36  EFF0  F035         	goto	l15915
 13856   006A3A                     u19190:
 13857   006A3A                     
 13858                           ; BSR set to: 0
 13859                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 13860   006A3A  0E33               	movlw	51
 13861   006A3C  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13862   006A3E  6F60               	movwf	mem_set@dst& (0+255),b
 13863   006A40  0E00               	movlw	0
 13864   006A42  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13865   006A44  6F61               	movwf	(mem_set@dst+1)& (0+255),b
 13866   006A46  0E00               	movlw	0
 13867   006A48  6F63               	movwf	(mem_set@val+1)& (0+255),b
 13868   006A4A  0E00               	movlw	0
 13869   006A4C  6F62               	movwf	mem_set@val& (0+255),b
 13870   006A4E  0E02               	movlw	2
 13871   006A50  6F65               	movwf	(mem_set@cnt+1)& (0+255),b
 13872   006A52  0E00               	movlw	0
 13873   006A54  6F64               	movwf	mem_set@cnt& (0+255),b
 13874   006A56  EC87  F050         	call	_mem_set	;wreg free
 13875                           
 13876                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 13877   006A5A  0E31               	movlw	49
 13878   006A5C  0100               	movlb	0	; () banked
 13879   006A5E  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13880   006A60  6F60               	movwf	st_word@ptr& (0+255),b
 13881   006A62  0E02               	movlw	2
 13882   006A64  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13883   006A66  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 13884   006A68  0EAA               	movlw	170
 13885   006A6A  6F63               	movwf	(st_word@val+1)& (0+255),b
 13886   006A6C  0E55               	movlw	85
 13887   006A6E  6F62               	movwf	st_word@val& (0+255),b
 13888   006A70  ECFA  F050         	call	_st_word	;wreg free
 13889                           
 13890                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 13891   006A74  0E33               	movlw	51
 13892   006A76  0100               	movlb	0	; () banked
 13893   006A78  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13894   006A7A  6F60               	movwf	st_dword@ptr& (0+255),b
 13895   006A7C  0E00               	movlw	0
 13896   006A7E  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13897   006A80  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13898   006A82  0E52               	movlw	82
 13899   006A84  6F62               	movwf	st_dword@val& (0+255),b
 13900   006A86  0E52               	movlw	82
 13901   006A88  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13902   006A8A  0E61               	movlw	97
 13903   006A8C  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13904   006A8E  0E41               	movlw	65
 13905   006A90  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13906   006A92  EC87  F04A         	call	_st_dword	;wreg free
 13907                           
 13908                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 13909   006A96  0E17               	movlw	23
 13910   006A98  0100               	movlb	0	; () banked
 13911   006A9A  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13912   006A9C  6F60               	movwf	st_dword@ptr& (0+255),b
 13913   006A9E  0E02               	movlw	2
 13914   006AA0  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13915   006AA2  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13916   006AA4  0E72               	movlw	114
 13917   006AA6  6F62               	movwf	st_dword@val& (0+255),b
 13918   006AA8  0E72               	movlw	114
 13919   006AAA  6F63               	movwf	(st_dword@val+1)& (0+255),b
 13920   006AAC  0E41               	movlw	65
 13921   006AAE  6F64               	movwf	(st_dword@val+2)& (0+255),b
 13922   006AB0  0E61               	movlw	97
 13923   006AB2  6F65               	movwf	(st_dword@val+3)& (0+255),b
 13924   006AB4  EC87  F04A         	call	_st_dword	;wreg free
 13925                           
 13926                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 13927   006AB8  0E1B               	movlw	27
 13928   006ABA  0100               	movlb	0	; () banked
 13929   006ABC  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13930   006ABE  6F60               	movwf	st_dword@ptr& (0+255),b
 13931   006AC0  0E02               	movlw	2
 13932   006AC2  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13933   006AC4  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13934   006AC6  EE20 F00F          	lfsr	2,15
 13935   006ACA  51C8               	movf	sync_fs@fs& (0+255),w,b
 13936   006ACC  26D9               	addwf	fsr2l,f,c
 13937   006ACE  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13938   006AD0  22DA               	addwfc	fsr2h,f,c
 13939   006AD2  006F FF78  F062    	movff	postinc2,st_dword@val
 13940   006AD8  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13941   006ADE  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13942   006AE4  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13943   006AEA  EC87  F04A         	call	_st_dword	;wreg free
 13944                           
 13945                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 13946   006AEE  0E1F               	movlw	31
 13947   006AF0  0100               	movlb	0	; () banked
 13948   006AF2  25C8               	addwf	sync_fs@fs& (0+255),w,b
 13949   006AF4  6F60               	movwf	st_dword@ptr& (0+255),b
 13950   006AF6  0E02               	movlw	2
 13951   006AF8  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 13952   006AFA  6F61               	movwf	(st_dword@ptr+1)& (0+255),b
 13953   006AFC  EE20 F00B          	lfsr	2,11
 13954   006B00  51C8               	movf	sync_fs@fs& (0+255),w,b
 13955   006B02  26D9               	addwf	fsr2l,f,c
 13956   006B04  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13957   006B06  22DA               	addwfc	fsr2h,f,c
 13958   006B08  006F FF78  F062    	movff	postinc2,st_dword@val
 13959   006B0E  006F FF78  F063    	movff	postinc2,st_dword@val+1
 13960   006B14  006F FF78  F064    	movff	postinc2,st_dword@val+2
 13961   006B1A  006F FF78  F065    	movff	postinc2,st_dword@val+3
 13962   006B20  EC87  F04A         	call	_st_dword	;wreg free
 13963   006B24                     
 13964                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 13965   006B24  0100               	movlb	0	; () banked
 13966   006B26  EE20 F01F          	lfsr	2,31
 13967   006B2A  51C8               	movf	sync_fs@fs& (0+255),w,b
 13968   006B2C  26D9               	addwf	fsr2l,f,c
 13969   006B2E  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13970   006B30  22DA               	addwfc	fsr2h,f,c
 13971   006B32  006F FF78  F0CA    	movff	postinc2,??_sync_fs
 13972   006B38  006F FF78  F0CB    	movff	postinc2,??_sync_fs+1
 13973   006B3E  006F FF78  F0CC    	movff	postinc2,??_sync_fs+2
 13974   006B44  006F FF78  F0CD    	movff	postinc2,??_sync_fs+3
 13975   006B4A  0E01               	movlw	1
 13976   006B4C  25CA               	addwf	??_sync_fs& (0+255),w,b
 13977   006B4E  6FCE               	movwf	(??_sync_fs+4)& (0+255),b
 13978   006B50  0E00               	movlw	0
 13979   006B52  21CB               	addwfc	(??_sync_fs+1)& (0+255),w,b
 13980   006B54  6FCF               	movwf	(??_sync_fs+5)& (0+255),b
 13981   006B56  0E00               	movlw	0
 13982   006B58  21CC               	addwfc	(??_sync_fs+2)& (0+255),w,b
 13983   006B5A  6FD0               	movwf	(??_sync_fs+6)& (0+255),b
 13984   006B5C  0E00               	movlw	0
 13985   006B5E  21CD               	addwfc	(??_sync_fs+3)& (0+255),w,b
 13986   006B60  6FD1               	movwf	(??_sync_fs+7)& (0+255),b
 13987   006B62  EE20 F02F          	lfsr	2,47
 13988   006B66  51C8               	movf	sync_fs@fs& (0+255),w,b
 13989   006B68  26D9               	addwf	fsr2l,f,c
 13990   006B6A  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 13991   006B6C  22DA               	addwfc	fsr2h,f,c
 13992   006B6E  0060  F33B  FFDE   	movff	??_sync_fs+4,postinc2
 13993   006B74  0060  F33F  FFDE   	movff	??_sync_fs+5,postinc2
 13994   006B7A  0060  F343  FFDE   	movff	??_sync_fs+6,postinc2
 13995   006B80  0060  F347  FFDE   	movff	??_sync_fs+7,postinc2
 13996   006B86                     
 13997                           ; BSR set to: 0
 13998                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 13999   006B86  0E33               	movlw	51
 14000   006B88  25C8               	addwf	sync_fs@fs& (0+255),w,b
 14001   006B8A  6FAB               	movwf	disk_write@buff& (0+255),b
 14002   006B8C  0E00               	movlw	0
 14003   006B8E  21C9               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 14004   006B90  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 14005   006B92  EE20 F02F          	lfsr	2,47
 14006   006B96  51C8               	movf	sync_fs@fs& (0+255),w,b
 14007   006B98  26D9               	addwf	fsr2l,f,c
 14008   006B9A  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 14009   006B9C  22DA               	addwfc	fsr2h,f,c
 14010   006B9E  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 14011   006BA4  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 14012   006BAA  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 14013   006BB0  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 14014   006BB6  0E00               	movlw	0
 14015   006BB8  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 14016   006BBA  0E01               	movlw	1
 14017   006BBC  6FB1               	movwf	disk_write@count& (0+255),b
 14018   006BBE  EE20 F001          	lfsr	2,1
 14019   006BC2  51C8               	movf	sync_fs@fs& (0+255),w,b
 14020   006BC4  26D9               	addwf	fsr2l,f,c
 14021   006BC6  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 14022   006BC8  22DA               	addwfc	fsr2h,f,c
 14023   006BCA  50DF               	movf	indf2,w,c
 14024   006BCC  EC1D  F04D         	call	_disk_write
 14025   006BD0                     
 14026                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 14027   006BD0  0100               	movlb	0	; () banked
 14028   006BD2  EE20 F004          	lfsr	2,4
 14029   006BD6  51C8               	movf	sync_fs@fs& (0+255),w,b
 14030   006BD8  26D9               	addwf	fsr2l,f,c
 14031   006BDA  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 14032   006BDC  22DA               	addwfc	fsr2h,f,c
 14033   006BDE  6ADF               	clrf	indf2,c
 14034   006BE0                     l15915:
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 14038   006BE0  0E00               	movlw	0
 14039   006BE2  6F60               	movwf	disk_ioctl@cmd& (0+255),b
 14040   006BE4  0E00               	movlw	0
 14041   006BE6  6F61               	movwf	disk_ioctl@buff& (0+255),b
 14042   006BE8  0E00               	movlw	0
 14043   006BEA  6F62               	movwf	(disk_ioctl@buff+1)& (0+255),b
 14044   006BEC  EE20 F001          	lfsr	2,1
 14045   006BF0  51C8               	movf	sync_fs@fs& (0+255),w,b
 14046   006BF2  26D9               	addwf	fsr2l,f,c
 14047   006BF4  51C9               	movf	(sync_fs@fs+1)& (0+255),w,b
 14048   006BF6  22DA               	addwfc	fsr2h,f,c
 14049   006BF8  50DF               	movf	indf2,w,c
 14050   006BFA  ECCA  F051         	call	_disk_ioctl
 14051   006BFE  0900               	iorlw	0
 14052   006C00  B4D8               	btfsc	status,2,c
 14053   006C02  EF05  F036         	goto	u19201
 14054   006C06  EF07  F036         	goto	u19200
 14055   006C0A                     u19201:
 14056   006C0A  EF0A  F036         	goto	l912
 14057   006C0E                     u19200:
 14058   006C0E  0E01               	movlw	1
 14059   006C10  0100               	movlb	0	; () banked
 14060   006C12  6FD2               	movwf	sync_fs@res& (0+255),b
 14061   006C14                     l912:
 14062                           
 14063                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 14064   006C14  0100               	movlb	0	; () banked
 14065   006C16  51D2               	movf	sync_fs@res& (0+255),w,b
 14066   006C18                     
 14067                           ; BSR set to: 0
 14068   006C18  0012               	return		;funcret
 14069   006C1A                     __end_of_sync_fs:
 14070                           	callstack 0
 14071                           
 14072 ;; *************** function _st_dword *****************
 14073 ;; Defined at:
 14074 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 14077 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 14078 ;;  val             4    2[BANK0 ] unsigned long 
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;		None
 14081 ;; Return value:  Size  Location     Type
 14082 ;;                  1    wreg      void 
 14083 ;; Registers used:
 14084 ;;		fsr2l, fsr2h, status,2, status,0
 14085 ;; Tracked objects:
 14086 ;;		On entry : 0/0
 14087 ;;		On exit  : 0/0
 14088 ;;		Unchanged: 0/0
 14089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14093 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14094 ;;Total ram usage:        6 bytes
 14095 ;; Hardware stack levels used: 1
 14096 ;; Hardware stack levels required when called: 5
 14097 ;; This function calls:
 14098 ;;		Nothing
 14099 ;; This function is called by:
 14100 ;;		_sync_fs
 14101 ;;		_put_fat
 14102 ;;		_f_open
 14103 ;;		_f_sync
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text41
 14108   00950E                     __ptext41:
 14109                           	callstack 0
 14110   00950E                     _st_dword:
 14111                           	callstack 21
 14112   00950E                     
 14113                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 14114   00950E  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14115   009514  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14116   00951A  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14117   009520  0100               	movlb	0	; () banked
 14118   009522  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14119   009524  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14120   009526                     
 14121                           ; BSR set to: 0
 14122   009526  C063  F062         	movff	st_dword@val+1,st_dword@val
 14123   00952A  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14124   00952E  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14125   009532  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14126   009534                     
 14127                           ; BSR set to: 0
 14128                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 14129   009534  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14130   00953A  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14131   009540  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14132   009546                     
 14133                           ; BSR set to: 0
 14134   009546  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14135   009548  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14136   00954A  C063  F062         	movff	st_dword@val+1,st_dword@val
 14137   00954E  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14138   009552  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14139   009556  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14140   009558                     
 14141                           ; BSR set to: 0
 14142                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 14143   009558  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14144   00955E  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14145   009564  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14146   00956A                     
 14147                           ; BSR set to: 0
 14148   00956A  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14149   00956C  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14150   00956E                     
 14151                           ; BSR set to: 0
 14152   00956E  C063  F062         	movff	st_dword@val+1,st_dword@val
 14153   009572  C064  F063         	movff	st_dword@val+2,st_dword@val+1
 14154   009576  C065  F064         	movff	st_dword@val+3,st_dword@val+2
 14155   00957A  6B65               	clrf	(st_dword@val+3)& (0+255),b
 14156   00957C                     
 14157                           ; BSR set to: 0
 14158                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 14159   00957C  0060  F183  FFD9   	movff	st_dword@ptr,fsr2l
 14160   009582  0060  F187  FFDA   	movff	st_dword@ptr+1,fsr2h
 14161   009588  0060  F18B  FFDF   	movff	st_dword@val,indf2
 14162   00958E  4B60               	infsnz	st_dword@ptr& (0+255),f,b
 14163   009590  2B61               	incf	(st_dword@ptr+1)& (0+255),f,b
 14164   009592                     
 14165                           ; BSR set to: 0
 14166   009592  0012               	return		;funcret
 14167   009594                     __end_of_st_dword:
 14168                           	callstack 0
 14169                           
 14170 ;; *************** function _mem_set *****************
 14171 ;; Defined at:
 14172 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  dst             2    0[BANK0 ] PTR void 
 14175 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 14176 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 14177 ;;		 -> NULL(0), 
 14178 ;;  val             2    2[BANK0 ] int 
 14179 ;;  cnt             2    4[BANK0 ] unsigned int 
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;  d               2    6[BANK0 ] PTR unsigned char 
 14182 ;;		 -> Fil(546), FatFs(563), f_printf@pb(70), f_puts@pb(70), 
 14183 ;;		 -> f_putc@pb(70), f_chdir@dj(40), dj$fn(12), f_open@dj(40), 
 14184 ;;		 -> NULL(0), 
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  1    wreg      void 
 14187 ;; Registers used:
 14188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14194 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14198 ;;Total ram usage:        8 bytes
 14199 ;; Hardware stack levels used: 1
 14200 ;; Hardware stack levels required when called: 5
 14201 ;; This function calls:
 14202 ;;		Nothing
 14203 ;; This function is called by:
 14204 ;;		_sync_fs
 14205 ;;		_dir_clear
 14206 ;;		_dir_register
 14207 ;;		_create_name
 14208 ;;		_f_open
 14209 ;;		_putc_init
 14210 ;; This function uses a non-reentrant model
 14211 ;;
 14212                           
 14213                           	psect	text42
 14214   00A10E                     __ptext42:
 14215                           	callstack 0
 14216   00A10E                     _mem_set:
 14217                           	callstack 23
 14218   00A10E                     
 14219                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 14220   00A10E  C060  F066         	movff	mem_set@dst,mem_set@d
 14221   00A112  C061  F067         	movff	mem_set@dst+1,mem_set@d+1
 14222   00A116                     l15045:
 14223                           
 14224                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 14225   00A116  0060  F19B  FFD9   	movff	mem_set@d,fsr2l
 14226   00A11C  0060  F19F  FFDA   	movff	mem_set@d+1,fsr2h
 14227   00A122  0060  F18B  FFDF   	movff	mem_set@val,indf2
 14228   00A128  0100               	movlb	0	; () banked
 14229   00A12A  4B66               	infsnz	mem_set@d& (0+255),f,b
 14230   00A12C  2B67               	incf	(mem_set@d+1)& (0+255),f,b
 14231   00A12E                     
 14232                           ; BSR set to: 0
 14233                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 14234   00A12E  0764               	decf	mem_set@cnt& (0+255),f,b
 14235   00A130  A0D8               	btfss	status,0,c
 14236   00A132  0765               	decf	(mem_set@cnt+1)& (0+255),f,b
 14237   00A134  5164               	movf	mem_set@cnt& (0+255),w,b
 14238   00A136  1165               	iorwf	(mem_set@cnt+1)& (0+255),w,b
 14239   00A138  A4D8               	btfss	status,2,c
 14240   00A13A  EFA1  F050         	goto	u17561
 14241   00A13E  EFA3  F050         	goto	u17560
 14242   00A142                     u17561:
 14243   00A142  EF8B  F050         	goto	l15045
 14244   00A146                     u17560:
 14245   00A146                     
 14246                           ; BSR set to: 0
 14247   00A146  0012               	return		;funcret
 14248   00A148                     __end_of_mem_set:
 14249                           	callstack 0
 14250                           
 14251 ;; *************** function _disk_ioctl *****************
 14252 ;; Defined at:
 14253 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  pdrv            1    wreg     unsigned char 
 14256 ;;  cmd             1    0[BANK0 ] unsigned char 
 14257 ;;  buff            2    1[BANK0 ] PTR void 
 14258 ;;		 -> NULL(0), 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;  pdrv            1    3[BANK0 ] unsigned char 
 14261 ;;  res             1    0        enum E12
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      enum E12
 14264 ;; Registers used:
 14265 ;;		wreg, status,2, status,0
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14271 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;Total ram usage:        4 bytes
 14276 ;; Hardware stack levels used: 1
 14277 ;; Hardware stack levels required when called: 5
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_sync_fs
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text43
 14286   00A394                     __ptext43:
 14287                           	callstack 0
 14288   00A394                     _disk_ioctl:
 14289                           	callstack 21
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;incstack = 0
 14293                           ;disk_ioctl@pdrv stored from wreg
 14294   00A394  0100               	movlb	0	; () banked
 14295   00A396  6F63               	movwf	disk_ioctl@pdrv& (0+255),b
 14296   00A398                     
 14297                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 14298   00A398  EFD1  F051         	goto	l15569
 14299   00A39C                     l824:
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 14303   00A39C  0E00               	movlw	0
 14304   00A39E  EFDA  F051         	goto	l825
 14305   00A3A2                     l15569:
 14306   00A3A2  0100               	movlb	0	; () banked
 14307   00A3A4  5163               	movf	disk_ioctl@pdrv& (0+255),w,b
 14308                           
 14309                           ; Switch size 1, requested type "simple"
 14310                           ; Number of cases is 1, Range of values is 0 to 0
 14311                           ; switch strategies available:
 14312                           ; Name         Instructions Cycles
 14313                           ; simple_byte            4     3 (average)
 14314                           ;	Chosen strategy is simple_byte
 14315   00A3A6  0A00               	xorlw	0	; case 0
 14316   00A3A8  B4D8               	btfsc	status,2,c
 14317   00A3AA  EFCE  F051         	goto	l824
 14318   00A3AE  EFD9  F051         	goto	l15571
 14319   00A3B2                     l15571:
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 14323   00A3B2  0E04               	movlw	4
 14324   00A3B4                     l825:
 14325                           
 14326                           ; BSR set to: 0
 14327   00A3B4  0012               	return		;funcret
 14328   00A3B6                     __end_of_disk_ioctl:
 14329                           	callstack 0
 14330                           
 14331 ;; *************** function _st_clust *****************
 14332 ;; Defined at:
 14333 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  fs              2    4[BANK0 ] PTR struct .
 14336 ;;		 -> FatFs(563), NULL(0), 
 14337 ;;  dir             2    6[BANK0 ] PTR unsigned char 
 14338 ;;		 -> FatFs(563), NULL(0), 
 14339 ;;  cl              4    8[BANK0 ] unsigned long 
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;		None
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      void 
 14344 ;; Registers used:
 14345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14354 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14355 ;;Total ram usage:        9 bytes
 14356 ;; Hardware stack levels used: 1
 14357 ;; Hardware stack levels required when called: 6
 14358 ;; This function calls:
 14359 ;;		_st_word
 14360 ;; This function is called by:
 14361 ;;		_f_open
 14362 ;;		_f_sync
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           	psect	text44
 14367   009E5A                     __ptext44:
 14368                           	callstack 0
 14369   009E5A                     _st_clust:
 14370                           	callstack 22
 14371   009E5A                     
 14372                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 14373   009E5A  0E1A               	movlw	26
 14374   009E5C  0100               	movlb	0	; () banked
 14375   009E5E  2566               	addwf	st_clust@dir& (0+255),w,b
 14376   009E60  6F60               	movwf	st_word@ptr& (0+255),b
 14377   009E62  0E00               	movlw	0
 14378   009E64  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 14379   009E66  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 14380   009E68  C068  F062         	movff	st_clust@cl,st_word@val
 14381   009E6C  C069  F063         	movff	st_clust@cl+1,st_word@val+1
 14382   009E70  ECFA  F050         	call	_st_word	;wreg free
 14383   009E74                     
 14384                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 14385   009E74  0060  F193  FFD9   	movff	st_clust@fs,fsr2l
 14386   009E7A  0060  F197  FFDA   	movff	st_clust@fs+1,fsr2h
 14387   009E80  0E03               	movlw	3
 14388   009E82  18DE               	xorwf	postinc2,w,c
 14389   009E84  A4D8               	btfss	status,2,c
 14390   009E86  EF47  F04F         	goto	u19291
 14391   009E8A  EF49  F04F         	goto	u19290
 14392   009E8E                     u19291:
 14393   009E8E  EF56  F04F         	goto	l1102
 14394   009E92                     u19290:
 14395   009E92                     
 14396                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 14397   009E92  0E14               	movlw	20
 14398   009E94  0100               	movlb	0	; () banked
 14399   009E96  2566               	addwf	st_clust@dir& (0+255),w,b
 14400   009E98  6F60               	movwf	st_word@ptr& (0+255),b
 14401   009E9A  0E00               	movlw	0
 14402   009E9C  2167               	addwfc	(st_clust@dir+1)& (0+255),w,b
 14403   009E9E  6F61               	movwf	(st_word@ptr+1)& (0+255),b
 14404   009EA0  C06A  F062         	movff	st_clust@cl+2,st_word@val
 14405   009EA4  C06B  F063         	movff	st_clust@cl+3,st_word@val+1
 14406   009EA8  ECFA  F050         	call	_st_word	;wreg free
 14407   009EAC                     l1102:
 14408   009EAC  0012               	return		;funcret
 14409   009EAE                     __end_of_st_clust:
 14410                           	callstack 0
 14411                           
 14412 ;; *************** function _st_word *****************
 14413 ;; Defined at:
 14414 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 14415 ;; Parameters:    Size  Location     Type
 14416 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 14417 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 14418 ;;  val             2    2[BANK0 ] unsigned short 
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;		None
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      void 
 14423 ;; Registers used:
 14424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14434 ;;Total ram usage:        4 bytes
 14435 ;; Hardware stack levels used: 1
 14436 ;; Hardware stack levels required when called: 5
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_sync_fs
 14441 ;;		_put_fat
 14442 ;;		_st_clust
 14443 ;;		_f_sync
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text45
 14448   00A1F4                     __ptext45:
 14449                           	callstack 0
 14450   00A1F4                     _st_word:
 14451                           	callstack 21
 14452   00A1F4                     
 14453                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 14454   00A1F4  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 14455   00A1FA  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 14456   00A200  0060  F18B  FFDF   	movff	st_word@val,indf2
 14457   00A206  0100               	movlb	0	; () banked
 14458   00A208  4B60               	infsnz	st_word@ptr& (0+255),f,b
 14459   00A20A  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 14460   00A20C                     
 14461                           ; BSR set to: 0
 14462   00A20C  5163               	movf	(st_word@val+1)& (0+255),w,b
 14463   00A20E  6F62               	movwf	st_word@val& (0+255),b
 14464   00A210  6B63               	clrf	(st_word@val+1)& (0+255),b
 14465   00A212                     
 14466                           ; BSR set to: 0
 14467                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 14468   00A212  0060  F183  FFD9   	movff	st_word@ptr,fsr2l
 14469   00A218  0060  F187  FFDA   	movff	st_word@ptr+1,fsr2h
 14470   00A21E  0060  F18B  FFDF   	movff	st_word@val,indf2
 14471   00A224                     
 14472                           ; BSR set to: 0
 14473   00A224  4B60               	infsnz	st_word@ptr& (0+255),f,b
 14474   00A226  2B61               	incf	(st_word@ptr+1)& (0+255),f,b
 14475   00A228                     
 14476                           ; BSR set to: 0
 14477   00A228  0012               	return		;funcret
 14478   00A22A                     __end_of_st_word:
 14479                           	callstack 0
 14480                           
 14481 ;; *************** function _BLUE_LED_TOGGLE *****************
 14482 ;; Defined at:
 14483 ;;		line 44 in file "./common.h"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;		None
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;		None
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  1    wreg      void 
 14490 ;; Registers used:
 14491 ;;		None
 14492 ;; Tracked objects:
 14493 ;;		On entry : 0/0
 14494 ;;		On exit  : 0/0
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;Total ram usage:        0 bytes
 14502 ;; Hardware stack levels used: 1
 14503 ;; Hardware stack levels required when called: 5
 14504 ;; This function calls:
 14505 ;;		Nothing
 14506 ;; This function is called by:
 14507 ;;		_send_status_ok
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text46
 14512   00A4EC                     __ptext46:
 14513                           	callstack 0
 14514   00A4EC                     _BLUE_LED_TOGGLE:
 14515                           	callstack 24
 14516   00A4EC                     
 14517                           ;./common.h: 45:     LATA2 ^= 1;
 14518   00A4EC  74BA               	btg	16314,2,c	;volatile
 14519   00A4EE  0012               	return		;funcret
 14520   00A4F0                     __end_of_BLUE_LED_TOGGLE:
 14521                           	callstack 0
 14522                           
 14523 ;; *************** function _send_status_err *****************
 14524 ;; Defined at:
 14525 ;;		line 270 in file "main.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;		None
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;  board_stat_m   11   24[BANK0 ] struct .
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  1    wreg      void 
 14532 ;; Registers used:
 14533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14540 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14542 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14543 ;;Total ram usage:       11 bytes
 14544 ;; Hardware stack levels used: 1
 14545 ;; Hardware stack levels required when called: 9
 14546 ;; This function calls:
 14547 ;;		_RED_LED_TOGGLE
 14548 ;;		_build_board_stat_msg
 14549 ;;		_millis
 14550 ;;		_txb_enqueue
 14551 ;; This function is called by:
 14552 ;;		_main
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           
 14556                           	psect	text47
 14557   009FDA                     __ptext47:
 14558                           	callstack 0
 14559   009FDA                     _send_status_err:
 14560                           	callstack 21
 14561   009FDA                     
 14562                           ;main.c: 271:     can_msg_t board_stat_msg;;main.c: 272:     build_board_stat_msg(millis
      +                          (), E_MISSING_CRITICAL_BOARD, ((void*)0), 0, &board_stat_msg);
 14563   009FDA  EC59  F051         	call	_millis	;wreg free
 14564   009FDE  C060  F068         	movff	?_millis,build_board_stat_msg@timestamp
 14565   009FE2  C061  F069         	movff	?_millis+1,build_board_stat_msg@timestamp+1
 14566   009FE6  C062  F06A         	movff	?_millis+2,build_board_stat_msg@timestamp+2
 14567   009FEA  C063  F06B         	movff	?_millis+3,build_board_stat_msg@timestamp+3
 14568   009FEE  0E0B               	movlw	11
 14569   009FF0  0100               	movlb	0	; () banked
 14570   009FF2  6F6C               	movwf	build_board_stat_msg@error_code& (0+255),b
 14571   009FF4  0E00               	movlw	0
 14572   009FF6  6F6D               	movwf	build_board_stat_msg@error_data& (0+255),b
 14573   009FF8  0E00               	movlw	0
 14574   009FFA  6F6E               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
 14575   009FFC  0E00               	movlw	0
 14576   009FFE  6F6F               	movwf	build_board_stat_msg@error_data_len& (0+255),b
 14577   00A000  0E78               	movlw	low send_status_err@board_stat_msg
 14578   00A002  6F70               	movwf	build_board_stat_msg@output& (0+255),b
 14579   00A004  6B71               	clrf	(build_board_stat_msg@output+1)& (0+255),b
 14580   00A006  EC97  F041         	call	_build_board_stat_msg	;wreg free
 14581   00A00A                     
 14582                           ;main.c: 273:     txb_enqueue(&board_stat_msg);
 14583   00A00A  0E78               	movlw	low send_status_err@board_stat_msg
 14584   00A00C  0100               	movlb	0	; () banked
 14585   00A00E  6F76               	movwf	txb_enqueue@msg& (0+255),b
 14586   00A010  6B77               	clrf	(txb_enqueue@msg+1)& (0+255),b
 14587   00A012  ECA4  F050         	call	_txb_enqueue	;wreg free
 14588   00A016                     
 14589                           ;main.c: 275:     RED_LED_TOGGLE();
 14590   00A016  EC78  F052         	call	_RED_LED_TOGGLE	;wreg free
 14591   00A01A  0012               	return		;funcret
 14592   00A01C                     __end_of_send_status_err:
 14593                           	callstack 0
 14594                           
 14595 ;; *************** function _txb_enqueue *****************
 14596 ;; Defined at:
 14597 ;;		line 23 in file "canlib/util/can_tx_buffer.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  msg             2   22[BANK0 ] PTR const struct .
 14600 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1    wreg      _Bool 
 14605 ;; Registers used:
 14606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;Total ram usage:        2 bytes
 14617 ;; Hardware stack levels used: 1
 14618 ;; Hardware stack levels required when called: 8
 14619 ;; This function calls:
 14620 ;;		_srb_is_full
 14621 ;;		_srb_push
 14622 ;; This function is called by:
 14623 ;;		_send_status_ok
 14624 ;;		_send_status_err
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text48
 14629   00A148                     __ptext48:
 14630                           	callstack 0
 14631   00A148                     _txb_enqueue:
 14632                           	callstack 21
 14633   00A148                     
 14634                           ;canlib/util/can_tx_buffer.c: 24:     if (srb_is_full(&buf)) {
 14635   00A148  0EE4               	movlw	low _buf@can_tx_buffer$F1072
 14636   00A14A  0100               	movlb	0	; () banked
 14637   00A14C  6F60               	movwf	srb_is_full@ctx& (0+255),b
 14638   00A14E  0E01               	movlw	high _buf@can_tx_buffer$F1072
 14639   00A150  6F61               	movwf	(srb_is_full@ctx+1)& (0+255),b
 14640   00A152  EC6E  F048         	call	_srb_is_full	;wreg free
 14641   00A156  0900               	iorlw	0
 14642   00A158  B4D8               	btfsc	status,2,c
 14643   00A15A  EFB1  F050         	goto	u20991
 14644   00A15E  EFB3  F050         	goto	u20990
 14645   00A162                     u20991:
 14646   00A162  EFB5  F050         	goto	l16995
 14647   00A166                     u20990:
 14648   00A166  EFC0  F050         	goto	l187
 14649   00A16A                     l16995:
 14650                           
 14651                           ;canlib/util/can_tx_buffer.c: 27:     srb_push(&buf, msg);
 14652   00A16A  0EE4               	movlw	low _buf@can_tx_buffer$F1072
 14653   00A16C  0100               	movlb	0	; () banked
 14654   00A16E  6F6C               	movwf	srb_push@ctx& (0+255),b
 14655   00A170  0E01               	movlw	high _buf@can_tx_buffer$F1072
 14656   00A172  6F6D               	movwf	(srb_push@ctx+1)& (0+255),b
 14657   00A174  C076  F06E         	movff	txb_enqueue@msg,srb_push@element
 14658   00A178  C077  F06F         	movff	txb_enqueue@msg+1,srb_push@element+1
 14659   00A17C  EC19  F045         	call	_srb_push	;wreg free
 14660   00A180                     l187:
 14661   00A180  0012               	return		;funcret
 14662   00A182                     __end_of_txb_enqueue:
 14663                           	callstack 0
 14664                           
 14665 ;; *************** function _srb_push *****************
 14666 ;; Defined at:
 14667 ;;		line 26 in file "canlib/util/safe_ring_buffer.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  ctx             2   12[BANK0 ] PTR struct .
 14670 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14671 ;;  element         2   14[BANK0 ] PTR const void 
 14672 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;  offset          2   20[BANK0 ] unsigned int 
 14675 ;; Return value:  Size  Location     Type
 14676 ;;                  1    wreg      _Bool 
 14677 ;; Registers used:
 14678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14679 ;; Tracked objects:
 14680 ;;		On entry : 0/0
 14681 ;;		On exit  : 0/0
 14682 ;;		Unchanged: 0/0
 14683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14688 ;;Total ram usage:       10 bytes
 14689 ;; Hardware stack levels used: 1
 14690 ;; Hardware stack levels required when called: 7
 14691 ;; This function calls:
 14692 ;;		_get_offset_bytes
 14693 ;;		_memcpy
 14694 ;;		_srb_is_full
 14695 ;; This function is called by:
 14696 ;;		_txb_enqueue
 14697 ;;		_rcvb_push_message
 14698 ;; This function uses a non-reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text49
 14702   008A32                     __ptext49:
 14703                           	callstack 0
 14704   008A32                     _srb_push:
 14705                           	callstack 21
 14706   008A32                     
 14707                           ;canlib/util/safe_ring_buffer.c: 26: _Bool srb_push(srb_ctx_t *ctx,;canlib/util/safe_rin
      +                          g_buffer.c: 27:               const void *element);canlib/util/safe_ring_buffer.c: 28: {
      +                          ;canlib/util/safe_ring_buffer.c: 29:     if (srb_is_full(ctx)) {
 14708   008A32  C06C  F060         	movff	srb_push@ctx,srb_is_full@ctx
 14709   008A36  C06D  F061         	movff	srb_push@ctx+1,srb_is_full@ctx+1
 14710   008A3A  EC6E  F048         	call	_srb_is_full	;wreg free
 14711   008A3E  0900               	iorlw	0
 14712   008A40  B4D8               	btfsc	status,2,c
 14713   008A42  EF25  F045         	goto	u19881
 14714   008A46  EF27  F045         	goto	u19880
 14715   008A4A                     u19881:
 14716   008A4A  EF2A  F045         	goto	l16323
 14717   008A4E                     u19880:
 14718   008A4E                     
 14719                           ;canlib/util/safe_ring_buffer.c: 30:         return 0;
 14720   008A4E  0E00               	movlw	0
 14721   008A50  EF8A  F045         	goto	l207
 14722   008A54                     l16323:
 14723                           
 14724                           ;canlib/util/safe_ring_buffer.c: 32:     size_t offset = get_offset_bytes(ctx, ctx->wr_i
      +                          dx);
 14725   008A54  C06C  F066         	movff	srb_push@ctx,get_offset_bytes@ctx
 14726   008A58  C06D  F067         	movff	srb_push@ctx+1,get_offset_bytes@ctx+1
 14727   008A5C  0100               	movlb	0	; () banked
 14728   008A5E  EE20 F008          	lfsr	2,8
 14729   008A62  516C               	movf	srb_push@ctx& (0+255),w,b
 14730   008A64  26D9               	addwf	fsr2l,f,c
 14731   008A66  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14732   008A68  22DA               	addwfc	fsr2h,f,c
 14733   008A6A  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
 14734   008A70  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
 14735   008A76  EC4C  F04E         	call	_get_offset_bytes	;wreg free
 14736   008A7A  C066  F074         	movff	?_get_offset_bytes,srb_push@offset
 14737   008A7E  C067  F075         	movff	?_get_offset_bytes+1,srb_push@offset+1
 14738   008A82                     
 14739                           ;canlib/util/safe_ring_buffer.c: 33:     memcpy(((uint8_t *) ctx->memory_pool) + offset,
      +                           element, ctx->element_size);
 14740   008A82  0060  F1B3  FFD9   	movff	srb_push@ctx,fsr2l
 14741   008A88  0060  F1B7  FFDA   	movff	srb_push@ctx+1,fsr2h
 14742   008A8E  006F FF78  F070    	movff	postinc2,??_srb_push
 14743   008A94  006F FF74  F071    	movff	postdec2,??_srb_push+1
 14744   008A9A  0100               	movlb	0	; () banked
 14745   008A9C  5174               	movf	srb_push@offset& (0+255),w,b
 14746   008A9E  2570               	addwf	??_srb_push& (0+255),w,b
 14747   008AA0  6F60               	movwf	memcpy@d1& (0+255),b
 14748   008AA2  5175               	movf	(srb_push@offset+1)& (0+255),w,b
 14749   008AA4  2171               	addwfc	(??_srb_push+1)& (0+255),w,b
 14750   008AA6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14751   008AA8  C06E  F062         	movff	srb_push@element,memcpy@s1
 14752   008AAC  C06F  F063         	movff	srb_push@element+1,memcpy@s1+1
 14753   008AB0  EE20 F002          	lfsr	2,2
 14754   008AB4  516C               	movf	srb_push@ctx& (0+255),w,b
 14755   008AB6  26D9               	addwf	fsr2l,f,c
 14756   008AB8  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14757   008ABA  22DA               	addwfc	fsr2h,f,c
 14758   008ABC  006F FF78  F064    	movff	postinc2,memcpy@n
 14759   008AC2  006F FF74  F065    	movff	postdec2,memcpy@n+1
 14760   008AC8  EC7B  F04E         	call	_memcpy	;wreg free
 14761   008ACC                     
 14762                           ;canlib/util/safe_ring_buffer.c: 34:     if ( ++(ctx->wr_idx) >= ctx->max_elements) {
 14763   008ACC  0100               	movlb	0	; () banked
 14764   008ACE  EE20 F004          	lfsr	2,4
 14765   008AD2  516C               	movf	srb_push@ctx& (0+255),w,b
 14766   008AD4  26D9               	addwf	fsr2l,f,c
 14767   008AD6  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14768   008AD8  22DA               	addwfc	fsr2h,f,c
 14769   008ADA  EE10 F008          	lfsr	1,8
 14770   008ADE  516C               	movf	srb_push@ctx& (0+255),w,b
 14771   008AE0  26E1               	addwf	fsr1l,f,c
 14772   008AE2  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14773   008AE4  22E2               	addwfc	fsr1h,f,c
 14774   008AE6  2AE6               	incf	postinc1,f,c
 14775   008AE8  0E00               	movlw	0
 14776   008AEA  22E5               	addwfc	postdec1,f,c
 14777   008AEC  50DE               	movf	postinc2,w,c
 14778   008AEE  5CE6               	subwf	postinc1,w,c
 14779   008AF0  50DE               	movf	postinc2,w,c
 14780   008AF2  58E6               	subwfb	postinc1,w,c
 14781   008AF4  A0D8               	btfss	status,0,c
 14782   008AF6  EF7F  F045         	goto	u19891
 14783   008AFA  EF81  F045         	goto	u19890
 14784   008AFE                     u19891:
 14785   008AFE  EF89  F045         	goto	l16331
 14786   008B02                     u19890:
 14787   008B02                     
 14788                           ; BSR set to: 0
 14789                           ;canlib/util/safe_ring_buffer.c: 35:         ctx->wr_idx = 0;
 14790   008B02  EE20 F008          	lfsr	2,8
 14791   008B06  516C               	movf	srb_push@ctx& (0+255),w,b
 14792   008B08  26D9               	addwf	fsr2l,f,c
 14793   008B0A  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
 14794   008B0C  22DA               	addwfc	fsr2h,f,c
 14795   008B0E  6ADE               	clrf	postinc2,c
 14796   008B10  6ADD               	clrf	postdec2,c
 14797   008B12                     l16331:
 14798                           
 14799                           ; BSR set to: 0
 14800                           ;canlib/util/safe_ring_buffer.c: 37:     return 1;
 14801   008B12  0E01               	movlw	1
 14802   008B14                     l207:
 14803   008B14  0012               	return		;funcret
 14804   008B16                     __end_of_srb_push:
 14805                           	callstack 0
 14806                           
 14807 ;; *************** function _srb_is_full *****************
 14808 ;; Defined at:
 14809 ;;		line 40 in file "canlib/util/safe_ring_buffer.c"
 14810 ;; Parameters:    Size  Location     Type
 14811 ;;  ctx             2    0[BANK0 ] PTR const struct .
 14812 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;		None
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      _Bool 
 14817 ;; Registers used:
 14818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;Total ram usage:        6 bytes
 14829 ;; Hardware stack levels used: 1
 14830 ;; Hardware stack levels required when called: 5
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_txb_enqueue
 14835 ;;		_srb_push
 14836 ;;		_rcvb_is_full
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text50
 14841   0090DC                     __ptext50:
 14842                           	callstack 0
 14843   0090DC                     _srb_is_full:
 14844                           	callstack 22
 14845   0090DC                     
 14846                           ;canlib/util/safe_ring_buffer.c: 40: _Bool srb_is_full(const srb_ctx_t *ctx);canlib/util
      +                          /safe_ring_buffer.c: 41: {;canlib/util/safe_ring_buffer.c: 42:     if ((ctx->wr_idx + 1 
      +                          == ctx->rd_idx) || (ctx->wr_idx + 1 == ctx->max_elements && ctx->rd_idx == 0)) {
 14847   0090DC  0100               	movlb	0	; () banked
 14848   0090DE  EE20 F006          	lfsr	2,6
 14849   0090E2  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14850   0090E4  26D9               	addwf	fsr2l,f,c
 14851   0090E6  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14852   0090E8  22DA               	addwfc	fsr2h,f,c
 14853   0090EA  EE10 F008          	lfsr	1,8
 14854   0090EE  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14855   0090F0  26E1               	addwf	fsr1l,f,c
 14856   0090F2  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14857   0090F4  22E2               	addwfc	fsr1h,f,c
 14858   0090F6  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
 14859   0090FC  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
 14860   009102  0E01               	movlw	1
 14861   009104  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
 14862   009106  0E00               	movlw	0
 14863   009108  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
 14864   00910A  50DE               	movf	postinc2,w,c
 14865   00910C  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
 14866   00910E  E109               	bnz	u19090
 14867   009110  50DE               	movf	postinc2,w,c
 14868   009112  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
 14869   009114  B4D8               	btfsc	status,2,c
 14870   009116  EF8F  F048         	goto	u19091
 14871   00911A  EF91  F048         	goto	u19090
 14872   00911E                     u19091:
 14873   00911E  EFC2  F048         	goto	l15853
 14874   009122                     u19090:
 14875   009122                     
 14876                           ; BSR set to: 0
 14877   009122  EE20 F004          	lfsr	2,4
 14878   009126  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14879   009128  26D9               	addwf	fsr2l,f,c
 14880   00912A  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14881   00912C  22DA               	addwfc	fsr2h,f,c
 14882   00912E  EE10 F008          	lfsr	1,8
 14883   009132  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14884   009134  26E1               	addwf	fsr1l,f,c
 14885   009136  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14886   009138  22E2               	addwfc	fsr1h,f,c
 14887   00913A  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
 14888   009140  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
 14889   009146  0E01               	movlw	1
 14890   009148  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
 14891   00914A  0E00               	movlw	0
 14892   00914C  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
 14893   00914E  50DE               	movf	postinc2,w,c
 14894   009150  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
 14895   009152  E107               	bnz	u19101
 14896   009154  50DE               	movf	postinc2,w,c
 14897   009156  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
 14898   009158  A4D8               	btfss	status,2,c
 14899   00915A  EFB1  F048         	goto	u19101
 14900   00915E  EFB3  F048         	goto	u19100
 14901   009162                     u19101:
 14902   009162  EFC5  F048         	goto	l15859
 14903   009166                     u19100:
 14904   009166                     
 14905                           ; BSR set to: 0
 14906   009166  EE20 F006          	lfsr	2,6
 14907   00916A  5160               	movf	srb_is_full@ctx& (0+255),w,b
 14908   00916C  26D9               	addwf	fsr2l,f,c
 14909   00916E  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
 14910   009170  22DA               	addwfc	fsr2h,f,c
 14911   009172  50DE               	movf	postinc2,w,c
 14912   009174  10DE               	iorwf	postinc2,w,c
 14913   009176  A4D8               	btfss	status,2,c
 14914   009178  EFC0  F048         	goto	u19111
 14915   00917C  EFC2  F048         	goto	u19110
 14916   009180                     u19111:
 14917   009180  EFC5  F048         	goto	l15859
 14918   009184                     u19110:
 14919   009184                     l15853:
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;canlib/util/safe_ring_buffer.c: 43:         return 1;
 14923   009184  0E01               	movlw	1
 14924   009186  EFC6  F048         	goto	l214
 14925   00918A                     l15859:
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;canlib/util/safe_ring_buffer.c: 45:         return 0;
 14929   00918A  0E00               	movlw	0
 14930   00918C                     l214:
 14931                           
 14932                           ; BSR set to: 0
 14933   00918C  0012               	return		;funcret
 14934   00918E                     __end_of_srb_is_full:
 14935                           	callstack 0
 14936                           
 14937 ;; *************** function _get_offset_bytes *****************
 14938 ;; Defined at:
 14939 ;;		line 5 in file "canlib/util/safe_ring_buffer.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;  ctx             2    6[BANK0 ] PTR const struct .
 14942 ;;		 -> buf@can_tx_buffer$F1072(10), buf(10), 
 14943 ;;  index           2    8[BANK0 ] unsigned int 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  2    6[BANK0 ] unsigned int 
 14948 ;; Registers used:
 14949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;Total ram usage:        6 bytes
 14960 ;; Hardware stack levels used: 1
 14961 ;; Hardware stack levels required when called: 6
 14962 ;; This function calls:
 14963 ;;		___wmul
 14964 ;; This function is called by:
 14965 ;;		_srb_push
 14966 ;;		_srb_pop
 14967 ;;		_srb_peek
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text51
 14972   009C98                     __ptext51:
 14973                           	callstack 0
 14974   009C98                     _get_offset_bytes:
 14975                           	callstack 22
 14976   009C98                     
 14977                           ;canlib/util/safe_ring_buffer.c: 5: static size_t get_offset_bytes(const srb_ctx_t *ctx,
      +                          ;canlib/util/safe_ring_buffer.c: 6:                                size_t index);canlib/
      +                          util/safe_ring_buffer.c: 7: {;canlib/util/safe_ring_buffer.c: 8:     if (index >= ctx->m
      +                          ax_elements) {
 14978   009C98  0100               	movlb	0	; () banked
 14979   009C9A  EE20 F004          	lfsr	2,4
 14980   009C9E  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
 14981   009CA0  26D9               	addwf	fsr2l,f,c
 14982   009CA2  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
 14983   009CA4  22DA               	addwfc	fsr2h,f,c
 14984   009CA6  50DE               	movf	postinc2,w,c
 14985   009CA8  5D68               	subwf	get_offset_bytes@index& (0+255),w,b
 14986   009CAA  50DE               	movf	postinc2,w,c
 14987   009CAC  5969               	subwfb	(get_offset_bytes@index+1)& (0+255),w,b
 14988   009CAE  A0D8               	btfss	status,0,c
 14989   009CB0  EF5C  F04E         	goto	u19121
 14990   009CB4  EF5E  F04E         	goto	u19120
 14991   009CB8                     u19121:
 14992   009CB8  EF64  F04E         	goto	l15869
 14993   009CBC                     u19120:
 14994   009CBC                     
 14995                           ; BSR set to: 0
 14996                           ;canlib/util/safe_ring_buffer.c: 9:         return 0;
 14997   009CBC  0E00               	movlw	0
 14998   009CBE  6F67               	movwf	(?_get_offset_bytes+1)& (0+255),b
 14999   009CC0  0E00               	movlw	0
 15000   009CC2  6F66               	movwf	?_get_offset_bytes& (0+255),b
 15001   009CC4  EF7A  F04E         	goto	l200
 15002   009CC8                     l15869:
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;canlib/util/safe_ring_buffer.c: 11:     return index * (ctx->element_size);
 15006   009CC8  EE20 F002          	lfsr	2,2
 15007   009CCC  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
 15008   009CCE  26D9               	addwf	fsr2l,f,c
 15009   009CD0  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
 15010   009CD2  22DA               	addwfc	fsr2h,f,c
 15011   009CD4  006F FF78  F060    	movff	postinc2,___wmul@multiplier
 15012   009CDA  006F FF74  F061    	movff	postdec2,___wmul@multiplier+1
 15013   009CE0  C068  F062         	movff	get_offset_bytes@index,___wmul@multiplicand
 15014   009CE4  C069  F063         	movff	get_offset_bytes@index+1,___wmul@multiplicand+1
 15015   009CE8  EC2D  F051         	call	___wmul	;wreg free
 15016   009CEC  C060  F066         	movff	?___wmul,?_get_offset_bytes
 15017   009CF0  C061  F067         	movff	?___wmul+1,?_get_offset_bytes+1
 15018   009CF4                     l200:
 15019   009CF4  0012               	return		;funcret
 15020   009CF6                     __end_of_get_offset_bytes:
 15021                           	callstack 0
 15022                           
 15023 ;; *************** function ___wmul *****************
 15024 ;; Defined at:
 15025 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15028 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  product         2    4[BANK0 ] unsigned int 
 15031 ;; Return value:  Size  Location     Type
 15032 ;;                  2    0[BANK0 ] unsigned int 
 15033 ;; Registers used:
 15034 ;;		wreg, status,2, status,0, prodl, prodh
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15040 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15043 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;Total ram usage:        6 bytes
 15045 ;; Hardware stack levels used: 1
 15046 ;; Hardware stack levels required when called: 5
 15047 ;; This function calls:
 15048 ;;		Nothing
 15049 ;; This function is called by:
 15050 ;;		_get_offset_bytes
 15051 ;;		_f_printf
 15052 ;; This function uses a non-reentrant model
 15053 ;;
 15054                           
 15055                           	psect	text52
 15056   00A25A                     __ptext52:
 15057                           	callstack 0
 15058   00A25A                     ___wmul:
 15059                           	callstack 22
 15060   00A25A  0100               	movlb	0	; () banked
 15061   00A25C  5160               	movf	___wmul@multiplier& (0+255),w,b
 15062   00A25E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15063   00A260  006F FFCC  F064    	movff	prodl,___wmul@product
 15064   00A266  006F FFD0  F065    	movff	prodh,___wmul@product+1
 15065   00A26C  5160               	movf	___wmul@multiplier& (0+255),w,b
 15066   00A26E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15067   00A270  50F3               	movf	243,w,c
 15068   00A272  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15069   00A274  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15070   00A276  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15071   00A278  50F3               	movf	243,w,c
 15072   00A27A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15073   00A27C                     
 15074                           ; BSR set to: 0
 15075   00A27C  C064  F060         	movff	___wmul@product,?___wmul
 15076   00A280  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15077   00A284                     
 15078                           ; BSR set to: 0
 15079   00A284  0012               	return		;funcret
 15080   00A286                     __end_of___wmul:
 15081                           	callstack 0
 15082                           
 15083 ;; *************** function _millis *****************
 15084 ;; Defined at:
 15085 ;;		line 26 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;  res             4    4[BANK0 ] unsigned long 
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  4    0[BANK0 ] unsigned long 
 15092 ;; Registers used:
 15093 ;;		None
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15102 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15103 ;;Total ram usage:        8 bytes
 15104 ;; Hardware stack levels used: 1
 15105 ;; Hardware stack levels required when called: 5
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_main
 15110 ;;		_send_status_ok
 15111 ;;		_send_status_err
 15112 ;; This function uses a non-reentrant model
 15113 ;;
 15114                           
 15115                           	psect	text53
 15116   00A2B2                     __ptext53:
 15117                           	callstack 0
 15118   00A2B2                     _millis:
 15119                           	callstack 24
 15120   00A2B2                     
 15121                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 27:     INTCON0bits.GIE = 0;
 15122   00A2B2  9ED2               	bcf	210,7,c	;volatile
 15123                           
 15124                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 28:     uint32_t res = millis_counter;
 15125   00A2B4  C03E  F064         	movff	_millis_counter,millis@res	;volatile
 15126   00A2B8  C03F  F065         	movff	_millis_counter+1,millis@res+1	;volatile
 15127   00A2BC  C040  F066         	movff	_millis_counter+2,millis@res+2	;volatile
 15128   00A2C0  C041  F067         	movff	_millis_counter+3,millis@res+3	;volatile
 15129                           
 15130                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 29:     INTCON0bits.GIE = 1;
 15131   00A2C4  8ED2               	bsf	210,7,c	;volatile
 15132                           
 15133                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 30:     return res;
 15134   00A2C6  C064  F060         	movff	millis@res,?_millis
 15135   00A2CA  C065  F061         	movff	millis@res+1,?_millis+1
 15136   00A2CE  C066  F062         	movff	millis@res+2,?_millis+2
 15137   00A2D2  C067  F063         	movff	millis@res+3,?_millis+3
 15138   00A2D6  0012               	return		;funcret
 15139   00A2D8                     __end_of_millis:
 15140                           	callstack 0
 15141                           
 15142 ;; *************** function _build_board_stat_msg *****************
 15143 ;; Defined at:
 15144 ;;		line 189 in file "canlib/can_common.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;  timestamp       4    8[BANK0 ] unsigned long 
 15147 ;;  error_code      1   12[BANK0 ] enum E60
 15148 ;;  error_data      2   13[BANK0 ] PTR const unsigned char 
 15149 ;;		 -> NULL(0), 
 15150 ;;  error_data_l    1   15[BANK0 ] unsigned char 
 15151 ;;  output          2   16[BANK0 ] PTR struct .
 15152 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;  i               2   21[BANK0 ] int 
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  1    wreg      _Bool 
 15157 ;; Registers used:
 15158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15164 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15166 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;Total ram usage:       15 bytes
 15169 ;; Hardware stack levels used: 1
 15170 ;; Hardware stack levels required when called: 6
 15171 ;; This function calls:
 15172 ;;		_write_timestamp_3bytes
 15173 ;; This function is called by:
 15174 ;;		_send_status_ok
 15175 ;;		_send_status_err
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text54
 15180   00832E                     __ptext54:
 15181                           	callstack 0
 15182   00832E                     _build_board_stat_msg:
 15183                           	callstack 23
 15184   00832E                     
 15185                           ;canlib/can_common.c: 189: _Bool build_board_stat_msg(uint32_t timestamp,;canlib/can_com
      +                          mon.c: 190:                           enum BOARD_STATUS error_code,;canlib/can_common.c:
      +                           191:                           const uint8_t *error_data,;canlib/can_common.c: 192:    
      +                                                 uint8_t error_data_len,;canlib/can_common.c: 193:                
      +                                     can_msg_t *output);canlib/can_common.c: 194: {;canlib/can_common.c: 195:     
      +                          if (error_data_len > 0 && !error_data) { return 0; }
 15186   00832E  0100               	movlb	0	; () banked
 15187   008330  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15188   008332  B4D8               	btfsc	status,2,c
 15189   008334  EF9E  F041         	goto	u21001
 15190   008338  EFA0  F041         	goto	u21000
 15191   00833C                     u21001:
 15192   00833C  EFAB  F041         	goto	l17007
 15193   008340                     u21000:
 15194   008340                     
 15195                           ; BSR set to: 0
 15196   008340  516D               	movf	build_board_stat_msg@error_data& (0+255),w,b
 15197   008342  116E               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
 15198   008344  A4D8               	btfss	status,2,c
 15199   008346  EFA7  F041         	goto	u21011
 15200   00834A  EFA9  F041         	goto	u21010
 15201   00834E                     u21011:
 15202   00834E  EFAB  F041         	goto	l17007
 15203   008352                     u21010:
 15204   008352  EF1A  F042         	goto	l292
 15205   008356                     l17007:
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;canlib/can_common.c: 196:     if (!output) { return 0; }
 15209   008356  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15210   008358  1171               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
 15211   00835A  A4D8               	btfss	status,2,c
 15212   00835C  EFB2  F041         	goto	u21021
 15213   008360  EFB4  F041         	goto	u21020
 15214   008364                     u21021:
 15215   008364  EFB6  F041         	goto	l17011
 15216   008368                     u21020:
 15217   008368  EF1A  F042         	goto	l292
 15218   00836C                     l17011:
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;canlib/can_common.c: 197:     if (error_data_len > 4) { return 0; }
 15222   00836C  0E04               	movlw	4
 15223   00836E  656F               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
 15224   008370  EFBC  F041         	goto	u21031
 15225   008374  EFBE  F041         	goto	u21030
 15226   008378                     u21031:
 15227   008378  EFC0  F041         	goto	l17015
 15228   00837C                     u21030:
 15229   00837C  EF1A  F042         	goto	l292
 15230   008380                     l17015:
 15231                           
 15232                           ; BSR set to: 0
 15233                           ;canlib/can_common.c: 199:     output->sid = 0x520 | 0x0C;
 15234   008380  0060  F1C3  FFD9   	movff	build_board_stat_msg@output,fsr2l
 15235   008386  0060  F1C7  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
 15236   00838C  0E2C               	movlw	44
 15237   00838E  6EDE               	movwf	postinc2,c
 15238   008390  0E05               	movlw	5
 15239   008392  6EDD               	movwf	postdec2,c
 15240   008394                     
 15241                           ; BSR set to: 0
 15242                           ;canlib/can_common.c: 200:     write_timestamp_3bytes(timestamp, output);
 15243   008394  C068  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
 15244   008398  C069  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
 15245   00839C  C06A  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
 15246   0083A0  C06B  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
 15247   0083A4  C070  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
 15248   0083A8  C071  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
 15249   0083AC  ECC1  F050         	call	_write_timestamp_3bytes	;wreg free
 15250   0083B0                     
 15251                           ;canlib/can_common.c: 202:     output->data[3] = (uint8_t) error_code;
 15252   0083B0  0100               	movlb	0	; () banked
 15253   0083B2  EE20 F006          	lfsr	2,6
 15254   0083B6  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15255   0083B8  26D9               	addwf	fsr2l,f,c
 15256   0083BA  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 15257   0083BC  22DA               	addwfc	fsr2h,f,c
 15258   0083BE  0060  F1B3  FFDF   	movff	build_board_stat_msg@error_code,indf2
 15259   0083C4                     
 15260                           ; BSR set to: 0
 15261                           ;canlib/can_common.c: 203:     for (int i = 0; i < error_data_len; ++i) {
 15262   0083C4  0E00               	movlw	0
 15263   0083C6  6F76               	movwf	(build_board_stat_msg@i+1)& (0+255),b
 15264   0083C8  0E00               	movlw	0
 15265   0083CA  6F75               	movwf	build_board_stat_msg@i& (0+255),b
 15266   0083CC  EFFF  F041         	goto	l17027
 15267   0083D0                     l17023:
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;canlib/can_common.c: 205:         output->data[4 + i] = error_data[i];
 15271   0083D0  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 15272   0083D2  256D               	addwf	build_board_stat_msg@error_data& (0+255),w,b
 15273   0083D4  6ED9               	movwf	fsr2l,c
 15274   0083D6  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15275   0083D8  216E               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
 15276   0083DA  6EDA               	movwf	fsr2h,c
 15277   0083DC  5175               	movf	build_board_stat_msg@i& (0+255),w,b
 15278   0083DE  2570               	addwf	build_board_stat_msg@output& (0+255),w,b
 15279   0083E0  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 15280   0083E2  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15281   0083E4  2171               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
 15282   0083E6  6F73               	movwf	(??_build_board_stat_msg+1)& (0+255),b
 15283   0083E8  0E07               	movlw	7
 15284   0083EA  2572               	addwf	??_build_board_stat_msg& (0+255),w,b
 15285   0083EC  6EE1               	movwf	fsr1l,c
 15286   0083EE  0E00               	movlw	0
 15287   0083F0  2173               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
 15288   0083F2  6EE2               	movwf	fsr1h,c
 15289   0083F4  006F FF7F FFE7     	movff	indf2,indf1
 15290   0083FA                     
 15291                           ; BSR set to: 0
 15292                           ;canlib/can_common.c: 206:     }
 15293   0083FA  4B75               	infsnz	build_board_stat_msg@i& (0+255),f,b
 15294   0083FC  2B76               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
 15295   0083FE                     l17027:
 15296                           
 15297                           ; BSR set to: 0
 15298   0083FE  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15299   008400  6F72               	movwf	??_build_board_stat_msg& (0+255),b
 15300   008402  6B73               	clrf	(??_build_board_stat_msg+1)& (0+255),b
 15301   008404  5172               	movf	??_build_board_stat_msg& (0+255),w,b
 15302   008406  5D75               	subwf	build_board_stat_msg@i& (0+255),w,b
 15303   008408  5176               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
 15304   00840A  0A80               	xorlw	128
 15305   00840C  6F74               	movwf	(??_build_board_stat_msg+2)& (0+255),b
 15306   00840E  5173               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
 15307   008410  0A80               	xorlw	128
 15308   008412  5974               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
 15309   008414  A0D8               	btfss	status,0,c
 15310   008416  EF0F  F042         	goto	u21041
 15311   00841A  EF11  F042         	goto	u21040
 15312   00841E                     u21041:
 15313   00841E  EFE8  F041         	goto	l17023
 15314   008422                     u21040:
 15315   008422                     
 15316                           ; BSR set to: 0
 15317                           ;canlib/can_common.c: 209:     output->data_len = 4 + error_data_len;
 15318   008422  EE20 F002          	lfsr	2,2
 15319   008426  5170               	movf	build_board_stat_msg@output& (0+255),w,b
 15320   008428  26D9               	addwf	fsr2l,f,c
 15321   00842A  5171               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
 15322   00842C  22DA               	addwfc	fsr2h,f,c
 15323   00842E  516F               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
 15324   008430  0F04               	addlw	4
 15325   008432  6EDF               	movwf	indf2,c
 15326   008434                     l292:
 15327                           
 15328                           ; BSR set to: 0
 15329   008434  0012               	return		;funcret
 15330   008436                     __end_of_build_board_stat_msg:
 15331                           	callstack 0
 15332                           
 15333 ;; *************** function _write_timestamp_3bytes *****************
 15334 ;; Defined at:
 15335 ;;		line 20 in file "canlib/can_common.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  timestamp       4    0[BANK0 ] unsigned long 
 15338 ;;  output          2    4[BANK0 ] PTR struct .
 15339 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), 
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;		None
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  1    wreg      void 
 15344 ;; Registers used:
 15345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15346 ;; Tracked objects:
 15347 ;;		On entry : 0/0
 15348 ;;		On exit  : 0/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15351 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15355 ;;Total ram usage:        6 bytes
 15356 ;; Hardware stack levels used: 1
 15357 ;; Hardware stack levels required when called: 5
 15358 ;; This function calls:
 15359 ;;		Nothing
 15360 ;; This function is called by:
 15361 ;;		_build_board_stat_msg
 15362 ;;		_build_general_cmd_msg
 15363 ;;		_build_debug_msg
 15364 ;;		_build_reset_msg
 15365 ;;		_build_actuator_cmd_msg
 15366 ;;		_build_actuator_stat_msg
 15367 ;;		_build_actuator_cmd_analog
 15368 ;;		_build_arm_cmd_msg
 15369 ;;		_build_arm_stat_msg
 15370 ;;		_build_state_est_data_msg
 15371 ;;		_build_temp_data_msg
 15372 ;;		_build_altitude_data_msg
 15373 ;;		_build_gps_time_msg
 15374 ;;		_build_gps_lat_msg
 15375 ;;		_build_gps_lon_msg
 15376 ;;		_build_gps_alt_msg
 15377 ;;		_build_gps_info_msg
 15378 ;;		_build_state_est_calibration_msg
 15379 ;;		_build_fill_msg
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383                           	psect	text55
 15384   00A182                     __ptext55:
 15385                           	callstack 0
 15386   00A182                     _write_timestamp_3bytes:
 15387                           	callstack 23
 15388   00A182                     
 15389                           ;canlib/can_common.c: 20: static void write_timestamp_3bytes(uint32_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 21: {;canlib/can_common.c: 22:     output->data[0] = (t
      +                          imestamp >> 16) & 0xff;
 15390   00A182  0100               	movlb	0	; () banked
 15391   00A184  EE20 F003          	lfsr	2,3
 15392   00A188  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15393   00A18A  26D9               	addwf	fsr2l,f,c
 15394   00A18C  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15395   00A18E  22DA               	addwfc	fsr2h,f,c
 15396   00A190  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
 15397                           
 15398                           ;canlib/can_common.c: 23:     output->data[1] = (timestamp >> 8) & 0xff;
 15399   00A196  EE20 F004          	lfsr	2,4
 15400   00A19A  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15401   00A19C  26D9               	addwf	fsr2l,f,c
 15402   00A19E  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15403   00A1A0  22DA               	addwfc	fsr2h,f,c
 15404   00A1A2  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
 15405                           
 15406                           ;canlib/can_common.c: 24:     output->data[2] = (timestamp >> 0) & 0xff;
 15407   00A1A8  EE20 F005          	lfsr	2,5
 15408   00A1AC  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
 15409   00A1AE  26D9               	addwf	fsr2l,f,c
 15410   00A1B0  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
 15411   00A1B2  22DA               	addwfc	fsr2h,f,c
 15412   00A1B4  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
 15413   00A1BA                     
 15414                           ; BSR set to: 0
 15415   00A1BA  0012               	return		;funcret
 15416   00A1BC                     __end_of_write_timestamp_3bytes:
 15417                           	callstack 0
 15418                           
 15419 ;; *************** function _RED_LED_TOGGLE *****************
 15420 ;; Defined at:
 15421 ;;		line 68 in file "./common.h"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;		None
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  1    wreg      void 
 15428 ;; Registers used:
 15429 ;;		None
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15439 ;;Total ram usage:        0 bytes
 15440 ;; Hardware stack levels used: 1
 15441 ;; Hardware stack levels required when called: 5
 15442 ;; This function calls:
 15443 ;;		Nothing
 15444 ;; This function is called by:
 15445 ;;		_send_status_err
 15446 ;; This function uses a non-reentrant model
 15447 ;;
 15448                           
 15449                           	psect	text56
 15450   00A4F0                     __ptext56:
 15451                           	callstack 0
 15452   00A4F0                     _RED_LED_TOGGLE:
 15453                           	callstack 24
 15454   00A4F0                     
 15455                           ;./common.h: 69:     LATA4 ^= 1;
 15456   00A4F0  78BA               	btg	16314,4,c	;volatile
 15457   00A4F2  0012               	return		;funcret
 15458   00A4F4                     __end_of_RED_LED_TOGGLE:
 15459                           	callstack 0
 15460                           
 15461 ;; *************** function _i2c_init *****************
 15462 ;; Defined at:
 15463 ;;		line 9 in file "rocketlib/pic18f26k83/i2c.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;  clkdiv          1    wreg     unsigned char 
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  clkdiv          1    0[BANK0 ] unsigned char 
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  1    wreg      void 
 15470 ;; Registers used:
 15471 ;;		wreg, status,2, status,0
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;Total ram usage:        1 bytes
 15482 ;; Hardware stack levels used: 1
 15483 ;; Hardware stack levels required when called: 5
 15484 ;; This function calls:
 15485 ;;		Nothing
 15486 ;; This function is called by:
 15487 ;;		_main
 15488 ;; This function uses a non-reentrant model
 15489 ;;
 15490                           
 15491                           	psect	text57
 15492   00A22A                     __ptext57:
 15493                           	callstack 0
 15494   00A22A                     _i2c_init:
 15495                           	callstack 25
 15496                           
 15497                           ;incstack = 0
 15498                           ;i2c_init@clkdiv stored from wreg
 15499   00A22A  0100               	movlb	0	; () banked
 15500   00A22C  6F60               	movwf	i2c_init@clkdiv& (0+255),b
 15501   00A22E                     
 15502                           ;rocketlib/pic18f26k83/i2c.c: 12:     I2C1CON0 = 0x84;
 15503   00A22E  0E84               	movlw	132
 15504   00A230  013D               	movlb	61	; () banked
 15505   00A232  6F73               	movwf	115,b	;volatile
 15506                           
 15507                           ;rocketlib/pic18f26k83/i2c.c: 15:     I2C1CON1 = 0x80;
 15508   00A234  0E80               	movlw	128
 15509   00A236  6F74               	movwf	116,b	;volatile
 15510                           
 15511                           ;rocketlib/pic18f26k83/i2c.c: 18:     I2C1CON2 = 0x00;
 15512   00A238  0E00               	movlw	0
 15513   00A23A  6F75               	movwf	117,b	;volatile
 15514   00A23C                     
 15515                           ; BSR set to: 61
 15516                           ;rocketlib/pic18f26k83/i2c.c: 20:     CLKRCON = 0b10010000 | clkdiv;
 15517   00A23C  0100               	movlb	0	; () banked
 15518   00A23E  5160               	movf	i2c_init@clkdiv& (0+255),w,b
 15519   00A240  0990               	iorlw	144
 15520   00A242  013C               	movlb	60	; () banked
 15521   00A244  6FE5               	movwf	229,b	;volatile
 15522   00A246                     
 15523                           ; BSR set to: 60
 15524                           ;rocketlib/pic18f26k83/i2c.c: 21:     CLKRCLK = 0b00000011;
 15525   00A246  0E03               	movlw	3
 15526   00A248  6FE6               	movwf	230,b	;volatile
 15527   00A24A                     
 15528                           ; BSR set to: 60
 15529                           ;rocketlib/pic18f26k83/i2c.c: 23:     I2C1CLK = 0x04;
 15530   00A24A  0E04               	movlw	4
 15531   00A24C  013D               	movlb	61	; () banked
 15532   00A24E  6F7B               	movwf	123,b	;volatile
 15533   00A250                     
 15534                           ; BSR set to: 61
 15535                           ;rocketlib/pic18f26k83/i2c.c: 24:     I2C1PIR = 0;
 15536   00A250  0E00               	movlw	0
 15537   00A252  6F79               	movwf	121,b	;volatile
 15538   00A254                     
 15539                           ; BSR set to: 61
 15540                           ;rocketlib/pic18f26k83/i2c.c: 25:     I2C1ERR = 0;
 15541   00A254  0E00               	movlw	0
 15542   00A256  6F76               	movwf	118,b	;volatile
 15543   00A258                     
 15544                           ; BSR set to: 61
 15545   00A258  0012               	return		;funcret
 15546   00A25A                     __end_of_i2c_init:
 15547                           	callstack 0
 15548                           
 15549 ;; *************** function _fxls_read_accel_data *****************
 15550 ;; Defined at:
 15551 ;;		line 110 in file "fxls8974cf.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;  x               2   74[BANK0 ] PTR short 
 15554 ;;		 -> main@x(2), 
 15555 ;;  y               2   76[BANK0 ] PTR short 
 15556 ;;		 -> main@y(2), 
 15557 ;;  z               2   78[BANK0 ] PTR short 
 15558 ;;		 -> main@z(2), 
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;  z_msb           1   88[BANK0 ] unsigned char 
 15561 ;;  z_lsb           1   87[BANK0 ] unsigned char 
 15562 ;;  y_msb           1   86[BANK0 ] unsigned char 
 15563 ;;  y_lsb           1   85[BANK0 ] unsigned char 
 15564 ;;  x_msb           1   84[BANK0 ] unsigned char 
 15565 ;;  x_lsb           1   83[BANK0 ] unsigned char 
 15566 ;;  status          1   82[BANK0 ] unsigned char 
 15567 ;; Return value:  Size  Location     Type
 15568 ;;                  1    wreg      void 
 15569 ;; Registers used:
 15570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15571 ;; Tracked objects:
 15572 ;;		On entry : 0/0
 15573 ;;		On exit  : 0/0
 15574 ;;		Unchanged: 0/0
 15575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15576 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15577 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15579 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;Total ram usage:       15 bytes
 15581 ;; Hardware stack levels used: 1
 15582 ;; Hardware stack levels required when called: 7
 15583 ;; This function calls:
 15584 ;;		___fldiv
 15585 ;;		___flmul
 15586 ;;		___fltol
 15587 ;;		___xxtofl
 15588 ;;		_i2c_read_reg8
 15589 ;; This function is called by:
 15590 ;;		_main
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           
 15594                           	psect	text58
 15595   005F80                     __ptext58:
 15596                           	callstack 0
 15597   005F80                     _fxls_read_accel_data:
 15598                           	callstack 23
 15599   005F80                     
 15600                           ;fxls8974cf.c: 111:     uint8_t x_lsb, x_msb, y_lsb, y_msb, z_lsb, z_msb;;fxls8974cf.c: 
      +                          121:     i2c_read_reg8(0x31, 0x04, &x_lsb);
 15601   005F80  0E04               	movlw	4
 15602   005F82  0100               	movlb	0	; () banked
 15603   005F84  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15604   005F86  0EB3               	movlw	low fxls_read_accel_data@x_lsb
 15605   005F88  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15606   005F8A  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15607   005F8C  0E31               	movlw	49
 15608   005F8E  EC85  F04D         	call	_i2c_read_reg8
 15609                           
 15610                           ;fxls8974cf.c: 122:     i2c_read_reg8(0x31, 0x05, &x_msb);
 15611   005F92  0E05               	movlw	5
 15612   005F94  0100               	movlb	0	; () banked
 15613   005F96  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15614   005F98  0EB4               	movlw	low fxls_read_accel_data@x_msb
 15615   005F9A  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15616   005F9C  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15617   005F9E  0E31               	movlw	49
 15618   005FA0  EC85  F04D         	call	_i2c_read_reg8
 15619                           
 15620                           ;fxls8974cf.c: 123:     i2c_read_reg8(0x31, 0x06, &y_lsb);
 15621   005FA4  0E06               	movlw	6
 15622   005FA6  0100               	movlb	0	; () banked
 15623   005FA8  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15624   005FAA  0EB5               	movlw	low fxls_read_accel_data@y_lsb
 15625   005FAC  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15626   005FAE  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15627   005FB0  0E31               	movlw	49
 15628   005FB2  EC85  F04D         	call	_i2c_read_reg8
 15629                           
 15630                           ;fxls8974cf.c: 124:     i2c_read_reg8(0x31, 0x07, &y_msb);
 15631   005FB6  0E07               	movlw	7
 15632   005FB8  0100               	movlb	0	; () banked
 15633   005FBA  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15634   005FBC  0EB6               	movlw	low fxls_read_accel_data@y_msb
 15635   005FBE  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15636   005FC0  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15637   005FC2  0E31               	movlw	49
 15638   005FC4  EC85  F04D         	call	_i2c_read_reg8
 15639                           
 15640                           ;fxls8974cf.c: 125:     i2c_read_reg8(0x31, 0x08, &z_lsb);
 15641   005FC8  0E08               	movlw	8
 15642   005FCA  0100               	movlb	0	; () banked
 15643   005FCC  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15644   005FCE  0EB7               	movlw	low fxls_read_accel_data@z_lsb
 15645   005FD0  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15646   005FD2  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15647   005FD4  0E31               	movlw	49
 15648   005FD6  EC85  F04D         	call	_i2c_read_reg8
 15649                           
 15650                           ;fxls8974cf.c: 126:     i2c_read_reg8(0x31, 0x09, &z_msb);
 15651   005FDA  0E09               	movlw	9
 15652   005FDC  0100               	movlb	0	; () banked
 15653   005FDE  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15654   005FE0  0EB8               	movlw	low fxls_read_accel_data@z_msb
 15655   005FE2  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15656   005FE4  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15657   005FE6  0E31               	movlw	49
 15658   005FE8  EC85  F04D         	call	_i2c_read_reg8
 15659                           
 15660                           ;fxls8974cf.c: 128:     uint8_t status;;fxls8974cf.c: 129:     i2c_read_reg8(0x31, 0x00,
      +                           &status);
 15661   005FEC  0E00               	movlw	0
 15662   005FEE  0100               	movlb	0	; () banked
 15663   005FF0  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 15664   005FF2  0EB2               	movlw	low fxls_read_accel_data@status
 15665   005FF4  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 15666   005FF6  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 15667   005FF8  0E31               	movlw	49
 15668   005FFA  EC85  F04D         	call	_i2c_read_reg8
 15669   005FFE                     
 15670                           ;fxls8974cf.c: 132:     *x = (((int16_t)x_msb << 8) | x_lsb);
 15671   005FFE  0100               	movlb	0	; () banked
 15672   006000  51B3               	movf	fxls_read_accel_data@x_lsb& (0+255),w,b
 15673   006002  C0B4  F0B0         	movff	fxls_read_accel_data@x_msb,??_fxls_read_accel_data
 15674   006006  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15675   006008  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15676   00600C  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15677   00600E  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15678   006010  0E00               	movlw	0
 15679   006012  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15680   006014  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15681   00601A  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15682   006020  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15683   006026  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15684   00602C                     
 15685                           ; BSR set to: 0
 15686                           ;fxls8974cf.c: 133:     *y = (((int16_t)y_msb << 8) | y_lsb);
 15687   00602C  51B5               	movf	fxls_read_accel_data@y_lsb& (0+255),w,b
 15688   00602E  C0B6  F0B0         	movff	fxls_read_accel_data@y_msb,??_fxls_read_accel_data
 15689   006032  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15690   006034  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15691   006038  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15692   00603A  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15693   00603C  0E00               	movlw	0
 15694   00603E  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15695   006040  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15696   006046  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15697   00604C  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15698   006052  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15699   006058                     
 15700                           ; BSR set to: 0
 15701                           ;fxls8974cf.c: 134:     *z = (((int16_t)z_msb << 8) | z_lsb);
 15702   006058  51B7               	movf	fxls_read_accel_data@z_lsb& (0+255),w,b
 15703   00605A  C0B8  F0B0         	movff	fxls_read_accel_data@z_msb,??_fxls_read_accel_data
 15704   00605E  6BB1               	clrf	(??_fxls_read_accel_data+1)& (0+255),b
 15705   006060  C0B0  F0B1         	movff	??_fxls_read_accel_data,??_fxls_read_accel_data+1
 15706   006064  6BB0               	clrf	??_fxls_read_accel_data& (0+255),b
 15707   006066  13B0               	iorwf	??_fxls_read_accel_data& (0+255),f,b
 15708   006068  0E00               	movlw	0
 15709   00606A  13B1               	iorwf	(??_fxls_read_accel_data+1)& (0+255),f,b
 15710   00606C  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15711   006072  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15712   006078  0060  F2C3  FFDE   	movff	??_fxls_read_accel_data,postinc2
 15713   00607E  0060  F2C7  FFDD   	movff	??_fxls_read_accel_data+1,postdec2
 15714   006084                     
 15715                           ; BSR set to: 0
 15716                           ;fxls8974cf.c: 137:     *x = (*x) * 0.98 / 1000.0;
 15717   006084  0E00               	movlw	0
 15718   006086  6F8B               	movwf	___fldiv@a& (0+255),b
 15719   006088  0E00               	movlw	0
 15720   00608A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15721   00608C  0E7A               	movlw	122
 15722   00608E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15723   006090  0E44               	movlw	68
 15724   006092  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15725   006094  0E48               	movlw	72
 15726   006096  6F72               	movwf	___flmul@a& (0+255),b
 15727   006098  0EE1               	movlw	225
 15728   00609A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15729   00609C  0E7A               	movlw	122
 15730   00609E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15731   0060A0  0E3F               	movlw	63
 15732   0060A2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15733   0060A4  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15734   0060AA  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15735   0060B0  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15736   0060B6  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15737   0060BC  0E00               	movlw	0
 15738   0060BE  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15739   0060C0  0EFF               	movlw	-1
 15740   0060C2  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15741   0060C4  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15742   0060C6  0E01               	movlw	1
 15743   0060C8  ECFE  F039         	call	___xxtofl
 15744   0060CC  C060  F06E         	movff	?___xxtofl,___flmul@b
 15745   0060D0  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15746   0060D4  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15747   0060D8  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15748   0060DC  ECBC  F025         	call	___flmul	;wreg free
 15749   0060E0  C06E  F087         	movff	?___flmul,___fldiv@b
 15750   0060E4  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15751   0060E8  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15752   0060EC  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15753   0060F0  ECF2  F02D         	call	___fldiv	;wreg free
 15754   0060F4  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15755   0060F8  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15756   0060FC  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15757   006100  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15758   006104  EC1B  F042         	call	___fltol	;wreg free
 15759   006108  0060  F2AB  FFD9   	movff	fxls_read_accel_data@x,fsr2l
 15760   00610E  0060  F2AF  FFDA   	movff	fxls_read_accel_data@x+1,fsr2h
 15761   006114  0100               	movlb	0	; () banked
 15762   006116  0060  F283  FFDE   	movff	?___fltol,postinc2
 15763   00611C  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15764   006122                     
 15765                           ; BSR set to: 0
 15766                           ;fxls8974cf.c: 138:     *y = (*y) * 0.98 / 1000.0;
 15767   006122  0E00               	movlw	0
 15768   006124  6F8B               	movwf	___fldiv@a& (0+255),b
 15769   006126  0E00               	movlw	0
 15770   006128  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15771   00612A  0E7A               	movlw	122
 15772   00612C  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15773   00612E  0E44               	movlw	68
 15774   006130  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15775   006132  0E48               	movlw	72
 15776   006134  6F72               	movwf	___flmul@a& (0+255),b
 15777   006136  0EE1               	movlw	225
 15778   006138  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15779   00613A  0E7A               	movlw	122
 15780   00613C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15781   00613E  0E3F               	movlw	63
 15782   006140  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15783   006142  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15784   006148  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15785   00614E  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15786   006154  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15787   00615A  0E00               	movlw	0
 15788   00615C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15789   00615E  0EFF               	movlw	-1
 15790   006160  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15791   006162  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15792   006164  0E01               	movlw	1
 15793   006166  ECFE  F039         	call	___xxtofl
 15794   00616A  C060  F06E         	movff	?___xxtofl,___flmul@b
 15795   00616E  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15796   006172  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15797   006176  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15798   00617A  ECBC  F025         	call	___flmul	;wreg free
 15799   00617E  C06E  F087         	movff	?___flmul,___fldiv@b
 15800   006182  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15801   006186  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15802   00618A  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15803   00618E  ECF2  F02D         	call	___fldiv	;wreg free
 15804   006192  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15805   006196  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15806   00619A  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15807   00619E  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15808   0061A2  EC1B  F042         	call	___fltol	;wreg free
 15809   0061A6  0060  F2B3  FFD9   	movff	fxls_read_accel_data@y,fsr2l
 15810   0061AC  0060  F2B7  FFDA   	movff	fxls_read_accel_data@y+1,fsr2h
 15811   0061B2  0100               	movlb	0	; () banked
 15812   0061B4  0060  F283  FFDE   	movff	?___fltol,postinc2
 15813   0061BA  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15814   0061C0                     
 15815                           ; BSR set to: 0
 15816                           ;fxls8974cf.c: 139:     *z = (*z) * 0.98 / 1000.0;
 15817   0061C0  0E00               	movlw	0
 15818   0061C2  6F8B               	movwf	___fldiv@a& (0+255),b
 15819   0061C4  0E00               	movlw	0
 15820   0061C6  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15821   0061C8  0E7A               	movlw	122
 15822   0061CA  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15823   0061CC  0E44               	movlw	68
 15824   0061CE  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15825   0061D0  0E48               	movlw	72
 15826   0061D2  6F72               	movwf	___flmul@a& (0+255),b
 15827   0061D4  0EE1               	movlw	225
 15828   0061D6  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15829   0061D8  0E7A               	movlw	122
 15830   0061DA  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15831   0061DC  0E3F               	movlw	63
 15832   0061DE  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15833   0061E0  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15834   0061E6  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15835   0061EC  006F FF78  F060    	movff	postinc2,___xxtofl@val
 15836   0061F2  006F FF74  F061    	movff	postdec2,___xxtofl@val+1
 15837   0061F8  0E00               	movlw	0
 15838   0061FA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15839   0061FC  0EFF               	movlw	-1
 15840   0061FE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15841   006200  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15842   006202  0E01               	movlw	1
 15843   006204  ECFE  F039         	call	___xxtofl
 15844   006208  C060  F06E         	movff	?___xxtofl,___flmul@b
 15845   00620C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 15846   006210  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 15847   006214  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 15848   006218  ECBC  F025         	call	___flmul	;wreg free
 15849   00621C  C06E  F087         	movff	?___flmul,___fldiv@b
 15850   006220  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 15851   006224  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 15852   006228  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 15853   00622C  ECF2  F02D         	call	___fldiv	;wreg free
 15854   006230  C087  F0A0         	movff	?___fldiv,___fltol@f1
 15855   006234  C088  F0A1         	movff	?___fldiv+1,___fltol@f1+1
 15856   006238  C089  F0A2         	movff	?___fldiv+2,___fltol@f1+2
 15857   00623C  C08A  F0A3         	movff	?___fldiv+3,___fltol@f1+3
 15858   006240  EC1B  F042         	call	___fltol	;wreg free
 15859   006244  0060  F2BB  FFD9   	movff	fxls_read_accel_data@z,fsr2l
 15860   00624A  0060  F2BF  FFDA   	movff	fxls_read_accel_data@z+1,fsr2h
 15861   006250  0100               	movlb	0	; () banked
 15862   006252  0060  F283  FFDE   	movff	?___fltol,postinc2
 15863   006258  0060  F287  FFDD   	movff	?___fltol+1,postdec2
 15864   00625E                     
 15865                           ; BSR set to: 0
 15866   00625E  0012               	return		;funcret
 15867   006260                     __end_of_fxls_read_accel_data:
 15868                           	callstack 0
 15869                           
 15870 ;; *************** function ___xxtofl *****************
 15871 ;; Defined at:
 15872 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  sign            1    wreg     unsigned char 
 15875 ;;  val             4    0[BANK0 ] long 
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;  sign            1    8[BANK0 ] unsigned char 
 15878 ;;  arg             4   10[BANK0 ] unsigned long 
 15879 ;;  exp             1    9[BANK0 ] unsigned char 
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  4    0[BANK0 ] unsigned char 
 15882 ;; Registers used:
 15883 ;;		wreg, status,2, status,0
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/0
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15890 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15892 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15893 ;;Total ram usage:       14 bytes
 15894 ;; Hardware stack levels used: 1
 15895 ;; Hardware stack levels required when called: 5
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_fxls_read_accel_data
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           	psect	text59
 15904   0073FC                     __ptext59:
 15905                           	callstack 0
 15906   0073FC                     ___xxtofl:
 15907                           	callstack 24
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;incstack = 0
 15911                           ;___xxtofl@sign stored from wreg
 15912   0073FC  0100               	movlb	0	; () banked
 15913   0073FE  6F68               	movwf	___xxtofl@sign& (0+255),b
 15914   007400  0100               	movlb	0	; () banked
 15915   007402  5168               	movf	___xxtofl@sign& (0+255),w,b
 15916   007404  B4D8               	btfsc	status,2,c
 15917   007406  EF07  F03A         	goto	u21791
 15918   00740A  EF09  F03A         	goto	u21790
 15919   00740E                     u21791:
 15920   00740E  EF2B  F03A         	goto	l2928
 15921   007412                     u21790:
 15922   007412                     
 15923                           ; BSR set to: 0
 15924   007412  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15925   007414  EF10  F03A         	goto	u21800
 15926   007418  EF0E  F03A         	goto	u21801
 15927   00741C                     u21801:
 15928   00741C  EF2B  F03A         	goto	l2928
 15929   007420                     u21800:
 15930   007420                     
 15931                           ; BSR set to: 0
 15932   007420  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15933   007424  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15934   007428  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15935   00742C  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15936   007430  1F64               	comf	??___xxtofl& (0+255),f,b
 15937   007432  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15938   007434  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15939   007436  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15940   007438  2B64               	incf	??___xxtofl& (0+255),f,b
 15941   00743A  0E00               	movlw	0
 15942   00743C  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15943   00743E  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15944   007440  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15945   007442  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15946   007446  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15947   00744A  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15948   00744E  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15949   007452  EF33  F03A         	goto	l17491
 15950   007456                     l2928:
 15951                           
 15952                           ; BSR set to: 0
 15953   007456  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15954   00745A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15955   00745E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15956   007462  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15957   007466                     l17491:
 15958                           
 15959                           ; BSR set to: 0
 15960   007466  5160               	movf	___xxtofl@val& (0+255),w,b
 15961   007468  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15962   00746A  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15963   00746C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15964   00746E  A4D8               	btfss	status,2,c
 15965   007470  EF3C  F03A         	goto	u21811
 15966   007474  EF3E  F03A         	goto	u21810
 15967   007478                     u21811:
 15968   007478  EF48  F03A         	goto	l17497
 15969   00747C                     u21810:
 15970   00747C                     
 15971                           ; BSR set to: 0
 15972   00747C  0E00               	movlw	0
 15973   00747E  6F60               	movwf	?___xxtofl& (0+255),b
 15974   007480  0E00               	movlw	0
 15975   007482  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15976   007484  0E00               	movlw	0
 15977   007486  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15978   007488  0E00               	movlw	0
 15979   00748A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15980   00748C  EFD9  F03A         	goto	l2931
 15981   007490                     l17497:
 15982                           
 15983                           ; BSR set to: 0
 15984   007490  0E96               	movlw	150
 15985   007492  6F69               	movwf	___xxtofl@exp& (0+255),b
 15986   007494  EF52  F03A         	goto	l17501
 15987   007498                     l17499:
 15988                           
 15989                           ; BSR set to: 0
 15990   007498  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15991   00749A  90D8               	bcf	status,0,c
 15992   00749C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15993   00749E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15994   0074A0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15995   0074A2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15996   0074A4                     l17501:
 15997                           
 15998                           ; BSR set to: 0
 15999   0074A4  0E00               	movlw	0
 16000   0074A6  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16001   0074A8  6F64               	movwf	??___xxtofl& (0+255),b
 16002   0074AA  0E00               	movlw	0
 16003   0074AC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16004   0074AE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16005   0074B0  0E00               	movlw	0
 16006   0074B2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16007   0074B4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16008   0074B6  0EFE               	movlw	254
 16009   0074B8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16010   0074BA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16011   0074BC  5164               	movf	??___xxtofl& (0+255),w,b
 16012   0074BE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16013   0074C0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16014   0074C2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16015   0074C4  A4D8               	btfss	status,2,c
 16016   0074C6  EF67  F03A         	goto	u21821
 16017   0074CA  EF69  F03A         	goto	u21820
 16018   0074CE                     u21821:
 16019   0074CE  EF4C  F03A         	goto	l17499
 16020   0074D2                     u21820:
 16021   0074D2  EF77  F03A         	goto	l2935
 16022   0074D6                     l17503:
 16023                           
 16024                           ; BSR set to: 0
 16025   0074D6  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16026   0074D8                     
 16027                           ; BSR set to: 0
 16028   0074D8  0E01               	movlw	1
 16029   0074DA  276A               	addwf	___xxtofl@arg& (0+255),f,b
 16030   0074DC  0E00               	movlw	0
 16031   0074DE  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16032   0074E0  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16033   0074E2  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16034   0074E4                     
 16035                           ; BSR set to: 0
 16036   0074E4  90D8               	bcf	status,0,c
 16037   0074E6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16038   0074E8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16039   0074EA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16040   0074EC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16041   0074EE                     l2935:
 16042                           
 16043                           ; BSR set to: 0
 16044   0074EE  0E00               	movlw	0
 16045   0074F0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16046   0074F2  6F64               	movwf	??___xxtofl& (0+255),b
 16047   0074F4  0E00               	movlw	0
 16048   0074F6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16049   0074F8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16050   0074FA  0E00               	movlw	0
 16051   0074FC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16052   0074FE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16053   007500  0EFF               	movlw	255
 16054   007502  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16055   007504  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16056   007506  5164               	movf	??___xxtofl& (0+255),w,b
 16057   007508  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16058   00750A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16059   00750C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16060   00750E  A4D8               	btfss	status,2,c
 16061   007510  EF8C  F03A         	goto	u21831
 16062   007514  EF8E  F03A         	goto	u21830
 16063   007518                     u21831:
 16064   007518  EF6B  F03A         	goto	l17503
 16065   00751C                     u21830:
 16066   00751C  EF96  F03A         	goto	l17511
 16067   007520                     l17509:
 16068                           
 16069                           ; BSR set to: 0
 16070   007520  0769               	decf	___xxtofl@exp& (0+255),f,b
 16071   007522  90D8               	bcf	status,0,c
 16072   007524  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 16073   007526  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16074   007528  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16075   00752A  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16076   00752C                     l17511:
 16077                           
 16078                           ; BSR set to: 0
 16079   00752C  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16080   00752E  EF9B  F03A         	goto	u21841
 16081   007532  EF9D  F03A         	goto	u21840
 16082   007536                     u21841:
 16083   007536  EFA5  F03A         	goto	l2942
 16084   00753A                     u21840:
 16085   00753A                     
 16086                           ; BSR set to: 0
 16087   00753A  0E02               	movlw	2
 16088   00753C  6169               	cpfslt	___xxtofl@exp& (0+255),b
 16089   00753E  EFA3  F03A         	goto	u21851
 16090   007542  EFA5  F03A         	goto	u21850
 16091   007546                     u21851:
 16092   007546  EF90  F03A         	goto	l17509
 16093   00754A                     u21850:
 16094   00754A                     l2942:
 16095                           
 16096                           ; BSR set to: 0
 16097   00754A  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 16098   00754C  EFAA  F03A         	goto	u21861
 16099   007550  EFAC  F03A         	goto	u21860
 16100   007554                     u21861:
 16101   007554  EFAD  F03A         	goto	l17517
 16102   007558                     u21860:
 16103   007558                     
 16104                           ; BSR set to: 0
 16105   007558  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16106   00755A                     l17517:
 16107                           
 16108                           ; BSR set to: 0
 16109   00755A  90D8               	bcf	status,0,c
 16110   00755C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 16111   00755E                     
 16112                           ; BSR set to: 0
 16113   00755E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 16114   007562  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16115   007564  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16116   007566  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 16117   007568  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 16118   00756C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16119   00756E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16120   007570  6B64               	clrf	??___xxtofl& (0+255),b
 16121   007572  5164               	movf	??___xxtofl& (0+255),w,b
 16122   007574  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 16123   007576  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 16124   007578  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16125   00757A  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 16126   00757C  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16127   00757E  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 16128   007580  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16129   007582                     
 16130                           ; BSR set to: 0
 16131   007582  5168               	movf	___xxtofl@sign& (0+255),w,b
 16132   007584  B4D8               	btfsc	status,2,c
 16133   007586  EFC7  F03A         	goto	u21871
 16134   00758A  EFC9  F03A         	goto	u21870
 16135   00758E                     u21871:
 16136   00758E  EFD1  F03A         	goto	l17527
 16137   007592                     u21870:
 16138   007592                     
 16139                           ; BSR set to: 0
 16140   007592  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 16141   007594  EFD0  F03A         	goto	u21880
 16142   007598  EFCE  F03A         	goto	u21881
 16143   00759C                     u21881:
 16144   00759C  EFD1  F03A         	goto	l17527
 16145   0075A0                     u21880:
 16146   0075A0                     
 16147                           ; BSR set to: 0
 16148   0075A0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16149   0075A2                     l17527:
 16150                           
 16151                           ; BSR set to: 0
 16152   0075A2  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 16153   0075A6  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 16154   0075AA  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 16155   0075AE  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 16156   0075B2                     l2931:
 16157                           
 16158                           ; BSR set to: 0
 16159   0075B2  0012               	return		;funcret
 16160   0075B4                     __end_of___xxtofl:
 16161                           	callstack 0
 16162                           
 16163 ;; *************** function ___fltol *****************
 16164 ;; Defined at:
 16165 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;  f1              4   64[BANK0 ] unsigned char 
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  exp1            1   73[BANK0 ] unsigned char 
 16170 ;;  sign1           1   72[BANK0 ] unsigned char 
 16171 ;; Return value:  Size  Location     Type
 16172 ;;                  4   64[BANK0 ] long 
 16173 ;; Registers used:
 16174 ;;		wreg, status,2, status,0
 16175 ;; Tracked objects:
 16176 ;;		On entry : 0/0
 16177 ;;		On exit  : 0/0
 16178 ;;		Unchanged: 0/0
 16179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16181 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16183 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16184 ;;Total ram usage:       10 bytes
 16185 ;; Hardware stack levels used: 1
 16186 ;; Hardware stack levels required when called: 5
 16187 ;; This function calls:
 16188 ;;		Nothing
 16189 ;; This function is called by:
 16190 ;;		_fxls_read_accel_data
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194                           	psect	text60
 16195   008436                     __ptext60:
 16196                           	callstack 0
 16197   008436                     ___fltol:
 16198                           	callstack 24
 16199   008436  0100               	movlb	0	; () banked
 16200   008438  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
 16201   00843A  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
 16202   00843C  6FA9               	movwf	___fltol@exp1& (0+255),b
 16203   00843E  51A9               	movf	___fltol@exp1& (0+255),w,b
 16204   008440  A4D8               	btfss	status,2,c
 16205   008442  EF25  F042         	goto	u21721
 16206   008446  EF27  F042         	goto	u21720
 16207   00844A                     u21721:
 16208   00844A  EF31  F042         	goto	l17447
 16209   00844E                     u21720:
 16210   00844E                     l17443:
 16211                           
 16212                           ; BSR set to: 0
 16213   00844E  0E00               	movlw	0
 16214   008450  6FA0               	movwf	?___fltol& (0+255),b
 16215   008452  0E00               	movlw	0
 16216   008454  6FA1               	movwf	(?___fltol+1)& (0+255),b
 16217   008456  0E00               	movlw	0
 16218   008458  6FA2               	movwf	(?___fltol+2)& (0+255),b
 16219   00845A  0E00               	movlw	0
 16220   00845C  6FA3               	movwf	(?___fltol+3)& (0+255),b
 16221   00845E  EF9E  F042         	goto	l2570
 16222   008462                     l17447:
 16223                           
 16224                           ; BSR set to: 0
 16225   008462  C0A0  F0A4         	movff	___fltol@f1,??___fltol
 16226   008466  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
 16227   00846A  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
 16228   00846E  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
 16229   008472  0E20               	movlw	32
 16230   008474  EF41  F042         	goto	u21730
 16231   008478                     u21735:
 16232   008478  90D8               	bcf	status,0,c
 16233   00847A  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
 16234   00847C  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
 16235   00847E  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
 16236   008480  33A4               	rrcf	??___fltol& (0+255),f,b
 16237   008482                     u21730:
 16238   008482  2EE8               	decfsz	wreg,f,c
 16239   008484  EF3C  F042         	goto	u21735
 16240   008488  51A4               	movf	??___fltol& (0+255),w,b
 16241   00848A  6FA8               	movwf	___fltol@sign1& (0+255),b
 16242   00848C                     
 16243                           ; BSR set to: 0
 16244   00848C  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
 16245   00848E                     
 16246                           ; BSR set to: 0
 16247   00848E  0EFF               	movlw	255
 16248   008490  17A0               	andwf	___fltol@f1& (0+255),f,b
 16249   008492  0EFF               	movlw	255
 16250   008494  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
 16251   008496  0EFF               	movlw	255
 16252   008498  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
 16253   00849A  0E00               	movlw	0
 16254   00849C  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
 16255   00849E                     
 16256                           ; BSR set to: 0
 16257   00849E  0E96               	movlw	150
 16258   0084A0  5FA9               	subwf	___fltol@exp1& (0+255),f,b
 16259   0084A2                     
 16260                           ; BSR set to: 0
 16261   0084A2  BFA9               	btfsc	___fltol@exp1& (0+255),7,b
 16262   0084A4  EF58  F042         	goto	u21740
 16263   0084A8  EF56  F042         	goto	u21741
 16264   0084AC                     u21741:
 16265   0084AC  EF6E  F042         	goto	l17467
 16266   0084B0                     u21740:
 16267   0084B0                     
 16268                           ; BSR set to: 0
 16269   0084B0  51A9               	movf	___fltol@exp1& (0+255),w,b
 16270   0084B2  0A80               	xorlw	128
 16271   0084B4  0F97               	addlw	151
 16272   0084B6  B0D8               	btfsc	status,0,c
 16273   0084B8  EF60  F042         	goto	u21751
 16274   0084BC  EF62  F042         	goto	u21750
 16275   0084C0                     u21751:
 16276   0084C0  EF64  F042         	goto	l17463
 16277   0084C4                     u21750:
 16278   0084C4  EF27  F042         	goto	l17443
 16279   0084C8                     l17463:
 16280                           
 16281                           ; BSR set to: 0
 16282   0084C8  90D8               	bcf	status,0,c
 16283   0084CA  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
 16284   0084CC  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
 16285   0084CE  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
 16286   0084D0  33A0               	rrcf	___fltol@f1& (0+255),f,b
 16287   0084D2                     
 16288                           ; BSR set to: 0
 16289   0084D2  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
 16290   0084D4  EF64  F042         	goto	l17463
 16291   0084D8  EF86  F042         	goto	l17477
 16292   0084DC                     l17467:
 16293                           
 16294                           ; BSR set to: 0
 16295   0084DC  0E1F               	movlw	31
 16296   0084DE  65A9               	cpfsgt	___fltol@exp1& (0+255),b
 16297   0084E0  EF74  F042         	goto	u21761
 16298   0084E4  EF76  F042         	goto	u21760
 16299   0084E8                     u21761:
 16300   0084E8  EF7E  F042         	goto	l17475
 16301   0084EC                     u21760:
 16302   0084EC  EF27  F042         	goto	l17443
 16303   0084F0                     l17473:
 16304                           
 16305                           ; BSR set to: 0
 16306   0084F0  90D8               	bcf	status,0,c
 16307   0084F2  37A0               	rlcf	___fltol@f1& (0+255),f,b
 16308   0084F4  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
 16309   0084F6  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
 16310   0084F8  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
 16311   0084FA  07A9               	decf	___fltol@exp1& (0+255),f,b
 16312   0084FC                     l17475:
 16313                           
 16314                           ; BSR set to: 0
 16315   0084FC  51A9               	movf	___fltol@exp1& (0+255),w,b
 16316   0084FE  A4D8               	btfss	status,2,c
 16317   008500  EF84  F042         	goto	u21771
 16318   008504  EF86  F042         	goto	u21770
 16319   008508                     u21771:
 16320   008508  EF78  F042         	goto	l17473
 16321   00850C                     u21770:
 16322   00850C                     l17477:
 16323                           
 16324                           ; BSR set to: 0
 16325   00850C  51A8               	movf	___fltol@sign1& (0+255),w,b
 16326   00850E  B4D8               	btfsc	status,2,c
 16327   008510  EF8C  F042         	goto	u21781
 16328   008514  EF8E  F042         	goto	u21780
 16329   008518                     u21781:
 16330   008518  EF96  F042         	goto	l17481
 16331   00851C                     u21780:
 16332   00851C                     
 16333                           ; BSR set to: 0
 16334   00851C  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
 16335   00851E  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
 16336   008520  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
 16337   008522  6DA0               	negf	___fltol@f1& (0+255),b
 16338   008524  0E00               	movlw	0
 16339   008526  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
 16340   008528  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
 16341   00852A  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
 16342   00852C                     l17481:
 16343                           
 16344                           ; BSR set to: 0
 16345   00852C  C0A0  F0A0         	movff	___fltol@f1,?___fltol
 16346   008530  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
 16347   008534  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
 16348   008538  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
 16349   00853C                     l2570:
 16350                           
 16351                           ; BSR set to: 0
 16352   00853C  0012               	return		;funcret
 16353   00853E                     __end_of___fltol:
 16354                           	callstack 0
 16355                           
 16356 ;; *************** function ___flmul *****************
 16357 ;; Defined at:
 16358 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  b               4   14[BANK0 ] long 
 16361 ;;  a               4   18[BANK0 ] long 
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;  prod            4   33[BANK0 ] struct .
 16364 ;;  grs             4   27[BANK0 ] unsigned long 
 16365 ;;  temp            2   37[BANK0 ] struct .
 16366 ;;  bexp            1   32[BANK0 ] unsigned char 
 16367 ;;  aexp            1   31[BANK0 ] unsigned char 
 16368 ;;  sign            1   26[BANK0 ] unsigned char 
 16369 ;; Return value:  Size  Location     Type
 16370 ;;                  4   14[BANK0 ] unsigned char 
 16371 ;; Registers used:
 16372 ;;		wreg, status,2, status,0, prodl, prodh
 16373 ;; Tracked objects:
 16374 ;;		On entry : 0/0
 16375 ;;		On exit  : 0/0
 16376 ;;		Unchanged: 0/0
 16377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16378 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16379 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16381 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16382 ;;Total ram usage:       25 bytes
 16383 ;; Hardware stack levels used: 1
 16384 ;; Hardware stack levels required when called: 5
 16385 ;; This function calls:
 16386 ;;		Nothing
 16387 ;; This function is called by:
 16388 ;;		_fxls_read_accel_data
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text61
 16393   004B78                     __ptext61:
 16394                           	callstack 0
 16395   004B78                     ___flmul:
 16396                           	callstack 24
 16397   004B78  0100               	movlb	0	; () banked
 16398   004B7A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 16399   004B7C  0B80               	andlw	128
 16400   004B7E  6F7A               	movwf	___flmul@sign& (0+255),b
 16401   004B80  5171               	movf	(___flmul@b+3)& (0+255),w,b
 16402   004B82  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 16403   004B84  6F80               	movwf	___flmul@bexp& (0+255),b
 16404   004B86                     
 16405                           ; BSR set to: 0
 16406   004B86  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 16407   004B88  EFC8  F025         	goto	u13841
 16408   004B8C  EFCA  F025         	goto	u13840
 16409   004B90                     u13841:
 16410   004B90  EFCB  F025         	goto	l12013
 16411   004B94                     u13840:
 16412   004B94                     
 16413                           ; BSR set to: 0
 16414   004B94  8180               	bsf	___flmul@bexp& (0+255),0,b
 16415   004B96                     l12013:
 16416                           
 16417                           ; BSR set to: 0
 16418   004B96  5180               	movf	___flmul@bexp& (0+255),w,b
 16419   004B98  B4D8               	btfsc	status,2,c
 16420   004B9A  EFD1  F025         	goto	u13851
 16421   004B9E  EFD3  F025         	goto	u13850
 16422   004BA2                     u13851:
 16423   004BA2  EFE6  F025         	goto	l12021
 16424   004BA6                     u13850:
 16425   004BA6                     
 16426                           ; BSR set to: 0
 16427   004BA6  2980               	incf	___flmul@bexp& (0+255),w,b
 16428   004BA8  A4D8               	btfss	status,2,c
 16429   004BAA  EFD9  F025         	goto	u13861
 16430   004BAE  EFDB  F025         	goto	u13860
 16431   004BB2                     u13861:
 16432   004BB2  EFE3  F025         	goto	l12019
 16433   004BB6                     u13860:
 16434   004BB6                     
 16435                           ; BSR set to: 0
 16436   004BB6  0E00               	movlw	0
 16437   004BB8  6F6E               	movwf	___flmul@b& (0+255),b
 16438   004BBA  0E00               	movlw	0
 16439   004BBC  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 16440   004BBE  0E00               	movlw	0
 16441   004BC0  6F70               	movwf	(___flmul@b+2)& (0+255),b
 16442   004BC2  0E00               	movlw	0
 16443   004BC4  6F71               	movwf	(___flmul@b+3)& (0+255),b
 16444   004BC6                     l12019:
 16445                           
 16446                           ; BSR set to: 0
 16447   004BC6  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 16448   004BC8  EFEE  F025         	goto	l12023
 16449   004BCC                     l12021:
 16450                           
 16451                           ; BSR set to: 0
 16452   004BCC  0E00               	movlw	0
 16453   004BCE  6F6E               	movwf	___flmul@b& (0+255),b
 16454   004BD0  0E00               	movlw	0
 16455   004BD2  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 16456   004BD4  0E00               	movlw	0
 16457   004BD6  6F70               	movwf	(___flmul@b+2)& (0+255),b
 16458   004BD8  0E00               	movlw	0
 16459   004BDA  6F71               	movwf	(___flmul@b+3)& (0+255),b
 16460   004BDC                     l12023:
 16461                           
 16462                           ; BSR set to: 0
 16463   004BDC  5175               	movf	(___flmul@a+3)& (0+255),w,b
 16464   004BDE  0B80               	andlw	128
 16465   004BE0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 16466   004BE2                     
 16467                           ; BSR set to: 0
 16468   004BE2  5175               	movf	(___flmul@a+3)& (0+255),w,b
 16469   004BE4  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 16470   004BE6  6F7F               	movwf	___flmul@aexp& (0+255),b
 16471   004BE8                     
 16472                           ; BSR set to: 0
 16473   004BE8  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 16474   004BEA  EFF9  F025         	goto	u13871
 16475   004BEE  EFFB  F025         	goto	u13870
 16476   004BF2                     u13871:
 16477   004BF2  EFFC  F025         	goto	l12031
 16478   004BF6                     u13870:
 16479   004BF6                     
 16480                           ; BSR set to: 0
 16481   004BF6  817F               	bsf	___flmul@aexp& (0+255),0,b
 16482   004BF8                     l12031:
 16483                           
 16484                           ; BSR set to: 0
 16485   004BF8  517F               	movf	___flmul@aexp& (0+255),w,b
 16486   004BFA  B4D8               	btfsc	status,2,c
 16487   004BFC  EF02  F026         	goto	u13881
 16488   004C00  EF04  F026         	goto	u13880
 16489   004C04                     u13881:
 16490   004C04  EF17  F026         	goto	l12039
 16491   004C08                     u13880:
 16492   004C08                     
 16493                           ; BSR set to: 0
 16494   004C08  297F               	incf	___flmul@aexp& (0+255),w,b
 16495   004C0A  A4D8               	btfss	status,2,c
 16496   004C0C  EF0A  F026         	goto	u13891
 16497   004C10  EF0C  F026         	goto	u13890
 16498   004C14                     u13891:
 16499   004C14  EF14  F026         	goto	l12037
 16500   004C18                     u13890:
 16501   004C18                     
 16502                           ; BSR set to: 0
 16503   004C18  0E00               	movlw	0
 16504   004C1A  6F72               	movwf	___flmul@a& (0+255),b
 16505   004C1C  0E00               	movlw	0
 16506   004C1E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 16507   004C20  0E00               	movlw	0
 16508   004C22  6F74               	movwf	(___flmul@a+2)& (0+255),b
 16509   004C24  0E00               	movlw	0
 16510   004C26  6F75               	movwf	(___flmul@a+3)& (0+255),b
 16511   004C28                     l12037:
 16512                           
 16513                           ; BSR set to: 0
 16514   004C28  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 16515   004C2A  EF1F  F026         	goto	l2887
 16516   004C2E                     l12039:
 16517                           
 16518                           ; BSR set to: 0
 16519   004C2E  0E00               	movlw	0
 16520   004C30  6F72               	movwf	___flmul@a& (0+255),b
 16521   004C32  0E00               	movlw	0
 16522   004C34  6F73               	movwf	(___flmul@a+1)& (0+255),b
 16523   004C36  0E00               	movlw	0
 16524   004C38  6F74               	movwf	(___flmul@a+2)& (0+255),b
 16525   004C3A  0E00               	movlw	0
 16526   004C3C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 16527   004C3E                     l2887:
 16528                           
 16529                           ; BSR set to: 0
 16530   004C3E  517F               	movf	___flmul@aexp& (0+255),w,b
 16531   004C40  B4D8               	btfsc	status,2,c
 16532   004C42  EF25  F026         	goto	u13901
 16533   004C46  EF27  F026         	goto	u13900
 16534   004C4A                     u13901:
 16535   004C4A  EF2F  F026         	goto	l12043
 16536   004C4E                     u13900:
 16537   004C4E                     
 16538                           ; BSR set to: 0
 16539   004C4E  5180               	movf	___flmul@bexp& (0+255),w,b
 16540   004C50  A4D8               	btfss	status,2,c
 16541   004C52  EF2D  F026         	goto	u13911
 16542   004C56  EF2F  F026         	goto	u13910
 16543   004C5A                     u13911:
 16544   004C5A  EF39  F026         	goto	l12047
 16545   004C5E                     u13910:
 16546   004C5E                     l12043:
 16547                           
 16548                           ; BSR set to: 0
 16549   004C5E  0E00               	movlw	0
 16550   004C60  6F6E               	movwf	?___flmul& (0+255),b
 16551   004C62  0E00               	movlw	0
 16552   004C64  6F6F               	movwf	(?___flmul+1)& (0+255),b
 16553   004C66  0E00               	movlw	0
 16554   004C68  6F70               	movwf	(?___flmul+2)& (0+255),b
 16555   004C6A  0E00               	movlw	0
 16556   004C6C  6F71               	movwf	(?___flmul+3)& (0+255),b
 16557   004C6E  EFE3  F027         	goto	l2891
 16558   004C72                     l12047:
 16559                           
 16560                           ; BSR set to: 0
 16561   004C72  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16562   004C74  036E               	mulwf	___flmul@b& (0+255),b
 16563   004C76  006F FFCC  F085    	movff	prodl,___flmul@temp
 16564   004C7C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16565   004C82                     
 16566                           ; BSR set to: 0
 16567   004C82  5185               	movf	___flmul@temp& (0+255),w,b
 16568   004C84  6F7B               	movwf	___flmul@grs& (0+255),b
 16569   004C86  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 16570   004C88  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 16571   004C8A  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 16572   004C8C                     
 16573                           ; BSR set to: 0
 16574   004C8C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16575   004C8E  6F81               	movwf	___flmul@prod& (0+255),b
 16576   004C90  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 16577   004C92  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 16578   004C94  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 16579   004C96  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16580   004C98  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16581   004C9A  006F FFCC  F085    	movff	prodl,___flmul@temp
 16582   004CA0  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16583   004CA6                     
 16584                           ; BSR set to: 0
 16585   004CA6  5185               	movf	___flmul@temp& (0+255),w,b
 16586   004CA8  277B               	addwf	___flmul@grs& (0+255),f,b
 16587   004CAA  0E00               	movlw	0
 16588   004CAC  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16589   004CAE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16590   004CB0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16591   004CB2                     
 16592                           ; BSR set to: 0
 16593   004CB2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16594   004CB4  2781               	addwf	___flmul@prod& (0+255),f,b
 16595   004CB6  0E00               	movlw	0
 16596   004CB8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16597   004CBA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16598   004CBC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16599   004CBE  5172               	movf	___flmul@a& (0+255),w,b
 16600   004CC0  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16601   004CC2  006F FFCC  F085    	movff	prodl,___flmul@temp
 16602   004CC8  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16603   004CCE                     
 16604                           ; BSR set to: 0
 16605   004CCE  5185               	movf	___flmul@temp& (0+255),w,b
 16606   004CD0  277B               	addwf	___flmul@grs& (0+255),f,b
 16607   004CD2  0E00               	movlw	0
 16608   004CD4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16609   004CD6  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16610   004CD8  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16611   004CDA                     
 16612                           ; BSR set to: 0
 16613   004CDA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16614   004CDC  2781               	addwf	___flmul@prod& (0+255),f,b
 16615   004CDE  0E00               	movlw	0
 16616   004CE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16617   004CE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16618   004CE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16619   004CE6                     
 16620                           ; BSR set to: 0
 16621   004CE6  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16622   004CEA  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16623   004CEE  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16624   004CF2  6B7B               	clrf	___flmul@grs& (0+255),b
 16625   004CF4                     
 16626                           ; BSR set to: 0
 16627   004CF4  5172               	movf	___flmul@a& (0+255),w,b
 16628   004CF6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16629   004CF8  006F FFCC  F085    	movff	prodl,___flmul@temp
 16630   004CFE  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16631   004D04                     
 16632                           ; BSR set to: 0
 16633   004D04  5185               	movf	___flmul@temp& (0+255),w,b
 16634   004D06  277B               	addwf	___flmul@grs& (0+255),f,b
 16635   004D08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16636   004D0A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16637   004D0C  0E00               	movlw	0
 16638   004D0E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16639   004D10  0E00               	movlw	0
 16640   004D12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16641   004D14                     
 16642                           ; BSR set to: 0
 16643   004D14  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16644   004D16  036E               	mulwf	___flmul@b& (0+255),b
 16645   004D18  006F FFCC  F085    	movff	prodl,___flmul@temp
 16646   004D1E  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16647   004D24                     
 16648                           ; BSR set to: 0
 16649   004D24  5185               	movf	___flmul@temp& (0+255),w,b
 16650   004D26  277B               	addwf	___flmul@grs& (0+255),f,b
 16651   004D28  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16652   004D2A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16653   004D2C  0E00               	movlw	0
 16654   004D2E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16655   004D30  0E00               	movlw	0
 16656   004D32  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16657   004D34                     
 16658                           ; BSR set to: 0
 16659   004D34  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16660   004D38  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16661   004D3C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16662   004D40  6B7B               	clrf	___flmul@grs& (0+255),b
 16663   004D42  5172               	movf	___flmul@a& (0+255),w,b
 16664   004D44  036E               	mulwf	___flmul@b& (0+255),b
 16665   004D46  006F FFCC  F085    	movff	prodl,___flmul@temp
 16666   004D4C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16667   004D52                     
 16668                           ; BSR set to: 0
 16669   004D52  5185               	movf	___flmul@temp& (0+255),w,b
 16670   004D54  277B               	addwf	___flmul@grs& (0+255),f,b
 16671   004D56  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16672   004D58  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16673   004D5A  0E00               	movlw	0
 16674   004D5C  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16675   004D5E  0E00               	movlw	0
 16676   004D60  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16677   004D62                     
 16678                           ; BSR set to: 0
 16679   004D62  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16680   004D64  036F               	mulwf	(___flmul@b+1)& (0+255),b
 16681   004D66  006F FFCC  F085    	movff	prodl,___flmul@temp
 16682   004D6C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16683   004D72  5185               	movf	___flmul@temp& (0+255),w,b
 16684   004D74  2781               	addwf	___flmul@prod& (0+255),f,b
 16685   004D76  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16686   004D78  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16687   004D7A  0E00               	movlw	0
 16688   004D7C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16689   004D7E  0E00               	movlw	0
 16690   004D80  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16691   004D82                     
 16692                           ; BSR set to: 0
 16693   004D82  5173               	movf	(___flmul@a+1)& (0+255),w,b
 16694   004D84  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16695   004D86  006F FFCC  F085    	movff	prodl,___flmul@temp
 16696   004D8C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16697   004D92                     
 16698                           ; BSR set to: 0
 16699   004D92  5185               	movf	___flmul@temp& (0+255),w,b
 16700   004D94  2781               	addwf	___flmul@prod& (0+255),f,b
 16701   004D96  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16702   004D98  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16703   004D9A  0E00               	movlw	0
 16704   004D9C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16705   004D9E  0E00               	movlw	0
 16706   004DA0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16707   004DA2  5174               	movf	(___flmul@a+2)& (0+255),w,b
 16708   004DA4  0370               	mulwf	(___flmul@b+2)& (0+255),b
 16709   004DA6  006F FFCC  F085    	movff	prodl,___flmul@temp
 16710   004DAC  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 16711   004DB2                     
 16712                           ; BSR set to: 0
 16713   004DB2  5185               	movf	___flmul@temp& (0+255),w,b
 16714   004DB4  6F76               	movwf	??___flmul& (0+255),b
 16715   004DB6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16716   004DB8  6F77               	movwf	(??___flmul+1)& (0+255),b
 16717   004DBA  6B78               	clrf	(??___flmul+2)& (0+255),b
 16718   004DBC  6B79               	clrf	(??___flmul+3)& (0+255),b
 16719   004DBE  C078  F079         	movff	??___flmul+2,??___flmul+3
 16720   004DC2  C077  F078         	movff	??___flmul+1,??___flmul+2
 16721   004DC6  C076  F077         	movff	??___flmul,??___flmul+1
 16722   004DCA  6B76               	clrf	??___flmul& (0+255),b
 16723   004DCC  5176               	movf	??___flmul& (0+255),w,b
 16724   004DCE  2781               	addwf	___flmul@prod& (0+255),f,b
 16725   004DD0  5177               	movf	(??___flmul+1)& (0+255),w,b
 16726   004DD2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16727   004DD4  5178               	movf	(??___flmul+2)& (0+255),w,b
 16728   004DD6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16729   004DD8  5179               	movf	(??___flmul+3)& (0+255),w,b
 16730   004DDA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16731   004DDC                     
 16732                           ; BSR set to: 0
 16733   004DDC  C07B  F076         	movff	___flmul@grs,??___flmul
 16734   004DE0  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 16735   004DE4  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 16736   004DE8  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 16737   004DEC  0E19               	movlw	25
 16738   004DEE  EFFE  F026         	goto	u13920
 16739   004DF2                     u13925:
 16740   004DF2  90D8               	bcf	status,0,c
 16741   004DF4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 16742   004DF6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 16743   004DF8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 16744   004DFA  3376               	rrcf	??___flmul& (0+255),f,b
 16745   004DFC                     u13920:
 16746   004DFC  2EE8               	decfsz	wreg,f,c
 16747   004DFE  EFF9  F026         	goto	u13925
 16748   004E02  5176               	movf	??___flmul& (0+255),w,b
 16749   004E04  2781               	addwf	___flmul@prod& (0+255),f,b
 16750   004E06  5177               	movf	(??___flmul+1)& (0+255),w,b
 16751   004E08  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16752   004E0A  5178               	movf	(??___flmul+2)& (0+255),w,b
 16753   004E0C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16754   004E0E  5179               	movf	(??___flmul+3)& (0+255),w,b
 16755   004E10  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16756   004E12                     
 16757                           ; BSR set to: 0
 16758   004E12  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 16759   004E16  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 16760   004E1A  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 16761   004E1E  6B7B               	clrf	___flmul@grs& (0+255),b
 16762   004E20                     
 16763                           ; BSR set to: 0
 16764   004E20  517F               	movf	___flmul@aexp& (0+255),w,b
 16765   004E22  C080  F076         	movff	___flmul@bexp,??___flmul
 16766   004E26  6B77               	clrf	(??___flmul+1)& (0+255),b
 16767   004E28  2776               	addwf	??___flmul& (0+255),f,b
 16768   004E2A  0E00               	movlw	0
 16769   004E2C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 16770   004E2E  0E82               	movlw	130
 16771   004E30  2576               	addwf	??___flmul& (0+255),w,b
 16772   004E32  6F85               	movwf	___flmul@temp& (0+255),b
 16773   004E34  0EFF               	movlw	255
 16774   004E36  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 16775   004E38  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 16776   004E3A  EF34  F027         	goto	l12095
 16777   004E3E                     l12089:
 16778                           
 16779                           ; BSR set to: 0
 16780   004E3E  90D8               	bcf	status,0,c
 16781   004E40  3781               	rlcf	___flmul@prod& (0+255),f,b
 16782   004E42  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16783   004E44  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16784   004E46  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16785   004E48                     
 16786                           ; BSR set to: 0
 16787   004E48  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 16788   004E4A  EF29  F027         	goto	u13931
 16789   004E4E  EF2B  F027         	goto	u13930
 16790   004E52                     u13931:
 16791   004E52  EF2C  F027         	goto	l2894
 16792   004E56                     u13930:
 16793   004E56                     
 16794                           ; BSR set to: 0
 16795   004E56  8181               	bsf	___flmul@prod& (0+255),0,b
 16796   004E58                     l2894:
 16797                           
 16798                           ; BSR set to: 0
 16799   004E58  90D8               	bcf	status,0,c
 16800   004E5A  377B               	rlcf	___flmul@grs& (0+255),f,b
 16801   004E5C  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16802   004E5E  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16803   004E60  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16804   004E62  0785               	decf	___flmul@temp& (0+255),f,b
 16805   004E64  A0D8               	btfss	status,0,c
 16806   004E66  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 16807   004E68                     l12095:
 16808                           
 16809                           ; BSR set to: 0
 16810   004E68  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 16811   004E6A  EF39  F027         	goto	u13941
 16812   004E6E  EF3B  F027         	goto	u13940
 16813   004E72                     u13941:
 16814   004E72  EF1F  F027         	goto	l12089
 16815   004E76                     u13940:
 16816   004E76                     
 16817                           ; BSR set to: 0
 16818   004E76  0E00               	movlw	0
 16819   004E78  6F7F               	movwf	___flmul@aexp& (0+255),b
 16820   004E7A                     
 16821                           ; BSR set to: 0
 16822   004E7A  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 16823   004E7C  EF42  F027         	goto	u13951
 16824   004E80  EF44  F027         	goto	u13950
 16825   004E84                     u13951:
 16826   004E84  EF68  F027         	goto	l2896
 16827   004E88                     u13950:
 16828   004E88                     
 16829                           ; BSR set to: 0
 16830   004E88  0EFF               	movlw	255
 16831   004E8A  157B               	andwf	___flmul@grs& (0+255),w,b
 16832   004E8C  6F76               	movwf	??___flmul& (0+255),b
 16833   004E8E  0EFF               	movlw	255
 16834   004E90  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 16835   004E92  6F77               	movwf	(??___flmul+1)& (0+255),b
 16836   004E94  0EFF               	movlw	255
 16837   004E96  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 16838   004E98  6F78               	movwf	(??___flmul+2)& (0+255),b
 16839   004E9A  0E7F               	movlw	127
 16840   004E9C  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 16841   004E9E  6F79               	movwf	(??___flmul+3)& (0+255),b
 16842   004EA0  5176               	movf	??___flmul& (0+255),w,b
 16843   004EA2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 16844   004EA4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 16845   004EA6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 16846   004EA8  B4D8               	btfsc	status,2,c
 16847   004EAA  EF59  F027         	goto	u13961
 16848   004EAE  EF5B  F027         	goto	u13960
 16849   004EB2                     u13961:
 16850   004EB2  EF5F  F027         	goto	l2897
 16851   004EB6                     u13960:
 16852   004EB6                     l12103:
 16853                           
 16854                           ; BSR set to: 0
 16855   004EB6  0E01               	movlw	1
 16856   004EB8  6F7F               	movwf	___flmul@aexp& (0+255),b
 16857   004EBA  EF68  F027         	goto	l2896
 16858   004EBE                     l2897:
 16859                           
 16860                           ; BSR set to: 0
 16861   004EBE  A181               	btfss	___flmul@prod& (0+255),0,b
 16862   004EC0  EF64  F027         	goto	u13971
 16863   004EC4  EF66  F027         	goto	u13970
 16864   004EC8                     u13971:
 16865   004EC8  EF68  F027         	goto	l2896
 16866   004ECC                     u13970:
 16867   004ECC  EF5B  F027         	goto	l12103
 16868   004ED0                     l2896:
 16869                           
 16870                           ; BSR set to: 0
 16871   004ED0  517F               	movf	___flmul@aexp& (0+255),w,b
 16872   004ED2  B4D8               	btfsc	status,2,c
 16873   004ED4  EF6E  F027         	goto	u13981
 16874   004ED8  EF70  F027         	goto	u13980
 16875   004EDC                     u13981:
 16876   004EDC  EF94  F027         	goto	l12115
 16877   004EE0                     u13980:
 16878   004EE0                     
 16879                           ; BSR set to: 0
 16880   004EE0  0E01               	movlw	1
 16881   004EE2  2781               	addwf	___flmul@prod& (0+255),f,b
 16882   004EE4  0E00               	movlw	0
 16883   004EE6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16884   004EE8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16885   004EEA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16886   004EEC                     
 16887                           ; BSR set to: 0
 16888   004EEC  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 16889   004EEE  EF7B  F027         	goto	u13991
 16890   004EF2  EF7D  F027         	goto	u13990
 16891   004EF6                     u13991:
 16892   004EF6  EF94  F027         	goto	l12115
 16893   004EFA                     u13990:
 16894   004EFA                     
 16895                           ; BSR set to: 0
 16896   004EFA  C081  F076         	movff	___flmul@prod,??___flmul
 16897   004EFE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 16898   004F02  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 16899   004F06  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 16900   004F0A  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 16901   004F0C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 16902   004F0E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 16903   004F10  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 16904   004F12  3376               	rrcf	??___flmul& (0+255),f,b
 16905   004F14  C076  F081         	movff	??___flmul,___flmul@prod
 16906   004F18  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 16907   004F1C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 16908   004F20  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 16909   004F24                     
 16910                           ; BSR set to: 0
 16911   004F24  4B85               	infsnz	___flmul@temp& (0+255),f,b
 16912   004F26  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 16913   004F28                     l12115:
 16914                           
 16915                           ; BSR set to: 0
 16916   004F28  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16917   004F2A  EF9F  F027         	goto	u14001
 16918   004F2E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16919   004F30  E108               	bnz	u14000
 16920   004F32  2985               	incf	___flmul@temp& (0+255),w,b
 16921   004F34  A0D8               	btfss	status,0,c
 16922   004F36  EF9F  F027         	goto	u14001
 16923   004F3A  EFA1  F027         	goto	u14000
 16924   004F3E                     u14001:
 16925   004F3E  EFAB  F027         	goto	l12119
 16926   004F42                     u14000:
 16927   004F42                     
 16928                           ; BSR set to: 0
 16929   004F42  0E00               	movlw	0
 16930   004F44  6F81               	movwf	___flmul@prod& (0+255),b
 16931   004F46  0E00               	movlw	0
 16932   004F48  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 16933   004F4A  0E80               	movlw	128
 16934   004F4C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 16935   004F4E  0E7F               	movlw	127
 16936   004F50  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16937   004F52  EFD9  F027         	goto	l12131
 16938   004F56                     l12119:
 16939                           
 16940                           ; BSR set to: 0
 16941   004F56  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16942   004F58  EFB8  F027         	goto	u14010
 16943   004F5C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 16944   004F5E  E106               	bnz	u14011
 16945   004F60  0585               	decf	___flmul@temp& (0+255),w,b
 16946   004F62  B0D8               	btfsc	status,0,c
 16947   004F64  EFB6  F027         	goto	u14011
 16948   004F68  EFB8  F027         	goto	u14010
 16949   004F6C                     u14011:
 16950   004F6C  EFC4  F027         	goto	l2904
 16951   004F70                     u14010:
 16952   004F70                     
 16953                           ; BSR set to: 0
 16954   004F70  0E00               	movlw	0
 16955   004F72  6F81               	movwf	___flmul@prod& (0+255),b
 16956   004F74  0E00               	movlw	0
 16957   004F76  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 16958   004F78  0E00               	movlw	0
 16959   004F7A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 16960   004F7C  0E00               	movlw	0
 16961   004F7E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16962   004F80  0E00               	movlw	0
 16963   004F82  6F7A               	movwf	___flmul@sign& (0+255),b
 16964   004F84  EFD9  F027         	goto	l12131
 16965   004F88                     l2904:
 16966                           
 16967                           ; BSR set to: 0
 16968   004F88  C085  F080         	movff	___flmul@temp,___flmul@bexp
 16969   004F8C                     
 16970                           ; BSR set to: 0
 16971   004F8C  0EFF               	movlw	255
 16972   004F8E  1781               	andwf	___flmul@prod& (0+255),f,b
 16973   004F90  0EFF               	movlw	255
 16974   004F92  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 16975   004F94  0E7F               	movlw	127
 16976   004F96  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 16977   004F98  0E00               	movlw	0
 16978   004F9A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 16979   004F9C                     
 16980                           ; BSR set to: 0
 16981   004F9C  A180               	btfss	___flmul@bexp& (0+255),0,b
 16982   004F9E  EFD3  F027         	goto	u14021
 16983   004FA2  EFD5  F027         	goto	u14020
 16984   004FA6                     u14021:
 16985   004FA6  EFD6  F027         	goto	l12129
 16986   004FAA                     u14020:
 16987   004FAA                     
 16988                           ; BSR set to: 0
 16989   004FAA  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 16990   004FAC                     l12129:
 16991                           
 16992                           ; BSR set to: 0
 16993   004FAC  90D8               	bcf	status,0,c
 16994   004FAE  3180               	rrcf	___flmul@bexp& (0+255),w,b
 16995   004FB0  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16996   004FB2                     l12131:
 16997                           
 16998                           ; BSR set to: 0
 16999   004FB2  517A               	movf	___flmul@sign& (0+255),w,b
 17000   004FB4  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 17001   004FB6                     
 17002                           ; BSR set to: 0
 17003   004FB6  C081  F06E         	movff	___flmul@prod,?___flmul
 17004   004FBA  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 17005   004FBE  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 17006   004FC2  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 17007   004FC6                     l2891:
 17008                           
 17009                           ; BSR set to: 0
 17010   004FC6  0012               	return		;funcret
 17011   004FC8                     __end_of___flmul:
 17012                           	callstack 0
 17013                           
 17014 ;; *************** function ___fldiv *****************
 17015 ;; Defined at:
 17016 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;  b               4   39[BANK0 ] unsigned char 
 17019 ;;  a               4   43[BANK0 ] unsigned char 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;  grs             4   58[BANK0 ] unsigned long 
 17022 ;;  rem             4   51[BANK0 ] unsigned long 
 17023 ;;  new_exp         2   56[BANK0 ] short 
 17024 ;;  aexp            1   63[BANK0 ] unsigned char 
 17025 ;;  bexp            1   62[BANK0 ] unsigned char 
 17026 ;;  sign            1   55[BANK0 ] unsigned char 
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  4   39[BANK0 ] unsigned char 
 17029 ;; Registers used:
 17030 ;;		wreg, status,2, status,0
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17036 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17037 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17039 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17040 ;;Total ram usage:       25 bytes
 17041 ;; Hardware stack levels used: 1
 17042 ;; Hardware stack levels required when called: 5
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		_fxls_read_accel_data
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text62
 17051   005BE4                     __ptext62:
 17052                           	callstack 0
 17053   005BE4                     ___fldiv:
 17054                           	callstack 24
 17055   005BE4  0100               	movlb	0	; () banked
 17056   005BE6  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 17057   005BE8  0B80               	andlw	128
 17058   005BEA  6F97               	movwf	___fldiv@sign& (0+255),b
 17059   005BEC  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 17060   005BEE  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 17061   005BF0  6F9E               	movwf	___fldiv@bexp& (0+255),b
 17062   005BF2                     
 17063                           ; BSR set to: 0
 17064   005BF2  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 17065   005BF4  EFFE  F02D         	goto	u13611
 17066   005BF8  EF00  F02E         	goto	u13610
 17067   005BFC                     u13611:
 17068   005BFC  EF01  F02E         	goto	l11875
 17069   005C00                     u13610:
 17070   005C00                     
 17071                           ; BSR set to: 0
 17072   005C00  819E               	bsf	___fldiv@bexp& (0+255),0,b
 17073   005C02                     l11875:
 17074                           
 17075                           ; BSR set to: 0
 17076   005C02  519E               	movf	___fldiv@bexp& (0+255),w,b
 17077   005C04  B4D8               	btfsc	status,2,c
 17078   005C06  EF07  F02E         	goto	u13621
 17079   005C0A  EF09  F02E         	goto	u13620
 17080   005C0E                     u13621:
 17081   005C0E  EF1E  F02E         	goto	l11885
 17082   005C12                     u13620:
 17083   005C12                     
 17084                           ; BSR set to: 0
 17085   005C12  299E               	incf	___fldiv@bexp& (0+255),w,b
 17086   005C14  A4D8               	btfss	status,2,c
 17087   005C16  EF0F  F02E         	goto	u13631
 17088   005C1A  EF11  F02E         	goto	u13630
 17089   005C1E                     u13631:
 17090   005C1E  EF19  F02E         	goto	l11881
 17091   005C22                     u13630:
 17092   005C22                     
 17093                           ; BSR set to: 0
 17094   005C22  0E00               	movlw	0
 17095   005C24  6F87               	movwf	___fldiv@b& (0+255),b
 17096   005C26  0E00               	movlw	0
 17097   005C28  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17098   005C2A  0E00               	movlw	0
 17099   005C2C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17100   005C2E  0E00               	movlw	0
 17101   005C30  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17102   005C32                     l11881:
 17103                           
 17104                           ; BSR set to: 0
 17105   005C32  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 17106   005C34                     
 17107                           ; BSR set to: 0
 17108   005C34  0E00               	movlw	0
 17109   005C36  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17110   005C38  EF26  F02E         	goto	l11887
 17111   005C3C                     l11885:
 17112                           
 17113                           ; BSR set to: 0
 17114   005C3C  0E00               	movlw	0
 17115   005C3E  6F87               	movwf	___fldiv@b& (0+255),b
 17116   005C40  0E00               	movlw	0
 17117   005C42  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17118   005C44  0E00               	movlw	0
 17119   005C46  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17120   005C48  0E00               	movlw	0
 17121   005C4A  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17122   005C4C                     l11887:
 17123                           
 17124                           ; BSR set to: 0
 17125   005C4C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17126   005C4E  0B80               	andlw	128
 17127   005C50  1B97               	xorwf	___fldiv@sign& (0+255),f,b
 17128   005C52                     
 17129                           ; BSR set to: 0
 17130   005C52  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17131   005C54  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 17132   005C56  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17133   005C58                     
 17134                           ; BSR set to: 0
 17135   005C58  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 17136   005C5A  EF31  F02E         	goto	u13641
 17137   005C5E  EF33  F02E         	goto	u13640
 17138   005C62                     u13641:
 17139   005C62  EF34  F02E         	goto	l11895
 17140   005C66                     u13640:
 17141   005C66                     
 17142                           ; BSR set to: 0
 17143   005C66  819F               	bsf	___fldiv@aexp& (0+255),0,b
 17144   005C68                     l11895:
 17145                           
 17146                           ; BSR set to: 0
 17147   005C68  519F               	movf	___fldiv@aexp& (0+255),w,b
 17148   005C6A  B4D8               	btfsc	status,2,c
 17149   005C6C  EF3A  F02E         	goto	u13651
 17150   005C70  EF3C  F02E         	goto	u13650
 17151   005C74                     u13651:
 17152   005C74  EF51  F02E         	goto	l11905
 17153   005C78                     u13650:
 17154   005C78                     
 17155                           ; BSR set to: 0
 17156   005C78  299F               	incf	___fldiv@aexp& (0+255),w,b
 17157   005C7A  A4D8               	btfss	status,2,c
 17158   005C7C  EF42  F02E         	goto	u13661
 17159   005C80  EF44  F02E         	goto	u13660
 17160   005C84                     u13661:
 17161   005C84  EF4C  F02E         	goto	l11901
 17162   005C88                     u13660:
 17163   005C88                     
 17164                           ; BSR set to: 0
 17165   005C88  0E00               	movlw	0
 17166   005C8A  6F8B               	movwf	___fldiv@a& (0+255),b
 17167   005C8C  0E00               	movlw	0
 17168   005C8E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17169   005C90  0E00               	movlw	0
 17170   005C92  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17171   005C94  0E00               	movlw	0
 17172   005C96  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17173   005C98                     l11901:
 17174                           
 17175                           ; BSR set to: 0
 17176   005C98  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 17177   005C9A                     
 17178                           ; BSR set to: 0
 17179   005C9A  0E00               	movlw	0
 17180   005C9C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17181   005C9E  EF59  F02E         	goto	l11907
 17182   005CA2                     l11905:
 17183                           
 17184                           ; BSR set to: 0
 17185   005CA2  0E00               	movlw	0
 17186   005CA4  6F8B               	movwf	___fldiv@a& (0+255),b
 17187   005CA6  0E00               	movlw	0
 17188   005CA8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 17189   005CAA  0E00               	movlw	0
 17190   005CAC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 17191   005CAE  0E00               	movlw	0
 17192   005CB0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 17193   005CB2                     l11907:
 17194                           
 17195                           ; BSR set to: 0
 17196   005CB2  518B               	movf	___fldiv@a& (0+255),w,b
 17197   005CB4  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 17198   005CB6  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 17199   005CB8  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 17200   005CBA  A4D8               	btfss	status,2,c
 17201   005CBC  EF62  F02E         	goto	u13671
 17202   005CC0  EF64  F02E         	goto	u13670
 17203   005CC4                     u13671:
 17204   005CC4  EF7C  F02E         	goto	l11919
 17205   005CC8                     u13670:
 17206   005CC8                     
 17207                           ; BSR set to: 0
 17208   005CC8  0E00               	movlw	0
 17209   005CCA  6F87               	movwf	___fldiv@b& (0+255),b
 17210   005CCC  0E00               	movlw	0
 17211   005CCE  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17212   005CD0  0E00               	movlw	0
 17213   005CD2  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17214   005CD4  0E00               	movlw	0
 17215   005CD6  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17216   005CD8                     
 17217                           ; BSR set to: 0
 17218   005CD8  0E80               	movlw	128
 17219   005CDA  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 17220   005CDC  0E7F               	movlw	127
 17221   005CDE  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17222   005CE0                     l11913:
 17223                           
 17224                           ; BSR set to: 0
 17225   005CE0  5197               	movf	___fldiv@sign& (0+255),w,b
 17226   005CE2  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17227   005CE4                     
 17228                           ; BSR set to: 0
 17229   005CE4  C087  F087         	movff	___fldiv@b,?___fldiv
 17230   005CE8  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 17231   005CEC  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 17232   005CF0  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 17233   005CF4  EFBF  F02F         	goto	l2855
 17234   005CF8                     l11919:
 17235                           
 17236                           ; BSR set to: 0
 17237   005CF8  519E               	movf	___fldiv@bexp& (0+255),w,b
 17238   005CFA  A4D8               	btfss	status,2,c
 17239   005CFC  EF82  F02E         	goto	u13681
 17240   005D00  EF84  F02E         	goto	u13680
 17241   005D04                     u13681:
 17242   005D04  EF8E  F02E         	goto	l11927
 17243   005D08                     u13680:
 17244   005D08                     
 17245                           ; BSR set to: 0
 17246   005D08  0E00               	movlw	0
 17247   005D0A  6F87               	movwf	?___fldiv& (0+255),b
 17248   005D0C  0E00               	movlw	0
 17249   005D0E  6F88               	movwf	(?___fldiv+1)& (0+255),b
 17250   005D10  0E00               	movlw	0
 17251   005D12  6F89               	movwf	(?___fldiv+2)& (0+255),b
 17252   005D14  0E00               	movlw	0
 17253   005D16  6F8A               	movwf	(?___fldiv+3)& (0+255),b
 17254   005D18  EFBF  F02F         	goto	l2855
 17255   005D1C                     l11927:
 17256                           
 17257                           ; BSR set to: 0
 17258   005D1C  519F               	movf	___fldiv@aexp& (0+255),w,b
 17259   005D1E  C09E  F08F         	movff	___fldiv@bexp,??___fldiv
 17260   005D22  6B90               	clrf	(??___fldiv+1)& (0+255),b
 17261   005D24  5F8F               	subwf	??___fldiv& (0+255),f,b
 17262   005D26  0E00               	movlw	0
 17263   005D28  5B90               	subwfb	(??___fldiv+1)& (0+255),f,b
 17264   005D2A  0E7F               	movlw	127
 17265   005D2C  258F               	addwf	??___fldiv& (0+255),w,b
 17266   005D2E  6F98               	movwf	___fldiv@new_exp& (0+255),b
 17267   005D30  0E00               	movlw	0
 17268   005D32  2190               	addwfc	(??___fldiv+1)& (0+255),w,b
 17269   005D34  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17270   005D36                     
 17271                           ; BSR set to: 0
 17272   005D36  C087  F093         	movff	___fldiv@b,___fldiv@rem
 17273   005D3A  C088  F094         	movff	___fldiv@b+1,___fldiv@rem+1
 17274   005D3E  C089  F095         	movff	___fldiv@b+2,___fldiv@rem+2
 17275   005D42  C08A  F096         	movff	___fldiv@b+3,___fldiv@rem+3
 17276   005D46                     
 17277                           ; BSR set to: 0
 17278   005D46  0E00               	movlw	0
 17279   005D48  6F87               	movwf	___fldiv@b& (0+255),b
 17280   005D4A  0E00               	movlw	0
 17281   005D4C  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17282   005D4E  0E00               	movlw	0
 17283   005D50  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17284   005D52  0E00               	movlw	0
 17285   005D54  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17286   005D56                     
 17287                           ; BSR set to: 0
 17288   005D56  0E00               	movlw	0
 17289   005D58  6F9A               	movwf	___fldiv@grs& (0+255),b
 17290   005D5A  0E00               	movlw	0
 17291   005D5C  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 17292   005D5E  0E00               	movlw	0
 17293   005D60  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 17294   005D62  0E00               	movlw	0
 17295   005D64  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 17296   005D66                     
 17297                           ; BSR set to: 0
 17298   005D66  0E00               	movlw	0
 17299   005D68  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17300   005D6A  EFEF  F02E         	goto	l2857
 17301   005D6E                     l11937:
 17302                           
 17303                           ; BSR set to: 0
 17304   005D6E  519F               	movf	___fldiv@aexp& (0+255),w,b
 17305   005D70  B4D8               	btfsc	status,2,c
 17306   005D72  EFBD  F02E         	goto	u13691
 17307   005D76  EFBF  F02E         	goto	u13690
 17308   005D7A                     u13691:
 17309   005D7A  EFD6  F02E         	goto	l11945
 17310   005D7E                     u13690:
 17311   005D7E                     
 17312                           ; BSR set to: 0
 17313   005D7E  90D8               	bcf	status,0,c
 17314   005D80  3793               	rlcf	___fldiv@rem& (0+255),f,b
 17315   005D82  3794               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 17316   005D84  3795               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 17317   005D86  3796               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 17318   005D88  90D8               	bcf	status,0,c
 17319   005D8A  3787               	rlcf	___fldiv@b& (0+255),f,b
 17320   005D8C  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17321   005D8E  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17322   005D90  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17323   005D92                     
 17324                           ; BSR set to: 0
 17325   005D92  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17326   005D94  EFCE  F02E         	goto	u13701
 17327   005D98  EFD0  F02E         	goto	u13700
 17328   005D9C                     u13701:
 17329   005D9C  EFD1  F02E         	goto	l2860
 17330   005DA0                     u13700:
 17331   005DA0                     
 17332                           ; BSR set to: 0
 17333   005DA0  8187               	bsf	___fldiv@b& (0+255),0,b
 17334   005DA2                     l2860:
 17335                           
 17336                           ; BSR set to: 0
 17337   005DA2  90D8               	bcf	status,0,c
 17338   005DA4  379A               	rlcf	___fldiv@grs& (0+255),f,b
 17339   005DA6  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17340   005DA8  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17341   005DAA  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17342   005DAC                     l11945:
 17343                           
 17344                           ; BSR set to: 0
 17345   005DAC  518B               	movf	___fldiv@a& (0+255),w,b
 17346   005DAE  5D93               	subwf	___fldiv@rem& (0+255),w,b
 17347   005DB0  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 17348   005DB2  5994               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17349   005DB4  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 17350   005DB6  5995               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17351   005DB8  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17352   005DBA  5996               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17353   005DBC  A0D8               	btfss	status,0,c
 17354   005DBE  EFE3  F02E         	goto	u13711
 17355   005DC2  EFE5  F02E         	goto	u13710
 17356   005DC6                     u13711:
 17357   005DC6  EFEE  F02E         	goto	l11951
 17358   005DCA                     u13710:
 17359   005DCA                     
 17360                           ; BSR set to: 0
 17361   005DCA  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17362   005DCC                     
 17363                           ; BSR set to: 0
 17364   005DCC  518B               	movf	___fldiv@a& (0+255),w,b
 17365   005DCE  5F93               	subwf	___fldiv@rem& (0+255),f,b
 17366   005DD0  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 17367   005DD2  5B94               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17368   005DD4  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 17369   005DD6  5B95               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17370   005DD8  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 17371   005DDA  5B96               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17372   005DDC                     l11951:
 17373                           
 17374                           ; BSR set to: 0
 17375   005DDC  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 17376   005DDE                     l2857:
 17377                           
 17378                           ; BSR set to: 0
 17379   005DDE  0E19               	movlw	25
 17380   005DE0  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 17381   005DE2  EFF5  F02E         	goto	u13721
 17382   005DE6  EFF7  F02E         	goto	u13720
 17383   005DEA                     u13721:
 17384   005DEA  EFB7  F02E         	goto	l11937
 17385   005DEE                     u13720:
 17386   005DEE                     
 17387                           ; BSR set to: 0
 17388   005DEE  5193               	movf	___fldiv@rem& (0+255),w,b
 17389   005DF0  1194               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17390   005DF2  1195               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17391   005DF4  1196               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17392   005DF6  B4D8               	btfsc	status,2,c
 17393   005DF8  EF00  F02F         	goto	u13731
 17394   005DFC  EF02  F02F         	goto	u13730
 17395   005E00                     u13731:
 17396   005E00  EF1A  F02F         	goto	l11963
 17397   005E04                     u13730:
 17398   005E04                     
 17399                           ; BSR set to: 0
 17400   005E04  819A               	bsf	___fldiv@grs& (0+255),0,b
 17401   005E06  EF1A  F02F         	goto	l11963
 17402   005E0A                     l11957:
 17403                           
 17404                           ; BSR set to: 0
 17405   005E0A  90D8               	bcf	status,0,c
 17406   005E0C  3787               	rlcf	___fldiv@b& (0+255),f,b
 17407   005E0E  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17408   005E10  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17409   005E12  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17410   005E14                     
 17411                           ; BSR set to: 0
 17412   005E14  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17413   005E16  EF0F  F02F         	goto	u13741
 17414   005E1A  EF11  F02F         	goto	u13740
 17415   005E1E                     u13741:
 17416   005E1E  EF12  F02F         	goto	l2866
 17417   005E22                     u13740:
 17418   005E22                     
 17419                           ; BSR set to: 0
 17420   005E22  8187               	bsf	___fldiv@b& (0+255),0,b
 17421   005E24                     l2866:
 17422                           
 17423                           ; BSR set to: 0
 17424   005E24  90D8               	bcf	status,0,c
 17425   005E26  379A               	rlcf	___fldiv@grs& (0+255),f,b
 17426   005E28  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17427   005E2A  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17428   005E2C  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17429   005E2E  0798               	decf	___fldiv@new_exp& (0+255),f,b
 17430   005E30  A0D8               	btfss	status,0,c
 17431   005E32  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17432   005E34                     l11963:
 17433                           
 17434                           ; BSR set to: 0
 17435   005E34  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 17436   005E36  EF1F  F02F         	goto	u13751
 17437   005E3A  EF21  F02F         	goto	u13750
 17438   005E3E                     u13751:
 17439   005E3E  EF05  F02F         	goto	l11957
 17440   005E42                     u13750:
 17441   005E42                     
 17442                           ; BSR set to: 0
 17443   005E42  0E00               	movlw	0
 17444   005E44  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17445   005E46                     
 17446                           ; BSR set to: 0
 17447   005E46  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17448   005E48  EF28  F02F         	goto	u13761
 17449   005E4C  EF2A  F02F         	goto	u13760
 17450   005E50                     u13761:
 17451   005E50  EF4E  F02F         	goto	l2868
 17452   005E54                     u13760:
 17453   005E54                     
 17454                           ; BSR set to: 0
 17455   005E54  0EFF               	movlw	255
 17456   005E56  159A               	andwf	___fldiv@grs& (0+255),w,b
 17457   005E58  6F8F               	movwf	??___fldiv& (0+255),b
 17458   005E5A  0EFF               	movlw	255
 17459   005E5C  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17460   005E5E  6F90               	movwf	(??___fldiv+1)& (0+255),b
 17461   005E60  0EFF               	movlw	255
 17462   005E62  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17463   005E64  6F91               	movwf	(??___fldiv+2)& (0+255),b
 17464   005E66  0E7F               	movlw	127
 17465   005E68  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17466   005E6A  6F92               	movwf	(??___fldiv+3)& (0+255),b
 17467   005E6C  518F               	movf	??___fldiv& (0+255),w,b
 17468   005E6E  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 17469   005E70  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 17470   005E72  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 17471   005E74  B4D8               	btfsc	status,2,c
 17472   005E76  EF3F  F02F         	goto	u13771
 17473   005E7A  EF41  F02F         	goto	u13770
 17474   005E7E                     u13771:
 17475   005E7E  EF45  F02F         	goto	l2869
 17476   005E82                     u13770:
 17477   005E82                     l11971:
 17478                           
 17479                           ; BSR set to: 0
 17480   005E82  0E01               	movlw	1
 17481   005E84  6F9F               	movwf	___fldiv@aexp& (0+255),b
 17482   005E86  EF4E  F02F         	goto	l2868
 17483   005E8A                     l2869:
 17484                           
 17485                           ; BSR set to: 0
 17486   005E8A  A187               	btfss	___fldiv@b& (0+255),0,b
 17487   005E8C  EF4A  F02F         	goto	u13781
 17488   005E90  EF4C  F02F         	goto	u13780
 17489   005E94                     u13781:
 17490   005E94  EF4E  F02F         	goto	l2868
 17491   005E98                     u13780:
 17492   005E98  EF41  F02F         	goto	l11971
 17493   005E9C                     l2868:
 17494                           
 17495                           ; BSR set to: 0
 17496   005E9C  519F               	movf	___fldiv@aexp& (0+255),w,b
 17497   005E9E  B4D8               	btfsc	status,2,c
 17498   005EA0  EF54  F02F         	goto	u13791
 17499   005EA4  EF56  F02F         	goto	u13790
 17500   005EA8                     u13791:
 17501   005EA8  EF7A  F02F         	goto	l11983
 17502   005EAC                     u13790:
 17503   005EAC                     
 17504                           ; BSR set to: 0
 17505   005EAC  0E01               	movlw	1
 17506   005EAE  2787               	addwf	___fldiv@b& (0+255),f,b
 17507   005EB0  0E00               	movlw	0
 17508   005EB2  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17509   005EB4  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17510   005EB6  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17511   005EB8                     
 17512                           ; BSR set to: 0
 17513   005EB8  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 17514   005EBA  EF61  F02F         	goto	u13801
 17515   005EBE  EF63  F02F         	goto	u13800
 17516   005EC2                     u13801:
 17517   005EC2  EF7A  F02F         	goto	l11983
 17518   005EC6                     u13800:
 17519   005EC6                     
 17520                           ; BSR set to: 0
 17521   005EC6  C087  F08F         	movff	___fldiv@b,??___fldiv
 17522   005ECA  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 17523   005ECE  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 17524   005ED2  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 17525   005ED6  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 17526   005ED8  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 17527   005EDA  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 17528   005EDC  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 17529   005EDE  338F               	rrcf	??___fldiv& (0+255),f,b
 17530   005EE0  C08F  F087         	movff	??___fldiv,___fldiv@b
 17531   005EE4  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 17532   005EE8  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 17533   005EEC  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 17534   005EF0                     
 17535                           ; BSR set to: 0
 17536   005EF0  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 17537   005EF2  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17538   005EF4                     l11983:
 17539                           
 17540                           ; BSR set to: 0
 17541   005EF4  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17542   005EF6  EF85  F02F         	goto	u13811
 17543   005EFA  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17544   005EFC  E108               	bnz	u13810
 17545   005EFE  2998               	incf	___fldiv@new_exp& (0+255),w,b
 17546   005F00  A0D8               	btfss	status,0,c
 17547   005F02  EF85  F02F         	goto	u13811
 17548   005F06  EF87  F02F         	goto	u13810
 17549   005F0A                     u13811:
 17550   005F0A  EF92  F02F         	goto	l11987
 17551   005F0E                     u13810:
 17552   005F0E                     
 17553                           ; BSR set to: 0
 17554   005F0E  0E00               	movlw	0
 17555   005F10  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17556   005F12  6998               	setf	___fldiv@new_exp& (0+255),b
 17557   005F14  0E00               	movlw	0
 17558   005F16  6F87               	movwf	___fldiv@b& (0+255),b
 17559   005F18  0E00               	movlw	0
 17560   005F1A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17561   005F1C  0E00               	movlw	0
 17562   005F1E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17563   005F20  0E00               	movlw	0
 17564   005F22  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17565   005F24                     l11987:
 17566                           
 17567                           ; BSR set to: 0
 17568   005F24  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17569   005F26  EF9F  F02F         	goto	u13820
 17570   005F2A  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17571   005F2C  E106               	bnz	u13821
 17572   005F2E  0598               	decf	___fldiv@new_exp& (0+255),w,b
 17573   005F30  B0D8               	btfsc	status,0,c
 17574   005F32  EF9D  F02F         	goto	u13821
 17575   005F36  EF9F  F02F         	goto	u13820
 17576   005F3A                     u13821:
 17577   005F3A  EFAD  F02F         	goto	l11991
 17578   005F3E                     u13820:
 17579   005F3E                     
 17580                           ; BSR set to: 0
 17581   005F3E  0E00               	movlw	0
 17582   005F40  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17583   005F42  0E00               	movlw	0
 17584   005F44  6F98               	movwf	___fldiv@new_exp& (0+255),b
 17585   005F46  0E00               	movlw	0
 17586   005F48  6F87               	movwf	___fldiv@b& (0+255),b
 17587   005F4A  0E00               	movlw	0
 17588   005F4C  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 17589   005F4E  0E00               	movlw	0
 17590   005F50  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 17591   005F52  0E00               	movlw	0
 17592   005F54  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17593   005F56  0E00               	movlw	0
 17594   005F58  6F97               	movwf	___fldiv@sign& (0+255),b
 17595   005F5A                     l11991:
 17596                           
 17597                           ; BSR set to: 0
 17598   005F5A  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 17599   005F5E                     
 17600                           ; BSR set to: 0
 17601   005F5E  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 17602   005F60  EFB4  F02F         	goto	u13831
 17603   005F64  EFB6  F02F         	goto	u13830
 17604   005F68                     u13831:
 17605   005F68  EFB9  F02F         	goto	l11997
 17606   005F6C                     u13830:
 17607   005F6C                     
 17608                           ; BSR set to: 0
 17609   005F6C  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 17610   005F6E  EFBA  F02F         	goto	l11999
 17611   005F72                     l11997:
 17612                           
 17613                           ; BSR set to: 0
 17614   005F72  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 17615   005F74                     l11999:
 17616                           
 17617                           ; BSR set to: 0
 17618   005F74  90D8               	bcf	status,0,c
 17619   005F76  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 17620   005F78  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 17621   005F7A  EF70  F02E         	goto	l11913
 17622   005F7E                     l2855:
 17623                           
 17624                           ; BSR set to: 0
 17625   005F7E  0012               	return		;funcret
 17626   005F80                     __end_of___fldiv:
 17627                           	callstack 0
 17628                           
 17629 ;; *************** function _fxls_init *****************
 17630 ;; Defined at:
 17631 ;;		line 8 in file "fxls8974cf.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;		None
 17634 ;; Auto vars:     Size  Location     Type
 17635 ;;  sys_mode        1   12[BANK0 ] volatile unsigned char 
 17636 ;;  sens_config1    1    0        unsigned char 
 17637 ;;  sens_config4    1    0        unsigned char 
 17638 ;;  int_pin_sel     1    0        unsigned char 
 17639 ;;  int_en          1    0        unsigned char 
 17640 ;;  sens_config3    1    0        unsigned char 
 17641 ;;  buf_config1     1    0        unsigned char 
 17642 ;;  sens_config2    1    0        unsigned char 
 17643 ;; Return value:  Size  Location     Type
 17644 ;;                  1    wreg      void 
 17645 ;; Registers used:
 17646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/0
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17656 ;;Total ram usage:        1 bytes
 17657 ;; Hardware stack levels used: 1
 17658 ;; Hardware stack levels required when called: 7
 17659 ;; This function calls:
 17660 ;;		_i2c_read_reg8
 17661 ;;		_i2c_write_reg8
 17662 ;; This function is called by:
 17663 ;;		_main
 17664 ;; This function uses a non-reentrant model
 17665 ;;
 17666                           
 17667                           	psect	text63
 17668   009594                     __ptext63:
 17669                           	callstack 0
 17670   009594                     _fxls_init:
 17671                           	callstack 23
 17672   009594                     
 17673                           ;fxls8974cf.c: 9:     volatile uint8_t sys_mode;;fxls8974cf.c: 10:     i2c_read_reg8(0x3
      +                          1, 0x14, &sys_mode);
 17674   009594  0E14               	movlw	20
 17675   009596  0100               	movlb	0	; () banked
 17676   009598  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17677   00959A  0E6C               	movlw	low fxls_init@sys_mode
 17678   00959C  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17679   00959E  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17680   0095A0  0E31               	movlw	49
 17681   0095A2  EC85  F04D         	call	_i2c_read_reg8
 17682   0095A6                     
 17683                           ;fxls8974cf.c: 19:     i2c_write_reg8(0x31, 0x16, sens_config2);
 17684   0095A6  0E16               	movlw	22
 17685   0095A8  0100               	movlb	0	; () banked
 17686   0095AA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17687   0095AC  0E40               	movlw	64
 17688   0095AE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17689   0095B0  0E31               	movlw	49
 17690   0095B2  EC6C  F051         	call	_i2c_write_reg8
 17691   0095B6                     
 17692                           ;fxls8974cf.c: 26:     i2c_write_reg8(0x31, 0x26, buf_config1);
 17693   0095B6  0E26               	movlw	38
 17694   0095B8  0100               	movlb	0	; () banked
 17695   0095BA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17696   0095BC  0EA0               	movlw	160
 17697   0095BE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17698   0095C0  0E31               	movlw	49
 17699   0095C2  EC6C  F051         	call	_i2c_write_reg8
 17700   0095C6                     
 17701                           ;fxls8974cf.c: 32:     i2c_write_reg8(0x31, 0x17, sens_config3);
 17702   0095C6  0E17               	movlw	23
 17703   0095C8  0100               	movlb	0	; () banked
 17704   0095CA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17705   0095CC  0E5F               	movlw	95
 17706   0095CE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17707   0095D0  0E31               	movlw	49
 17708   0095D2  EC6C  F051         	call	_i2c_write_reg8
 17709   0095D6                     
 17710                           ;fxls8974cf.c: 44:     i2c_write_reg8(0x31, 0x20, int_en);
 17711   0095D6  0E20               	movlw	32
 17712   0095D8  0100               	movlb	0	; () banked
 17713   0095DA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17714   0095DC  0E80               	movlw	128
 17715   0095DE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17716   0095E0  0E31               	movlw	49
 17717   0095E2  EC6C  F051         	call	_i2c_write_reg8
 17718   0095E6                     
 17719                           ;fxls8974cf.c: 56:     i2c_write_reg8(0x31, 0x21, int_pin_sel);
 17720   0095E6  0E21               	movlw	33
 17721   0095E8  0100               	movlb	0	; () banked
 17722   0095EA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17723   0095EC  0E00               	movlw	0
 17724   0095EE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17725   0095F0  0E31               	movlw	49
 17726   0095F2  EC6C  F051         	call	_i2c_write_reg8
 17727   0095F6                     
 17728                           ;fxls8974cf.c: 69:     i2c_write_reg8(0x31, 0x18, sens_config4);
 17729   0095F6  0E18               	movlw	24
 17730   0095F8  0100               	movlb	0	; () banked
 17731   0095FA  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17732   0095FC  0E01               	movlw	1
 17733   0095FE  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17734   009600  0E31               	movlw	49
 17735   009602  EC6C  F051         	call	_i2c_write_reg8
 17736   009606                     
 17737                           ;fxls8974cf.c: 79:     i2c_write_reg8(0x31, 0x15, sens_config1);
 17738   009606  0E15               	movlw	21
 17739   009608  0100               	movlb	0	; () banked
 17740   00960A  6F66               	movwf	i2c_write_reg8@reg& (0+255),b
 17741   00960C  0E21               	movlw	33
 17742   00960E  6F67               	movwf	i2c_write_reg8@val& (0+255),b
 17743   009610  0E31               	movlw	49
 17744   009612  EC6C  F051         	call	_i2c_write_reg8
 17745   009616  0012               	return		;funcret
 17746   009618                     __end_of_fxls_init:
 17747                           	callstack 0
 17748                           
 17749 ;; *************** function _i2c_write_reg8 *****************
 17750 ;; Defined at:
 17751 ;;		line 107 in file "rocketlib/pic18f26k83/i2c.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  address         1    wreg     unsigned char 
 17754 ;;  reg             1    6[BANK0 ] unsigned char 
 17755 ;;  val             1    7[BANK0 ] unsigned char 
 17756 ;; Auto vars:     Size  Location     Type
 17757 ;;  address         1    8[BANK0 ] unsigned char 
 17758 ;;  data            2    9[BANK0 ] unsigned char [2]
 17759 ;; Return value:  Size  Location     Type
 17760 ;;                  1    wreg      _Bool 
 17761 ;; Registers used:
 17762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17763 ;; Tracked objects:
 17764 ;;		On entry : 0/0
 17765 ;;		On exit  : 0/0
 17766 ;;		Unchanged: 0/0
 17767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17769 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17771 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17772 ;;Total ram usage:        5 bytes
 17773 ;; Hardware stack levels used: 1
 17774 ;; Hardware stack levels required when called: 6
 17775 ;; This function calls:
 17776 ;;		_i2c_write
 17777 ;; This function is called by:
 17778 ;;		_fxls_init
 17779 ;; This function uses a non-reentrant model
 17780 ;;
 17781                           
 17782                           	psect	text64
 17783   00A2D8                     __ptext64:
 17784                           	callstack 0
 17785   00A2D8                     _i2c_write_reg8:
 17786                           	callstack 23
 17787                           
 17788                           ;incstack = 0
 17789                           ;i2c_write_reg8@address stored from wreg
 17790   00A2D8  0100               	movlb	0	; () banked
 17791   00A2DA  6F68               	movwf	i2c_write_reg8@address& (0+255),b
 17792   00A2DC                     
 17793                           ;rocketlib/pic18f26k83/i2c.c: 108:     uint8_t data[2] = {reg, val};
 17794   00A2DC  0E00               	movlw	0
 17795   00A2DE  0100               	movlb	0	; () banked
 17796   00A2E0  6F6A               	movwf	(i2c_write_reg8@data+1)& (0+255),b
 17797   00A2E2  0E00               	movlw	0
 17798   00A2E4  6F69               	movwf	i2c_write_reg8@data& (0+255),b
 17799   00A2E6                     
 17800                           ; BSR set to: 0
 17801   00A2E6  C066  F069         	movff	i2c_write_reg8@reg,i2c_write_reg8@data
 17802   00A2EA                     
 17803                           ; BSR set to: 0
 17804   00A2EA  C067  F06A         	movff	i2c_write_reg8@val,i2c_write_reg8@data+1
 17805   00A2EE                     
 17806                           ; BSR set to: 0
 17807                           ;rocketlib/pic18f26k83/i2c.c: 109:     return i2c_write(address, data, 2);;	Return value
      +                           of _i2c_write_reg8 is never used
 17808   00A2EE  0E69               	movlw	low i2c_write_reg8@data
 17809   00A2F0  6F60               	movwf	i2c_write@data& (0+255),b
 17810   00A2F2  0E02               	movlw	2
 17811   00A2F4  6F61               	movwf	i2c_write@len& (0+255),b
 17812   00A2F6  5168               	movf	i2c_write_reg8@address& (0+255),w,b
 17813   00A2F8  EC9F  F042         	call	_i2c_write
 17814   00A2FC  0012               	return		;funcret
 17815   00A2FE                     __end_of_i2c_write_reg8:
 17816                           	callstack 0
 17817                           
 17818 ;; *************** function _fxls_get_whoami *****************
 17819 ;; Defined at:
 17820 ;;		line 88 in file "fxls8974cf.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;		None
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;  res             1   12[BANK0 ] unsigned char 
 17825 ;; Return value:  Size  Location     Type
 17826 ;;                  1    wreg      unsigned char 
 17827 ;; Registers used:
 17828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17838 ;;Total ram usage:        1 bytes
 17839 ;; Hardware stack levels used: 1
 17840 ;; Hardware stack levels required when called: 7
 17841 ;; This function calls:
 17842 ;;		_i2c_read_reg8
 17843 ;; This function is called by:
 17844 ;;		_main
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text65
 17849   00A42E                     __ptext65:
 17850                           	callstack 0
 17851   00A42E                     _fxls_get_whoami:
 17852                           	callstack 23
 17853   00A42E                     
 17854                           ;fxls8974cf.c: 89:     uint8_t res;;fxls8974cf.c: 90:     i2c_read_reg8(0x31, 0x13, &res
      +                          );
 17855   00A42E  0E13               	movlw	19
 17856   00A430  0100               	movlb	0	; () banked
 17857   00A432  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17858   00A434  0E6C               	movlw	low fxls_get_whoami@res
 17859   00A436  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17860   00A438  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17861   00A43A  0E31               	movlw	49
 17862   00A43C  EC85  F04D         	call	_i2c_read_reg8
 17863   00A440                     
 17864                           ;fxls8974cf.c: 91:     return res;
 17865   00A440  0100               	movlb	0	; () banked
 17866   00A442  516C               	movf	fxls_get_whoami@res& (0+255),w,b
 17867   00A444                     
 17868                           ; BSR set to: 0
 17869   00A444  0012               	return		;funcret
 17870   00A446                     __end_of_fxls_get_whoami:
 17871                           	callstack 0
 17872                           
 17873 ;; *************** function _fxls_get_prod_rev *****************
 17874 ;; Defined at:
 17875 ;;		line 82 in file "fxls8974cf.c"
 17876 ;; Parameters:    Size  Location     Type
 17877 ;;		None
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;  res             1   12[BANK0 ] unsigned char 
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  1    wreg      unsigned char 
 17882 ;; Registers used:
 17883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17884 ;; Tracked objects:
 17885 ;;		On entry : 0/0
 17886 ;;		On exit  : 0/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17893 ;;Total ram usage:        1 bytes
 17894 ;; Hardware stack levels used: 1
 17895 ;; Hardware stack levels required when called: 7
 17896 ;; This function calls:
 17897 ;;		_i2c_read_reg8
 17898 ;; This function is called by:
 17899 ;;		_main
 17900 ;; This function uses a non-reentrant model
 17901 ;;
 17902                           
 17903                           	psect	text66
 17904   00A446                     __ptext66:
 17905                           	callstack 0
 17906   00A446                     _fxls_get_prod_rev:
 17907                           	callstack 23
 17908   00A446                     
 17909                           ;fxls8974cf.c: 83:     uint8_t res;;fxls8974cf.c: 84:     i2c_read_reg8(0x31, 0x12, &res
      +                          );
 17910   00A446  0E12               	movlw	18
 17911   00A448  0100               	movlb	0	; () banked
 17912   00A44A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 17913   00A44C  0E6C               	movlw	low fxls_get_prod_rev@res
 17914   00A44E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 17915   00A450  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 17916   00A452  0E31               	movlw	49
 17917   00A454  EC85  F04D         	call	_i2c_read_reg8
 17918   00A458                     
 17919                           ;fxls8974cf.c: 85:     return res;
 17920   00A458  0100               	movlb	0	; () banked
 17921   00A45A  516C               	movf	fxls_get_prod_rev@res& (0+255),w,b
 17922   00A45C                     
 17923                           ; BSR set to: 0
 17924   00A45C  0012               	return		;funcret
 17925   00A45E                     __end_of_fxls_get_prod_rev:
 17926                           	callstack 0
 17927                           
 17928 ;; *************** function _f_mount *****************
 17929 ;; Defined at:
 17930 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;  fs              2  135[BANK0 ] PTR struct .
 17933 ;;		 -> FatFs(563), NULL(0), 
 17934 ;;  path            2  137[BANK0 ] PTR const unsigned char 
 17935 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 17936 ;;  opt             1  139[BANK0 ] unsigned char 
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;  vol             2  145[BANK0 ] int 
 17939 ;;  cfs             2  143[BANK0 ] PTR struct .
 17940 ;;		 -> FatFs(563), NULL(0), 
 17941 ;;  rp              2  141[BANK0 ] PTR const unsigned char 
 17942 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 17943 ;;  res             1  140[BANK0 ] enum E68
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      enum E68
 17946 ;; Registers used:
 17947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17948 ;; Tracked objects:
 17949 ;;		On entry : 0/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17953 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17954 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17956 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17957 ;;Total ram usage:       12 bytes
 17958 ;; Hardware stack levels used: 1
 17959 ;; Hardware stack levels required when called: 14
 17960 ;; This function calls:
 17961 ;;		_find_volume
 17962 ;;		_get_ldnumber
 17963 ;; This function is called by:
 17964 ;;		_main
 17965 ;; This function uses a non-reentrant model
 17966 ;;
 17967                           
 17968                           	psect	text67
 17969   008BF8                     __ptext67:
 17970                           	callstack 0
 17971   008BF8                     _f_mount:
 17972                           	callstack 16
 17973   008BF8                     
 17974                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
 17975   008BF8  C0E9  F0ED         	movff	f_mount@path,f_mount@rp
 17976   008BFC  C0EA  F0EE         	movff	f_mount@path+1,f_mount@rp+1
 17977   008C00                     
 17978                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 17979   008C00  0EED               	movlw	low f_mount@rp
 17980   008C02  0100               	movlb	0	; () banked
 17981   008C04  6F60               	movwf	get_ldnumber@path& (0+255),b
 17982   008C06  6B61               	clrf	(get_ldnumber@path+1)& (0+255),b
 17983   008C08  EC6B  F03C         	call	_get_ldnumber	;wreg free
 17984   008C0C  C060  F0F1         	movff	?_get_ldnumber,f_mount@vol
 17985   008C10  C061  F0F2         	movff	?_get_ldnumber+1,f_mount@vol+1
 17986   008C14                     
 17987                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 17988   008C14  0100               	movlb	0	; () banked
 17989   008C16  BFF2               	btfsc	(f_mount@vol+1)& (0+255),7,b
 17990   008C18  EF12  F046         	goto	u21970
 17991   008C1C  EF10  F046         	goto	u21971
 17992   008C20                     u21971:
 17993   008C20  EF15  F046         	goto	l17759
 17994   008C24                     u21970:
 17995   008C24                     
 17996                           ; BSR set to: 0
 17997   008C24  0E0B               	movlw	11
 17998   008C26  EF6B  F046         	goto	l1277
 17999   008C2A                     l17759:
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 18003   008C2A  90D8               	bcf	status,0,c
 18004   008C2C  35F1               	rlcf	f_mount@vol& (0+255),w,b
 18005   008C2E  6ED9               	movwf	fsr2l,c
 18006   008C30  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 18007   008C32  6EDA               	movwf	fsr2h,c
 18008   008C34  0EE2               	movlw	low _FatFs@ff$F2407
 18009   008C36  26D9               	addwf	fsr2l,f,c
 18010   008C38  0E01               	movlw	high _FatFs@ff$F2407
 18011   008C3A  22DA               	addwfc	fsr2h,f,c
 18012   008C3C  006F FF78  F0EF    	movff	postinc2,f_mount@cfs
 18013   008C42  006F FF74  F0F0    	movff	postdec2,f_mount@cfs+1
 18014   008C48                     
 18015                           ; BSR set to: 0
 18016                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 18017   008C48  51EF               	movf	f_mount@cfs& (0+255),w,b
 18018   008C4A  11F0               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 18019   008C4C  B4D8               	btfsc	status,2,c
 18020   008C4E  EF2B  F046         	goto	u21981
 18021   008C52  EF2D  F046         	goto	u21980
 18022   008C56                     u21981:
 18023   008C56  EF34  F046         	goto	l17765
 18024   008C5A                     u21980:
 18025   008C5A                     
 18026                           ; BSR set to: 0
 18027                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 18028   008C5A  0060  F3BF  FFD9   	movff	f_mount@cfs,fsr2l
 18029   008C60  0060  F3C3  FFDA   	movff	f_mount@cfs+1,fsr2h
 18030   008C66  6ADF               	clrf	indf2,c
 18031   008C68                     l17765:
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 18035   008C68  51E7               	movf	f_mount@fs& (0+255),w,b
 18036   008C6A  11E8               	iorwf	(f_mount@fs+1)& (0+255),w,b
 18037   008C6C  B4D8               	btfsc	status,2,c
 18038   008C6E  EF3B  F046         	goto	u21991
 18039   008C72  EF3D  F046         	goto	u21990
 18040   008C76                     u21991:
 18041   008C76  EF44  F046         	goto	l17769
 18042   008C7A                     u21990:
 18043   008C7A                     
 18044                           ; BSR set to: 0
 18045                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 18046   008C7A  0060  F39F  FFD9   	movff	f_mount@fs,fsr2l
 18047   008C80  0060  F3A3  FFDA   	movff	f_mount@fs+1,fsr2h
 18048   008C86  6ADF               	clrf	indf2,c
 18049   008C88                     l17769:
 18050                           
 18051                           ; BSR set to: 0
 18052                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 18053   008C88  90D8               	bcf	status,0,c
 18054   008C8A  35F1               	rlcf	f_mount@vol& (0+255),w,b
 18055   008C8C  6ED9               	movwf	fsr2l,c
 18056   008C8E  35F2               	rlcf	(f_mount@vol+1)& (0+255),w,b
 18057   008C90  6EDA               	movwf	fsr2h,c
 18058   008C92  0EE2               	movlw	low _FatFs@ff$F2407
 18059   008C94  26D9               	addwf	fsr2l,f,c
 18060   008C96  0E01               	movlw	high _FatFs@ff$F2407
 18061   008C98  22DA               	addwfc	fsr2h,f,c
 18062   008C9A  0060  F39F  FFDE   	movff	f_mount@fs,postinc2
 18063   008CA0  0060  F3A3  FFDD   	movff	f_mount@fs+1,postdec2
 18064   008CA6                     
 18065                           ; BSR set to: 0
 18066                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 18067   008CA6  51EB               	movf	f_mount@opt& (0+255),w,b
 18068   008CA8  A4D8               	btfss	status,2,c
 18069   008CAA  EF59  F046         	goto	u22001
 18070   008CAE  EF5B  F046         	goto	u22000
 18071   008CB2                     u22001:
 18072   008CB2  EF5E  F046         	goto	l17777
 18073   008CB6                     u22000:
 18074   008CB6                     
 18075                           ; BSR set to: 0
 18076   008CB6  0E00               	movlw	0
 18077   008CB8  EF6B  F046         	goto	l1277
 18078   008CBC                     l17777:
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 18082   008CBC  0EE9               	movlw	low f_mount@path
 18083   008CBE  6FDA               	movwf	find_volume@path& (0+255),b
 18084   008CC0  6BDB               	clrf	(find_volume@path+1)& (0+255),b
 18085   008CC2  0EE7               	movlw	low f_mount@fs
 18086   008CC4  6FDC               	movwf	find_volume@rfs& (0+255),b
 18087   008CC6  6BDD               	clrf	(find_volume@rfs+1)& (0+255),b
 18088   008CC8  0E00               	movlw	0
 18089   008CCA  6FDE               	movwf	find_volume@mode& (0+255),b
 18090   008CCC  EC0F  F000         	call	_find_volume	;wreg free
 18091   008CD0  0100               	movlb	0	; () banked
 18092   008CD2  6FEC               	movwf	f_mount@res& (0+255),b
 18093   008CD4                     
 18094                           ; BSR set to: 0
 18095                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 18096   008CD4  51EC               	movf	f_mount@res& (0+255),w,b
 18097   008CD6                     l1277:
 18098                           
 18099                           ; BSR set to: 0
 18100   008CD6  0012               	return		;funcret
 18101   008CD8                     __end_of_f_mount:
 18102                           	callstack 0
 18103                           
 18104 ;; *************** function _find_volume *****************
 18105 ;; Defined at:
 18106 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 18107 ;; Parameters:    Size  Location     Type
 18108 ;;  path            2  122[BANK0 ] PTR PTR const unsigned c
 18109 ;;		 -> f_chdir@path(2), f_open@path(2), f_mount@path(2), 
 18110 ;;  rfs             2  124[BANK0 ] PTR PTR struct .
 18111 ;;		 -> f_chdir@fs(2), f_open@fs(2), f_mount@fs(2), 
 18112 ;;  mode            1  126[BANK0 ] unsigned char 
 18113 ;; Auto vars:     Size  Location     Type
 18114 ;;  br             16    0[BANK1 ] unsigned long [4]
 18115 ;;  bsect           4   49[BANK1 ] unsigned long 
 18116 ;;  fasize          4   45[BANK1 ] unsigned long 
 18117 ;;  nclst           4   41[BANK1 ] unsigned long 
 18118 ;;  tsect           4   36[BANK1 ] unsigned long 
 18119 ;;  sysect          4   28[BANK1 ] unsigned long 
 18120 ;;  szbfat          4   22[BANK1 ] unsigned long 
 18121 ;;  fs              2   56[BANK1 ] PTR struct .
 18122 ;;		 -> FatFs(563), NULL(0), 
 18123 ;;  i               2   53[BANK1 ] unsigned int 
 18124 ;;  nrsv            2   34[BANK1 ] unsigned short 
 18125 ;;  vol             2   32[BANK1 ] int 
 18126 ;;  pt              2   26[BANK1 ] PTR unsigned char 
 18127 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 18128 ;;  fmt             1   55[BANK1 ] unsigned char 
 18129 ;;  stat            1   40[BANK1 ] unsigned char 
 18130 ;; Return value:  Size  Location     Type
 18131 ;;                  1    wreg      enum E68
 18132 ;; Registers used:
 18133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18134 ;; Tracked objects:
 18135 ;;		On entry : 0/0
 18136 ;;		On exit  : 0/0
 18137 ;;		Unchanged: 0/0
 18138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18139 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Locals:         0       0      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Totals:         0      13      58       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;Total ram usage:       71 bytes
 18144 ;; Hardware stack levels used: 1
 18145 ;; Hardware stack levels required when called: 13
 18146 ;; This function calls:
 18147 ;;		___lldiv
 18148 ;;		___lmul
 18149 ;;		_check_fs
 18150 ;;		_disk_initialize
 18151 ;;		_disk_status
 18152 ;;		_get_ldnumber
 18153 ;;		_ld_dword
 18154 ;;		_ld_word
 18155 ;;		_move_window
 18156 ;; This function is called by:
 18157 ;;		_f_mount
 18158 ;;		_f_open
 18159 ;;		_f_chdir
 18160 ;; This function uses a non-reentrant model
 18161 ;;
 18162                           
 18163                           	psect	text68
 18164   00001E                     __ptext68:
 18165                           	callstack 0
 18166   00001E                     _find_volume:
 18167                           	callstack 15
 18168   00001E                     
 18169                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 18170   00001E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 18171   000024  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 18172   00002A  6ADE               	clrf	postinc2,c
 18173   00002C  6ADD               	clrf	postdec2,c
 18174   00002E                     
 18175                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 18176   00002E  C0DA  F060         	movff	find_volume@path,get_ldnumber@path
 18177   000032  C0DB  F061         	movff	find_volume@path+1,get_ldnumber@path+1
 18178   000036  EC6B  F03C         	call	_get_ldnumber	;wreg free
 18179   00003A  C060  F120         	movff	?_get_ldnumber,find_volume@vol
 18180   00003E  C061  F121         	movff	?_get_ldnumber+1,find_volume@vol+1
 18181   000042                     
 18182                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 18183   000042  0101               	movlb	1	; () banked
 18184   000044  BF21               	btfsc	(find_volume@vol+1)& (0+255),7,b
 18185   000046  EF29  F000         	goto	u20160
 18186   00004A  EF27  F000         	goto	u20161
 18187   00004E                     u20161:
 18188   00004E  EF2C  F000         	goto	l16505
 18189   000052                     u20160:
 18190   000052                     
 18191                           ; BSR set to: 1
 18192   000052  0E0B               	movlw	11
 18193   000054  EF68  F007         	goto	l1211
 18194   000058                     l16505:
 18195                           
 18196                           ; BSR set to: 1
 18197                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 18198   000058  90D8               	bcf	status,0,c
 18199   00005A  3520               	rlcf	find_volume@vol& (0+255),w,b
 18200   00005C  6ED9               	movwf	fsr2l,c
 18201   00005E  3521               	rlcf	(find_volume@vol+1)& (0+255),w,b
 18202   000060  6EDA               	movwf	fsr2h,c
 18203   000062  0EE2               	movlw	low _FatFs@ff$F2407
 18204   000064  26D9               	addwf	fsr2l,f,c
 18205   000066  0E01               	movlw	high _FatFs@ff$F2407
 18206   000068  22DA               	addwfc	fsr2h,f,c
 18207   00006A  006F FF78  F138    	movff	postinc2,find_volume@fs
 18208   000070  006F FF74  F139    	movff	postdec2,find_volume@fs+1
 18209   000076                     
 18210                           ; BSR set to: 1
 18211                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 18212   000076  5138               	movf	find_volume@fs& (0+255),w,b
 18213   000078  1139               	iorwf	(find_volume@fs+1)& (0+255),w,b
 18214   00007A  A4D8               	btfss	status,2,c
 18215   00007C  EF42  F000         	goto	u20171
 18216   000080  EF44  F000         	goto	u20170
 18217   000084                     u20171:
 18218   000084  EF47  F000         	goto	l16513
 18219   000088                     u20170:
 18220   000088                     
 18221                           ; BSR set to: 1
 18222   000088  0E0C               	movlw	12
 18223   00008A  EF68  F007         	goto	l1211
 18224   00008E                     l16513:
 18225                           
 18226                           ; BSR set to: 1
 18227                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 18228   00008E  0060  F373  FFD9   	movff	find_volume@rfs,fsr2l
 18229   000094  0060  F377  FFDA   	movff	find_volume@rfs+1,fsr2h
 18230   00009A  0060  F4E3  FFDE   	movff	find_volume@fs,postinc2
 18231   0000A0  0060  F4E7  FFDD   	movff	find_volume@fs+1,postdec2
 18232   0000A6                     
 18233                           ; BSR set to: 1
 18234                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 18235   0000A6  0100               	movlb	0	; () banked
 18236   0000A8  91DE               	bcf	find_volume@mode& (0+255),0,b
 18237   0000AA                     
 18238                           ; BSR set to: 0
 18239                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 18240   0000AA  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 18241   0000B0  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 18242   0000B6  50DF               	movf	indf2,w,c
 18243   0000B8  B4D8               	btfsc	status,2,c
 18244   0000BA  EF61  F000         	goto	u20181
 18245   0000BE  EF63  F000         	goto	u20180
 18246   0000C2                     u20181:
 18247   0000C2  EF8D  F000         	goto	l16535
 18248   0000C6                     u20180:
 18249   0000C6                     
 18250                           ; BSR set to: 0
 18251                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 18252   0000C6  0101               	movlb	1	; () banked
 18253   0000C8  EE20 F001          	lfsr	2,1
 18254   0000CC  5138               	movf	find_volume@fs& (0+255),w,b
 18255   0000CE  26D9               	addwf	fsr2l,f,c
 18256   0000D0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18257   0000D2  22DA               	addwfc	fsr2h,f,c
 18258   0000D4  50DF               	movf	indf2,w,c
 18259   0000D6  EC40  F04C         	call	_disk_status
 18260   0000DA  0101               	movlb	1	; () banked
 18261   0000DC  6F28               	movwf	find_volume@stat& (0+255),b
 18262   0000DE                     
 18263                           ; BSR set to: 1
 18264                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 18265   0000DE  B128               	btfsc	find_volume@stat& (0+255),0,b
 18266   0000E0  EF74  F000         	goto	u20191
 18267   0000E4  EF76  F000         	goto	u20190
 18268   0000E8                     u20191:
 18269   0000E8  EF8D  F000         	goto	l16535
 18270   0000EC                     u20190:
 18271   0000EC                     
 18272                           ; BSR set to: 1
 18273   0000EC  0100               	movlb	0	; () banked
 18274   0000EE  51DE               	movf	find_volume@mode& (0+255),w,b
 18275   0000F0  B4D8               	btfsc	status,2,c
 18276   0000F2  EF7D  F000         	goto	u20201
 18277   0000F6  EF7F  F000         	goto	u20200
 18278   0000FA                     u20201:
 18279   0000FA  EF8A  F000         	goto	l16531
 18280   0000FE                     u20200:
 18281   0000FE                     
 18282                           ; BSR set to: 0
 18283   0000FE  0101               	movlb	1	; () banked
 18284   000100  A528               	btfss	find_volume@stat& (0+255),2,b
 18285   000102  EF85  F000         	goto	u20211
 18286   000106  EF87  F000         	goto	u20210
 18287   00010A                     u20211:
 18288   00010A  EF8A  F000         	goto	l16531
 18289   00010E                     u20210:
 18290   00010E                     l16527:
 18291                           
 18292                           ; BSR set to: 1
 18293                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 18294   00010E  0E0A               	movlw	10
 18295   000110  EF68  F007         	goto	l1211
 18296   000114                     l16531:
 18297                           
 18298                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 18299   000114  0E00               	movlw	0
 18300   000116  EF68  F007         	goto	l1211
 18301   00011A                     l16535:
 18302                           
 18303                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 18304   00011A  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 18305   000120  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 18306   000126  6ADF               	clrf	indf2,c
 18307   000128                     
 18308                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 18309   000128  0101               	movlb	1	; () banked
 18310   00012A  EE20 F001          	lfsr	2,1
 18311   00012E  5138               	movf	find_volume@fs& (0+255),w,b
 18312   000130  26D9               	addwf	fsr2l,f,c
 18313   000132  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18314   000134  22DA               	addwfc	fsr2h,f,c
 18315   000136  0060  F483  FFDF   	movff	find_volume@vol,indf2
 18316   00013C                     
 18317                           ; BSR set to: 1
 18318                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 18319   00013C  EE20 F001          	lfsr	2,1
 18320   000140  5138               	movf	find_volume@fs& (0+255),w,b
 18321   000142  26D9               	addwf	fsr2l,f,c
 18322   000144  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18323   000146  22DA               	addwfc	fsr2h,f,c
 18324   000148  50DF               	movf	indf2,w,c
 18325   00014A  ECA7  F04F         	call	_disk_initialize
 18326   00014E  0101               	movlb	1	; () banked
 18327   000150  6F28               	movwf	find_volume@stat& (0+255),b
 18328   000152                     
 18329                           ; BSR set to: 1
 18330                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 18331   000152  A128               	btfss	find_volume@stat& (0+255),0,b
 18332   000154  EFAE  F000         	goto	u20221
 18333   000158  EFB0  F000         	goto	u20220
 18334   00015C                     u20221:
 18335   00015C  EFB3  F000         	goto	l16547
 18336   000160                     u20220:
 18337   000160                     
 18338                           ; BSR set to: 1
 18339                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 18340   000160  0E03               	movlw	3
 18341   000162  EF68  F007         	goto	l1211
 18342   000166                     l16547:
 18343                           
 18344                           ; BSR set to: 1
 18345   000166  0100               	movlb	0	; () banked
 18346   000168  51DE               	movf	find_volume@mode& (0+255),w,b
 18347   00016A  B4D8               	btfsc	status,2,c
 18348   00016C  EFBA  F000         	goto	u20231
 18349   000170  EFBC  F000         	goto	u20230
 18350   000174                     u20231:
 18351   000174  EFC6  F000         	goto	l16555
 18352   000178                     u20230:
 18353   000178                     
 18354                           ; BSR set to: 0
 18355   000178  0101               	movlb	1	; () banked
 18356   00017A  A528               	btfss	find_volume@stat& (0+255),2,b
 18357   00017C  EFC2  F000         	goto	u20241
 18358   000180  EFC4  F000         	goto	u20240
 18359   000184                     u20241:
 18360   000184  EFC6  F000         	goto	l16555
 18361   000188                     u20240:
 18362   000188  EF87  F000         	goto	l16527
 18363   00018C                     l16555:
 18364                           
 18365                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 18366   00018C  0E00               	movlw	0
 18367   00018E  0101               	movlb	1	; () banked
 18368   000190  6F31               	movwf	find_volume@bsect& (0+255),b
 18369   000192  0E00               	movlw	0
 18370   000194  6F32               	movwf	(find_volume@bsect+1)& (0+255),b
 18371   000196  0E00               	movlw	0
 18372   000198  6F33               	movwf	(find_volume@bsect+2)& (0+255),b
 18373   00019A  0E00               	movlw	0
 18374   00019C  6F34               	movwf	(find_volume@bsect+3)& (0+255),b
 18375   00019E                     
 18376                           ; BSR set to: 1
 18377                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 18378   00019E  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 18379   0001A2  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 18380   0001A6  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 18381   0001AA  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 18382   0001AE  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 18383   0001B2  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 18384   0001B6  ECDC  F03D         	call	_check_fs	;wreg free
 18385   0001BA  0101               	movlb	1	; () banked
 18386   0001BC  6F37               	movwf	find_volume@fmt& (0+255),b
 18387   0001BE                     
 18388                           ; BSR set to: 1
 18389                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 18390   0001BE  0E02               	movlw	2
 18391   0001C0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 18392   0001C2  B4D8               	btfsc	status,2,c
 18393   0001C4  EFE6  F000         	goto	u20251
 18394   0001C8  EFE8  F000         	goto	u20250
 18395   0001CC                     u20251:
 18396   0001CC  EFEA  F000         	goto	l16565
 18397   0001D0                     u20250:
 18398   0001D0  EFD7  F001         	goto	l16605
 18399   0001D4                     l16565:
 18400                           
 18401                           ; BSR set to: 1
 18402                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 18403   0001D4  0E00               	movlw	0
 18404   0001D6  6F36               	movwf	(find_volume@i+1)& (0+255),b
 18405   0001D8  0E00               	movlw	0
 18406   0001DA  6F35               	movwf	find_volume@i& (0+255),b
 18407   0001DC                     l16567:
 18408                           
 18409                           ; BSR set to: 1
 18410   0001DC  5136               	movf	(find_volume@i+1)& (0+255),w,b
 18411   0001DE  E109               	bnz	u20260
 18412   0001E0  0E04               	movlw	4
 18413   0001E2  5D35               	subwf	find_volume@i& (0+255),w,b
 18414   0001E4  A0D8               	btfss	status,0,c
 18415   0001E6  EFF7  F000         	goto	u20261
 18416   0001EA  EFF9  F000         	goto	u20260
 18417   0001EE                     u20261:
 18418   0001EE  EFFB  F000         	goto	l16571
 18419   0001F2                     u20260:
 18420   0001F2  EF6B  F001         	goto	l16585
 18421   0001F6                     l16571:
 18422                           
 18423                           ; BSR set to: 1
 18424                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 18425   0001F6  C135  F0DF         	movff	find_volume@i,??_find_volume
 18426   0001FA  C136  F0E0         	movff	find_volume@i+1,??_find_volume+1
 18427   0001FE  0100               	movlb	0	; () banked
 18428   000200  3BDF               	swapf	??_find_volume& (0+255),f,b
 18429   000202  3BE0               	swapf	(??_find_volume+1)& (0+255),f,b
 18430   000204  0EF0               	movlw	240
 18431   000206  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 18432   000208  51DF               	movf	??_find_volume& (0+255),w,b
 18433   00020A  0B0F               	andlw	15
 18434   00020C  13E0               	iorwf	(??_find_volume+1)& (0+255),f,b
 18435   00020E  0EF0               	movlw	240
 18436   000210  17DF               	andwf	??_find_volume& (0+255),f,b
 18437   000212  51DF               	movf	??_find_volume& (0+255),w,b
 18438   000214  0101               	movlb	1	; () banked
 18439   000216  2538               	addwf	find_volume@fs& (0+255),w,b
 18440   000218  0100               	movlb	0	; () banked
 18441   00021A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 18442   00021C  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 18443   00021E  0101               	movlb	1	; () banked
 18444   000220  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18445   000222  0100               	movlb	0	; () banked
 18446   000224  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 18447   000226  0EF1               	movlw	241
 18448   000228  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 18449   00022A  0101               	movlb	1	; () banked
 18450   00022C  6F1A               	movwf	find_volume@pt& (0+255),b
 18451   00022E  0E01               	movlw	1
 18452   000230  0100               	movlb	0	; () banked
 18453   000232  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 18454   000234  0101               	movlb	1	; () banked
 18455   000236  6F1B               	movwf	(find_volume@pt+1)& (0+255),b
 18456   000238                     
 18457                           ; BSR set to: 1
 18458                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 18459   000238  EE20 F004          	lfsr	2,4
 18460   00023C  511A               	movf	find_volume@pt& (0+255),w,b
 18461   00023E  26D9               	addwf	fsr2l,f,c
 18462   000240  511B               	movf	(find_volume@pt+1)& (0+255),w,b
 18463   000242  22DA               	addwfc	fsr2h,f,c
 18464   000244  50DF               	movf	indf2,w,c
 18465   000246  A4D8               	btfss	status,2,c
 18466   000248  EF28  F001         	goto	u20271
 18467   00024C  EF2A  F001         	goto	u20270
 18468   000250                     u20271:
 18469   000250  EF34  F001         	goto	l16577
 18470   000254                     u20270:
 18471   000254                     
 18472                           ; BSR set to: 1
 18473   000254  0E00               	movlw	0
 18474   000256  6F10               	movwf	_find_volume$3099& (0+255),b
 18475   000258  0E00               	movlw	0
 18476   00025A  6F11               	movwf	(_find_volume$3099+1)& (0+255),b
 18477   00025C  0E00               	movlw	0
 18478   00025E  6F12               	movwf	(_find_volume$3099+2)& (0+255),b
 18479   000260  0E00               	movlw	0
 18480   000262  6F13               	movwf	(_find_volume$3099+3)& (0+255),b
 18481   000264  EF47  F001         	goto	l16579
 18482   000268                     l16577:
 18483                           
 18484                           ; BSR set to: 1
 18485   000268  0E08               	movlw	8
 18486   00026A  251A               	addwf	find_volume@pt& (0+255),w,b
 18487   00026C  0100               	movlb	0	; () banked
 18488   00026E  6F60               	movwf	ld_dword@ptr& (0+255),b
 18489   000270  0E00               	movlw	0
 18490   000272  0101               	movlb	1	; () banked
 18491   000274  211B               	addwfc	(find_volume@pt+1)& (0+255),w,b
 18492   000276  0100               	movlb	0	; () banked
 18493   000278  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 18494   00027A  EC0F  F048         	call	_ld_dword	;wreg free
 18495   00027E  C060  F110         	movff	?_ld_dword,_find_volume$3099
 18496   000282  C061  F111         	movff	?_ld_dword+1,_find_volume$3099+1
 18497   000286  C062  F112         	movff	?_ld_dword+2,_find_volume$3099+2
 18498   00028A  C063  F113         	movff	?_ld_dword+3,_find_volume$3099+3
 18499   00028E                     l16579:
 18500   00028E  0E00               	movlw	low find_volume@br
 18501   000290  0100               	movlb	0	; () banked
 18502   000292  6FDF               	movwf	??_find_volume& (0+255),b
 18503   000294  0E01               	movlw	high find_volume@br
 18504   000296  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 18505   000298  90D8               	bcf	status,0,c
 18506   00029A  0101               	movlb	1	; () banked
 18507   00029C  3535               	rlcf	find_volume@i& (0+255),w,b
 18508   00029E  6ED9               	movwf	fsr2l,c
 18509   0002A0  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 18510   0002A2  6EDA               	movwf	fsr2h,c
 18511   0002A4  90D8               	bcf	status,0,c
 18512   0002A6  36D9               	rlcf	fsr2l,f,c
 18513   0002A8  36DA               	rlcf	fsr2h,f,c
 18514   0002AA  0100               	movlb	0	; () banked
 18515   0002AC  51DF               	movf	??_find_volume& (0+255),w,b
 18516   0002AE  26D9               	addwf	fsr2l,f,c
 18517   0002B0  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 18518   0002B2  22DA               	addwfc	fsr2h,f,c
 18519   0002B4  0060  F443  FFDE   	movff	_find_volume$3099,postinc2
 18520   0002BA  0060  F447  FFDE   	movff	_find_volume$3099+1,postinc2
 18521   0002C0  0060  F44B  FFDE   	movff	_find_volume$3099+2,postinc2
 18522   0002C6  0060  F44F  FFDE   	movff	_find_volume$3099+3,postinc2
 18523   0002CC                     
 18524                           ; BSR set to: 0
 18525                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 18526   0002CC  0101               	movlb	1	; () banked
 18527   0002CE  4B35               	infsnz	find_volume@i& (0+255),f,b
 18528   0002D0  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 18529   0002D2  EFEE  F000         	goto	l16567
 18530   0002D6                     l16585:
 18531                           
 18532                           ; BSR set to: 1
 18533                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 18534   0002D6  0E00               	movlw	0
 18535   0002D8  6F36               	movwf	(find_volume@i+1)& (0+255),b
 18536   0002DA  0E00               	movlw	0
 18537   0002DC  6F35               	movwf	find_volume@i& (0+255),b
 18538   0002DE                     
 18539                           ; BSR set to: 1
 18540                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 18541   0002DE  5135               	movf	find_volume@i& (0+255),w,b
 18542   0002E0  1136               	iorwf	(find_volume@i+1)& (0+255),w,b
 18543   0002E2  B4D8               	btfsc	status,2,c
 18544   0002E4  EF76  F001         	goto	u20281
 18545   0002E8  EF78  F001         	goto	u20280
 18546   0002EC                     u20281:
 18547   0002EC  EF7B  F001         	goto	l16591
 18548   0002F0                     u20280:
 18549   0002F0                     
 18550                           ; BSR set to: 1
 18551   0002F0  0735               	decf	find_volume@i& (0+255),f,b
 18552   0002F2  A0D8               	btfss	status,0,c
 18553   0002F4  0736               	decf	(find_volume@i+1)& (0+255),f,b
 18554   0002F6                     l16591:
 18555                           
 18556                           ; BSR set to: 1
 18557                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 18558   0002F6  0E00               	movlw	low find_volume@br
 18559   0002F8  0100               	movlb	0	; () banked
 18560   0002FA  6FDF               	movwf	??_find_volume& (0+255),b
 18561   0002FC  0E01               	movlw	high find_volume@br
 18562   0002FE  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 18563   000300  90D8               	bcf	status,0,c
 18564   000302  0101               	movlb	1	; () banked
 18565   000304  3535               	rlcf	find_volume@i& (0+255),w,b
 18566   000306  6ED9               	movwf	fsr2l,c
 18567   000308  3536               	rlcf	(find_volume@i+1)& (0+255),w,b
 18568   00030A  6EDA               	movwf	fsr2h,c
 18569   00030C  90D8               	bcf	status,0,c
 18570   00030E  36D9               	rlcf	fsr2l,f,c
 18571   000310  36DA               	rlcf	fsr2h,f,c
 18572   000312  0100               	movlb	0	; () banked
 18573   000314  51DF               	movf	??_find_volume& (0+255),w,b
 18574   000316  26D9               	addwf	fsr2l,f,c
 18575   000318  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 18576   00031A  22DA               	addwfc	fsr2h,f,c
 18577   00031C  006F FF78  F131    	movff	postinc2,find_volume@bsect
 18578   000322  006F FF78  F132    	movff	postinc2,find_volume@bsect+1
 18579   000328  006F FF78  F133    	movff	postinc2,find_volume@bsect+2
 18580   00032E  006F FF78  F134    	movff	postinc2,find_volume@bsect+3
 18581   000334                     
 18582                           ; BSR set to: 0
 18583                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 18584   000334  0101               	movlb	1	; () banked
 18585   000336  5131               	movf	find_volume@bsect& (0+255),w,b
 18586   000338  1132               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 18587   00033A  1133               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 18588   00033C  1134               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 18589   00033E  A4D8               	btfss	status,2,c
 18590   000340  EFA4  F001         	goto	u20291
 18591   000344  EFA6  F001         	goto	u20290
 18592   000348                     u20291:
 18593   000348  EFAC  F001         	goto	l16597
 18594   00034C                     u20290:
 18595   00034C                     
 18596                           ; BSR set to: 1
 18597   00034C  0E00               	movlw	0
 18598   00034E  6F15               	movwf	(_find_volume$3100+1)& (0+255),b
 18599   000350  0E03               	movlw	3
 18600   000352  6F14               	movwf	_find_volume$3100& (0+255),b
 18601   000354  EFC0  F001         	goto	l16599
 18602   000358                     l16597:
 18603                           
 18604                           ; BSR set to: 1
 18605   000358  C138  F0D3         	movff	find_volume@fs,check_fs@fs
 18606   00035C  C139  F0D4         	movff	find_volume@fs+1,check_fs@fs+1
 18607   000360  C131  F0D5         	movff	find_volume@bsect,check_fs@sect
 18608   000364  C132  F0D6         	movff	find_volume@bsect+1,check_fs@sect+1
 18609   000368  C133  F0D7         	movff	find_volume@bsect+2,check_fs@sect+2
 18610   00036C  C134  F0D8         	movff	find_volume@bsect+3,check_fs@sect+3
 18611   000370  ECDC  F03D         	call	_check_fs	;wreg free
 18612   000374  0100               	movlb	0	; () banked
 18613   000376  6FDF               	movwf	??_find_volume& (0+255),b
 18614   000378  51DF               	movf	??_find_volume& (0+255),w,b
 18615   00037A  0101               	movlb	1	; () banked
 18616   00037C  6F14               	movwf	_find_volume$3100& (0+255),b
 18617   00037E  6B15               	clrf	(_find_volume$3100+1)& (0+255),b
 18618   000380                     l16599:
 18619                           
 18620                           ; BSR set to: 1
 18621                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 18622   000380  C114  F137         	movff	_find_volume$3100,find_volume@fmt
 18623   000384                     
 18624                           ; BSR set to: 1
 18625   000384  0E01               	movlw	1
 18626   000386  6537               	cpfsgt	find_volume@fmt& (0+255),b
 18627   000388  EFC8  F001         	goto	u20301
 18628   00038C  EFCA  F001         	goto	u20300
 18629   000390                     u20301:
 18630   000390  EFD7  F001         	goto	l16605
 18631   000394                     u20300:
 18632   000394                     
 18633                           ; BSR set to: 1
 18634   000394  4B35               	infsnz	find_volume@i& (0+255),f,b
 18635   000396  2B36               	incf	(find_volume@i+1)& (0+255),f,b
 18636   000398  5136               	movf	(find_volume@i+1)& (0+255),w,b
 18637   00039A  E109               	bnz	u20310
 18638   00039C  0E04               	movlw	4
 18639   00039E  5D35               	subwf	find_volume@i& (0+255),w,b
 18640   0003A0  A0D8               	btfss	status,0,c
 18641   0003A2  EFD5  F001         	goto	u20311
 18642   0003A6  EFD7  F001         	goto	u20310
 18643   0003AA                     u20311:
 18644   0003AA  EF7B  F001         	goto	l16591
 18645   0003AE                     u20310:
 18646   0003AE                     l16605:
 18647                           
 18648                           ; BSR set to: 1
 18649                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 18650   0003AE  0E04               	movlw	4
 18651   0003B0  1937               	xorwf	find_volume@fmt& (0+255),w,b
 18652   0003B2  A4D8               	btfss	status,2,c
 18653   0003B4  EFDE  F001         	goto	u20321
 18654   0003B8  EFE0  F001         	goto	u20320
 18655   0003BC                     u20321:
 18656   0003BC  EFE3  F001         	goto	l16611
 18657   0003C0                     u20320:
 18658   0003C0                     
 18659                           ; BSR set to: 1
 18660   0003C0  0E01               	movlw	1
 18661   0003C2  EF68  F007         	goto	l1211
 18662   0003C6                     l16611:
 18663                           
 18664                           ; BSR set to: 1
 18665                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 18666   0003C6  0E01               	movlw	1
 18667   0003C8  6537               	cpfsgt	find_volume@fmt& (0+255),b
 18668   0003CA  EFE9  F001         	goto	u20331
 18669   0003CE  EFEB  F001         	goto	u20330
 18670   0003D2                     u20331:
 18671   0003D2  EFEE  F001         	goto	l16617
 18672   0003D6                     u20330:
 18673   0003D6                     l16613:
 18674   0003D6  0E0D               	movlw	13
 18675   0003D8  EF68  F007         	goto	l1211
 18676   0003DC                     l16617:
 18677                           
 18678                           ; BSR set to: 1
 18679                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 18680   0003DC  0E3E               	movlw	62
 18681   0003DE  2538               	addwf	find_volume@fs& (0+255),w,b
 18682   0003E0  0100               	movlb	0	; () banked
 18683   0003E2  6F60               	movwf	ld_word@ptr& (0+255),b
 18684   0003E4  0E00               	movlw	0
 18685   0003E6  0101               	movlb	1	; () banked
 18686   0003E8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18687   0003EA  0100               	movlb	0	; () banked
 18688   0003EC  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 18689   0003EE  EC0E  F050         	call	_ld_word	;wreg free
 18690   0003F2  0E02               	movlw	2
 18691   0003F4  0100               	movlb	0	; () banked
 18692   0003F6  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 18693   0003F8  1160               	iorwf	?_ld_word& (0+255),w,b
 18694   0003FA  B4D8               	btfsc	status,2,c
 18695   0003FC  EF02  F002         	goto	u20341
 18696   000400  EF04  F002         	goto	u20340
 18697   000404                     u20341:
 18698   000404  EF06  F002         	goto	l16623
 18699   000408                     u20340:
 18700   000408  EFEB  F001         	goto	l16613
 18701   00040C                     l16623:
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 18705   00040C  0E49               	movlw	73
 18706   00040E  0101               	movlb	1	; () banked
 18707   000410  2538               	addwf	find_volume@fs& (0+255),w,b
 18708   000412  0100               	movlb	0	; () banked
 18709   000414  6F60               	movwf	ld_word@ptr& (0+255),b
 18710   000416  0E00               	movlw	0
 18711   000418  0101               	movlb	1	; () banked
 18712   00041A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18713   00041C  0100               	movlb	0	; () banked
 18714   00041E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 18715   000420  EC0E  F050         	call	_ld_word	;wreg free
 18716   000424  0100               	movlb	0	; () banked
 18717   000426  C060  F12D         	movff	?_ld_word,find_volume@fasize
 18718   00042A  C061  F12E         	movff	?_ld_word+1,find_volume@fasize+1
 18719   00042E  0101               	movlb	1	; () banked
 18720   000430  6B2F               	clrf	(find_volume@fasize+2)& (0+255),b
 18721   000432  6B30               	clrf	(find_volume@fasize+3)& (0+255),b
 18722   000434                     
 18723                           ; BSR set to: 1
 18724                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 18725   000434  512D               	movf	find_volume@fasize& (0+255),w,b
 18726   000436  112E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 18727   000438  112F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 18728   00043A  1130               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 18729   00043C  A4D8               	btfss	status,2,c
 18730   00043E  EF23  F002         	goto	u20351
 18731   000442  EF25  F002         	goto	u20350
 18732   000446                     u20351:
 18733   000446  EF38  F002         	goto	l16629
 18734   00044A                     u20350:
 18735   00044A                     
 18736                           ; BSR set to: 1
 18737   00044A  0E57               	movlw	87
 18738   00044C  2538               	addwf	find_volume@fs& (0+255),w,b
 18739   00044E  0100               	movlb	0	; () banked
 18740   000450  6F60               	movwf	ld_dword@ptr& (0+255),b
 18741   000452  0E00               	movlw	0
 18742   000454  0101               	movlb	1	; () banked
 18743   000456  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18744   000458  0100               	movlb	0	; () banked
 18745   00045A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 18746   00045C  EC0F  F048         	call	_ld_dword	;wreg free
 18747   000460  C060  F12D         	movff	?_ld_dword,find_volume@fasize
 18748   000464  C061  F12E         	movff	?_ld_dword+1,find_volume@fasize+1
 18749   000468  C062  F12F         	movff	?_ld_dword+2,find_volume@fasize+2
 18750   00046C  C063  F130         	movff	?_ld_dword+3,find_volume@fasize+3
 18751   000470                     l16629:
 18752                           
 18753                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 18754   000470  0101               	movlb	1	; () banked
 18755   000472  EE20 F01B          	lfsr	2,27
 18756   000476  5138               	movf	find_volume@fs& (0+255),w,b
 18757   000478  26D9               	addwf	fsr2l,f,c
 18758   00047A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18759   00047C  22DA               	addwfc	fsr2h,f,c
 18760   00047E  0060  F4B7  FFDE   	movff	find_volume@fasize,postinc2
 18761   000484  0060  F4BB  FFDE   	movff	find_volume@fasize+1,postinc2
 18762   00048A  0060  F4BF  FFDE   	movff	find_volume@fasize+2,postinc2
 18763   000490  0060  F4C3  FFDE   	movff	find_volume@fasize+3,postinc2
 18764   000496                     
 18765                           ; BSR set to: 1
 18766                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 18767   000496  EE20 F043          	lfsr	2,67
 18768   00049A  5138               	movf	find_volume@fs& (0+255),w,b
 18769   00049C  26D9               	addwf	fsr2l,f,c
 18770   00049E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18771   0004A0  22DA               	addwfc	fsr2h,f,c
 18772   0004A2  EE10 F002          	lfsr	1,2
 18773   0004A6  5138               	movf	find_volume@fs& (0+255),w,b
 18774   0004A8  26E1               	addwf	fsr1l,f,c
 18775   0004AA  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18776   0004AC  22E2               	addwfc	fsr1h,f,c
 18777   0004AE  006F FF7F FFE7     	movff	indf2,indf1
 18778   0004B4                     
 18779                           ; BSR set to: 1
 18780                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 18781   0004B4  EE20 F002          	lfsr	2,2
 18782   0004B8  5138               	movf	find_volume@fs& (0+255),w,b
 18783   0004BA  26D9               	addwf	fsr2l,f,c
 18784   0004BC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18785   0004BE  22DA               	addwfc	fsr2h,f,c
 18786   0004C0  04DE               	decf	postinc2,w,c
 18787   0004C2  B4D8               	btfsc	status,2,c
 18788   0004C4  EF66  F002         	goto	u20361
 18789   0004C8  EF68  F002         	goto	u20360
 18790   0004CC                     u20361:
 18791   0004CC  EF79  F002         	goto	l16641
 18792   0004D0                     u20360:
 18793   0004D0                     
 18794                           ; BSR set to: 1
 18795   0004D0  EE20 F002          	lfsr	2,2
 18796   0004D4  5138               	movf	find_volume@fs& (0+255),w,b
 18797   0004D6  26D9               	addwf	fsr2l,f,c
 18798   0004D8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18799   0004DA  22DA               	addwfc	fsr2h,f,c
 18800   0004DC  0E02               	movlw	2
 18801   0004DE  18DE               	xorwf	postinc2,w,c
 18802   0004E0  B4D8               	btfsc	status,2,c
 18803   0004E2  EF75  F002         	goto	u20371
 18804   0004E6  EF77  F002         	goto	u20370
 18805   0004EA                     u20371:
 18806   0004EA  EF79  F002         	goto	l16641
 18807   0004EE                     u20370:
 18808   0004EE  EFEB  F001         	goto	l16613
 18809   0004F2                     l16641:
 18810                           
 18811                           ; BSR set to: 1
 18812                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 18813   0004F2  C12D  F060         	movff	find_volume@fasize,___lmul@multiplier
 18814   0004F6  C12E  F061         	movff	find_volume@fasize+1,___lmul@multiplier+1
 18815   0004FA  C12F  F062         	movff	find_volume@fasize+2,___lmul@multiplier+2
 18816   0004FE  C130  F063         	movff	find_volume@fasize+3,___lmul@multiplier+3
 18817   000502  EE20 F002          	lfsr	2,2
 18818   000506  5138               	movf	find_volume@fs& (0+255),w,b
 18819   000508  26D9               	addwf	fsr2l,f,c
 18820   00050A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18821   00050C  22DA               	addwfc	fsr2h,f,c
 18822   00050E  50DF               	movf	indf2,w,c
 18823   000510  0100               	movlb	0	; () banked
 18824   000512  6FDF               	movwf	??_find_volume& (0+255),b
 18825   000514  51DF               	movf	??_find_volume& (0+255),w,b
 18826   000516  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18827   000518  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18828   00051A  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18829   00051C  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18830   00051E  ECE7  F04C         	call	___lmul	;wreg free
 18831   000522  C060  F12D         	movff	?___lmul,find_volume@fasize
 18832   000526  C061  F12E         	movff	?___lmul+1,find_volume@fasize+1
 18833   00052A  C062  F12F         	movff	?___lmul+2,find_volume@fasize+2
 18834   00052E  C063  F130         	movff	?___lmul+3,find_volume@fasize+3
 18835   000532                     
 18836                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 18837   000532  0101               	movlb	1	; () banked
 18838   000534  EE20 F040          	lfsr	2,64
 18839   000538  5138               	movf	find_volume@fs& (0+255),w,b
 18840   00053A  26D9               	addwf	fsr2l,f,c
 18841   00053C  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18842   00053E  22DA               	addwfc	fsr2h,f,c
 18843   000540  50DF               	movf	indf2,w,c
 18844   000542  0100               	movlb	0	; () banked
 18845   000544  6FDF               	movwf	??_find_volume& (0+255),b
 18846   000546  6BE0               	clrf	(??_find_volume+1)& (0+255),b
 18847   000548  0101               	movlb	1	; () banked
 18848   00054A  EE20 F009          	lfsr	2,9
 18849   00054E  5138               	movf	find_volume@fs& (0+255),w,b
 18850   000550  26D9               	addwf	fsr2l,f,c
 18851   000552  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18852   000554  22DA               	addwfc	fsr2h,f,c
 18853   000556  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 18854   00055C  0060  F383  FFDD   	movff	??_find_volume+1,postdec2
 18855   000562                     
 18856                           ; BSR set to: 1
 18857                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 18858   000562  EE20 F009          	lfsr	2,9
 18859   000566  5138               	movf	find_volume@fs& (0+255),w,b
 18860   000568  26D9               	addwf	fsr2l,f,c
 18861   00056A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18862   00056C  22DA               	addwfc	fsr2h,f,c
 18863   00056E  50DE               	movf	postinc2,w,c
 18864   000570  10DE               	iorwf	postinc2,w,c
 18865   000572  B4D8               	btfsc	status,2,c
 18866   000574  EFBE  F002         	goto	u20381
 18867   000578  EFC0  F002         	goto	u20380
 18868   00057C                     u20381:
 18869   00057C  EFEB  F001         	goto	l16613
 18870   000580                     u20380:
 18871   000580                     
 18872                           ; BSR set to: 1
 18873   000580  EE20 F009          	lfsr	2,9
 18874   000584  5138               	movf	find_volume@fs& (0+255),w,b
 18875   000586  26D9               	addwf	fsr2l,f,c
 18876   000588  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18877   00058A  22DA               	addwfc	fsr2h,f,c
 18878   00058C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 18879   000592  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 18880   000598  EE20 F009          	lfsr	2,9
 18881   00059C  5138               	movf	find_volume@fs& (0+255),w,b
 18882   00059E  26D9               	addwf	fsr2l,f,c
 18883   0005A0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18884   0005A2  22DA               	addwfc	fsr2h,f,c
 18885   0005A4  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 18886   0005AA  006F FF74  F0E2    	movff	postdec2,??_find_volume+3
 18887   0005B0  0EFF               	movlw	255
 18888   0005B2  0100               	movlb	0	; () banked
 18889   0005B4  25E1               	addwf	(??_find_volume+2)& (0+255),w,b
 18890   0005B6  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 18891   0005B8  0EFF               	movlw	255
 18892   0005BA  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 18893   0005BC  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 18894   0005BE  51DF               	movf	??_find_volume& (0+255),w,b
 18895   0005C0  15E3               	andwf	(??_find_volume+4)& (0+255),w,b
 18896   0005C2  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 18897   0005C4  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 18898   0005C6  15E4               	andwf	(??_find_volume+5)& (0+255),w,b
 18899   0005C8  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 18900   0005CA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 18901   0005CC  11E6               	iorwf	(??_find_volume+7)& (0+255),w,b
 18902   0005CE  B4D8               	btfsc	status,2,c
 18903   0005D0  EFEC  F002         	goto	u20391
 18904   0005D4  EFEE  F002         	goto	u20390
 18905   0005D8                     u20391:
 18906   0005D8  EFF0  F002         	goto	l16653
 18907   0005DC                     u20390:
 18908   0005DC  EFEB  F001         	goto	l16613
 18909   0005E0                     l16653:
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 18913   0005E0  0E44               	movlw	68
 18914   0005E2  0101               	movlb	1	; () banked
 18915   0005E4  2538               	addwf	find_volume@fs& (0+255),w,b
 18916   0005E6  0100               	movlb	0	; () banked
 18917   0005E8  6F60               	movwf	ld_word@ptr& (0+255),b
 18918   0005EA  0E00               	movlw	0
 18919   0005EC  0101               	movlb	1	; () banked
 18920   0005EE  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18921   0005F0  0100               	movlb	0	; () banked
 18922   0005F2  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 18923   0005F4  EC0E  F050         	call	_ld_word	;wreg free
 18924   0005F8  0101               	movlb	1	; () banked
 18925   0005FA  EE20 F007          	lfsr	2,7
 18926   0005FE  5138               	movf	find_volume@fs& (0+255),w,b
 18927   000600  26D9               	addwf	fsr2l,f,c
 18928   000602  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18929   000604  22DA               	addwfc	fsr2h,f,c
 18930   000606  0100               	movlb	0	; () banked
 18931   000608  0060  F183  FFDE   	movff	?_ld_word,postinc2
 18932   00060E  0060  F187  FFDD   	movff	?_ld_word+1,postdec2
 18933   000614                     
 18934                           ; BSR set to: 0
 18935                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 18936   000614  0101               	movlb	1	; () banked
 18937   000616  EE20 F007          	lfsr	2,7
 18938   00061A  5138               	movf	find_volume@fs& (0+255),w,b
 18939   00061C  26D9               	addwf	fsr2l,f,c
 18940   00061E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 18941   000620  22DA               	addwfc	fsr2h,f,c
 18942   000622  006F FF78  F0DF    	movff	postinc2,??_find_volume
 18943   000628  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 18944   00062E  0E0F               	movlw	15
 18945   000630  0100               	movlb	0	; () banked
 18946   000632  17DF               	andwf	??_find_volume& (0+255),f,b
 18947   000634  0E00               	movlw	0
 18948   000636  17E0               	andwf	(??_find_volume+1)& (0+255),f,b
 18949   000638  51DF               	movf	??_find_volume& (0+255),w,b
 18950   00063A  11E0               	iorwf	(??_find_volume+1)& (0+255),w,b
 18951   00063C  B4D8               	btfsc	status,2,c
 18952   00063E  EF23  F003         	goto	u20401
 18953   000642  EF25  F003         	goto	u20400
 18954   000646                     u20401:
 18955   000646  EF27  F003         	goto	l16661
 18956   00064A                     u20400:
 18957   00064A  EFEB  F001         	goto	l16613
 18958   00064E                     l16661:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 18962   00064E  0E46               	movlw	70
 18963   000650  0101               	movlb	1	; () banked
 18964   000652  2538               	addwf	find_volume@fs& (0+255),w,b
 18965   000654  0100               	movlb	0	; () banked
 18966   000656  6F60               	movwf	ld_word@ptr& (0+255),b
 18967   000658  0E00               	movlw	0
 18968   00065A  0101               	movlb	1	; () banked
 18969   00065C  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 18970   00065E  0100               	movlb	0	; () banked
 18971   000660  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 18972   000662  EC0E  F050         	call	_ld_word	;wreg free
 18973   000666  0100               	movlb	0	; () banked
 18974   000668  C060  F124         	movff	?_ld_word,find_volume@tsect
 18975   00066C  C061  F125         	movff	?_ld_word+1,find_volume@tsect+1
 18976   000670  0101               	movlb	1	; () banked
 18977   000672  6B26               	clrf	(find_volume@tsect+2)& (0+255),b
 18978   000674  6B27               	clrf	(find_volume@tsect+3)& (0+255),b
 18979   000676                     
 18980                           ; BSR set to: 1
 18981                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 18982   000676  5124               	movf	find_volume@tsect& (0+255),w,b
 18983   000678  1125               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 18984   00067A  1126               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 18985   00067C  1127               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 18986   00067E  A4D8               	btfss	status,2,c
 18987   000680  EF44  F003         	goto	u20411
 18988   000684  EF46  F003         	goto	u20410
 18989   000688                     u20411:
 18990   000688  EF59  F003         	goto	l1245
 18991   00068C                     u20410:
 18992   00068C                     
 18993                           ; BSR set to: 1
 18994   00068C  0E53               	movlw	83
 18995   00068E  2538               	addwf	find_volume@fs& (0+255),w,b
 18996   000690  0100               	movlb	0	; () banked
 18997   000692  6F60               	movwf	ld_dword@ptr& (0+255),b
 18998   000694  0E00               	movlw	0
 18999   000696  0101               	movlb	1	; () banked
 19000   000698  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19001   00069A  0100               	movlb	0	; () banked
 19002   00069C  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19003   00069E  EC0F  F048         	call	_ld_dword	;wreg free
 19004   0006A2  C060  F124         	movff	?_ld_dword,find_volume@tsect
 19005   0006A6  C061  F125         	movff	?_ld_dword+1,find_volume@tsect+1
 19006   0006AA  C062  F126         	movff	?_ld_dword+2,find_volume@tsect+2
 19007   0006AE  C063  F127         	movff	?_ld_dword+3,find_volume@tsect+3
 19008   0006B2                     l1245:
 19009                           
 19010                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 19011   0006B2  0E41               	movlw	65
 19012   0006B4  0101               	movlb	1	; () banked
 19013   0006B6  2538               	addwf	find_volume@fs& (0+255),w,b
 19014   0006B8  0100               	movlb	0	; () banked
 19015   0006BA  6F60               	movwf	ld_word@ptr& (0+255),b
 19016   0006BC  0E00               	movlw	0
 19017   0006BE  0101               	movlb	1	; () banked
 19018   0006C0  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19019   0006C2  0100               	movlb	0	; () banked
 19020   0006C4  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19021   0006C6  EC0E  F050         	call	_ld_word	;wreg free
 19022   0006CA  C060  F122         	movff	?_ld_word,find_volume@nrsv
 19023   0006CE  C061  F123         	movff	?_ld_word+1,find_volume@nrsv+1
 19024   0006D2                     
 19025                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 19026   0006D2  0101               	movlb	1	; () banked
 19027   0006D4  5122               	movf	find_volume@nrsv& (0+255),w,b
 19028   0006D6  1123               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 19029   0006D8  A4D8               	btfss	status,2,c
 19030   0006DA  EF71  F003         	goto	u20421
 19031   0006DE  EF73  F003         	goto	u20420
 19032   0006E2                     u20421:
 19033   0006E2  EF75  F003         	goto	l16673
 19034   0006E6                     u20420:
 19035   0006E6  EFEB  F001         	goto	l16613
 19036   0006EA                     l16673:
 19037                           
 19038                           ; BSR set to: 1
 19039                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 19040   0006EA  EE20 F007          	lfsr	2,7
 19041   0006EE  5138               	movf	find_volume@fs& (0+255),w,b
 19042   0006F0  26D9               	addwf	fsr2l,f,c
 19043   0006F2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19044   0006F4  22DA               	addwfc	fsr2h,f,c
 19045   0006F6  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19046   0006FC  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19047   000702  0E04               	movlw	4
 19048   000704  0100               	movlb	0	; () banked
 19049   000706  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19050   000708                     u20435:
 19051   000708  90D8               	bcf	status,0,c
 19052   00070A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 19053   00070C  33DF               	rrcf	??_find_volume& (0+255),f,b
 19054   00070E  2FE1               	decfsz	(??_find_volume+2)& (0+255),f,b
 19055   000710  EF84  F003         	goto	u20435
 19056   000714  0101               	movlb	1	; () banked
 19057   000716  5122               	movf	find_volume@nrsv& (0+255),w,b
 19058   000718  0100               	movlb	0	; () banked
 19059   00071A  25DF               	addwf	??_find_volume& (0+255),w,b
 19060   00071C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19061   00071E  0101               	movlb	1	; () banked
 19062   000720  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 19063   000722  0100               	movlb	0	; () banked
 19064   000724  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 19065   000726  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 19066   000728  6BE4               	clrf	(??_find_volume+5)& (0+255),b
 19067   00072A  B0D8               	btfsc	status,0,c
 19068   00072C  2BE4               	incf	(??_find_volume+5)& (0+255),f,b
 19069   00072E  6BE5               	clrf	(??_find_volume+6)& (0+255),b
 19070   000730  0101               	movlb	1	; () banked
 19071   000732  512D               	movf	find_volume@fasize& (0+255),w,b
 19072   000734  0100               	movlb	0	; () banked
 19073   000736  25E2               	addwf	(??_find_volume+3)& (0+255),w,b
 19074   000738  0101               	movlb	1	; () banked
 19075   00073A  6F1C               	movwf	find_volume@sysect& (0+255),b
 19076   00073C  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 19077   00073E  0100               	movlb	0	; () banked
 19078   000740  21E3               	addwfc	(??_find_volume+4)& (0+255),w,b
 19079   000742  0101               	movlb	1	; () banked
 19080   000744  6F1D               	movwf	(find_volume@sysect+1)& (0+255),b
 19081   000746  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 19082   000748  0100               	movlb	0	; () banked
 19083   00074A  21E4               	addwfc	(??_find_volume+5)& (0+255),w,b
 19084   00074C  0101               	movlb	1	; () banked
 19085   00074E  6F1E               	movwf	(find_volume@sysect+2)& (0+255),b
 19086   000750  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 19087   000752  0100               	movlb	0	; () banked
 19088   000754  21E5               	addwfc	(??_find_volume+6)& (0+255),w,b
 19089   000756  0101               	movlb	1	; () banked
 19090   000758  6F1F               	movwf	(find_volume@sysect+3)& (0+255),b
 19091   00075A                     
 19092                           ; BSR set to: 1
 19093                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 19094   00075A  511C               	movf	find_volume@sysect& (0+255),w,b
 19095   00075C  5D24               	subwf	find_volume@tsect& (0+255),w,b
 19096   00075E  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19097   000760  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 19098   000762  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19099   000764  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 19100   000766  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19101   000768  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 19102   00076A  B0D8               	btfsc	status,0,c
 19103   00076C  EFBA  F003         	goto	u20441
 19104   000770  EFBC  F003         	goto	u20440
 19105   000774                     u20441:
 19106   000774  EFBE  F003         	goto	l16681
 19107   000778                     u20440:
 19108   000778  EFEB  F001         	goto	l16613
 19109   00077C                     l16681:
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 19113   00077C  511C               	movf	find_volume@sysect& (0+255),w,b
 19114   00077E  5D24               	subwf	find_volume@tsect& (0+255),w,b
 19115   000780  0100               	movlb	0	; () banked
 19116   000782  6F60               	movwf	___lldiv@dividend& (0+255),b
 19117   000784  0101               	movlb	1	; () banked
 19118   000786  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19119   000788  5925               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 19120   00078A  0100               	movlb	0	; () banked
 19121   00078C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 19122   00078E  0101               	movlb	1	; () banked
 19123   000790  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19124   000792  5926               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 19125   000794  0100               	movlb	0	; () banked
 19126   000796  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 19127   000798  0101               	movlb	1	; () banked
 19128   00079A  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19129   00079C  5927               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 19130   00079E  0100               	movlb	0	; () banked
 19131   0007A0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 19132   0007A2  0101               	movlb	1	; () banked
 19133   0007A4  EE20 F009          	lfsr	2,9
 19134   0007A8  5138               	movf	find_volume@fs& (0+255),w,b
 19135   0007AA  26D9               	addwf	fsr2l,f,c
 19136   0007AC  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19137   0007AE  22DA               	addwfc	fsr2h,f,c
 19138   0007B0  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19139   0007B6  006F FF74  F0E0    	movff	postdec2,??_find_volume+1
 19140   0007BC  C0DF  F064         	movff	??_find_volume,___lldiv@divisor
 19141   0007C0  C0E0  F065         	movff	??_find_volume+1,___lldiv@divisor+1
 19142   0007C4  0100               	movlb	0	; () banked
 19143   0007C6  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 19144   0007C8  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 19145   0007CA  EC1A  F049         	call	___lldiv	;wreg free
 19146   0007CE  C060  F129         	movff	?___lldiv,find_volume@nclst
 19147   0007D2  C061  F12A         	movff	?___lldiv+1,find_volume@nclst+1
 19148   0007D6  C062  F12B         	movff	?___lldiv+2,find_volume@nclst+2
 19149   0007DA  C063  F12C         	movff	?___lldiv+3,find_volume@nclst+3
 19150   0007DE                     
 19151                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 19152   0007DE  0101               	movlb	1	; () banked
 19153   0007E0  5129               	movf	find_volume@nclst& (0+255),w,b
 19154   0007E2  112A               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 19155   0007E4  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19156   0007E6  112C               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 19157   0007E8  A4D8               	btfss	status,2,c
 19158   0007EA  EFF9  F003         	goto	u20451
 19159   0007EE  EFFB  F003         	goto	u20450
 19160   0007F2                     u20451:
 19161   0007F2  EFFD  F003         	goto	l16689
 19162   0007F6                     u20450:
 19163   0007F6  EFEB  F001         	goto	l16613
 19164   0007FA                     l16689:
 19165                           
 19166                           ; BSR set to: 1
 19167                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 19168   0007FA  0E00               	movlw	0
 19169   0007FC  6F37               	movwf	find_volume@fmt& (0+255),b
 19170   0007FE                     
 19171                           ; BSR set to: 1
 19172                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 19173   0007FE  0EF6               	movlw	246
 19174   000800  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19175   000802  0EFF               	movlw	255
 19176   000804  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19177   000806  0EFF               	movlw	255
 19178   000808  592B               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 19179   00080A  0E0F               	movlw	15
 19180   00080C  592C               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 19181   00080E  B0D8               	btfsc	status,0,c
 19182   000810  EF0C  F004         	goto	u20461
 19183   000814  EF0E  F004         	goto	u20460
 19184   000818                     u20461:
 19185   000818  EF10  F004         	goto	l16695
 19186   00081C                     u20460:
 19187   00081C                     
 19188                           ; BSR set to: 1
 19189   00081C  0E03               	movlw	3
 19190   00081E  6F37               	movwf	find_volume@fmt& (0+255),b
 19191   000820                     l16695:
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 19195   000820  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 19196   000822  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19197   000824  E109               	bnz	u20471
 19198   000826  0EF6               	movlw	246
 19199   000828  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19200   00082A  0EFF               	movlw	255
 19201   00082C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19202   00082E  B0D8               	btfsc	status,0,c
 19203   000830  EF1C  F004         	goto	u20471
 19204   000834  EF1E  F004         	goto	u20470
 19205   000838                     u20471:
 19206   000838  EF20  F004         	goto	l16699
 19207   00083C                     u20470:
 19208   00083C                     
 19209                           ; BSR set to: 1
 19210   00083C  0E02               	movlw	2
 19211   00083E  6F37               	movwf	find_volume@fmt& (0+255),b
 19212   000840                     l16699:
 19213                           
 19214                           ; BSR set to: 1
 19215                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 19216   000840  512C               	movf	(find_volume@nclst+3)& (0+255),w,b
 19217   000842  112B               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 19218   000844  E109               	bnz	u20481
 19219   000846  0EF6               	movlw	246
 19220   000848  5D29               	subwf	find_volume@nclst& (0+255),w,b
 19221   00084A  0E0F               	movlw	15
 19222   00084C  592A               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 19223   00084E  B0D8               	btfsc	status,0,c
 19224   000850  EF2C  F004         	goto	u20481
 19225   000854  EF2E  F004         	goto	u20480
 19226   000858                     u20481:
 19227   000858  EF30  F004         	goto	l1251
 19228   00085C                     u20480:
 19229   00085C                     
 19230                           ; BSR set to: 1
 19231   00085C  0E01               	movlw	1
 19232   00085E  6F37               	movwf	find_volume@fmt& (0+255),b
 19233   000860                     l1251:
 19234                           
 19235                           ; BSR set to: 1
 19236                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 19237   000860  5137               	movf	find_volume@fmt& (0+255),w,b
 19238   000862  A4D8               	btfss	status,2,c
 19239   000864  EF36  F004         	goto	u20491
 19240   000868  EF38  F004         	goto	u20490
 19241   00086C                     u20491:
 19242   00086C  EF3A  F004         	goto	l16707
 19243   000870                     u20490:
 19244   000870  EFEB  F001         	goto	l16613
 19245   000874                     l16707:
 19246                           
 19247                           ; BSR set to: 1
 19248                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 19249   000874  0E02               	movlw	2
 19250   000876  2529               	addwf	find_volume@nclst& (0+255),w,b
 19251   000878  0100               	movlb	0	; () banked
 19252   00087A  6FDF               	movwf	??_find_volume& (0+255),b
 19253   00087C  0E00               	movlw	0
 19254   00087E  0101               	movlb	1	; () banked
 19255   000880  212A               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 19256   000882  0100               	movlb	0	; () banked
 19257   000884  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19258   000886  0E00               	movlw	0
 19259   000888  0101               	movlb	1	; () banked
 19260   00088A  212B               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 19261   00088C  0100               	movlb	0	; () banked
 19262   00088E  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19263   000890  0E00               	movlw	0
 19264   000892  0101               	movlb	1	; () banked
 19265   000894  212C               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 19266   000896  0100               	movlb	0	; () banked
 19267   000898  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19268   00089A  0101               	movlb	1	; () banked
 19269   00089C  EE20 F017          	lfsr	2,23
 19270   0008A0  5138               	movf	find_volume@fs& (0+255),w,b
 19271   0008A2  26D9               	addwf	fsr2l,f,c
 19272   0008A4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19273   0008A6  22DA               	addwfc	fsr2h,f,c
 19274   0008A8  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19275   0008AE  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19276   0008B4  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19277   0008BA  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19278                           
 19279                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 19280   0008C0  EE20 F01F          	lfsr	2,31
 19281   0008C4  5138               	movf	find_volume@fs& (0+255),w,b
 19282   0008C6  26D9               	addwf	fsr2l,f,c
 19283   0008C8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19284   0008CA  22DA               	addwfc	fsr2h,f,c
 19285   0008CC  0060  F4C7  FFDE   	movff	find_volume@bsect,postinc2
 19286   0008D2  0060  F4CB  FFDE   	movff	find_volume@bsect+1,postinc2
 19287   0008D8  0060  F4CF  FFDE   	movff	find_volume@bsect+2,postinc2
 19288   0008DE  0060  F4D3  FFDE   	movff	find_volume@bsect+3,postinc2
 19289                           
 19290                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 19291   0008E4  5122               	movf	find_volume@nrsv& (0+255),w,b
 19292   0008E6  2531               	addwf	find_volume@bsect& (0+255),w,b
 19293   0008E8  0100               	movlb	0	; () banked
 19294   0008EA  6FDF               	movwf	??_find_volume& (0+255),b
 19295   0008EC  0101               	movlb	1	; () banked
 19296   0008EE  5123               	movf	(find_volume@nrsv+1)& (0+255),w,b
 19297   0008F0  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 19298   0008F2  0100               	movlb	0	; () banked
 19299   0008F4  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19300   0008F6  0E00               	movlw	0
 19301   0008F8  0101               	movlb	1	; () banked
 19302   0008FA  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 19303   0008FC  0100               	movlb	0	; () banked
 19304   0008FE  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19305   000900  0E00               	movlw	0
 19306   000902  0101               	movlb	1	; () banked
 19307   000904  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 19308   000906  0100               	movlb	0	; () banked
 19309   000908  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19310   00090A  0101               	movlb	1	; () banked
 19311   00090C  EE20 F023          	lfsr	2,35
 19312   000910  5138               	movf	find_volume@fs& (0+255),w,b
 19313   000912  26D9               	addwf	fsr2l,f,c
 19314   000914  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19315   000916  22DA               	addwfc	fsr2h,f,c
 19316   000918  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19317   00091E  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19318   000924  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19319   00092A  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19320                           
 19321                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 19322   000930  511C               	movf	find_volume@sysect& (0+255),w,b
 19323   000932  2531               	addwf	find_volume@bsect& (0+255),w,b
 19324   000934  0100               	movlb	0	; () banked
 19325   000936  6FDF               	movwf	??_find_volume& (0+255),b
 19326   000938  0101               	movlb	1	; () banked
 19327   00093A  511D               	movf	(find_volume@sysect+1)& (0+255),w,b
 19328   00093C  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 19329   00093E  0100               	movlb	0	; () banked
 19330   000940  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19331   000942  0101               	movlb	1	; () banked
 19332   000944  511E               	movf	(find_volume@sysect+2)& (0+255),w,b
 19333   000946  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 19334   000948  0100               	movlb	0	; () banked
 19335   00094A  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19336   00094C  0101               	movlb	1	; () banked
 19337   00094E  511F               	movf	(find_volume@sysect+3)& (0+255),w,b
 19338   000950  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 19339   000952  0100               	movlb	0	; () banked
 19340   000954  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19341   000956  0101               	movlb	1	; () banked
 19342   000958  EE20 F02B          	lfsr	2,43
 19343   00095C  5138               	movf	find_volume@fs& (0+255),w,b
 19344   00095E  26D9               	addwf	fsr2l,f,c
 19345   000960  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19346   000962  22DA               	addwfc	fsr2h,f,c
 19347   000964  0060  F37F  FFDE   	movff	??_find_volume,postinc2
 19348   00096A  0060  F383  FFDE   	movff	??_find_volume+1,postinc2
 19349   000970  0060  F387  FFDE   	movff	??_find_volume+2,postinc2
 19350   000976  0060  F38B  FFDE   	movff	??_find_volume+3,postinc2
 19351   00097C                     
 19352                           ; BSR set to: 1
 19353                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 19354   00097C  0E03               	movlw	3
 19355   00097E  1937               	xorwf	find_volume@fmt& (0+255),w,b
 19356   000980  A4D8               	btfss	status,2,c
 19357   000982  EFC5  F004         	goto	u20501
 19358   000986  EFC7  F004         	goto	u20500
 19359   00098A                     u20501:
 19360   00098A  EF36  F005         	goto	l16727
 19361   00098E                     u20500:
 19362   00098E                     
 19363                           ; BSR set to: 1
 19364                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 19365   00098E  0E5D               	movlw	93
 19366   000990  2538               	addwf	find_volume@fs& (0+255),w,b
 19367   000992  0100               	movlb	0	; () banked
 19368   000994  6F60               	movwf	ld_word@ptr& (0+255),b
 19369   000996  0E00               	movlw	0
 19370   000998  0101               	movlb	1	; () banked
 19371   00099A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19372   00099C  0100               	movlb	0	; () banked
 19373   00099E  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19374   0009A0  EC0E  F050         	call	_ld_word	;wreg free
 19375   0009A4  0100               	movlb	0	; () banked
 19376   0009A6  5160               	movf	?_ld_word& (0+255),w,b
 19377   0009A8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 19378   0009AA  B4D8               	btfsc	status,2,c
 19379   0009AC  EFDA  F004         	goto	u20511
 19380   0009B0  EFDC  F004         	goto	u20510
 19381   0009B4                     u20511:
 19382   0009B4  EFDE  F004         	goto	l16717
 19383   0009B8                     u20510:
 19384   0009B8  EFEB  F001         	goto	l16613
 19385   0009BC                     l16717:
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 19389   0009BC  0101               	movlb	1	; () banked
 19390   0009BE  EE20 F007          	lfsr	2,7
 19391   0009C2  5138               	movf	find_volume@fs& (0+255),w,b
 19392   0009C4  26D9               	addwf	fsr2l,f,c
 19393   0009C6  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19394   0009C8  22DA               	addwfc	fsr2h,f,c
 19395   0009CA  50DE               	movf	postinc2,w,c
 19396   0009CC  10DE               	iorwf	postinc2,w,c
 19397   0009CE  B4D8               	btfsc	status,2,c
 19398   0009D0  EFEC  F004         	goto	u20521
 19399   0009D4  EFEE  F004         	goto	u20520
 19400   0009D8                     u20521:
 19401   0009D8  EFF0  F004         	goto	l16723
 19402   0009DC                     u20520:
 19403   0009DC  EFEB  F001         	goto	l16613
 19404   0009E0                     l16723:
 19405                           
 19406                           ; BSR set to: 1
 19407                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 19408   0009E0  0E5F               	movlw	95
 19409   0009E2  2538               	addwf	find_volume@fs& (0+255),w,b
 19410   0009E4  0100               	movlb	0	; () banked
 19411   0009E6  6F60               	movwf	ld_dword@ptr& (0+255),b
 19412   0009E8  0E00               	movlw	0
 19413   0009EA  0101               	movlb	1	; () banked
 19414   0009EC  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19415   0009EE  0100               	movlb	0	; () banked
 19416   0009F0  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19417   0009F2  EC0F  F048         	call	_ld_dword	;wreg free
 19418   0009F6  0101               	movlb	1	; () banked
 19419   0009F8  EE20 F027          	lfsr	2,39
 19420   0009FC  5138               	movf	find_volume@fs& (0+255),w,b
 19421   0009FE  26D9               	addwf	fsr2l,f,c
 19422   000A00  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19423   000A02  22DA               	addwfc	fsr2h,f,c
 19424   000A04  0100               	movlb	0	; () banked
 19425   000A06  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 19426   000A0C  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 19427   000A12  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 19428   000A18  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 19429   000A1E                     
 19430                           ; BSR set to: 0
 19431                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 19432   000A1E  0101               	movlb	1	; () banked
 19433   000A20  EE20 F017          	lfsr	2,23
 19434   000A24  5138               	movf	find_volume@fs& (0+255),w,b
 19435   000A26  26D9               	addwf	fsr2l,f,c
 19436   000A28  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19437   000A2A  22DA               	addwfc	fsr2h,f,c
 19438   000A2C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19439   000A32  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 19440   000A38  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19441   000A3E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 19442   000A44  0E02               	movlw	2
 19443   000A46                     u20535:
 19444   000A46  90D8               	bcf	status,0,c
 19445   000A48  0100               	movlb	0	; () banked
 19446   000A4A  37DF               	rlcf	??_find_volume& (0+255),f,b
 19447   000A4C  37E0               	rlcf	(??_find_volume+1)& (0+255),f,b
 19448   000A4E  37E1               	rlcf	(??_find_volume+2)& (0+255),f,b
 19449   000A50  37E2               	rlcf	(??_find_volume+3)& (0+255),f,b
 19450   000A52  2EE8               	decfsz	wreg,f,c
 19451   000A54  EF23  F005         	goto	u20535
 19452   000A58  C0DF  F116         	movff	??_find_volume,find_volume@szbfat
 19453   000A5C  C0E0  F117         	movff	??_find_volume+1,find_volume@szbfat+1
 19454   000A60  C0E1  F118         	movff	??_find_volume+2,find_volume@szbfat+2
 19455   000A64  C0E2  F119         	movff	??_find_volume+3,find_volume@szbfat+3
 19456                           
 19457                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 19458   000A68  EF03  F006         	goto	l1256
 19459   000A6C                     l16727:
 19460                           
 19461                           ; BSR set to: 1
 19462                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 19463   000A6C  EE20 F007          	lfsr	2,7
 19464   000A70  5138               	movf	find_volume@fs& (0+255),w,b
 19465   000A72  26D9               	addwf	fsr2l,f,c
 19466   000A74  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19467   000A76  22DA               	addwfc	fsr2h,f,c
 19468   000A78  50DE               	movf	postinc2,w,c
 19469   000A7A  10DE               	iorwf	postinc2,w,c
 19470   000A7C  A4D8               	btfss	status,2,c
 19471   000A7E  EF43  F005         	goto	u20541
 19472   000A82  EF45  F005         	goto	u20540
 19473   000A86                     u20541:
 19474   000A86  EF47  F005         	goto	l16733
 19475   000A8A                     u20540:
 19476   000A8A  EFEB  F001         	goto	l16613
 19477   000A8E                     l16733:
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 19481   000A8E  EE20 F023          	lfsr	2,35
 19482   000A92  5138               	movf	find_volume@fs& (0+255),w,b
 19483   000A94  26D9               	addwf	fsr2l,f,c
 19484   000A96  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19485   000A98  22DA               	addwfc	fsr2h,f,c
 19486   000A9A  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19487   000AA0  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 19488   000AA6  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19489   000AAC  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 19490   000AB2  512D               	movf	find_volume@fasize& (0+255),w,b
 19491   000AB4  0100               	movlb	0	; () banked
 19492   000AB6  25DF               	addwf	??_find_volume& (0+255),w,b
 19493   000AB8  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 19494   000ABA  0101               	movlb	1	; () banked
 19495   000ABC  512E               	movf	(find_volume@fasize+1)& (0+255),w,b
 19496   000ABE  0100               	movlb	0	; () banked
 19497   000AC0  21E0               	addwfc	(??_find_volume+1)& (0+255),w,b
 19498   000AC2  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 19499   000AC4  0101               	movlb	1	; () banked
 19500   000AC6  512F               	movf	(find_volume@fasize+2)& (0+255),w,b
 19501   000AC8  0100               	movlb	0	; () banked
 19502   000ACA  21E1               	addwfc	(??_find_volume+2)& (0+255),w,b
 19503   000ACC  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 19504   000ACE  0101               	movlb	1	; () banked
 19505   000AD0  5130               	movf	(find_volume@fasize+3)& (0+255),w,b
 19506   000AD2  0100               	movlb	0	; () banked
 19507   000AD4  21E2               	addwfc	(??_find_volume+3)& (0+255),w,b
 19508   000AD6  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 19509   000AD8  0101               	movlb	1	; () banked
 19510   000ADA  EE20 F027          	lfsr	2,39
 19511   000ADE  5138               	movf	find_volume@fs& (0+255),w,b
 19512   000AE0  26D9               	addwf	fsr2l,f,c
 19513   000AE2  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19514   000AE4  22DA               	addwfc	fsr2h,f,c
 19515   000AE6  0060  F38F  FFDE   	movff	??_find_volume+4,postinc2
 19516   000AEC  0060  F393  FFDE   	movff	??_find_volume+5,postinc2
 19517   000AF2  0060  F397  FFDE   	movff	??_find_volume+6,postinc2
 19518   000AF8  0060  F39B  FFDE   	movff	??_find_volume+7,postinc2
 19519   000AFE                     
 19520                           ; BSR set to: 1
 19521                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 19522   000AFE  0E02               	movlw	2
 19523   000B00  1937               	xorwf	find_volume@fmt& (0+255),w,b
 19524   000B02  B4D8               	btfsc	status,2,c
 19525   000B04  EF86  F005         	goto	u20551
 19526   000B08  EF88  F005         	goto	u20550
 19527   000B0C                     u20551:
 19528   000B0C  EFE0  F005         	goto	l16739
 19529   000B10                     u20550:
 19530   000B10                     
 19531                           ; BSR set to: 1
 19532   000B10  EE20 F017          	lfsr	2,23
 19533   000B14  5138               	movf	find_volume@fs& (0+255),w,b
 19534   000B16  26D9               	addwf	fsr2l,f,c
 19535   000B18  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19536   000B1A  22DA               	addwfc	fsr2h,f,c
 19537   000B1C  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19538   000B22  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 19539   000B28  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19540   000B2E  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 19541   000B34  0E01               	movlw	1
 19542   000B36  0100               	movlb	0	; () banked
 19543   000B38  15DF               	andwf	??_find_volume& (0+255),w,b
 19544   000B3A  6FE3               	movwf	(??_find_volume+4)& (0+255),b
 19545   000B3C  0E00               	movlw	0
 19546   000B3E  15E0               	andwf	(??_find_volume+1)& (0+255),w,b
 19547   000B40  6FE4               	movwf	(??_find_volume+5)& (0+255),b
 19548   000B42  0E00               	movlw	0
 19549   000B44  15E1               	andwf	(??_find_volume+2)& (0+255),w,b
 19550   000B46  6FE5               	movwf	(??_find_volume+6)& (0+255),b
 19551   000B48  0E00               	movlw	0
 19552   000B4A  15E2               	andwf	(??_find_volume+3)& (0+255),w,b
 19553   000B4C  6FE6               	movwf	(??_find_volume+7)& (0+255),b
 19554   000B4E  0101               	movlb	1	; () banked
 19555   000B50  EE20 F017          	lfsr	2,23
 19556   000B54  5138               	movf	find_volume@fs& (0+255),w,b
 19557   000B56  26D9               	addwf	fsr2l,f,c
 19558   000B58  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19559   000B5A  22DA               	addwfc	fsr2h,f,c
 19560   000B5C  006F FF78  F060    	movff	postinc2,___lmul@multiplier
 19561   000B62  006F FF78  F061    	movff	postinc2,___lmul@multiplier+1
 19562   000B68  006F FF78  F062    	movff	postinc2,___lmul@multiplier+2
 19563   000B6E  006F FF78  F063    	movff	postinc2,___lmul@multiplier+3
 19564   000B74  0E03               	movlw	3
 19565   000B76  0100               	movlb	0	; () banked
 19566   000B78  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19567   000B7A  0E00               	movlw	0
 19568   000B7C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19569   000B7E  0E00               	movlw	0
 19570   000B80  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19571   000B82  0E00               	movlw	0
 19572   000B84  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19573   000B86  ECE7  F04C         	call	___lmul	;wreg free
 19574   000B8A  0100               	movlb	0	; () banked
 19575   000B8C  90D8               	bcf	status,0,c
 19576   000B8E  3363               	rrcf	(?___lmul+3)& (0+255),f,b
 19577   000B90  3362               	rrcf	(?___lmul+2)& (0+255),f,b
 19578   000B92  3361               	rrcf	(?___lmul+1)& (0+255),f,b
 19579   000B94  3360               	rrcf	?___lmul& (0+255),f,b
 19580   000B96  51E3               	movf	(??_find_volume+4)& (0+255),w,b
 19581   000B98  2560               	addwf	?___lmul& (0+255),w,b
 19582   000B9A  0101               	movlb	1	; () banked
 19583   000B9C  6F16               	movwf	find_volume@szbfat& (0+255),b
 19584   000B9E  0100               	movlb	0	; () banked
 19585   000BA0  51E4               	movf	(??_find_volume+5)& (0+255),w,b
 19586   000BA2  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19587   000BA4  0101               	movlb	1	; () banked
 19588   000BA6  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 19589   000BA8  0100               	movlb	0	; () banked
 19590   000BAA  51E5               	movf	(??_find_volume+6)& (0+255),w,b
 19591   000BAC  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19592   000BAE  0101               	movlb	1	; () banked
 19593   000BB0  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 19594   000BB2  0100               	movlb	0	; () banked
 19595   000BB4  51E6               	movf	(??_find_volume+7)& (0+255),w,b
 19596   000BB6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19597   000BB8  0101               	movlb	1	; () banked
 19598   000BBA  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 19599   000BBC  EF03  F006         	goto	l1256
 19600   000BC0                     l16739:
 19601                           
 19602                           ; BSR set to: 1
 19603   000BC0  EE20 F017          	lfsr	2,23
 19604   000BC4  5138               	movf	find_volume@fs& (0+255),w,b
 19605   000BC6  26D9               	addwf	fsr2l,f,c
 19606   000BC8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19607   000BCA  22DA               	addwfc	fsr2h,f,c
 19608   000BCC  006F FF78  F0DF    	movff	postinc2,??_find_volume
 19609   000BD2  006F FF78  F0E0    	movff	postinc2,??_find_volume+1
 19610   000BD8  006F FF78  F0E1    	movff	postinc2,??_find_volume+2
 19611   000BDE  006F FF78  F0E2    	movff	postinc2,??_find_volume+3
 19612   000BE4  90D8               	bcf	status,0,c
 19613   000BE6  0100               	movlb	0	; () banked
 19614   000BE8  35DF               	rlcf	??_find_volume& (0+255),w,b
 19615   000BEA  0101               	movlb	1	; () banked
 19616   000BEC  6F16               	movwf	find_volume@szbfat& (0+255),b
 19617   000BEE  0100               	movlb	0	; () banked
 19618   000BF0  35E0               	rlcf	(??_find_volume+1)& (0+255),w,b
 19619   000BF2  0101               	movlb	1	; () banked
 19620   000BF4  6F17               	movwf	(find_volume@szbfat+1)& (0+255),b
 19621   000BF6  0100               	movlb	0	; () banked
 19622   000BF8  35E1               	rlcf	(??_find_volume+2)& (0+255),w,b
 19623   000BFA  0101               	movlb	1	; () banked
 19624   000BFC  6F18               	movwf	(find_volume@szbfat+2)& (0+255),b
 19625   000BFE  0100               	movlb	0	; () banked
 19626   000C00  35E2               	rlcf	(??_find_volume+3)& (0+255),w,b
 19627   000C02  0101               	movlb	1	; () banked
 19628   000C04  6F19               	movwf	(find_volume@szbfat+3)& (0+255),b
 19629   000C06                     l1256:
 19630                           
 19631                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 19632   000C06  0EFF               	movlw	255
 19633   000C08  0101               	movlb	1	; () banked
 19634   000C0A  2516               	addwf	find_volume@szbfat& (0+255),w,b
 19635   000C0C  0100               	movlb	0	; () banked
 19636   000C0E  6FDF               	movwf	??_find_volume& (0+255),b
 19637   000C10  0E01               	movlw	1
 19638   000C12  0101               	movlb	1	; () banked
 19639   000C14  2117               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 19640   000C16  0100               	movlb	0	; () banked
 19641   000C18  6FE0               	movwf	(??_find_volume+1)& (0+255),b
 19642   000C1A  0E00               	movlw	0
 19643   000C1C  0101               	movlb	1	; () banked
 19644   000C1E  2118               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 19645   000C20  0100               	movlb	0	; () banked
 19646   000C22  6FE1               	movwf	(??_find_volume+2)& (0+255),b
 19647   000C24  0E00               	movlw	0
 19648   000C26  0101               	movlb	1	; () banked
 19649   000C28  2119               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 19650   000C2A  0100               	movlb	0	; () banked
 19651   000C2C  6FE2               	movwf	(??_find_volume+3)& (0+255),b
 19652   000C2E  0E0A               	movlw	10
 19653   000C30  EF1F  F006         	goto	u20560
 19654   000C34                     u20565:
 19655   000C34  90D8               	bcf	status,0,c
 19656   000C36  33E2               	rrcf	(??_find_volume+3)& (0+255),f,b
 19657   000C38  33E1               	rrcf	(??_find_volume+2)& (0+255),f,b
 19658   000C3A  33E0               	rrcf	(??_find_volume+1)& (0+255),f,b
 19659   000C3C  33DF               	rrcf	??_find_volume& (0+255),f,b
 19660   000C3E                     u20560:
 19661   000C3E  2EE8               	decfsz	wreg,f,c
 19662   000C40  EF1A  F006         	goto	u20565
 19663   000C44  0101               	movlb	1	; () banked
 19664   000C46  EE20 F01B          	lfsr	2,27
 19665   000C4A  5138               	movf	find_volume@fs& (0+255),w,b
 19666   000C4C  26D9               	addwf	fsr2l,f,c
 19667   000C4E  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19668   000C50  22DA               	addwfc	fsr2h,f,c
 19669   000C52  0100               	movlb	0	; () banked
 19670   000C54  51DF               	movf	??_find_volume& (0+255),w,b
 19671   000C56  5CDE               	subwf	postinc2,w,c
 19672   000C58  51E0               	movf	(??_find_volume+1)& (0+255),w,b
 19673   000C5A  58DE               	subwfb	postinc2,w,c
 19674   000C5C  51E1               	movf	(??_find_volume+2)& (0+255),w,b
 19675   000C5E  58DE               	subwfb	postinc2,w,c
 19676   000C60  51E2               	movf	(??_find_volume+3)& (0+255),w,b
 19677   000C62  58DE               	subwfb	postinc2,w,c
 19678   000C64  B0D8               	btfsc	status,0,c
 19679   000C66  EF37  F006         	goto	u20571
 19680   000C6A  EF39  F006         	goto	u20570
 19681   000C6E                     u20571:
 19682   000C6E  EF3B  F006         	goto	l16745
 19683   000C72                     u20570:
 19684   000C72  EFEB  F001         	goto	l16613
 19685   000C76                     l16745:
 19686                           
 19687                           ; BSR set to: 0
 19688                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 19689   000C76  0101               	movlb	1	; () banked
 19690   000C78  EE20 F00F          	lfsr	2,15
 19691   000C7C  5138               	movf	find_volume@fs& (0+255),w,b
 19692   000C7E  26D9               	addwf	fsr2l,f,c
 19693   000C80  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19694   000C82  22DA               	addwfc	fsr2h,f,c
 19695   000C84  0EFF               	movlw	255
 19696   000C86  6EDE               	movwf	postinc2,c
 19697   000C88  0EFF               	movlw	255
 19698   000C8A  6EDE               	movwf	postinc2,c
 19699   000C8C  0EFF               	movlw	255
 19700   000C8E  6EDE               	movwf	postinc2,c
 19701   000C90  0EFF               	movlw	255
 19702   000C92  6EDD               	movwf	postdec2,c
 19703   000C94  52DD               	movf	postdec2,f,c
 19704   000C96  52DD               	movf	postdec2,f,c
 19705   000C98  EE10 F00B          	lfsr	1,11
 19706   000C9C  5138               	movf	find_volume@fs& (0+255),w,b
 19707   000C9E  26E1               	addwf	fsr1l,f,c
 19708   000CA0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19709   000CA2  22E2               	addwfc	fsr1h,f,c
 19710   000CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 19711   000CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 19712   000CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 19713   000CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 19714   000CBC                     
 19715                           ; BSR set to: 1
 19716                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 19717   000CBC  EE20 F004          	lfsr	2,4
 19718   000CC0  5138               	movf	find_volume@fs& (0+255),w,b
 19719   000CC2  26D9               	addwf	fsr2l,f,c
 19720   000CC4  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19721   000CC6  22DA               	addwfc	fsr2h,f,c
 19722   000CC8  0E80               	movlw	128
 19723   000CCA  6EDF               	movwf	indf2,c
 19724   000CCC                     
 19725                           ; BSR set to: 1
 19726                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 19727   000CCC  0E03               	movlw	3
 19728   000CCE  1937               	xorwf	find_volume@fmt& (0+255),w,b
 19729   000CD0  A4D8               	btfss	status,2,c
 19730   000CD2  EF6D  F006         	goto	u20581
 19731   000CD6  EF6F  F006         	goto	u20580
 19732   000CDA                     u20581:
 19733   000CDA  EF44  F007         	goto	l16765
 19734   000CDE                     u20580:
 19735   000CDE                     
 19736                           ; BSR set to: 1
 19737   000CDE  0E63               	movlw	99
 19738   000CE0  2538               	addwf	find_volume@fs& (0+255),w,b
 19739   000CE2  0100               	movlb	0	; () banked
 19740   000CE4  6F60               	movwf	ld_word@ptr& (0+255),b
 19741   000CE6  0E00               	movlw	0
 19742   000CE8  0101               	movlb	1	; () banked
 19743   000CEA  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19744   000CEC  0100               	movlb	0	; () banked
 19745   000CEE  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19746   000CF0  EC0E  F050         	call	_ld_word	;wreg free
 19747   000CF4  0100               	movlb	0	; () banked
 19748   000CF6  0560               	decf	?_ld_word& (0+255),w,b
 19749   000CF8  1161               	iorwf	(?_ld_word+1)& (0+255),w,b
 19750   000CFA  A4D8               	btfss	status,2,c
 19751   000CFC  EF82  F006         	goto	u20591
 19752   000D00  EF84  F006         	goto	u20590
 19753   000D04                     u20591:
 19754   000D04  EF44  F007         	goto	l16765
 19755   000D08                     u20590:
 19756   000D08                     
 19757                           ; BSR set to: 0
 19758   000D08  C138  F0C8         	movff	find_volume@fs,move_window@fs
 19759   000D0C  C139  F0C9         	movff	find_volume@fs+1,move_window@fs+1
 19760   000D10  0E01               	movlw	1
 19761   000D12  0101               	movlb	1	; () banked
 19762   000D14  2531               	addwf	find_volume@bsect& (0+255),w,b
 19763   000D16  0100               	movlb	0	; () banked
 19764   000D18  6FCA               	movwf	move_window@sector& (0+255),b
 19765   000D1A  0E00               	movlw	0
 19766   000D1C  0101               	movlb	1	; () banked
 19767   000D1E  2132               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 19768   000D20  0100               	movlb	0	; () banked
 19769   000D22  6FCB               	movwf	(move_window@sector+1)& (0+255),b
 19770   000D24  0E00               	movlw	0
 19771   000D26  0101               	movlb	1	; () banked
 19772   000D28  2133               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 19773   000D2A  0100               	movlb	0	; () banked
 19774   000D2C  6FCC               	movwf	(move_window@sector+2)& (0+255),b
 19775   000D2E  0E00               	movlw	0
 19776   000D30  0101               	movlb	1	; () banked
 19777   000D32  2134               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 19778   000D34  0100               	movlb	0	; () banked
 19779   000D36  6FCD               	movwf	(move_window@sector+3)& (0+255),b
 19780   000D38  ECDA  F046         	call	_move_window	;wreg free
 19781   000D3C  0900               	iorlw	0
 19782   000D3E  A4D8               	btfss	status,2,c
 19783   000D40  EFA4  F006         	goto	u20601
 19784   000D44  EFA6  F006         	goto	u20600
 19785   000D48                     u20601:
 19786   000D48  EF44  F007         	goto	l16765
 19787   000D4C                     u20600:
 19788   000D4C                     
 19789                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 19790   000D4C  0101               	movlb	1	; () banked
 19791   000D4E  EE20 F004          	lfsr	2,4
 19792   000D52  5138               	movf	find_volume@fs& (0+255),w,b
 19793   000D54  26D9               	addwf	fsr2l,f,c
 19794   000D56  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19795   000D58  22DA               	addwfc	fsr2h,f,c
 19796   000D5A  6ADF               	clrf	indf2,c
 19797   000D5C                     
 19798                           ; BSR set to: 1
 19799                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 19800   000D5C  0E31               	movlw	49
 19801   000D5E  2538               	addwf	find_volume@fs& (0+255),w,b
 19802   000D60  0100               	movlb	0	; () banked
 19803   000D62  6F60               	movwf	ld_word@ptr& (0+255),b
 19804   000D64  0E02               	movlw	2
 19805   000D66  0101               	movlb	1	; () banked
 19806   000D68  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19807   000D6A  0100               	movlb	0	; () banked
 19808   000D6C  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 19809   000D6E  EC0E  F050         	call	_ld_word	;wreg free
 19810   000D72  0E55               	movlw	85
 19811   000D74  0100               	movlb	0	; () banked
 19812   000D76  1960               	xorwf	?_ld_word& (0+255),w,b
 19813   000D78  E107               	bnz	u20611
 19814   000D7A  0EAA               	movlw	170
 19815   000D7C  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 19816   000D7E  A4D8               	btfss	status,2,c
 19817   000D80  EFC4  F006         	goto	u20611
 19818   000D84  EFC6  F006         	goto	u20610
 19819   000D88                     u20611:
 19820   000D88  EF44  F007         	goto	l16765
 19821   000D8C                     u20610:
 19822   000D8C                     
 19823                           ; BSR set to: 0
 19824   000D8C  0E33               	movlw	51
 19825   000D8E  0101               	movlb	1	; () banked
 19826   000D90  2538               	addwf	find_volume@fs& (0+255),w,b
 19827   000D92  0100               	movlb	0	; () banked
 19828   000D94  6F60               	movwf	ld_dword@ptr& (0+255),b
 19829   000D96  0E00               	movlw	0
 19830   000D98  0101               	movlb	1	; () banked
 19831   000D9A  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19832   000D9C  0100               	movlb	0	; () banked
 19833   000D9E  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19834   000DA0  EC0F  F048         	call	_ld_dword	;wreg free
 19835   000DA4  0E52               	movlw	82
 19836   000DA6  0100               	movlb	0	; () banked
 19837   000DA8  1960               	xorwf	?_ld_dword& (0+255),w,b
 19838   000DAA  E10D               	bnz	u20621
 19839   000DAC  0E52               	movlw	82
 19840   000DAE  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 19841   000DB0  E10A               	bnz	u20621
 19842   000DB2  0E61               	movlw	97
 19843   000DB4  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 19844   000DB6  E107               	bnz	u20621
 19845   000DB8  0E41               	movlw	65
 19846   000DBA  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 19847   000DBC  A4D8               	btfss	status,2,c
 19848   000DBE  EFE3  F006         	goto	u20621
 19849   000DC2  EFE5  F006         	goto	u20620
 19850   000DC6                     u20621:
 19851   000DC6  EF44  F007         	goto	l16765
 19852   000DCA                     u20620:
 19853   000DCA                     
 19854                           ; BSR set to: 0
 19855   000DCA  0E17               	movlw	23
 19856   000DCC  0101               	movlb	1	; () banked
 19857   000DCE  2538               	addwf	find_volume@fs& (0+255),w,b
 19858   000DD0  0100               	movlb	0	; () banked
 19859   000DD2  6F60               	movwf	ld_dword@ptr& (0+255),b
 19860   000DD4  0E02               	movlw	2
 19861   000DD6  0101               	movlb	1	; () banked
 19862   000DD8  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19863   000DDA  0100               	movlb	0	; () banked
 19864   000DDC  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19865   000DDE  EC0F  F048         	call	_ld_dword	;wreg free
 19866   000DE2  0E72               	movlw	114
 19867   000DE4  0100               	movlb	0	; () banked
 19868   000DE6  1960               	xorwf	?_ld_dword& (0+255),w,b
 19869   000DE8  E10D               	bnz	u20631
 19870   000DEA  0E72               	movlw	114
 19871   000DEC  1961               	xorwf	(?_ld_dword+1)& (0+255),w,b
 19872   000DEE  E10A               	bnz	u20631
 19873   000DF0  0E41               	movlw	65
 19874   000DF2  1962               	xorwf	(?_ld_dword+2)& (0+255),w,b
 19875   000DF4  E107               	bnz	u20631
 19876   000DF6  0E61               	movlw	97
 19877   000DF8  1963               	xorwf	(?_ld_dword+3)& (0+255),w,b
 19878   000DFA  A4D8               	btfss	status,2,c
 19879   000DFC  EF02  F007         	goto	u20631
 19880   000E00  EF04  F007         	goto	u20630
 19881   000E04                     u20631:
 19882   000E04  EF44  F007         	goto	l16765
 19883   000E08                     u20630:
 19884   000E08                     
 19885                           ; BSR set to: 0
 19886                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 19887   000E08  0E1B               	movlw	27
 19888   000E0A  0101               	movlb	1	; () banked
 19889   000E0C  2538               	addwf	find_volume@fs& (0+255),w,b
 19890   000E0E  0100               	movlb	0	; () banked
 19891   000E10  6F60               	movwf	ld_dword@ptr& (0+255),b
 19892   000E12  0E02               	movlw	2
 19893   000E14  0101               	movlb	1	; () banked
 19894   000E16  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19895   000E18  0100               	movlb	0	; () banked
 19896   000E1A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19897   000E1C  EC0F  F048         	call	_ld_dword	;wreg free
 19898   000E20  0101               	movlb	1	; () banked
 19899   000E22  EE20 F00F          	lfsr	2,15
 19900   000E26  5138               	movf	find_volume@fs& (0+255),w,b
 19901   000E28  26D9               	addwf	fsr2l,f,c
 19902   000E2A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19903   000E2C  22DA               	addwfc	fsr2h,f,c
 19904   000E2E  0100               	movlb	0	; () banked
 19905   000E30  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 19906   000E36  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 19907   000E3C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 19908   000E42  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 19909                           
 19910                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 19911   000E48  0E1F               	movlw	31
 19912   000E4A  0101               	movlb	1	; () banked
 19913   000E4C  2538               	addwf	find_volume@fs& (0+255),w,b
 19914   000E4E  0100               	movlb	0	; () banked
 19915   000E50  6F60               	movwf	ld_dword@ptr& (0+255),b
 19916   000E52  0E02               	movlw	2
 19917   000E54  0101               	movlb	1	; () banked
 19918   000E56  2139               	addwfc	(find_volume@fs+1)& (0+255),w,b
 19919   000E58  0100               	movlb	0	; () banked
 19920   000E5A  6F61               	movwf	(ld_dword@ptr+1)& (0+255),b
 19921   000E5C  EC0F  F048         	call	_ld_dword	;wreg free
 19922   000E60  0101               	movlb	1	; () banked
 19923   000E62  EE20 F00B          	lfsr	2,11
 19924   000E66  5138               	movf	find_volume@fs& (0+255),w,b
 19925   000E68  26D9               	addwf	fsr2l,f,c
 19926   000E6A  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19927   000E6C  22DA               	addwfc	fsr2h,f,c
 19928   000E6E  0100               	movlb	0	; () banked
 19929   000E70  0060  F183  FFDE   	movff	?_ld_dword,postinc2
 19930   000E76  0060  F187  FFDE   	movff	?_ld_dword+1,postinc2
 19931   000E7C  0060  F18B  FFDE   	movff	?_ld_dword+2,postinc2
 19932   000E82  0060  F18F  FFDE   	movff	?_ld_dword+3,postinc2
 19933   000E88                     l16765:
 19934                           
 19935                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 19936   000E88  0060  F4E3  FFD9   	movff	find_volume@fs,fsr2l
 19937   000E8E  0060  F4E7  FFDA   	movff	find_volume@fs+1,fsr2h
 19938   000E94  0060  F4DF  FFDF   	movff	find_volume@fmt,indf2
 19939   000E9A                     
 19940                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 19941   000E9A  0101               	movlb	1	; () banked
 19942   000E9C  4BE0               	infsnz	_Fsid& (0+255),f,b
 19943   000E9E  2BE1               	incf	(_Fsid+1)& (0+255),f,b
 19944   000EA0  EE20 F005          	lfsr	2,5
 19945   000EA4  5138               	movf	find_volume@fs& (0+255),w,b
 19946   000EA6  26D9               	addwf	fsr2l,f,c
 19947   000EA8  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19948   000EAA  22DA               	addwfc	fsr2h,f,c
 19949   000EAC  0060  F783  FFDE   	movff	_Fsid,postinc2
 19950   000EB2  0060  F787  FFDD   	movff	_Fsid+1,postdec2
 19951   000EB8                     
 19952                           ; BSR set to: 1
 19953                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 19954   000EB8  EE20 F013          	lfsr	2,19
 19955   000EBC  5138               	movf	find_volume@fs& (0+255),w,b
 19956   000EBE  26D9               	addwf	fsr2l,f,c
 19957   000EC0  5139               	movf	(find_volume@fs+1)& (0+255),w,b
 19958   000EC2  22DA               	addwfc	fsr2h,f,c
 19959   000EC4  6ADE               	clrf	postinc2,c
 19960   000EC6  6ADE               	clrf	postinc2,c
 19961   000EC8  6ADE               	clrf	postinc2,c
 19962   000ECA  6ADD               	clrf	postdec2,c
 19963   000ECC  EF8A  F000         	goto	l16531
 19964   000ED0                     l1211:
 19965   000ED0  0012               	return		;funcret
 19966   000ED2                     __end_of_find_volume:
 19967                           	callstack 0
 19968                           
 19969 ;; *************** function _ld_dword *****************
 19970 ;; Defined at:
 19971 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 19972 ;; Parameters:    Size  Location     Type
 19973 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 19974 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 19975 ;; Auto vars:     Size  Location     Type
 19976 ;;  rv              4    9[BANK0 ] unsigned long 
 19977 ;; Return value:  Size  Location     Type
 19978 ;;                  4    0[BANK0 ] unsigned long 
 19979 ;; Registers used:
 19980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19981 ;; Tracked objects:
 19982 ;;		On entry : 0/0
 19983 ;;		On exit  : 0/0
 19984 ;;		Unchanged: 0/0
 19985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19987 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19988 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19989 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19990 ;;Total ram usage:       13 bytes
 19991 ;; Hardware stack levels used: 1
 19992 ;; Hardware stack levels required when called: 5
 19993 ;; This function calls:
 19994 ;;		Nothing
 19995 ;; This function is called by:
 19996 ;;		_get_fat
 19997 ;;		_put_fat
 19998 ;;		_find_volume
 19999 ;;		_f_open
 20000 ;; This function uses a non-reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text69
 20004   00901E                     __ptext69:
 20005                           	callstack 0
 20006   00901E                     _ld_dword:
 20007                           	callstack 21
 20008   00901E                     
 20009                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 20010   00901E  0100               	movlb	0	; () banked
 20011   009020  EE20 F003          	lfsr	2,3
 20012   009024  5160               	movf	ld_dword@ptr& (0+255),w,b
 20013   009026  26D9               	addwf	fsr2l,f,c
 20014   009028  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20015   00902A  22DA               	addwfc	fsr2h,f,c
 20016   00902C  50DF               	movf	indf2,w,c
 20017   00902E  6F64               	movwf	??_ld_dword& (0+255),b
 20018   009030  5164               	movf	??_ld_dword& (0+255),w,b
 20019   009032  6F69               	movwf	ld_dword@rv& (0+255),b
 20020   009034  6B6A               	clrf	(ld_dword@rv+1)& (0+255),b
 20021   009036  6B6B               	clrf	(ld_dword@rv+2)& (0+255),b
 20022   009038  6B6C               	clrf	(ld_dword@rv+3)& (0+255),b
 20023                           
 20024                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 20025   00903A  EE20 F002          	lfsr	2,2
 20026   00903E  5160               	movf	ld_dword@ptr& (0+255),w,b
 20027   009040  26D9               	addwf	fsr2l,f,c
 20028   009042  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20029   009044  22DA               	addwfc	fsr2h,f,c
 20030   009046  50DF               	movf	indf2,w,c
 20031   009048  6F64               	movwf	??_ld_dword& (0+255),b
 20032   00904A  5164               	movf	??_ld_dword& (0+255),w,b
 20033   00904C  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20034   009050  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20035   009054  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20036   009058  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20037   00905A  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20038   00905C  6F69               	movwf	ld_dword@rv& (0+255),b
 20039   00905E  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20040   009060  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20041   009062  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20042   009064  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20043   009066  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20044   009068  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20045                           
 20046                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 20047   00906A  EE20 F001          	lfsr	2,1
 20048   00906E  5160               	movf	ld_dword@ptr& (0+255),w,b
 20049   009070  26D9               	addwf	fsr2l,f,c
 20050   009072  5161               	movf	(ld_dword@ptr+1)& (0+255),w,b
 20051   009074  22DA               	addwfc	fsr2h,f,c
 20052   009076  50DF               	movf	indf2,w,c
 20053   009078  6F64               	movwf	??_ld_dword& (0+255),b
 20054   00907A  5164               	movf	??_ld_dword& (0+255),w,b
 20055   00907C  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20056   009080  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20057   009084  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20058   009088  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20059   00908A  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20060   00908C  6F69               	movwf	ld_dword@rv& (0+255),b
 20061   00908E  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20062   009090  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20063   009092  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20064   009094  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20065   009096  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20066   009098  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20067                           
 20068                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 20069   00909A  0060  F183  FFD9   	movff	ld_dword@ptr,fsr2l
 20070   0090A0  0060  F187  FFDA   	movff	ld_dword@ptr+1,fsr2h
 20071   0090A6  50DF               	movf	indf2,w,c
 20072   0090A8  6F64               	movwf	??_ld_dword& (0+255),b
 20073   0090AA  5164               	movf	??_ld_dword& (0+255),w,b
 20074   0090AC  C069  F066         	movff	ld_dword@rv,??_ld_dword+2
 20075   0090B0  C06A  F067         	movff	ld_dword@rv+1,??_ld_dword+3
 20076   0090B4  C06B  F068         	movff	ld_dword@rv+2,??_ld_dword+4
 20077   0090B8  6B65               	clrf	(??_ld_dword+1)& (0+255),b
 20078   0090BA  1165               	iorwf	(??_ld_dword+1)& (0+255),w,b
 20079   0090BC  6F69               	movwf	ld_dword@rv& (0+255),b
 20080   0090BE  5166               	movf	(??_ld_dword+2)& (0+255),w,b
 20081   0090C0  6F6A               	movwf	(ld_dword@rv+1)& (0+255),b
 20082   0090C2  5167               	movf	(??_ld_dword+3)& (0+255),w,b
 20083   0090C4  6F6B               	movwf	(ld_dword@rv+2)& (0+255),b
 20084   0090C6  5168               	movf	(??_ld_dword+4)& (0+255),w,b
 20085   0090C8  6F6C               	movwf	(ld_dword@rv+3)& (0+255),b
 20086   0090CA                     
 20087                           ; BSR set to: 0
 20088                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 20089   0090CA  C069  F060         	movff	ld_dword@rv,?_ld_dword
 20090   0090CE  C06A  F061         	movff	ld_dword@rv+1,?_ld_dword+1
 20091   0090D2  C06B  F062         	movff	ld_dword@rv+2,?_ld_dword+2
 20092   0090D6  C06C  F063         	movff	ld_dword@rv+3,?_ld_dword+3
 20093   0090DA                     
 20094                           ; BSR set to: 0
 20095   0090DA  0012               	return		;funcret
 20096   0090DC                     __end_of_ld_dword:
 20097                           	callstack 0
 20098                           
 20099 ;; *************** function _get_ldnumber *****************
 20100 ;; Defined at:
 20101 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;  path            2    0[BANK0 ] PTR PTR const unsigned c
 20104 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 20105 ;;		 -> f_mount@rp(2), 
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;  tp              2   11[BANK0 ] PTR const unsigned char 
 20108 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 20109 ;;  vol             2    9[BANK0 ] int 
 20110 ;;  tt              2    7[BANK0 ] PTR const unsigned char 
 20111 ;;		 -> STR_12(9), STR_10(1), STR_8(9), STR_7(1), 
 20112 ;;  i               2    4[BANK0 ] int 
 20113 ;;  tc              1    6[BANK0 ] unsigned char 
 20114 ;; Return value:  Size  Location     Type
 20115 ;;                  2    0[BANK0 ] int 
 20116 ;; Registers used:
 20117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20118 ;; Tracked objects:
 20119 ;;		On entry : 0/0
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20124 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20126 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20127 ;;Total ram usage:       13 bytes
 20128 ;; Hardware stack levels used: 1
 20129 ;; Hardware stack levels required when called: 5
 20130 ;; This function calls:
 20131 ;;		Nothing
 20132 ;; This function is called by:
 20133 ;;		_find_volume
 20134 ;;		_f_mount
 20135 ;;		_f_chdrive
 20136 ;; This function uses a non-reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text70
 20140   0078D6                     __ptext70:
 20141                           	callstack 0
 20142   0078D6                     _get_ldnumber:
 20143                           	callstack 22
 20144   0078D6                     
 20145                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 20146   0078D6  0100               	movlb	0	; () banked
 20147   0078D8  6969               	setf	get_ldnumber@vol& (0+255),b
 20148   0078DA  696A               	setf	(get_ldnumber@vol+1)& (0+255),b
 20149   0078DC                     
 20150                           ; BSR set to: 0
 20151                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 20152   0078DC  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 20153   0078E2  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 20154   0078E8  006F FF78  F06B    	movff	postinc2,get_ldnumber@tp
 20155   0078EE  006F FF74  F06C    	movff	postdec2,get_ldnumber@tp+1
 20156   0078F4  C06B  F067         	movff	get_ldnumber@tp,get_ldnumber@tt
 20157   0078F8  C06C  F068         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 20158   0078FC                     
 20159                           ; BSR set to: 0
 20160                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 20161   0078FC  516B               	movf	get_ldnumber@tp& (0+255),w,b
 20162   0078FE  116C               	iorwf	(get_ldnumber@tp+1)& (0+255),w,b
 20163   007900  A4D8               	btfss	status,2,c
 20164   007902  EF85  F03C         	goto	u19621
 20165   007906  EF87  F03C         	goto	u19620
 20166   00790A                     u19621:
 20167   00790A  EF8B  F03C         	goto	l16161
 20168   00790E                     u19620:
 20169   00790E                     
 20170                           ; BSR set to: 0
 20171   00790E  6960               	setf	?_get_ldnumber& (0+255),b
 20172   007910  6961               	setf	(?_get_ldnumber+1)& (0+255),b
 20173   007912  EF23  F03D         	goto	l1186
 20174   007916                     l16161:
 20175                           
 20176                           ; BSR set to: 0
 20177   007916  0060  F19F  FFF6   	movff	get_ldnumber@tt,tblptrl
 20178   00791C  0060  F1A3  FFF7   	movff	get_ldnumber@tt+1,tblptrh
 20179   007922                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20180   007922  6AF8               	clrf	tblptru,c
 20181   007924                     	endif
 20182   007924                     	if	0	;tblptru may be non-zero
 20183   007924                     	endif
 20184   007924  0008               	tblrd		*
 20185   007926  006F FFD4  F066    	movff	tablat,get_ldnumber@tc
 20186   00792C                     
 20187                           ; BSR set to: 0
 20188   00792C  4B67               	infsnz	get_ldnumber@tt& (0+255),f,b
 20189   00792E  2B68               	incf	(get_ldnumber@tt+1)& (0+255),f,b
 20190   007930                     
 20191                           ; BSR set to: 0
 20192   007930  0E20               	movlw	32
 20193   007932  6566               	cpfsgt	get_ldnumber@tc& (0+255),b
 20194   007934  EF9E  F03C         	goto	u19631
 20195   007938  EFA0  F03C         	goto	u19630
 20196   00793C                     u19631:
 20197   00793C  EFA9  F03C         	goto	l16173
 20198   007940                     u19630:
 20199   007940                     
 20200                           ; BSR set to: 0
 20201   007940  0E3A               	movlw	58
 20202   007942  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 20203   007944  A4D8               	btfss	status,2,c
 20204   007946  EFA7  F03C         	goto	u19641
 20205   00794A  EFA9  F03C         	goto	u19640
 20206   00794E                     u19641:
 20207   00794E  EF8B  F03C         	goto	l16161
 20208   007952                     u19640:
 20209   007952                     l16173:
 20210                           
 20211                           ; BSR set to: 0
 20212                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 20213   007952  0E3A               	movlw	58
 20214   007954  1966               	xorwf	get_ldnumber@tc& (0+255),w,b
 20215   007956  A4D8               	btfss	status,2,c
 20216   007958  EFB0  F03C         	goto	u19651
 20217   00795C  EFB2  F03C         	goto	u19650
 20218   007960                     u19651:
 20219   007960  EF1C  F03D         	goto	l1195
 20220   007964                     u19650:
 20221   007964                     
 20222                           ; BSR set to: 0
 20223                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 20224   007964  0E00               	movlw	0
 20225   007966  6F65               	movwf	(get_ldnumber@i+1)& (0+255),b
 20226   007968  0E01               	movlw	1
 20227   00796A  6F64               	movwf	get_ldnumber@i& (0+255),b
 20228   00796C                     
 20229                           ; BSR set to: 0
 20230                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 20231   00796C  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20232   007972  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20233   007978                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20234   007978  6AF8               	clrf	tblptru,c
 20235   00797A                     	endif
 20236   00797A                     	if	0	;tblptru may be non-zero
 20237   00797A                     	endif
 20238   00797A  0E2F               	movlw	47
 20239   00797C  0008               	tblrd		*
 20240   00797E  64F5               	cpfsgt	tablat,c
 20241   007980  EFC4  F03C         	goto	u19661
 20242   007984  EFC6  F03C         	goto	u19660
 20243   007988                     u19661:
 20244   007988  EFF9  F03C         	goto	l16185
 20245   00798C                     u19660:
 20246   00798C                     
 20247                           ; BSR set to: 0
 20248   00798C  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20249   007992  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20250   007998                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20251   007998  6AF8               	clrf	tblptru,c
 20252   00799A                     	endif
 20253   00799A                     	if	0	;tblptru may be non-zero
 20254   00799A                     	endif
 20255   00799A  0E3A               	movlw	58
 20256   00799C  0008               	tblrd		*
 20257   00799E  60F5               	cpfslt	tablat,c
 20258   0079A0  EFD4  F03C         	goto	u19671
 20259   0079A4  EFD6  F03C         	goto	u19670
 20260   0079A8                     u19671:
 20261   0079A8  EFF9  F03C         	goto	l16185
 20262   0079AC                     u19670:
 20263   0079AC                     
 20264                           ; BSR set to: 0
 20265   0079AC  0E02               	movlw	2
 20266   0079AE  256B               	addwf	get_ldnumber@tp& (0+255),w,b
 20267   0079B0  6F62               	movwf	??_get_ldnumber& (0+255),b
 20268   0079B2  0E00               	movlw	0
 20269   0079B4  216C               	addwfc	(get_ldnumber@tp+1)& (0+255),w,b
 20270   0079B6  6F63               	movwf	(??_get_ldnumber+1)& (0+255),b
 20271   0079B8  5167               	movf	get_ldnumber@tt& (0+255),w,b
 20272   0079BA  1962               	xorwf	??_get_ldnumber& (0+255),w,b
 20273   0079BC  E107               	bnz	u19681
 20274   0079BE  5168               	movf	(get_ldnumber@tt+1)& (0+255),w,b
 20275   0079C0  1963               	xorwf	(??_get_ldnumber+1)& (0+255),w,b
 20276   0079C2  A4D8               	btfss	status,2,c
 20277   0079C4  EFE6  F03C         	goto	u19681
 20278   0079C8  EFE8  F03C         	goto	u19680
 20279   0079CC                     u19681:
 20280   0079CC  EFF9  F03C         	goto	l16185
 20281   0079D0                     u19680:
 20282   0079D0                     
 20283                           ; BSR set to: 0
 20284                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 20285   0079D0  0060  F1AF  FFF6   	movff	get_ldnumber@tp,tblptrl
 20286   0079D6  0060  F1B3  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 20287   0079DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20288   0079DC  6AF8               	clrf	tblptru,c
 20289   0079DE                     	endif
 20290   0079DE                     	if	0	;tblptru may be non-zero
 20291   0079DE                     	endif
 20292   0079DE  0008               	tblrd		*
 20293   0079E0  006F FFD4  F062    	movff	tablat,??_get_ldnumber
 20294   0079E6  0ED0               	movlw	208
 20295   0079E8  2562               	addwf	??_get_ldnumber& (0+255),w,b
 20296   0079EA  6F64               	movwf	get_ldnumber@i& (0+255),b
 20297   0079EC  6B65               	clrf	(get_ldnumber@i+1)& (0+255),b
 20298   0079EE  0EFF               	movlw	255
 20299   0079F0  2365               	addwfc	(get_ldnumber@i+1)& (0+255),f,b
 20300   0079F2                     l16185:
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 20304   0079F2  BF65               	btfsc	(get_ldnumber@i+1)& (0+255),7,b
 20305   0079F4  EF06  F03D         	goto	u19690
 20306   0079F8  5165               	movf	(get_ldnumber@i+1)& (0+255),w,b
 20307   0079FA  E106               	bnz	u19691
 20308   0079FC  0564               	decf	get_ldnumber@i& (0+255),w,b
 20309   0079FE  B0D8               	btfsc	status,0,c
 20310   007A00  EF04  F03D         	goto	u19691
 20311   007A04  EF06  F03D         	goto	u19690
 20312   007A08                     u19691:
 20313   007A08  EF16  F03D         	goto	l16191
 20314   007A0C                     u19690:
 20315   007A0C                     
 20316                           ; BSR set to: 0
 20317                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 20318   007A0C  C064  F069         	movff	get_ldnumber@i,get_ldnumber@vol
 20319   007A10  C065  F06A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 20320   007A14                     
 20321                           ; BSR set to: 0
 20322                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 20323   007A14  0060  F183  FFD9   	movff	get_ldnumber@path,fsr2l
 20324   007A1A  0060  F187  FFDA   	movff	get_ldnumber@path+1,fsr2h
 20325   007A20  0060  F19F  FFDE   	movff	get_ldnumber@tt,postinc2
 20326   007A26  0060  F1A3  FFDD   	movff	get_ldnumber@tt+1,postdec2
 20327   007A2C                     l16191:
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 20331   007A2C  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 20332   007A30  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 20333   007A34  EF23  F03D         	goto	l1186
 20334   007A38                     l1195:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 20338   007A38  C04D  F069         	movff	_CurrVol,get_ldnumber@vol
 20339   007A3C  6B6A               	clrf	(get_ldnumber@vol+1)& (0+255),b
 20340                           
 20341                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 20342   007A3E  C069  F060         	movff	get_ldnumber@vol,?_get_ldnumber
 20343   007A42  C06A  F061         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 20344   007A46                     l1186:
 20345                           
 20346                           ; BSR set to: 0
 20347   007A46  0012               	return		;funcret
 20348   007A48                     __end_of_get_ldnumber:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _disk_status *****************
 20352 ;; Defined at:
 20353 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;  pdrv            1    wreg     unsigned char 
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  pdrv            1    0[BANK0 ] unsigned char 
 20358 ;;  stat            1    1[BANK0 ] unsigned char 
 20359 ;; Return value:  Size  Location     Type
 20360 ;;                  1    wreg      unsigned char 
 20361 ;; Registers used:
 20362 ;;		wreg, status,2, status,0, cstack
 20363 ;; Tracked objects:
 20364 ;;		On entry : 0/0
 20365 ;;		On exit  : 0/0
 20366 ;;		Unchanged: 0/0
 20367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20372 ;;Total ram usage:        2 bytes
 20373 ;; Hardware stack levels used: 1
 20374 ;; Hardware stack levels required when called: 6
 20375 ;; This function calls:
 20376 ;;		_SD_SPI_IsMediaInitialized
 20377 ;;		_SD_SPI_IsMediaPresent
 20378 ;;		_SD_SPI_IsWriteProtected
 20379 ;; This function is called by:
 20380 ;;		_find_volume
 20381 ;;		_validate
 20382 ;; This function uses a non-reentrant model
 20383 ;;
 20384                           
 20385                           	psect	text71
 20386   009880                     __ptext71:
 20387                           	callstack 0
 20388   009880                     _disk_status:
 20389                           	callstack 21
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;incstack = 0
 20393                           ;disk_status@pdrv stored from wreg
 20394   009880  0100               	movlb	0	; () banked
 20395   009882  6F60               	movwf	disk_status@pdrv& (0+255),b
 20396   009884                     
 20397                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 20398   009884  0E01               	movlw	1
 20399   009886  0100               	movlb	0	; () banked
 20400   009888  6F61               	movwf	disk_status@stat& (0+255),b
 20401                           
 20402                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 20403   00988A  EF70  F04C         	goto	l15365
 20404   00988E                     l15351:
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 20408   00988E  EC7C  F052         	call	_SD_SPI_IsMediaPresent	;wreg free
 20409   009892  0900               	iorlw	0
 20410   009894  A4D8               	btfss	status,2,c
 20411   009896  EF4F  F04C         	goto	u18161
 20412   00989A  EF51  F04C         	goto	u18160
 20413   00989E                     u18161:
 20414   00989E  EF56  F04C         	goto	l15355
 20415   0098A2                     u18160:
 20416   0098A2                     
 20417                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 20418   0098A2  0E02               	movlw	2
 20419   0098A4  0100               	movlb	0	; () banked
 20420   0098A6  6F61               	movwf	disk_status@stat& (0+255),b
 20421                           
 20422                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 20423   0098A8  EF62  F04C         	goto	l15359
 20424   0098AC                     l15355:
 20425   0098AC  EC46  F052         	call	_SD_SPI_IsMediaInitialized	;wreg free
 20426   0098B0  06E8               	decf	wreg,f,c
 20427   0098B2  A4D8               	btfss	status,2,c
 20428   0098B4  EF5E  F04C         	goto	u18171
 20429   0098B8  EF60  F04C         	goto	u18170
 20430   0098BC                     u18171:
 20431   0098BC  EF62  F04C         	goto	l15359
 20432   0098C0                     u18170:
 20433   0098C0                     
 20434                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 20435   0098C0  0100               	movlb	0	; () banked
 20436   0098C2  9161               	bcf	disk_status@stat& (0+255),0,b
 20437   0098C4                     l15359:
 20438                           
 20439                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 20440   0098C4  EC7A  F052         	call	_SD_SPI_IsWriteProtected	;wreg free
 20441   0098C8  06E8               	decf	wreg,f,c
 20442   0098CA  A4D8               	btfss	status,2,c
 20443   0098CC  EF6A  F04C         	goto	u18181
 20444   0098D0  EF6C  F04C         	goto	u18180
 20445   0098D4                     u18181:
 20446   0098D4  EF77  F04C         	goto	l15367
 20447   0098D8                     u18180:
 20448   0098D8                     
 20449                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 20450   0098D8  0100               	movlb	0	; () banked
 20451   0098DA  8561               	bsf	disk_status@stat& (0+255),2,b
 20452   0098DC  EF77  F04C         	goto	l15367
 20453   0098E0                     l15365:
 20454                           
 20455                           ; BSR set to: 0
 20456   0098E0  5160               	movf	disk_status@pdrv& (0+255),w,b
 20457                           
 20458                           ; Switch size 1, requested type "simple"
 20459                           ; Number of cases is 1, Range of values is 0 to 0
 20460                           ; switch strategies available:
 20461                           ; Name         Instructions Cycles
 20462                           ; simple_byte            4     3 (average)
 20463                           ;	Chosen strategy is simple_byte
 20464   0098E2  0A00               	xorlw	0	; case 0
 20465   0098E4  B4D8               	btfsc	status,2,c
 20466   0098E6  EF47  F04C         	goto	l15351
 20467   0098EA  EF77  F04C         	goto	l15367
 20468   0098EE                     l15367:
 20469                           
 20470                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 20471   0098EE  0100               	movlb	0	; () banked
 20472   0098F0  5161               	movf	disk_status@stat& (0+255),w,b
 20473   0098F2                     
 20474                           ; BSR set to: 0
 20475   0098F2  0012               	return		;funcret
 20476   0098F4                     __end_of_disk_status:
 20477                           	callstack 0
 20478                           
 20479 ;; *************** function _SD_SPI_IsWriteProtected *****************
 20480 ;; Defined at:
 20481 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;		None
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      _Bool 
 20488 ;; Registers used:
 20489 ;;		wreg
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20499 ;;Total ram usage:        0 bytes
 20500 ;; Hardware stack levels used: 1
 20501 ;; Hardware stack levels required when called: 5
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_disk_status
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text72
 20510   00A4F4                     __ptext72:
 20511                           	callstack 0
 20512   00A4F4                     _SD_SPI_IsWriteProtected:
 20513                           	callstack 21
 20514   00A4F4                     
 20515                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 20516   00A4F4  0E00               	movlw	0
 20517   00A4F6  0012               	return		;funcret
 20518   00A4F8                     __end_of_SD_SPI_IsWriteProtected:
 20519                           	callstack 0
 20520                           
 20521 ;; *************** function _SD_SPI_IsMediaPresent *****************
 20522 ;; Defined at:
 20523 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20524 ;; Parameters:    Size  Location     Type
 20525 ;;		None
 20526 ;; Auto vars:     Size  Location     Type
 20527 ;;		None
 20528 ;; Return value:  Size  Location     Type
 20529 ;;                  1    wreg      _Bool 
 20530 ;; Registers used:
 20531 ;;		wreg
 20532 ;; Tracked objects:
 20533 ;;		On entry : 0/0
 20534 ;;		On exit  : 0/0
 20535 ;;		Unchanged: 0/0
 20536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20541 ;;Total ram usage:        0 bytes
 20542 ;; Hardware stack levels used: 1
 20543 ;; Hardware stack levels required when called: 5
 20544 ;; This function calls:
 20545 ;;		Nothing
 20546 ;; This function is called by:
 20547 ;;		_disk_status
 20548 ;; This function uses a non-reentrant model
 20549 ;;
 20550                           
 20551                           	psect	text73
 20552   00A4F8                     __ptext73:
 20553                           	callstack 0
 20554   00A4F8                     _SD_SPI_IsMediaPresent:
 20555                           	callstack 21
 20556   00A4F8                     
 20557                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 20558   00A4F8  0E01               	movlw	1
 20559   00A4FA  0012               	return		;funcret
 20560   00A4FC                     __end_of_SD_SPI_IsMediaPresent:
 20561                           	callstack 0
 20562                           
 20563 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 20564 ;; Defined at:
 20565 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;		None
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;		None
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      _Bool 
 20572 ;; Registers used:
 20573 ;;		wreg, status,2
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20583 ;;Total ram usage:        0 bytes
 20584 ;; Hardware stack levels used: 1
 20585 ;; Hardware stack levels required when called: 5
 20586 ;; This function calls:
 20587 ;;		Nothing
 20588 ;; This function is called by:
 20589 ;;		_disk_status
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text74
 20594   00A48C                     __ptext74:
 20595                           	callstack 0
 20596   00A48C                     _SD_SPI_IsMediaInitialized:
 20597                           	callstack 21
 20598   00A48C                     
 20599                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 20600   00A48C  5053               	movf	(_mediaInformation+3)^0,w,c
 20601   00A48E  A4D8               	btfss	status,2,c
 20602   00A490  EF4C  F052         	goto	u17811
 20603   00A494  EF4F  F052         	goto	u17810
 20604   00A498                     u17811:
 20605   00A498  0E01               	movlw	1
 20606   00A49A  EF50  F052         	goto	u17820
 20607   00A49E                     u17810:
 20608   00A49E  0E00               	movlw	0
 20609   00A4A0                     u17820:
 20610   00A4A0  0012               	return		;funcret
 20611   00A4A2                     __end_of_SD_SPI_IsMediaInitialized:
 20612                           	callstack 0
 20613                           
 20614 ;; *************** function _disk_initialize *****************
 20615 ;; Defined at:
 20616 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;  pdrv            1    wreg     unsigned char 
 20619 ;; Auto vars:     Size  Location     Type
 20620 ;;  pdrv            1   84[BANK0 ] unsigned char 
 20621 ;;  stat            1   85[BANK0 ] unsigned char 
 20622 ;; Return value:  Size  Location     Type
 20623 ;;                  1    wreg      unsigned char 
 20624 ;; Registers used:
 20625 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20626 ;; Tracked objects:
 20627 ;;		On entry : 0/0
 20628 ;;		On exit  : 0/0
 20629 ;;		Unchanged: 0/0
 20630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20635 ;;Total ram usage:        2 bytes
 20636 ;; Hardware stack levels used: 1
 20637 ;; Hardware stack levels required when called: 8
 20638 ;; This function calls:
 20639 ;;		_SD_SPI_MediaInitialize
 20640 ;; This function is called by:
 20641 ;;		_find_volume
 20642 ;; This function uses a non-reentrant model
 20643 ;;
 20644                           
 20645                           	psect	text75
 20646   009F4E                     __ptext75:
 20647                           	callstack 0
 20648   009F4E                     _disk_initialize:
 20649                           	callstack 19
 20650                           
 20651                           ;incstack = 0
 20652                           ;disk_initialize@pdrv stored from wreg
 20653   009F4E  0100               	movlb	0	; () banked
 20654   009F50  6FB4               	movwf	disk_initialize@pdrv& (0+255),b
 20655   009F52                     
 20656                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 20657   009F52  0E01               	movlw	1
 20658   009F54  0100               	movlb	0	; () banked
 20659   009F56  6FB5               	movwf	disk_initialize@stat& (0+255),b
 20660                           
 20661                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 20662   009F58  EFC2  F04F         	goto	l15883
 20663   009F5C                     l15875:
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 20667   009F5C  EC92  F00B         	call	_SD_SPI_MediaInitialize	;wreg free
 20668   009F60  06E8               	decf	wreg,f,c
 20669   009F62  A4D8               	btfss	status,2,c
 20670   009F64  EFB6  F04F         	goto	u19131
 20671   009F68  EFB8  F04F         	goto	u19130
 20672   009F6C                     u19131:
 20673   009F6C  EFBD  F04F         	goto	l15879
 20674   009F70                     u19130:
 20675   009F70                     
 20676                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 20677   009F70  0E00               	movlw	0
 20678   009F72  0100               	movlb	0	; () banked
 20679   009F74  6FB5               	movwf	disk_initialize@stat& (0+255),b
 20680                           
 20681                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 20682   009F76  EFC9  F04F         	goto	l15885
 20683   009F7A                     l15879:
 20684                           
 20685                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 20686   009F7A  0E01               	movlw	1
 20687   009F7C  0100               	movlb	0	; () banked
 20688   009F7E  6FB5               	movwf	disk_initialize@stat& (0+255),b
 20689   009F80  EFC9  F04F         	goto	l15885
 20690   009F84                     l15883:
 20691                           
 20692                           ; BSR set to: 0
 20693   009F84  51B4               	movf	disk_initialize@pdrv& (0+255),w,b
 20694                           
 20695                           ; Switch size 1, requested type "simple"
 20696                           ; Number of cases is 1, Range of values is 0 to 0
 20697                           ; switch strategies available:
 20698                           ; Name         Instructions Cycles
 20699                           ; simple_byte            4     3 (average)
 20700                           ;	Chosen strategy is simple_byte
 20701   009F86  0A00               	xorlw	0	; case 0
 20702   009F88  B4D8               	btfsc	status,2,c
 20703   009F8A  EFAE  F04F         	goto	l15875
 20704   009F8E  EFC9  F04F         	goto	l15885
 20705   009F92                     l15885:
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 20709   009F92  51B5               	movf	disk_initialize@stat& (0+255),w,b
 20710   009F94                     
 20711                           ; BSR set to: 0
 20712   009F94  0012               	return		;funcret
 20713   009F96                     __end_of_disk_initialize:
 20714                           	callstack 0
 20715                           
 20716 ;; *************** function _SD_SPI_MediaInitialize *****************
 20717 ;; Defined at:
 20718 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20719 ;; Parameters:    Size  Location     Type
 20720 ;;		None
 20721 ;; Auto vars:     Size  Location     Type
 20722 ;;  CSDResponse    20   45[BANK0 ] unsigned char [20]
 20723 ;;  response        5   77[BANK0 ] struct .
 20724 ;;  c_size          4   73[BANK0 ] unsigned long 
 20725 ;;  timeout         2   82[BANK0 ] unsigned short 
 20726 ;;  count           1   72[BANK0 ] unsigned char 
 20727 ;;  block_len       1   71[BANK0 ] unsigned char 
 20728 ;;  index           1   70[BANK0 ] unsigned char 
 20729 ;;  c_size_mult     1   69[BANK0 ] unsigned char 
 20730 ;; Return value:  Size  Location     Type
 20731 ;;                  1    wreg      _Bool 
 20732 ;; Registers used:
 20733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20734 ;; Tracked objects:
 20735 ;;		On entry : 0/0
 20736 ;;		On exit  : 0/0
 20737 ;;		Unchanged: 0/0
 20738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20740 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20741 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20742 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20743 ;;Total ram usage:       50 bytes
 20744 ;; Hardware stack levels used: 1
 20745 ;; Hardware stack levels required when called: 7
 20746 ;; This function calls:
 20747 ;;		_SDFAST_open
 20748 ;;		_SDSLOW_open
 20749 ;;		_SD_SPI_DelayMilliseconds
 20750 ;;		_SD_SendCmd
 20751 ;;		_SPI1_Close
 20752 ;;		_SPI1_ExchangeByte
 20753 ;;		___lmul
 20754 ;; This function is called by:
 20755 ;;		_disk_initialize
 20756 ;; This function uses a non-reentrant model
 20757 ;;
 20758                           
 20759                           	psect	text76
 20760   001724                     __ptext76:
 20761                           	callstack 0
 20762   001724                     _SD_SPI_MediaInitialize:
 20763                           	callstack 19
 20764   001724                     
 20765                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 20766   001724  0E00               	movlw	0
 20767   001726  6E53               	movwf	(_mediaInformation+3)^0,c
 20768                           
 20769                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 20770   001728  0E00               	movlw	0
 20771   00172A  6E50               	movwf	_mediaInformation^0,c
 20772                           
 20773                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 20774   00172C  0E00               	movlw	0
 20775   00172E  6E54               	movwf	(_mediaInformation+4)^0,c
 20776   001730  0E00               	movlw	0
 20777   001732  6E55               	movwf	(_mediaInformation+5)^0,c
 20778   001734  0E00               	movlw	0
 20779   001736  6E56               	movwf	(_mediaInformation+6)^0,c
 20780   001738  0E00               	movlw	0
 20781   00173A  6E57               	movwf	(_mediaInformation+7)^0,c
 20782                           
 20783                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 20784   00173C  0E00               	movlw	0
 20785   00173E  6E58               	movwf	(_mediaInformation+8)^0,c
 20786   001740  8ABA               	bsf	186,5,c	;volatile
 20787   001742                     
 20788                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 20789   001742  0EA9               	movlw	low (_spiMaster+22)
 20790   001744  6EF6               	movwf	tblptrl,c
 20791   001746  0EFF               	movlw	high (_spiMaster+22)
 20792   001748  6EF7               	movwf	tblptrh,c
 20793   00174A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20794   00174A  6AF8               	clrf	tblptru,c
 20795   00174C                     	endif
 20796   00174C                     	if	0	;tblptru may be non-zero
 20797   00174C                     	endif
 20798   00174C  0009               	tblrd		*+
 20799   00174E  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 20800   001754  0009               	tblrd		*+
 20801   001756  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 20802   00175C  D802               	call	u18198
 20803   00175E  EFBB  F00B         	goto	u18199
 20804   001762                     u18198:
 20805   001762  0005               	push	
 20806   001764  6EFA               	movwf	pclath,c
 20807   001766  0100               	movlb	0	; () banked
 20808   001768  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 20809   00176A  6EFD               	movwf	tosl,c
 20810   00176C  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 20811   00176E  6EFE               	movwf	tosh,c
 20812   001770  6AFF               	clrf	tosu,c
 20813   001772  50FA               	movf	pclath,w,c
 20814   001774  0012               	return		;indir
 20815   001776                     u18199:
 20816   001776  0900               	iorlw	0
 20817   001778  A4D8               	btfss	status,2,c
 20818   00177A  EFC1  F00B         	goto	u18201
 20819   00177E  EFC3  F00B         	goto	u18200
 20820   001782                     u18201:
 20821   001782  EFC6  F00B         	goto	l15381
 20822   001786                     u18200:
 20823   001786                     l15377:
 20824                           
 20825                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 20826   001786  0E00               	movlw	0
 20827   001788  EF9F  F00F         	goto	l1611
 20828   00178C                     l15381:
 20829                           
 20830                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 20831   00178C  0E1E               	movlw	30
 20832   00178E  EC7A  F04C         	call	_SD_SPI_DelayMilliseconds
 20833   001792                     
 20834                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 20835   001792  0E00               	movlw	0
 20836   001794  0100               	movlb	0	; () banked
 20837   001796  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 20838   001798  0E64               	movlw	100
 20839   00179A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 20840   00179C                     l15385:
 20841                           
 20842                           ; BSR set to: 0
 20843   00179C  8ABA               	bsf	186,5,c	;volatile
 20844   00179E                     
 20845                           ; BSR set to: 0
 20846                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 20847   00179E  0E97               	movlw	low (_spiMaster+4)
 20848   0017A0  6EF6               	movwf	tblptrl,c
 20849   0017A2  0EFF               	movlw	high (_spiMaster+4)
 20850   0017A4  6EF7               	movwf	tblptrh,c
 20851   0017A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20852   0017A6  6AF8               	clrf	tblptru,c
 20853   0017A8                     	endif
 20854   0017A8                     	if	0	;tblptru may be non-zero
 20855   0017A8                     	endif
 20856   0017A8  0009               	tblrd		*+
 20857   0017AA  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 20858   0017B0  0009               	tblrd		*+
 20859   0017B2  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 20860   0017B8  D802               	call	u18218
 20861   0017BA  EFE9  F00B         	goto	u18219
 20862   0017BE                     u18218:
 20863   0017BE  0005               	push	
 20864   0017C0  6EFA               	movwf	pclath,c
 20865   0017C2  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 20866   0017C4  6EFD               	movwf	tosl,c
 20867   0017C6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 20868   0017C8  6EFE               	movwf	tosh,c
 20869   0017CA  6AFF               	clrf	tosu,c
 20870   0017CC  50FA               	movf	pclath,w,c
 20871   0017CE  0EFF               	movlw	255
 20872   0017D0  0012               	return		;indir
 20873   0017D2                     u18219:
 20874   0017D2  9ABA               	bcf	186,5,c	;volatile
 20875   0017D4                     
 20876                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 20877   0017D4  0100               	movlb	0	; () banked
 20878   0017D6  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 20879   0017D8  A0D8               	btfss	status,0,c
 20880   0017DA  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 20881   0017DC                     
 20882                           ; BSR set to: 0
 20883                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 20884   0017DC  0E00               	movlw	0
 20885   0017DE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 20886   0017E0  0E00               	movlw	0
 20887   0017E2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 20888   0017E4  0E00               	movlw	0
 20889   0017E6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 20890   0017E8  0E00               	movlw	0
 20891   0017EA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 20892   0017EC  0E00               	movlw	0
 20893   0017EE  EC82  F01C         	call	_SD_SendCmd
 20894   0017F2  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 20895   0017F6  0E04               	movlw	4
 20896   0017F8                     u18221:
 20897   0017F8  006F FFAF FFDB     	movff	plusw0,plusw2
 20898   0017FE  06E8               	decf	wreg,f,c
 20899   001800  E2FB               	bc	u18221
 20900   001802                     
 20901                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 20902   001802  0100               	movlb	0	; () banked
 20903   001804  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 20904   001806  B4D8               	btfsc	status,2,c
 20905   001808  EF08  F00C         	goto	u18231
 20906   00180C  EF0A  F00C         	goto	u18230
 20907   001810                     u18231:
 20908   001810  EF13  F00C         	goto	l15399
 20909   001814                     u18230:
 20910   001814                     
 20911                           ; BSR set to: 0
 20912   001814  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 20913   001816  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 20914   001818  A4D8               	btfss	status,2,c
 20915   00181A  EF11  F00C         	goto	u18241
 20916   00181E  EF13  F00C         	goto	u18240
 20917   001822                     u18241:
 20918   001822  EFCE  F00B         	goto	l15385
 20919   001826                     u18240:
 20920   001826                     l15399:
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 20924   001826  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 20925   001828  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 20926   00182A  A4D8               	btfss	status,2,c
 20927   00182C  EF1A  F00C         	goto	u18251
 20928   001830  EF1C  F00C         	goto	u18250
 20929   001834                     u18251:
 20930   001834  EF80  F00C         	goto	l15423
 20931   001838                     u18250:
 20932   001838                     
 20933                           ; BSR set to: 0
 20934   001838  8ABA               	bsf	186,5,c	;volatile
 20935   00183A                     
 20936                           ; BSR set to: 0
 20937                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 20938   00183A  0E97               	movlw	low (_spiMaster+4)
 20939   00183C  6EF6               	movwf	tblptrl,c
 20940   00183E  0EFF               	movlw	high (_spiMaster+4)
 20941   001840  6EF7               	movwf	tblptrh,c
 20942   001842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20943   001842  6AF8               	clrf	tblptru,c
 20944   001844                     	endif
 20945   001844                     	if	0	;tblptru may be non-zero
 20946   001844                     	endif
 20947   001844  0009               	tblrd		*+
 20948   001846  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 20949   00184C  0009               	tblrd		*+
 20950   00184E  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 20951   001854  D802               	call	u18268
 20952   001856  EF37  F00C         	goto	u18269
 20953   00185A                     u18268:
 20954   00185A  0005               	push	
 20955   00185C  6EFA               	movwf	pclath,c
 20956   00185E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 20957   001860  6EFD               	movwf	tosl,c
 20958   001862  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 20959   001864  6EFE               	movwf	tosh,c
 20960   001866  6AFF               	clrf	tosu,c
 20961   001868  50FA               	movf	pclath,w,c
 20962   00186A  0EFF               	movlw	255
 20963   00186C  0012               	return		;indir
 20964   00186E                     u18269:
 20965   00186E  9ABA               	bcf	186,5,c	;volatile
 20966   001870                     
 20967                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 20968   001870  0E00               	movlw	0
 20969   001872  0100               	movlb	0	; () banked
 20970   001874  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 20971   001876  0E00               	movlw	0
 20972   001878  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 20973   00187A  0E00               	movlw	0
 20974   00187C  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 20975   00187E  0E00               	movlw	0
 20976   001880  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 20977   001882  0E05               	movlw	5
 20978   001884  EC82  F01C         	call	_SD_SendCmd
 20979   001888                     
 20980                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 20981   001888  0E00               	movlw	0
 20982   00188A  0100               	movlb	0	; () banked
 20983   00188C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 20984   00188E  0E00               	movlw	0
 20985   001890  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 20986   001892  0E00               	movlw	0
 20987   001894  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 20988   001896  0E00               	movlw	0
 20989   001898  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 20990   00189A  0E00               	movlw	0
 20991   00189C  EC82  F01C         	call	_SD_SendCmd
 20992   0018A0  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 20993   0018A4  0E04               	movlw	4
 20994   0018A6                     u18271:
 20995   0018A6  006F FFAF FFDB     	movff	plusw0,plusw2
 20996   0018AC  06E8               	decf	wreg,f,c
 20997   0018AE  E2FB               	bc	u18271
 20998   0018B0                     
 20999                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 21000   0018B0  0100               	movlb	0	; () banked
 21001   0018B2  05AD               	decf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21002   0018B4  B4D8               	btfsc	status,2,c
 21003   0018B6  EF5F  F00C         	goto	u18281
 21004   0018BA  EF61  F00C         	goto	u18280
 21005   0018BE                     u18281:
 21006   0018BE  EF80  F00C         	goto	l15423
 21007   0018C2                     u18280:
 21008   0018C2                     
 21009                           ; BSR set to: 0
 21010                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21011   0018C2  0E02               	movlw	2
 21012   0018C4  6E50               	movwf	_mediaInformation^0,c
 21013   0018C6                     
 21014                           ; BSR set to: 0
 21015   0018C6  8ABA               	bsf	186,5,c	;volatile
 21016   0018C8                     
 21017                           ; BSR set to: 0
 21018                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 21019   0018C8  0E93               	movlw	low _spiMaster
 21020   0018CA  6EF6               	movwf	tblptrl,c
 21021   0018CC                     	if	1	;There is more than 1 active tblptr byte
 21022   0018CC  0EFF               	movlw	high _spiMaster
 21023   0018CE  6EF7               	movwf	tblptrh,c
 21024   0018D0                     	endif
 21025   0018D0                     	if	1	;There are 3 active tblptr bytes
 21026   0018D0  0E00               	movlw	low (_spiMaster shr (0+16))
 21027   0018D2  6EF8               	movwf	tblptru,c
 21028   0018D4                     	endif
 21029   0018D4  0009               	tblrd		*+
 21030   0018D6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21031   0018DC  0009               	tblrd		*+
 21032   0018DE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21033   0018E4  D802               	call	u18298
 21034   0018E6  EF7E  F00C         	goto	u18299
 21035   0018EA                     u18298:
 21036   0018EA  0005               	push	
 21037   0018EC  6EFA               	movwf	pclath,c
 21038   0018EE  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21039   0018F0  6EFD               	movwf	tosl,c
 21040   0018F2  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21041   0018F4  6EFE               	movwf	tosh,c
 21042   0018F6  6AFF               	clrf	tosu,c
 21043   0018F8  50FA               	movf	pclath,w,c
 21044   0018FA  0012               	return		;indir
 21045   0018FC                     u18299:
 21046   0018FC  EFC3  F00B         	goto	l15377
 21047   001900                     l15423:
 21048                           
 21049                           ; BSR set to: 0
 21050                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 21051   001900  0EAA               	movlw	170
 21052   001902  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21053   001904  0E01               	movlw	1
 21054   001906  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21055   001908  0E00               	movlw	0
 21056   00190A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21057   00190C  0E00               	movlw	0
 21058   00190E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21059   001910  0E02               	movlw	2
 21060   001912  EC82  F01C         	call	_SD_SendCmd
 21061   001916  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21062   00191A  0E04               	movlw	4
 21063   00191C                     u18301:
 21064   00191C  006F FFAF FFDB     	movff	plusw0,plusw2
 21065   001922  06E8               	decf	wreg,f,c
 21066   001924  E2FB               	bc	u18301
 21067   001926                     
 21068                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 21069   001926  EE20  F0AE         	lfsr	2,SD_SPI_MediaInitialize@response+1
 21070   00192A  0EFF               	movlw	255
 21071   00192C  14DE               	andwf	postinc2,w,c
 21072   00192E  0100               	movlb	0	; () banked
 21073   001930  6F82               	movwf	??_SD_SPI_MediaInitialize& (0+255),b
 21074   001932  0E0F               	movlw	15
 21075   001934  14DE               	andwf	postinc2,w,c
 21076   001936  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21077   001938  0E00               	movlw	0
 21078   00193A  14DE               	andwf	postinc2,w,c
 21079   00193C  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 21080   00193E  0E00               	movlw	0
 21081   001940  14DE               	andwf	postinc2,w,c
 21082   001942  6F85               	movwf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 21083   001944  0EAA               	movlw	170
 21084   001946  1982               	xorwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21085   001948  E108               	bnz	u18311
 21086   00194A  0583               	decf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21087   00194C  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 21088   00194E  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 21089   001950  A4D8               	btfss	status,2,c
 21090   001952  EFAD  F00C         	goto	u18311
 21091   001956  EFAF  F00C         	goto	u18310
 21092   00195A                     u18311:
 21093   00195A  EF2B  F00D         	goto	l15459
 21094   00195E                     u18310:
 21095   00195E                     
 21096                           ; BSR set to: 0
 21097   00195E  B5AD               	btfsc	SD_SPI_MediaInitialize@response& (0+255),2,b
 21098   001960  EFB4  F00C         	goto	u18321
 21099   001964  EFB6  F00C         	goto	u18320
 21100   001968                     u18321:
 21101   001968  EF2B  F00D         	goto	l15459
 21102   00196C                     u18320:
 21103   00196C                     
 21104                           ; BSR set to: 0
 21105   00196C  0E00               	movlw	0
 21106   00196E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21107   001970  0E00               	movlw	0
 21108   001972  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21109   001974  0E00               	movlw	0
 21110   001976  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21111   001978  0E00               	movlw	0
 21112   00197A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21113   00197C  0E10               	movlw	16
 21114   00197E  EC82  F01C         	call	_SD_SendCmd
 21115   001982                     
 21116                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 21117   001982  0E00               	movlw	0
 21118   001984  0100               	movlb	0	; () banked
 21119   001986  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21120   001988  0E00               	movlw	0
 21121   00198A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21122   00198C                     l15437:
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 21126   00198C  0E00               	movlw	0
 21127   00198E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21128   001990  0E00               	movlw	0
 21129   001992  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21130   001994  0E00               	movlw	0
 21131   001996  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21132   001998  0E00               	movlw	0
 21133   00199A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21134   00199C  0E0F               	movlw	15
 21135   00199E  EC82  F01C         	call	_SD_SendCmd
 21136                           
 21137                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 21138   0019A2  0E00               	movlw	0
 21139   0019A4  0100               	movlb	0	; () banked
 21140   0019A6  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21141   0019A8  0E00               	movlw	0
 21142   0019AA  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21143   0019AC  0E00               	movlw	0
 21144   0019AE  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21145   0019B0  0E40               	movlw	64
 21146   0019B2  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21147   0019B4  0E12               	movlw	18
 21148   0019B6  EC82  F01C         	call	_SD_SendCmd
 21149   0019BA  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21150   0019BE  0E04               	movlw	4
 21151   0019C0                     u18331:
 21152   0019C0  006F FFAF FFDB     	movff	plusw0,plusw2
 21153   0019C6  06E8               	decf	wreg,f,c
 21154   0019C8  E2FB               	bc	u18331
 21155   0019CA                     
 21156                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 21157   0019CA  0100               	movlb	0	; () banked
 21158   0019CC  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21159   0019CE  A4D8               	btfss	status,2,c
 21160   0019D0  EFEC  F00C         	goto	u18341
 21161   0019D4  EFEE  F00C         	goto	u18340
 21162   0019D8                     u18341:
 21163   0019D8  EFF0  F00C         	goto	l15443
 21164   0019DC                     u18340:
 21165   0019DC  EFFC  F00C         	goto	l15447
 21166   0019E0                     l15443:
 21167                           
 21168                           ; BSR set to: 0
 21169                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 21170   0019E0  4BB2               	infsnz	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21171   0019E2  2BB3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21172   0019E4                     
 21173                           ; BSR set to: 0
 21174   0019E4  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21175   0019E6  E106               	bnz	u18351
 21176   0019E8  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21177   0019EA  A4D8               	btfss	status,2,c
 21178   0019EC  EFFA  F00C         	goto	u18351
 21179   0019F0  EFFC  F00C         	goto	u18350
 21180   0019F4                     u18351:
 21181   0019F4  EFC6  F00C         	goto	l15437
 21182   0019F8                     u18350:
 21183   0019F8                     l15447:
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 21187   0019F8  29B2               	incf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21188   0019FA  E106               	bnz	u18361
 21189   0019FC  29B3               	incf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21190   0019FE  A4D8               	btfss	status,2,c
 21191   001A00  EF04  F00D         	goto	u18361
 21192   001A04  EF06  F00D         	goto	u18360
 21193   001A08                     u18361:
 21194   001A08  EF08  F00D         	goto	l15451
 21195   001A0C                     u18360:
 21196   001A0C                     
 21197                           ; BSR set to: 0
 21198                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21199   001A0C  0E02               	movlw	2
 21200   001A0E  6E50               	movwf	_mediaInformation^0,c
 21201   001A10                     l15451:
 21202                           
 21203                           ; BSR set to: 0
 21204                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 21205   001A10  0E00               	movlw	0
 21206   001A12  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21207   001A14  0E00               	movlw	0
 21208   001A16  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21209   001A18  0E00               	movlw	0
 21210   001A1A  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21211   001A1C  0E00               	movlw	0
 21212   001A1E  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21213   001A20  0E10               	movlw	16
 21214   001A22  EC82  F01C         	call	_SD_SendCmd
 21215   001A26  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21216   001A2A  0E04               	movlw	4
 21217   001A2C                     u18371:
 21218   001A2C  006F FFAF FFDB     	movff	plusw0,plusw2
 21219   001A32  06E8               	decf	wreg,f,c
 21220   001A34  E2FB               	bc	u18371
 21221   001A36                     
 21222                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 21223   001A36  0100               	movlb	0	; () banked
 21224   001A38  ADB1               	btfss	(SD_SPI_MediaInitialize@response+4)& (0+255),6,b
 21225   001A3A  EF21  F00D         	goto	u18381
 21226   001A3E  EF23  F00D         	goto	u18380
 21227   001A42                     u18381:
 21228   001A42  EF27  F00D         	goto	l15457
 21229   001A46                     u18380:
 21230   001A46                     
 21231                           ; BSR set to: 0
 21232                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 21233   001A46  0E01               	movlw	1
 21234   001A48  6E58               	movwf	(_mediaInformation+8)^0,c
 21235                           
 21236                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 21237   001A4A  EF69  F00D         	goto	l1648
 21238   001A4E                     l15457:
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 21242   001A4E  0E00               	movlw	0
 21243   001A50  6E58               	movwf	(_mediaInformation+8)^0,c
 21244   001A52  EF69  F00D         	goto	l1648
 21245   001A56                     l15459:
 21246                           
 21247                           ; BSR set to: 0
 21248                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 21249   001A56  0E01               	movlw	1
 21250   001A58  EC7A  F04C         	call	_SD_SPI_DelayMilliseconds
 21251   001A5C  9ABA               	bcf	186,5,c	;volatile
 21252   001A5E                     
 21253                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 21254   001A5E  0E00               	movlw	0
 21255   001A60  6E58               	movwf	(_mediaInformation+8)^0,c
 21256   001A62                     
 21257                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 21258   001A62  0E1F               	movlw	31
 21259   001A64  0100               	movlb	0	; () banked
 21260   001A66  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21261   001A68  69B2               	setf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21262   001A6A                     l15467:
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 21266   001A6A  0E00               	movlw	0
 21267   001A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21268   001A6E  0E00               	movlw	0
 21269   001A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21270   001A72  0E00               	movlw	0
 21271   001A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21272   001A76  0E00               	movlw	0
 21273   001A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21274   001A7A  0E01               	movlw	1
 21275   001A7C  EC82  F01C         	call	_SD_SendCmd
 21276   001A80  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21277   001A84  0E04               	movlw	4
 21278   001A86                     u18391:
 21279   001A86  006F FFAF FFDB     	movff	plusw0,plusw2
 21280   001A8C  06E8               	decf	wreg,f,c
 21281   001A8E  E2FB               	bc	u18391
 21282   001A90                     
 21283                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 21284   001A90  0100               	movlb	0	; () banked
 21285   001A92  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21286   001A94  A0D8               	btfss	status,0,c
 21287   001A96  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21288   001A98                     
 21289                           ; BSR set to: 0
 21290                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 21291   001A98  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21292   001A9A  B4D8               	btfsc	status,2,c
 21293   001A9C  EF52  F00D         	goto	u18401
 21294   001AA0  EF54  F00D         	goto	u18400
 21295   001AA4                     u18401:
 21296   001AA4  EF5D  F00D         	goto	l15475
 21297   001AA8                     u18400:
 21298   001AA8                     
 21299                           ; BSR set to: 0
 21300   001AA8  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21301   001AAA  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21302   001AAC  A4D8               	btfss	status,2,c
 21303   001AAE  EF5B  F00D         	goto	u18411
 21304   001AB2  EF5D  F00D         	goto	u18410
 21305   001AB6                     u18411:
 21306   001AB6  EF35  F00D         	goto	l15467
 21307   001ABA                     u18410:
 21308   001ABA                     l15475:
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 21312   001ABA  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21313   001ABC  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21314   001ABE  A4D8               	btfss	status,2,c
 21315   001AC0  EF64  F00D         	goto	u18421
 21316   001AC4  EF66  F00D         	goto	u18420
 21317   001AC8                     u18421:
 21318   001AC8  EF69  F00D         	goto	l1648
 21319   001ACC                     u18420:
 21320   001ACC                     
 21321                           ; BSR set to: 0
 21322                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21323   001ACC  0E02               	movlw	2
 21324   001ACE  6E50               	movwf	_mediaInformation^0,c
 21325   001AD0                     
 21326                           ; BSR set to: 0
 21327   001AD0  8ABA               	bsf	186,5,c	;volatile
 21328   001AD2                     l1648:
 21329                           
 21330                           ; BSR set to: 0
 21331   001AD2  8ABA               	bsf	186,5,c	;volatile
 21332   001AD4                     
 21333                           ; BSR set to: 0
 21334                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 21335   001AD4  0E93               	movlw	low _spiMaster
 21336   001AD6  6EF6               	movwf	tblptrl,c
 21337   001AD8                     	if	1	;There is more than 1 active tblptr byte
 21338   001AD8  0EFF               	movlw	high _spiMaster
 21339   001ADA  6EF7               	movwf	tblptrh,c
 21340   001ADC                     	endif
 21341   001ADC                     	if	1	;There are 3 active tblptr bytes
 21342   001ADC  0E00               	movlw	low (_spiMaster shr (0+16))
 21343   001ADE  6EF8               	movwf	tblptru,c
 21344   001AE0                     	endif
 21345   001AE0  0009               	tblrd		*+
 21346   001AE2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21347   001AE8  0009               	tblrd		*+
 21348   001AEA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21349   001AF0  D802               	call	u18438
 21350   001AF2  EF84  F00D         	goto	u18439
 21351   001AF6                     u18438:
 21352   001AF6  0005               	push	
 21353   001AF8  6EFA               	movwf	pclath,c
 21354   001AFA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21355   001AFC  6EFD               	movwf	tosl,c
 21356   001AFE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21357   001B00  6EFE               	movwf	tosh,c
 21358   001B02  6AFF               	clrf	tosu,c
 21359   001B04  50FA               	movf	pclath,w,c
 21360   001B06  0012               	return		;indir
 21361   001B08                     u18439:
 21362   001B08                     
 21363                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 21364   001B08  0E95               	movlw	low (_spiMaster+2)
 21365   001B0A  6EF6               	movwf	tblptrl,c
 21366   001B0C  0EFF               	movlw	high (_spiMaster+2)
 21367   001B0E  6EF7               	movwf	tblptrh,c
 21368   001B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21369   001B10  6AF8               	clrf	tblptru,c
 21370   001B12                     	endif
 21371   001B12                     	if	0	;tblptru may be non-zero
 21372   001B12                     	endif
 21373   001B12  0009               	tblrd		*+
 21374   001B14  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21375   001B1A  0009               	tblrd		*+
 21376   001B1C  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21377   001B22  D802               	call	u18448
 21378   001B24  EF9E  F00D         	goto	u18449
 21379   001B28                     u18448:
 21380   001B28  0005               	push	
 21381   001B2A  6EFA               	movwf	pclath,c
 21382   001B2C  0100               	movlb	0	; () banked
 21383   001B2E  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21384   001B30  6EFD               	movwf	tosl,c
 21385   001B32  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21386   001B34  6EFE               	movwf	tosh,c
 21387   001B36  6AFF               	clrf	tosu,c
 21388   001B38  50FA               	movf	pclath,w,c
 21389   001B3A  0012               	return		;indir
 21390   001B3C                     u18449:
 21391   001B3C  0900               	iorlw	0
 21392   001B3E  A4D8               	btfss	status,2,c
 21393   001B40  EFA4  F00D         	goto	u18451
 21394   001B44  EFA6  F00D         	goto	u18450
 21395   001B48                     u18451:
 21396   001B48  EFA8  F00D         	goto	l1651
 21397   001B4C                     u18450:
 21398   001B4C  EFC3  F00B         	goto	l15377
 21399   001B50                     l1651:
 21400   001B50  9ABA               	bcf	186,5,c	;volatile
 21401   001B52                     
 21402                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 21403   001B52  0E00               	movlw	0
 21404   001B54  0100               	movlb	0	; () banked
 21405   001B56  6FB3               	movwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),b
 21406   001B58  0E14               	movlw	20
 21407   001B5A  6FB2               	movwf	SD_SPI_MediaInitialize@timeout& (0+255),b
 21408   001B5C                     l15491:
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 21412   001B5C  0E00               	movlw	0
 21413   001B5E  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21414   001B60  0E00               	movlw	0
 21415   001B62  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21416   001B64  0E00               	movlw	0
 21417   001B66  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21418   001B68  0E00               	movlw	0
 21419   001B6A  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21420   001B6C  0E03               	movlw	3
 21421   001B6E  EC82  F01C         	call	_SD_SendCmd
 21422   001B72  EE20  F0AD         	lfsr	2,SD_SPI_MediaInitialize@response
 21423   001B76  0E04               	movlw	4
 21424   001B78                     u18461:
 21425   001B78  006F FFAF FFDB     	movff	plusw0,plusw2
 21426   001B7E  06E8               	decf	wreg,f,c
 21427   001B80  E2FB               	bc	u18461
 21428   001B82                     
 21429                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 21430   001B82  0100               	movlb	0	; () banked
 21431   001B84  07B2               	decf	SD_SPI_MediaInitialize@timeout& (0+255),f,b
 21432   001B86  A0D8               	btfss	status,0,c
 21433   001B88  07B3               	decf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),f,b
 21434   001B8A                     
 21435                           ; BSR set to: 0
 21436                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 21437   001B8A  51AD               	movf	SD_SPI_MediaInitialize@response& (0+255),w,b
 21438   001B8C  B4D8               	btfsc	status,2,c
 21439   001B8E  EFCB  F00D         	goto	u18471
 21440   001B92  EFCD  F00D         	goto	u18470
 21441   001B96                     u18471:
 21442   001B96  EFD6  F00D         	goto	l15499
 21443   001B9A                     u18470:
 21444   001B9A                     
 21445                           ; BSR set to: 0
 21446   001B9A  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21447   001B9C  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21448   001B9E  A4D8               	btfss	status,2,c
 21449   001BA0  EFD4  F00D         	goto	u18481
 21450   001BA4  EFD6  F00D         	goto	u18480
 21451   001BA8                     u18481:
 21452   001BA8  EFAE  F00D         	goto	l15491
 21453   001BAC                     u18480:
 21454   001BAC                     l15499:
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 21458   001BAC  51B2               	movf	SD_SPI_MediaInitialize@timeout& (0+255),w,b
 21459   001BAE  11B3               	iorwf	(SD_SPI_MediaInitialize@timeout+1)& (0+255),w,b
 21460   001BB0  A4D8               	btfss	status,2,c
 21461   001BB2  EFDD  F00D         	goto	u18491
 21462   001BB6  EFDF  F00D         	goto	u18490
 21463   001BBA                     u18491:
 21464   001BBA  EFFE  F00D         	goto	l15511
 21465   001BBE                     u18490:
 21466   001BBE                     
 21467                           ; BSR set to: 0
 21468                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 21469   001BBE  0E02               	movlw	2
 21470   001BC0  6E50               	movwf	_mediaInformation^0,c
 21471   001BC2                     
 21472                           ; BSR set to: 0
 21473   001BC2  8ABA               	bsf	186,5,c	;volatile
 21474   001BC4                     
 21475                           ; BSR set to: 0
 21476                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 21477   001BC4  0E93               	movlw	low _spiMaster
 21478   001BC6  6EF6               	movwf	tblptrl,c
 21479   001BC8                     	if	1	;There is more than 1 active tblptr byte
 21480   001BC8  0EFF               	movlw	high _spiMaster
 21481   001BCA  6EF7               	movwf	tblptrh,c
 21482   001BCC                     	endif
 21483   001BCC                     	if	1	;There are 3 active tblptr bytes
 21484   001BCC  0E00               	movlw	low (_spiMaster shr (0+16))
 21485   001BCE  6EF8               	movwf	tblptru,c
 21486   001BD0                     	endif
 21487   001BD0  0009               	tblrd		*+
 21488   001BD2  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21489   001BD8  0009               	tblrd		*+
 21490   001BDA  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21491   001BE0  D802               	call	u18508
 21492   001BE2  EFFC  F00D         	goto	u18509
 21493   001BE6                     u18508:
 21494   001BE6  0005               	push	
 21495   001BE8  6EFA               	movwf	pclath,c
 21496   001BEA  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21497   001BEC  6EFD               	movwf	tosl,c
 21498   001BEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21499   001BF0  6EFE               	movwf	tosh,c
 21500   001BF2  6AFF               	clrf	tosu,c
 21501   001BF4  50FA               	movf	pclath,w,c
 21502   001BF6  0012               	return		;indir
 21503   001BF8                     u18509:
 21504   001BF8  EFC3  F00B         	goto	l15377
 21505   001BFC                     l15511:
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 21509   001BFC  0E00               	movlw	0
 21510   001BFE  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 21511                           
 21512                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 21513   001C00  0E00               	movlw	0
 21514   001C02  6FA8               	movwf	SD_SPI_MediaInitialize@count& (0+255),b
 21515   001C04                     l15517:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 21519   001C04  51A6               	movf	SD_SPI_MediaInitialize@index& (0+255),w,b
 21520   001C06  0F8D               	addlw	low SD_SPI_MediaInitialize@CSDResponse
 21521   001C08  6ED9               	movwf	fsr2l,c
 21522   001C0A  6ADA               	clrf	fsr2h,c
 21523   001C0C  0E97               	movlw	low (_spiMaster+4)
 21524   001C0E  6EF6               	movwf	tblptrl,c
 21525   001C10  0EFF               	movlw	high (_spiMaster+4)
 21526   001C12  6EF7               	movwf	tblptrh,c
 21527   001C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21528   001C14  6AF8               	clrf	tblptru,c
 21529   001C16                     	endif
 21530   001C16                     	if	0	;tblptru may be non-zero
 21531   001C16                     	endif
 21532   001C16  0009               	tblrd		*+
 21533   001C18  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21534   001C1E  0009               	tblrd		*+
 21535   001C20  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21536   001C26  D802               	call	u18518
 21537   001C28  EF20  F00E         	goto	u18519
 21538   001C2C                     u18518:
 21539   001C2C  0005               	push	
 21540   001C2E  6EFA               	movwf	pclath,c
 21541   001C30  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21542   001C32  6EFD               	movwf	tosl,c
 21543   001C34  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21544   001C36  6EFE               	movwf	tosh,c
 21545   001C38  6AFF               	clrf	tosu,c
 21546   001C3A  50FA               	movf	pclath,w,c
 21547   001C3C  0EFF               	movlw	255
 21548   001C3E  0012               	return		;indir
 21549   001C40                     u18519:
 21550   001C40  6EDF               	movwf	indf2,c
 21551   001C42                     
 21552                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 21553   001C42  0100               	movlb	0	; () banked
 21554   001C44  2BA6               	incf	SD_SPI_MediaInitialize@index& (0+255),f,b
 21555   001C46                     
 21556                           ; BSR set to: 0
 21557                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 21558   001C46  51A8               	movf	SD_SPI_MediaInitialize@count& (0+255),w,b
 21559   001C48  A4D8               	btfss	status,2,c
 21560   001C4A  EF29  F00E         	goto	u18521
 21561   001C4E  EF2B  F00E         	goto	u18520
 21562   001C52                     u18521:
 21563   001C52  EF36  F00E         	goto	l15527
 21564   001C56                     u18520:
 21565   001C56                     
 21566                           ; BSR set to: 0
 21567   001C56  0EFE               	movlw	254
 21568   001C58  198D               	xorwf	SD_SPI_MediaInitialize@CSDResponse& (0+255),w,b
 21569   001C5A  A4D8               	btfss	status,2,c
 21570   001C5C  EF32  F00E         	goto	u18531
 21571   001C60  EF34  F00E         	goto	u18530
 21572   001C64                     u18531:
 21573   001C64  EF36  F00E         	goto	l15527
 21574   001C68                     u18530:
 21575   001C68                     
 21576                           ; BSR set to: 0
 21577                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 21578   001C68  0E00               	movlw	0
 21579   001C6A  6FA6               	movwf	SD_SPI_MediaInitialize@index& (0+255),b
 21580   001C6C                     l15527:
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 21584   001C6C  2BA8               	incf	SD_SPI_MediaInitialize@count& (0+255),f,b
 21585   001C6E                     
 21586                           ; BSR set to: 0
 21587   001C6E  0E13               	movlw	19
 21588   001C70  65A8               	cpfsgt	SD_SPI_MediaInitialize@count& (0+255),b
 21589   001C72  EF3D  F00E         	goto	u18541
 21590   001C76  EF3F  F00E         	goto	u18540
 21591   001C7A                     u18541:
 21592   001C7A  EF02  F00E         	goto	l15517
 21593   001C7E                     u18540:
 21594   001C7E                     
 21595                           ; BSR set to: 0
 21596                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 21597   001C7E  0E02               	movlw	2
 21598   001C80  6E52               	movwf	(_mediaInformation+2)^0,c
 21599   001C82  0E00               	movlw	0
 21600   001C84  6E51               	movwf	(_mediaInformation+1)^0,c
 21601   001C86                     
 21602                           ; BSR set to: 0
 21603                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 21604   001C86  C08D  F082         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 21605   001C8A  0EC0               	movlw	192
 21606   001C8C  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21607   001C8E  B4D8               	btfsc	status,2,c
 21608   001C90  EF4C  F00E         	goto	u18551
 21609   001C94  EF4E  F00E         	goto	u18550
 21610   001C98                     u18551:
 21611   001C98  EF94  F00E         	goto	l15537
 21612   001C9C                     u18550:
 21613   001C9C                     
 21614                           ; BSR set to: 0
 21615                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 21616   001C9C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 21617   001C9E  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21618   001CA0  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 21619   001CA2  C094  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 21620   001CA6  0E3F               	movlw	63
 21621   001CA8  1784               	andwf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 21622   001CAA  C084  F085         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 21623   001CAE  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 21624   001CB0  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 21625   001CB2  6B88               	clrf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 21626   001CB4  C086  F088         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 21627   001CB8  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 21628   001CBC  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 21629   001CBE  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 21630   001CC0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21631   001CC2  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 21632   001CC4  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 21633   001CC6  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21634   001CC8  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 21635   001CCA  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 21636   001CCC  0E00               	movlw	0
 21637   001CCE  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 21638   001CD0  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 21639   001CD2  0E00               	movlw	0
 21640   001CD4  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 21641   001CD6  6F8C               	movwf	(??_SD_SPI_MediaInitialize+10)& (0+255),b
 21642   001CD8  5196               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)& (0+255),w,b
 21643   001CDA  1189               	iorwf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 21644   001CDC  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 21645   001CDE  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 21646   001CE0  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 21647   001CE2  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 21648   001CE4  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 21649   001CE6  518C               	movf	(??_SD_SPI_MediaInitialize+10)& (0+255),w,b
 21650   001CE8  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 21651                           
 21652                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 21653   001CEA  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 21654   001CEE  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 21655   001CF2  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 21656   001CF6  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 21657   001CFA  0E0A               	movlw	10
 21658   001CFC                     u18565:
 21659   001CFC  90D8               	bcf	status,0,c
 21660   001CFE  3782               	rlcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21661   001D00  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 21662   001D02  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 21663   001D04  3785               	rlcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 21664   001D06  2EE8               	decfsz	wreg,f,c
 21665   001D08  EF7E  F00E         	goto	u18565
 21666   001D0C  0EFF               	movlw	255
 21667   001D0E  2582               	addwf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21668   001D10  6E54               	movwf	(_mediaInformation+4)^0,c
 21669   001D12  0E03               	movlw	3
 21670   001D14  2183               	addwfc	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21671   001D16  6E55               	movwf	(_mediaInformation+5)^0,c
 21672   001D18  0E00               	movlw	0
 21673   001D1A  2184               	addwfc	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 21674   001D1C  6E56               	movwf	(_mediaInformation+6)^0,c
 21675   001D1E  0E00               	movlw	0
 21676   001D20  2185               	addwfc	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 21677   001D22  6E57               	movwf	(_mediaInformation+7)^0,c
 21678                           
 21679                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 21680   001D24  EF44  F00F         	goto	l15543
 21681   001D28                     l15537:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 21685   001D28  5194               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)& (0+255),w,b
 21686   001D2A  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21687   001D2C  6B82               	clrf	??_SD_SPI_MediaInitialize& (0+255),b
 21688   001D2E  C093  F084         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 21689   001D32  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 21690   001D34  6B86               	clrf	(??_SD_SPI_MediaInitialize+4)& (0+255),b
 21691   001D36  6B87               	clrf	(??_SD_SPI_MediaInitialize+5)& (0+255),b
 21692   001D38  C085  F087         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 21693   001D3C  C084  F086         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 21694   001D40  6B85               	clrf	(??_SD_SPI_MediaInitialize+3)& (0+255),b
 21695   001D42  6B84               	clrf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 21696   001D44  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21697   001D46  1184               	iorwf	(??_SD_SPI_MediaInitialize+2)& (0+255),w,b
 21698   001D48  6F88               	movwf	(??_SD_SPI_MediaInitialize+6)& (0+255),b
 21699   001D4A  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21700   001D4C  1185               	iorwf	(??_SD_SPI_MediaInitialize+3)& (0+255),w,b
 21701   001D4E  6F89               	movwf	(??_SD_SPI_MediaInitialize+7)& (0+255),b
 21702   001D50  0E00               	movlw	0
 21703   001D52  1186               	iorwf	(??_SD_SPI_MediaInitialize+4)& (0+255),w,b
 21704   001D54  6F8A               	movwf	(??_SD_SPI_MediaInitialize+8)& (0+255),b
 21705   001D56  0E00               	movlw	0
 21706   001D58  1187               	iorwf	(??_SD_SPI_MediaInitialize+5)& (0+255),w,b
 21707   001D5A  6F8B               	movwf	(??_SD_SPI_MediaInitialize+9)& (0+255),b
 21708   001D5C  5195               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)& (0+255),w,b
 21709   001D5E  1188               	iorwf	(??_SD_SPI_MediaInitialize+6)& (0+255),w,b
 21710   001D60  6FA9               	movwf	SD_SPI_MediaInitialize@c_size& (0+255),b
 21711   001D62  5189               	movf	(??_SD_SPI_MediaInitialize+7)& (0+255),w,b
 21712   001D64  6FAA               	movwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),b
 21713   001D66  518A               	movf	(??_SD_SPI_MediaInitialize+8)& (0+255),w,b
 21714   001D68  6FAB               	movwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),b
 21715   001D6A  518B               	movf	(??_SD_SPI_MediaInitialize+9)& (0+255),w,b
 21716   001D6C  6FAC               	movwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),b
 21717                           
 21718                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 21719   001D6E  0EC0               	movlw	192
 21720   001D70  17A9               	andwf	SD_SPI_MediaInitialize@c_size& (0+255),f,b
 21721   001D72  0EFF               	movlw	255
 21722   001D74  17AA               	andwf	(SD_SPI_MediaInitialize@c_size+1)& (0+255),f,b
 21723   001D76  0E03               	movlw	3
 21724   001D78  17AB               	andwf	(SD_SPI_MediaInitialize@c_size+2)& (0+255),f,b
 21725   001D7A  0E00               	movlw	0
 21726   001D7C  17AC               	andwf	(SD_SPI_MediaInitialize@c_size+3)& (0+255),f,b
 21727                           
 21728                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 21729   001D7E  C0A9  F082         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 21730   001D82  C0AA  F083         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 21731   001D86  C0AB  F084         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 21732   001D8A  C0AC  F085         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 21733   001D8E  0E07               	movlw	7
 21734   001D90  EFCF  F00E         	goto	u18570
 21735   001D94                     u18575:
 21736   001D94  90D8               	bcf	status,0,c
 21737   001D96  3385               	rrcf	(??_SD_SPI_MediaInitialize+3)& (0+255),f,b
 21738   001D98  3384               	rrcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 21739   001D9A  3383               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 21740   001D9C  3382               	rrcf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21741   001D9E                     u18570:
 21742   001D9E  2EE8               	decfsz	wreg,f,c
 21743   001DA0  EFCA  F00E         	goto	u18575
 21744   001DA4  C082  F0A9         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 21745   001DA8  C083  F0AA         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 21746   001DAC  C084  F0AB         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 21747   001DB0  C085  F0AC         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 21748                           
 21749                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 21750   001DB4  C096  F082         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 21751   001DB8  0E03               	movlw	3
 21752   001DBA  1782               	andwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21753   001DBC  6B83               	clrf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21754   001DBE  AF97               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)& (0+255),7,b
 21755   001DC0  D001               	bra	u18585
 21756   001DC2  2B83               	incf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 21757   001DC4                     u18585:
 21758   001DC4  3183               	rrcf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21759   001DC6  3582               	rlcf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21760   001DC8  6FA5               	movwf	SD_SPI_MediaInitialize@c_size_mult& (0+255),b
 21761                           
 21762                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 21763   001DCA  5192               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)& (0+255),w,b
 21764   001DCC  0B0F               	andlw	15
 21765   001DCE  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 21766                           
 21767                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 21768   001DD0  C0A7  F082         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 21769   001DD4  0EF7               	movlw	-9
 21770   001DD6  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21771   001DD8  0E01               	movlw	1
 21772   001DDA  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21773   001DDC  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21774   001DDE  EFF3  F00E         	goto	u18594
 21775   001DE2                     u18595:
 21776   001DE2  90D8               	bcf	status,0,c
 21777   001DE4  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 21778   001DE6                     u18594:
 21779   001DE6  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 21780   001DE8  EFF1  F00E         	goto	u18595
 21781   001DEC  0100               	movlb	0	; () banked
 21782   001DEE  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21783   001DF0  6FA7               	movwf	SD_SPI_MediaInitialize@block_len& (0+255),b
 21784   001DF2                     
 21785                           ; BSR set to: 0
 21786                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 21787   001DF2  0E01               	movlw	1
 21788   001DF4  25A9               	addwf	SD_SPI_MediaInitialize@c_size& (0+255),w,b
 21789   001DF6  6F60               	movwf	___lmul@multiplier& (0+255),b
 21790   001DF8  0E00               	movlw	0
 21791   001DFA  21AA               	addwfc	(SD_SPI_MediaInitialize@c_size+1)& (0+255),w,b
 21792   001DFC  6F61               	movwf	(___lmul@multiplier+1)& (0+255),b
 21793   001DFE  0E00               	movlw	0
 21794   001E00  21AB               	addwfc	(SD_SPI_MediaInitialize@c_size+2)& (0+255),w,b
 21795   001E02  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 21796   001E04  0E00               	movlw	0
 21797   001E06  21AC               	addwfc	(SD_SPI_MediaInitialize@c_size+3)& (0+255),w,b
 21798   001E08  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 21799   001E0A  C0A5  F082         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 21800   001E0E  0E02               	movlw	2
 21801   001E10  2782               	addwf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21802   001E12  0E01               	movlw	1
 21803   001E14  6F83               	movwf	(??_SD_SPI_MediaInitialize+1)& (0+255),b
 21804   001E16  0E00               	movlw	0
 21805   001E18  6F84               	movwf	(??_SD_SPI_MediaInitialize+2)& (0+255),b
 21806   001E1A  2B82               	incf	??_SD_SPI_MediaInitialize& (0+255),f,b
 21807   001E1C  EF13  F00F         	goto	u18604
 21808   001E20                     u18605:
 21809   001E20  90D8               	bcf	status,0,c
 21810   001E22  3783               	rlcf	(??_SD_SPI_MediaInitialize+1)& (0+255),f,b
 21811   001E24  3784               	rlcf	(??_SD_SPI_MediaInitialize+2)& (0+255),f,b
 21812   001E26                     u18604:
 21813   001E26  2F82               	decfsz	??_SD_SPI_MediaInitialize& (0+255),f,b
 21814   001E28  EF10  F00F         	goto	u18605
 21815   001E2C  C083  F064         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 21816   001E30  C084  F065         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 21817   001E34  0100               	movlb	0	; () banked
 21818   001E36  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 21819   001E38  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 21820   001E3A  ECE7  F04C         	call	___lmul
 21821   001E3E  C060  F0A1         	movff	?___lmul,_SD_SPI_MediaInitialize$6582
 21822   001E42  C061  F0A2         	movff	?___lmul+1,_SD_SPI_MediaInitialize$6582+1
 21823   001E46  C062  F0A3         	movff	?___lmul+2,_SD_SPI_MediaInitialize$6582+2
 21824   001E4A  C063  F0A4         	movff	?___lmul+3,_SD_SPI_MediaInitialize$6582+3
 21825   001E4E                     
 21826                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 21827   001E4E  C0A1  F060         	movff	_SD_SPI_MediaInitialize$6582,___lmul@multiplier
 21828   001E52  C0A2  F061         	movff	_SD_SPI_MediaInitialize$6582+1,___lmul@multiplier+1
 21829   001E56  C0A3  F062         	movff	_SD_SPI_MediaInitialize$6582+2,___lmul@multiplier+2
 21830   001E5A  C0A4  F063         	movff	_SD_SPI_MediaInitialize$6582+3,___lmul@multiplier+3
 21831   001E5E  0100               	movlb	0	; () banked
 21832   001E60  51A7               	movf	SD_SPI_MediaInitialize@block_len& (0+255),w,b
 21833   001E62  6F64               	movwf	___lmul@multiplicand& (0+255),b
 21834   001E64  6B65               	clrf	(___lmul@multiplicand+1)& (0+255),b
 21835   001E66  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
 21836   001E68  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
 21837   001E6A  ECE7  F04C         	call	___lmul	;wreg free
 21838   001E6E  0EFF               	movlw	255
 21839   001E70  0100               	movlb	0	; () banked
 21840   001E72  2560               	addwf	?___lmul& (0+255),w,b
 21841   001E74  6E54               	movwf	(_mediaInformation+4)^0,c
 21842   001E76  0EFF               	movlw	255
 21843   001E78  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 21844   001E7A  6E55               	movwf	(_mediaInformation+5)^0,c
 21845   001E7C  0EFF               	movlw	255
 21846   001E7E  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 21847   001E80  6E56               	movwf	(_mediaInformation+6)^0,c
 21848   001E82  0EFF               	movlw	255
 21849   001E84  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 21850   001E86  6E57               	movwf	(_mediaInformation+7)^0,c
 21851   001E88                     l15543:
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 21855   001E88  0E00               	movlw	0
 21856   001E8A  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 21857   001E8C  0E00               	movlw	0
 21858   001E8E  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 21859   001E90  0E00               	movlw	0
 21860   001E92  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 21861   001E94  0E00               	movlw	0
 21862   001E96  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 21863   001E98  0E11               	movlw	17
 21864   001E9A  EC82  F01C         	call	_SD_SendCmd
 21865   001E9E                     
 21866                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 21867   001E9E  C051  F06B         	movff	_mediaInformation+1,SD_SendCmd@address
 21868   001EA2  C052  F06C         	movff	_mediaInformation+2,SD_SendCmd@address+1
 21869   001EA6  0100               	movlb	0	; () banked
 21870   001EA8  6B6D               	clrf	(SD_SendCmd@address+2)& (0+255),b
 21871   001EAA  6B6E               	clrf	(SD_SendCmd@address+3)& (0+255),b
 21872   001EAC  0E07               	movlw	7
 21873   001EAE  EC82  F01C         	call	_SD_SendCmd
 21874   001EB2  8ABA               	bsf	186,5,c	;volatile
 21875   001EB4                     
 21876                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 21877   001EB4  5050               	movf	_mediaInformation^0,w,c
 21878   001EB6  A4D8               	btfss	status,2,c
 21879   001EB8  EF60  F00F         	goto	u18611
 21880   001EBC  EF62  F00F         	goto	u18610
 21881   001EC0                     u18611:
 21882   001EC0  EF82  F00F         	goto	l15559
 21883   001EC4                     u18610:
 21884   001EC4                     
 21885                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 21886   001EC4  0E01               	movlw	1
 21887   001EC6  6E53               	movwf	(_mediaInformation+3)^0,c
 21888   001EC8                     
 21889                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 21890   001EC8  0E93               	movlw	low _spiMaster
 21891   001ECA  6EF6               	movwf	tblptrl,c
 21892   001ECC                     	if	1	;There is more than 1 active tblptr byte
 21893   001ECC  0EFF               	movlw	high _spiMaster
 21894   001ECE  6EF7               	movwf	tblptrh,c
 21895   001ED0                     	endif
 21896   001ED0                     	if	1	;There are 3 active tblptr bytes
 21897   001ED0  0E00               	movlw	low (_spiMaster shr (0+16))
 21898   001ED2  6EF8               	movwf	tblptru,c
 21899   001ED4                     	endif
 21900   001ED4  0009               	tblrd		*+
 21901   001ED6  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21902   001EDC  0009               	tblrd		*+
 21903   001EDE  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21904   001EE4  D802               	call	u18628
 21905   001EE6  EF7F  F00F         	goto	u18629
 21906   001EEA                     u18628:
 21907   001EEA  0005               	push	
 21908   001EEC  6EFA               	movwf	pclath,c
 21909   001EEE  0100               	movlb	0	; () banked
 21910   001EF0  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21911   001EF2  6EFD               	movwf	tosl,c
 21912   001EF4  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21913   001EF6  6EFE               	movwf	tosh,c
 21914   001EF8  6AFF               	clrf	tosu,c
 21915   001EFA  50FA               	movf	pclath,w,c
 21916   001EFC  0012               	return		;indir
 21917   001EFE                     u18629:
 21918   001EFE                     
 21919                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 21920   001EFE  0E01               	movlw	1
 21921   001F00  EF9F  F00F         	goto	l1611
 21922   001F04                     l15559:
 21923                           
 21924                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 21925   001F04  0E93               	movlw	low _spiMaster
 21926   001F06  6EF6               	movwf	tblptrl,c
 21927   001F08                     	if	1	;There is more than 1 active tblptr byte
 21928   001F08  0EFF               	movlw	high _spiMaster
 21929   001F0A  6EF7               	movwf	tblptrh,c
 21930   001F0C                     	endif
 21931   001F0C                     	if	1	;There are 3 active tblptr bytes
 21932   001F0C  0E00               	movlw	low (_spiMaster shr (0+16))
 21933   001F0E  6EF8               	movwf	tblptru,c
 21934   001F10                     	endif
 21935   001F10  0009               	tblrd		*+
 21936   001F12  006F FFD4  F082    	movff	tablat,??_SD_SPI_MediaInitialize
 21937   001F18  0009               	tblrd		*+
 21938   001F1A  006F FFD4  F083    	movff	tablat,??_SD_SPI_MediaInitialize+1
 21939   001F20  D802               	call	u18638
 21940   001F22  EF9D  F00F         	goto	u18639
 21941   001F26                     u18638:
 21942   001F26  0005               	push	
 21943   001F28  6EFA               	movwf	pclath,c
 21944   001F2A  0100               	movlb	0	; () banked
 21945   001F2C  5182               	movf	??_SD_SPI_MediaInitialize& (0+255),w,b
 21946   001F2E  6EFD               	movwf	tosl,c
 21947   001F30  5183               	movf	(??_SD_SPI_MediaInitialize+1)& (0+255),w,b
 21948   001F32  6EFE               	movwf	tosh,c
 21949   001F34  6AFF               	clrf	tosu,c
 21950   001F36  50FA               	movf	pclath,w,c
 21951   001F38  0012               	return		;indir
 21952   001F3A                     u18639:
 21953   001F3A  EFC3  F00B         	goto	l15377
 21954   001F3E                     l1611:
 21955   001F3E  0012               	return		;funcret
 21956   001F40                     __end_of_SD_SPI_MediaInitialize:
 21957                           	callstack 0
 21958                           
 21959 ;; *************** function ___lmul *****************
 21960 ;; Defined at:
 21961 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;  multiplier      4    0[BANK0 ] unsigned long 
 21964 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 21965 ;; Auto vars:     Size  Location     Type
 21966 ;;  product         4    8[BANK0 ] unsigned long 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  4    0[BANK0 ] unsigned long 
 21969 ;; Registers used:
 21970 ;;		wreg, status,2, status,0
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21976 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21979 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21980 ;;Total ram usage:       12 bytes
 21981 ;; Hardware stack levels used: 1
 21982 ;; Hardware stack levels required when called: 5
 21983 ;; This function calls:
 21984 ;;		Nothing
 21985 ;; This function is called by:
 21986 ;;		_clst2sect
 21987 ;;		_find_volume
 21988 ;;		_SD_SPI_MediaInitialize
 21989 ;; This function uses a non-reentrant model
 21990 ;;
 21991                           
 21992                           	psect	text77
 21993   0099CE                     __ptext77:
 21994                           	callstack 0
 21995   0099CE                     ___lmul:
 21996                           	callstack 22
 21997   0099CE  0E00               	movlw	0
 21998   0099D0  0100               	movlb	0	; () banked
 21999   0099D2  6F68               	movwf	___lmul@product& (0+255),b
 22000   0099D4  0E00               	movlw	0
 22001   0099D6  6F69               	movwf	(___lmul@product+1)& (0+255),b
 22002   0099D8  0E00               	movlw	0
 22003   0099DA  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 22004   0099DC  0E00               	movlw	0
 22005   0099DE  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 22006   0099E0                     l15035:
 22007                           
 22008                           ; BSR set to: 0
 22009   0099E0  A160               	btfss	___lmul@multiplier& (0+255),0,b
 22010   0099E2  EFF5  F04C         	goto	u17541
 22011   0099E6  EFF7  F04C         	goto	u17540
 22012   0099EA                     u17541:
 22013   0099EA  EFFF  F04C         	goto	l15039
 22014   0099EE                     u17540:
 22015   0099EE                     
 22016                           ; BSR set to: 0
 22017   0099EE  5164               	movf	___lmul@multiplicand& (0+255),w,b
 22018   0099F0  2768               	addwf	___lmul@product& (0+255),f,b
 22019   0099F2  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 22020   0099F4  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 22021   0099F6  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 22022   0099F8  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 22023   0099FA  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 22024   0099FC  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 22025   0099FE                     l15039:
 22026                           
 22027                           ; BSR set to: 0
 22028   0099FE  90D8               	bcf	status,0,c
 22029   009A00  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 22030   009A02  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 22031   009A04  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 22032   009A06  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 22033   009A08                     
 22034                           ; BSR set to: 0
 22035   009A08  90D8               	bcf	status,0,c
 22036   009A0A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 22037   009A0C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 22038   009A0E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 22039   009A10  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 22040   009A12  5160               	movf	___lmul@multiplier& (0+255),w,b
 22041   009A14  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 22042   009A16  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 22043   009A18  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 22044   009A1A  A4D8               	btfss	status,2,c
 22045   009A1C  EF12  F04D         	goto	u17551
 22046   009A20  EF14  F04D         	goto	u17550
 22047   009A24                     u17551:
 22048   009A24  EFF0  F04C         	goto	l15035
 22049   009A28                     u17550:
 22050   009A28                     
 22051                           ; BSR set to: 0
 22052   009A28  C068  F060         	movff	___lmul@product,?___lmul
 22053   009A2C  C069  F061         	movff	___lmul@product+1,?___lmul+1
 22054   009A30  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 22055   009A34  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 22056   009A38                     
 22057                           ; BSR set to: 0
 22058   009A38  0012               	return		;funcret
 22059   009A3A                     __end_of___lmul:
 22060                           	callstack 0
 22061                           
 22062 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 22063 ;; Defined at:
 22064 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 22065 ;; Parameters:    Size  Location     Type
 22066 ;;  milliseconds    1    wreg     unsigned char 
 22067 ;; Auto vars:     Size  Location     Type
 22068 ;;  milliseconds    1    3[BANK0 ] unsigned char 
 22069 ;;  timeout         2    4[BANK0 ] unsigned short 
 22070 ;; Return value:  Size  Location     Type
 22071 ;;                  1    wreg      void 
 22072 ;; Registers used:
 22073 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22074 ;; Tracked objects:
 22075 ;;		On entry : 0/0
 22076 ;;		On exit  : 0/0
 22077 ;;		Unchanged: 0/0
 22078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22080 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22082 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22083 ;;Total ram usage:        5 bytes
 22084 ;; Hardware stack levels used: 1
 22085 ;; Hardware stack levels required when called: 6
 22086 ;; This function calls:
 22087 ;;		_SPI1_ExchangeByte
 22088 ;; This function is called by:
 22089 ;;		_SD_SPI_MediaInitialize
 22090 ;; This function uses a non-reentrant model
 22091 ;;
 22092                           
 22093                           	psect	text78
 22094   0098F4                     __ptext78:
 22095                           	callstack 0
 22096   0098F4                     _SD_SPI_DelayMilliseconds:
 22097                           	callstack 19
 22098                           
 22099                           ; BSR set to: 0
 22100                           ;incstack = 0
 22101                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 22102   0098F4  0100               	movlb	0	; () banked
 22103   0098F6  6F63               	movwf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),b
 22104   0098F8                     
 22105                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 22106   0098F8  0100               	movlb	0	; () banked
 22107   0098FA  5163               	movf	SD_SPI_DelayMilliseconds@milliseconds& (0+255),w,b
 22108   0098FC  0D32               	mullw	50
 22109   0098FE  006F FFCC  F064    	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 22110   009904  006F FFD0  F065    	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 22111   00990A                     
 22112                           ; BSR set to: 0
 22113   00990A  8ABA               	bsf	186,5,c	;volatile
 22114   00990C  EFA2  F04C         	goto	l15347
 22115   009910                     l15345:
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22119   009910  0E97               	movlw	low (_spiMaster+4)
 22120   009912  6EF6               	movwf	tblptrl,c
 22121   009914  0EFF               	movlw	high (_spiMaster+4)
 22122   009916  6EF7               	movwf	tblptrh,c
 22123   009918                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22124   009918  6AF8               	clrf	tblptru,c
 22125   00991A                     	endif
 22126   00991A                     	if	0	;tblptru may be non-zero
 22127   00991A                     	endif
 22128   00991A  0009               	tblrd		*+
 22129   00991C  006F FFD4  F061    	movff	tablat,??_SD_SPI_DelayMilliseconds
 22130   009922  0009               	tblrd		*+
 22131   009924  006F FFD4  F062    	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 22132   00992A  D802               	call	u18148
 22133   00992C  EFA2  F04C         	goto	u18149
 22134   009930                     u18148:
 22135   009930  0005               	push	
 22136   009932  6EFA               	movwf	pclath,c
 22137   009934  5161               	movf	??_SD_SPI_DelayMilliseconds& (0+255),w,b
 22138   009936  6EFD               	movwf	tosl,c
 22139   009938  5162               	movf	(??_SD_SPI_DelayMilliseconds+1)& (0+255),w,b
 22140   00993A  6EFE               	movwf	tosh,c
 22141   00993C  6AFF               	clrf	tosu,c
 22142   00993E  50FA               	movf	pclath,w,c
 22143   009940  0EFF               	movlw	255
 22144   009942  0012               	return		;indir
 22145   009944                     u18149:
 22146   009944                     l15347:
 22147                           
 22148                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 22149   009944  0100               	movlb	0	; () banked
 22150   009946  0764               	decf	SD_SPI_DelayMilliseconds@timeout& (0+255),f,b
 22151   009948  A0D8               	btfss	status,0,c
 22152   00994A  0765               	decf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),f,b
 22153   00994C  2964               	incf	SD_SPI_DelayMilliseconds@timeout& (0+255),w,b
 22154   00994E  E106               	bnz	u18151
 22155   009950  2965               	incf	(SD_SPI_DelayMilliseconds@timeout+1)& (0+255),w,b
 22156   009952  A4D8               	btfss	status,2,c
 22157   009954  EFAE  F04C         	goto	u18151
 22158   009958  EFB0  F04C         	goto	u18150
 22159   00995C                     u18151:
 22160   00995C  EF88  F04C         	goto	l15345
 22161   009960                     u18150:
 22162   009960                     
 22163                           ; BSR set to: 0
 22164   009960  0012               	return		;funcret
 22165   009962                     __end_of_SD_SPI_DelayMilliseconds:
 22166                           	callstack 0
 22167                           
 22168 ;; *************** function _check_fs *****************
 22169 ;; Defined at:
 22170 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 22171 ;; Parameters:    Size  Location     Type
 22172 ;;  fs              2  115[BANK0 ] PTR struct .
 22173 ;;		 -> FatFs(563), NULL(0), 
 22174 ;;  sect            4  117[BANK0 ] unsigned long 
 22175 ;; Auto vars:     Size  Location     Type
 22176 ;;		None
 22177 ;; Return value:  Size  Location     Type
 22178 ;;                  1    wreg      unsigned char 
 22179 ;; Registers used:
 22180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22181 ;; Tracked objects:
 22182 ;;		On entry : 0/0
 22183 ;;		On exit  : 0/0
 22184 ;;		Unchanged: 0/0
 22185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22186 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22189 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22190 ;;Total ram usage:        7 bytes
 22191 ;; Hardware stack levels used: 1
 22192 ;; Hardware stack levels required when called: 12
 22193 ;; This function calls:
 22194 ;;		_ld_word
 22195 ;;		_mem_cmp
 22196 ;;		_move_window
 22197 ;; This function is called by:
 22198 ;;		_find_volume
 22199 ;; This function uses a non-reentrant model
 22200 ;;
 22201                           
 22202                           	psect	text79
 22203   007BB8                     __ptext79:
 22204                           	callstack 0
 22205   007BB8                     _check_fs:
 22206                           	callstack 15
 22207   007BB8                     
 22208                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 22209   007BB8  0100               	movlb	0	; () banked
 22210   007BBA  EE20 F003          	lfsr	2,3
 22211   007BBE  51D3               	movf	check_fs@fs& (0+255),w,b
 22212   007BC0  26D9               	addwf	fsr2l,f,c
 22213   007BC2  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22214   007BC4  22DA               	addwfc	fsr2h,f,c
 22215   007BC6  6ADF               	clrf	indf2,c
 22216   007BC8  EE20 F02F          	lfsr	2,47
 22217   007BCC  51D3               	movf	check_fs@fs& (0+255),w,b
 22218   007BCE  26D9               	addwf	fsr2l,f,c
 22219   007BD0  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22220   007BD2  22DA               	addwfc	fsr2h,f,c
 22221   007BD4  0EFF               	movlw	255
 22222   007BD6  6EDE               	movwf	postinc2,c
 22223   007BD8  0EFF               	movlw	255
 22224   007BDA  6EDE               	movwf	postinc2,c
 22225   007BDC  0EFF               	movlw	255
 22226   007BDE  6EDE               	movwf	postinc2,c
 22227   007BE0  0EFF               	movlw	255
 22228   007BE2  6EDD               	movwf	postdec2,c
 22229   007BE4                     
 22230                           ; BSR set to: 0
 22231                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 22232   007BE4  C0D3  F0C8         	movff	check_fs@fs,move_window@fs
 22233   007BE8  C0D4  F0C9         	movff	check_fs@fs+1,move_window@fs+1
 22234   007BEC  C0D5  F0CA         	movff	check_fs@sect,move_window@sector
 22235   007BF0  C0D6  F0CB         	movff	check_fs@sect+1,move_window@sector+1
 22236   007BF4  C0D7  F0CC         	movff	check_fs@sect+2,move_window@sector+2
 22237   007BF8  C0D8  F0CD         	movff	check_fs@sect+3,move_window@sector+3
 22238   007BFC  ECDA  F046         	call	_move_window
 22239   007C00  0900               	iorlw	0
 22240   007C02  B4D8               	btfsc	status,2,c
 22241   007C04  EF06  F03E         	goto	u19701
 22242   007C08  EF08  F03E         	goto	u19700
 22243   007C0C                     u19701:
 22244   007C0C  EF0B  F03E         	goto	l16203
 22245   007C10                     u19700:
 22246   007C10  0E04               	movlw	4
 22247   007C12  EF8B  F03E         	goto	l1201
 22248   007C16                     l16203:
 22249                           
 22250                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 22251   007C16  0E31               	movlw	49
 22252   007C18  0100               	movlb	0	; () banked
 22253   007C1A  25D3               	addwf	check_fs@fs& (0+255),w,b
 22254   007C1C  6F60               	movwf	ld_word@ptr& (0+255),b
 22255   007C1E  0E02               	movlw	2
 22256   007C20  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22257   007C22  6F61               	movwf	(ld_word@ptr+1)& (0+255),b
 22258   007C24  EC0E  F050         	call	_ld_word	;wreg free
 22259   007C28  0E55               	movlw	85
 22260   007C2A  0100               	movlb	0	; () banked
 22261   007C2C  1960               	xorwf	?_ld_word& (0+255),w,b
 22262   007C2E  E109               	bnz	u19710
 22263   007C30  0EAA               	movlw	170
 22264   007C32  1961               	xorwf	(?_ld_word+1)& (0+255),w,b
 22265   007C34  B4D8               	btfsc	status,2,c
 22266   007C36  EF1F  F03E         	goto	u19711
 22267   007C3A  EF21  F03E         	goto	u19710
 22268   007C3E                     u19711:
 22269   007C3E  EF24  F03E         	goto	l16209
 22270   007C42                     u19710:
 22271   007C42                     
 22272                           ; BSR set to: 0
 22273   007C42  0E03               	movlw	3
 22274   007C44  EF8B  F03E         	goto	l1201
 22275   007C48                     l16209:
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 22279   007C48  EE20 F033          	lfsr	2,51
 22280   007C4C  51D3               	movf	check_fs@fs& (0+255),w,b
 22281   007C4E  26D9               	addwf	fsr2l,f,c
 22282   007C50  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22283   007C52  22DA               	addwfc	fsr2h,f,c
 22284   007C54  0EE9               	movlw	233
 22285   007C56  18DE               	xorwf	postinc2,w,c
 22286   007C58  B4D8               	btfsc	status,2,c
 22287   007C5A  EF31  F03E         	goto	u19721
 22288   007C5E  EF33  F03E         	goto	u19720
 22289   007C62                     u19721:
 22290   007C62  EF51  F03E         	goto	l16215
 22291   007C66                     u19720:
 22292   007C66                     
 22293                           ; BSR set to: 0
 22294   007C66  EE20 F033          	lfsr	2,51
 22295   007C6A  51D3               	movf	check_fs@fs& (0+255),w,b
 22296   007C6C  26D9               	addwf	fsr2l,f,c
 22297   007C6E  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22298   007C70  22DA               	addwfc	fsr2h,f,c
 22299   007C72  0EEB               	movlw	235
 22300   007C74  18DE               	xorwf	postinc2,w,c
 22301   007C76  B4D8               	btfsc	status,2,c
 22302   007C78  EF40  F03E         	goto	u19731
 22303   007C7C  EF42  F03E         	goto	u19730
 22304   007C80                     u19731:
 22305   007C80  EF51  F03E         	goto	l16215
 22306   007C84                     u19730:
 22307   007C84                     
 22308                           ; BSR set to: 0
 22309   007C84  EE20 F033          	lfsr	2,51
 22310   007C88  51D3               	movf	check_fs@fs& (0+255),w,b
 22311   007C8A  26D9               	addwf	fsr2l,f,c
 22312   007C8C  51D4               	movf	(check_fs@fs+1)& (0+255),w,b
 22313   007C8E  22DA               	addwfc	fsr2h,f,c
 22314   007C90  0EE8               	movlw	232
 22315   007C92  18DE               	xorwf	postinc2,w,c
 22316   007C94  A4D8               	btfss	status,2,c
 22317   007C96  EF4F  F03E         	goto	u19741
 22318   007C9A  EF51  F03E         	goto	u19740
 22319   007C9E                     u19741:
 22320   007C9E  EF8A  F03E         	goto	l16227
 22321   007CA2                     u19740:
 22322   007CA2                     l16215:
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 22326   007CA2  0E69               	movlw	105
 22327   007CA4  25D3               	addwf	check_fs@fs& (0+255),w,b
 22328   007CA6  6F60               	movwf	mem_cmp@dst& (0+255),b
 22329   007CA8  0E00               	movlw	0
 22330   007CAA  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22331   007CAC  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 22332   007CAE  0EFB               	movlw	low STR_3
 22333   007CB0  6F62               	movwf	mem_cmp@src& (0+255),b
 22334   007CB2  0EFF               	movlw	high STR_3
 22335   007CB4  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 22336   007CB6  0E00               	movlw	0
 22337   007CB8  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 22338   007CBA  0E03               	movlw	3
 22339   007CBC  6F64               	movwf	mem_cmp@cnt& (0+255),b
 22340   007CBE  EC6D  F049         	call	_mem_cmp	;wreg free
 22341   007CC2  0100               	movlb	0	; () banked
 22342   007CC4  5160               	movf	?_mem_cmp& (0+255),w,b
 22343   007CC6  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 22344   007CC8  A4D8               	btfss	status,2,c
 22345   007CCA  EF69  F03E         	goto	u19751
 22346   007CCE  EF6B  F03E         	goto	u19750
 22347   007CD2                     u19751:
 22348   007CD2  EF6E  F03E         	goto	l16221
 22349   007CD6                     u19750:
 22350   007CD6                     l16217:
 22351                           
 22352                           ; BSR set to: 0
 22353   007CD6  0E00               	movlw	0
 22354   007CD8  EF8B  F03E         	goto	l1201
 22355   007CDC                     l16221:
 22356                           
 22357                           ; BSR set to: 0
 22358                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 22359   007CDC  0E85               	movlw	133
 22360   007CDE  25D3               	addwf	check_fs@fs& (0+255),w,b
 22361   007CE0  6F60               	movwf	mem_cmp@dst& (0+255),b
 22362   007CE2  0E00               	movlw	0
 22363   007CE4  21D4               	addwfc	(check_fs@fs+1)& (0+255),w,b
 22364   007CE6  6F61               	movwf	(mem_cmp@dst+1)& (0+255),b
 22365   007CE8  0EF5               	movlw	low STR_5
 22366   007CEA  6F62               	movwf	mem_cmp@src& (0+255),b
 22367   007CEC  0EFF               	movlw	high STR_5
 22368   007CEE  6F63               	movwf	(mem_cmp@src+1)& (0+255),b
 22369   007CF0  0E00               	movlw	0
 22370   007CF2  6F65               	movwf	(mem_cmp@cnt+1)& (0+255),b
 22371   007CF4  0E05               	movlw	5
 22372   007CF6  6F64               	movwf	mem_cmp@cnt& (0+255),b
 22373   007CF8  EC6D  F049         	call	_mem_cmp	;wreg free
 22374   007CFC  0100               	movlb	0	; () banked
 22375   007CFE  5160               	movf	?_mem_cmp& (0+255),w,b
 22376   007D00  1161               	iorwf	(?_mem_cmp+1)& (0+255),w,b
 22377   007D02  A4D8               	btfss	status,2,c
 22378   007D04  EF86  F03E         	goto	u19761
 22379   007D08  EF88  F03E         	goto	u19760
 22380   007D0C                     u19761:
 22381   007D0C  EF8A  F03E         	goto	l16227
 22382   007D10                     u19760:
 22383   007D10  EF6B  F03E         	goto	l16217
 22384   007D14                     l16227:
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 22388   007D14  0E02               	movlw	2
 22389   007D16                     l1201:
 22390   007D16  0012               	return		;funcret
 22391   007D18                     __end_of_check_fs:
 22392                           	callstack 0
 22393                           
 22394 ;; *************** function _move_window *****************
 22395 ;; Defined at:
 22396 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;  fs              2  104[BANK0 ] PTR struct .
 22399 ;;		 -> FatFs(563), NULL(0), 
 22400 ;;  sector          4  106[BANK0 ] unsigned long 
 22401 ;; Auto vars:     Size  Location     Type
 22402 ;;  res             1  114[BANK0 ] enum E68
 22403 ;; Return value:  Size  Location     Type
 22404 ;;                  1    wreg      enum E68
 22405 ;; Registers used:
 22406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22407 ;; Tracked objects:
 22408 ;;		On entry : 0/0
 22409 ;;		On exit  : 0/0
 22410 ;;		Unchanged: 0/0
 22411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22412 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22414 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22415 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22416 ;;Total ram usage:       11 bytes
 22417 ;; Hardware stack levels used: 1
 22418 ;; Hardware stack levels required when called: 11
 22419 ;; This function calls:
 22420 ;;		_disk_read
 22421 ;;		_sync_window
 22422 ;; This function is called by:
 22423 ;;		_get_fat
 22424 ;;		_put_fat
 22425 ;;		_dir_alloc
 22426 ;;		_dir_find
 22427 ;;		_dir_register
 22428 ;;		_check_fs
 22429 ;;		_find_volume
 22430 ;;		_f_open
 22431 ;;		_f_sync
 22432 ;; This function uses a non-reentrant model
 22433 ;;
 22434                           
 22435                           	psect	text80
 22436   008DB4                     __ptext80:
 22437                           	callstack 0
 22438   008DB4                     _move_window:
 22439                           	callstack 15
 22440   008DB4                     
 22441                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 22442   008DB4  0E00               	movlw	0
 22443   008DB6  0100               	movlb	0	; () banked
 22444   008DB8  6FD2               	movwf	move_window@res& (0+255),b
 22445   008DBA                     
 22446                           ; BSR set to: 0
 22447                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 22448   008DBA  EE20 F02F          	lfsr	2,47
 22449   008DBE  51C8               	movf	move_window@fs& (0+255),w,b
 22450   008DC0  26D9               	addwf	fsr2l,f,c
 22451   008DC2  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 22452   008DC4  22DA               	addwfc	fsr2h,f,c
 22453   008DC6  51CA               	movf	move_window@sector& (0+255),w,b
 22454   008DC8  18DE               	xorwf	postinc2,w,c
 22455   008DCA  E10F               	bnz	u17510
 22456   008DCC  51CB               	movf	(move_window@sector+1)& (0+255),w,b
 22457   008DCE  18DE               	xorwf	postinc2,w,c
 22458   008DD0  E10C               	bnz	u17510
 22459   008DD2  51CC               	movf	(move_window@sector+2)& (0+255),w,b
 22460   008DD4  18DE               	xorwf	postinc2,w,c
 22461   008DD6  E109               	bnz	u17510
 22462   008DD8  51CD               	movf	(move_window@sector+3)& (0+255),w,b
 22463   008DDA  18DE               	xorwf	postinc2,w,c
 22464   008DDC  B4D8               	btfsc	status,2,c
 22465   008DDE  EFF3  F046         	goto	u17511
 22466   008DE2  EFF5  F046         	goto	u17510
 22467   008DE6                     u17511:
 22468   008DE6  EF42  F047         	goto	l15029
 22469   008DEA                     u17510:
 22470   008DEA                     
 22471                           ; BSR set to: 0
 22472                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 22473   008DEA  C0C8  F0B5         	movff	move_window@fs,sync_window@fs
 22474   008DEE  C0C9  F0B6         	movff	move_window@fs+1,sync_window@fs+1
 22475   008DF2  EC19  F039         	call	_sync_window	;wreg free
 22476   008DF6  0100               	movlb	0	; () banked
 22477   008DF8  6FD2               	movwf	move_window@res& (0+255),b
 22478   008DFA                     
 22479                           ; BSR set to: 0
 22480                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 22481   008DFA  51D2               	movf	move_window@res& (0+255),w,b
 22482   008DFC  A4D8               	btfss	status,2,c
 22483   008DFE  EF03  F047         	goto	u17521
 22484   008E02  EF05  F047         	goto	u17520
 22485   008E06                     u17521:
 22486   008E06  EF42  F047         	goto	l15029
 22487   008E0A                     u17520:
 22488   008E0A                     
 22489                           ; BSR set to: 0
 22490                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 22491   008E0A  0E33               	movlw	51
 22492   008E0C  25C8               	addwf	move_window@fs& (0+255),w,b
 22493   008E0E  6FA8               	movwf	disk_read@buff& (0+255),b
 22494   008E10  0E00               	movlw	0
 22495   008E12  21C9               	addwfc	(move_window@fs+1)& (0+255),w,b
 22496   008E14  6FA9               	movwf	(disk_read@buff+1)& (0+255),b
 22497   008E16  C0CA  F0AA         	movff	move_window@sector,disk_read@sector
 22498   008E1A  C0CB  F0AB         	movff	move_window@sector+1,disk_read@sector+1
 22499   008E1E  C0CC  F0AC         	movff	move_window@sector+2,disk_read@sector+2
 22500   008E22  C0CD  F0AD         	movff	move_window@sector+3,disk_read@sector+3
 22501   008E26  0E00               	movlw	0
 22502   008E28  6FAF               	movwf	(disk_read@count+1)& (0+255),b
 22503   008E2A  0E01               	movlw	1
 22504   008E2C  6FAE               	movwf	disk_read@count& (0+255),b
 22505   008E2E  EE20 F001          	lfsr	2,1
 22506   008E32  51C8               	movf	move_window@fs& (0+255),w,b
 22507   008E34  26D9               	addwf	fsr2l,f,c
 22508   008E36  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 22509   008E38  22DA               	addwfc	fsr2h,f,c
 22510   008E3A  50DF               	movf	indf2,w,c
 22511   008E3C  EC51  F04D         	call	_disk_read
 22512   008E40  0900               	iorlw	0
 22513   008E42  B4D8               	btfsc	status,2,c
 22514   008E44  EF26  F047         	goto	u17531
 22515   008E48  EF28  F047         	goto	u17530
 22516   008E4C                     u17531:
 22517   008E4C  EF2F  F047         	goto	l15027
 22518   008E50                     u17530:
 22519   008E50                     
 22520                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 22521   008E50  0100               	movlb	0	; () banked
 22522   008E52  69CA               	setf	move_window@sector& (0+255),b
 22523   008E54  69CB               	setf	(move_window@sector+1)& (0+255),b
 22524   008E56  69CC               	setf	(move_window@sector+2)& (0+255),b
 22525   008E58  69CD               	setf	(move_window@sector+3)& (0+255),b
 22526   008E5A                     
 22527                           ; BSR set to: 0
 22528                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 22529   008E5A  0E01               	movlw	1
 22530   008E5C  6FD2               	movwf	move_window@res& (0+255),b
 22531   008E5E                     l15027:
 22532                           
 22533                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 22534   008E5E  0100               	movlb	0	; () banked
 22535   008E60  EE20 F02F          	lfsr	2,47
 22536   008E64  51C8               	movf	move_window@fs& (0+255),w,b
 22537   008E66  26D9               	addwf	fsr2l,f,c
 22538   008E68  51C9               	movf	(move_window@fs+1)& (0+255),w,b
 22539   008E6A  22DA               	addwfc	fsr2h,f,c
 22540   008E6C  0060  F32B  FFDE   	movff	move_window@sector,postinc2
 22541   008E72  0060  F32F  FFDE   	movff	move_window@sector+1,postinc2
 22542   008E78  0060  F333  FFDE   	movff	move_window@sector+2,postinc2
 22543   008E7E  0060  F337  FFDE   	movff	move_window@sector+3,postinc2
 22544   008E84                     l15029:
 22545                           
 22546                           ; BSR set to: 0
 22547                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 22548   008E84  51D2               	movf	move_window@res& (0+255),w,b
 22549   008E86                     
 22550                           ; BSR set to: 0
 22551   008E86  0012               	return		;funcret
 22552   008E88                     __end_of_move_window:
 22553                           	callstack 0
 22554                           
 22555 ;; *************** function _sync_window *****************
 22556 ;; Defined at:
 22557 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;  fs              2   85[BANK0 ] PTR struct .
 22560 ;;		 -> FatFs(563), NULL(0), 
 22561 ;; Auto vars:     Size  Location     Type
 22562 ;;  res             1  103[BANK0 ] enum E68
 22563 ;; Return value:  Size  Location     Type
 22564 ;;                  1    wreg      enum E68
 22565 ;; Registers used:
 22566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22567 ;; Tracked objects:
 22568 ;;		On entry : 0/0
 22569 ;;		On exit  : 0/0
 22570 ;;		Unchanged: 0/0
 22571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22574 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22575 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22576 ;;Total ram usage:       19 bytes
 22577 ;; Hardware stack levels used: 1
 22578 ;; Hardware stack levels required when called: 10
 22579 ;; This function calls:
 22580 ;;		_disk_write
 22581 ;; This function is called by:
 22582 ;;		_move_window
 22583 ;;		_sync_fs
 22584 ;;		_dir_clear
 22585 ;; This function uses a non-reentrant model
 22586 ;;
 22587                           
 22588                           	psect	text81
 22589   007232                     __ptext81:
 22590                           	callstack 0
 22591   007232                     _sync_window:
 22592                           	callstack 15
 22593   007232                     
 22594                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 22595   007232  0E00               	movlw	0
 22596   007234  0100               	movlb	0	; () banked
 22597   007236  6FC7               	movwf	sync_window@res& (0+255),b
 22598   007238                     
 22599                           ; BSR set to: 0
 22600                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 22601   007238  EE20 F003          	lfsr	2,3
 22602   00723C  51B5               	movf	sync_window@fs& (0+255),w,b
 22603   00723E  26D9               	addwf	fsr2l,f,c
 22604   007240  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22605   007242  22DA               	addwfc	fsr2h,f,c
 22606   007244  50DF               	movf	indf2,w,c
 22607   007246  B4D8               	btfsc	status,2,c
 22608   007248  EF28  F039         	goto	u17471
 22609   00724C  EF2A  F039         	goto	u17470
 22610   007250                     u17471:
 22611   007250  EFFB  F039         	goto	l898
 22612   007254                     u17470:
 22613   007254                     
 22614                           ; BSR set to: 0
 22615                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 22616   007254  0E33               	movlw	51
 22617   007256  25B5               	addwf	sync_window@fs& (0+255),w,b
 22618   007258  6FAB               	movwf	disk_write@buff& (0+255),b
 22619   00725A  0E00               	movlw	0
 22620   00725C  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 22621   00725E  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 22622   007260  EE20 F02F          	lfsr	2,47
 22623   007264  51B5               	movf	sync_window@fs& (0+255),w,b
 22624   007266  26D9               	addwf	fsr2l,f,c
 22625   007268  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22626   00726A  22DA               	addwfc	fsr2h,f,c
 22627   00726C  006F FF78  F0AD    	movff	postinc2,disk_write@sector
 22628   007272  006F FF78  F0AE    	movff	postinc2,disk_write@sector+1
 22629   007278  006F FF78  F0AF    	movff	postinc2,disk_write@sector+2
 22630   00727E  006F FF78  F0B0    	movff	postinc2,disk_write@sector+3
 22631   007284  0E00               	movlw	0
 22632   007286  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 22633   007288  0E01               	movlw	1
 22634   00728A  6FB1               	movwf	disk_write@count& (0+255),b
 22635   00728C  EE20 F001          	lfsr	2,1
 22636   007290  51B5               	movf	sync_window@fs& (0+255),w,b
 22637   007292  26D9               	addwf	fsr2l,f,c
 22638   007294  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22639   007296  22DA               	addwfc	fsr2h,f,c
 22640   007298  50DF               	movf	indf2,w,c
 22641   00729A  EC1D  F04D         	call	_disk_write
 22642   00729E  0900               	iorlw	0
 22643   0072A0  A4D8               	btfss	status,2,c
 22644   0072A2  EF55  F039         	goto	u17481
 22645   0072A6  EF57  F039         	goto	u17480
 22646   0072AA                     u17481:
 22647   0072AA  EFF8  F039         	goto	l14969
 22648   0072AE                     u17480:
 22649   0072AE                     
 22650                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 22651   0072AE  0100               	movlb	0	; () banked
 22652   0072B0  EE20 F003          	lfsr	2,3
 22653   0072B4  51B5               	movf	sync_window@fs& (0+255),w,b
 22654   0072B6  26D9               	addwf	fsr2l,f,c
 22655   0072B8  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22656   0072BA  22DA               	addwfc	fsr2h,f,c
 22657   0072BC  6ADF               	clrf	indf2,c
 22658   0072BE                     
 22659                           ; BSR set to: 0
 22660                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 22661   0072BE  EE20 F01B          	lfsr	2,27
 22662   0072C2  51B5               	movf	sync_window@fs& (0+255),w,b
 22663   0072C4  26D9               	addwf	fsr2l,f,c
 22664   0072C6  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22665   0072C8  22DA               	addwfc	fsr2h,f,c
 22666   0072CA  EE10 F023          	lfsr	1,35
 22667   0072CE  51B5               	movf	sync_window@fs& (0+255),w,b
 22668   0072D0  26E1               	addwf	fsr1l,f,c
 22669   0072D2  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22670   0072D4  22E2               	addwfc	fsr1h,f,c
 22671   0072D6  006F FF98  F0BB    	movff	postinc1,??_sync_window+4
 22672   0072DC  006F FF98  F0BC    	movff	postinc1,??_sync_window+5
 22673   0072E2  006F FF98  F0BD    	movff	postinc1,??_sync_window+6
 22674   0072E8  006F FF98  F0BE    	movff	postinc1,??_sync_window+7
 22675   0072EE  EE10 F02F          	lfsr	1,47
 22676   0072F2  51B5               	movf	sync_window@fs& (0+255),w,b
 22677   0072F4  26E1               	addwf	fsr1l,f,c
 22678   0072F6  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22679   0072F8  22E2               	addwfc	fsr1h,f,c
 22680   0072FA  006F FF98  F0BF    	movff	postinc1,??_sync_window+8
 22681   007300  006F FF98  F0C0    	movff	postinc1,??_sync_window+9
 22682   007306  006F FF98  F0C1    	movff	postinc1,??_sync_window+10
 22683   00730C  006F FF98  F0C2    	movff	postinc1,??_sync_window+11
 22684   007312  51BB               	movf	(??_sync_window+4)& (0+255),w,b
 22685   007314  5DBF               	subwf	(??_sync_window+8)& (0+255),w,b
 22686   007316  6FC3               	movwf	(??_sync_window+12)& (0+255),b
 22687   007318  51BC               	movf	(??_sync_window+5)& (0+255),w,b
 22688   00731A  59C0               	subwfb	(??_sync_window+9)& (0+255),w,b
 22689   00731C  6FC4               	movwf	(??_sync_window+13)& (0+255),b
 22690   00731E  51BD               	movf	(??_sync_window+6)& (0+255),w,b
 22691   007320  59C1               	subwfb	(??_sync_window+10)& (0+255),w,b
 22692   007322  6FC5               	movwf	(??_sync_window+14)& (0+255),b
 22693   007324  51BE               	movf	(??_sync_window+7)& (0+255),w,b
 22694   007326  59C2               	subwfb	(??_sync_window+11)& (0+255),w,b
 22695   007328  6FC6               	movwf	(??_sync_window+15)& (0+255),b
 22696   00732A  50DE               	movf	postinc2,w,c
 22697   00732C  5DC3               	subwf	(??_sync_window+12)& (0+255),w,b
 22698   00732E  50DE               	movf	postinc2,w,c
 22699   007330  59C4               	subwfb	(??_sync_window+13)& (0+255),w,b
 22700   007332  50DE               	movf	postinc2,w,c
 22701   007334  59C5               	subwfb	(??_sync_window+14)& (0+255),w,b
 22702   007336  50DE               	movf	postinc2,w,c
 22703   007338  59C6               	subwfb	(??_sync_window+15)& (0+255),w,b
 22704   00733A  B0D8               	btfsc	status,0,c
 22705   00733C  EFA2  F039         	goto	u17491
 22706   007340  EFA4  F039         	goto	u17490
 22707   007344                     u17491:
 22708   007344  EFFB  F039         	goto	l898
 22709   007348                     u17490:
 22710   007348                     
 22711                           ; BSR set to: 0
 22712                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 22713   007348  EE20 F002          	lfsr	2,2
 22714   00734C  51B5               	movf	sync_window@fs& (0+255),w,b
 22715   00734E  26D9               	addwf	fsr2l,f,c
 22716   007350  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22717   007352  22DA               	addwfc	fsr2h,f,c
 22718   007354  0E02               	movlw	2
 22719   007356  18DE               	xorwf	postinc2,w,c
 22720   007358  A4D8               	btfss	status,2,c
 22721   00735A  EFB1  F039         	goto	u17501
 22722   00735E  EFB3  F039         	goto	u17500
 22723   007362                     u17501:
 22724   007362  EFFB  F039         	goto	l898
 22725   007366                     u17500:
 22726   007366                     
 22727                           ; BSR set to: 0
 22728   007366  0E33               	movlw	51
 22729   007368  25B5               	addwf	sync_window@fs& (0+255),w,b
 22730   00736A  6FAB               	movwf	disk_write@buff& (0+255),b
 22731   00736C  0E00               	movlw	0
 22732   00736E  21B6               	addwfc	(sync_window@fs+1)& (0+255),w,b
 22733   007370  6FAC               	movwf	(disk_write@buff+1)& (0+255),b
 22734   007372  EE20 F01B          	lfsr	2,27
 22735   007376  51B5               	movf	sync_window@fs& (0+255),w,b
 22736   007378  26D9               	addwf	fsr2l,f,c
 22737   00737A  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22738   00737C  22DA               	addwfc	fsr2h,f,c
 22739   00737E  006F FF78  F0B7    	movff	postinc2,??_sync_window
 22740   007384  006F FF78  F0B8    	movff	postinc2,??_sync_window+1
 22741   00738A  006F FF78  F0B9    	movff	postinc2,??_sync_window+2
 22742   007390  006F FF78  F0BA    	movff	postinc2,??_sync_window+3
 22743   007396  EE20 F02F          	lfsr	2,47
 22744   00739A  51B5               	movf	sync_window@fs& (0+255),w,b
 22745   00739C  26D9               	addwf	fsr2l,f,c
 22746   00739E  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22747   0073A0  22DA               	addwfc	fsr2h,f,c
 22748   0073A2  006F FF78  F0BB    	movff	postinc2,??_sync_window+4
 22749   0073A8  006F FF78  F0BC    	movff	postinc2,??_sync_window+5
 22750   0073AE  006F FF78  F0BD    	movff	postinc2,??_sync_window+6
 22751   0073B4  006F FF78  F0BE    	movff	postinc2,??_sync_window+7
 22752   0073BA  51B7               	movf	??_sync_window& (0+255),w,b
 22753   0073BC  25BB               	addwf	(??_sync_window+4)& (0+255),w,b
 22754   0073BE  6FAD               	movwf	disk_write@sector& (0+255),b
 22755   0073C0  51B8               	movf	(??_sync_window+1)& (0+255),w,b
 22756   0073C2  21BC               	addwfc	(??_sync_window+5)& (0+255),w,b
 22757   0073C4  6FAE               	movwf	(disk_write@sector+1)& (0+255),b
 22758   0073C6  51B9               	movf	(??_sync_window+2)& (0+255),w,b
 22759   0073C8  21BD               	addwfc	(??_sync_window+6)& (0+255),w,b
 22760   0073CA  6FAF               	movwf	(disk_write@sector+2)& (0+255),b
 22761   0073CC  51BA               	movf	(??_sync_window+3)& (0+255),w,b
 22762   0073CE  21BE               	addwfc	(??_sync_window+7)& (0+255),w,b
 22763   0073D0  6FB0               	movwf	(disk_write@sector+3)& (0+255),b
 22764   0073D2  0E00               	movlw	0
 22765   0073D4  6FB2               	movwf	(disk_write@count+1)& (0+255),b
 22766   0073D6  0E01               	movlw	1
 22767   0073D8  6FB1               	movwf	disk_write@count& (0+255),b
 22768   0073DA  EE20 F001          	lfsr	2,1
 22769   0073DE  51B5               	movf	sync_window@fs& (0+255),w,b
 22770   0073E0  26D9               	addwf	fsr2l,f,c
 22771   0073E2  51B6               	movf	(sync_window@fs+1)& (0+255),w,b
 22772   0073E4  22DA               	addwfc	fsr2h,f,c
 22773   0073E6  50DF               	movf	indf2,w,c
 22774   0073E8  EC1D  F04D         	call	_disk_write
 22775   0073EC  EFFB  F039         	goto	l898
 22776   0073F0                     l14969:
 22777                           
 22778                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 22779   0073F0  0E01               	movlw	1
 22780   0073F2  0100               	movlb	0	; () banked
 22781   0073F4  6FC7               	movwf	sync_window@res& (0+255),b
 22782   0073F6                     l898:
 22783                           
 22784                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 22785   0073F6  0100               	movlb	0	; () banked
 22786   0073F8  51C7               	movf	sync_window@res& (0+255),w,b
 22787   0073FA                     
 22788                           ; BSR set to: 0
 22789   0073FA  0012               	return		;funcret
 22790   0073FC                     __end_of_sync_window:
 22791                           	callstack 0
 22792                           
 22793 ;; *************** function _disk_write *****************
 22794 ;; Defined at:
 22795 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;  pdrv            1    wreg     unsigned char 
 22798 ;;  buff            2   75[BANK0 ] PTR const unsigned char 
 22799 ;;		 -> pb$buf(64), Fil$buf(512), STR_13(2), send_status_ok@text(3), 
 22800 ;;		 -> STR_9(12), Fil(546), FatFs(563), f_printf@pb(70), 
 22801 ;;		 -> f_puts@pb(70), f_putc@pb(70), FatFs$win(512), NULL(0), 
 22802 ;;  sector          4   77[BANK0 ] unsigned long 
 22803 ;;  count           2   81[BANK0 ] unsigned int 
 22804 ;; Auto vars:     Size  Location     Type
 22805 ;;  pdrv            1   83[BANK0 ] unsigned char 
 22806 ;;  res             1   84[BANK0 ] enum E12
 22807 ;; Return value:  Size  Location     Type
 22808 ;;                  1    wreg      enum E12
 22809 ;; Registers used:
 22810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22811 ;; Tracked objects:
 22812 ;;		On entry : 0/0
 22813 ;;		On exit  : 0/0
 22814 ;;		Unchanged: 0/0
 22815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22819 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22820 ;;Total ram usage:       10 bytes
 22821 ;; Hardware stack levels used: 1
 22822 ;; Hardware stack levels required when called: 9
 22823 ;; This function calls:
 22824 ;;		_SD_SPI_SectorWrite
 22825 ;; This function is called by:
 22826 ;;		_sync_window
 22827 ;;		_sync_fs
 22828 ;;		_dir_clear
 22829 ;;		_f_write
 22830 ;;		_f_sync
 22831 ;;		_f_read
 22832 ;; This function uses a non-reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text82
 22836   009A3A                     __ptext82:
 22837                           	callstack 0
 22838   009A3A                     _disk_write:
 22839                           	callstack 19
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;incstack = 0
 22843                           ;disk_write@pdrv stored from wreg
 22844   009A3A  0100               	movlb	0	; () banked
 22845   009A3C  6FB3               	movwf	disk_write@pdrv& (0+255),b
 22846   009A3E                     
 22847                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 22848   009A3E  0E04               	movlw	4
 22849   009A40  0100               	movlb	0	; () banked
 22850   009A42  6FB4               	movwf	disk_write@res& (0+255),b
 22851                           
 22852                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 22853   009A44  EF48  F04D         	goto	l14933
 22854   009A48                     l14925:
 22855                           
 22856                           ; BSR set to: 0
 22857                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 22858   009A48  C0AD  F090         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 22859   009A4C  C0AE  F091         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 22860   009A50  C0AF  F092         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 22861   009A54  C0B0  F093         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 22862   009A58  C0AB  F094         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 22863   009A5C  C0AC  F095         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 22864   009A60  C0B1  F096         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 22865   009A64  C0B2  F097         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 22866   009A68  EC38  F03F         	call	_SD_SPI_SectorWrite	;wreg free
 22867   009A6C  06E8               	decf	wreg,f,c
 22868   009A6E  A4D8               	btfss	status,2,c
 22869   009A70  EF3C  F04D         	goto	u17451
 22870   009A74  EF3E  F04D         	goto	u17450
 22871   009A78                     u17451:
 22872   009A78  EF43  F04D         	goto	l14929
 22873   009A7C                     u17450:
 22874   009A7C                     
 22875                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 22876   009A7C  0E00               	movlw	0
 22877   009A7E  0100               	movlb	0	; () banked
 22878   009A80  6FB4               	movwf	disk_write@res& (0+255),b
 22879                           
 22880                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 22881   009A82  EF4F  F04D         	goto	l14935
 22882   009A86                     l14929:
 22883                           
 22884                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 22885   009A86  0E01               	movlw	1
 22886   009A88  0100               	movlb	0	; () banked
 22887   009A8A  6FB4               	movwf	disk_write@res& (0+255),b
 22888   009A8C  EF4F  F04D         	goto	l14935
 22889   009A90                     l14933:
 22890                           
 22891                           ; BSR set to: 0
 22892   009A90  51B3               	movf	disk_write@pdrv& (0+255),w,b
 22893                           
 22894                           ; Switch size 1, requested type "simple"
 22895                           ; Number of cases is 1, Range of values is 0 to 0
 22896                           ; switch strategies available:
 22897                           ; Name         Instructions Cycles
 22898                           ; simple_byte            4     3 (average)
 22899                           ;	Chosen strategy is simple_byte
 22900   009A92  0A00               	xorlw	0	; case 0
 22901   009A94  B4D8               	btfsc	status,2,c
 22902   009A96  EF24  F04D         	goto	l14925
 22903   009A9A  EF4F  F04D         	goto	l14935
 22904   009A9E                     l14935:
 22905                           
 22906                           ; BSR set to: 0
 22907                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 22908   009A9E  51B4               	movf	disk_write@res& (0+255),w,b
 22909   009AA0                     
 22910                           ; BSR set to: 0
 22911   009AA0  0012               	return		;funcret
 22912   009AA2                     __end_of_disk_write:
 22913                           	callstack 0
 22914                           
 22915 ;; *************** function _SD_SPI_SectorWrite *****************
 22916 ;; Defined at:
 22917 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 22918 ;; Parameters:    Size  Location     Type
 22919 ;;  sector_addre    4   48[BANK0 ] unsigned long 
 22920 ;;  buffer          2   52[BANK0 ] PTR const unsigned char 
 22921 ;;		 -> pb$buf(64), Fil$buf(512), STR_13(2), send_status_ok@text(3), 
 22922 ;;		 -> STR_9(12), Fil(546), FatFs(563), f_printf@pb(70), 
 22923 ;;		 -> f_puts@pb(70), f_putc@pb(70), FatFs$win(512), NULL(0), 
 22924 ;;  sector_count    2   54[BANK0 ] unsigned short 
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;  info           13   62[BANK0 ] struct SD_ASYNC_IO
 22927 ;;  i               2   60[BANK0 ] unsigned short 
 22928 ;;  status          1   59[BANK0 ] unsigned char 
 22929 ;;  result          1   58[BANK0 ] _Bool 
 22930 ;; Return value:  Size  Location     Type
 22931 ;;                  1    wreg      _Bool 
 22932 ;; Registers used:
 22933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 22934 ;; Tracked objects:
 22935 ;;		On entry : 0/0
 22936 ;;		On exit  : 0/0
 22937 ;;		Unchanged: 0/0
 22938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22942 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22943 ;;Total ram usage:       27 bytes
 22944 ;; Hardware stack levels used: 1
 22945 ;; Hardware stack levels required when called: 8
 22946 ;; This function calls:
 22947 ;;		_SDFAST_open
 22948 ;;		_SDSLOW_open
 22949 ;;		_SD_SPI_AsyncWriteTasks
 22950 ;;		_SPI1_Close
 22951 ;; This function is called by:
 22952 ;;		_disk_write
 22953 ;; This function uses a non-reentrant model
 22954 ;;
 22955                           
 22956                           	psect	text83
 22957   007E70                     __ptext83:
 22958                           	callstack 0
 22959   007E70                     _SD_SPI_SectorWrite:
 22960                           	callstack 19
 22961   007E70                     
 22962                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 22963   007E70  0E00               	movlw	0
 22964   007E72  0100               	movlb	0	; () banked
 22965   007E74  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 22966                           
 22967                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 22968   007E76  0E00               	movlw	0
 22969   007E78  6F9D               	movwf	(SD_SPI_SectorWrite@i+1)& (0+255),b
 22970   007E7A  0E00               	movlw	0
 22971   007E7C  6F9C               	movwf	SD_SPI_SectorWrite@i& (0+255),b
 22972   007E7E  EFCC  F03F         	goto	l14741
 22973   007E82                     l14713:
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 22977   007E82  0E02               	movlw	2
 22978   007E84  6F9F               	movwf	(SD_SPI_SectorWrite@info+1)& (0+255),b
 22979   007E86  0E00               	movlw	0
 22980   007E88  6F9E               	movwf	SD_SPI_SectorWrite@info& (0+255),b
 22981                           
 22982                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 22983   007E8A  0E00               	movlw	0
 22984   007E8C  6FA0               	movwf	(SD_SPI_SectorWrite@info+2)& (0+255),b
 22985   007E8E  0E02               	movlw	2
 22986   007E90  6FA1               	movwf	(SD_SPI_SectorWrite@info+3)& (0+255),b
 22987   007E92  0E00               	movlw	0
 22988   007E94  6FA2               	movwf	(SD_SPI_SectorWrite@info+4)& (0+255),b
 22989   007E96  0E00               	movlw	0
 22990   007E98  6FA3               	movwf	(SD_SPI_SectorWrite@info+5)& (0+255),b
 22991   007E9A                     
 22992                           ; BSR set to: 0
 22993                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 22994   007E9A  C09C  F098         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 22995   007E9E  C09D  F099         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 22996   007EA2  0E09               	movlw	9
 22997   007EA4                     u17115:
 22998   007EA4  90D8               	bcf	status,0,c
 22999   007EA6  3798               	rlcf	??_SD_SPI_SectorWrite& (0+255),f,b
 23000   007EA8  3799               	rlcf	(??_SD_SPI_SectorWrite+1)& (0+255),f,b
 23001   007EAA  2EE8               	decfsz	wreg,f,c
 23002   007EAC  EF52  F03F         	goto	u17115
 23003   007EB0  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23004   007EB2  2594               	addwf	SD_SPI_SectorWrite@buffer& (0+255),w,b
 23005   007EB4  6FA4               	movwf	(SD_SPI_SectorWrite@info+6)& (0+255),b
 23006   007EB6  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23007   007EB8  2195               	addwfc	(SD_SPI_SectorWrite@buffer+1)& (0+255),w,b
 23008   007EBA  6FA5               	movwf	(SD_SPI_SectorWrite@info+7)& (0+255),b
 23009   007EBC                     
 23010                           ; BSR set to: 0
 23011                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 23012   007EBC  519C               	movf	SD_SPI_SectorWrite@i& (0+255),w,b
 23013   007EBE  2590               	addwf	SD_SPI_SectorWrite@sector_address& (0+255),w,b
 23014   007EC0  6FA6               	movwf	(SD_SPI_SectorWrite@info+8)& (0+255),b
 23015   007EC2  519D               	movf	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 23016   007EC4  2191               	addwfc	(SD_SPI_SectorWrite@sector_address+1)& (0+255),w,b
 23017   007EC6  6FA7               	movwf	(SD_SPI_SectorWrite@info+9)& (0+255),b
 23018   007EC8  0E00               	movlw	0
 23019   007ECA  2192               	addwfc	(SD_SPI_SectorWrite@sector_address+2)& (0+255),w,b
 23020   007ECC  6FA8               	movwf	(SD_SPI_SectorWrite@info+10)& (0+255),b
 23021   007ECE  0E00               	movlw	0
 23022   007ED0  2193               	addwfc	(SD_SPI_SectorWrite@sector_address+3)& (0+255),w,b
 23023   007ED2  6FA9               	movwf	(SD_SPI_SectorWrite@info+11)& (0+255),b
 23024                           
 23025                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 23026   007ED4  0E01               	movlw	1
 23027   007ED6  6FAA               	movwf	(SD_SPI_SectorWrite@info+12)& (0+255),b
 23028   007ED8                     
 23029                           ; BSR set to: 0
 23030                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 23031   007ED8  0E95               	movlw	low (_spiMaster+2)
 23032   007EDA  6EF6               	movwf	tblptrl,c
 23033   007EDC  0EFF               	movlw	high (_spiMaster+2)
 23034   007EDE  6EF7               	movwf	tblptrh,c
 23035   007EE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23036   007EE0  6AF8               	clrf	tblptru,c
 23037   007EE2                     	endif
 23038   007EE2                     	if	0	;tblptru may be non-zero
 23039   007EE2                     	endif
 23040   007EE2  0009               	tblrd		*+
 23041   007EE4  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 23042   007EEA  0009               	tblrd		*+
 23043   007EEC  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 23044   007EF2  D802               	call	u17128
 23045   007EF4  EF85  F03F         	goto	u17129
 23046   007EF8                     u17128:
 23047   007EF8  0005               	push	
 23048   007EFA  6EFA               	movwf	pclath,c
 23049   007EFC  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23050   007EFE  6EFD               	movwf	tosl,c
 23051   007F00  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23052   007F02  6EFE               	movwf	tosh,c
 23053   007F04  6AFF               	clrf	tosu,c
 23054   007F06  50FA               	movf	pclath,w,c
 23055   007F08  0012               	return		;indir
 23056   007F0A                     u17129:
 23057   007F0A  0900               	iorlw	0
 23058   007F0C  A4D8               	btfss	status,2,c
 23059   007F0E  EF8B  F03F         	goto	u17131
 23060   007F12  EF8D  F03F         	goto	u17130
 23061   007F16                     u17131:
 23062   007F16  EF90  F03F         	goto	l1581
 23063   007F1A                     u17130:
 23064   007F1A                     
 23065                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 23066   007F1A  0E00               	movlw	0
 23067   007F1C  EFD8  F03F         	goto	l1580
 23068   007F20                     l1581:
 23069   007F20  9ABA               	bcf	186,5,c	;volatile
 23070   007F22                     l14725:
 23071                           
 23072                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 23073   007F22  0E9E               	movlw	low SD_SPI_SectorWrite@info
 23074   007F24  0100               	movlb	0	; () banked
 23075   007F26  6F82               	movwf	SD_SPI_AsyncWriteTasks@info& (0+255),b
 23076   007F28  EC97  F013         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 23077   007F2C  0100               	movlb	0	; () banked
 23078   007F2E  6F9B               	movwf	SD_SPI_SectorWrite@status& (0+255),b
 23079   007F30                     
 23080                           ; BSR set to: 0
 23081                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 23082   007F30  519B               	movf	SD_SPI_SectorWrite@status& (0+255),w,b
 23083   007F32  A4D8               	btfss	status,2,c
 23084   007F34  EF9E  F03F         	goto	u17141
 23085   007F38  EFA0  F03F         	goto	u17140
 23086   007F3C                     u17141:
 23087   007F3C  EFA4  F03F         	goto	l14733
 23088   007F40                     u17140:
 23089   007F40                     
 23090                           ; BSR set to: 0
 23091                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 23092   007F40  0E01               	movlw	1
 23093   007F42  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 23094                           
 23095                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 23096   007F44  EFAE  F03F         	goto	l1589
 23097   007F48                     l14733:
 23098                           
 23099                           ; BSR set to: 0
 23100   007F48  299B               	incf	SD_SPI_SectorWrite@status& (0+255),w,b
 23101   007F4A  A4D8               	btfss	status,2,c
 23102   007F4C  EFAA  F03F         	goto	u17151
 23103   007F50  EFAC  F03F         	goto	u17150
 23104   007F54                     u17151:
 23105   007F54  EF91  F03F         	goto	l14725
 23106   007F58                     u17150:
 23107   007F58                     
 23108                           ; BSR set to: 0
 23109                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 23110   007F58  0E00               	movlw	0
 23111   007F5A  6F9A               	movwf	SD_SPI_SectorWrite@result& (0+255),b
 23112   007F5C                     l1589:
 23113                           
 23114                           ; BSR set to: 0
 23115   007F5C  8ABA               	bsf	186,5,c	;volatile
 23116   007F5E                     
 23117                           ; BSR set to: 0
 23118                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 23119   007F5E  0E93               	movlw	low _spiMaster
 23120   007F60  6EF6               	movwf	tblptrl,c
 23121   007F62                     	if	1	;There is more than 1 active tblptr byte
 23122   007F62  0EFF               	movlw	high _spiMaster
 23123   007F64  6EF7               	movwf	tblptrh,c
 23124   007F66                     	endif
 23125   007F66                     	if	1	;There are 3 active tblptr bytes
 23126   007F66  0E00               	movlw	low (_spiMaster shr (0+16))
 23127   007F68  6EF8               	movwf	tblptru,c
 23128   007F6A                     	endif
 23129   007F6A  0009               	tblrd		*+
 23130   007F6C  006F FFD4  F098    	movff	tablat,??_SD_SPI_SectorWrite
 23131   007F72  0009               	tblrd		*+
 23132   007F74  006F FFD4  F099    	movff	tablat,??_SD_SPI_SectorWrite+1
 23133   007F7A  D802               	call	u17168
 23134   007F7C  EFC9  F03F         	goto	u17169
 23135   007F80                     u17168:
 23136   007F80  0005               	push	
 23137   007F82  6EFA               	movwf	pclath,c
 23138   007F84  5198               	movf	??_SD_SPI_SectorWrite& (0+255),w,b
 23139   007F86  6EFD               	movwf	tosl,c
 23140   007F88  5199               	movf	(??_SD_SPI_SectorWrite+1)& (0+255),w,b
 23141   007F8A  6EFE               	movwf	tosh,c
 23142   007F8C  6AFF               	clrf	tosu,c
 23143   007F8E  50FA               	movf	pclath,w,c
 23144   007F90  0012               	return		;indir
 23145   007F92                     u17169:
 23146   007F92                     
 23147                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 23148   007F92  0100               	movlb	0	; () banked
 23149   007F94  4B9C               	infsnz	SD_SPI_SectorWrite@i& (0+255),f,b
 23150   007F96  2B9D               	incf	(SD_SPI_SectorWrite@i+1)& (0+255),f,b
 23151   007F98                     l14741:
 23152                           
 23153                           ; BSR set to: 0
 23154   007F98  5196               	movf	SD_SPI_SectorWrite@sector_count& (0+255),w,b
 23155   007F9A  5D9C               	subwf	SD_SPI_SectorWrite@i& (0+255),w,b
 23156   007F9C  5197               	movf	(SD_SPI_SectorWrite@sector_count+1)& (0+255),w,b
 23157   007F9E  599D               	subwfb	(SD_SPI_SectorWrite@i+1)& (0+255),w,b
 23158   007FA0  A0D8               	btfss	status,0,c
 23159   007FA2  EFD5  F03F         	goto	u17171
 23160   007FA6  EFD7  F03F         	goto	u17170
 23161   007FAA                     u17171:
 23162   007FAA  EF41  F03F         	goto	l14713
 23163   007FAE                     u17170:
 23164   007FAE                     
 23165                           ; BSR set to: 0
 23166                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 23167   007FAE  519A               	movf	SD_SPI_SectorWrite@result& (0+255),w,b
 23168   007FB0                     l1580:
 23169   007FB0  0012               	return		;funcret
 23170   007FB2                     __end_of_SD_SPI_SectorWrite:
 23171                           	callstack 0
 23172                           
 23173 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 23174 ;; Defined at:
 23175 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 23176 ;; Parameters:    Size  Location     Type
 23177 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 23178 ;;		 -> SD_SPI_SectorWrite@info(13), 
 23179 ;; Auto vars:     Size  Location     Type
 23180 ;;  response        5   39[BANK0 ] struct .
 23181 ;;  preEraseBloc    4   44[BANK0 ] unsigned long 
 23182 ;; Return value:  Size  Location     Type
 23183 ;;                  1    wreg      unsigned char 
 23184 ;; Registers used:
 23185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 23186 ;; Tracked objects:
 23187 ;;		On entry : 0/0
 23188 ;;		On exit  : 0/0
 23189 ;;		Unchanged: 0/0
 23190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23191 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23192 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23194 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23195 ;;Total ram usage:       14 bytes
 23196 ;; Hardware stack levels used: 1
 23197 ;; Hardware stack levels required when called: 7
 23198 ;; This function calls:
 23199 ;;		_SD_SendCmd
 23200 ;;		_SPI1_ExchangeBlock
 23201 ;;		_SPI1_ExchangeByte
 23202 ;; This function is called by:
 23203 ;;		_SD_SPI_SectorWrite
 23204 ;; This function uses a non-reentrant model
 23205 ;;
 23206                           
 23207                           	psect	text84
 23208   00272E                     __ptext84:
 23209                           	callstack 0
 23210   00272E                     _SD_SPI_AsyncWriteTasks:
 23211                           	callstack 19
 23212   00272E                     
 23213                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 23214   00272E  EFD8  F016         	goto	l14699
 23215   002732                     l14513:
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 23219   002732  0E00               	movlw	0
 23220   002734  EFF9  F016         	goto	l1717
 23221   002738                     l14517:
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 23225   002738  0E02               	movlw	2
 23226   00273A  6E53               	movwf	(_mediaInformation+3)^0,c
 23227                           
 23228                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 23229   00273C  0E02               	movlw	2
 23230   00273E  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 23231   002740  0E00               	movlw	0
 23232   002742  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 23233   002744                     
 23234                           ; BSR set to: 0
 23235                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 23236   002744  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23237   002746  6ED9               	movwf	fsr2l,c
 23238   002748  6ADA               	clrf	fsr2h,c
 23239   00274A  EE10  F02D         	lfsr	1,_ioInfo
 23240   00274E  0E0C               	movlw	12
 23241   002750                     u16751:
 23242   002750  006F FF6F FFE3     	movff	plusw2,plusw1
 23243   002756  06E8               	decf	wreg,f,c
 23244   002758  E2FB               	bc	u16751
 23245   00275A                     
 23246                           ; BSR set to: 0
 23247                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 23248   00275A  5032               	movf	(_ioInfo+5)^0,w,c
 23249   00275C  1031               	iorwf	(_ioInfo+4)^0,w,c
 23250   00275E  E108               	bnz	u16761
 23251   002760  042F               	decf	(_ioInfo+2)^0,w,c
 23252   002762  0E02               	movlw	2
 23253   002764  5830               	subwfb	(_ioInfo+3)^0,w,c
 23254   002766  B0D8               	btfsc	status,0,c
 23255   002768  EFB8  F013         	goto	u16761
 23256   00276C  EFBA  F013         	goto	u16760
 23257   002770                     u16761:
 23258   002770  EFBE  F013         	goto	l14525
 23259   002774                     u16760:
 23260   002774                     
 23261                           ; BSR set to: 0
 23262                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 23263   002774  0E0A               	movlw	10
 23264   002776  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 23265                           
 23266                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 23267   002778  EF13  F014         	goto	l14539
 23268   00277C                     l14525:
 23269                           
 23270                           ; BSR set to: 0
 23271                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 23272   00277C  0E0B               	movlw	11
 23273   00277E  6E4A               	movwf	SD_SPI_AsyncWriteTasks@command^0,c
 23274   002780                     
 23275                           ; BSR set to: 0
 23276                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 23277   002780  C02F  F083         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 23278   002784  C030  F084         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 23279   002788  C031  F085         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 23280   00278C  C032  F086         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 23281   002790  0E0A               	movlw	10
 23282   002792  EFD0  F013         	goto	u16770
 23283   002796                     u16775:
 23284   002796  90D8               	bcf	status,0,c
 23285   002798  3386               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),f,b
 23286   00279A  3385               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),f,b
 23287   00279C  3384               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),f,b
 23288   00279E  3383               	rrcf	??_SD_SPI_AsyncWriteTasks& (0+255),f,b
 23289   0027A0                     u16770:
 23290   0027A0  2EE8               	decfsz	wreg,f,c
 23291   0027A2  EFCB  F013         	goto	u16775
 23292   0027A6  C083  F08C         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 23293   0027AA  C084  F08D         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 23294   0027AE  C085  F08E         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 23295   0027B2  C086  F08F         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 23296   0027B6                     
 23297                           ; BSR set to: 0
 23298                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 23299   0027B6  518C               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),w,b
 23300   0027B8  118D               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),w,b
 23301   0027BA  118E               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),w,b
 23302   0027BC  118F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),w,b
 23303   0027BE  A4D8               	btfss	status,2,c
 23304   0027C0  EFE4  F013         	goto	u16781
 23305   0027C4  EFE6  F013         	goto	u16780
 23306   0027C8                     u16781:
 23307   0027C8  EFEC  F013         	goto	l14533
 23308   0027CC                     u16780:
 23309   0027CC                     
 23310                           ; BSR set to: 0
 23311                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 23312   0027CC  0E01               	movlw	1
 23313   0027CE  278C               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount& (0+255),f,b
 23314   0027D0  0E00               	movlw	0
 23315   0027D2  238D               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)& (0+255),f,b
 23316   0027D4  238E               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)& (0+255),f,b
 23317   0027D6  238F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)& (0+255),f,b
 23318   0027D8                     l14533:
 23319                           
 23320                           ; BSR set to: 0
 23321                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 23322   0027D8  0E00               	movlw	0
 23323   0027DA  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 23324   0027DC  0E00               	movlw	0
 23325   0027DE  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 23326   0027E0  0E00               	movlw	0
 23327   0027E2  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 23328   0027E4  0E00               	movlw	0
 23329   0027E6  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 23330   0027E8  0E0F               	movlw	15
 23331   0027EA  EC82  F01C         	call	_SD_SendCmd
 23332   0027EE  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 23333   0027F2  0E04               	movlw	4
 23334   0027F4                     u16791:
 23335   0027F4  006F FFAF FFDB     	movff	plusw0,plusw2
 23336   0027FA  06E8               	decf	wreg,f,c
 23337   0027FC  E2FB               	bc	u16791
 23338   0027FE                     
 23339                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 23340   0027FE  0100               	movlb	0	; () banked
 23341   002800  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 23342   002802  A4D8               	btfss	status,2,c
 23343   002804  EF06  F014         	goto	u16801
 23344   002808  EF08  F014         	goto	u16800
 23345   00280C                     u16801:
 23346   00280C  EF13  F014         	goto	l14539
 23347   002810                     u16800:
 23348   002810                     
 23349                           ; BSR set to: 0
 23350                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 23351   002810  C08C  F06B         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 23352   002814  C08D  F06C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 23353   002818  C08E  F06D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 23354   00281C  C08F  F06E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 23355   002820  0E13               	movlw	19
 23356   002822  EC82  F01C         	call	_SD_SendCmd
 23357   002826                     l14539:
 23358                           
 23359                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 23360   002826  5058               	movf	(_mediaInformation+8)^0,w,c
 23361   002828  A4D8               	btfss	status,2,c
 23362   00282A  EF19  F014         	goto	u16811
 23363   00282E  EF1B  F014         	goto	u16810
 23364   002832                     u16811:
 23365   002832  EF24  F014         	goto	l14543
 23366   002836                     u16810:
 23367   002836                     
 23368                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 23369   002836  0E09               	movlw	9
 23370   002838                     u16825:
 23371   002838  90D8               	bcf	status,0,c
 23372   00283A  3635               	rlcf	(_ioInfo+8)^0,f,c
 23373   00283C  3636               	rlcf	(_ioInfo+9)^0,f,c
 23374   00283E  3637               	rlcf	(_ioInfo+10)^0,f,c
 23375   002840  3638               	rlcf	(_ioInfo+11)^0,f,c
 23376   002842  2EE8               	decfsz	wreg,f,c
 23377   002844  EF1C  F014         	goto	u16825
 23378   002848                     l14543:
 23379                           
 23380                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 23381   002848  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 23382   00284C  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 23383   002850  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 23384   002854  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 23385   002858  504A               	movf	SD_SPI_AsyncWriteTasks@command^0,w,c
 23386   00285A  EC82  F01C         	call	_SD_SendCmd
 23387   00285E  EE20  F087         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 23388   002862  0E04               	movlw	4
 23389   002864                     u16831:
 23390   002864  006F FFAF FFDB     	movff	plusw0,plusw2
 23391   00286A  06E8               	decf	wreg,f,c
 23392   00286C  E2FB               	bc	u16831
 23393   00286E                     
 23394                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 23395   00286E  0100               	movlb	0	; () banked
 23396   002870  5187               	movf	SD_SPI_AsyncWriteTasks@response& (0+255),w,b
 23397   002872  B4D8               	btfsc	status,2,c
 23398   002874  EF3E  F014         	goto	u16841
 23399   002878  EF40  F014         	goto	u16840
 23400   00287C                     u16841:
 23401   00287C  EF4A  F014         	goto	l14555
 23402   002880                     u16840:
 23403   002880                     
 23404                           ; BSR set to: 0
 23405                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 23406   002880  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23407   002882  6ED9               	movwf	fsr2l,c
 23408   002884  6ADA               	clrf	fsr2h,c
 23409   002886  0E0C               	movlw	12
 23410   002888  26D9               	addwf	fsr2l,f,c
 23411   00288A  0EFF               	movlw	255
 23412   00288C  6EDF               	movwf	indf2,c
 23413   00288E                     l14549:
 23414                           
 23415                           ; BSR set to: 0
 23416                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 23417   00288E  0EFF               	movlw	255
 23418   002890  EFF9  F016         	goto	l1717
 23419   002894                     l14555:
 23420                           
 23421                           ; BSR set to: 0
 23422                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 23423   002894  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23424   002896  6ED9               	movwf	fsr2l,c
 23425   002898  6ADA               	clrf	fsr2h,c
 23426   00289A  0E0C               	movlw	12
 23427   00289C  26D9               	addwf	fsr2l,f,c
 23428   00289E  0E02               	movlw	2
 23429   0028A0  6EDF               	movwf	indf2,c
 23430   0028A2                     l14557:
 23431                           
 23432                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 23433   0028A2  0E02               	movlw	2
 23434   0028A4  EFF9  F016         	goto	l1717
 23435   0028A8                     l14561:
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 23439   0028A8  0E02               	movlw	2
 23440   0028AA  1843               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 23441   0028AC  1042               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 23442   0028AE  A4D8               	btfss	status,2,c
 23443   0028B0  EF5C  F014         	goto	u16851
 23444   0028B4  EF5E  F014         	goto	u16850
 23445   0028B8                     u16851:
 23446   0028B8  EF9D  F014         	goto	l14569
 23447   0028BC                     u16850:
 23448   0028BC                     
 23449                           ; BSR set to: 0
 23450                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 23451   0028BC  0E0B               	movlw	11
 23452   0028BE  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 23453   0028C0  A4D8               	btfss	status,2,c
 23454   0028C2  EF65  F014         	goto	u16861
 23455   0028C6  EF67  F014         	goto	u16860
 23456   0028CA                     u16861:
 23457   0028CA  EF83  F014         	goto	l14567
 23458   0028CE                     u16860:
 23459   0028CE                     
 23460                           ; BSR set to: 0
 23461                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 23462   0028CE  0E97               	movlw	low (_spiMaster+4)
 23463   0028D0  6EF6               	movwf	tblptrl,c
 23464   0028D2  0EFF               	movlw	high (_spiMaster+4)
 23465   0028D4  6EF7               	movwf	tblptrh,c
 23466   0028D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23467   0028D6  6AF8               	clrf	tblptru,c
 23468   0028D8                     	endif
 23469   0028D8                     	if	0	;tblptru may be non-zero
 23470   0028D8                     	endif
 23471   0028D8  0009               	tblrd		*+
 23472   0028DA  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23473   0028E0  0009               	tblrd		*+
 23474   0028E2  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23475   0028E8  D802               	call	u16878
 23476   0028EA  EF81  F014         	goto	u16879
 23477   0028EE                     u16878:
 23478   0028EE  0005               	push	
 23479   0028F0  6EFA               	movwf	pclath,c
 23480   0028F2  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23481   0028F4  6EFD               	movwf	tosl,c
 23482   0028F6  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23483   0028F8  6EFE               	movwf	tosh,c
 23484   0028FA  6AFF               	clrf	tosu,c
 23485   0028FC  50FA               	movf	pclath,w,c
 23486   0028FE  0EFC               	movlw	252
 23487   002900  0012               	return		;indir
 23488   002902                     u16879:
 23489                           
 23490                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 23491   002902  EF9D  F014         	goto	l14569
 23492   002906                     l14567:
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 23496   002906  0E97               	movlw	low (_spiMaster+4)
 23497   002908  6EF6               	movwf	tblptrl,c
 23498   00290A  0EFF               	movlw	high (_spiMaster+4)
 23499   00290C  6EF7               	movwf	tblptrh,c
 23500   00290E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23501   00290E  6AF8               	clrf	tblptru,c
 23502   002910                     	endif
 23503   002910                     	if	0	;tblptru may be non-zero
 23504   002910                     	endif
 23505   002910  0009               	tblrd		*+
 23506   002912  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23507   002918  0009               	tblrd		*+
 23508   00291A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23509   002920  D802               	call	u16888
 23510   002922  EF9D  F014         	goto	u16889
 23511   002926                     u16888:
 23512   002926  0005               	push	
 23513   002928  6EFA               	movwf	pclath,c
 23514   00292A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23515   00292C  6EFD               	movwf	tosl,c
 23516   00292E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23517   002930  6EFE               	movwf	tosh,c
 23518   002932  6AFF               	clrf	tosu,c
 23519   002934  50FA               	movf	pclath,w,c
 23520   002936  0EFE               	movlw	254
 23521   002938  0012               	return		;indir
 23522   00293A                     u16889:
 23523   00293A                     l14569:
 23524                           
 23525                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 23526   00293A  0100               	movlb	0	; () banked
 23527   00293C  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23528   00293E  6ED9               	movwf	fsr2l,c
 23529   002940  6ADA               	clrf	fsr2h,c
 23530   002942  006F FF78  F02D    	movff	postinc2,_ioInfo
 23531   002948  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 23532   00294E                     
 23533                           ; BSR set to: 0
 23534                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 23535   00294E  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23536   002950  6ED9               	movwf	fsr2l,c
 23537   002952  6ADA               	clrf	fsr2h,c
 23538   002954  0E06               	movlw	6
 23539   002956  26D9               	addwf	fsr2l,f,c
 23540   002958  006F FF78  F033    	movff	postinc2,_ioInfo+6
 23541   00295E  006F FF74  F034    	movff	postdec2,_ioInfo+7
 23542   002964                     
 23543                           ; BSR set to: 0
 23544                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 23545   002964  502D               	movf	_ioInfo^0,w,c
 23546   002966  6F83               	movwf	??_SD_SPI_AsyncWriteTasks& (0+255),b
 23547   002968  502E               	movf	(_ioInfo+1)^0,w,c
 23548   00296A  6F84               	movwf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),b
 23549   00296C  6B85               	clrf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),b
 23550   00296E  6B86               	clrf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),b
 23551   002970  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23552   002972  5E2F               	subwf	(_ioInfo+2)^0,f,c
 23553   002974  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23554   002976  5A30               	subwfb	(_ioInfo+3)^0,f,c
 23555   002978  5185               	movf	(??_SD_SPI_AsyncWriteTasks+2)& (0+255),w,b
 23556   00297A  5A31               	subwfb	(_ioInfo+4)^0,f,c
 23557   00297C  5186               	movf	(??_SD_SPI_AsyncWriteTasks+3)& (0+255),w,b
 23558   00297E  5A32               	subwfb	(_ioInfo+5)^0,f,c
 23559   002980                     
 23560                           ; BSR set to: 0
 23561                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 23562   002980  502D               	movf	_ioInfo^0,w,c
 23563   002982  5E42               	subwf	SD_SPI_AsyncWriteTasks@blockCounter^0,f,c
 23564   002984  502E               	movf	(_ioInfo+1)^0,w,c
 23565   002986  5A43               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,f,c
 23566   002988                     
 23567                           ; BSR set to: 0
 23568                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 23569   002988  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 23570   00298C  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 23571   002990  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 23572   002994  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 23573   002998  0E99               	movlw	low (_spiMaster+6)
 23574   00299A  6EF6               	movwf	tblptrl,c
 23575   00299C  0EFF               	movlw	high (_spiMaster+6)
 23576   00299E  6EF7               	movwf	tblptrh,c
 23577   0029A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23578   0029A0  6AF8               	clrf	tblptru,c
 23579   0029A2                     	endif
 23580   0029A2                     	if	0	;tblptru may be non-zero
 23581   0029A2                     	endif
 23582   0029A2  0009               	tblrd		*+
 23583   0029A4  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23584   0029AA  0009               	tblrd		*+
 23585   0029AC  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23586   0029B2  D802               	call	u16898
 23587   0029B4  EFE5  F014         	goto	u16899
 23588   0029B8                     u16898:
 23589   0029B8  0005               	push	
 23590   0029BA  6EFA               	movwf	pclath,c
 23591   0029BC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23592   0029BE  6EFD               	movwf	tosl,c
 23593   0029C0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23594   0029C2  6EFE               	movwf	tosh,c
 23595   0029C4  6AFF               	clrf	tosu,c
 23596   0029C6  50FA               	movf	pclath,w,c
 23597   0029C8  0012               	return		;indir
 23598   0029CA                     u16899:
 23599   0029CA                     
 23600                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 23601   0029CA  5042               	movf	SD_SPI_AsyncWriteTasks@blockCounter^0,w,c
 23602   0029CC  1043               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,w,c
 23603   0029CE  A4D8               	btfss	status,2,c
 23604   0029D0  EFEC  F014         	goto	u16901
 23605   0029D4  EFEE  F014         	goto	u16900
 23606   0029D8                     u16901:
 23607   0029D8  EF51  F014         	goto	l14557
 23608   0029DC                     u16900:
 23609   0029DC                     
 23610                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 23611   0029DC  0E02               	movlw	2
 23612   0029DE  6E43               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)^0,c
 23613   0029E0  0E00               	movlw	0
 23614   0029E2  6E42               	movwf	SD_SPI_AsyncWriteTasks@blockCounter^0,c
 23615   0029E4                     
 23616                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 23617   0029E4  0E97               	movlw	low (_spiMaster+4)
 23618   0029E6  6EF6               	movwf	tblptrl,c
 23619   0029E8  0EFF               	movlw	high (_spiMaster+4)
 23620   0029EA  6EF7               	movwf	tblptrh,c
 23621   0029EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23622   0029EC  6AF8               	clrf	tblptru,c
 23623   0029EE                     	endif
 23624   0029EE                     	if	0	;tblptru may be non-zero
 23625   0029EE                     	endif
 23626   0029EE  0009               	tblrd		*+
 23627   0029F0  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23628   0029F6  0009               	tblrd		*+
 23629   0029F8  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23630   0029FE  D802               	call	u16918
 23631   002A00  EF0D  F015         	goto	u16919
 23632   002A04                     u16918:
 23633   002A04  0005               	push	
 23634   002A06  6EFA               	movwf	pclath,c
 23635   002A08  0100               	movlb	0	; () banked
 23636   002A0A  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23637   002A0C  6EFD               	movwf	tosl,c
 23638   002A0E  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23639   002A10  6EFE               	movwf	tosh,c
 23640   002A12  6AFF               	clrf	tosu,c
 23641   002A14  50FA               	movf	pclath,w,c
 23642   002A16  0EFF               	movlw	255
 23643   002A18  0012               	return		;indir
 23644   002A1A                     u16919:
 23645   002A1A                     
 23646                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 23647   002A1A  0E97               	movlw	low (_spiMaster+4)
 23648   002A1C  6EF6               	movwf	tblptrl,c
 23649   002A1E  0EFF               	movlw	high (_spiMaster+4)
 23650   002A20  6EF7               	movwf	tblptrh,c
 23651   002A22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23652   002A22  6AF8               	clrf	tblptru,c
 23653   002A24                     	endif
 23654   002A24                     	if	0	;tblptru may be non-zero
 23655   002A24                     	endif
 23656   002A24  0009               	tblrd		*+
 23657   002A26  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23658   002A2C  0009               	tblrd		*+
 23659   002A2E  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23660   002A34  D802               	call	u16928
 23661   002A36  EF28  F015         	goto	u16929
 23662   002A3A                     u16928:
 23663   002A3A  0005               	push	
 23664   002A3C  6EFA               	movwf	pclath,c
 23665   002A3E  0100               	movlb	0	; () banked
 23666   002A40  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23667   002A42  6EFD               	movwf	tosl,c
 23668   002A44  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23669   002A46  6EFE               	movwf	tosh,c
 23670   002A48  6AFF               	clrf	tosu,c
 23671   002A4A  50FA               	movf	pclath,w,c
 23672   002A4C  0EFF               	movlw	255
 23673   002A4E  0012               	return		;indir
 23674   002A50                     u16929:
 23675   002A50                     
 23676                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 23677   002A50  0E97               	movlw	low (_spiMaster+4)
 23678   002A52  6EF6               	movwf	tblptrl,c
 23679   002A54  0EFF               	movlw	high (_spiMaster+4)
 23680   002A56  6EF7               	movwf	tblptrh,c
 23681   002A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23682   002A58  6AF8               	clrf	tblptru,c
 23683   002A5A                     	endif
 23684   002A5A                     	if	0	;tblptru may be non-zero
 23685   002A5A                     	endif
 23686   002A5A  0009               	tblrd		*+
 23687   002A5C  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23688   002A62  0009               	tblrd		*+
 23689   002A64  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23690   002A6A  D802               	call	u16938
 23691   002A6C  EF43  F015         	goto	u16939
 23692   002A70                     u16938:
 23693   002A70  0005               	push	
 23694   002A72  6EFA               	movwf	pclath,c
 23695   002A74  0100               	movlb	0	; () banked
 23696   002A76  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23697   002A78  6EFD               	movwf	tosl,c
 23698   002A7A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23699   002A7C  6EFE               	movwf	tosh,c
 23700   002A7E  6AFF               	clrf	tosu,c
 23701   002A80  50FA               	movf	pclath,w,c
 23702   002A82  0EFF               	movlw	255
 23703   002A84  0012               	return		;indir
 23704   002A86                     u16939:
 23705   002A86  0B1F               	andlw	31
 23706   002A88  0A05               	xorlw	5
 23707   002A8A  B4D8               	btfsc	status,2,c
 23708   002A8C  EF4A  F015         	goto	u16941
 23709   002A90  EF4C  F015         	goto	u16940
 23710   002A94                     u16941:
 23711   002A94  EF57  F015         	goto	l14595
 23712   002A98                     u16940:
 23713   002A98                     
 23714                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 23715   002A98  0100               	movlb	0	; () banked
 23716   002A9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23717   002A9C  6ED9               	movwf	fsr2l,c
 23718   002A9E  6ADA               	clrf	fsr2h,c
 23719   002AA0  0E0C               	movlw	12
 23720   002AA2  26D9               	addwf	fsr2l,f,c
 23721   002AA4  0EFE               	movlw	254
 23722   002AA6  6EDF               	movwf	indf2,c
 23723   002AA8                     l14591:
 23724                           
 23725                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 23726   002AA8  0E03               	movlw	3
 23727   002AAA  EFF9  F016         	goto	l1717
 23728   002AAE                     l14595:
 23729                           
 23730                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 23731   002AAE  0100               	movlb	0	; () banked
 23732   002AB0  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23733   002AB2  6ED9               	movwf	fsr2l,c
 23734   002AB4  6ADA               	clrf	fsr2h,c
 23735   002AB6  0E0C               	movlw	12
 23736   002AB8  26D9               	addwf	fsr2l,f,c
 23737   002ABA  0E03               	movlw	3
 23738   002ABC  6EDF               	movwf	indf2,c
 23739   002ABE                     
 23740                           ; BSR set to: 0
 23741                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 23742   002ABE  0E00               	movlw	0
 23743   002AC0  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 23744   002AC2  0E00               	movlw	0
 23745   002AC4  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 23746   002AC6  0E0A               	movlw	10
 23747   002AC8  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 23748   002ACA  0E00               	movlw	0
 23749   002ACC  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 23750   002ACE  EF54  F015         	goto	l14591
 23751   002AD2                     l14607:
 23752                           
 23753                           ; BSR set to: 0
 23754                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 23755   002AD2  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 23756   002AD4  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 23757   002AD6  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 23758   002AD8  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 23759   002ADA  B4D8               	btfsc	status,2,c
 23760   002ADC  EF72  F015         	goto	u16951
 23761   002AE0  EF74  F015         	goto	u16950
 23762   002AE4                     u16951:
 23763   002AE4  EF44  F016         	goto	l14655
 23764   002AE8                     u16950:
 23765   002AE8                     
 23766                           ; BSR set to: 0
 23767                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 23768   002AE8  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 23769   002AEA  0E00               	movlw	0
 23770   002AEC  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 23771   002AEE  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 23772   002AF0  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 23773   002AF2                     
 23774                           ; BSR set to: 0
 23775                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 23776   002AF2  0E97               	movlw	low (_spiMaster+4)
 23777   002AF4  6EF6               	movwf	tblptrl,c
 23778   002AF6  0EFF               	movlw	high (_spiMaster+4)
 23779   002AF8  6EF7               	movwf	tblptrh,c
 23780   002AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23781   002AFA  6AF8               	clrf	tblptru,c
 23782   002AFC                     	endif
 23783   002AFC                     	if	0	;tblptru may be non-zero
 23784   002AFC                     	endif
 23785   002AFC  0009               	tblrd		*+
 23786   002AFE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23787   002B04  0009               	tblrd		*+
 23788   002B06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23789   002B0C  D802               	call	u16968
 23790   002B0E  EF93  F015         	goto	u16969
 23791   002B12                     u16968:
 23792   002B12  0005               	push	
 23793   002B14  6EFA               	movwf	pclath,c
 23794   002B16  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23795   002B18  6EFD               	movwf	tosl,c
 23796   002B1A  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23797   002B1C  6EFE               	movwf	tosh,c
 23798   002B1E  6AFF               	clrf	tosu,c
 23799   002B20  50FA               	movf	pclath,w,c
 23800   002B22  0EFF               	movlw	255
 23801   002B24  0012               	return		;indir
 23802   002B26                     u16969:
 23803   002B26                     
 23804                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 23805   002B26  0E97               	movlw	low (_spiMaster+4)
 23806   002B28  6EF6               	movwf	tblptrl,c
 23807   002B2A  0EFF               	movlw	high (_spiMaster+4)
 23808   002B2C  6EF7               	movwf	tblptrh,c
 23809   002B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23810   002B2E  6AF8               	clrf	tblptru,c
 23811   002B30                     	endif
 23812   002B30                     	if	0	;tblptru may be non-zero
 23813   002B30                     	endif
 23814   002B30  0009               	tblrd		*+
 23815   002B32  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23816   002B38  0009               	tblrd		*+
 23817   002B3A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23818   002B40  D802               	call	u16978
 23819   002B42  EFAE  F015         	goto	u16979
 23820   002B46                     u16978:
 23821   002B46  0005               	push	
 23822   002B48  6EFA               	movwf	pclath,c
 23823   002B4A  0100               	movlb	0	; () banked
 23824   002B4C  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23825   002B4E  6EFD               	movwf	tosl,c
 23826   002B50  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23827   002B52  6EFE               	movwf	tosh,c
 23828   002B54  6AFF               	clrf	tosu,c
 23829   002B56  50FA               	movf	pclath,w,c
 23830   002B58  0EFF               	movlw	255
 23831   002B5A  0012               	return		;indir
 23832   002B5C                     u16979:
 23833   002B5C  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 23834   002B5E                     
 23835                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 23836   002B5E  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 23837   002B60  B4D8               	btfsc	status,2,c
 23838   002B62  EFB5  F015         	goto	u16981
 23839   002B66  EFB7  F015         	goto	u16980
 23840   002B6A                     u16981:
 23841   002B6A  EF54  F015         	goto	l14591
 23842   002B6E                     u16980:
 23843   002B6E                     
 23844                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 23845   002B6E  502F               	movf	(_ioInfo+2)^0,w,c
 23846   002B70  1030               	iorwf	(_ioInfo+3)^0,w,c
 23847   002B72  1031               	iorwf	(_ioInfo+4)^0,w,c
 23848   002B74  1032               	iorwf	(_ioInfo+5)^0,w,c
 23849   002B76  A4D8               	btfss	status,2,c
 23850   002B78  EFC0  F015         	goto	u16991
 23851   002B7C  EFC2  F015         	goto	u16990
 23852   002B80                     u16991:
 23853   002B80  EF3A  F016         	goto	l14643
 23854   002B84                     u16990:
 23855   002B84                     
 23856                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 23857   002B84  0E00               	movlw	0
 23858   002B86  6E3A               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,c
 23859   002B88  0E00               	movlw	0
 23860   002B8A  6E3B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,c
 23861   002B8C  0E0A               	movlw	10
 23862   002B8E  6E3C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,c
 23863   002B90  0E00               	movlw	0
 23864   002B92  6E3D               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,c
 23865   002B94                     
 23866                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 23867   002B94  0E0B               	movlw	11
 23868   002B96  184A               	xorwf	SD_SPI_AsyncWriteTasks@command^0,w,c
 23869   002B98  A4D8               	btfss	status,2,c
 23870   002B9A  EFD1  F015         	goto	u17001
 23871   002B9E  EFD3  F015         	goto	u17000
 23872   002BA2                     u17001:
 23873   002BA2  EF13  F016         	goto	l1738
 23874   002BA6                     u17000:
 23875   002BA6                     
 23876                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 23877   002BA6  0E97               	movlw	low (_spiMaster+4)
 23878   002BA8  6EF6               	movwf	tblptrl,c
 23879   002BAA  0EFF               	movlw	high (_spiMaster+4)
 23880   002BAC  6EF7               	movwf	tblptrh,c
 23881   002BAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23882   002BAE  6AF8               	clrf	tblptru,c
 23883   002BB0                     	endif
 23884   002BB0                     	if	0	;tblptru may be non-zero
 23885   002BB0                     	endif
 23886   002BB0  0009               	tblrd		*+
 23887   002BB2  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23888   002BB8  0009               	tblrd		*+
 23889   002BBA  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23890   002BC0  D802               	call	u17018
 23891   002BC2  EFEE  F015         	goto	u17019
 23892   002BC6                     u17018:
 23893   002BC6  0005               	push	
 23894   002BC8  6EFA               	movwf	pclath,c
 23895   002BCA  0100               	movlb	0	; () banked
 23896   002BCC  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23897   002BCE  6EFD               	movwf	tosl,c
 23898   002BD0  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23899   002BD2  6EFE               	movwf	tosh,c
 23900   002BD4  6AFF               	clrf	tosu,c
 23901   002BD6  50FA               	movf	pclath,w,c
 23902   002BD8  0EFD               	movlw	253
 23903   002BDA  0012               	return		;indir
 23904   002BDC                     u17019:
 23905                           
 23906                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 23907   002BDC  0E97               	movlw	low (_spiMaster+4)
 23908   002BDE  6EF6               	movwf	tblptrl,c
 23909   002BE0  0EFF               	movlw	high (_spiMaster+4)
 23910   002BE2  6EF7               	movwf	tblptrh,c
 23911   002BE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23912   002BE4  6AF8               	clrf	tblptru,c
 23913   002BE6                     	endif
 23914   002BE6                     	if	0	;tblptru may be non-zero
 23915   002BE6                     	endif
 23916   002BE6  0009               	tblrd		*+
 23917   002BE8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23918   002BEE  0009               	tblrd		*+
 23919   002BF0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23920   002BF6  D802               	call	u17028
 23921   002BF8  EF09  F016         	goto	u17029
 23922   002BFC                     u17028:
 23923   002BFC  0005               	push	
 23924   002BFE  6EFA               	movwf	pclath,c
 23925   002C00  0100               	movlb	0	; () banked
 23926   002C02  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23927   002C04  6EFD               	movwf	tosl,c
 23928   002C06  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23929   002C08  6EFE               	movwf	tosh,c
 23930   002C0A  6AFF               	clrf	tosu,c
 23931   002C0C  50FA               	movf	pclath,w,c
 23932   002C0E  0EFF               	movlw	255
 23933   002C10  0012               	return		;indir
 23934   002C12                     u17029:
 23935   002C12                     
 23936                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 23937   002C12  0100               	movlb	0	; () banked
 23938   002C14  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23939   002C16  6ED9               	movwf	fsr2l,c
 23940   002C18  6ADA               	clrf	fsr2h,c
 23941   002C1A  0E0C               	movlw	12
 23942   002C1C  26D9               	addwf	fsr2l,f,c
 23943   002C1E  0E04               	movlw	4
 23944   002C20  6EDF               	movwf	indf2,c
 23945   002C22  EF54  F015         	goto	l14591
 23946   002C26                     l1738:
 23947   002C26  8ABA               	bsf	186,5,c	;volatile
 23948   002C28                     
 23949                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 23950   002C28  0E97               	movlw	low (_spiMaster+4)
 23951   002C2A  6EF6               	movwf	tblptrl,c
 23952   002C2C  0EFF               	movlw	high (_spiMaster+4)
 23953   002C2E  6EF7               	movwf	tblptrh,c
 23954   002C30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23955   002C30  6AF8               	clrf	tblptru,c
 23956   002C32                     	endif
 23957   002C32                     	if	0	;tblptru may be non-zero
 23958   002C32                     	endif
 23959   002C32  0009               	tblrd		*+
 23960   002C34  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 23961   002C3A  0009               	tblrd		*+
 23962   002C3C  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 23963   002C42  D802               	call	u17038
 23964   002C44  EF2F  F016         	goto	u17039
 23965   002C48                     u17038:
 23966   002C48  0005               	push	
 23967   002C4A  6EFA               	movwf	pclath,c
 23968   002C4C  0100               	movlb	0	; () banked
 23969   002C4E  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 23970   002C50  6EFD               	movwf	tosl,c
 23971   002C52  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 23972   002C54  6EFE               	movwf	tosh,c
 23973   002C56  6AFF               	clrf	tosu,c
 23974   002C58  50FA               	movf	pclath,w,c
 23975   002C5A  0EFF               	movlw	255
 23976   002C5C  0012               	return		;indir
 23977   002C5E                     u17039:
 23978   002C5E                     
 23979                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 23980   002C5E  0100               	movlb	0	; () banked
 23981   002C60  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23982   002C62  6ED9               	movwf	fsr2l,c
 23983   002C64  6ADA               	clrf	fsr2h,c
 23984   002C66  0E0C               	movlw	12
 23985   002C68  26D9               	addwf	fsr2l,f,c
 23986   002C6A  6ADF               	clrf	indf2,c
 23987   002C6C                     l14637:
 23988                           
 23989                           ; BSR set to: 0
 23990                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 23991   002C6C  0E01               	movlw	1
 23992   002C6E  6E53               	movwf	(_mediaInformation+3)^0,c
 23993   002C70  EF99  F013         	goto	l14513
 23994   002C74                     l14643:
 23995                           
 23996                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 23997   002C74  0100               	movlb	0	; () banked
 23998   002C76  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 23999   002C78  6ED9               	movwf	fsr2l,c
 24000   002C7A  6ADA               	clrf	fsr2h,c
 24001   002C7C  0E0C               	movlw	12
 24002   002C7E  26D9               	addwf	fsr2l,f,c
 24003   002C80  0E02               	movlw	2
 24004   002C82  6EDF               	movwf	indf2,c
 24005   002C84  EF51  F014         	goto	l14557
 24006   002C88                     l14655:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 24010   002C88  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24011   002C8A  6ED9               	movwf	fsr2l,c
 24012   002C8C  6ADA               	clrf	fsr2h,c
 24013   002C8E  0E0C               	movlw	12
 24014   002C90  26D9               	addwf	fsr2l,f,c
 24015   002C92  0EFE               	movlw	254
 24016   002C94  6EDF               	movwf	indf2,c
 24017   002C96  EF54  F015         	goto	l14591
 24018   002C9A                     l14661:
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 24022   002C9A  503A               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,w,c
 24023   002C9C  103B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,w,c
 24024   002C9E  103C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,w,c
 24025   002CA0  103D               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,w,c
 24026   002CA2  B4D8               	btfsc	status,2,c
 24027   002CA4  EF56  F016         	goto	u17041
 24028   002CA8  EF58  F016         	goto	u17040
 24029   002CAC                     u17041:
 24030   002CAC  EFA5  F016         	goto	l14683
 24031   002CB0                     u17040:
 24032   002CB0                     
 24033                           ; BSR set to: 0
 24034                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 24035   002CB0  063A               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout^0,f,c
 24036   002CB2  0E00               	movlw	0
 24037   002CB4  5A3B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)^0,f,c
 24038   002CB6  5A3C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)^0,f,c
 24039   002CB8  5A3D               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)^0,f,c
 24040   002CBA                     
 24041                           ; BSR set to: 0
 24042                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 24043   002CBA  0E97               	movlw	low (_spiMaster+4)
 24044   002CBC  6EF6               	movwf	tblptrl,c
 24045   002CBE  0EFF               	movlw	high (_spiMaster+4)
 24046   002CC0  6EF7               	movwf	tblptrh,c
 24047   002CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24048   002CC2  6AF8               	clrf	tblptru,c
 24049   002CC4                     	endif
 24050   002CC4                     	if	0	;tblptru may be non-zero
 24051   002CC4                     	endif
 24052   002CC4  0009               	tblrd		*+
 24053   002CC6  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24054   002CCC  0009               	tblrd		*+
 24055   002CCE  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24056   002CD4  D802               	call	u17058
 24057   002CD6  EF77  F016         	goto	u17059
 24058   002CDA                     u17058:
 24059   002CDA  0005               	push	
 24060   002CDC  6EFA               	movwf	pclath,c
 24061   002CDE  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24062   002CE0  6EFD               	movwf	tosl,c
 24063   002CE2  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24064   002CE4  6EFE               	movwf	tosh,c
 24065   002CE6  6AFF               	clrf	tosu,c
 24066   002CE8  50FA               	movf	pclath,w,c
 24067   002CEA  0EFF               	movlw	255
 24068   002CEC  0012               	return		;indir
 24069   002CEE                     u17059:
 24070   002CEE  6E4B               	movwf	SD_SPI_AsyncWriteTasks@data_byte^0,c
 24071   002CF0                     
 24072                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 24073   002CF0  504B               	movf	SD_SPI_AsyncWriteTasks@data_byte^0,w,c
 24074   002CF2  B4D8               	btfsc	status,2,c
 24075   002CF4  EF7E  F016         	goto	u17061
 24076   002CF8  EF80  F016         	goto	u17060
 24077   002CFC                     u17061:
 24078   002CFC  EF54  F015         	goto	l14591
 24079   002D00                     u17060:
 24080   002D00  8ABA               	bsf	186,5,c	;volatile
 24081   002D02                     
 24082                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 24083   002D02  0E97               	movlw	low (_spiMaster+4)
 24084   002D04  6EF6               	movwf	tblptrl,c
 24085   002D06  0EFF               	movlw	high (_spiMaster+4)
 24086   002D08  6EF7               	movwf	tblptrh,c
 24087   002D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24088   002D0A  6AF8               	clrf	tblptru,c
 24089   002D0C                     	endif
 24090   002D0C                     	if	0	;tblptru may be non-zero
 24091   002D0C                     	endif
 24092   002D0C  0009               	tblrd		*+
 24093   002D0E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24094   002D14  0009               	tblrd		*+
 24095   002D16  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24096   002D1C  D802               	call	u17078
 24097   002D1E  EF9C  F016         	goto	u17079
 24098   002D22                     u17078:
 24099   002D22  0005               	push	
 24100   002D24  6EFA               	movwf	pclath,c
 24101   002D26  0100               	movlb	0	; () banked
 24102   002D28  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24103   002D2A  6EFD               	movwf	tosl,c
 24104   002D2C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24105   002D2E  6EFE               	movwf	tosh,c
 24106   002D30  6AFF               	clrf	tosu,c
 24107   002D32  50FA               	movf	pclath,w,c
 24108   002D34  0EFF               	movlw	255
 24109   002D36  0012               	return		;indir
 24110   002D38                     u17079:
 24111   002D38                     
 24112                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 24113   002D38  0100               	movlb	0	; () banked
 24114   002D3A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24115   002D3C  6ED9               	movwf	fsr2l,c
 24116   002D3E  6ADA               	clrf	fsr2h,c
 24117   002D40  0E0C               	movlw	12
 24118   002D42  26D9               	addwf	fsr2l,f,c
 24119   002D44  6ADF               	clrf	indf2,c
 24120   002D46  EF36  F016         	goto	l14637
 24121   002D4A                     l14683:
 24122                           
 24123                           ; BSR set to: 0
 24124                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 24125   002D4A  0E00               	movlw	0
 24126   002D4C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 24127   002D4E  0E00               	movlw	0
 24128   002D50  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 24129   002D52  0E00               	movlw	0
 24130   002D54  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 24131   002D56  0E00               	movlw	0
 24132   002D58  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 24133   002D5A  0E05               	movlw	5
 24134   002D5C  EC82  F01C         	call	_SD_SendCmd
 24135   002D60  8ABA               	bsf	186,5,c	;volatile
 24136   002D62                     
 24137                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 24138   002D62  0E97               	movlw	low (_spiMaster+4)
 24139   002D64  6EF6               	movwf	tblptrl,c
 24140   002D66  0EFF               	movlw	high (_spiMaster+4)
 24141   002D68  6EF7               	movwf	tblptrh,c
 24142   002D6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24143   002D6A  6AF8               	clrf	tblptru,c
 24144   002D6C                     	endif
 24145   002D6C                     	if	0	;tblptru may be non-zero
 24146   002D6C                     	endif
 24147   002D6C  0009               	tblrd		*+
 24148   002D6E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncWriteTasks
 24149   002D74  0009               	tblrd		*+
 24150   002D76  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 24151   002D7C  D802               	call	u17088
 24152   002D7E  EFCC  F016         	goto	u17089
 24153   002D82                     u17088:
 24154   002D82  0005               	push	
 24155   002D84  6EFA               	movwf	pclath,c
 24156   002D86  0100               	movlb	0	; () banked
 24157   002D88  5183               	movf	??_SD_SPI_AsyncWriteTasks& (0+255),w,b
 24158   002D8A  6EFD               	movwf	tosl,c
 24159   002D8C  5184               	movf	(??_SD_SPI_AsyncWriteTasks+1)& (0+255),w,b
 24160   002D8E  6EFE               	movwf	tosh,c
 24161   002D90  6AFF               	clrf	tosu,c
 24162   002D92  50FA               	movf	pclath,w,c
 24163   002D94  0EFF               	movlw	255
 24164   002D96  0012               	return		;indir
 24165   002D98                     u17089:
 24166   002D98                     
 24167                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 24168   002D98  0100               	movlb	0	; () banked
 24169   002D9A  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24170   002D9C  6ED9               	movwf	fsr2l,c
 24171   002D9E  6ADA               	clrf	fsr2h,c
 24172   002DA0  0E0C               	movlw	12
 24173   002DA2  26D9               	addwf	fsr2l,f,c
 24174   002DA4  0EFF               	movlw	255
 24175   002DA6  6EDF               	movwf	indf2,c
 24176   002DA8                     l14691:
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 24180   002DA8  0E01               	movlw	1
 24181   002DAA  6E53               	movwf	(_mediaInformation+3)^0,c
 24182   002DAC  EF47  F014         	goto	l14549
 24183   002DB0                     l14699:
 24184   002DB0  0100               	movlb	0	; () banked
 24185   002DB2  5182               	movf	SD_SPI_AsyncWriteTasks@info& (0+255),w,b
 24186   002DB4  6ED9               	movwf	fsr2l,c
 24187   002DB6  6ADA               	clrf	fsr2h,c
 24188   002DB8  0E0C               	movlw	12
 24189   002DBA  26D9               	addwf	fsr2l,f,c
 24190   002DBC  50DF               	movf	indf2,w,c
 24191                           
 24192                           ; Switch size 1, requested type "simple"
 24193                           ; Number of cases is 6, Range of values is 0 to 254
 24194                           ; switch strategies available:
 24195                           ; Name         Instructions Cycles
 24196                           ; simple_byte           19    10 (average)
 24197                           ;	Chosen strategy is simple_byte
 24198   002DBE  0A00               	xorlw	0	; case 0
 24199   002DC0  B4D8               	btfsc	status,2,c
 24200   002DC2  EF99  F013         	goto	l14513
 24201   002DC6  0A01               	xorlw	1	; case 1
 24202   002DC8  B4D8               	btfsc	status,2,c
 24203   002DCA  EF9C  F013         	goto	l14517
 24204   002DCE  0A03               	xorlw	3	; case 2
 24205   002DD0  B4D8               	btfsc	status,2,c
 24206   002DD2  EF54  F014         	goto	l14561
 24207   002DD6  0A01               	xorlw	1	; case 3
 24208   002DD8  B4D8               	btfsc	status,2,c
 24209   002DDA  EF69  F015         	goto	l14607
 24210   002DDE  0A07               	xorlw	7	; case 4
 24211   002DE0  B4D8               	btfsc	status,2,c
 24212   002DE2  EF4D  F016         	goto	l14661
 24213   002DE6  0AFA               	xorlw	250	; case 254
 24214   002DE8  B4D8               	btfsc	status,2,c
 24215   002DEA  EFA5  F016         	goto	l14683
 24216   002DEE  EFD4  F016         	goto	l14691
 24217   002DF2                     l1717:
 24218   002DF2  0012               	return		;funcret
 24219   002DF4                     __end_of_SD_SPI_AsyncWriteTasks:
 24220                           	callstack 0
 24221                           
 24222 ;; *************** function _disk_read *****************
 24223 ;; Defined at:
 24224 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 24225 ;; Parameters:    Size  Location     Type
 24226 ;;  pdrv            1    wreg     unsigned char 
 24227 ;;  buff            2   72[BANK0 ] PTR unsigned char 
 24228 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 24229 ;;		 -> NULL(0), 
 24230 ;;  sector          4   74[BANK0 ] unsigned long 
 24231 ;;  count           2   78[BANK0 ] unsigned int 
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  pdrv            1   80[BANK0 ] unsigned char 
 24234 ;;  res             1   81[BANK0 ] enum E12
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1    wreg      enum E12
 24237 ;; Registers used:
 24238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/0
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24244 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24245 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24247 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24248 ;;Total ram usage:       10 bytes
 24249 ;; Hardware stack levels used: 1
 24250 ;; Hardware stack levels required when called: 9
 24251 ;; This function calls:
 24252 ;;		_SD_SPI_SectorRead
 24253 ;; This function is called by:
 24254 ;;		_move_window
 24255 ;;		_f_open
 24256 ;;		_f_write
 24257 ;;		_f_read
 24258 ;; This function uses a non-reentrant model
 24259 ;;
 24260                           
 24261                           	psect	text85
 24262   009AA2                     __ptext85:
 24263                           	callstack 0
 24264   009AA2                     _disk_read:
 24265                           	callstack 19
 24266                           
 24267                           ;incstack = 0
 24268                           ;disk_read@pdrv stored from wreg
 24269   009AA2  0100               	movlb	0	; () banked
 24270   009AA4  6FB0               	movwf	disk_read@pdrv& (0+255),b
 24271   009AA6                     
 24272                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 24273   009AA6  0E04               	movlw	4
 24274   009AA8  0100               	movlb	0	; () banked
 24275   009AAA  6FB1               	movwf	disk_read@res& (0+255),b
 24276                           
 24277                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 24278   009AAC  EF7C  F04D         	goto	l14949
 24279   009AB0                     l14941:
 24280                           
 24281                           ; BSR set to: 0
 24282                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 24283   009AB0  C0AA  F08D         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 24284   009AB4  C0AB  F08E         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 24285   009AB8  C0AC  F08F         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 24286   009ABC  C0AD  F090         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 24287   009AC0  C0A8  F091         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 24288   009AC4  C0A9  F092         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 24289   009AC8  C0AE  F093         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 24290   009ACC  C0AF  F094         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 24291   009AD0  ECD9  F03F         	call	_SD_SPI_SectorRead
 24292   009AD4  06E8               	decf	wreg,f,c
 24293   009AD6  A4D8               	btfss	status,2,c
 24294   009AD8  EF70  F04D         	goto	u17461
 24295   009ADC  EF72  F04D         	goto	u17460
 24296   009AE0                     u17461:
 24297   009AE0  EF77  F04D         	goto	l14945
 24298   009AE4                     u17460:
 24299   009AE4                     
 24300                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 24301   009AE4  0E00               	movlw	0
 24302   009AE6  0100               	movlb	0	; () banked
 24303   009AE8  6FB1               	movwf	disk_read@res& (0+255),b
 24304                           
 24305                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 24306   009AEA  EF83  F04D         	goto	l14951
 24307   009AEE                     l14945:
 24308                           
 24309                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 24310   009AEE  0E01               	movlw	1
 24311   009AF0  0100               	movlb	0	; () banked
 24312   009AF2  6FB1               	movwf	disk_read@res& (0+255),b
 24313   009AF4  EF83  F04D         	goto	l14951
 24314   009AF8                     l14949:
 24315                           
 24316                           ; BSR set to: 0
 24317   009AF8  51B0               	movf	disk_read@pdrv& (0+255),w,b
 24318                           
 24319                           ; Switch size 1, requested type "simple"
 24320                           ; Number of cases is 1, Range of values is 0 to 0
 24321                           ; switch strategies available:
 24322                           ; Name         Instructions Cycles
 24323                           ; simple_byte            4     3 (average)
 24324                           ;	Chosen strategy is simple_byte
 24325   009AFA  0A00               	xorlw	0	; case 0
 24326   009AFC  B4D8               	btfsc	status,2,c
 24327   009AFE  EF58  F04D         	goto	l14941
 24328   009B02  EF83  F04D         	goto	l14951
 24329   009B06                     l14951:
 24330                           
 24331                           ; BSR set to: 0
 24332                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 24333   009B06  51B1               	movf	disk_read@res& (0+255),w,b
 24334   009B08                     
 24335                           ; BSR set to: 0
 24336   009B08  0012               	return		;funcret
 24337   009B0A                     __end_of_disk_read:
 24338                           	callstack 0
 24339                           
 24340 ;; *************** function _SD_SPI_SectorRead *****************
 24341 ;; Defined at:
 24342 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;  sector_addre    4   45[BANK0 ] unsigned long 
 24345 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 24346 ;;		 -> Fil(546), FatFs(563), pb$fp(3), f_gets@s(4), 
 24347 ;;		 -> NULL(0), 
 24348 ;;  sector_count    2   51[BANK0 ] unsigned short 
 24349 ;; Auto vars:     Size  Location     Type
 24350 ;;  info           13   59[BANK0 ] struct SD_ASYNC_IO
 24351 ;;  i               2   57[BANK0 ] unsigned short 
 24352 ;;  status          1   56[BANK0 ] unsigned char 
 24353 ;;  result          1   55[BANK0 ] _Bool 
 24354 ;; Return value:  Size  Location     Type
 24355 ;;                  1    wreg      _Bool 
 24356 ;; Registers used:
 24357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24358 ;; Tracked objects:
 24359 ;;		On entry : 0/0
 24360 ;;		On exit  : 0/0
 24361 ;;		Unchanged: 0/0
 24362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24363 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24364 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24366 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24367 ;;Total ram usage:       27 bytes
 24368 ;; Hardware stack levels used: 1
 24369 ;; Hardware stack levels required when called: 8
 24370 ;; This function calls:
 24371 ;;		_SDFAST_open
 24372 ;;		_SDSLOW_open
 24373 ;;		_SD_SPI_AsyncReadTasks
 24374 ;;		_SPI1_Close
 24375 ;; This function is called by:
 24376 ;;		_disk_read
 24377 ;; This function uses a non-reentrant model
 24378 ;;
 24379                           
 24380                           	psect	text86
 24381   007FB2                     __ptext86:
 24382                           	callstack 0
 24383   007FB2                     _SD_SPI_SectorRead:
 24384                           	callstack 19
 24385   007FB2                     
 24386                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 24387   007FB2  0E00               	movlw	0
 24388   007FB4  0100               	movlb	0	; () banked
 24389   007FB6  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 24390                           
 24391                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 24392   007FB8  0E00               	movlw	0
 24393   007FBA  6F9A               	movwf	(SD_SPI_SectorRead@i+1)& (0+255),b
 24394   007FBC  0E00               	movlw	0
 24395   007FBE  6F99               	movwf	SD_SPI_SectorRead@i& (0+255),b
 24396   007FC0  EF6D  F040         	goto	l14917
 24397   007FC4                     l14889:
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 24401   007FC4  0E02               	movlw	2
 24402   007FC6  6F9C               	movwf	(SD_SPI_SectorRead@info+1)& (0+255),b
 24403   007FC8  0E00               	movlw	0
 24404   007FCA  6F9B               	movwf	SD_SPI_SectorRead@info& (0+255),b
 24405                           
 24406                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 24407   007FCC  0E00               	movlw	0
 24408   007FCE  6F9D               	movwf	(SD_SPI_SectorRead@info+2)& (0+255),b
 24409   007FD0  0E02               	movlw	2
 24410   007FD2  6F9E               	movwf	(SD_SPI_SectorRead@info+3)& (0+255),b
 24411   007FD4  0E00               	movlw	0
 24412   007FD6  6F9F               	movwf	(SD_SPI_SectorRead@info+4)& (0+255),b
 24413   007FD8  0E00               	movlw	0
 24414   007FDA  6FA0               	movwf	(SD_SPI_SectorRead@info+5)& (0+255),b
 24415   007FDC                     
 24416                           ; BSR set to: 0
 24417                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 24418   007FDC  C099  F095         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 24419   007FE0  C09A  F096         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 24420   007FE4  0E09               	movlw	9
 24421   007FE6                     u17385:
 24422   007FE6  90D8               	bcf	status,0,c
 24423   007FE8  3795               	rlcf	??_SD_SPI_SectorRead& (0+255),f,b
 24424   007FEA  3796               	rlcf	(??_SD_SPI_SectorRead+1)& (0+255),f,b
 24425   007FEC  2EE8               	decfsz	wreg,f,c
 24426   007FEE  EFF3  F03F         	goto	u17385
 24427   007FF2  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 24428   007FF4  2591               	addwf	SD_SPI_SectorRead@buffer& (0+255),w,b
 24429   007FF6  6FA1               	movwf	(SD_SPI_SectorRead@info+6)& (0+255),b
 24430   007FF8  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 24431   007FFA  2192               	addwfc	(SD_SPI_SectorRead@buffer+1)& (0+255),w,b
 24432   007FFC  6FA2               	movwf	(SD_SPI_SectorRead@info+7)& (0+255),b
 24433   007FFE                     
 24434                           ; BSR set to: 0
 24435                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 24436   007FFE  5199               	movf	SD_SPI_SectorRead@i& (0+255),w,b
 24437   008000  258D               	addwf	SD_SPI_SectorRead@sector_address& (0+255),w,b
 24438   008002  6FA3               	movwf	(SD_SPI_SectorRead@info+8)& (0+255),b
 24439   008004  519A               	movf	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 24440   008006  218E               	addwfc	(SD_SPI_SectorRead@sector_address+1)& (0+255),w,b
 24441   008008  6FA4               	movwf	(SD_SPI_SectorRead@info+9)& (0+255),b
 24442   00800A  0E00               	movlw	0
 24443   00800C  218F               	addwfc	(SD_SPI_SectorRead@sector_address+2)& (0+255),w,b
 24444   00800E  6FA5               	movwf	(SD_SPI_SectorRead@info+10)& (0+255),b
 24445   008010  0E00               	movlw	0
 24446   008012  2190               	addwfc	(SD_SPI_SectorRead@sector_address+3)& (0+255),w,b
 24447   008014  6FA6               	movwf	(SD_SPI_SectorRead@info+11)& (0+255),b
 24448                           
 24449                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 24450   008016  0E01               	movlw	1
 24451   008018  6FA7               	movwf	(SD_SPI_SectorRead@info+12)& (0+255),b
 24452   00801A                     
 24453                           ; BSR set to: 0
 24454                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 24455   00801A  0E95               	movlw	low (_spiMaster+2)
 24456   00801C  6EF6               	movwf	tblptrl,c
 24457   00801E  0EFF               	movlw	high (_spiMaster+2)
 24458   008020  6EF7               	movwf	tblptrh,c
 24459   008022                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24460   008022  6AF8               	clrf	tblptru,c
 24461   008024                     	endif
 24462   008024                     	if	0	;tblptru may be non-zero
 24463   008024                     	endif
 24464   008024  0009               	tblrd		*+
 24465   008026  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 24466   00802C  0009               	tblrd		*+
 24467   00802E  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 24468   008034  D802               	call	u17398
 24469   008036  EF26  F040         	goto	u17399
 24470   00803A                     u17398:
 24471   00803A  0005               	push	
 24472   00803C  6EFA               	movwf	pclath,c
 24473   00803E  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 24474   008040  6EFD               	movwf	tosl,c
 24475   008042  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 24476   008044  6EFE               	movwf	tosh,c
 24477   008046  6AFF               	clrf	tosu,c
 24478   008048  50FA               	movf	pclath,w,c
 24479   00804A  0012               	return		;indir
 24480   00804C                     u17399:
 24481   00804C  0900               	iorlw	0
 24482   00804E  A4D8               	btfss	status,2,c
 24483   008050  EF2C  F040         	goto	u17401
 24484   008054  EF2E  F040         	goto	u17400
 24485   008058                     u17401:
 24486   008058  EF31  F040         	goto	l1564
 24487   00805C                     u17400:
 24488   00805C                     
 24489                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 24490   00805C  0E00               	movlw	0
 24491   00805E  EF79  F040         	goto	l1563
 24492   008062                     l1564:
 24493   008062  9ABA               	bcf	186,5,c	;volatile
 24494   008064                     l14901:
 24495                           
 24496                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 24497   008064  0E9B               	movlw	low SD_SPI_SectorRead@info
 24498   008066  0100               	movlb	0	; () banked
 24499   008068  6F82               	movwf	SD_SPI_AsyncReadTasks@info& (0+255),b
 24500   00806A  EC93  F023         	call	_SD_SPI_AsyncReadTasks	;wreg free
 24501   00806E  0100               	movlb	0	; () banked
 24502   008070  6F98               	movwf	SD_SPI_SectorRead@status& (0+255),b
 24503   008072                     
 24504                           ; BSR set to: 0
 24505                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 24506   008072  5198               	movf	SD_SPI_SectorRead@status& (0+255),w,b
 24507   008074  A4D8               	btfss	status,2,c
 24508   008076  EF3F  F040         	goto	u17411
 24509   00807A  EF41  F040         	goto	u17410
 24510   00807E                     u17411:
 24511   00807E  EF45  F040         	goto	l14909
 24512   008082                     u17410:
 24513   008082                     
 24514                           ; BSR set to: 0
 24515                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 24516   008082  0E01               	movlw	1
 24517   008084  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 24518                           
 24519                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 24520   008086  EF4F  F040         	goto	l1572
 24521   00808A                     l14909:
 24522                           
 24523                           ; BSR set to: 0
 24524   00808A  2998               	incf	SD_SPI_SectorRead@status& (0+255),w,b
 24525   00808C  A4D8               	btfss	status,2,c
 24526   00808E  EF4B  F040         	goto	u17421
 24527   008092  EF4D  F040         	goto	u17420
 24528   008096                     u17421:
 24529   008096  EF32  F040         	goto	l14901
 24530   00809A                     u17420:
 24531   00809A                     
 24532                           ; BSR set to: 0
 24533                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 24534   00809A  0E00               	movlw	0
 24535   00809C  6F97               	movwf	SD_SPI_SectorRead@result& (0+255),b
 24536   00809E                     l1572:
 24537                           
 24538                           ; BSR set to: 0
 24539   00809E  8ABA               	bsf	186,5,c	;volatile
 24540   0080A0                     
 24541                           ; BSR set to: 0
 24542                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 24543   0080A0  0E93               	movlw	low _spiMaster
 24544   0080A2  6EF6               	movwf	tblptrl,c
 24545   0080A4                     	if	1	;There is more than 1 active tblptr byte
 24546   0080A4  0EFF               	movlw	high _spiMaster
 24547   0080A6  6EF7               	movwf	tblptrh,c
 24548   0080A8                     	endif
 24549   0080A8                     	if	1	;There are 3 active tblptr bytes
 24550   0080A8  0E00               	movlw	low (_spiMaster shr (0+16))
 24551   0080AA  6EF8               	movwf	tblptru,c
 24552   0080AC                     	endif
 24553   0080AC  0009               	tblrd		*+
 24554   0080AE  006F FFD4  F095    	movff	tablat,??_SD_SPI_SectorRead
 24555   0080B4  0009               	tblrd		*+
 24556   0080B6  006F FFD4  F096    	movff	tablat,??_SD_SPI_SectorRead+1
 24557   0080BC  D802               	call	u17438
 24558   0080BE  EF6A  F040         	goto	u17439
 24559   0080C2                     u17438:
 24560   0080C2  0005               	push	
 24561   0080C4  6EFA               	movwf	pclath,c
 24562   0080C6  5195               	movf	??_SD_SPI_SectorRead& (0+255),w,b
 24563   0080C8  6EFD               	movwf	tosl,c
 24564   0080CA  5196               	movf	(??_SD_SPI_SectorRead+1)& (0+255),w,b
 24565   0080CC  6EFE               	movwf	tosh,c
 24566   0080CE  6AFF               	clrf	tosu,c
 24567   0080D0  50FA               	movf	pclath,w,c
 24568   0080D2  0012               	return		;indir
 24569   0080D4                     u17439:
 24570   0080D4                     
 24571                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 24572   0080D4  0100               	movlb	0	; () banked
 24573   0080D6  4B99               	infsnz	SD_SPI_SectorRead@i& (0+255),f,b
 24574   0080D8  2B9A               	incf	(SD_SPI_SectorRead@i+1)& (0+255),f,b
 24575   0080DA                     l14917:
 24576                           
 24577                           ; BSR set to: 0
 24578   0080DA  5193               	movf	SD_SPI_SectorRead@sector_count& (0+255),w,b
 24579   0080DC  5D99               	subwf	SD_SPI_SectorRead@i& (0+255),w,b
 24580   0080DE  5194               	movf	(SD_SPI_SectorRead@sector_count+1)& (0+255),w,b
 24581   0080E0  599A               	subwfb	(SD_SPI_SectorRead@i+1)& (0+255),w,b
 24582   0080E2  A0D8               	btfss	status,0,c
 24583   0080E4  EF76  F040         	goto	u17441
 24584   0080E8  EF78  F040         	goto	u17440
 24585   0080EC                     u17441:
 24586   0080EC  EFE2  F03F         	goto	l14889
 24587   0080F0                     u17440:
 24588   0080F0                     
 24589                           ; BSR set to: 0
 24590                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 24591   0080F0  5197               	movf	SD_SPI_SectorRead@result& (0+255),w,b
 24592   0080F2                     l1563:
 24593   0080F2  0012               	return		;funcret
 24594   0080F4                     __end_of_SD_SPI_SectorRead:
 24595                           	callstack 0
 24596                           
 24597 ;; *************** function _SPI1_Close *****************
 24598 ;; Defined at:
 24599 ;;		line 96 in file "mcc_generated_files/spi1.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;		None
 24602 ;; Auto vars:     Size  Location     Type
 24603 ;;		None
 24604 ;; Return value:  Size  Location     Type
 24605 ;;                  1    wreg      void 
 24606 ;; Registers used:
 24607 ;;		None
 24608 ;; Tracked objects:
 24609 ;;		On entry : 0/0
 24610 ;;		On exit  : 0/0
 24611 ;;		Unchanged: 0/0
 24612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;Total ram usage:        0 bytes
 24618 ;; Hardware stack levels used: 1
 24619 ;; Hardware stack levels required when called: 5
 24620 ;; This function calls:
 24621 ;;		Nothing
 24622 ;; This function is called by:
 24623 ;;		_SD_SPI_SectorWrite
 24624 ;;		_SD_SPI_SectorRead
 24625 ;;		_SD_SPI_MediaInitialize
 24626 ;; This function uses a non-reentrant model
 24627 ;;
 24628                           
 24629                           	psect	text87
 24630   00A4E6                     __ptext87:
 24631                           	callstack 0
 24632   00A4E6                     _SPI1_Close:
 24633                           	callstack 21
 24634   00A4E6                     
 24635                           ;mcc_generated_files/spi1.c: 98:     SPI1CON0bits.EN = 0;
 24636   00A4E6  013D               	movlb	61	; () banked
 24637   00A4E8  9F14               	bcf	20,7,b	;volatile
 24638   00A4EA                     
 24639                           ; BSR set to: 61
 24640   00A4EA  0012               	return		;funcret
 24641   00A4EC                     __end_of_SPI1_Close:
 24642                           	callstack 0
 24643                           
 24644 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 24645 ;; Defined at:
 24646 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 24647 ;; Parameters:    Size  Location     Type
 24648 ;;  info            1   34[BANK0 ] PTR struct SD_ASYNC_IO
 24649 ;;		 -> SD_SPI_SectorRead@info(13), 
 24650 ;; Auto vars:     Size  Location     Type
 24651 ;;  response        5   39[BANK0 ] struct .
 24652 ;;  bData           1   44[BANK0 ] unsigned char 
 24653 ;; Return value:  Size  Location     Type
 24654 ;;                  1    wreg      unsigned char 
 24655 ;; Registers used:
 24656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 24657 ;; Tracked objects:
 24658 ;;		On entry : 0/0
 24659 ;;		On exit  : 0/0
 24660 ;;		Unchanged: 0/0
 24661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24663 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24664 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24665 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24666 ;;Total ram usage:       11 bytes
 24667 ;; Hardware stack levels used: 1
 24668 ;; Hardware stack levels required when called: 7
 24669 ;; This function calls:
 24670 ;;		_SD_SendCmd
 24671 ;;		_SPI1_ExchangeBlock
 24672 ;;		_SPI1_ExchangeByte
 24673 ;;		_memset
 24674 ;; This function is called by:
 24675 ;;		_SD_SPI_SectorRead
 24676 ;; This function uses a non-reentrant model
 24677 ;;
 24678                           
 24679                           	psect	text88
 24680   004726                     __ptext88:
 24681                           	callstack 0
 24682   004726                     _SD_SPI_AsyncReadTasks:
 24683                           	callstack 19
 24684   004726                     
 24685                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 24686   004726  EF9A  F025         	goto	l14885
 24687   00472A                     l14749:
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 24691   00472A  0E00               	movlw	0
 24692   00472C  EFBB  F025         	goto	l1678
 24693   004730                     l14753:
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 24697   004730  0E02               	movlw	2
 24698   004732  6E53               	movwf	(_mediaInformation+3)^0,c
 24699                           
 24700                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 24701   004734  0E02               	movlw	2
 24702   004736  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 24703   004738  0E00               	movlw	0
 24704   00473A  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 24705   00473C                     
 24706                           ; BSR set to: 0
 24707                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 24708   00473C  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24709   00473E  6ED9               	movwf	fsr2l,c
 24710   004740  6ADA               	clrf	fsr2h,c
 24711   004742  EE10  F02D         	lfsr	1,_ioInfo
 24712   004746  0E0C               	movlw	12
 24713   004748                     u17181:
 24714   004748  006F FF6F FFE3     	movff	plusw2,plusw1
 24715   00474E  06E8               	decf	wreg,f,c
 24716   004750  E2FB               	bc	u17181
 24717   004752                     
 24718                           ; BSR set to: 0
 24719                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 24720   004752  5058               	movf	(_mediaInformation+8)^0,w,c
 24721   004754  A4D8               	btfss	status,2,c
 24722   004756  EFAF  F023         	goto	u17191
 24723   00475A  EFB1  F023         	goto	u17190
 24724   00475E                     u17191:
 24725   00475E  EFBA  F023         	goto	l1680
 24726   004762                     u17190:
 24727   004762                     
 24728                           ; BSR set to: 0
 24729                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 24730   004762  0E09               	movlw	9
 24731   004764                     u17205:
 24732   004764  90D8               	bcf	status,0,c
 24733   004766  3635               	rlcf	(_ioInfo+8)^0,f,c
 24734   004768  3636               	rlcf	(_ioInfo+9)^0,f,c
 24735   00476A  3637               	rlcf	(_ioInfo+10)^0,f,c
 24736   00476C  3638               	rlcf	(_ioInfo+11)^0,f,c
 24737   00476E  2EE8               	decfsz	wreg,f,c
 24738   004770  EFB2  F023         	goto	u17205
 24739   004774                     l1680:
 24740                           
 24741                           ; BSR set to: 0
 24742                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 24743   004774  5032               	movf	(_ioInfo+5)^0,w,c
 24744   004776  1031               	iorwf	(_ioInfo+4)^0,w,c
 24745   004778  E108               	bnz	u17211
 24746   00477A  042F               	decf	(_ioInfo+2)^0,w,c
 24747   00477C  0E02               	movlw	2
 24748   00477E  5830               	subwfb	(_ioInfo+3)^0,w,c
 24749   004780  B0D8               	btfsc	status,0,c
 24750   004782  EFC5  F023         	goto	u17211
 24751   004786  EFC7  F023         	goto	u17210
 24752   00478A                     u17211:
 24753   00478A  EFDE  F023         	goto	l14765
 24754   00478E                     u17210:
 24755   00478E                     
 24756                           ; BSR set to: 0
 24757                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 24758   00478E  0E01               	movlw	1
 24759   004790  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 24760   004792                     
 24761                           ; BSR set to: 0
 24762                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 24763   004792  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 24764   004796  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 24765   00479A  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 24766   00479E  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 24767   0047A2  0E08               	movlw	8
 24768   0047A4  EC82  F01C         	call	_SD_SendCmd
 24769   0047A8  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 24770   0047AC  0E04               	movlw	4
 24771   0047AE                     u17221:
 24772   0047AE  006F FFAF FFDB     	movff	plusw0,plusw2
 24773   0047B4  06E8               	decf	wreg,f,c
 24774   0047B6  E2FB               	bc	u17221
 24775                           
 24776                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 24777   0047B8  EFF3  F023         	goto	l14769
 24778   0047BC                     l14765:
 24779                           
 24780                           ; BSR set to: 0
 24781                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 24782   0047BC  0E00               	movlw	0
 24783   0047BE  6E4C               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,c
 24784   0047C0                     
 24785                           ; BSR set to: 0
 24786                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 24787   0047C0  C035  F06B         	movff	_ioInfo+8,SD_SendCmd@address
 24788   0047C4  C036  F06C         	movff	_ioInfo+9,SD_SendCmd@address+1
 24789   0047C8  C037  F06D         	movff	_ioInfo+10,SD_SendCmd@address+2
 24790   0047CC  C038  F06E         	movff	_ioInfo+11,SD_SendCmd@address+3
 24791   0047D0  0E09               	movlw	9
 24792   0047D2  EC82  F01C         	call	_SD_SendCmd
 24793   0047D6  EE20  F087         	lfsr	2,SD_SPI_AsyncReadTasks@response
 24794   0047DA  0E04               	movlw	4
 24795   0047DC                     u17231:
 24796   0047DC  006F FFAF FFDB     	movff	plusw0,plusw2
 24797   0047E2  06E8               	decf	wreg,f,c
 24798   0047E4  E2FB               	bc	u17231
 24799   0047E6                     l14769:
 24800                           
 24801                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 24802   0047E6  0100               	movlb	0	; () banked
 24803   0047E8  5187               	movf	SD_SPI_AsyncReadTasks@response& (0+255),w,b
 24804   0047EA  B4D8               	btfsc	status,2,c
 24805   0047EC  EFFA  F023         	goto	u17241
 24806   0047F0  EFFC  F023         	goto	u17240
 24807   0047F4                     u17241:
 24808   0047F4  EF06  F024         	goto	l14777
 24809   0047F8                     u17240:
 24810   0047F8                     
 24811                           ; BSR set to: 0
 24812                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 24813   0047F8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24814   0047FA  6ED9               	movwf	fsr2l,c
 24815   0047FC  6ADA               	clrf	fsr2h,c
 24816   0047FE  0E0C               	movlw	12
 24817   004800  26D9               	addwf	fsr2l,f,c
 24818   004802  0EFE               	movlw	254
 24819   004804  6EDF               	movwf	indf2,c
 24820   004806                     l14773:
 24821                           
 24822                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 24823   004806  0E01               	movlw	1
 24824   004808  EFBB  F025         	goto	l1678
 24825   00480C                     l14777:
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 24829   00480C  0E00               	movlw	0
 24830   00480E  0101               	movlb	1	; () banked
 24831   004810  6FCF               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 24832   004812  0E00               	movlw	0
 24833   004814  6FD0               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 24834   004816  0E04               	movlw	4
 24835   004818  6FD1               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 24836   00481A  0E00               	movlw	0
 24837   00481C  6FD2               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 24838   00481E                     
 24839                           ; BSR set to: 1
 24840                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 24841   00481E  0100               	movlb	0	; () banked
 24842   004820  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24843   004822  6ED9               	movwf	fsr2l,c
 24844   004824  6ADA               	clrf	fsr2h,c
 24845   004826  0E0C               	movlw	12
 24846   004828  26D9               	addwf	fsr2l,f,c
 24847   00482A  0E03               	movlw	3
 24848   00482C  6EDF               	movwf	indf2,c
 24849   00482E  EF03  F024         	goto	l14773
 24850   004832                     l14785:
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 24854   004832  0101               	movlb	1	; () banked
 24855   004834  51CF               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 24856   004836  11D0               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 24857   004838  11D1               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 24858   00483A  11D2               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 24859   00483C  B4D8               	btfsc	status,2,c
 24860   00483E  EF23  F024         	goto	u17251
 24861   004842  EF25  F024         	goto	u17250
 24862   004846                     u17251:
 24863   004846  EF6B  F024         	goto	l14813
 24864   00484A                     u17250:
 24865   00484A                     
 24866                           ; BSR set to: 1
 24867                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 24868   00484A  07CF               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 24869   00484C  0E00               	movlw	0
 24870   00484E  5BD0               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 24871   004850  5BD1               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 24872   004852  5BD2               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 24873   004854                     
 24874                           ; BSR set to: 1
 24875                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 24876   004854  0E97               	movlw	low (_spiMaster+4)
 24877   004856  6EF6               	movwf	tblptrl,c
 24878   004858  0EFF               	movlw	high (_spiMaster+4)
 24879   00485A  6EF7               	movwf	tblptrh,c
 24880   00485C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24881   00485C  6AF8               	clrf	tblptru,c
 24882   00485E                     	endif
 24883   00485E                     	if	0	;tblptru may be non-zero
 24884   00485E                     	endif
 24885   00485E  0009               	tblrd		*+
 24886   004860  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 24887   004866  0009               	tblrd		*+
 24888   004868  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 24889   00486E  D802               	call	u17268
 24890   004870  EF45  F024         	goto	u17269
 24891   004874                     u17268:
 24892   004874  0005               	push	
 24893   004876  6EFA               	movwf	pclath,c
 24894   004878  0100               	movlb	0	; () banked
 24895   00487A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 24896   00487C  6EFD               	movwf	tosl,c
 24897   00487E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 24898   004880  6EFE               	movwf	tosh,c
 24899   004882  6AFF               	clrf	tosu,c
 24900   004884  50FA               	movf	pclath,w,c
 24901   004886  0EFF               	movlw	255
 24902   004888  0012               	return		;indir
 24903   00488A                     u17269:
 24904   00488A  0100               	movlb	0	; () banked
 24905   00488C  6F8C               	movwf	SD_SPI_AsyncReadTasks@bData& (0+255),b
 24906   00488E                     
 24907                           ; BSR set to: 0
 24908                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 24909   00488E  298C               	incf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 24910   004890  B4D8               	btfsc	status,2,c
 24911   004892  EF4D  F024         	goto	u17271
 24912   004896  EF4F  F024         	goto	u17270
 24913   00489A                     u17271:
 24914   00489A  EF03  F024         	goto	l14773
 24915   00489E                     u17270:
 24916   00489E                     
 24917                           ; BSR set to: 0
 24918                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 24919   00489E  0EFE               	movlw	254
 24920   0048A0  198C               	xorwf	SD_SPI_AsyncReadTasks@bData& (0+255),w,b
 24921   0048A2  A4D8               	btfss	status,2,c
 24922   0048A4  EF56  F024         	goto	u17281
 24923   0048A8  EF58  F024         	goto	u17280
 24924   0048AC                     u17281:
 24925   0048AC  EF62  F024         	goto	l14803
 24926   0048B0                     u17280:
 24927   0048B0                     
 24928                           ; BSR set to: 0
 24929                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 24930   0048B0  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24931   0048B2  6ED9               	movwf	fsr2l,c
 24932   0048B4  6ADA               	clrf	fsr2h,c
 24933   0048B6  0E0C               	movlw	12
 24934   0048B8  26D9               	addwf	fsr2l,f,c
 24935   0048BA  0E02               	movlw	2
 24936   0048BC  6EDF               	movwf	indf2,c
 24937   0048BE                     l14797:
 24938                           
 24939                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 24940   0048BE  0E02               	movlw	2
 24941   0048C0  EFBB  F025         	goto	l1678
 24942   0048C4                     l14803:
 24943                           
 24944                           ; BSR set to: 0
 24945                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 24946   0048C4  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24947   0048C6  6ED9               	movwf	fsr2l,c
 24948   0048C8  6ADA               	clrf	fsr2h,c
 24949   0048CA  0E0C               	movlw	12
 24950   0048CC  26D9               	addwf	fsr2l,f,c
 24951   0048CE  0EFE               	movlw	254
 24952   0048D0  6EDF               	movwf	indf2,c
 24953   0048D2  EF03  F024         	goto	l14773
 24954   0048D6                     l14813:
 24955                           
 24956                           ; BSR set to: 1
 24957                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 24958   0048D6  0100               	movlb	0	; () banked
 24959   0048D8  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24960   0048DA  6ED9               	movwf	fsr2l,c
 24961   0048DC  6ADA               	clrf	fsr2h,c
 24962   0048DE  0E0C               	movlw	12
 24963   0048E0  26D9               	addwf	fsr2l,f,c
 24964   0048E2  0EFE               	movlw	254
 24965   0048E4  6EDF               	movwf	indf2,c
 24966   0048E6  EF03  F024         	goto	l14773
 24967   0048EA                     l14819:
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 24971   0048EA  502F               	movf	(_ioInfo+2)^0,w,c
 24972   0048EC  1030               	iorwf	(_ioInfo+3)^0,w,c
 24973   0048EE  1031               	iorwf	(_ioInfo+4)^0,w,c
 24974   0048F0  1032               	iorwf	(_ioInfo+5)^0,w,c
 24975   0048F2  B4D8               	btfsc	status,2,c
 24976   0048F4  EF7E  F024         	goto	u17291
 24977   0048F8  EF80  F024         	goto	u17290
 24978   0048FC                     u17291:
 24979   0048FC  EF2D  F025         	goto	l14853
 24980   004900                     u17290:
 24981   004900                     
 24982                           ; BSR set to: 0
 24983                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 24984   004900  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24985   004902  6ED9               	movwf	fsr2l,c
 24986   004904  6ADA               	clrf	fsr2h,c
 24987   004906  006F FF78  F02D    	movff	postinc2,_ioInfo
 24988   00490C  006F FF74  F02E    	movff	postdec2,_ioInfo+1
 24989   004912                     
 24990                           ; BSR set to: 0
 24991                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 24992   004912  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 24993   004914  6ED9               	movwf	fsr2l,c
 24994   004916  6ADA               	clrf	fsr2h,c
 24995   004918  0E06               	movlw	6
 24996   00491A  26D9               	addwf	fsr2l,f,c
 24997   00491C  006F FF78  F033    	movff	postinc2,_ioInfo+6
 24998   004922  006F FF74  F034    	movff	postdec2,_ioInfo+7
 24999   004928                     
 25000                           ; BSR set to: 0
 25001                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 25002   004928  502D               	movf	_ioInfo^0,w,c
 25003   00492A  6F83               	movwf	??_SD_SPI_AsyncReadTasks& (0+255),b
 25004   00492C  502E               	movf	(_ioInfo+1)^0,w,c
 25005   00492E  6F84               	movwf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),b
 25006   004930  6B85               	clrf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),b
 25007   004932  6B86               	clrf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),b
 25008   004934  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25009   004936  5E2F               	subwf	(_ioInfo+2)^0,f,c
 25010   004938  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25011   00493A  5A30               	subwfb	(_ioInfo+3)^0,f,c
 25012   00493C  5185               	movf	(??_SD_SPI_AsyncReadTasks+2)& (0+255),w,b
 25013   00493E  5A31               	subwfb	(_ioInfo+4)^0,f,c
 25014   004940  5186               	movf	(??_SD_SPI_AsyncReadTasks+3)& (0+255),w,b
 25015   004942  5A32               	subwfb	(_ioInfo+5)^0,f,c
 25016   004944                     
 25017                           ; BSR set to: 0
 25018                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 25019   004944  502D               	movf	_ioInfo^0,w,c
 25020   004946  5E44               	subwf	SD_SPI_AsyncReadTasks@blockCounter^0,f,c
 25021   004948  502E               	movf	(_ioInfo+1)^0,w,c
 25022   00494A  5A45               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,f,c
 25023   00494C                     
 25024                           ; BSR set to: 0
 25025                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 25026   00494C  C033  F060         	movff	_ioInfo+6,memset@dest
 25027   004950  C034  F061         	movff	_ioInfo+7,memset@dest+1
 25028   004954  0E00               	movlw	0
 25029   004956  6F63               	movwf	(memset@c+1)& (0+255),b
 25030   004958  6962               	setf	memset@c& (0+255),b
 25031   00495A  C02D  F064         	movff	_ioInfo,memset@n
 25032   00495E  C02E  F065         	movff	_ioInfo+1,memset@n+1
 25033   004962  ECEA  F04D         	call	_memset
 25034   004966                     
 25035                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 25036   004966  C033  F060         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 25037   00496A  C034  F061         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 25038   00496E  C02D  F062         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 25039   004972  C02E  F063         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 25040   004976  0E99               	movlw	low (_spiMaster+6)
 25041   004978  6EF6               	movwf	tblptrl,c
 25042   00497A  0EFF               	movlw	high (_spiMaster+6)
 25043   00497C  6EF7               	movwf	tblptrh,c
 25044   00497E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25045   00497E  6AF8               	clrf	tblptru,c
 25046   004980                     	endif
 25047   004980                     	if	0	;tblptru may be non-zero
 25048   004980                     	endif
 25049   004980  0009               	tblrd		*+
 25050   004982  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25051   004988  0009               	tblrd		*+
 25052   00498A  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25053   004990  D802               	call	u17308
 25054   004992  EFD5  F024         	goto	u17309
 25055   004996                     u17308:
 25056   004996  0005               	push	
 25057   004998  6EFA               	movwf	pclath,c
 25058   00499A  0100               	movlb	0	; () banked
 25059   00499C  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25060   00499E  6EFD               	movwf	tosl,c
 25061   0049A0  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25062   0049A2  6EFE               	movwf	tosh,c
 25063   0049A4  6AFF               	clrf	tosu,c
 25064   0049A6  50FA               	movf	pclath,w,c
 25065   0049A8  0012               	return		;indir
 25066   0049AA                     u17309:
 25067   0049AA                     
 25068                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 25069   0049AA  5044               	movf	SD_SPI_AsyncReadTasks@blockCounter^0,w,c
 25070   0049AC  1045               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,w,c
 25071   0049AE  A4D8               	btfss	status,2,c
 25072   0049B0  EFDC  F024         	goto	u17311
 25073   0049B4  EFDE  F024         	goto	u17310
 25074   0049B8                     u17311:
 25075   0049B8  EF5F  F024         	goto	l14797
 25076   0049BC                     u17310:
 25077   0049BC                     
 25078                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 25079   0049BC  0E97               	movlw	low (_spiMaster+4)
 25080   0049BE  6EF6               	movwf	tblptrl,c
 25081   0049C0  0EFF               	movlw	high (_spiMaster+4)
 25082   0049C2  6EF7               	movwf	tblptrh,c
 25083   0049C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25084   0049C4  6AF8               	clrf	tblptru,c
 25085   0049C6                     	endif
 25086   0049C6                     	if	0	;tblptru may be non-zero
 25087   0049C6                     	endif
 25088   0049C6  0009               	tblrd		*+
 25089   0049C8  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25090   0049CE  0009               	tblrd		*+
 25091   0049D0  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25092   0049D6  D802               	call	u17328
 25093   0049D8  EFF9  F024         	goto	u17329
 25094   0049DC                     u17328:
 25095   0049DC  0005               	push	
 25096   0049DE  6EFA               	movwf	pclath,c
 25097   0049E0  0100               	movlb	0	; () banked
 25098   0049E2  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25099   0049E4  6EFD               	movwf	tosl,c
 25100   0049E6  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25101   0049E8  6EFE               	movwf	tosh,c
 25102   0049EA  6AFF               	clrf	tosu,c
 25103   0049EC  50FA               	movf	pclath,w,c
 25104   0049EE  0EFF               	movlw	255
 25105   0049F0  0012               	return		;indir
 25106   0049F2                     u17329:
 25107                           
 25108                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 25109   0049F2  0E97               	movlw	low (_spiMaster+4)
 25110   0049F4  6EF6               	movwf	tblptrl,c
 25111   0049F6  0EFF               	movlw	high (_spiMaster+4)
 25112   0049F8  6EF7               	movwf	tblptrh,c
 25113   0049FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25114   0049FA  6AF8               	clrf	tblptru,c
 25115   0049FC                     	endif
 25116   0049FC                     	if	0	;tblptru may be non-zero
 25117   0049FC                     	endif
 25118   0049FC  0009               	tblrd		*+
 25119   0049FE  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25120   004A04  0009               	tblrd		*+
 25121   004A06  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25122   004A0C  D802               	call	u17338
 25123   004A0E  EF14  F025         	goto	u17339
 25124   004A12                     u17338:
 25125   004A12  0005               	push	
 25126   004A14  6EFA               	movwf	pclath,c
 25127   004A16  0100               	movlb	0	; () banked
 25128   004A18  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25129   004A1A  6EFD               	movwf	tosl,c
 25130   004A1C  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25131   004A1E  6EFE               	movwf	tosh,c
 25132   004A20  6AFF               	clrf	tosu,c
 25133   004A22  50FA               	movf	pclath,w,c
 25134   004A24  0EFF               	movlw	255
 25135   004A26  0012               	return		;indir
 25136   004A28                     u17339:
 25137   004A28                     
 25138                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 25139   004A28  502F               	movf	(_ioInfo+2)^0,w,c
 25140   004A2A  1030               	iorwf	(_ioInfo+3)^0,w,c
 25141   004A2C  1031               	iorwf	(_ioInfo+4)^0,w,c
 25142   004A2E  1032               	iorwf	(_ioInfo+5)^0,w,c
 25143   004A30  B4D8               	btfsc	status,2,c
 25144   004A32  EF1D  F025         	goto	u17341
 25145   004A36  EF1F  F025         	goto	u17340
 25146   004A3A                     u17341:
 25147   004A3A  EF27  F025         	goto	l14841
 25148   004A3E                     u17340:
 25149   004A3E                     
 25150                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 25151   004A3E  0100               	movlb	0	; () banked
 25152   004A40  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25153   004A42  6ED9               	movwf	fsr2l,c
 25154   004A44  6ADA               	clrf	fsr2h,c
 25155   004A46  0E0C               	movlw	12
 25156   004A48  26D9               	addwf	fsr2l,f,c
 25157   004A4A  0E03               	movlw	3
 25158   004A4C  6EDF               	movwf	indf2,c
 25159   004A4E                     l14841:
 25160                           
 25161                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 25162   004A4E  0E02               	movlw	2
 25163   004A50  6E45               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)^0,c
 25164   004A52  0E00               	movlw	0
 25165   004A54  6E44               	movwf	SD_SPI_AsyncReadTasks@blockCounter^0,c
 25166   004A56  EF03  F024         	goto	l14773
 25167   004A5A                     l14853:
 25168                           
 25169                           ; BSR set to: 0
 25170                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 25171   004A5A  504C               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead^0,w,c
 25172   004A5C  A4D8               	btfss	status,2,c
 25173   004A5E  EF33  F025         	goto	u17351
 25174   004A62  EF35  F025         	goto	u17350
 25175   004A66                     u17351:
 25176   004A66  EF40  F025         	goto	l14857
 25177   004A6A                     u17350:
 25178   004A6A                     
 25179                           ; BSR set to: 0
 25180                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 25181   004A6A  0E00               	movlw	0
 25182   004A6C  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 25183   004A6E  0E00               	movlw	0
 25184   004A70  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 25185   004A72  0E00               	movlw	0
 25186   004A74  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 25187   004A76  0E00               	movlw	0
 25188   004A78  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 25189   004A7A  0E05               	movlw	5
 25190   004A7C  EC82  F01C         	call	_SD_SendCmd
 25191   004A80                     l14857:
 25192   004A80  8ABA               	bsf	186,5,c	;volatile
 25193   004A82                     
 25194                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 25195   004A82  0E97               	movlw	low (_spiMaster+4)
 25196   004A84  6EF6               	movwf	tblptrl,c
 25197   004A86  0EFF               	movlw	high (_spiMaster+4)
 25198   004A88  6EF7               	movwf	tblptrh,c
 25199   004A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25200   004A8A  6AF8               	clrf	tblptru,c
 25201   004A8C                     	endif
 25202   004A8C                     	if	0	;tblptru may be non-zero
 25203   004A8C                     	endif
 25204   004A8C  0009               	tblrd		*+
 25205   004A8E  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25206   004A94  0009               	tblrd		*+
 25207   004A96  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25208   004A9C  D802               	call	u17368
 25209   004A9E  EF5C  F025         	goto	u17369
 25210   004AA2                     u17368:
 25211   004AA2  0005               	push	
 25212   004AA4  6EFA               	movwf	pclath,c
 25213   004AA6  0100               	movlb	0	; () banked
 25214   004AA8  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25215   004AAA  6EFD               	movwf	tosl,c
 25216   004AAC  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25217   004AAE  6EFE               	movwf	tosh,c
 25218   004AB0  6AFF               	clrf	tosu,c
 25219   004AB2  50FA               	movf	pclath,w,c
 25220   004AB4  0EFF               	movlw	255
 25221   004AB6  0012               	return		;indir
 25222   004AB8                     u17369:
 25223   004AB8                     
 25224                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 25225   004AB8  0100               	movlb	0	; () banked
 25226   004ABA  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25227   004ABC  6ED9               	movwf	fsr2l,c
 25228   004ABE  6ADA               	clrf	fsr2h,c
 25229   004AC0  0E0C               	movlw	12
 25230   004AC2  26D9               	addwf	fsr2l,f,c
 25231   004AC4  6ADF               	clrf	indf2,c
 25232   004AC6                     
 25233                           ; BSR set to: 0
 25234                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 25235   004AC6  0E01               	movlw	1
 25236   004AC8  6E53               	movwf	(_mediaInformation+3)^0,c
 25237   004ACA  EF95  F023         	goto	l14749
 25238   004ACE                     l14869:
 25239                           
 25240                           ; BSR set to: 0
 25241                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 25242   004ACE  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25243   004AD0  6ED9               	movwf	fsr2l,c
 25244   004AD2  6ADA               	clrf	fsr2h,c
 25245   004AD4  0E0C               	movlw	12
 25246   004AD6  26D9               	addwf	fsr2l,f,c
 25247   004AD8  0EFF               	movlw	255
 25248   004ADA  6EDF               	movwf	indf2,c
 25249   004ADC                     
 25250                           ; BSR set to: 0
 25251   004ADC  0E00               	movlw	0
 25252   004ADE  6F6B               	movwf	SD_SendCmd@address& (0+255),b
 25253   004AE0  0E00               	movlw	0
 25254   004AE2  6F6C               	movwf	(SD_SendCmd@address+1)& (0+255),b
 25255   004AE4  0E00               	movlw	0
 25256   004AE6  6F6D               	movwf	(SD_SendCmd@address+2)& (0+255),b
 25257   004AE8  0E00               	movlw	0
 25258   004AEA  6F6E               	movwf	(SD_SendCmd@address+3)& (0+255),b
 25259   004AEC  0E05               	movlw	5
 25260   004AEE  EC82  F01C         	call	_SD_SendCmd
 25261   004AF2                     l14873:
 25262   004AF2  8ABA               	bsf	186,5,c	;volatile
 25263   004AF4                     
 25264                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 25265   004AF4  0E97               	movlw	low (_spiMaster+4)
 25266   004AF6  6EF6               	movwf	tblptrl,c
 25267   004AF8  0EFF               	movlw	high (_spiMaster+4)
 25268   004AFA  6EF7               	movwf	tblptrh,c
 25269   004AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25270   004AFC  6AF8               	clrf	tblptru,c
 25271   004AFE                     	endif
 25272   004AFE                     	if	0	;tblptru may be non-zero
 25273   004AFE                     	endif
 25274   004AFE  0009               	tblrd		*+
 25275   004B00  006F FFD4  F083    	movff	tablat,??_SD_SPI_AsyncReadTasks
 25276   004B06  0009               	tblrd		*+
 25277   004B08  006F FFD4  F084    	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 25278   004B0E  D802               	call	u17378
 25279   004B10  EF95  F025         	goto	u17379
 25280   004B14                     u17378:
 25281   004B14  0005               	push	
 25282   004B16  6EFA               	movwf	pclath,c
 25283   004B18  0100               	movlb	0	; () banked
 25284   004B1A  5183               	movf	??_SD_SPI_AsyncReadTasks& (0+255),w,b
 25285   004B1C  6EFD               	movwf	tosl,c
 25286   004B1E  5184               	movf	(??_SD_SPI_AsyncReadTasks+1)& (0+255),w,b
 25287   004B20  6EFE               	movwf	tosh,c
 25288   004B22  6AFF               	clrf	tosu,c
 25289   004B24  50FA               	movf	pclath,w,c
 25290   004B26  0EFF               	movlw	255
 25291   004B28  0012               	return		;indir
 25292   004B2A                     u17379:
 25293   004B2A                     
 25294                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 25295   004B2A  0E01               	movlw	1
 25296   004B2C  6E53               	movwf	(_mediaInformation+3)^0,c
 25297   004B2E                     
 25298                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 25299   004B2E  0EFF               	movlw	255
 25300   004B30  EFBB  F025         	goto	l1678
 25301   004B34                     l14885:
 25302   004B34  0100               	movlb	0	; () banked
 25303   004B36  5182               	movf	SD_SPI_AsyncReadTasks@info& (0+255),w,b
 25304   004B38  6ED9               	movwf	fsr2l,c
 25305   004B3A  6ADA               	clrf	fsr2h,c
 25306   004B3C  0E0C               	movlw	12
 25307   004B3E  26D9               	addwf	fsr2l,f,c
 25308   004B40  50DF               	movf	indf2,w,c
 25309                           
 25310                           ; Switch size 1, requested type "simple"
 25311                           ; Number of cases is 6, Range of values is 0 to 255
 25312                           ; switch strategies available:
 25313                           ; Name         Instructions Cycles
 25314                           ; simple_byte           19    10 (average)
 25315                           ;	Chosen strategy is simple_byte
 25316   004B42  0A00               	xorlw	0	; case 0
 25317   004B44  B4D8               	btfsc	status,2,c
 25318   004B46  EF95  F023         	goto	l14749
 25319   004B4A  0A01               	xorlw	1	; case 1
 25320   004B4C  B4D8               	btfsc	status,2,c
 25321   004B4E  EF98  F023         	goto	l14753
 25322   004B52  0A03               	xorlw	3	; case 2
 25323   004B54  B4D8               	btfsc	status,2,c
 25324   004B56  EF75  F024         	goto	l14819
 25325   004B5A  0A01               	xorlw	1	; case 3
 25326   004B5C  B4D8               	btfsc	status,2,c
 25327   004B5E  EF19  F024         	goto	l14785
 25328   004B62  0AFD               	xorlw	253	; case 254
 25329   004B64  B4D8               	btfsc	status,2,c
 25330   004B66  EF67  F025         	goto	l14869
 25331   004B6A  0A01               	xorlw	1	; case 255
 25332   004B6C  B4D8               	btfsc	status,2,c
 25333   004B6E  EF79  F025         	goto	l14873
 25334   004B72  EF79  F025         	goto	l14873
 25335   004B76                     l1678:
 25336   004B76  0012               	return		;funcret
 25337   004B78                     __end_of_SD_SPI_AsyncReadTasks:
 25338                           	callstack 0
 25339                           
 25340 ;; *************** function _memset *****************
 25341 ;; Defined at:
 25342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
 25343 ;; Parameters:    Size  Location     Type
 25344 ;;  dest            2    0[BANK0 ] PTR void 
 25345 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25346 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25347 ;;		 -> f_gets@s(4), NULL(0), 
 25348 ;;  c               2    2[BANK0 ] int 
 25349 ;;  n               2    4[BANK0 ] unsigned int 
 25350 ;; Auto vars:     Size  Location     Type
 25351 ;;  p               2    6[BANK0 ] PTR unsigned char 
 25352 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25353 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25354 ;;		 -> f_gets@s(4), NULL(0), 
 25355 ;; Return value:  Size  Location     Type
 25356 ;;                  2    0[BANK0 ] PTR void 
 25357 ;; Registers used:
 25358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25359 ;; Tracked objects:
 25360 ;;		On entry : 0/0
 25361 ;;		On exit  : 0/0
 25362 ;;		Unchanged: 0/0
 25363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25364 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25367 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25368 ;;Total ram usage:        8 bytes
 25369 ;; Hardware stack levels used: 1
 25370 ;; Hardware stack levels required when called: 5
 25371 ;; This function calls:
 25372 ;;		Nothing
 25373 ;; This function is called by:
 25374 ;;		_SD_SPI_AsyncReadTasks
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           	psect	text89
 25379   009BD4                     __ptext89:
 25380                           	callstack 0
 25381   009BD4                     _memset:
 25382                           	callstack 20
 25383   009BD4  C060  F066         	movff	memset@dest,memset@p
 25384   009BD8  C061  F067         	movff	memset@dest+1,memset@p+1
 25385   009BDC  EF0C  F04E         	goto	l14707
 25386   009BE0                     l14703:
 25387                           
 25388                           ; BSR set to: 0
 25389   009BE0  0060  F19B  FFF6   	movff	memset@p,tblptrl
 25390   009BE6  0060  F19F  FFF7   	movff	memset@p+1,tblptrh
 25391   009BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 25392   009BEE  6EF8               	movwf	tblptru,c
 25393   009BF0  0E0F               	movlw	(high __ramtop+-1)
 25394   009BF2  64F7               	cpfsgt	tblptrh,c
 25395   009BF4  D005               	bra	u17097
 25396   009BF6  0060  F18B  FFF5   	movff	memset@c,tablat
 25397   009BFC  000C               	tblwt		*
 25398   009BFE  D009               	bra	u17090
 25399   009C00                     u17097:
 25400   009C00  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25401   009C06  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25402   009C0C  0060  F18B  FFEF   	movff	memset@c,indf0
 25403   009C12                     u17090:
 25404   009C12  0100               	movlb	0	; () banked
 25405   009C14  4B66               	infsnz	memset@p& (0+255),f,b
 25406   009C16  2B67               	incf	(memset@p+1)& (0+255),f,b
 25407   009C18                     l14707:
 25408   009C18  0100               	movlb	0	; () banked
 25409   009C1A  0764               	decf	memset@n& (0+255),f,b
 25410   009C1C  A0D8               	btfss	status,0,c
 25411   009C1E  0765               	decf	(memset@n+1)& (0+255),f,b
 25412   009C20  2964               	incf	memset@n& (0+255),w,b
 25413   009C22  E106               	bnz	u17101
 25414   009C24  2965               	incf	(memset@n+1)& (0+255),w,b
 25415   009C26  A4D8               	btfss	status,2,c
 25416   009C28  EF18  F04E         	goto	u17101
 25417   009C2C  EF1A  F04E         	goto	u17100
 25418   009C30                     u17101:
 25419   009C30  EFF0  F04D         	goto	l14703
 25420   009C34                     u17100:
 25421   009C34                     
 25422                           ; BSR set to: 0
 25423   009C34  0012               	return		;funcret
 25424   009C36                     __end_of_memset:
 25425                           	callstack 0
 25426                           
 25427 ;; *************** function _SPI1_ExchangeBlock *****************
 25428 ;; Defined at:
 25429 ;;		line 109 in file "mcc_generated_files/spi1.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;  block           2    0[BANK0 ] PTR void 
 25432 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25433 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25434 ;;		 -> f_gets@s(4), NULL(0), 
 25435 ;;  blockSize       2    2[BANK0 ] unsigned int 
 25436 ;; Auto vars:     Size  Location     Type
 25437 ;;  data            2    4[BANK0 ] PTR unsigned char 
 25438 ;;		 -> STR_13(2), send_status_ok@text(3), STR_9(12), Fil(546), 
 25439 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 25440 ;;		 -> f_gets@s(4), NULL(0), 
 25441 ;; Return value:  Size  Location     Type
 25442 ;;                  1    wreg      void 
 25443 ;; Registers used:
 25444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25445 ;; Tracked objects:
 25446 ;;		On entry : 0/0
 25447 ;;		On exit  : 0/0
 25448 ;;		Unchanged: 0/0
 25449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25454 ;;Total ram usage:        6 bytes
 25455 ;; Hardware stack levels used: 1
 25456 ;; Hardware stack levels required when called: 5
 25457 ;; This function calls:
 25458 ;;		Nothing
 25459 ;; This function is called by:
 25460 ;;		_SD_SPI_AsyncWriteTasks
 25461 ;;		_SD_SPI_AsyncReadTasks
 25462 ;; This function uses a non-reentrant model
 25463 ;;
 25464                           
 25465                           	psect	text90
 25466   00918E                     __ptext90:
 25467                           	callstack 0
 25468   00918E                     _SPI1_ExchangeBlock:
 25469                           	callstack 20
 25470   00918E                     
 25471                           ;mcc_generated_files/spi1.c: 109: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 110: {;mcc_generated_files/spi1.c: 111:     uint8_t *data =
      +                           block;
 25472   00918E  C060  F064         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 25473   009192  C061  F065         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 25474                           
 25475                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 25476   009196  EF0B  F049         	goto	l14501
 25477   00919A                     l14493:
 25478                           
 25479                           ; BSR set to: 0
 25480                           ;mcc_generated_files/spi1.c: 113:     {;mcc_generated_files/spi1.c: 114:         SPI1TCN
      +                          TL = 1;
 25481   00919A  0E01               	movlw	1
 25482   00919C  013D               	movlb	61	; () banked
 25483   00919E  6F12               	movwf	18,b	;volatile
 25484   0091A0                     
 25485                           ; BSR set to: 61
 25486                           ;mcc_generated_files/spi1.c: 115:         SPI1TXB = *data;
 25487   0091A0  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 25488   0091A6  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 25489   0091AC  0E00               	movlw	low (__mediumconst shr (0+16))
 25490   0091AE  6EF8               	movwf	tblptru,c
 25491   0091B0  0E0F               	movlw	(high __ramtop+-1)
 25492   0091B2  64F7               	cpfsgt	tblptrh,c
 25493   0091B4  D003               	bra	u16717
 25494   0091B6  0008               	tblrd		*
 25495   0091B8  50F5               	movf	tablat,w,c
 25496   0091BA  D007               	bra	u16710
 25497   0091BC                     u16717:
 25498   0091BC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25499   0091C2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25500   0091C8  50EF               	movf	indf0,w,c
 25501   0091CA                     u16710:
 25502   0091CA  013D               	movlb	61	; () banked
 25503   0091CC  6F11               	movwf	17,b	;volatile
 25504   0091CE                     l1921:
 25505   0091CE  0139               	movlb	57	; () banked
 25506   0091D0  A9A2               	btfss	162,4,b	;volatile
 25507   0091D2  EFED  F048         	goto	u16721
 25508   0091D6  EFEF  F048         	goto	u16720
 25509   0091DA                     u16721:
 25510   0091DA  EFE7  F048         	goto	l1921
 25511   0091DE                     u16720:
 25512   0091DE                     
 25513                           ; BSR set to: 57
 25514                           ;mcc_generated_files/spi1.c: 117:         *data++ = SPI1RXB;
 25515   0091DE  0060  F193  FFF6   	movff	SPI1_ExchangeBlock@data,tblptrl
 25516   0091E4  0060  F197  FFF7   	movff	SPI1_ExchangeBlock@data+1,tblptrh
 25517   0091EA  0E00               	movlw	low (__mediumconst shr (0+16))
 25518   0091EC  6EF8               	movwf	tblptru,c
 25519   0091EE  0E0F               	movlw	(high __ramtop+-1)
 25520   0091F0  64F7               	cpfsgt	tblptrh,c
 25521   0091F2  D005               	bra	u16737
 25522   0091F4  006F F443 FFF5     	movff	15632,tablat	;volatile
 25523   0091FA  000C               	tblwt		*
 25524   0091FC  D009               	bra	u16730
 25525   0091FE                     u16737:
 25526   0091FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25527   009204  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25528   00920A  006F F443 FFEF     	movff	15632,indf0	;volatile
 25529   009210                     u16730:
 25530   009210  0100               	movlb	0	; () banked
 25531   009212  4B64               	infsnz	SPI1_ExchangeBlock@data& (0+255),f,b
 25532   009214  2B65               	incf	(SPI1_ExchangeBlock@data+1)& (0+255),f,b
 25533   009216                     l14501:
 25534                           
 25535                           ;mcc_generated_files/spi1.c: 112:     while(blockSize--)
 25536   009216  0100               	movlb	0	; () banked
 25537   009218  0762               	decf	SPI1_ExchangeBlock@blockSize& (0+255),f,b
 25538   00921A  A0D8               	btfss	status,0,c
 25539   00921C  0763               	decf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),f,b
 25540   00921E  2962               	incf	SPI1_ExchangeBlock@blockSize& (0+255),w,b
 25541   009220  E106               	bnz	u16741
 25542   009222  2963               	incf	(SPI1_ExchangeBlock@blockSize+1)& (0+255),w,b
 25543   009224  A4D8               	btfss	status,2,c
 25544   009226  EF17  F049         	goto	u16741
 25545   00922A  EF19  F049         	goto	u16740
 25546   00922E                     u16741:
 25547   00922E  EFCD  F048         	goto	l14493
 25548   009232                     u16740:
 25549   009232                     
 25550                           ; BSR set to: 0
 25551   009232  0012               	return		;funcret
 25552   009234                     __end_of_SPI1_ExchangeBlock:
 25553                           	callstack 0
 25554                           
 25555 ;; *************** function _SD_SendCmd *****************
 25556 ;; Defined at:
 25557 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 25558 ;; Parameters:    Size  Location     Type
 25559 ;;  cmd             1    wreg     unsigned char 
 25560 ;;  address         4   11[BANK0 ] unsigned long 
 25561 ;; Auto vars:     Size  Location     Type
 25562 ;;  cmd             1   28[BANK0 ] unsigned char 
 25563 ;;  response        5   29[BANK0 ] struct .
 25564 ;;  address_byte    4   24[BANK0 ] unsigned char [4]
 25565 ;;  longTimeout     4   18[BANK0 ] unsigned long 
 25566 ;;  timeout         2   22[BANK0 ] unsigned short 
 25567 ;; Return value:  Size  Location     Type
 25568 ;;                  5   11[BANK0 ] struct .
 25569 ;; Registers used:
 25570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25571 ;; Tracked objects:
 25572 ;;		On entry : 0/0
 25573 ;;		On exit  : 0/0
 25574 ;;		Unchanged: 0/0
 25575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25576 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25577 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25579 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25580 ;;Total ram usage:       23 bytes
 25581 ;; Hardware stack levels used: 1
 25582 ;; Hardware stack levels required when called: 6
 25583 ;; This function calls:
 25584 ;;		_SPI1_ExchangeByte
 25585 ;;		_memcpy
 25586 ;; This function is called by:
 25587 ;;		_SD_SPI_MediaInitialize
 25588 ;;		_SD_SPI_AsyncReadTasks
 25589 ;;		_SD_SPI_AsyncWriteTasks
 25590 ;; This function uses a non-reentrant model
 25591 ;;
 25592                           
 25593                           	psect	text91
 25594   003904                     __ptext91:
 25595                           	callstack 0
 25596   003904                     _SD_SendCmd:
 25597                           	callstack 19
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;incstack = 0
 25601                           ;SD_SendCmd@cmd stored from wreg
 25602   003904  0100               	movlb	0	; () banked
 25603   003906  6F7C               	movwf	SD_SendCmd@cmd& (0+255),b
 25604   003908  9ABA               	bcf	186,5,c	;volatile
 25605   00390A                     
 25606                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 25607   00390A  0E78               	movlw	low SD_SendCmd@address_bytes
 25608   00390C  0100               	movlb	0	; () banked
 25609   00390E  6F60               	movwf	memcpy@d1& (0+255),b
 25610   003910  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 25611   003912  0E6B               	movlw	low SD_SendCmd@address
 25612   003914  6F62               	movwf	memcpy@s1& (0+255),b
 25613   003916  6B63               	clrf	(memcpy@s1+1)& (0+255),b
 25614   003918  0E00               	movlw	0
 25615   00391A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25616   00391C  0E04               	movlw	4
 25617   00391E  6F64               	movwf	memcpy@n& (0+255),b
 25618   003920  EC7B  F04E         	call	_memcpy
 25619   003924                     
 25620                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 25621   003924  0E97               	movlw	low (_spiMaster+4)
 25622   003926  6EF6               	movwf	tblptrl,c
 25623   003928  0EFF               	movlw	high (_spiMaster+4)
 25624   00392A  6EF7               	movwf	tblptrh,c
 25625   00392C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25626   00392C  6AF8               	clrf	tblptru,c
 25627   00392E                     	endif
 25628   00392E                     	if	0	;tblptru may be non-zero
 25629   00392E                     	endif
 25630   00392E  0009               	tblrd		*+
 25631   003930  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25632   003936  0009               	tblrd		*+
 25633   003938  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25634   00393E  D802               	call	u16468
 25635   003940  EFBA  F01C         	goto	u16469
 25636   003944                     u16468:
 25637   003944  0005               	push	
 25638   003946  6EFA               	movwf	pclath,c
 25639   003948  0100               	movlb	0	; () banked
 25640   00394A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25641   00394C  6EFD               	movwf	tosl,c
 25642   00394E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25643   003950  6EFE               	movwf	tosh,c
 25644   003952  6AFF               	clrf	tosu,c
 25645   003954  50FA               	movf	pclath,w,c
 25646   003956  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 25647   003958  0D04               	mullw	4
 25648   00395A  0E43               	movlw	low _sdmmc_cmdtable
 25649   00395C  24F3               	addwf	243,w,c
 25650   00395E  6EF6               	movwf	tblptrl,c
 25651   003960  0EFF               	movlw	high _sdmmc_cmdtable
 25652   003962  20F4               	addwfc	244,w,c
 25653   003964  6EF7               	movwf	tblptrh,c
 25654   003966                     	if	1	;There are 3 active tblptr bytes
 25655   003966  6AF8               	clrf	tblptru,c
 25656   003968  0E00               	movlw	low (__mediumconst shr (0+16))
 25657   00396A  22F8               	addwfc	tblptru,f,c
 25658   00396C                     	endif
 25659   00396C  0008               	tblrd		*
 25660   00396E  50F5               	movf	tablat,w,c
 25661   003970  0940               	iorlw	64
 25662   003972  0012               	return		;indir
 25663   003974                     u16469:
 25664   003974                     
 25665                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 25666   003974  0E97               	movlw	low (_spiMaster+4)
 25667   003976  6EF6               	movwf	tblptrl,c
 25668   003978  0EFF               	movlw	high (_spiMaster+4)
 25669   00397A  6EF7               	movwf	tblptrh,c
 25670   00397C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25671   00397C  6AF8               	clrf	tblptru,c
 25672   00397E                     	endif
 25673   00397E                     	if	0	;tblptru may be non-zero
 25674   00397E                     	endif
 25675   00397E  0009               	tblrd		*+
 25676   003980  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25677   003986  0009               	tblrd		*+
 25678   003988  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25679   00398E  D802               	call	u16478
 25680   003990  EFD5  F01C         	goto	u16479
 25681   003994                     u16478:
 25682   003994  0005               	push	
 25683   003996  6EFA               	movwf	pclath,c
 25684   003998  0100               	movlb	0	; () banked
 25685   00399A  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25686   00399C  6EFD               	movwf	tosl,c
 25687   00399E  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25688   0039A0  6EFE               	movwf	tosh,c
 25689   0039A2  6AFF               	clrf	tosu,c
 25690   0039A4  50FA               	movf	pclath,w,c
 25691   0039A6  517B               	movf	(SD_SendCmd@address_bytes+3)& (0+255),w,b
 25692   0039A8  0012               	return		;indir
 25693   0039AA                     u16479:
 25694   0039AA                     
 25695                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 25696   0039AA  0E97               	movlw	low (_spiMaster+4)
 25697   0039AC  6EF6               	movwf	tblptrl,c
 25698   0039AE  0EFF               	movlw	high (_spiMaster+4)
 25699   0039B0  6EF7               	movwf	tblptrh,c
 25700   0039B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25701   0039B2  6AF8               	clrf	tblptru,c
 25702   0039B4                     	endif
 25703   0039B4                     	if	0	;tblptru may be non-zero
 25704   0039B4                     	endif
 25705   0039B4  0009               	tblrd		*+
 25706   0039B6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25707   0039BC  0009               	tblrd		*+
 25708   0039BE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25709   0039C4  D802               	call	u16488
 25710   0039C6  EFF0  F01C         	goto	u16489
 25711   0039CA                     u16488:
 25712   0039CA  0005               	push	
 25713   0039CC  6EFA               	movwf	pclath,c
 25714   0039CE  0100               	movlb	0	; () banked
 25715   0039D0  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25716   0039D2  6EFD               	movwf	tosl,c
 25717   0039D4  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25718   0039D6  6EFE               	movwf	tosh,c
 25719   0039D8  6AFF               	clrf	tosu,c
 25720   0039DA  50FA               	movf	pclath,w,c
 25721   0039DC  517A               	movf	(SD_SendCmd@address_bytes+2)& (0+255),w,b
 25722   0039DE  0012               	return		;indir
 25723   0039E0                     u16489:
 25724   0039E0                     
 25725                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 25726   0039E0  0E97               	movlw	low (_spiMaster+4)
 25727   0039E2  6EF6               	movwf	tblptrl,c
 25728   0039E4  0EFF               	movlw	high (_spiMaster+4)
 25729   0039E6  6EF7               	movwf	tblptrh,c
 25730   0039E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25731   0039E8  6AF8               	clrf	tblptru,c
 25732   0039EA                     	endif
 25733   0039EA                     	if	0	;tblptru may be non-zero
 25734   0039EA                     	endif
 25735   0039EA  0009               	tblrd		*+
 25736   0039EC  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25737   0039F2  0009               	tblrd		*+
 25738   0039F4  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25739   0039FA  D802               	call	u16498
 25740   0039FC  EF0B  F01D         	goto	u16499
 25741   003A00                     u16498:
 25742   003A00  0005               	push	
 25743   003A02  6EFA               	movwf	pclath,c
 25744   003A04  0100               	movlb	0	; () banked
 25745   003A06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25746   003A08  6EFD               	movwf	tosl,c
 25747   003A0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25748   003A0C  6EFE               	movwf	tosh,c
 25749   003A0E  6AFF               	clrf	tosu,c
 25750   003A10  50FA               	movf	pclath,w,c
 25751   003A12  5179               	movf	(SD_SendCmd@address_bytes+1)& (0+255),w,b
 25752   003A14  0012               	return		;indir
 25753   003A16                     u16499:
 25754   003A16                     
 25755                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 25756   003A16  0E97               	movlw	low (_spiMaster+4)
 25757   003A18  6EF6               	movwf	tblptrl,c
 25758   003A1A  0EFF               	movlw	high (_spiMaster+4)
 25759   003A1C  6EF7               	movwf	tblptrh,c
 25760   003A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25761   003A1E  6AF8               	clrf	tblptru,c
 25762   003A20                     	endif
 25763   003A20                     	if	0	;tblptru may be non-zero
 25764   003A20                     	endif
 25765   003A20  0009               	tblrd		*+
 25766   003A22  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25767   003A28  0009               	tblrd		*+
 25768   003A2A  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25769   003A30  D802               	call	u16508
 25770   003A32  EF26  F01D         	goto	u16509
 25771   003A36                     u16508:
 25772   003A36  0005               	push	
 25773   003A38  6EFA               	movwf	pclath,c
 25774   003A3A  0100               	movlb	0	; () banked
 25775   003A3C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25776   003A3E  6EFD               	movwf	tosl,c
 25777   003A40  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25778   003A42  6EFE               	movwf	tosh,c
 25779   003A44  6AFF               	clrf	tosu,c
 25780   003A46  50FA               	movf	pclath,w,c
 25781   003A48  5178               	movf	SD_SendCmd@address_bytes& (0+255),w,b
 25782   003A4A  0012               	return		;indir
 25783   003A4C                     u16509:
 25784   003A4C                     
 25785                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 25786   003A4C  0E97               	movlw	low (_spiMaster+4)
 25787   003A4E  6EF6               	movwf	tblptrl,c
 25788   003A50  0EFF               	movlw	high (_spiMaster+4)
 25789   003A52  6EF7               	movwf	tblptrh,c
 25790   003A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25791   003A54  6AF8               	clrf	tblptru,c
 25792   003A56                     	endif
 25793   003A56                     	if	0	;tblptru may be non-zero
 25794   003A56                     	endif
 25795   003A56  0009               	tblrd		*+
 25796   003A58  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25797   003A5E  0009               	tblrd		*+
 25798   003A60  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25799   003A66  D802               	call	u16518
 25800   003A68  EF51  F01D         	goto	u16519
 25801   003A6C                     u16518:
 25802   003A6C  0005               	push	
 25803   003A6E  6EFA               	movwf	pclath,c
 25804   003A70  0100               	movlb	0	; () banked
 25805   003A72  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25806   003A74  6EFD               	movwf	tosl,c
 25807   003A76  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25808   003A78  6EFE               	movwf	tosh,c
 25809   003A7A  6AFF               	clrf	tosu,c
 25810   003A7C  50FA               	movf	pclath,w,c
 25811   003A7E  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 25812   003A80  0D04               	mullw	4
 25813   003A82  0E01               	movlw	1
 25814   003A84  26F3               	addwf	243,f,c
 25815   003A86  0E00               	movlw	0
 25816   003A88  22F4               	addwfc	244,f,c
 25817   003A8A  0E43               	movlw	low _sdmmc_cmdtable
 25818   003A8C  24F3               	addwf	243,w,c
 25819   003A8E  6EF6               	movwf	tblptrl,c
 25820   003A90  0EFF               	movlw	high _sdmmc_cmdtable
 25821   003A92  20F4               	addwfc	244,w,c
 25822   003A94  6EF7               	movwf	tblptrh,c
 25823   003A96                     	if	1	;There are 3 active tblptr bytes
 25824   003A96  6AF8               	clrf	tblptru,c
 25825   003A98  0E00               	movlw	low (__mediumconst shr (0+16))
 25826   003A9A  22F8               	addwfc	tblptru,f,c
 25827   003A9C                     	endif
 25828   003A9C  0008               	tblrd		*
 25829   003A9E  50F5               	movf	tablat,w,c
 25830   003AA0  0012               	return		;indir
 25831   003AA2                     u16519:
 25832   003AA2                     
 25833                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 25834   003AA2  0E05               	movlw	5
 25835   003AA4  0100               	movlb	0	; () banked
 25836   003AA6  197C               	xorwf	SD_SendCmd@cmd& (0+255),w,b
 25837   003AA8  A4D8               	btfss	status,2,c
 25838   003AAA  EF59  F01D         	goto	u16521
 25839   003AAE  EF5B  F01D         	goto	u16520
 25840   003AB2                     u16521:
 25841   003AB2  EF75  F01D         	goto	l14451
 25842   003AB6                     u16520:
 25843   003AB6                     
 25844                           ; BSR set to: 0
 25845                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 25846   003AB6  0E97               	movlw	low (_spiMaster+4)
 25847   003AB8  6EF6               	movwf	tblptrl,c
 25848   003ABA  0EFF               	movlw	high (_spiMaster+4)
 25849   003ABC  6EF7               	movwf	tblptrh,c
 25850   003ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25851   003ABE  6AF8               	clrf	tblptru,c
 25852   003AC0                     	endif
 25853   003AC0                     	if	0	;tblptru may be non-zero
 25854   003AC0                     	endif
 25855   003AC0  0009               	tblrd		*+
 25856   003AC2  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25857   003AC8  0009               	tblrd		*+
 25858   003ACA  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25859   003AD0  D802               	call	u16538
 25860   003AD2  EF75  F01D         	goto	u16539
 25861   003AD6                     u16538:
 25862   003AD6  0005               	push	
 25863   003AD8  6EFA               	movwf	pclath,c
 25864   003ADA  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25865   003ADC  6EFD               	movwf	tosl,c
 25866   003ADE  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25867   003AE0  6EFE               	movwf	tosh,c
 25868   003AE2  6AFF               	clrf	tosu,c
 25869   003AE4  50FA               	movf	pclath,w,c
 25870   003AE6  0EFF               	movlw	255
 25871   003AE8  0012               	return		;indir
 25872   003AEA                     u16539:
 25873   003AEA                     l14451:
 25874                           
 25875                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 25876   003AEA  0E00               	movlw	0
 25877   003AEC  0100               	movlb	0	; () banked
 25878   003AEE  6F77               	movwf	(SD_SendCmd@timeout+1)& (0+255),b
 25879   003AF0  0E14               	movlw	20
 25880   003AF2  6F76               	movwf	SD_SendCmd@timeout& (0+255),b
 25881   003AF4                     l14453:
 25882                           
 25883                           ; BSR set to: 0
 25884                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 25885   003AF4  0E97               	movlw	low (_spiMaster+4)
 25886   003AF6  6EF6               	movwf	tblptrl,c
 25887   003AF8  0EFF               	movlw	high (_spiMaster+4)
 25888   003AFA  6EF7               	movwf	tblptrh,c
 25889   003AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25890   003AFC  6AF8               	clrf	tblptru,c
 25891   003AFE                     	endif
 25892   003AFE                     	if	0	;tblptru may be non-zero
 25893   003AFE                     	endif
 25894   003AFE  0009               	tblrd		*+
 25895   003B00  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25896   003B06  0009               	tblrd		*+
 25897   003B08  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25898   003B0E  D802               	call	u16548
 25899   003B10  EF94  F01D         	goto	u16549
 25900   003B14                     u16548:
 25901   003B14  0005               	push	
 25902   003B16  6EFA               	movwf	pclath,c
 25903   003B18  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25904   003B1A  6EFD               	movwf	tosl,c
 25905   003B1C  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25906   003B1E  6EFE               	movwf	tosh,c
 25907   003B20  6AFF               	clrf	tosu,c
 25908   003B22  50FA               	movf	pclath,w,c
 25909   003B24  0EFF               	movlw	255
 25910   003B26  0012               	return		;indir
 25911   003B28                     u16549:
 25912   003B28  0100               	movlb	0	; () banked
 25913   003B2A  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 25914   003B2C                     
 25915                           ; BSR set to: 0
 25916                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 25917   003B2C  0776               	decf	SD_SendCmd@timeout& (0+255),f,b
 25918   003B2E  A0D8               	btfss	status,0,c
 25919   003B30  0777               	decf	(SD_SendCmd@timeout+1)& (0+255),f,b
 25920   003B32                     
 25921                           ; BSR set to: 0
 25922                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 25923   003B32  297D               	incf	SD_SendCmd@response& (0+255),w,b
 25924   003B34  A4D8               	btfss	status,2,c
 25925   003B36  EF9F  F01D         	goto	u16551
 25926   003B3A  EFA1  F01D         	goto	u16550
 25927   003B3E                     u16551:
 25928   003B3E  EFAA  F01D         	goto	l14461
 25929   003B42                     u16550:
 25930   003B42                     
 25931                           ; BSR set to: 0
 25932   003B42  5176               	movf	SD_SendCmd@timeout& (0+255),w,b
 25933   003B44  1177               	iorwf	(SD_SendCmd@timeout+1)& (0+255),w,b
 25934   003B46  A4D8               	btfss	status,2,c
 25935   003B48  EFA8  F01D         	goto	u16561
 25936   003B4C  EFAA  F01D         	goto	u16560
 25937   003B50                     u16561:
 25938   003B50  EF7A  F01D         	goto	l14453
 25939   003B54                     u16560:
 25940   003B54                     l14461:
 25941                           
 25942                           ; BSR set to: 0
 25943                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 25944   003B54  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 25945   003B56  0D04               	mullw	4
 25946   003B58  0E02               	movlw	2
 25947   003B5A  26F3               	addwf	243,f,c
 25948   003B5C  0E00               	movlw	0
 25949   003B5E  22F4               	addwfc	244,f,c
 25950   003B60  0E43               	movlw	low _sdmmc_cmdtable
 25951   003B62  24F3               	addwf	243,w,c
 25952   003B64  6EF6               	movwf	tblptrl,c
 25953   003B66  0EFF               	movlw	high _sdmmc_cmdtable
 25954   003B68  20F4               	addwfc	244,w,c
 25955   003B6A  6EF7               	movwf	tblptrh,c
 25956   003B6C                     	if	1	;There are 3 active tblptr bytes
 25957   003B6C  6AF8               	clrf	tblptru,c
 25958   003B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 25959   003B70  22F8               	addwfc	tblptru,f,c
 25960   003B72                     	endif
 25961   003B72  0008               	tblrd		*
 25962   003B74  50F5               	movf	tablat,w,c
 25963   003B76  0A02               	xorlw	2
 25964   003B78  A4D8               	btfss	status,2,c
 25965   003B7A  EFC1  F01D         	goto	u16571
 25966   003B7E  EFC3  F01D         	goto	u16570
 25967   003B82                     u16571:
 25968   003B82  EFE3  F01D         	goto	l14467
 25969   003B86                     u16570:
 25970   003B86                     
 25971                           ; BSR set to: 0
 25972                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 25973   003B86  C07D  F07E         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 25974   003B8A                     
 25975                           ; BSR set to: 0
 25976                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 25977   003B8A  0E97               	movlw	low (_spiMaster+4)
 25978   003B8C  6EF6               	movwf	tblptrl,c
 25979   003B8E  0EFF               	movlw	high (_spiMaster+4)
 25980   003B90  6EF7               	movwf	tblptrh,c
 25981   003B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25982   003B92  6AF8               	clrf	tblptru,c
 25983   003B94                     	endif
 25984   003B94                     	if	0	;tblptru may be non-zero
 25985   003B94                     	endif
 25986   003B94  0009               	tblrd		*+
 25987   003B96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 25988   003B9C  0009               	tblrd		*+
 25989   003B9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 25990   003BA4  D802               	call	u16588
 25991   003BA6  EFDF  F01D         	goto	u16589
 25992   003BAA                     u16588:
 25993   003BAA  0005               	push	
 25994   003BAC  6EFA               	movwf	pclath,c
 25995   003BAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 25996   003BB0  6EFD               	movwf	tosl,c
 25997   003BB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 25998   003BB4  6EFE               	movwf	tosh,c
 25999   003BB6  6AFF               	clrf	tosu,c
 26000   003BB8  50FA               	movf	pclath,w,c
 26001   003BBA  0EFF               	movlw	255
 26002   003BBC  0012               	return		;indir
 26003   003BBE                     u16589:
 26004   003BBE  0100               	movlb	0	; () banked
 26005   003BC0  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26006                           
 26007                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 26008   003BC2  EFC5  F01E         	goto	l1762
 26009   003BC6                     l14467:
 26010                           
 26011                           ; BSR set to: 0
 26012   003BC6  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26013   003BC8  0D04               	mullw	4
 26014   003BCA  0E02               	movlw	2
 26015   003BCC  26F3               	addwf	243,f,c
 26016   003BCE  0E00               	movlw	0
 26017   003BD0  22F4               	addwfc	244,f,c
 26018   003BD2  0E43               	movlw	low _sdmmc_cmdtable
 26019   003BD4  24F3               	addwf	243,w,c
 26020   003BD6  6EF6               	movwf	tblptrl,c
 26021   003BD8  0EFF               	movlw	high _sdmmc_cmdtable
 26022   003BDA  20F4               	addwfc	244,w,c
 26023   003BDC  6EF7               	movwf	tblptrh,c
 26024   003BDE                     	if	1	;There are 3 active tblptr bytes
 26025   003BDE  6AF8               	clrf	tblptru,c
 26026   003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 26027   003BE2  22F8               	addwfc	tblptru,f,c
 26028   003BE4                     	endif
 26029   003BE4  0008               	tblrd		*
 26030   003BE6  50F5               	movf	tablat,w,c
 26031   003BE8  06E8               	decf	wreg,f,c
 26032   003BEA  A4D8               	btfss	status,2,c
 26033   003BEC  EFFA  F01D         	goto	u16591
 26034   003BF0  EFFC  F01D         	goto	u16590
 26035   003BF4                     u16591:
 26036   003BF4  EF3C  F01E         	goto	l14481
 26037   003BF8                     u16590:
 26038   003BF8                     
 26039                           ; BSR set to: 0
 26040                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 26041   003BF8  0E00               	movlw	0
 26042   003BFA  6F72               	movwf	SD_SendCmd@longTimeout& (0+255),b
 26043   003BFC  0E00               	movlw	0
 26044   003BFE  6F73               	movwf	(SD_SendCmd@longTimeout+1)& (0+255),b
 26045   003C00  0E0A               	movlw	10
 26046   003C02  6F74               	movwf	(SD_SendCmd@longTimeout+2)& (0+255),b
 26047   003C04  0E00               	movlw	0
 26048   003C06  6F75               	movwf	(SD_SendCmd@longTimeout+3)& (0+255),b
 26049   003C08                     l14471:
 26050                           
 26051                           ; BSR set to: 0
 26052                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 26053   003C08  0E97               	movlw	low (_spiMaster+4)
 26054   003C0A  6EF6               	movwf	tblptrl,c
 26055   003C0C  0EFF               	movlw	high (_spiMaster+4)
 26056   003C0E  6EF7               	movwf	tblptrh,c
 26057   003C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26058   003C10  6AF8               	clrf	tblptru,c
 26059   003C12                     	endif
 26060   003C12                     	if	0	;tblptru may be non-zero
 26061   003C12                     	endif
 26062   003C12  0009               	tblrd		*+
 26063   003C14  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26064   003C1A  0009               	tblrd		*+
 26065   003C1C  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26066   003C22  D802               	call	u16608
 26067   003C24  EF1E  F01E         	goto	u16609
 26068   003C28                     u16608:
 26069   003C28  0005               	push	
 26070   003C2A  6EFA               	movwf	pclath,c
 26071   003C2C  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26072   003C2E  6EFD               	movwf	tosl,c
 26073   003C30  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26074   003C32  6EFE               	movwf	tosh,c
 26075   003C34  6AFF               	clrf	tosu,c
 26076   003C36  50FA               	movf	pclath,w,c
 26077   003C38  0EFF               	movlw	255
 26078   003C3A  0012               	return		;indir
 26079   003C3C                     u16609:
 26080   003C3C  0100               	movlb	0	; () banked
 26081   003C3E  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26082   003C40                     
 26083                           ; BSR set to: 0
 26084                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 26085   003C40  0772               	decf	SD_SendCmd@longTimeout& (0+255),f,b
 26086   003C42  0E00               	movlw	0
 26087   003C44  5B73               	subwfb	(SD_SendCmd@longTimeout+1)& (0+255),f,b
 26088   003C46  5B74               	subwfb	(SD_SendCmd@longTimeout+2)& (0+255),f,b
 26089   003C48  5B75               	subwfb	(SD_SendCmd@longTimeout+3)& (0+255),f,b
 26090   003C4A                     
 26091                           ; BSR set to: 0
 26092                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 26093   003C4A  517D               	movf	SD_SendCmd@response& (0+255),w,b
 26094   003C4C  A4D8               	btfss	status,2,c
 26095   003C4E  EF2B  F01E         	goto	u16611
 26096   003C52  EF2D  F01E         	goto	u16610
 26097   003C56                     u16611:
 26098   003C56  EF38  F01E         	goto	l14479
 26099   003C5A                     u16610:
 26100   003C5A                     
 26101                           ; BSR set to: 0
 26102   003C5A  5172               	movf	SD_SendCmd@longTimeout& (0+255),w,b
 26103   003C5C  1173               	iorwf	(SD_SendCmd@longTimeout+1)& (0+255),w,b
 26104   003C5E  1174               	iorwf	(SD_SendCmd@longTimeout+2)& (0+255),w,b
 26105   003C60  1175               	iorwf	(SD_SendCmd@longTimeout+3)& (0+255),w,b
 26106   003C62  A4D8               	btfss	status,2,c
 26107   003C64  EF36  F01E         	goto	u16621
 26108   003C68  EF38  F01E         	goto	u16620
 26109   003C6C                     u16621:
 26110   003C6C  EF04  F01E         	goto	l14471
 26111   003C70                     u16620:
 26112   003C70                     l14479:
 26113                           
 26114                           ; BSR set to: 0
 26115                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 26116   003C70  0E00               	movlw	0
 26117   003C72  6F7D               	movwf	SD_SendCmd@response& (0+255),b
 26118                           
 26119                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 26120   003C74  EFC5  F01E         	goto	l1762
 26121   003C78                     l14481:
 26122                           
 26123                           ; BSR set to: 0
 26124   003C78  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26125   003C7A  0D04               	mullw	4
 26126   003C7C  0E02               	movlw	2
 26127   003C7E  26F3               	addwf	243,f,c
 26128   003C80  0E00               	movlw	0
 26129   003C82  22F4               	addwfc	244,f,c
 26130   003C84  0E43               	movlw	low _sdmmc_cmdtable
 26131   003C86  24F3               	addwf	243,w,c
 26132   003C88  6EF6               	movwf	tblptrl,c
 26133   003C8A  0EFF               	movlw	high _sdmmc_cmdtable
 26134   003C8C  20F4               	addwfc	244,w,c
 26135   003C8E  6EF7               	movwf	tblptrh,c
 26136   003C90                     	if	1	;There are 3 active tblptr bytes
 26137   003C90  6AF8               	clrf	tblptru,c
 26138   003C92  0E00               	movlw	low (__mediumconst shr (0+16))
 26139   003C94  22F8               	addwfc	tblptru,f,c
 26140   003C96                     	endif
 26141   003C96  0008               	tblrd		*
 26142   003C98  50F5               	movf	tablat,w,c
 26143   003C9A  0A04               	xorlw	4
 26144   003C9C  A4D8               	btfss	status,2,c
 26145   003C9E  EF53  F01E         	goto	u16631
 26146   003CA2  EF55  F01E         	goto	u16630
 26147   003CA6                     u16631:
 26148   003CA6  EFC5  F01E         	goto	l1762
 26149   003CAA                     u16630:
 26150   003CAA                     
 26151                           ; BSR set to: 0
 26152                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 26153   003CAA  0E97               	movlw	low (_spiMaster+4)
 26154   003CAC  6EF6               	movwf	tblptrl,c
 26155   003CAE  0EFF               	movlw	high (_spiMaster+4)
 26156   003CB0  6EF7               	movwf	tblptrh,c
 26157   003CB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26158   003CB2  6AF8               	clrf	tblptru,c
 26159   003CB4                     	endif
 26160   003CB4                     	if	0	;tblptru may be non-zero
 26161   003CB4                     	endif
 26162   003CB4  0009               	tblrd		*+
 26163   003CB6  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26164   003CBC  0009               	tblrd		*+
 26165   003CBE  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26166   003CC4  D802               	call	u16648
 26167   003CC6  EF6F  F01E         	goto	u16649
 26168   003CCA                     u16648:
 26169   003CCA  0005               	push	
 26170   003CCC  6EFA               	movwf	pclath,c
 26171   003CCE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26172   003CD0  6EFD               	movwf	tosl,c
 26173   003CD2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26174   003CD4  6EFE               	movwf	tosh,c
 26175   003CD6  6AFF               	clrf	tosu,c
 26176   003CD8  50FA               	movf	pclath,w,c
 26177   003CDA  0EFF               	movlw	255
 26178   003CDC  0012               	return		;indir
 26179   003CDE                     u16649:
 26180   003CDE  0100               	movlb	0	; () banked
 26181   003CE0  6F81               	movwf	(SD_SendCmd@response+4)& (0+255),b
 26182                           
 26183                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26184   003CE2  0E97               	movlw	low (_spiMaster+4)
 26185   003CE4  6EF6               	movwf	tblptrl,c
 26186   003CE6  0EFF               	movlw	high (_spiMaster+4)
 26187   003CE8  6EF7               	movwf	tblptrh,c
 26188   003CEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26189   003CEA  6AF8               	clrf	tblptru,c
 26190   003CEC                     	endif
 26191   003CEC                     	if	0	;tblptru may be non-zero
 26192   003CEC                     	endif
 26193   003CEC  0009               	tblrd		*+
 26194   003CEE  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26195   003CF4  0009               	tblrd		*+
 26196   003CF6  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26197   003CFC  D802               	call	u16658
 26198   003CFE  EF8B  F01E         	goto	u16659
 26199   003D02                     u16658:
 26200   003D02  0005               	push	
 26201   003D04  6EFA               	movwf	pclath,c
 26202   003D06  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26203   003D08  6EFD               	movwf	tosl,c
 26204   003D0A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26205   003D0C  6EFE               	movwf	tosh,c
 26206   003D0E  6AFF               	clrf	tosu,c
 26207   003D10  50FA               	movf	pclath,w,c
 26208   003D12  0EFF               	movlw	255
 26209   003D14  0012               	return		;indir
 26210   003D16                     u16659:
 26211   003D16  0100               	movlb	0	; () banked
 26212   003D18  6F80               	movwf	(SD_SendCmd@response+3)& (0+255),b
 26213                           
 26214                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26215   003D1A  0E97               	movlw	low (_spiMaster+4)
 26216   003D1C  6EF6               	movwf	tblptrl,c
 26217   003D1E  0EFF               	movlw	high (_spiMaster+4)
 26218   003D20  6EF7               	movwf	tblptrh,c
 26219   003D22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26220   003D22  6AF8               	clrf	tblptru,c
 26221   003D24                     	endif
 26222   003D24                     	if	0	;tblptru may be non-zero
 26223   003D24                     	endif
 26224   003D24  0009               	tblrd		*+
 26225   003D26  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26226   003D2C  0009               	tblrd		*+
 26227   003D2E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26228   003D34  D802               	call	u16668
 26229   003D36  EFA7  F01E         	goto	u16669
 26230   003D3A                     u16668:
 26231   003D3A  0005               	push	
 26232   003D3C  6EFA               	movwf	pclath,c
 26233   003D3E  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26234   003D40  6EFD               	movwf	tosl,c
 26235   003D42  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26236   003D44  6EFE               	movwf	tosh,c
 26237   003D46  6AFF               	clrf	tosu,c
 26238   003D48  50FA               	movf	pclath,w,c
 26239   003D4A  0EFF               	movlw	255
 26240   003D4C  0012               	return		;indir
 26241   003D4E                     u16669:
 26242   003D4E  0100               	movlb	0	; () banked
 26243   003D50  6F7F               	movwf	(SD_SendCmd@response+2)& (0+255),b
 26244                           
 26245                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 26246   003D52  0E97               	movlw	low (_spiMaster+4)
 26247   003D54  6EF6               	movwf	tblptrl,c
 26248   003D56  0EFF               	movlw	high (_spiMaster+4)
 26249   003D58  6EF7               	movwf	tblptrh,c
 26250   003D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26251   003D5A  6AF8               	clrf	tblptru,c
 26252   003D5C                     	endif
 26253   003D5C                     	if	0	;tblptru may be non-zero
 26254   003D5C                     	endif
 26255   003D5C  0009               	tblrd		*+
 26256   003D5E  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26257   003D64  0009               	tblrd		*+
 26258   003D66  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26259   003D6C  D802               	call	u16678
 26260   003D6E  EFC3  F01E         	goto	u16679
 26261   003D72                     u16678:
 26262   003D72  0005               	push	
 26263   003D74  6EFA               	movwf	pclath,c
 26264   003D76  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26265   003D78  6EFD               	movwf	tosl,c
 26266   003D7A  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26267   003D7C  6EFE               	movwf	tosh,c
 26268   003D7E  6AFF               	clrf	tosu,c
 26269   003D80  50FA               	movf	pclath,w,c
 26270   003D82  0EFF               	movlw	255
 26271   003D84  0012               	return		;indir
 26272   003D86                     u16679:
 26273   003D86  0100               	movlb	0	; () banked
 26274   003D88  6F7E               	movwf	(SD_SendCmd@response+1)& (0+255),b
 26275   003D8A                     l1762:
 26276                           
 26277                           ; BSR set to: 0
 26278                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 26279   003D8A  0E97               	movlw	low (_spiMaster+4)
 26280   003D8C  6EF6               	movwf	tblptrl,c
 26281   003D8E  0EFF               	movlw	high (_spiMaster+4)
 26282   003D90  6EF7               	movwf	tblptrh,c
 26283   003D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26284   003D92  6AF8               	clrf	tblptru,c
 26285   003D94                     	endif
 26286   003D94                     	if	0	;tblptru may be non-zero
 26287   003D94                     	endif
 26288   003D94  0009               	tblrd		*+
 26289   003D96  006F FFD4  F070    	movff	tablat,??_SD_SendCmd
 26290   003D9C  0009               	tblrd		*+
 26291   003D9E  006F FFD4  F071    	movff	tablat,??_SD_SendCmd+1
 26292   003DA4  D802               	call	u16688
 26293   003DA6  EFDF  F01E         	goto	u16689
 26294   003DAA                     u16688:
 26295   003DAA  0005               	push	
 26296   003DAC  6EFA               	movwf	pclath,c
 26297   003DAE  5170               	movf	??_SD_SendCmd& (0+255),w,b
 26298   003DB0  6EFD               	movwf	tosl,c
 26299   003DB2  5171               	movf	(??_SD_SendCmd+1)& (0+255),w,b
 26300   003DB4  6EFE               	movwf	tosh,c
 26301   003DB6  6AFF               	clrf	tosu,c
 26302   003DB8  50FA               	movf	pclath,w,c
 26303   003DBA  0EFF               	movlw	255
 26304   003DBC  0012               	return		;indir
 26305   003DBE                     u16689:
 26306   003DBE                     
 26307                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 26308   003DBE  0100               	movlb	0	; () banked
 26309   003DC0  517C               	movf	SD_SendCmd@cmd& (0+255),w,b
 26310   003DC2  0D04               	mullw	4
 26311   003DC4  0E03               	movlw	3
 26312   003DC6  26F3               	addwf	243,f,c
 26313   003DC8  0E00               	movlw	0
 26314   003DCA  22F4               	addwfc	244,f,c
 26315   003DCC  0E43               	movlw	low _sdmmc_cmdtable
 26316   003DCE  24F3               	addwf	243,w,c
 26317   003DD0  6EF6               	movwf	tblptrl,c
 26318   003DD2  0EFF               	movlw	high _sdmmc_cmdtable
 26319   003DD4  20F4               	addwfc	244,w,c
 26320   003DD6  6EF7               	movwf	tblptrh,c
 26321   003DD8                     	if	1	;There are 3 active tblptr bytes
 26322   003DD8  6AF8               	clrf	tblptru,c
 26323   003DDA  0E00               	movlw	low (__mediumconst shr (0+16))
 26324   003DDC  22F8               	addwfc	tblptru,f,c
 26325   003DDE                     	endif
 26326   003DDE  0008               	tblrd		*
 26327   003DE0  50F5               	movf	tablat,w,c
 26328   003DE2  0900               	iorlw	0
 26329   003DE4  A4D8               	btfss	status,2,c
 26330   003DE6  EFF7  F01E         	goto	u16691
 26331   003DEA  EFF9  F01E         	goto	u16690
 26332   003DEE                     u16691:
 26333   003DEE  EFFA  F01E         	goto	l14487
 26334   003DF2                     u16690:
 26335   003DF2                     
 26336                           ; BSR set to: 0
 26337   003DF2  8ABA               	bsf	186,5,c	;volatile
 26338   003DF4                     l14487:
 26339                           
 26340                           ; BSR set to: 0
 26341                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 26342   003DF4  EE20  F07D         	lfsr	2,SD_SendCmd@response
 26343   003DF8  EE00  F06B         	lfsr	0,?_SD_SendCmd
 26344   003DFC  0E04               	movlw	4
 26345   003DFE                     u16701:
 26346   003DFE  006F FF6F FFEB     	movff	plusw2,plusw0
 26347   003E04  06E8               	decf	wreg,f,c
 26348   003E06  E2FB               	bc	u16701
 26349   003E08                     
 26350                           ; BSR set to: 0
 26351   003E08  0012               	return		;funcret
 26352   003E0A                     __end_of_SD_SendCmd:
 26353                           	callstack 0
 26354                           
 26355 ;; *************** function _memcpy *****************
 26356 ;; Defined at:
 26357 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;  d1              2    0[BANK0 ] PTR void 
 26360 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26361 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26362 ;;  s1              2    2[BANK0 ] PTR const void 
 26363 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 26364 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26365 ;;  n               2    4[BANK0 ] unsigned int 
 26366 ;; Auto vars:     Size  Location     Type
 26367 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 26368 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 26369 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 26370 ;;  d               2    7[BANK0 ] PTR unsigned char 
 26371 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 26372 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 26373 ;;  tmp             1    6[BANK0 ] unsigned char 
 26374 ;; Return value:  Size  Location     Type
 26375 ;;                  2    0[BANK0 ] PTR void 
 26376 ;; Registers used:
 26377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26378 ;; Tracked objects:
 26379 ;;		On entry : 0/0
 26380 ;;		On exit  : 0/0
 26381 ;;		Unchanged: 0/0
 26382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26384 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26386 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26387 ;;Total ram usage:       11 bytes
 26388 ;; Hardware stack levels used: 1
 26389 ;; Hardware stack levels required when called: 5
 26390 ;; This function calls:
 26391 ;;		Nothing
 26392 ;; This function is called by:
 26393 ;;		_can_send
 26394 ;;		_srb_push
 26395 ;;		_srb_pop
 26396 ;;		_SD_SendCmd
 26397 ;;		_srb_peek
 26398 ;;		_build_state_est_data_msg
 26399 ;;		_get_state_est_data
 26400 ;; This function uses a non-reentrant model
 26401 ;;
 26402                           
 26403                           	psect	text92
 26404   009CF6                     __ptext92:
 26405                           	callstack 0
 26406   009CF6                     _memcpy:
 26407                           	callstack 23
 26408   009CF6  C062  F069         	movff	memcpy@s1,memcpy@s
 26409   009CFA  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 26410   009CFE  C060  F067         	movff	memcpy@d1,memcpy@d
 26411   009D02  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 26412   009D06  EF9A  F04E         	goto	l14413
 26413   009D0A                     l14405:
 26414                           
 26415                           ; BSR set to: 0
 26416   009D0A  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 26417   009D10  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 26418   009D16  50DF               	movf	indf2,w,c
 26419   009D18  6F66               	movwf	memcpy@tmp& (0+255),b
 26420   009D1A                     
 26421                           ; BSR set to: 0
 26422   009D1A  4B69               	infsnz	memcpy@s& (0+255),f,b
 26423   009D1C  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 26424   009D1E                     
 26425                           ; BSR set to: 0
 26426   009D1E  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 26427   009D24  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 26428   009D2A  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 26429   009D30                     
 26430                           ; BSR set to: 0
 26431   009D30  4B67               	infsnz	memcpy@d& (0+255),f,b
 26432   009D32  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 26433   009D34                     l14413:
 26434   009D34  0100               	movlb	0	; () banked
 26435   009D36  0764               	decf	memcpy@n& (0+255),f,b
 26436   009D38  A0D8               	btfss	status,0,c
 26437   009D3A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 26438   009D3C  2964               	incf	memcpy@n& (0+255),w,b
 26439   009D3E  E106               	bnz	u16431
 26440   009D40  2965               	incf	(memcpy@n+1)& (0+255),w,b
 26441   009D42  A4D8               	btfss	status,2,c
 26442   009D44  EFA6  F04E         	goto	u16431
 26443   009D48  EFA8  F04E         	goto	u16430
 26444   009D4C                     u16431:
 26445   009D4C  EF85  F04E         	goto	l14405
 26446   009D50                     u16430:
 26447   009D50                     
 26448                           ; BSR set to: 0
 26449   009D50  0012               	return		;funcret
 26450   009D52                     __end_of_memcpy:
 26451                           	callstack 0
 26452                           
 26453 ;; *************** function _SPI1_ExchangeByte *****************
 26454 ;; Defined at:
 26455 ;;		line 101 in file "mcc_generated_files/spi1.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;  data            1    wreg     unsigned char 
 26458 ;; Auto vars:     Size  Location     Type
 26459 ;;  data            1    0[BANK0 ] unsigned char 
 26460 ;; Return value:  Size  Location     Type
 26461 ;;                  1    wreg      unsigned char 
 26462 ;; Registers used:
 26463 ;;		wreg, status,2
 26464 ;; Tracked objects:
 26465 ;;		On entry : 0/0
 26466 ;;		On exit  : 0/0
 26467 ;;		Unchanged: 0/0
 26468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26473 ;;Total ram usage:        1 bytes
 26474 ;; Hardware stack levels used: 1
 26475 ;; Hardware stack levels required when called: 5
 26476 ;; This function calls:
 26477 ;;		Nothing
 26478 ;; This function is called by:
 26479 ;;		_SPI1_WriteBlock
 26480 ;;		_SPI1_ReadBlock
 26481 ;;		_SD_SendCmd
 26482 ;;		_SD_SPI_AsyncWriteTasks
 26483 ;;		_SD_SPI_AsyncReadTasks
 26484 ;;		_SD_SPI_DelayMilliseconds
 26485 ;;		_SD_SPI_MediaInitialize
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text93
 26490   00A2FE                     __ptext93:
 26491                           	callstack 0
 26492   00A2FE                     _SPI1_ExchangeByte:
 26493                           	callstack 20
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;incstack = 0
 26497                           ;SPI1_ExchangeByte@data stored from wreg
 26498   00A2FE  0100               	movlb	0	; () banked
 26499   00A300  6F60               	movwf	SPI1_ExchangeByte@data& (0+255),b
 26500   00A302                     
 26501                           ;mcc_generated_files/spi1.c: 101: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 102: {;mcc_generated_files/spi1.c: 103:     SPI1TCNTL = 1;
 26502   00A302  0E01               	movlw	1
 26503   00A304  013D               	movlb	61	; () banked
 26504   00A306  6F12               	movwf	18,b	;volatile
 26505   00A308                     
 26506                           ; BSR set to: 61
 26507                           ;mcc_generated_files/spi1.c: 104:     SPI1TXB = data;
 26508   00A308  0060  F183  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 26509   00A30E                     l1913:
 26510   00A30E  0139               	movlb	57	; () banked
 26511   00A310  A9A2               	btfss	162,4,b	;volatile
 26512   00A312  EF8D  F051         	goto	u16441
 26513   00A316  EF8F  F051         	goto	u16440
 26514   00A31A                     u16441:
 26515   00A31A  EF87  F051         	goto	l1913
 26516   00A31E                     u16440:
 26517   00A31E                     
 26518                           ; BSR set to: 57
 26519                           ;mcc_generated_files/spi1.c: 106:     return SPI1RXB;
 26520   00A31E  013D               	movlb	61	; () banked
 26521   00A320  5110               	movf	16,w,b	;volatile
 26522   00A322                     
 26523                           ; BSR set to: 61
 26524   00A322  0012               	return		;funcret
 26525   00A324                     __end_of_SPI1_ExchangeByte:
 26526                           	callstack 0
 26527                           
 26528 ;; *************** function _SDFAST_open *****************
 26529 ;; Defined at:
 26530 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;		None
 26533 ;; Auto vars:     Size  Location     Type
 26534 ;;		None
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1    wreg      _Bool 
 26537 ;; Registers used:
 26538 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26539 ;; Tracked objects:
 26540 ;;		On entry : 0/0
 26541 ;;		On exit  : 0/0
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26548 ;;Total ram usage:        0 bytes
 26549 ;; Hardware stack levels used: 1
 26550 ;; Hardware stack levels required when called: 6
 26551 ;; This function calls:
 26552 ;;		_SPI1_Open
 26553 ;; This function is called by:
 26554 ;;		_spi_master_open
 26555 ;;		_SD_SPI_SectorWrite
 26556 ;;		_SD_SPI_SectorRead
 26557 ;;		_SD_SPI_MediaInitialize
 26558 ;; This function uses a non-reentrant model
 26559 ;;
 26560                           
 26561                           	psect	text94
 26562   00A4D6                     __ptext94:
 26563                           	callstack 0
 26564   00A4D6                     _SDFAST_open:
 26565                           	callstack 20
 26566   00A4D6                     
 26567                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 26568   00A4D6  0E00               	movlw	0
 26569   00A4D8  ECA2  F044         	call	_SPI1_Open
 26570   00A4DC  0012               	return		;funcret
 26571   00A4DE                     __end_of_SDFAST_open:
 26572                           	callstack 0
 26573                           
 26574 ;; *************** function _SDSLOW_open *****************
 26575 ;; Defined at:
 26576 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;		None
 26579 ;; Auto vars:     Size  Location     Type
 26580 ;;		None
 26581 ;; Return value:  Size  Location     Type
 26582 ;;                  1    wreg      _Bool 
 26583 ;; Registers used:
 26584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26585 ;; Tracked objects:
 26586 ;;		On entry : 0/0
 26587 ;;		On exit  : 0/0
 26588 ;;		Unchanged: 0/0
 26589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26594 ;;Total ram usage:        0 bytes
 26595 ;; Hardware stack levels used: 1
 26596 ;; Hardware stack levels required when called: 6
 26597 ;; This function calls:
 26598 ;;		_SPI1_Open
 26599 ;; This function is called by:
 26600 ;;		_spi_master_open
 26601 ;;		_SD_SPI_SectorWrite
 26602 ;;		_SD_SPI_SectorRead
 26603 ;;		_SD_SPI_MediaInitialize
 26604 ;; This function uses a non-reentrant model
 26605 ;;
 26606                           
 26607                           	psect	text95
 26608   00A4DE                     __ptext95:
 26609                           	callstack 0
 26610   00A4DE                     _SDSLOW_open:
 26611                           	callstack 20
 26612   00A4DE                     
 26613                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 26614   00A4DE  0E01               	movlw	1
 26615   00A4E0  ECA2  F044         	call	_SPI1_Open
 26616   00A4E4  0012               	return		;funcret
 26617   00A4E6                     __end_of_SDSLOW_open:
 26618                           	callstack 0
 26619                           
 26620 ;; *************** function _SPI1_Open *****************
 26621 ;; Defined at:
 26622 ;;		line 81 in file "mcc_generated_files/spi1.c"
 26623 ;; Parameters:    Size  Location     Type
 26624 ;;  spi1UniqueCo    1    wreg     enum E358
 26625 ;; Auto vars:     Size  Location     Type
 26626 ;;  spi1UniqueCo    1    1[BANK0 ] enum E358
 26627 ;; Return value:  Size  Location     Type
 26628 ;;                  1    wreg      _Bool 
 26629 ;; Registers used:
 26630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26631 ;; Tracked objects:
 26632 ;;		On entry : 0/0
 26633 ;;		On exit  : 0/0
 26634 ;;		Unchanged: 0/0
 26635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26640 ;;Total ram usage:        2 bytes
 26641 ;; Hardware stack levels used: 1
 26642 ;; Hardware stack levels required when called: 5
 26643 ;; This function calls:
 26644 ;;		Nothing
 26645 ;; This function is called by:
 26646 ;;		_SDFAST_open
 26647 ;;		_SDSLOW_open
 26648 ;; This function uses a non-reentrant model
 26649 ;;
 26650                           
 26651                           	psect	text96
 26652   008944                     __ptext96:
 26653                           	callstack 0
 26654   008944                     _SPI1_Open:
 26655                           	callstack 20
 26656                           
 26657                           ;incstack = 0
 26658                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 26659   008944  0100               	movlb	0	; () banked
 26660   008946  6F61               	movwf	SPI1_Open@spi1UniqueConfiguration& (0+255),b
 26661   008948                     
 26662                           ;mcc_generated_files/spi1.c: 81: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 82: {;mcc_generated_files/spi1.c: 83:     if(!SPI1CON0bits.EN
      +                          )
 26663   008948  013D               	movlb	61	; () banked
 26664   00894A  BF14               	btfsc	20,7,b	;volatile
 26665   00894C  EFAA  F044         	goto	u16451
 26666   008950  EFAC  F044         	goto	u16450
 26667   008954                     u16451:
 26668   008954  EF17  F045         	goto	l14429
 26669   008958                     u16450:
 26670   008958                     
 26671                           ; BSR set to: 61
 26672                           ;mcc_generated_files/spi1.c: 84:     {;mcc_generated_files/spi1.c: 85:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
 26673   008958  0100               	movlb	0	; () banked
 26674   00895A  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 26675   00895C  0D05               	mullw	5
 26676   00895E  0EBB               	movlw	low _spi1_configuration
 26677   008960  24F3               	addwf	243,w,c
 26678   008962  6EF6               	movwf	tblptrl,c
 26679   008964  0EFF               	movlw	high _spi1_configuration
 26680   008966  20F4               	addwfc	244,w,c
 26681   008968  6EF7               	movwf	tblptrh,c
 26682   00896A                     	if	1	;There are 3 active tblptr bytes
 26683   00896A  6AF8               	clrf	tblptru,c
 26684   00896C  0E00               	movlw	low (__mediumconst shr (0+16))
 26685   00896E  22F8               	addwfc	tblptru,f,c
 26686   008970                     	endif
 26687   008970  0008               	tblrd		*
 26688   008972  006F FFD7 FD14     	movff	tablat,15636	;volatile
 26689                           
 26690                           ;mcc_generated_files/spi1.c: 86:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 26691   008978  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 26692   00897A  0D05               	mullw	5
 26693   00897C  0E01               	movlw	1
 26694   00897E  26F3               	addwf	243,f,c
 26695   008980  0E00               	movlw	0
 26696   008982  22F4               	addwfc	244,f,c
 26697   008984  0EBB               	movlw	low _spi1_configuration
 26698   008986  24F3               	addwf	243,w,c
 26699   008988  6EF6               	movwf	tblptrl,c
 26700   00898A  0EFF               	movlw	high _spi1_configuration
 26701   00898C  20F4               	addwfc	244,w,c
 26702   00898E  6EF7               	movwf	tblptrh,c
 26703   008990                     	if	1	;There are 3 active tblptr bytes
 26704   008990  6AF8               	clrf	tblptru,c
 26705   008992  0E00               	movlw	low (__mediumconst shr (0+16))
 26706   008994  22F8               	addwfc	tblptru,f,c
 26707   008996                     	endif
 26708   008996  0008               	tblrd		*
 26709   008998  006F FFD7 FD15     	movff	tablat,15637	;volatile
 26710                           
 26711                           ;mcc_generated_files/spi1.c: 87:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
 26712   00899E  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 26713   0089A0  0D05               	mullw	5
 26714   0089A2  0E02               	movlw	2
 26715   0089A4  26F3               	addwf	243,f,c
 26716   0089A6  0E00               	movlw	0
 26717   0089A8  22F4               	addwfc	244,f,c
 26718   0089AA  0EBB               	movlw	low _spi1_configuration
 26719   0089AC  24F3               	addwf	243,w,c
 26720   0089AE  6EF6               	movwf	tblptrl,c
 26721   0089B0  0EFF               	movlw	high _spi1_configuration
 26722   0089B2  20F4               	addwfc	244,w,c
 26723   0089B4  6EF7               	movwf	tblptrh,c
 26724   0089B6                     	if	1	;There are 3 active tblptr bytes
 26725   0089B6  6AF8               	clrf	tblptru,c
 26726   0089B8  0E00               	movlw	low (__mediumconst shr (0+16))
 26727   0089BA  22F8               	addwfc	tblptru,f,c
 26728   0089BC                     	endif
 26729   0089BC  0008               	tblrd		*
 26730   0089BE  50F5               	movf	tablat,w,c
 26731   0089C0  0903               	iorlw	3
 26732   0089C2  013D               	movlb	61	; () banked
 26733   0089C4  6F16               	movwf	22,b	;volatile
 26734                           
 26735                           ;mcc_generated_files/spi1.c: 88:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
 26736   0089C6  0100               	movlb	0	; () banked
 26737   0089C8  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 26738   0089CA  0D05               	mullw	5
 26739   0089CC  0E03               	movlw	3
 26740   0089CE  26F3               	addwf	243,f,c
 26741   0089D0  0E00               	movlw	0
 26742   0089D2  22F4               	addwfc	244,f,c
 26743   0089D4  0EBB               	movlw	low _spi1_configuration
 26744   0089D6  24F3               	addwf	243,w,c
 26745   0089D8  6EF6               	movwf	tblptrl,c
 26746   0089DA  0EFF               	movlw	high _spi1_configuration
 26747   0089DC  20F4               	addwfc	244,w,c
 26748   0089DE  6EF7               	movwf	tblptrh,c
 26749   0089E0                     	if	1	;There are 3 active tblptr bytes
 26750   0089E0  6AF8               	clrf	tblptru,c
 26751   0089E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26752   0089E4  22F8               	addwfc	tblptru,f,c
 26753   0089E6                     	endif
 26754   0089E6  0008               	tblrd		*
 26755   0089E8  006F FFD7 FD19     	movff	tablat,15641	;volatile
 26756                           
 26757                           ;mcc_generated_files/spi1.c: 89:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 26758   0089EE  5161               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 26759   0089F0  0D05               	mullw	5
 26760   0089F2  0E04               	movlw	4
 26761   0089F4  26F3               	addwf	243,f,c
 26762   0089F6  0E00               	movlw	0
 26763   0089F8  22F4               	addwfc	244,f,c
 26764   0089FA  0EBB               	movlw	low _spi1_configuration
 26765   0089FC  24F3               	addwf	243,w,c
 26766   0089FE  6EF6               	movwf	tblptrl,c
 26767   008A00  0EFF               	movlw	high _spi1_configuration
 26768   008A02  20F4               	addwfc	244,w,c
 26769   008A04  6EF7               	movwf	tblptrh,c
 26770   008A06                     	if	1	;There are 3 active tblptr bytes
 26771   008A06  6AF8               	clrf	tblptru,c
 26772   008A08  0E00               	movlw	low (__mediumconst shr (0+16))
 26773   008A0A  22F8               	addwfc	tblptru,f,c
 26774   008A0C                     	endif
 26775   008A0C  0008               	tblrd		*
 26776   008A0E  006F FFD4  F060    	movff	tablat,??_SPI1_Open
 26777   008A14  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 26778   008A16  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 26779   008A18  4760               	rlncf	??_SPI1_Open& (0+255),f,b
 26780   008A1A  50C4               	movf	196,w,c	;volatile
 26781   008A1C  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 26782   008A1E  0BF7               	andlw	-9
 26783   008A20  1960               	xorwf	??_SPI1_Open& (0+255),w,b
 26784   008A22  6EC4               	movwf	196,c	;volatile
 26785   008A24                     
 26786                           ; BSR set to: 0
 26787                           ;mcc_generated_files/spi1.c: 90:         SPI1CON0bits.EN = 1;
 26788   008A24  013D               	movlb	61	; () banked
 26789   008A26  8F14               	bsf	20,7,b	;volatile
 26790   008A28                     
 26791                           ; BSR set to: 61
 26792                           ;mcc_generated_files/spi1.c: 91:         return 1;
 26793   008A28  0E01               	movlw	1
 26794   008A2A  EF18  F045         	goto	l1907
 26795   008A2E                     l14429:
 26796                           
 26797                           ; BSR set to: 61
 26798                           ;mcc_generated_files/spi1.c: 93:     return 0;
 26799   008A2E  0E00               	movlw	0
 26800   008A30                     l1907:
 26801                           
 26802                           ; BSR set to: 61
 26803   008A30  0012               	return		;funcret
 26804   008A32                     __end_of_SPI1_Open:
 26805                           	callstack 0
 26806                           
 26807 ;; *************** function _mem_cmp *****************
 26808 ;; Defined at:
 26809 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 26810 ;; Parameters:    Size  Location     Type
 26811 ;;  dst             2    0[BANK0 ] PTR const void 
 26812 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 26813 ;;  src             2    2[BANK0 ] PTR const void 
 26814 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 26815 ;;		 -> STR_4(4), 
 26816 ;;  cnt             2    4[BANK0 ] unsigned int 
 26817 ;; Auto vars:     Size  Location     Type
 26818 ;;  r               2   12[BANK0 ] int 
 26819 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 26820 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), STR_6(6), 
 26821 ;;		 -> STR_4(4), 
 26822 ;;  d               2    8[BANK0 ] PTR const unsigned char 
 26823 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 26824 ;; Return value:  Size  Location     Type
 26825 ;;                  2    0[BANK0 ] int 
 26826 ;; Registers used:
 26827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26828 ;; Tracked objects:
 26829 ;;		On entry : 0/0
 26830 ;;		On exit  : 0/0
 26831 ;;		Unchanged: 0/0
 26832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26833 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26834 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26836 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26837 ;;Total ram usage:       14 bytes
 26838 ;; Hardware stack levels used: 1
 26839 ;; Hardware stack levels required when called: 5
 26840 ;; This function calls:
 26841 ;;		Nothing
 26842 ;; This function is called by:
 26843 ;;		_dir_find
 26844 ;;		_check_fs
 26845 ;; This function uses a non-reentrant model
 26846 ;;
 26847                           
 26848                           	psect	text97
 26849   0092DA                     __ptext97:
 26850                           	callstack 0
 26851   0092DA                     _mem_cmp:
 26852                           	callstack 21
 26853   0092DA                     
 26854                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 26855   0092DA  C060  F068         	movff	mem_cmp@dst,mem_cmp@d
 26856   0092DE  C061  F069         	movff	mem_cmp@dst+1,mem_cmp@d+1
 26857   0092E2  C062  F06A         	movff	mem_cmp@src,mem_cmp@s
 26858   0092E6  C063  F06B         	movff	mem_cmp@src+1,mem_cmp@s+1
 26859   0092EA                     l15579:
 26860                           
 26861                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 26862   0092EA  0060  F1A3  FFD9   	movff	mem_cmp@d,fsr2l
 26863   0092F0  0060  F1A7  FFDA   	movff	mem_cmp@d+1,fsr2h
 26864   0092F6  50DF               	movf	indf2,w,c
 26865   0092F8  0100               	movlb	0	; () banked
 26866   0092FA  6F66               	movwf	??_mem_cmp& (0+255),b
 26867   0092FC  0060  F1AB  FFF6   	movff	mem_cmp@s,tblptrl
 26868   009302  0060  F1AF  FFF7   	movff	mem_cmp@s+1,tblptrh
 26869   009308  0E00               	movlw	low (__mediumconst shr (0+16))
 26870   00930A  6EF8               	movwf	tblptru,c
 26871   00930C  0E0F               	movlw	(high __ramtop+-1)
 26872   00930E  64F7               	cpfsgt	tblptrh,c
 26873   009310  D003               	bra	u18647
 26874   009312  0008               	tblrd		*
 26875   009314  50F5               	movf	tablat,w,c
 26876   009316  D007               	bra	u18640
 26877   009318                     u18647:
 26878   009318  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26879   00931E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26880   009324  50EF               	movf	indf0,w,c
 26881   009326                     u18640:
 26882   009326  0100               	movlb	0	; () banked
 26883   009328  6F67               	movwf	(??_mem_cmp+1)& (0+255),b
 26884   00932A  5167               	movf	(??_mem_cmp+1)& (0+255),w,b
 26885   00932C  5D66               	subwf	??_mem_cmp& (0+255),w,b
 26886   00932E  6F6C               	movwf	mem_cmp@r& (0+255),b
 26887   009330  6B6D               	clrf	(mem_cmp@r+1)& (0+255),b
 26888   009332  A0D8               	btfss	status,0,c
 26889   009334  076D               	decf	(mem_cmp@r+1)& (0+255),f,b
 26890   009336                     
 26891                           ; BSR set to: 0
 26892   009336  4B6A               	infsnz	mem_cmp@s& (0+255),f,b
 26893   009338  2B6B               	incf	(mem_cmp@s+1)& (0+255),f,b
 26894   00933A                     
 26895                           ; BSR set to: 0
 26896   00933A  4B68               	infsnz	mem_cmp@d& (0+255),f,b
 26897   00933C  2B69               	incf	(mem_cmp@d+1)& (0+255),f,b
 26898   00933E                     
 26899                           ; BSR set to: 0
 26900                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 26901   00933E  0764               	decf	mem_cmp@cnt& (0+255),f,b
 26902   009340  A0D8               	btfss	status,0,c
 26903   009342  0765               	decf	(mem_cmp@cnt+1)& (0+255),f,b
 26904   009344  5164               	movf	mem_cmp@cnt& (0+255),w,b
 26905   009346  1165               	iorwf	(mem_cmp@cnt+1)& (0+255),w,b
 26906   009348  B4D8               	btfsc	status,2,c
 26907   00934A  EFA9  F049         	goto	u18651
 26908   00934E  EFAB  F049         	goto	u18650
 26909   009352                     u18651:
 26910   009352  EFB4  F049         	goto	l878
 26911   009356                     u18650:
 26912   009356                     
 26913                           ; BSR set to: 0
 26914   009356  516C               	movf	mem_cmp@r& (0+255),w,b
 26915   009358  116D               	iorwf	(mem_cmp@r+1)& (0+255),w,b
 26916   00935A  B4D8               	btfsc	status,2,c
 26917   00935C  EFB2  F049         	goto	u18661
 26918   009360  EFB4  F049         	goto	u18660
 26919   009364                     u18661:
 26920   009364  EF75  F049         	goto	l15579
 26921   009368                     u18660:
 26922   009368                     l878:
 26923                           
 26924                           ; BSR set to: 0
 26925                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 26926   009368  C06C  F060         	movff	mem_cmp@r,?_mem_cmp
 26927   00936C  C06D  F061         	movff	mem_cmp@r+1,?_mem_cmp+1
 26928   009370                     
 26929                           ; BSR set to: 0
 26930   009370  0012               	return		;funcret
 26931   009372                     __end_of_mem_cmp:
 26932                           	callstack 0
 26933                           
 26934 ;; *************** function _ld_word *****************
 26935 ;; Defined at:
 26936 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 26937 ;; Parameters:    Size  Location     Type
 26938 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 26939 ;;		 -> FatFs(563), FatFs$win(512), NULL(0), 
 26940 ;; Auto vars:     Size  Location     Type
 26941 ;;  rv              2    5[BANK0 ] unsigned short 
 26942 ;; Return value:  Size  Location     Type
 26943 ;;                  2    0[BANK0 ] unsigned short 
 26944 ;; Registers used:
 26945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26946 ;; Tracked objects:
 26947 ;;		On entry : 0/0
 26948 ;;		On exit  : 0/0
 26949 ;;		Unchanged: 0/0
 26950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26953 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26954 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26955 ;;Total ram usage:        7 bytes
 26956 ;; Hardware stack levels used: 1
 26957 ;; Hardware stack levels required when called: 5
 26958 ;; This function calls:
 26959 ;;		Nothing
 26960 ;; This function is called by:
 26961 ;;		_get_fat
 26962 ;;		_ld_clust
 26963 ;;		_check_fs
 26964 ;;		_find_volume
 26965 ;; This function uses a non-reentrant model
 26966 ;;
 26967                           
 26968                           	psect	text98
 26969   00A01C                     __ptext98:
 26970                           	callstack 0
 26971   00A01C                     _ld_word:
 26972                           	callstack 21
 26973   00A01C                     
 26974                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 26975   00A01C  0100               	movlb	0	; () banked
 26976   00A01E  EE20 F001          	lfsr	2,1
 26977   00A022  5160               	movf	ld_word@ptr& (0+255),w,b
 26978   00A024  26D9               	addwf	fsr2l,f,c
 26979   00A026  5161               	movf	(ld_word@ptr+1)& (0+255),w,b
 26980   00A028  22DA               	addwfc	fsr2h,f,c
 26981   00A02A  50DF               	movf	indf2,w,c
 26982   00A02C  6F62               	movwf	??_ld_word& (0+255),b
 26983   00A02E  5162               	movf	??_ld_word& (0+255),w,b
 26984   00A030  6F65               	movwf	ld_word@rv& (0+255),b
 26985   00A032  6B66               	clrf	(ld_word@rv+1)& (0+255),b
 26986                           
 26987                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 26988   00A034  0060  F183  FFD9   	movff	ld_word@ptr,fsr2l
 26989   00A03A  0060  F187  FFDA   	movff	ld_word@ptr+1,fsr2h
 26990   00A040  50DF               	movf	indf2,w,c
 26991   00A042  6F62               	movwf	??_ld_word& (0+255),b
 26992   00A044  5165               	movf	ld_word@rv& (0+255),w,b
 26993   00A046  6F63               	movwf	(??_ld_word+1)& (0+255),b
 26994   00A048  5162               	movf	??_ld_word& (0+255),w,b
 26995   00A04A  6F65               	movwf	ld_word@rv& (0+255),b
 26996   00A04C  C063  F066         	movff	??_ld_word+1,ld_word@rv+1
 26997   00A050                     
 26998                           ; BSR set to: 0
 26999                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 27000   00A050  C065  F060         	movff	ld_word@rv,?_ld_word
 27001   00A054  C066  F061         	movff	ld_word@rv+1,?_ld_word+1
 27002   00A058                     
 27003                           ; BSR set to: 0
 27004   00A058  0012               	return		;funcret
 27005   00A05A                     __end_of_ld_word:
 27006                           	callstack 0
 27007                           
 27008 ;; *************** function ___lldiv *****************
 27009 ;; Defined at:
 27010 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 27011 ;; Parameters:    Size  Location     Type
 27012 ;;  dividend        4    0[BANK0 ] unsigned long 
 27013 ;;  divisor         4    4[BANK0 ] unsigned long 
 27014 ;; Auto vars:     Size  Location     Type
 27015 ;;  quotient        4    8[BANK0 ] unsigned long 
 27016 ;;  counter         1   12[BANK0 ] unsigned char 
 27017 ;; Return value:  Size  Location     Type
 27018 ;;                  4    0[BANK0 ] unsigned long 
 27019 ;; Registers used:
 27020 ;;		wreg, status,2, status,0
 27021 ;; Tracked objects:
 27022 ;;		On entry : 0/0
 27023 ;;		On exit  : 0/0
 27024 ;;		Unchanged: 0/0
 27025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27027 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27029 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27030 ;;Total ram usage:       13 bytes
 27031 ;; Hardware stack levels used: 1
 27032 ;; Hardware stack levels required when called: 5
 27033 ;; This function calls:
 27034 ;;		Nothing
 27035 ;; This function is called by:
 27036 ;;		_find_volume
 27037 ;;		_vfpfcnvrt
 27038 ;;		_f_printf
 27039 ;; This function uses a non-reentrant model
 27040 ;;
 27041                           
 27042                           	psect	text99
 27043   009234                     __ptext99:
 27044                           	callstack 0
 27045   009234                     ___lldiv:
 27046                           	callstack 21
 27047   009234  0E00               	movlw	0
 27048   009236  0100               	movlb	0	; () banked
 27049   009238  6F68               	movwf	___lldiv@quotient& (0+255),b
 27050   00923A  0E00               	movlw	0
 27051   00923C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 27052   00923E  0E00               	movlw	0
 27053   009240  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 27054   009242  0E00               	movlw	0
 27055   009244  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 27056   009246                     
 27057                           ; BSR set to: 0
 27058   009246  5164               	movf	___lldiv@divisor& (0+255),w,b
 27059   009248  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 27060   00924A  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 27061   00924C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 27062   00924E  B4D8               	btfsc	status,2,c
 27063   009250  EF2C  F049         	goto	u18991
 27064   009254  EF2E  F049         	goto	u18990
 27065   009258                     u18991:
 27066   009258  EF64  F049         	goto	l2300
 27067   00925C                     u18990:
 27068   00925C                     
 27069                           ; BSR set to: 0
 27070   00925C  0E01               	movlw	1
 27071   00925E  6F6C               	movwf	___lldiv@counter& (0+255),b
 27072   009260  EF38  F049         	goto	l15803
 27073   009264                     l15801:
 27074                           
 27075                           ; BSR set to: 0
 27076   009264  90D8               	bcf	status,0,c
 27077   009266  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 27078   009268  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 27079   00926A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 27080   00926C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 27081   00926E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 27082   009270                     l15803:
 27083                           
 27084                           ; BSR set to: 0
 27085   009270  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 27086   009272  EF3D  F049         	goto	u19001
 27087   009276  EF3F  F049         	goto	u19000
 27088   00927A                     u19001:
 27089   00927A  EF32  F049         	goto	l15801
 27090   00927E                     u19000:
 27091   00927E                     l15805:
 27092                           
 27093                           ; BSR set to: 0
 27094   00927E  90D8               	bcf	status,0,c
 27095   009280  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 27096   009282  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 27097   009284  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 27098   009286  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 27099   009288                     
 27100                           ; BSR set to: 0
 27101   009288  5164               	movf	___lldiv@divisor& (0+255),w,b
 27102   00928A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 27103   00928C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27104   00928E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 27105   009290  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27106   009292  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 27107   009294  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27108   009296  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 27109   009298  A0D8               	btfss	status,0,c
 27110   00929A  EF51  F049         	goto	u19011
 27111   00929E  EF53  F049         	goto	u19010
 27112   0092A2                     u19011:
 27113   0092A2  EF5C  F049         	goto	l15813
 27114   0092A6                     u19010:
 27115   0092A6                     
 27116                           ; BSR set to: 0
 27117   0092A6  5164               	movf	___lldiv@divisor& (0+255),w,b
 27118   0092A8  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 27119   0092AA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 27120   0092AC  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 27121   0092AE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 27122   0092B0  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 27123   0092B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 27124   0092B4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 27125   0092B6                     
 27126                           ; BSR set to: 0
 27127   0092B6  8168               	bsf	___lldiv@quotient& (0+255),0,b
 27128   0092B8                     l15813:
 27129                           
 27130                           ; BSR set to: 0
 27131   0092B8  90D8               	bcf	status,0,c
 27132   0092BA  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 27133   0092BC  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 27134   0092BE  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 27135   0092C0  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 27136   0092C2                     
 27137                           ; BSR set to: 0
 27138   0092C2  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 27139   0092C4  EF3F  F049         	goto	l15805
 27140   0092C8                     l2300:
 27141                           
 27142                           ; BSR set to: 0
 27143   0092C8  C068  F060         	movff	___lldiv@quotient,?___lldiv
 27144   0092CC  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 27145   0092D0  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 27146   0092D4  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 27147   0092D8                     
 27148                           ; BSR set to: 0
 27149   0092D8  0012               	return		;funcret
 27150   0092DA                     __end_of___lldiv:
 27151                           	callstack 0
 27152                           
 27153 ;; *************** function _data_ready *****************
 27154 ;; Defined at:
 27155 ;;		line 95 in file "fxls8974cf.c"
 27156 ;; Parameters:    Size  Location     Type
 27157 ;;		None
 27158 ;; Auto vars:     Size  Location     Type
 27159 ;;  status          1   14[BANK0 ] unsigned char 
 27160 ;; Return value:  Size  Location     Type
 27161 ;;                  2   12[BANK0 ] int 
 27162 ;; Registers used:
 27163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27164 ;; Tracked objects:
 27165 ;;		On entry : 0/0
 27166 ;;		On exit  : 0/0
 27167 ;;		Unchanged: 0/0
 27168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27172 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27173 ;;Total ram usage:        3 bytes
 27174 ;; Hardware stack levels used: 1
 27175 ;; Hardware stack levels required when called: 7
 27176 ;; This function calls:
 27177 ;;		_i2c_read_reg8
 27178 ;; This function is called by:
 27179 ;;		_main
 27180 ;; This function uses a non-reentrant model
 27181 ;;
 27182                           
 27183                           	psect	text100
 27184   00A286                     __ptext100:
 27185                           	callstack 0
 27186   00A286                     _data_ready:
 27187                           	callstack 23
 27188   00A286                     
 27189                           ;fxls8974cf.c: 97:     uint8_t status;;fxls8974cf.c: 98:     i2c_read_reg8(0x31, 0x00, &
      +                          status);
 27190   00A286  0E00               	movlw	0
 27191   00A288  0100               	movlb	0	; () banked
 27192   00A28A  6F66               	movwf	i2c_read_reg8@reg& (0+255),b
 27193   00A28C  0E6E               	movlw	low data_ready@status
 27194   00A28E  6F67               	movwf	i2c_read_reg8@value& (0+255),b
 27195   00A290  6B68               	clrf	(i2c_read_reg8@value+1)& (0+255),b
 27196   00A292  0E31               	movlw	49
 27197   00A294  EC85  F04D         	call	_i2c_read_reg8
 27198   00A298                     
 27199                           ;fxls8974cf.c: 107:     return (status & 0x80) ? 1 : 0;
 27200   00A298  0100               	movlb	0	; () banked
 27201   00A29A  BF6E               	btfsc	data_ready@status& (0+255),7,b
 27202   00A29C  EF52  F051         	goto	u22291
 27203   00A2A0  EF55  F051         	goto	u22290
 27204   00A2A4                     u22291:
 27205   00A2A4  0E01               	movlw	1
 27206   00A2A6  EF56  F051         	goto	u22300
 27207   00A2AA                     u22290:
 27208   00A2AA  0E00               	movlw	0
 27209   00A2AC                     u22300:
 27210   00A2AC  6F6C               	movwf	?_data_ready& (0+255),b
 27211   00A2AE  6B6D               	clrf	(?_data_ready+1)& (0+255),b
 27212   00A2B0                     
 27213                           ; BSR set to: 0
 27214   00A2B0  0012               	return		;funcret
 27215   00A2B2                     __end_of_data_ready:
 27216                           	callstack 0
 27217                           
 27218 ;; *************** function _i2c_read_reg8 *****************
 27219 ;; Defined at:
 27220 ;;		line 117 in file "rocketlib/pic18f26k83/i2c.c"
 27221 ;; Parameters:    Size  Location     Type
 27222 ;;  address         1    wreg     unsigned char 
 27223 ;;  reg             1    6[BANK0 ] unsigned char 
 27224 ;;  value           2    7[BANK0 ] PTR unsigned char 
 27225 ;;		 -> fxls_read_accel_data@status(1), fxls_read_accel_data@z_msb(1), fxls_read_accel_data@z_lsb(1), fxls_read_accel_da
      +ta@y_msb(1), 
 27226 ;;		 -> fxls_read_accel_data@y_lsb(1), fxls_read_accel_data@x_msb(1), fxls_read_accel_data@x_lsb(1), data_ready@status(1
      +), 
 27227 ;;		 -> fxls_get_whoami@res(1), fxls_get_prod_rev@res(1), fxls_init@sys_mode(1), main@rev(1), 
 27228 ;;		 -> main@who(1), main@status(1), main@buf_status(1), main@sys_mode(1), 
 27229 ;; Auto vars:     Size  Location     Type
 27230 ;;  address         1    9[BANK0 ] unsigned char 
 27231 ;;  data            1   11[BANK0 ] unsigned char 
 27232 ;;  success         1   10[BANK0 ] _Bool 
 27233 ;; Return value:  Size  Location     Type
 27234 ;;                  1    wreg      _Bool 
 27235 ;; Registers used:
 27236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27237 ;; Tracked objects:
 27238 ;;		On entry : 0/0
 27239 ;;		On exit  : 0/0
 27240 ;;		Unchanged: 0/0
 27241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27242 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27243 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27245 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27246 ;;Total ram usage:        6 bytes
 27247 ;; Hardware stack levels used: 1
 27248 ;; Hardware stack levels required when called: 6
 27249 ;; This function calls:
 27250 ;;		_i2c_read
 27251 ;;		_i2c_write
 27252 ;; This function is called by:
 27253 ;;		_main
 27254 ;;		_fxls_init
 27255 ;;		_fxls_get_prod_rev
 27256 ;;		_fxls_get_whoami
 27257 ;;		_data_ready
 27258 ;;		_fxls_read_accel_data
 27259 ;; This function uses a non-reentrant model
 27260 ;;
 27261                           
 27262                           	psect	text101
 27263   009B0A                     __ptext101:
 27264                           	callstack 0
 27265   009B0A                     _i2c_read_reg8:
 27266                           	callstack 24
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;incstack = 0
 27270                           ;i2c_read_reg8@address stored from wreg
 27271   009B0A  0100               	movlb	0	; () banked
 27272   009B0C  6F69               	movwf	i2c_read_reg8@address& (0+255),b
 27273   009B0E                     
 27274                           ;rocketlib/pic18f26k83/i2c.c: 118:     _Bool success = i2c_write(address, &reg, 1);
 27275   009B0E  0E66               	movlw	low i2c_read_reg8@reg
 27276   009B10  0100               	movlb	0	; () banked
 27277   009B12  6F60               	movwf	i2c_write@data& (0+255),b
 27278   009B14  0E01               	movlw	1
 27279   009B16  6F61               	movwf	i2c_write@len& (0+255),b
 27280   009B18  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 27281   009B1A  EC9F  F042         	call	_i2c_write
 27282   009B1E  0100               	movlb	0	; () banked
 27283   009B20  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 27284   009B22                     
 27285                           ; BSR set to: 0
 27286                           ;rocketlib/pic18f26k83/i2c.c: 119:     if (!success) {
 27287   009B22  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 27288   009B24  A4D8               	btfss	status,2,c
 27289   009B26  EF97  F04D         	goto	u21701
 27290   009B2A  EF99  F04D         	goto	u21700
 27291   009B2E                     u21701:
 27292   009B2E  EF9B  F04D         	goto	l17415
 27293   009B32                     u21700:
 27294   009B32  EFB7  F04D         	goto	l2032
 27295   009B36                     l17415:
 27296                           
 27297                           ; BSR set to: 0
 27298                           ;rocketlib/pic18f26k83/i2c.c: 123:     uint8_t data;;rocketlib/pic18f26k83/i2c.c: 124:  
      +                             success = i2c_read(address, &data, 1);
 27299   009B36  0E6B               	movlw	low i2c_read_reg8@data
 27300   009B38  6F60               	movwf	i2c_read@data& (0+255),b
 27301   009B3A  0E01               	movlw	1
 27302   009B3C  6F61               	movwf	i2c_read@len& (0+255),b
 27303   009B3E  5169               	movf	i2c_read_reg8@address& (0+255),w,b
 27304   009B40  EC21  F043         	call	_i2c_read
 27305   009B44  0100               	movlb	0	; () banked
 27306   009B46  6F6A               	movwf	i2c_read_reg8@success& (0+255),b
 27307   009B48                     
 27308                           ; BSR set to: 0
 27309                           ;rocketlib/pic18f26k83/i2c.c: 125:     if (!success) {
 27310   009B48  516A               	movf	i2c_read_reg8@success& (0+255),w,b
 27311   009B4A  A4D8               	btfss	status,2,c
 27312   009B4C  EFAA  F04D         	goto	u21711
 27313   009B50  EFAC  F04D         	goto	u21710
 27314   009B54                     u21711:
 27315   009B54  EFAE  F04D         	goto	l17421
 27316   009B58                     u21710:
 27317   009B58  EFB7  F04D         	goto	l2032
 27318   009B5C                     l17421:
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;rocketlib/pic18f26k83/i2c.c: 128:     *value = data;
 27322   009B5C  0060  F19F  FFD9   	movff	i2c_read_reg8@value,fsr2l
 27323   009B62  0060  F1A3  FFDA   	movff	i2c_read_reg8@value+1,fsr2h
 27324   009B68  0060  F1AF  FFDF   	movff	i2c_read_reg8@data,indf2
 27325   009B6E                     l2032:
 27326                           
 27327                           ; BSR set to: 0
 27328   009B6E  0012               	return		;funcret
 27329   009B70                     __end_of_i2c_read_reg8:
 27330                           	callstack 0
 27331                           
 27332 ;; *************** function _i2c_write *****************
 27333 ;; Defined at:
 27334 ;;		line 28 in file "rocketlib/pic18f26k83/i2c.c"
 27335 ;; Parameters:    Size  Location     Type
 27336 ;;  address         1    wreg     unsigned char 
 27337 ;;  data            1    0[BANK0 ] PTR const unsigned char 
 27338 ;;		 -> read_flow_sensor_data@stop_cmd(2), read_flow_sensor_data@start_cmd(2), i2c_read_reg16@reg(1), i2c_read_reg8@reg(
      +1), 
 27339 ;;		 -> i2c_write_reg16@data(3), i2c_write_reg8@data(2), 
 27340 ;;  len             1    1[BANK0 ] unsigned char 
 27341 ;; Auto vars:     Size  Location     Type
 27342 ;;  address         1    3[BANK0 ] unsigned char 
 27343 ;;  timeout         2    4[BANK0 ] unsigned int 
 27344 ;; Return value:  Size  Location     Type
 27345 ;;                  1    wreg      _Bool 
 27346 ;; Registers used:
 27347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27348 ;; Tracked objects:
 27349 ;;		On entry : 0/0
 27350 ;;		On exit  : 0/0
 27351 ;;		Unchanged: 0/0
 27352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27354 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27356 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27357 ;;Total ram usage:        6 bytes
 27358 ;; Hardware stack levels used: 1
 27359 ;; Hardware stack levels required when called: 5
 27360 ;; This function calls:
 27361 ;;		Nothing
 27362 ;; This function is called by:
 27363 ;;		_i2c_write_reg8
 27364 ;;		_i2c_read_reg8
 27365 ;;		_i2c_write_data
 27366 ;;		_i2c_write_reg16
 27367 ;;		_i2c_read_reg16
 27368 ;;		_read_flow_sensor_data
 27369 ;; This function uses a non-reentrant model
 27370 ;;
 27371                           
 27372                           	psect	text102
 27373   00853E                     __ptext102:
 27374                           	callstack 0
 27375   00853E                     _i2c_write:
 27376                           	callstack 24
 27377                           
 27378                           ; BSR set to: 0
 27379                           ;incstack = 0
 27380                           ;i2c_write@address stored from wreg
 27381   00853E  0100               	movlb	0	; () banked
 27382   008540  6F63               	movwf	i2c_write@address& (0+255),b
 27383   008542                     
 27384                           ;rocketlib/pic18f26k83/i2c.c: 29:     I2C1ADB1 = (uint8_t)(address << 1);
 27385   008542  0100               	movlb	0	; () banked
 27386   008544  5163               	movf	i2c_write@address& (0+255),w,b
 27387   008546  2563               	addwf	i2c_write@address& (0+255),w,b
 27388   008548  013D               	movlb	61	; () banked
 27389   00854A  6F6E               	movwf	110,b	;volatile
 27390   00854C                     
 27391                           ; BSR set to: 61
 27392                           ;rocketlib/pic18f26k83/i2c.c: 30:     I2C1CNT = len;
 27393   00854C  0060  F187  FD6C   	movff	i2c_write@len,15724	;volatile
 27394   008552                     
 27395                           ; BSR set to: 61
 27396                           ;rocketlib/pic18f26k83/i2c.c: 31:     I2C1PIRbits.PCIF = 0;
 27397   008552  9579               	bcf	121,2,b	;volatile
 27398   008554                     
 27399                           ; BSR set to: 61
 27400                           ;rocketlib/pic18f26k83/i2c.c: 32:     I2C1ERRbits.NACKIF = 0;
 27401   008554  9976               	bcf	118,4,b	;volatile
 27402   008556                     
 27403                           ; BSR set to: 61
 27404                           ;rocketlib/pic18f26k83/i2c.c: 33:     I2C1CON0bits.S = 1;
 27405   008556  8B73               	bsf	115,5,b	;volatile
 27406                           
 27407                           ;rocketlib/pic18f26k83/i2c.c: 35:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           36:     while (len--) {
 27408   008558  EFE5  F042         	goto	l16843
 27409   00855C                     l16825:
 27410                           
 27411                           ; BSR set to: 0
 27412                           ;rocketlib/pic18f26k83/i2c.c: 37:         I2C1TXB = *data++;
 27413   00855C  5160               	movf	i2c_write@data& (0+255),w,b
 27414   00855E  6ED9               	movwf	fsr2l,c
 27415   008560  6ADA               	clrf	fsr2h,c
 27416   008562  50DF               	movf	indf2,w,c
 27417   008564  013D               	movlb	61	; () banked
 27418   008566  6F6B               	movwf	107,b	;volatile
 27419   008568                     
 27420                           ; BSR set to: 61
 27421   008568  0100               	movlb	0	; () banked
 27422   00856A  2B60               	incf	i2c_write@data& (0+255),f,b
 27423   00856C                     
 27424                           ; BSR set to: 0
 27425                           ;rocketlib/pic18f26k83/i2c.c: 38:         timeout = 0;
 27426   00856C  0E00               	movlw	0
 27427   00856E  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 27428   008570  0E00               	movlw	0
 27429   008572  6F64               	movwf	i2c_write@timeout& (0+255),b
 27430                           
 27431                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 27432   008574  EFCC  F042         	goto	l16837
 27433   008578                     l16831:
 27434                           
 27435                           ; BSR set to: 61
 27436                           ;rocketlib/pic18f26k83/i2c.c: 40:             if (timeout >= 2000) {
 27437   008578  0ED0               	movlw	208
 27438   00857A  0100               	movlb	0	; () banked
 27439   00857C  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 27440   00857E  0E07               	movlw	7
 27441   008580  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 27442   008582  A0D8               	btfss	status,0,c
 27443   008584  EFC6  F042         	goto	u20691
 27444   008588  EFC8  F042         	goto	u20690
 27445   00858C                     u20691:
 27446   00858C  EFCA  F042         	goto	l16835
 27447   008590                     u20690:
 27448   008590  EFDB  F042         	goto	l1986
 27449   008594                     l16835:
 27450                           
 27451                           ; BSR set to: 0
 27452                           ;rocketlib/pic18f26k83/i2c.c: 43:             timeout++;
 27453   008594  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 27454   008596  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 27455   008598                     l16837:
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;rocketlib/pic18f26k83/i2c.c: 39:         while (!I2C1STAT1bits.TXBE && !I2C1ERRbits.NAC
      +                          KIF) {
 27459   008598  013D               	movlb	61	; () banked
 27460   00859A  BB78               	btfsc	120,5,b	;volatile
 27461   00859C  EFD2  F042         	goto	u20701
 27462   0085A0  EFD4  F042         	goto	u20700
 27463   0085A4                     u20701:
 27464   0085A4  EFDB  F042         	goto	l1986
 27465   0085A8                     u20700:
 27466   0085A8                     
 27467                           ; BSR set to: 61
 27468   0085A8  A976               	btfss	118,4,b	;volatile
 27469   0085AA  EFD9  F042         	goto	u20711
 27470   0085AE  EFDB  F042         	goto	u20710
 27471   0085B2                     u20711:
 27472   0085B2  EFBC  F042         	goto	l16831
 27473   0085B6                     u20710:
 27474   0085B6                     l1986:
 27475                           
 27476                           ;rocketlib/pic18f26k83/i2c.c: 45:         if (I2C1ERRbits.NACKIF) {
 27477   0085B6  013D               	movlb	61	; () banked
 27478   0085B8  A976               	btfss	118,4,b	;volatile
 27479   0085BA  EFE1  F042         	goto	u20721
 27480   0085BE  EFE3  F042         	goto	u20720
 27481   0085C2                     u20721:
 27482   0085C2  EFE5  F042         	goto	l16843
 27483   0085C6                     u20720:
 27484   0085C6  EFEF  F042         	goto	l16845
 27485   0085CA                     l16843:
 27486                           
 27487                           ; BSR set to: 61
 27488                           ;rocketlib/pic18f26k83/i2c.c: 36:     while (len--) {
 27489   0085CA  0100               	movlb	0	; () banked
 27490   0085CC  0761               	decf	i2c_write@len& (0+255),f,b
 27491   0085CE  2961               	incf	i2c_write@len& (0+255),w,b
 27492   0085D0  A4D8               	btfss	status,2,c
 27493   0085D2  EFED  F042         	goto	u20731
 27494   0085D6  EFEF  F042         	goto	u20730
 27495   0085DA                     u20731:
 27496   0085DA  EFAE  F042         	goto	l16825
 27497   0085DE                     u20730:
 27498   0085DE                     l16845:
 27499                           
 27500                           ;rocketlib/pic18f26k83/i2c.c: 50:     timeout = 0;
 27501   0085DE  0E00               	movlw	0
 27502   0085E0  0100               	movlb	0	; () banked
 27503   0085E2  6F65               	movwf	(i2c_write@timeout+1)& (0+255),b
 27504   0085E4  0E00               	movlw	0
 27505   0085E6  6F64               	movwf	i2c_write@timeout& (0+255),b
 27506                           
 27507                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 27508   0085E8  EF06  F043         	goto	l16853
 27509   0085EC                     l16847:
 27510                           
 27511                           ; BSR set to: 61
 27512                           ;rocketlib/pic18f26k83/i2c.c: 52:         if (timeout >= 2000) {
 27513   0085EC  0ED0               	movlw	208
 27514   0085EE  0100               	movlb	0	; () banked
 27515   0085F0  5D64               	subwf	i2c_write@timeout& (0+255),w,b
 27516   0085F2  0E07               	movlw	7
 27517   0085F4  5965               	subwfb	(i2c_write@timeout+1)& (0+255),w,b
 27518   0085F6  A0D8               	btfss	status,0,c
 27519   0085F8  EF00  F043         	goto	u20741
 27520   0085FC  EF02  F043         	goto	u20740
 27521   008600                     u20741:
 27522   008600  EF04  F043         	goto	l16851
 27523   008604                     u20740:
 27524   008604  EF0E  F043         	goto	l1994
 27525   008608                     l16851:
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;rocketlib/pic18f26k83/i2c.c: 55:         timeout++;
 27529   008608  4B64               	infsnz	i2c_write@timeout& (0+255),f,b
 27530   00860A  2B65               	incf	(i2c_write@timeout+1)& (0+255),f,b
 27531   00860C                     l16853:
 27532                           
 27533                           ; BSR set to: 0
 27534                           ;rocketlib/pic18f26k83/i2c.c: 51:     while (!I2C1PIRbits.PCIF) {
 27535   00860C  013D               	movlb	61	; () banked
 27536   00860E  A579               	btfss	121,2,b	;volatile
 27537   008610  EF0C  F043         	goto	u20751
 27538   008614  EF0E  F043         	goto	u20750
 27539   008618                     u20751:
 27540   008618  EFF6  F042         	goto	l16847
 27541   00861C                     u20750:
 27542   00861C                     l1994:
 27543                           
 27544                           ;rocketlib/pic18f26k83/i2c.c: 58:     I2C1PIRbits.PCIF = 0;
 27545   00861C  013D               	movlb	61	; () banked
 27546   00861E  9579               	bcf	121,2,b	;volatile
 27547                           
 27548                           ;rocketlib/pic18f26k83/i2c.c: 59:     I2C1STAT1bits.CLRBF = 1;
 27549   008620  8578               	bsf	120,2,b	;volatile
 27550   008622                     
 27551                           ; BSR set to: 61
 27552                           ;rocketlib/pic18f26k83/i2c.c: 61:     return (I2C1ERR & 0x70) == 0;
 27553   008622  006F F5D8  F062    	movff	15734,??_i2c_write	;volatile
 27554   008628  0E70               	movlw	112
 27555   00862A  0100               	movlb	0	; () banked
 27556   00862C  1762               	andwf	??_i2c_write& (0+255),f,b
 27557   00862E  B4D8               	btfsc	status,2,c
 27558   008630  EF1C  F043         	goto	u20761
 27559   008634  EF1F  F043         	goto	u20760
 27560   008638                     u20761:
 27561   008638  0E01               	movlw	1
 27562   00863A  EF20  F043         	goto	u20770
 27563   00863E                     u20760:
 27564   00863E  0E00               	movlw	0
 27565   008640                     u20770:
 27566   008640                     
 27567                           ; BSR set to: 0
 27568   008640  0012               	return		;funcret
 27569   008642                     __end_of_i2c_write:
 27570                           	callstack 0
 27571                           
 27572 ;; *************** function _i2c_read *****************
 27573 ;; Defined at:
 27574 ;;		line 64 in file "rocketlib/pic18f26k83/i2c.c"
 27575 ;; Parameters:    Size  Location     Type
 27576 ;;  address         1    wreg     unsigned char 
 27577 ;;  data            1    0[BANK0 ] PTR unsigned char 
 27578 ;;		 -> read_flow_sensor_data@data(9), i2c_read_reg16@data(2), i2c_read_reg8@data(1), 
 27579 ;;  len             1    1[BANK0 ] unsigned char 
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;  address         1    3[BANK0 ] unsigned char 
 27582 ;;  timeout         2    4[BANK0 ] unsigned int 
 27583 ;; Return value:  Size  Location     Type
 27584 ;;                  1    wreg      _Bool 
 27585 ;; Registers used:
 27586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27587 ;; Tracked objects:
 27588 ;;		On entry : 0/0
 27589 ;;		On exit  : 0/0
 27590 ;;		Unchanged: 0/0
 27591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27593 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27595 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27596 ;;Total ram usage:        6 bytes
 27597 ;; Hardware stack levels used: 1
 27598 ;; Hardware stack levels required when called: 5
 27599 ;; This function calls:
 27600 ;;		Nothing
 27601 ;; This function is called by:
 27602 ;;		_i2c_read_reg8
 27603 ;;		_i2c_read_data
 27604 ;;		_i2c_read_reg16
 27605 ;;		_read_flow_sensor_data
 27606 ;; This function uses a non-reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text103
 27610   008642                     __ptext103:
 27611                           	callstack 0
 27612   008642                     _i2c_read:
 27613                           	callstack 24
 27614                           
 27615                           ; BSR set to: 0
 27616                           ;incstack = 0
 27617                           ;i2c_read@address stored from wreg
 27618   008642  0100               	movlb	0	; () banked
 27619   008644  6F63               	movwf	i2c_read@address& (0+255),b
 27620   008646                     
 27621                           ;rocketlib/pic18f26k83/i2c.c: 65:     I2C1ADB1 = (uint8_t)((address << 1) | 1);
 27622   008646  80D8               	bsf	status,0,c
 27623   008648  0100               	movlb	0	; () banked
 27624   00864A  3563               	rlcf	i2c_read@address& (0+255),w,b
 27625   00864C  013D               	movlb	61	; () banked
 27626   00864E  6F6E               	movwf	110,b	;volatile
 27627   008650                     
 27628                           ; BSR set to: 61
 27629                           ;rocketlib/pic18f26k83/i2c.c: 66:     I2C1CNT = len;
 27630   008650  0060  F187  FD6C   	movff	i2c_read@len,15724	;volatile
 27631   008656                     
 27632                           ; BSR set to: 61
 27633                           ;rocketlib/pic18f26k83/i2c.c: 67:     I2C1PIRbits.PCIF = 0;
 27634   008656  9579               	bcf	121,2,b	;volatile
 27635   008658                     
 27636                           ; BSR set to: 61
 27637                           ;rocketlib/pic18f26k83/i2c.c: 68:     I2C1ERRbits.NACKIF = 0;
 27638   008658  9976               	bcf	118,4,b	;volatile
 27639   00865A                     
 27640                           ; BSR set to: 61
 27641                           ;rocketlib/pic18f26k83/i2c.c: 69:     I2C1CON0bits.S = 1;
 27642   00865A  8B73               	bsf	115,5,b	;volatile
 27643                           
 27644                           ;rocketlib/pic18f26k83/i2c.c: 71:     unsigned int timeout;;rocketlib/pic18f26k83/i2c.c:
      +                           72:     while (len--) {
 27645   00865C  EF67  F043         	goto	l16887
 27646   008660                     l16869:
 27647                           
 27648                           ; BSR set to: 0
 27649                           ;rocketlib/pic18f26k83/i2c.c: 73:         timeout = 0;
 27650   008660  0E00               	movlw	0
 27651   008662  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 27652   008664  0E00               	movlw	0
 27653   008666  6F64               	movwf	i2c_read@timeout& (0+255),b
 27654                           
 27655                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 27656   008668  EF46  F043         	goto	l16877
 27657   00866C                     l16871:
 27658                           
 27659                           ; BSR set to: 61
 27660                           ;rocketlib/pic18f26k83/i2c.c: 75:             if (timeout >= 2000) {
 27661   00866C  0ED0               	movlw	208
 27662   00866E  0100               	movlb	0	; () banked
 27663   008670  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 27664   008672  0E07               	movlw	7
 27665   008674  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 27666   008676  A0D8               	btfss	status,0,c
 27667   008678  EF40  F043         	goto	u20781
 27668   00867C  EF42  F043         	goto	u20780
 27669   008680                     u20781:
 27670   008680  EF44  F043         	goto	l16875
 27671   008684                     u20780:
 27672   008684  EF55  F043         	goto	l2003
 27673   008688                     l16875:
 27674                           
 27675                           ; BSR set to: 0
 27676                           ;rocketlib/pic18f26k83/i2c.c: 78:             timeout++;
 27677   008688  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 27678   00868A  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 27679   00868C                     l16877:
 27680                           
 27681                           ; BSR set to: 0
 27682                           ;rocketlib/pic18f26k83/i2c.c: 74:         while (!I2C1STAT1bits.RXBF && !I2C1ERRbits.NAC
      +                          KIF) {
 27683   00868C  013D               	movlb	61	; () banked
 27684   00868E  B178               	btfsc	120,0,b	;volatile
 27685   008690  EF4C  F043         	goto	u20791
 27686   008694  EF4E  F043         	goto	u20790
 27687   008698                     u20791:
 27688   008698  EF55  F043         	goto	l2003
 27689   00869C                     u20790:
 27690   00869C                     
 27691                           ; BSR set to: 61
 27692   00869C  A976               	btfss	118,4,b	;volatile
 27693   00869E  EF53  F043         	goto	u20801
 27694   0086A2  EF55  F043         	goto	u20800
 27695   0086A6                     u20801:
 27696   0086A6  EF36  F043         	goto	l16871
 27697   0086AA                     u20800:
 27698   0086AA                     l2003:
 27699                           
 27700                           ;rocketlib/pic18f26k83/i2c.c: 80:         if (I2C1ERRbits.NACKIF) {
 27701   0086AA  013D               	movlb	61	; () banked
 27702   0086AC  A976               	btfss	118,4,b	;volatile
 27703   0086AE  EF5B  F043         	goto	u20811
 27704   0086B2  EF5D  F043         	goto	u20810
 27705   0086B6                     u20811:
 27706   0086B6  EF5F  F043         	goto	l16883
 27707   0086BA                     u20810:
 27708   0086BA  EF71  F043         	goto	l16889
 27709   0086BE                     l16883:
 27710                           
 27711                           ; BSR set to: 61
 27712                           ;rocketlib/pic18f26k83/i2c.c: 83:         *data++ = I2C1RXB;
 27713   0086BE  0100               	movlb	0	; () banked
 27714   0086C0  5160               	movf	i2c_read@data& (0+255),w,b
 27715   0086C2  6ED9               	movwf	fsr2l,c
 27716   0086C4  6ADA               	clrf	fsr2h,c
 27717   0086C6  006F F5AB FFDF     	movff	15722,indf2	;volatile
 27718   0086CC                     
 27719                           ; BSR set to: 0
 27720   0086CC  2B60               	incf	i2c_read@data& (0+255),f,b
 27721   0086CE                     l16887:
 27722                           
 27723                           ;rocketlib/pic18f26k83/i2c.c: 72:     while (len--) {
 27724   0086CE  0100               	movlb	0	; () banked
 27725   0086D0  0761               	decf	i2c_read@len& (0+255),f,b
 27726   0086D2  2961               	incf	i2c_read@len& (0+255),w,b
 27727   0086D4  A4D8               	btfss	status,2,c
 27728   0086D6  EF6F  F043         	goto	u20821
 27729   0086DA  EF71  F043         	goto	u20820
 27730   0086DE                     u20821:
 27731   0086DE  EF30  F043         	goto	l16869
 27732   0086E2                     u20820:
 27733   0086E2                     l16889:
 27734                           
 27735                           ;rocketlib/pic18f26k83/i2c.c: 86:     timeout = 0;
 27736   0086E2  0E00               	movlw	0
 27737   0086E4  0100               	movlb	0	; () banked
 27738   0086E6  6F65               	movwf	(i2c_read@timeout+1)& (0+255),b
 27739   0086E8  0E00               	movlw	0
 27740   0086EA  6F64               	movwf	i2c_read@timeout& (0+255),b
 27741                           
 27742                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 27743   0086EC  EF88  F043         	goto	l16897
 27744   0086F0                     l16891:
 27745                           
 27746                           ; BSR set to: 61
 27747                           ;rocketlib/pic18f26k83/i2c.c: 88:         if (timeout >= 2000) {
 27748   0086F0  0ED0               	movlw	208
 27749   0086F2  0100               	movlb	0	; () banked
 27750   0086F4  5D64               	subwf	i2c_read@timeout& (0+255),w,b
 27751   0086F6  0E07               	movlw	7
 27752   0086F8  5965               	subwfb	(i2c_read@timeout+1)& (0+255),w,b
 27753   0086FA  A0D8               	btfss	status,0,c
 27754   0086FC  EF82  F043         	goto	u20831
 27755   008700  EF84  F043         	goto	u20830
 27756   008704                     u20831:
 27757   008704  EF86  F043         	goto	l16895
 27758   008708                     u20830:
 27759   008708  EF90  F043         	goto	l2011
 27760   00870C                     l16895:
 27761                           
 27762                           ; BSR set to: 0
 27763                           ;rocketlib/pic18f26k83/i2c.c: 91:         timeout++;
 27764   00870C  4B64               	infsnz	i2c_read@timeout& (0+255),f,b
 27765   00870E  2B65               	incf	(i2c_read@timeout+1)& (0+255),f,b
 27766   008710                     l16897:
 27767                           
 27768                           ; BSR set to: 0
 27769                           ;rocketlib/pic18f26k83/i2c.c: 87:     while (!I2C1PIRbits.PCIF) {
 27770   008710  013D               	movlb	61	; () banked
 27771   008712  A579               	btfss	121,2,b	;volatile
 27772   008714  EF8E  F043         	goto	u20841
 27773   008718  EF90  F043         	goto	u20840
 27774   00871C                     u20841:
 27775   00871C  EF78  F043         	goto	l16891
 27776   008720                     u20840:
 27777   008720                     l2011:
 27778                           
 27779                           ;rocketlib/pic18f26k83/i2c.c: 93:     I2C1PIRbits.PCIF = 0;
 27780   008720  013D               	movlb	61	; () banked
 27781   008722  9579               	bcf	121,2,b	;volatile
 27782                           
 27783                           ;rocketlib/pic18f26k83/i2c.c: 94:     I2C1STAT1bits.CLRBF = 1;
 27784   008724  8578               	bsf	120,2,b	;volatile
 27785   008726                     
 27786                           ; BSR set to: 61
 27787                           ;rocketlib/pic18f26k83/i2c.c: 96:     return (I2C1ERR & 0x60) == 0;
 27788   008726  006F F5D8  F062    	movff	15734,??_i2c_read	;volatile
 27789   00872C  0E60               	movlw	96
 27790   00872E  0100               	movlb	0	; () banked
 27791   008730  1762               	andwf	??_i2c_read& (0+255),f,b
 27792   008732  B4D8               	btfsc	status,2,c
 27793   008734  EF9E  F043         	goto	u20851
 27794   008738  EFA1  F043         	goto	u20850
 27795   00873C                     u20851:
 27796   00873C  0E01               	movlw	1
 27797   00873E  EFA2  F043         	goto	u20860
 27798   008742                     u20850:
 27799   008742  0E00               	movlw	0
 27800   008744                     u20860:
 27801   008744                     
 27802                           ; BSR set to: 0
 27803   008744  0012               	return		;funcret
 27804   008746                     __end_of_i2c_read:
 27805                           	callstack 0
 27806                           
 27807 ;; *************** function _can_init *****************
 27808 ;; Defined at:
 27809 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 27810 ;; Parameters:    Size  Location     Type
 27811 ;;  timing          2    0[BANK0 ] PTR const struct .
 27812 ;;		 -> main@can_setup(7), 
 27813 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
 27814 ;;		 -> can_msg_handler(1), 
 27815 ;; Auto vars:     Size  Location     Type
 27816 ;;		None
 27817 ;; Return value:  Size  Location     Type
 27818 ;;                  1    wreg      void 
 27819 ;; Registers used:
 27820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27821 ;; Tracked objects:
 27822 ;;		On entry : 0/0
 27823 ;;		On exit  : 0/0
 27824 ;;		Unchanged: 0/0
 27825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27830 ;;Total ram usage:        5 bytes
 27831 ;; Hardware stack levels used: 1
 27832 ;; Hardware stack levels required when called: 5
 27833 ;; This function calls:
 27834 ;;		Nothing
 27835 ;; This function is called by:
 27836 ;;		_main
 27837 ;; This function uses a non-reentrant model
 27838 ;;
 27839                           
 27840                           	psect	text104
 27841   00775C                     __ptext104:
 27842                           	callstack 0
 27843   00775C                     _can_init:
 27844                           	callstack 25
 27845   00775C                     
 27846                           ;canlib/pic18f26k83/pic18f26k83_can.c: 16: void can_init(const can_timing_t *timing,;can
      +                          lib/pic18f26k83/pic18f26k83_can.c: 17:               void (*receive_callback)(const can_
      +                          msg_t *message)) {;canlib/pic18f26k83/pic18f26k83_can.c: 19:     can_rcv_cb = receive_ca
      +                          llback;
 27847   00775C  C062  F046         	movff	can_init@receive_callback,_can_rcv_cb
 27848   007760  C063  F047         	movff	can_init@receive_callback+1,_can_rcv_cb+1
 27849   007764                     
 27850                           ;canlib/pic18f26k83/pic18f26k83_can.c: 22:     CANCONbits.REQOP = 0b100;
 27851   007764  508F               	movf	143,w,c	;volatile
 27852   007766  0B1F               	andlw	-225
 27853   007768  0980               	iorlw	128
 27854   00776A  6E8F               	movwf	143,c	;volatile
 27855   00776C                     l17535:
 27856   00776C  388E               	swapf	142,w,c	;volatile
 27857   00776E  32E8               	rrcf	wreg,f,c
 27858   007770  0B07               	andlw	7
 27859   007772  0A04               	xorlw	4
 27860   007774  A4D8               	btfss	status,2,c
 27861   007776  EFBF  F03B         	goto	u21891
 27862   00777A  EFC1  F03B         	goto	u21890
 27863   00777E                     u21891:
 27864   00777E  EFB6  F03B         	goto	l17535
 27865   007782                     u21890:
 27866   007782                     
 27867                           ;canlib/pic18f26k83/pic18f26k83_can.c: 28:     ECANCONbits.MDSEL = 0;
 27868   007782  0E3F               	movlw	-193
 27869   007784  1691               	andwf	145,f,c	;volatile
 27870   007786                     
 27871                           ;canlib/pic18f26k83/pic18f26k83_can.c: 32:     CIOCONbits.CLKSEL = 0;
 27872   007786  0137               	movlb	55	; () banked
 27873   007788  9100               	bcf	0,0,b	;volatile
 27874   00778A                     
 27875                           ; BSR set to: 55
 27876                           ;canlib/pic18f26k83/pic18f26k83_can.c: 34:     BRGCON1bits.SJW = timing->sjw;
 27877   00778A  0100               	movlb	0	; () banked
 27878   00778C  EE20 F001          	lfsr	2,1
 27879   007790  5160               	movf	can_init@timing& (0+255),w,b
 27880   007792  26D9               	addwf	fsr2l,f,c
 27881   007794  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27882   007796  22DA               	addwfc	fsr2h,f,c
 27883   007798  50DF               	movf	indf2,w,c
 27884   00779A  6F64               	movwf	??_can_init& (0+255),b
 27885   00779C  3B64               	swapf	??_can_init& (0+255),f,b
 27886   00779E  4764               	rlncf	??_can_init& (0+255),f,b
 27887   0077A0  4764               	rlncf	??_can_init& (0+255),f,b
 27888   0077A2  0137               	movlb	55	; () banked
 27889   0077A4  5103               	movf	3,w,b	;volatile
 27890   0077A6  0100               	movlb	0	; () banked
 27891   0077A8  1964               	xorwf	??_can_init& (0+255),w,b
 27892   0077AA  0B3F               	andlw	-193
 27893   0077AC  1964               	xorwf	??_can_init& (0+255),w,b
 27894   0077AE  0137               	movlb	55	; () banked
 27895   0077B0  6F03               	movwf	3,b	;volatile
 27896   0077B2                     
 27897                           ; BSR set to: 55
 27898                           ;canlib/pic18f26k83/pic18f26k83_can.c: 35:     BRGCON1bits.BRP = timing->brp;
 27899   0077B2  0060  F183  FFD9   	movff	can_init@timing,fsr2l
 27900   0077B8  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
 27901   0077BE  50DF               	movf	indf2,w,c
 27902   0077C0  0100               	movlb	0	; () banked
 27903   0077C2  6F64               	movwf	??_can_init& (0+255),b
 27904   0077C4  0137               	movlb	55	; () banked
 27905   0077C6  5103               	movf	3,w,b	;volatile
 27906   0077C8  0100               	movlb	0	; () banked
 27907   0077CA  1964               	xorwf	??_can_init& (0+255),w,b
 27908   0077CC  0BC0               	andlw	-64
 27909   0077CE  1964               	xorwf	??_can_init& (0+255),w,b
 27910   0077D0  0137               	movlb	55	; () banked
 27911   0077D2  6F03               	movwf	3,b	;volatile
 27912   0077D4                     
 27913                           ; BSR set to: 55
 27914                           ;canlib/pic18f26k83/pic18f26k83_can.c: 36:     BRGCON2bits.SEG2PHTS = timing->btlmode;
 27915   0077D4  0100               	movlb	0	; () banked
 27916   0077D6  EE20 F006          	lfsr	2,6
 27917   0077DA  5160               	movf	can_init@timing& (0+255),w,b
 27918   0077DC  26D9               	addwf	fsr2l,f,c
 27919   0077DE  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27920   0077E0  22DA               	addwfc	fsr2h,f,c
 27921   0077E2  50DF               	movf	indf2,w,c
 27922   0077E4  6F64               	movwf	??_can_init& (0+255),b
 27923   0077E6  3364               	rrcf	??_can_init& (0+255),f,b
 27924   0077E8  3364               	rrcf	??_can_init& (0+255),f,b
 27925   0077EA  0137               	movlb	55	; () banked
 27926   0077EC  5104               	movf	4,w,b	;volatile
 27927   0077EE  0100               	movlb	0	; () banked
 27928   0077F0  1964               	xorwf	??_can_init& (0+255),w,b
 27929   0077F2  0B7F               	andlw	-129
 27930   0077F4  1964               	xorwf	??_can_init& (0+255),w,b
 27931   0077F6  0137               	movlb	55	; () banked
 27932   0077F8  6F04               	movwf	4,b	;volatile
 27933   0077FA                     
 27934                           ; BSR set to: 55
 27935                           ;canlib/pic18f26k83/pic18f26k83_can.c: 37:     BRGCON2bits.SAM = timing->sam;
 27936   0077FA  0100               	movlb	0	; () banked
 27937   0077FC  EE20 F002          	lfsr	2,2
 27938   007800  5160               	movf	can_init@timing& (0+255),w,b
 27939   007802  26D9               	addwf	fsr2l,f,c
 27940   007804  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27941   007806  22DA               	addwfc	fsr2h,f,c
 27942   007808  50DF               	movf	indf2,w,c
 27943   00780A  6F64               	movwf	??_can_init& (0+255),b
 27944   00780C  3B64               	swapf	??_can_init& (0+255),f,b
 27945   00780E  4764               	rlncf	??_can_init& (0+255),f,b
 27946   007810  4764               	rlncf	??_can_init& (0+255),f,b
 27947   007812  0137               	movlb	55	; () banked
 27948   007814  5104               	movf	4,w,b	;volatile
 27949   007816  0100               	movlb	0	; () banked
 27950   007818  1964               	xorwf	??_can_init& (0+255),w,b
 27951   00781A  0BBF               	andlw	-65
 27952   00781C  1964               	xorwf	??_can_init& (0+255),w,b
 27953   00781E  0137               	movlb	55	; () banked
 27954   007820  6F04               	movwf	4,b	;volatile
 27955   007822                     
 27956                           ; BSR set to: 55
 27957                           ;canlib/pic18f26k83/pic18f26k83_can.c: 38:     BRGCON2bits.SEG1PH = timing->seg1ph;
 27958   007822  0100               	movlb	0	; () banked
 27959   007824  EE20 F003          	lfsr	2,3
 27960   007828  5160               	movf	can_init@timing& (0+255),w,b
 27961   00782A  26D9               	addwf	fsr2l,f,c
 27962   00782C  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27963   00782E  22DA               	addwfc	fsr2h,f,c
 27964   007830  50DF               	movf	indf2,w,c
 27965   007832  6F64               	movwf	??_can_init& (0+255),b
 27966   007834  4764               	rlncf	??_can_init& (0+255),f,b
 27967   007836  4764               	rlncf	??_can_init& (0+255),f,b
 27968   007838  4764               	rlncf	??_can_init& (0+255),f,b
 27969   00783A  0137               	movlb	55	; () banked
 27970   00783C  5104               	movf	4,w,b	;volatile
 27971   00783E  0100               	movlb	0	; () banked
 27972   007840  1964               	xorwf	??_can_init& (0+255),w,b
 27973   007842  0BC7               	andlw	-57
 27974   007844  1964               	xorwf	??_can_init& (0+255),w,b
 27975   007846  0137               	movlb	55	; () banked
 27976   007848  6F04               	movwf	4,b	;volatile
 27977   00784A                     
 27978                           ; BSR set to: 55
 27979                           ;canlib/pic18f26k83/pic18f26k83_can.c: 39:     BRGCON2bits.PRSEG = timing->prseg;
 27980   00784A  0100               	movlb	0	; () banked
 27981   00784C  EE20 F005          	lfsr	2,5
 27982   007850  5160               	movf	can_init@timing& (0+255),w,b
 27983   007852  26D9               	addwf	fsr2l,f,c
 27984   007854  5161               	movf	(can_init@timing+1)& (0+255),w,b
 27985   007856  22DA               	addwfc	fsr2h,f,c
 27986   007858  50DF               	movf	indf2,w,c
 27987   00785A  6F64               	movwf	??_can_init& (0+255),b
 27988   00785C  0137               	movlb	55	; () banked
 27989   00785E  5104               	movf	4,w,b	;volatile
 27990   007860  0100               	movlb	0	; () banked
 27991   007862  1964               	xorwf	??_can_init& (0+255),w,b
 27992   007864  0BF8               	andlw	-8
 27993   007866  1964               	xorwf	??_can_init& (0+255),w,b
 27994   007868  0137               	movlb	55	; () banked
 27995   00786A  6F04               	movwf	4,b	;volatile
 27996   00786C                     
 27997                           ; BSR set to: 55
 27998                           ;canlib/pic18f26k83/pic18f26k83_can.c: 40:     BRGCON3bits.SEG2PH = timing->seg2ph;
 27999   00786C  0100               	movlb	0	; () banked
 28000   00786E  EE20 F004          	lfsr	2,4
 28001   007872  5160               	movf	can_init@timing& (0+255),w,b
 28002   007874  26D9               	addwf	fsr2l,f,c
 28003   007876  5161               	movf	(can_init@timing+1)& (0+255),w,b
 28004   007878  22DA               	addwfc	fsr2h,f,c
 28005   00787A  50DF               	movf	indf2,w,c
 28006   00787C  6F64               	movwf	??_can_init& (0+255),b
 28007   00787E  0137               	movlb	55	; () banked
 28008   007880  5105               	movf	5,w,b	;volatile
 28009   007882  0100               	movlb	0	; () banked
 28010   007884  1964               	xorwf	??_can_init& (0+255),w,b
 28011   007886  0BF8               	andlw	-8
 28012   007888  1964               	xorwf	??_can_init& (0+255),w,b
 28013   00788A  0137               	movlb	55	; () banked
 28014   00788C  6F05               	movwf	5,b	;volatile
 28015   00788E                     
 28016                           ; BSR set to: 55
 28017                           ;canlib/pic18f26k83/pic18f26k83_can.c: 46:     BRGCON3bits.WAKDIS = 1;
 28018   00788E  8F05               	bsf	5,7,b	;volatile
 28019   007890                     
 28020                           ; BSR set to: 55
 28021                           ;canlib/pic18f26k83/pic18f26k83_can.c: 47:     BRGCON3bits.WAKFIL = 0;
 28022   007890  9D05               	bcf	5,6,b	;volatile
 28023   007892                     
 28024                           ; BSR set to: 55
 28025                           ;canlib/pic18f26k83/pic18f26k83_can.c: 51:     RXM0SIDH = 0;
 28026   007892  0E00               	movlw	0
 28027   007894  6FB8               	movwf	184,b	;volatile
 28028   007896                     
 28029                           ; BSR set to: 55
 28030                           ;canlib/pic18f26k83/pic18f26k83_can.c: 52:     RXM0SIDL = 0;
 28031   007896  0E00               	movlw	0
 28032   007898  6FB9               	movwf	185,b	;volatile
 28033   00789A                     
 28034                           ; BSR set to: 55
 28035                           ;canlib/pic18f26k83/pic18f26k83_can.c: 53:     RXM1SIDH = 0;
 28036   00789A  0E00               	movlw	0
 28037   00789C  6FBC               	movwf	188,b	;volatile
 28038   00789E                     
 28039                           ; BSR set to: 55
 28040                           ;canlib/pic18f26k83/pic18f26k83_can.c: 54:     RXM1SIDL = 0;
 28041   00789E  0E00               	movlw	0
 28042   0078A0  6FBD               	movwf	189,b	;volatile
 28043   0078A2                     
 28044                           ; BSR set to: 55
 28045                           ;canlib/pic18f26k83/pic18f26k83_can.c: 58:     RXB0CONbits.RXM0 = 1;
 28046   0078A2  8A80               	bsf	128,5,c	;volatile
 28047   0078A4                     
 28048                           ; BSR set to: 55
 28049                           ;canlib/pic18f26k83/pic18f26k83_can.c: 59:     RXB0CONbits.RXM1 = 1;
 28050   0078A4  8C80               	bsf	128,6,c	;volatile
 28051   0078A6                     
 28052                           ; BSR set to: 55
 28053                           ;canlib/pic18f26k83/pic18f26k83_can.c: 62:     RXB0CONbits.RB0DBEN = 1;
 28054   0078A6  8480               	bsf	128,2,c	;volatile
 28055   0078A8                     
 28056                           ; BSR set to: 55
 28057                           ;canlib/pic18f26k83/pic18f26k83_can.c: 66:     PIE5bits.IRXIE = 1;
 28058   0078A8  0139               	movlb	57	; () banked
 28059   0078AA  8F95               	bsf	149,7,b	;volatile
 28060   0078AC                     
 28061                           ; BSR set to: 57
 28062                           ;canlib/pic18f26k83/pic18f26k83_can.c: 68:     PIE5bits.WAKIE = 0;
 28063   0078AC  9D95               	bcf	149,6,b	;volatile
 28064   0078AE                     
 28065                           ; BSR set to: 57
 28066                           ;canlib/pic18f26k83/pic18f26k83_can.c: 70:     PIE5bits.ERRIE = 1;
 28067   0078AE  8B95               	bsf	149,5,b	;volatile
 28068   0078B0                     
 28069                           ; BSR set to: 57
 28070                           ;canlib/pic18f26k83/pic18f26k83_can.c: 72:     PIE5bits.TXB2IE = 0;
 28071   0078B0  9995               	bcf	149,4,b	;volatile
 28072   0078B2                     
 28073                           ; BSR set to: 57
 28074                           ;canlib/pic18f26k83/pic18f26k83_can.c: 73:     PIE5bits.TXB1IE = 0;
 28075   0078B2  9795               	bcf	149,3,b	;volatile
 28076   0078B4                     
 28077                           ; BSR set to: 57
 28078                           ;canlib/pic18f26k83/pic18f26k83_can.c: 74:     PIE5bits.TXB0IE = 0;
 28079   0078B4  9595               	bcf	149,2,b	;volatile
 28080   0078B6                     
 28081                           ; BSR set to: 57
 28082                           ;canlib/pic18f26k83/pic18f26k83_can.c: 76:     PIE5bits.RXB1IE = 1;
 28083   0078B6  8395               	bsf	149,1,b	;volatile
 28084   0078B8                     
 28085                           ; BSR set to: 57
 28086                           ;canlib/pic18f26k83/pic18f26k83_can.c: 77:     PIE5bits.RXB0IE = 1;
 28087   0078B8  8195               	bsf	149,0,b	;volatile
 28088   0078BA                     
 28089                           ; BSR set to: 57
 28090                           ;canlib/pic18f26k83/pic18f26k83_can.c: 80:     CANCONbits.REQOP = 0;
 28091   0078BA  0E1F               	movlw	-225
 28092   0078BC  168F               	andwf	143,f,c	;volatile
 28093   0078BE                     l17591:
 28094   0078BE  388E               	swapf	142,w,c	;volatile
 28095   0078C0  32E8               	rrcf	wreg,f,c
 28096   0078C2  0B07               	andlw	7
 28097   0078C4  0900               	iorlw	0
 28098   0078C6  A4D8               	btfss	status,2,c
 28099   0078C8  EF68  F03C         	goto	u21901
 28100   0078CC  EF6A  F03C         	goto	u21900
 28101   0078D0                     u21901:
 28102   0078D0  EF5F  F03C         	goto	l17591
 28103   0078D4                     u21900:
 28104   0078D4  0012               	return		;funcret
 28105   0078D6                     __end_of_can_init:
 28106                           	callstack 0
 28107                           
 28108 ;; *************** function _can_generate_timing_params *****************
 28109 ;; Defined at:
 28110 ;;		line 7 in file "canlib/util/timing_util.c"
 28111 ;; Parameters:    Size  Location     Type
 28112 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
 28113 ;;  timing          2    4[BANK0 ] PTR struct .
 28114 ;;		 -> main@can_setup(7), 
 28115 ;; Auto vars:     Size  Location     Type
 28116 ;;		None
 28117 ;; Return value:  Size  Location     Type
 28118 ;;                  1    wreg      _Bool 
 28119 ;; Registers used:
 28120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28121 ;; Tracked objects:
 28122 ;;		On entry : 0/0
 28123 ;;		On exit  : 0/0
 28124 ;;		Unchanged: 0/0
 28125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28126 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28129 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28130 ;;Total ram usage:       10 bytes
 28131 ;; Hardware stack levels used: 1
 28132 ;; Hardware stack levels required when called: 5
 28133 ;; This function calls:
 28134 ;;		Nothing
 28135 ;; This function is called by:
 28136 ;;		_main
 28137 ;; This function uses a non-reentrant model
 28138 ;;
 28139                           
 28140                           	psect	text105
 28141   00703E                     __ptext105:
 28142                           	callstack 0
 28143   00703E                     _can_generate_timing_params:
 28144                           	callstack 25
 28145   00703E                     
 28146                           ;canlib/util/timing_util.c: 7: _Bool can_generate_timing_params(uint32_t can_frequency, 
      +                          can_timing_t *timing);canlib/util/timing_util.c: 8: {;canlib/util/timing_util.c: 10:    
      +                           switch (can_frequency) {
 28147   00703E  EFC8  F038         	goto	l17665
 28148   007042                     l17615:
 28149                           
 28150                           ; BSR set to: 0
 28151                           ;canlib/util/timing_util.c: 12:             timing->brp = 7;
 28152   007042  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28153   007048  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28154   00704E  0E07               	movlw	7
 28155   007050  6EDF               	movwf	indf2,c
 28156   007052                     
 28157                           ; BSR set to: 0
 28158                           ;canlib/util/timing_util.c: 13:             timing->sjw = 3;
 28159   007052  EE20 F001          	lfsr	2,1
 28160   007056  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28161   007058  26D9               	addwf	fsr2l,f,c
 28162   00705A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28163   00705C  22DA               	addwfc	fsr2h,f,c
 28164   00705E  0E03               	movlw	3
 28165   007060  6EDF               	movwf	indf2,c
 28166   007062                     
 28167                           ; BSR set to: 0
 28168                           ;canlib/util/timing_util.c: 14:             timing->btlmode = 1;
 28169   007062  EE20 F006          	lfsr	2,6
 28170   007066  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28171   007068  26D9               	addwf	fsr2l,f,c
 28172   00706A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28173   00706C  22DA               	addwfc	fsr2h,f,c
 28174   00706E  0E01               	movlw	1
 28175   007070  6EDF               	movwf	indf2,c
 28176   007072                     
 28177                           ; BSR set to: 0
 28178                           ;canlib/util/timing_util.c: 15:             timing->sam = 0;
 28179   007072  EE20 F002          	lfsr	2,2
 28180   007076  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28181   007078  26D9               	addwf	fsr2l,f,c
 28182   00707A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28183   00707C  22DA               	addwfc	fsr2h,f,c
 28184   00707E  6ADF               	clrf	indf2,c
 28185   007080                     
 28186                           ; BSR set to: 0
 28187                           ;canlib/util/timing_util.c: 16:             timing->seg1ph = 4;
 28188   007080  EE20 F003          	lfsr	2,3
 28189   007084  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28190   007086  26D9               	addwf	fsr2l,f,c
 28191   007088  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28192   00708A  22DA               	addwfc	fsr2h,f,c
 28193   00708C  0E04               	movlw	4
 28194   00708E  6EDF               	movwf	indf2,c
 28195   007090                     
 28196                           ; BSR set to: 0
 28197                           ;canlib/util/timing_util.c: 17:             timing->prseg = 0;
 28198   007090  EE20 F005          	lfsr	2,5
 28199   007094  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28200   007096  26D9               	addwf	fsr2l,f,c
 28201   007098  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28202   00709A  22DA               	addwfc	fsr2h,f,c
 28203   00709C  6ADF               	clrf	indf2,c
 28204   00709E                     
 28205                           ; BSR set to: 0
 28206                           ;canlib/util/timing_util.c: 18:             timing->seg2ph = 4;
 28207   00709E  EE20 F004          	lfsr	2,4
 28208   0070A2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28209   0070A4  26D9               	addwf	fsr2l,f,c
 28210   0070A6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28211   0070A8  22DA               	addwfc	fsr2h,f,c
 28212   0070AA  0E04               	movlw	4
 28213   0070AC  6EDF               	movwf	indf2,c
 28214   0070AE  EF18  F039         	goto	l234
 28215   0070B2                     l17631:
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;canlib/util/timing_util.c: 21:             timing->brp = 1;
 28219   0070B2  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28220   0070B8  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28221   0070BE  0E01               	movlw	1
 28222   0070C0  6EDF               	movwf	indf2,c
 28223   0070C2                     
 28224                           ; BSR set to: 0
 28225                           ;canlib/util/timing_util.c: 22:             timing->sjw = 3;
 28226   0070C2  EE20 F001          	lfsr	2,1
 28227   0070C6  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28228   0070C8  26D9               	addwf	fsr2l,f,c
 28229   0070CA  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28230   0070CC  22DA               	addwfc	fsr2h,f,c
 28231   0070CE  0E03               	movlw	3
 28232   0070D0  6EDF               	movwf	indf2,c
 28233   0070D2                     
 28234                           ; BSR set to: 0
 28235                           ;canlib/util/timing_util.c: 23:             timing->btlmode = 1;
 28236   0070D2  EE20 F006          	lfsr	2,6
 28237   0070D6  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28238   0070D8  26D9               	addwf	fsr2l,f,c
 28239   0070DA  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28240   0070DC  22DA               	addwfc	fsr2h,f,c
 28241   0070DE  0E01               	movlw	1
 28242   0070E0  6EDF               	movwf	indf2,c
 28243   0070E2                     
 28244                           ; BSR set to: 0
 28245                           ;canlib/util/timing_util.c: 24:             timing->sam = 0;
 28246   0070E2  EE20 F002          	lfsr	2,2
 28247   0070E6  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28248   0070E8  26D9               	addwf	fsr2l,f,c
 28249   0070EA  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28250   0070EC  22DA               	addwfc	fsr2h,f,c
 28251   0070EE  6ADF               	clrf	indf2,c
 28252   0070F0                     
 28253                           ; BSR set to: 0
 28254                           ;canlib/util/timing_util.c: 25:             timing->seg1ph = 4;
 28255   0070F0  EE20 F003          	lfsr	2,3
 28256   0070F4  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28257   0070F6  26D9               	addwf	fsr2l,f,c
 28258   0070F8  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28259   0070FA  22DA               	addwfc	fsr2h,f,c
 28260   0070FC  0E04               	movlw	4
 28261   0070FE  6EDF               	movwf	indf2,c
 28262   007100                     
 28263                           ; BSR set to: 0
 28264                           ;canlib/util/timing_util.c: 26:             timing->prseg = 0;
 28265   007100  EE20 F005          	lfsr	2,5
 28266   007104  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28267   007106  26D9               	addwf	fsr2l,f,c
 28268   007108  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28269   00710A  22DA               	addwfc	fsr2h,f,c
 28270   00710C  6ADF               	clrf	indf2,c
 28271   00710E                     
 28272                           ; BSR set to: 0
 28273                           ;canlib/util/timing_util.c: 27:             timing->seg2ph = 4;
 28274   00710E  EE20 F004          	lfsr	2,4
 28275   007112  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28276   007114  26D9               	addwf	fsr2l,f,c
 28277   007116  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28278   007118  22DA               	addwfc	fsr2h,f,c
 28279   00711A  0E04               	movlw	4
 28280   00711C  6EDF               	movwf	indf2,c
 28281   00711E  EF18  F039         	goto	l234
 28282   007122                     l17647:
 28283                           
 28284                           ; BSR set to: 0
 28285                           ;canlib/util/timing_util.c: 30:             timing->brp = 0;
 28286   007122  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
 28287   007128  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
 28288   00712E  6ADF               	clrf	indf2,c
 28289   007130                     
 28290                           ; BSR set to: 0
 28291                           ;canlib/util/timing_util.c: 31:             timing->sjw = 3;
 28292   007130  EE20 F001          	lfsr	2,1
 28293   007134  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28294   007136  26D9               	addwf	fsr2l,f,c
 28295   007138  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28296   00713A  22DA               	addwfc	fsr2h,f,c
 28297   00713C  0E03               	movlw	3
 28298   00713E  6EDF               	movwf	indf2,c
 28299   007140                     
 28300                           ; BSR set to: 0
 28301                           ;canlib/util/timing_util.c: 32:             timing->btlmode = 1;
 28302   007140  EE20 F006          	lfsr	2,6
 28303   007144  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28304   007146  26D9               	addwf	fsr2l,f,c
 28305   007148  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28306   00714A  22DA               	addwfc	fsr2h,f,c
 28307   00714C  0E01               	movlw	1
 28308   00714E  6EDF               	movwf	indf2,c
 28309   007150                     
 28310                           ; BSR set to: 0
 28311                           ;canlib/util/timing_util.c: 33:             timing->sam = 0;
 28312   007150  EE20 F002          	lfsr	2,2
 28313   007154  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28314   007156  26D9               	addwf	fsr2l,f,c
 28315   007158  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28316   00715A  22DA               	addwfc	fsr2h,f,c
 28317   00715C  6ADF               	clrf	indf2,c
 28318   00715E                     
 28319                           ; BSR set to: 0
 28320                           ;canlib/util/timing_util.c: 34:             timing->seg1ph = 4;
 28321   00715E  EE20 F003          	lfsr	2,3
 28322   007162  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28323   007164  26D9               	addwf	fsr2l,f,c
 28324   007166  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28325   007168  22DA               	addwfc	fsr2h,f,c
 28326   00716A  0E04               	movlw	4
 28327   00716C  6EDF               	movwf	indf2,c
 28328   00716E                     
 28329                           ; BSR set to: 0
 28330                           ;canlib/util/timing_util.c: 35:             timing->prseg = 0;
 28331   00716E  EE20 F005          	lfsr	2,5
 28332   007172  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28333   007174  26D9               	addwf	fsr2l,f,c
 28334   007176  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28335   007178  22DA               	addwfc	fsr2h,f,c
 28336   00717A  6ADF               	clrf	indf2,c
 28337   00717C                     
 28338                           ; BSR set to: 0
 28339                           ;canlib/util/timing_util.c: 36:             timing->seg2ph = 4;
 28340   00717C  EE20 F004          	lfsr	2,4
 28341   007180  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
 28342   007182  26D9               	addwf	fsr2l,f,c
 28343   007184  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
 28344   007186  22DA               	addwfc	fsr2h,f,c
 28345   007188  0E04               	movlw	4
 28346   00718A  6EDF               	movwf	indf2,c
 28347   00718C  EF18  F039         	goto	l234
 28348   007190                     l17665:
 28349   007190  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
 28350   007194  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
 28351   007198  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
 28352   00719C  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
 28353                           
 28354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
 28355                           ; Switch size 1, requested type "simple"
 28356                           ; Number of cases is 2, Range of values is 0 to 2
 28357                           ; switch strategies available:
 28358                           ; Name         Instructions Cycles
 28359                           ; simple_byte            7     4 (average)
 28360                           ;	Chosen strategy is simple_byte
 28361   0071A0  0100               	movlb	0	; () banked
 28362   0071A2  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
 28363   0071A4  0A00               	xorlw	0	; case 0
 28364   0071A6  B4D8               	btfsc	status,2,c
 28365   0071A8  EF06  F039         	goto	l19179
 28366   0071AC  0A02               	xorlw	2	; case 2
 28367   0071AE  B4D8               	btfsc	status,2,c
 28368   0071B0  EF11  F039         	goto	l19181
 28369   0071B4  EF18  F039         	goto	l234
 28370   0071B8                     l19173:
 28371                           
 28372                           ; BSR set to: 0
 28373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28374                           ; Switch size 1, requested type "simple"
 28375                           ; Number of cases is 1, Range of values is 141 to 141
 28376                           ; switch strategies available:
 28377                           ; Name         Instructions Cycles
 28378                           ; simple_byte            4     3 (average)
 28379                           ;	Chosen strategy is simple_byte
 28380   0071B8  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28381   0071BA  0A8D               	xorlw	141	; case 141
 28382   0071BC  B4D8               	btfsc	status,2,c
 28383   0071BE  EFE3  F038         	goto	l19183
 28384   0071C2  EF18  F039         	goto	l234
 28385   0071C6                     l19183:
 28386                           
 28387                           ; BSR set to: 0
 28388                           ; Switch size 1, requested type "simple"
 28389                           ; Number of cases is 1, Range of values is 128 to 128
 28390                           ; switch strategies available:
 28391                           ; Name         Instructions Cycles
 28392                           ; simple_byte            4     3 (average)
 28393                           ;	Chosen strategy is simple_byte
 28394   0071C6  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28395   0071C8  0A80               	xorlw	128	; case 128
 28396   0071CA  B4D8               	btfsc	status,2,c
 28397   0071CC  EF91  F038         	goto	l17647
 28398   0071D0  EF18  F039         	goto	l234
 28399   0071D4                     l19175:
 28400                           
 28401                           ; BSR set to: 0
 28402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28403                           ; Switch size 1, requested type "simple"
 28404                           ; Number of cases is 1, Range of values is 27 to 27
 28405                           ; switch strategies available:
 28406                           ; Name         Instructions Cycles
 28407                           ; simple_byte            4     3 (average)
 28408                           ;	Chosen strategy is simple_byte
 28409   0071D4  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28410   0071D6  0A1B               	xorlw	27	; case 27
 28411   0071D8  B4D8               	btfsc	status,2,c
 28412   0071DA  EFF1  F038         	goto	l19185
 28413   0071DE  EF18  F039         	goto	l234
 28414   0071E2                     l19185:
 28415                           
 28416                           ; BSR set to: 0
 28417                           ; Switch size 1, requested type "simple"
 28418                           ; Number of cases is 1, Range of values is 0 to 0
 28419                           ; switch strategies available:
 28420                           ; Name         Instructions Cycles
 28421                           ; simple_byte            4     3 (average)
 28422                           ;	Chosen strategy is simple_byte
 28423   0071E2  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28424   0071E4  0A00               	xorlw	0	; case 0
 28425   0071E6  B4D8               	btfsc	status,2,c
 28426   0071E8  EF59  F038         	goto	l17631
 28427   0071EC  EF18  F039         	goto	l234
 28428   0071F0                     l19177:
 28429                           
 28430                           ; BSR set to: 0
 28431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28432                           ; Switch size 1, requested type "simple"
 28433                           ; Number of cases is 1, Range of values is 108 to 108
 28434                           ; switch strategies available:
 28435                           ; Name         Instructions Cycles
 28436                           ; simple_byte            4     3 (average)
 28437                           ;	Chosen strategy is simple_byte
 28438   0071F0  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
 28439   0071F2  0A6C               	xorlw	108	; case 108
 28440   0071F4  B4D8               	btfsc	status,2,c
 28441   0071F6  EFFF  F038         	goto	l19187
 28442   0071FA  EF18  F039         	goto	l234
 28443   0071FE                     l19187:
 28444                           
 28445                           ; BSR set to: 0
 28446                           ; Switch size 1, requested type "simple"
 28447                           ; Number of cases is 1, Range of values is 0 to 0
 28448                           ; switch strategies available:
 28449                           ; Name         Instructions Cycles
 28450                           ; simple_byte            4     3 (average)
 28451                           ;	Chosen strategy is simple_byte
 28452   0071FE  5166               	movf	??_can_generate_timing_params& (0+255),w,b
 28453   007200  0A00               	xorlw	0	; case 0
 28454   007202  B4D8               	btfsc	status,2,c
 28455   007204  EF21  F038         	goto	l17615
 28456   007208  EF18  F039         	goto	l234
 28457   00720C                     l19179:
 28458                           
 28459                           ; BSR set to: 0
 28460                           ; Switch size 1, requested type "simple"
 28461                           ; Number of cases is 2, Range of values is 91 to 183
 28462                           ; switch strategies available:
 28463                           ; Name         Instructions Cycles
 28464                           ; simple_byte            7     4 (average)
 28465                           ;	Chosen strategy is simple_byte
 28466   00720C  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 28467   00720E  0A5B               	xorlw	91	; case 91
 28468   007210  B4D8               	btfsc	status,2,c
 28469   007212  EFDC  F038         	goto	l19173
 28470   007216  0AEC               	xorlw	236	; case 183
 28471   007218  B4D8               	btfsc	status,2,c
 28472   00721A  EFEA  F038         	goto	l19175
 28473   00721E  EF18  F039         	goto	l234
 28474   007222                     l19181:
 28475                           
 28476                           ; BSR set to: 0
 28477                           ; Switch size 1, requested type "simple"
 28478                           ; Number of cases is 1, Range of values is 220 to 220
 28479                           ; switch strategies available:
 28480                           ; Name         Instructions Cycles
 28481                           ; simple_byte            4     3 (average)
 28482                           ;	Chosen strategy is simple_byte
 28483   007222  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
 28484   007224  0ADC               	xorlw	220	; case 220
 28485   007226  B4D8               	btfsc	status,2,c
 28486   007228  EFF8  F038         	goto	l19177
 28487   00722C  EF18  F039         	goto	l234
 28488   007230                     l234:
 28489                           
 28490                           ; BSR set to: 0
 28491   007230  0012               	return		;funcret
 28492   007232                     __end_of_can_generate_timing_params:
 28493                           	callstack 0
 28494                           
 28495 ;; *************** function _build_analog_data_msg *****************
 28496 ;; Defined at:
 28497 ;;		line 263 in file "canlib/can_common.c"
 28498 ;; Parameters:    Size  Location     Type
 28499 ;;  timestamp       4    8[BANK0 ] unsigned long 
 28500 ;;  sensor_id       1   12[BANK0 ] enum E84
 28501 ;;  sensor_data     2   13[BANK0 ] unsigned short 
 28502 ;;  output          2   15[BANK0 ] PTR struct .
 28503 ;;		 -> main@msg(11), 
 28504 ;; Auto vars:     Size  Location     Type
 28505 ;;		None
 28506 ;; Return value:  Size  Location     Type
 28507 ;;                  1    wreg      _Bool 
 28508 ;; Registers used:
 28509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28510 ;; Tracked objects:
 28511 ;;		On entry : 0/0
 28512 ;;		On exit  : 0/0
 28513 ;;		Unchanged: 0/0
 28514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28515 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28518 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28519 ;;Total ram usage:        9 bytes
 28520 ;; Hardware stack levels used: 1
 28521 ;; Hardware stack levels required when called: 6
 28522 ;; This function calls:
 28523 ;;		_write_timestamp_2bytes
 28524 ;; This function is called by:
 28525 ;;		_main
 28526 ;; This function uses a non-reentrant model
 28527 ;;
 28528                           
 28529                           	psect	text106
 28530   009486                     __ptext106:
 28531                           	callstack 0
 28532   009486                     _build_analog_data_msg:
 28533                           	callstack 24
 28534   009486                     
 28535                           ;canlib/can_common.c: 263: _Bool build_analog_data_msg(uint32_t timestamp,;canlib/can_co
      +                          mmon.c: 264:                            enum SENSOR_ID sensor_id,;canlib/can_common.c: 2
      +                          65:                            uint16_t sensor_data,;canlib/can_common.c: 266:          
      +                                            can_msg_t *output);canlib/can_common.c: 267: {;canlib/can_common.c: 26
      +                          8:     if (!output) { return 0; }
 28536   009486  0100               	movlb	0	; () banked
 28537   009488  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28538   00948A  1170               	iorwf	(build_analog_data_msg@output+1)& (0+255),w,b
 28539   00948C  A4D8               	btfss	status,2,c
 28540   00948E  EF4B  F04A         	goto	u21951
 28541   009492  EF4D  F04A         	goto	u21950
 28542   009496                     u21951:
 28543   009496  EF4F  F04A         	goto	l17719
 28544   00949A                     u21950:
 28545   00949A  EF86  F04A         	goto	l310
 28546   00949E                     l17719:
 28547                           
 28548                           ; BSR set to: 0
 28549                           ;canlib/can_common.c: 270:     output->sid = 0x6A0 | 0x0C;
 28550   00949E  0060  F1BF  FFD9   	movff	build_analog_data_msg@output,fsr2l
 28551   0094A4  0060  F1C3  FFDA   	movff	build_analog_data_msg@output+1,fsr2h
 28552   0094AA  0EAC               	movlw	172
 28553   0094AC  6EDE               	movwf	postinc2,c
 28554   0094AE  0E06               	movlw	6
 28555   0094B0  6EDD               	movwf	postdec2,c
 28556   0094B2                     
 28557                           ; BSR set to: 0
 28558                           ;canlib/can_common.c: 271:     write_timestamp_2bytes(timestamp, output);
 28559   0094B2  C068  F060         	movff	build_analog_data_msg@timestamp,write_timestamp_2bytes@timestamp
 28560   0094B6  C069  F061         	movff	build_analog_data_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
 28561   0094BA  C06F  F062         	movff	build_analog_data_msg@output,write_timestamp_2bytes@output
 28562   0094BE  C070  F063         	movff	build_analog_data_msg@output+1,write_timestamp_2bytes@output+1
 28563   0094C2  EC92  F051         	call	_write_timestamp_2bytes	;wreg free
 28564   0094C6                     
 28565                           ;canlib/can_common.c: 273:     output->data[2] = (uint8_t) sensor_id;
 28566   0094C6  0100               	movlb	0	; () banked
 28567   0094C8  EE20 F005          	lfsr	2,5
 28568   0094CC  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28569   0094CE  26D9               	addwf	fsr2l,f,c
 28570   0094D0  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28571   0094D2  22DA               	addwfc	fsr2h,f,c
 28572   0094D4  0060  F1B3  FFDF   	movff	build_analog_data_msg@sensor_id,indf2
 28573   0094DA                     
 28574                           ; BSR set to: 0
 28575                           ;canlib/can_common.c: 274:     output->data[3] = (sensor_data >> 8) & 0xff;
 28576   0094DA  EE20 F006          	lfsr	2,6
 28577   0094DE  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28578   0094E0  26D9               	addwf	fsr2l,f,c
 28579   0094E2  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28580   0094E4  22DA               	addwfc	fsr2h,f,c
 28581   0094E6  516E               	movf	(build_analog_data_msg@sensor_data+1)& (0+255),w,b
 28582   0094E8  6EDF               	movwf	indf2,c
 28583   0094EA                     
 28584                           ; BSR set to: 0
 28585                           ;canlib/can_common.c: 275:     output->data[4] = (sensor_data >> 0) & 0xff;
 28586   0094EA  EE20 F007          	lfsr	2,7
 28587   0094EE  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28588   0094F0  26D9               	addwf	fsr2l,f,c
 28589   0094F2  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28590   0094F4  22DA               	addwfc	fsr2h,f,c
 28591   0094F6  0060  F1B7  FFDF   	movff	build_analog_data_msg@sensor_data,indf2
 28592   0094FC                     
 28593                           ; BSR set to: 0
 28594                           ;canlib/can_common.c: 277:     output->data_len = 5;
 28595   0094FC  EE20 F002          	lfsr	2,2
 28596   009500  516F               	movf	build_analog_data_msg@output& (0+255),w,b
 28597   009502  26D9               	addwf	fsr2l,f,c
 28598   009504  5170               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
 28599   009506  22DA               	addwfc	fsr2h,f,c
 28600   009508  0E05               	movlw	5
 28601   00950A  6EDF               	movwf	indf2,c
 28602   00950C                     l310:
 28603                           
 28604                           ; BSR set to: 0
 28605   00950C  0012               	return		;funcret
 28606   00950E                     __end_of_build_analog_data_msg:
 28607                           	callstack 0
 28608                           
 28609 ;; *************** function _write_timestamp_2bytes *****************
 28610 ;; Defined at:
 28611 ;;		line 14 in file "canlib/can_common.c"
 28612 ;; Parameters:    Size  Location     Type
 28613 ;;  timestamp       2    0[BANK0 ] unsigned short 
 28614 ;;  output          2    2[BANK0 ] PTR struct .
 28615 ;;		 -> main@msg(11), 
 28616 ;; Auto vars:     Size  Location     Type
 28617 ;;		None
 28618 ;; Return value:  Size  Location     Type
 28619 ;;                  1    wreg      void 
 28620 ;; Registers used:
 28621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28622 ;; Tracked objects:
 28623 ;;		On entry : 0/0
 28624 ;;		On exit  : 0/0
 28625 ;;		Unchanged: 0/0
 28626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28630 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28631 ;;Total ram usage:        4 bytes
 28632 ;; Hardware stack levels used: 1
 28633 ;; Hardware stack levels required when called: 5
 28634 ;; This function calls:
 28635 ;;		Nothing
 28636 ;; This function is called by:
 28637 ;;		_build_analog_data_msg
 28638 ;;		_build_imu_data_msg
 28639 ;; This function uses a non-reentrant model
 28640 ;;
 28641                           
 28642                           	psect	text107
 28643   00A324                     __ptext107:
 28644                           	callstack 0
 28645   00A324                     _write_timestamp_2bytes:
 28646                           	callstack 24
 28647   00A324                     
 28648                           ;canlib/can_common.c: 14: static void write_timestamp_2bytes(uint16_t timestamp, can_msg
      +                          _t *output);canlib/can_common.c: 15: {;canlib/can_common.c: 16:     output->data[0] = (t
      +                          imestamp >> 8) & 0xff;
 28649   00A324  0100               	movlb	0	; () banked
 28650   00A326  EE20 F003          	lfsr	2,3
 28651   00A32A  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
 28652   00A32C  26D9               	addwf	fsr2l,f,c
 28653   00A32E  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
 28654   00A330  22DA               	addwfc	fsr2h,f,c
 28655   00A332  5161               	movf	(write_timestamp_2bytes@timestamp+1)& (0+255),w,b
 28656   00A334  6EDF               	movwf	indf2,c
 28657                           
 28658                           ;canlib/can_common.c: 17:     output->data[1] = (timestamp >> 0) & 0xff;
 28659   00A336  EE20 F004          	lfsr	2,4
 28660   00A33A  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
 28661   00A33C  26D9               	addwf	fsr2l,f,c
 28662   00A33E  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
 28663   00A340  22DA               	addwfc	fsr2h,f,c
 28664   00A342  0060  F183  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
 28665   00A348                     
 28666                           ; BSR set to: 0
 28667   00A348  0012               	return		;funcret
 28668   00A34A                     __end_of_write_timestamp_2bytes:
 28669                           	callstack 0
 28670                           
 28671 ;; *************** function _SYSTEM_Initialize *****************
 28672 ;; Defined at:
 28673 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28674 ;; Parameters:    Size  Location     Type
 28675 ;;		None
 28676 ;; Auto vars:     Size  Location     Type
 28677 ;;		None
 28678 ;; Return value:  Size  Location     Type
 28679 ;;                  1    wreg      void 
 28680 ;; Registers used:
 28681 ;;		wreg, status,2, cstack
 28682 ;; Tracked objects:
 28683 ;;		On entry : 0/0
 28684 ;;		On exit  : 0/0
 28685 ;;		Unchanged: 0/0
 28686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28691 ;;Total ram usage:        0 bytes
 28692 ;; Hardware stack levels used: 1
 28693 ;; Hardware stack levels required when called: 6
 28694 ;; This function calls:
 28695 ;;		_OSCILLATOR_Initialize
 28696 ;;		_PIN_MANAGER_Initialize
 28697 ;;		_PMD_Initialize
 28698 ;;		_SPI1_Initialize
 28699 ;; This function is called by:
 28700 ;;		_main
 28701 ;; This function uses a non-reentrant model
 28702 ;;
 28703                           
 28704                           	psect	text108
 28705   00A4A2                     __ptext108:
 28706                           	callstack 0
 28707   00A4A2                     _SYSTEM_Initialize:
 28708                           	callstack 24
 28709   00A4A2                     
 28710                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 28711   00A4A2  ECB8  F051         	call	_PMD_Initialize	;wreg free
 28712                           
 28713                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 28714   00A4A6  ECB8  F04D         	call	_PIN_MANAGER_Initialize	;wreg free
 28715                           
 28716                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 28717   00A4AA  EC2F  F052         	call	_OSCILLATOR_Initialize	;wreg free
 28718                           
 28719                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
 28720   00A4AE  EC0A  F052         	call	_SPI1_Initialize	;wreg free
 28721   00A4B2  0012               	return		;funcret
 28722   00A4B4                     __end_of_SYSTEM_Initialize:
 28723                           	callstack 0
 28724                           
 28725 ;; *************** function _SPI1_Initialize *****************
 28726 ;; Defined at:
 28727 ;;		line 66 in file "mcc_generated_files/spi1.c"
 28728 ;; Parameters:    Size  Location     Type
 28729 ;;		None
 28730 ;; Auto vars:     Size  Location     Type
 28731 ;;		None
 28732 ;; Return value:  Size  Location     Type
 28733 ;;                  1    wreg      void 
 28734 ;; Registers used:
 28735 ;;		wreg, status,2
 28736 ;; Tracked objects:
 28737 ;;		On entry : 0/0
 28738 ;;		On exit  : 0/0
 28739 ;;		Unchanged: 0/0
 28740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28745 ;;Total ram usage:        0 bytes
 28746 ;; Hardware stack levels used: 1
 28747 ;; Hardware stack levels required when called: 5
 28748 ;; This function calls:
 28749 ;;		Nothing
 28750 ;; This function is called by:
 28751 ;;		_SYSTEM_Initialize
 28752 ;; This function uses a non-reentrant model
 28753 ;;
 28754                           
 28755                           	psect	text109
 28756   00A414                     __ptext109:
 28757                           	callstack 0
 28758   00A414                     _SPI1_Initialize:
 28759                           	callstack 24
 28760   00A414                     
 28761                           ;mcc_generated_files/spi1.c: 69:     SPI1CON0 = 0x02;
 28762   00A414  0E02               	movlw	2
 28763   00A416  013D               	movlb	61	; () banked
 28764   00A418  6F14               	movwf	20,b	;volatile
 28765                           
 28766                           ;mcc_generated_files/spi1.c: 71:     SPI1CON1 = 0x40;
 28767   00A41A  0E40               	movlw	64
 28768   00A41C  6F15               	movwf	21,b	;volatile
 28769                           
 28770                           ;mcc_generated_files/spi1.c: 73:     SPI1CON2 = 0x00;
 28771   00A41E  0E00               	movlw	0
 28772   00A420  6F16               	movwf	22,b	;volatile
 28773                           
 28774                           ;mcc_generated_files/spi1.c: 75:     SPI1CLK = 0x00;
 28775   00A422  0E00               	movlw	0
 28776   00A424  6F1C               	movwf	28,b	;volatile
 28777                           
 28778                           ;mcc_generated_files/spi1.c: 77:     SPI1BAUD = 0x00;
 28779   00A426  0E00               	movlw	0
 28780   00A428  6F19               	movwf	25,b	;volatile
 28781   00A42A                     
 28782                           ; BSR set to: 61
 28783                           ;mcc_generated_files/spi1.c: 78:     TRISCbits.TRISC3 = 0;
 28784   00A42A  96C4               	bcf	196,3,c	;volatile
 28785   00A42C                     
 28786                           ; BSR set to: 61
 28787   00A42C  0012               	return		;funcret
 28788   00A42E                     __end_of_SPI1_Initialize:
 28789                           	callstack 0
 28790                           
 28791 ;; *************** function _PMD_Initialize *****************
 28792 ;; Defined at:
 28793 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28794 ;; Parameters:    Size  Location     Type
 28795 ;;		None
 28796 ;; Auto vars:     Size  Location     Type
 28797 ;;		None
 28798 ;; Return value:  Size  Location     Type
 28799 ;;                  1    wreg      void 
 28800 ;; Registers used:
 28801 ;;		wreg, status,2
 28802 ;; Tracked objects:
 28803 ;;		On entry : 0/0
 28804 ;;		On exit  : 0/0
 28805 ;;		Unchanged: 0/0
 28806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28811 ;;Total ram usage:        0 bytes
 28812 ;; Hardware stack levels used: 1
 28813 ;; Hardware stack levels required when called: 5
 28814 ;; This function calls:
 28815 ;;		Nothing
 28816 ;; This function is called by:
 28817 ;;		_SYSTEM_Initialize
 28818 ;; This function uses a non-reentrant model
 28819 ;;
 28820                           
 28821                           	psect	text110
 28822   00A370                     __ptext110:
 28823                           	callstack 0
 28824   00A370                     _PMD_Initialize:
 28825                           	callstack 24
 28826   00A370                     
 28827                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
 28828   00A370  0E00               	movlw	0
 28829   00A372  0139               	movlb	57	; () banked
 28830   00A374  6FC0               	movwf	192,b	;volatile
 28831                           
 28832                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
 28833   00A376  0E00               	movlw	0
 28834   00A378  6FC1               	movwf	193,b	;volatile
 28835                           
 28836                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
 28837   00A37A  0E00               	movlw	0
 28838   00A37C  6FC2               	movwf	194,b	;volatile
 28839                           
 28840                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
 28841   00A37E  0E00               	movlw	0
 28842   00A380  6FC3               	movwf	195,b	;volatile
 28843                           
 28844                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
 28845   00A382  0E00               	movlw	0
 28846   00A384  6FC4               	movwf	196,b	;volatile
 28847                           
 28848                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
 28849   00A386  0E00               	movlw	0
 28850   00A388  6FC5               	movwf	197,b	;volatile
 28851                           
 28852                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
 28853   00A38A  0E00               	movlw	0
 28854   00A38C  6FC6               	movwf	198,b	;volatile
 28855                           
 28856                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
 28857   00A38E  0E00               	movlw	0
 28858   00A390  6FC7               	movwf	199,b	;volatile
 28859   00A392                     
 28860                           ; BSR set to: 57
 28861   00A392  0012               	return		;funcret
 28862   00A394                     __end_of_PMD_Initialize:
 28863                           	callstack 0
 28864                           
 28865 ;; *************** function _PIN_MANAGER_Initialize *****************
 28866 ;; Defined at:
 28867 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 28868 ;; Parameters:    Size  Location     Type
 28869 ;;		None
 28870 ;; Auto vars:     Size  Location     Type
 28871 ;;		None
 28872 ;; Return value:  Size  Location     Type
 28873 ;;                  1    wreg      void 
 28874 ;; Registers used:
 28875 ;;		wreg, status,2
 28876 ;; Tracked objects:
 28877 ;;		On entry : 0/0
 28878 ;;		On exit  : 0/0
 28879 ;;		Unchanged: 0/0
 28880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28885 ;;Total ram usage:        0 bytes
 28886 ;; Hardware stack levels used: 1
 28887 ;; Hardware stack levels required when called: 5
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_SYSTEM_Initialize
 28892 ;; This function uses a non-reentrant model
 28893 ;;
 28894                           
 28895                           	psect	text111
 28896   009B70                     __ptext111:
 28897                           	callstack 0
 28898   009B70                     _PIN_MANAGER_Initialize:
 28899                           	callstack 24
 28900   009B70                     
 28901                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 28902   009B70  0E00               	movlw	0
 28903   009B72  6EBA               	movwf	186,c	;volatile
 28904                           
 28905                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 28906   009B74  0E00               	movlw	0
 28907   009B76  6EBB               	movwf	187,c	;volatile
 28908                           
 28909                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 28910   009B78  0E00               	movlw	0
 28911   009B7A  6EBC               	movwf	188,c	;volatile
 28912                           
 28913                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDF;
 28914   009B7C  0EDF               	movlw	223
 28915   009B7E  6EC2               	movwf	194,c	;volatile
 28916                           
 28917                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF9;
 28918   009B80  0EF9               	movlw	249
 28919   009B82  6EC3               	movwf	195,c	;volatile
 28920                           
 28921                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD7;
 28922   009B84  0ED7               	movlw	215
 28923   009B86  6EC4               	movwf	196,c	;volatile
 28924                           
 28925                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC7;
 28926   009B88  0EC7               	movlw	199
 28927   009B8A  013A               	movlb	58	; () banked
 28928   009B8C  6F60               	movwf	96,b	;volatile
 28929                           
 28930                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF9;
 28931   009B8E  0EF9               	movlw	249
 28932   009B90  6F50               	movwf	80,b	;volatile
 28933                           
 28934                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xDF;
 28935   009B92  0EDF               	movlw	223
 28936   009B94  6F40               	movwf	64,b	;volatile
 28937                           
 28938                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 28939   009B96  0E00               	movlw	0
 28940   009B98  6F81               	movwf	129,b	;volatile
 28941                           
 28942                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 28943   009B9A  0E00               	movlw	0
 28944   009B9C  6F51               	movwf	81,b	;volatile
 28945                           
 28946                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 28947   009B9E  0E00               	movlw	0
 28948   009BA0  6F41               	movwf	65,b	;volatile
 28949                           
 28950                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 28951   009BA2  0E00               	movlw	0
 28952   009BA4  6F61               	movwf	97,b	;volatile
 28953                           
 28954                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 28955   009BA6  0E00               	movlw	0
 28956   009BA8  6F42               	movwf	66,b	;volatile
 28957                           
 28958                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x05;
 28959   009BAA  0E05               	movlw	5
 28960   009BAC  6F52               	movwf	82,b	;volatile
 28961                           
 28962                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 28963   009BAE  0E00               	movlw	0
 28964   009BB0  6F62               	movwf	98,b	;volatile
 28965   009BB2                     
 28966                           ; BSR set to: 58
 28967                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 28968   009BB2  6943               	setf	67,b	;volatile
 28969   009BB4                     
 28970                           ; BSR set to: 58
 28971                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 28972   009BB4  6953               	setf	83,b	;volatile
 28973   009BB6                     
 28974                           ; BSR set to: 58
 28975                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 28976   009BB6  6963               	setf	99,b	;volatile
 28977   009BB8                     
 28978                           ; BSR set to: 58
 28979                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 28980   009BB8  6944               	setf	68,b	;volatile
 28981   009BBA                     
 28982                           ; BSR set to: 58
 28983                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 28984   009BBA  6954               	setf	84,b	;volatile
 28985   009BBC                     
 28986                           ; BSR set to: 58
 28987                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 28988   009BBC  6964               	setf	100,b	;volatile
 28989                           
 28990                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 28991   009BBE  0E08               	movlw	8
 28992   009BC0  6F84               	movwf	132,b	;volatile
 28993                           
 28994                           ;mcc_generated_files/pin_manager.c: 115:     SPI1SCKPPS = 0x13;
 28995   009BC2  0E13               	movlw	19
 28996   009BC4  6FE0               	movwf	224,b	;volatile
 28997                           
 28998                           ;mcc_generated_files/pin_manager.c: 116:     RC3PPS = 0x1E;
 28999   009BC6  0E1E               	movlw	30
 29000   009BC8  6F13               	movwf	19,b	;volatile
 29001                           
 29002                           ;mcc_generated_files/pin_manager.c: 117:     RC5PPS = 0x1F;
 29003   009BCA  0E1F               	movlw	31
 29004   009BCC  6F15               	movwf	21,b	;volatile
 29005                           
 29006                           ;mcc_generated_files/pin_manager.c: 118:     SPI1SDIPPS = 0x14;
 29007   009BCE  0E14               	movlw	20
 29008   009BD0  6FE1               	movwf	225,b	;volatile
 29009   009BD2                     
 29010                           ; BSR set to: 58
 29011   009BD2  0012               	return		;funcret
 29012   009BD4                     __end_of_PIN_MANAGER_Initialize:
 29013                           	callstack 0
 29014                           
 29015 ;; *************** function _OSCILLATOR_Initialize *****************
 29016 ;; Defined at:
 29017 ;;		line 58 in file "mcc_generated_files/mcc.c"
 29018 ;; Parameters:    Size  Location     Type
 29019 ;;		None
 29020 ;; Auto vars:     Size  Location     Type
 29021 ;;		None
 29022 ;; Return value:  Size  Location     Type
 29023 ;;                  1    wreg      void 
 29024 ;; Registers used:
 29025 ;;		wreg, status,2
 29026 ;; Tracked objects:
 29027 ;;		On entry : 0/0
 29028 ;;		On exit  : 0/0
 29029 ;;		Unchanged: 0/0
 29030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29035 ;;Total ram usage:        0 bytes
 29036 ;; Hardware stack levels used: 1
 29037 ;; Hardware stack levels required when called: 5
 29038 ;; This function calls:
 29039 ;;		Nothing
 29040 ;; This function is called by:
 29041 ;;		_SYSTEM_Initialize
 29042 ;; This function uses a non-reentrant model
 29043 ;;
 29044                           
 29045                           	psect	text112
 29046   00A45E                     __ptext112:
 29047                           	callstack 0
 29048   00A45E                     _OSCILLATOR_Initialize:
 29049                           	callstack 24
 29050   00A45E                     
 29051                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x70;
 29052   00A45E  0E70               	movlw	112
 29053   00A460  0139               	movlb	57	; () banked
 29054   00A462  6FD9               	movwf	217,b	;volatile
 29055                           
 29056                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
 29057   00A464  0E00               	movlw	0
 29058   00A466  6FDB               	movwf	219,b	;volatile
 29059                           
 29060                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
 29061   00A468  0E00               	movlw	0
 29062   00A46A  6FDD               	movwf	221,b	;volatile
 29063                           
 29064                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
 29065   00A46C  0E02               	movlw	2
 29066   00A46E  6FDF               	movwf	223,b	;volatile
 29067                           
 29068                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 29069   00A470  0E00               	movlw	0
 29070   00A472  6FDE               	movwf	222,b	;volatile
 29071   00A474                     
 29072                           ; BSR set to: 57
 29073   00A474  0012               	return		;funcret
 29074   00A476                     __end_of_OSCILLATOR_Initialize:
 29075                           	callstack 0
 29076                           
 29077 ;; *************** function _SET_ACCEL_I2C_ADDR *****************
 29078 ;; Defined at:
 29079 ;;		line 19 in file "main.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;  addr            1    wreg     unsigned char 
 29082 ;; Auto vars:     Size  Location     Type
 29083 ;;  addr            1    0[BANK0 ] unsigned char 
 29084 ;; Return value:  Size  Location     Type
 29085 ;;                  1    wreg      void 
 29086 ;; Registers used:
 29087 ;;		wreg, status,2, status,0
 29088 ;; Tracked objects:
 29089 ;;		On entry : 0/0
 29090 ;;		On exit  : 0/0
 29091 ;;		Unchanged: 0/0
 29092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29097 ;;Total ram usage:        1 bytes
 29098 ;; Hardware stack levels used: 1
 29099 ;; Hardware stack levels required when called: 5
 29100 ;; This function calls:
 29101 ;;		Nothing
 29102 ;; This function is called by:
 29103 ;;		_main
 29104 ;; This function uses a non-reentrant model
 29105 ;;
 29106                           
 29107                           	psect	text113
 29108   00A3F6                     __ptext113:
 29109                           	callstack 0
 29110   00A3F6                     _SET_ACCEL_I2C_ADDR:
 29111                           	callstack 25
 29112                           
 29113                           ; BSR set to: 57
 29114                           ;incstack = 0
 29115                           ;SET_ACCEL_I2C_ADDR@addr stored from wreg
 29116   00A3F6  0100               	movlb	0	; () banked
 29117   00A3F8  6F60               	movwf	SET_ACCEL_I2C_ADDR@addr& (0+255),b
 29118   00A3FA                     
 29119                           ;main.c: 21:     LATC2 = (addr == 0x19);
 29120   00A3FA  0E19               	movlw	25
 29121   00A3FC  0100               	movlb	0	; () banked
 29122   00A3FE  1960               	xorwf	SET_ACCEL_I2C_ADDR@addr& (0+255),w,b
 29123   00A400  B4D8               	btfsc	status,2,c
 29124   00A402  EF05  F052         	goto	u22261
 29125   00A406  EF08  F052         	goto	u22260
 29126   00A40A                     u22261:
 29127   00A40A  84BC               	bsf	16316,2,c	;volatile
 29128   00A40C  EF09  F052         	goto	u22275
 29129   00A410                     u22260:
 29130   00A410  94BC               	bcf	16316,2,c	;volatile
 29131   00A412                     u22275:
 29132   00A412  0012               	return		;funcret
 29133   00A414                     __end_of_SET_ACCEL_I2C_ADDR:
 29134                           	callstack 0
 29135                           
 29136 ;; *************** function _ADCC_Initialize *****************
 29137 ;; Defined at:
 29138 ;;		line 45 in file "adcc.c"
 29139 ;; Parameters:    Size  Location     Type
 29140 ;;		None
 29141 ;; Auto vars:     Size  Location     Type
 29142 ;;		None
 29143 ;; Return value:  Size  Location     Type
 29144 ;;                  1    wreg      void 
 29145 ;; Registers used:
 29146 ;;		wreg, status,2
 29147 ;; Tracked objects:
 29148 ;;		On entry : 0/0
 29149 ;;		On exit  : 0/0
 29150 ;;		Unchanged: 0/0
 29151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29156 ;;Total ram usage:        0 bytes
 29157 ;; Hardware stack levels used: 1
 29158 ;; Hardware stack levels required when called: 5
 29159 ;; This function calls:
 29160 ;;		Nothing
 29161 ;; This function is called by:
 29162 ;;		_main
 29163 ;; This function uses a non-reentrant model
 29164 ;;
 29165                           
 29166                           	psect	text114
 29167   009C36                     __ptext114:
 29168                           	callstack 0
 29169   009C36                     _ADCC_Initialize:
 29170                           	callstack 25
 29171   009C36                     
 29172                           ;adcc.c: 49:     ADLTHL = 0x0;
 29173   009C36  0E00               	movlw	0
 29174   009C38  013E               	movlb	62	; () banked
 29175   009C3A  6FDE               	movwf	222,b	;volatile
 29176                           
 29177                           ;adcc.c: 51:     ADLTHH = 0x0;
 29178   009C3C  0E00               	movlw	0
 29179   009C3E  6FDF               	movwf	223,b	;volatile
 29180                           
 29181                           ;adcc.c: 53:     ADUTHL = 0x0;
 29182   009C40  0E00               	movlw	0
 29183   009C42  6FE0               	movwf	224,b	;volatile
 29184                           
 29185                           ;adcc.c: 55:     ADUTHH = 0x0;
 29186   009C44  0E00               	movlw	0
 29187   009C46  6FE1               	movwf	225,b	;volatile
 29188                           
 29189                           ;adcc.c: 57:     ADSTPTL = 0x0;
 29190   009C48  0E00               	movlw	0
 29191   009C4A  6FE4               	movwf	228,b	;volatile
 29192                           
 29193                           ;adcc.c: 59:     ADSTPTH = 0x0;
 29194   009C4C  0E00               	movlw	0
 29195   009C4E  6FE5               	movwf	229,b	;volatile
 29196                           
 29197                           ;adcc.c: 61:     ADACCU = 0x0;
 29198   009C50  0E00               	movlw	0
 29199   009C52  6FEA               	movwf	234,b	;volatile
 29200                           
 29201                           ;adcc.c: 63:     ADRPT = 0x0;
 29202   009C54  0E00               	movlw	0
 29203   009C56  6FEC               	movwf	236,b	;volatile
 29204                           
 29205                           ;adcc.c: 65:     ADPCH = 0x0;
 29206   009C58  0E00               	movlw	0
 29207   009C5A  6FF1               	movwf	241,b	;volatile
 29208                           
 29209                           ;adcc.c: 67:     ADACQL = 0x1;
 29210   009C5C  0E01               	movlw	1
 29211   009C5E  6FF3               	movwf	243,b	;volatile
 29212                           
 29213                           ;adcc.c: 69:     ADACQH = 0x0;
 29214   009C60  0E00               	movlw	0
 29215   009C62  6FF4               	movwf	244,b	;volatile
 29216                           
 29217                           ;adcc.c: 71:     ADCAP = 0x0;
 29218   009C64  0E00               	movlw	0
 29219   009C66  6FF5               	movwf	245,b	;volatile
 29220                           
 29221                           ;adcc.c: 73:     ADPREL = 0x0;
 29222   009C68  0E00               	movlw	0
 29223   009C6A  6FF6               	movwf	246,b	;volatile
 29224                           
 29225                           ;adcc.c: 75:     ADPREH = 0x0;
 29226   009C6C  0E00               	movlw	0
 29227   009C6E  6FF7               	movwf	247,b	;volatile
 29228                           
 29229                           ;adcc.c: 77:     ADCON1 = 0x0;
 29230   009C70  0E00               	movlw	0
 29231   009C72  6FF9               	movwf	249,b	;volatile
 29232                           
 29233                           ;adcc.c: 79:     ADCON2 = 0x10;
 29234   009C74  0E10               	movlw	16
 29235   009C76  6FFA               	movwf	250,b	;volatile
 29236                           
 29237                           ;adcc.c: 81:     ADCON3 = 0x0;
 29238   009C78  0E00               	movlw	0
 29239   009C7A  6FFB               	movwf	251,b	;volatile
 29240                           
 29241                           ;adcc.c: 83:     ADSTAT = 0x0;
 29242   009C7C  0E00               	movlw	0
 29243   009C7E  6FFC               	movwf	252,b	;volatile
 29244                           
 29245                           ;adcc.c: 85:     ADREF = 0x0;
 29246   009C80  0E00               	movlw	0
 29247   009C82  6FFD               	movwf	253,b	;volatile
 29248                           
 29249                           ;adcc.c: 87:     ADACT = 0x0;
 29250   009C84  0E00               	movlw	0
 29251   009C86  6FFE               	movwf	254,b	;volatile
 29252                           
 29253                           ;adcc.c: 89:     ADCLK = 0x1F;
 29254   009C88  0E1F               	movlw	31
 29255   009C8A  6FFF               	movwf	255,b	;volatile
 29256                           
 29257                           ;adcc.c: 91:     ADCON0 = 0x84;
 29258   009C8C  0E84               	movlw	132
 29259   009C8E  6FF8               	movwf	248,b	;volatile
 29260   009C90                     
 29261                           ; BSR set to: 62
 29262                           ;adcc.c: 94:     PIR1bits.ADIF = 0;
 29263   009C90  0139               	movlb	57	; () banked
 29264   009C92  95A1               	bcf	161,2,b	;volatile
 29265   009C94                     
 29266                           ; BSR set to: 57
 29267                           ;adcc.c: 97:     PIR1bits.ADTIF = 0;
 29268   009C94  97A1               	bcf	161,3,b	;volatile
 29269   009C96                     
 29270                           ; BSR set to: 57
 29271   009C96  0012               	return		;funcret
 29272   009C98                     __end_of_ADCC_Initialize:
 29273                           	callstack 0
 29274                           
 29275 ;; *************** function _ADCC_GetSingleConversion *****************
 29276 ;; Defined at:
 29277 ;;		line 121 in file "adcc.c"
 29278 ;; Parameters:    Size  Location     Type
 29279 ;;  channel         1    wreg     enum E22771
 29280 ;; Auto vars:     Size  Location     Type
 29281 ;;  channel         1    4[BANK0 ] enum E22771
 29282 ;; Return value:  Size  Location     Type
 29283 ;;                  2    0[BANK0 ] unsigned short 
 29284 ;; Registers used:
 29285 ;;		wreg, status,2, status,0
 29286 ;; Tracked objects:
 29287 ;;		On entry : 0/0
 29288 ;;		On exit  : 0/0
 29289 ;;		Unchanged: 0/0
 29290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29294 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29295 ;;Total ram usage:        5 bytes
 29296 ;; Hardware stack levels used: 1
 29297 ;; Hardware stack levels required when called: 5
 29298 ;; This function calls:
 29299 ;;		Nothing
 29300 ;; This function is called by:
 29301 ;;		_main
 29302 ;; This function uses a non-reentrant model
 29303 ;;
 29304                           
 29305                           	psect	text115
 29306   00A096                     __ptext115:
 29307                           	callstack 0
 29308   00A096                     _ADCC_GetSingleConversion:
 29309                           	callstack 25
 29310                           
 29311                           ; BSR set to: 57
 29312                           ;incstack = 0
 29313                           ;ADCC_GetSingleConversion@channel stored from wreg
 29314   00A096  0100               	movlb	0	; () banked
 29315   00A098  6F64               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
 29316   00A09A                     
 29317                           ;adcc.c: 121: adc_result_t ADCC_GetSingleConversion(adcc_channel_t channel);adcc.c: 122:
      +                           {;adcc.c: 124:     ADPCH = channel;
 29318   00A09A  0060  F193  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
 29319   00A0A0                     
 29320                           ;adcc.c: 127:     ADCON0bits.ADCONT = 0;
 29321   00A0A0  013E               	movlb	62	; () banked
 29322   00A0A2  9DF8               	bcf	248,6,b	;volatile
 29323   00A0A4                     
 29324                           ; BSR set to: 62
 29325                           ;adcc.c: 130:     ADCON0bits.ADGO = 1;
 29326   00A0A4  81F8               	bsf	248,0,b	;volatile
 29327   00A0A6                     l665:
 29328                           
 29329                           ; BSR set to: 62
 29330                           ;adcc.c: 134:     while (ADCON0bits.ADGO)
 29331   00A0A6  B1F8               	btfsc	248,0,b	;volatile
 29332   00A0A8  EF58  F050         	goto	u21961
 29333   00A0AC  EF5A  F050         	goto	u21960
 29334   00A0B0                     u21961:
 29335   00A0B0  EF53  F050         	goto	l665
 29336   00A0B4                     u21960:
 29337   00A0B4                     
 29338                           ; BSR set to: 62
 29339                           ;adcc.c: 140:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 29340   00A0B4  51F0               	movf	240,w,b	;volatile
 29341   00A0B6  0100               	movlb	0	; () banked
 29342   00A0B8  6F63               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
 29343   00A0BA  6B62               	clrf	??_ADCC_GetSingleConversion& (0+255),b
 29344   00A0BC  013E               	movlb	62	; () banked
 29345   00A0BE  51EF               	movf	239,w,b	;volatile
 29346   00A0C0  0100               	movlb	0	; () banked
 29347   00A0C2  2562               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
 29348   00A0C4  6F60               	movwf	?_ADCC_GetSingleConversion& (0+255),b
 29349   00A0C6  013E               	movlb	62	; () banked
 29350   00A0C8  0E00               	movlw	0
 29351   00A0CA  0100               	movlb	0	; () banked
 29352   00A0CC  2163               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
 29353   00A0CE  6F61               	movwf	(?_ADCC_GetSingleConversion+1)& (0+255),b
 29354   00A0D0                     
 29355                           ; BSR set to: 0
 29356   00A0D0  0012               	return		;funcret
 29357   00A0D2                     __end_of_ADCC_GetSingleConversion:
 29358                           	callstack 0
 29359                           
 29360 ;; *************** function _interrupt_handler *****************
 29361 ;; Defined at:
 29362 ;;		line 278 in file "main.c"
 29363 ;; Parameters:    Size  Location     Type
 29364 ;;		None
 29365 ;; Auto vars:     Size  Location     Type
 29366 ;;		None
 29367 ;; Return value:  Size  Location     Type
 29368 ;;                  1    wreg      void 
 29369 ;; Registers used:
 29370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 29371 ;; Tracked objects:
 29372 ;;		On entry : 0/0
 29373 ;;		On exit  : 0/0
 29374 ;;		Unchanged: 0/0
 29375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29380 ;;Total ram usage:        2 bytes
 29381 ;; Hardware stack levels used: 1
 29382 ;; Hardware stack levels required when called: 4
 29383 ;; This function calls:
 29384 ;;		_can_handle_interrupt
 29385 ;;		_timer0_handle_interrupt
 29386 ;; This function is called by:
 29387 ;;		Interrupt level 2
 29388 ;; This function uses a non-reentrant model
 29389 ;;
 29390                           
 29391                           	psect	text116
 29392   009E04                     __ptext116:
 29393                           	callstack 0
 29394   009E04                     _interrupt_handler:
 29395                           	callstack 12
 29396                           
 29397                           ; BSR set to: 0
 29398                           ;incstack = 0
 29399   009E04  006F FFE8  F02B    	movff	pclath,??_interrupt_handler
 29400   009E0A  006F FFEC  F02C    	movff	pclatu,??_interrupt_handler+1
 29401   009E10                     
 29402                           ;main.c: 279:     if (PIR5) {
 29403   009E10  0139               	movlb	57	; () banked
 29404   009E12  51A5               	movf	165,w,b	;volatile
 29405   009E14  B4D8               	btfsc	status,2,c
 29406   009E16  EF0F  F04F         	goto	i2u1639_41
 29407   009E1A  EF11  F04F         	goto	i2u1639_40
 29408   009E1E                     i2u1639_41:
 29409   009E1E  EF13  F04F         	goto	i2l14097
 29410   009E22                     i2u1639_40:
 29411   009E22                     
 29412                           ; BSR set to: 57
 29413                           ;main.c: 280:         can_handle_interrupt();
 29414   009E22  EC22  F037         	call	_can_handle_interrupt	;wreg free
 29415   009E26                     i2l14097:
 29416                           
 29417                           ;main.c: 285:     if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
 29418   009E26  0139               	movlb	57	; () banked
 29419   009E28  AF93               	btfss	147,7,b	;volatile
 29420   009E2A  EF19  F04F         	goto	i2u1640_41
 29421   009E2E  EF1B  F04F         	goto	i2u1640_40
 29422   009E32                     i2u1640_41:
 29423   009E32  EF26  F04F         	goto	i2l2241
 29424   009E36                     i2u1640_40:
 29425   009E36                     
 29426                           ; BSR set to: 57
 29427   009E36  AFA3               	btfss	163,7,b	;volatile
 29428   009E38  EF20  F04F         	goto	i2u1641_41
 29429   009E3C  EF22  F04F         	goto	i2u1641_40
 29430   009E40                     i2u1641_41:
 29431   009E40  EF26  F04F         	goto	i2l2241
 29432   009E44                     i2u1641_40:
 29433   009E44                     
 29434                           ; BSR set to: 57
 29435                           ;main.c: 286:         timer0_handle_interrupt();
 29436   009E44  ECA5  F051         	call	_timer0_handle_interrupt	;wreg free
 29437   009E48                     
 29438                           ;main.c: 287:         PIR3bits.TMR0IF = 0;
 29439   009E48  0139               	movlb	57	; () banked
 29440   009E4A  9FA3               	bcf	163,7,b	;volatile
 29441   009E4C                     i2l2241:
 29442                           
 29443                           ; BSR set to: 57
 29444   009E4C  0060  F0B3  FFFB   	movff	??_interrupt_handler+1,pclatu
 29445   009E52  0060  F0AF  FFFA   	movff	??_interrupt_handler,pclath
 29446   009E58  0011               	retfie		f
 29447   009E5A                     __end_of_interrupt_handler:
 29448                           	callstack 0
 29449                           
 29450 ;; *************** function _timer0_handle_interrupt *****************
 29451 ;; Defined at:
 29452 ;;		line 52 in file "canlib/pic18f26k83/pic18f26k83_timer.c"
 29453 ;; Parameters:    Size  Location     Type
 29454 ;;		None
 29455 ;; Auto vars:     Size  Location     Type
 29456 ;;		None
 29457 ;; Return value:  Size  Location     Type
 29458 ;;                  1    wreg      void 
 29459 ;; Registers used:
 29460 ;;		wreg, status,2, status,0
 29461 ;; Tracked objects:
 29462 ;;		On entry : 0/0
 29463 ;;		On exit  : 0/0
 29464 ;;		Unchanged: 0/0
 29465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29470 ;;Total ram usage:        0 bytes
 29471 ;; Hardware stack levels used: 1
 29472 ;; This function calls:
 29473 ;;		Nothing
 29474 ;; This function is called by:
 29475 ;;		_interrupt_handler
 29476 ;; This function uses a non-reentrant model
 29477 ;;
 29478                           
 29479                           	psect	text117
 29480   00A34A                     __ptext117:
 29481                           	callstack 0
 29482   00A34A                     _timer0_handle_interrupt:
 29483                           	callstack 15
 29484   00A34A                     
 29485                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 56:     internal_count += 64;
 29486   00A34A  0E40               	movlw	64
 29487   00A34C  264F               	addwf	timer0_handle_interrupt@internal_count^0,f,c
 29488                           
 29489                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 57:     if (internal_count > 125) {
 29490   00A34E  0E7D               	movlw	125
 29491   00A350  644F               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
 29492   00A352  EFAD  F051         	goto	i2u617_41
 29493   00A356  EFAF  F051         	goto	i2u617_40
 29494   00A35A                     i2u617_41:
 29495   00A35A  EFB7  F051         	goto	i2l125
 29496   00A35E                     i2u617_40:
 29497   00A35E                     
 29498                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 58:         internal_count -= 125;
 29499   00A35E  0E7D               	movlw	125
 29500   00A360  5E4F               	subwf	timer0_handle_interrupt@internal_count^0,f,c
 29501                           
 29502                           ;canlib/pic18f26k83/pic18f26k83_timer.c: 59:         millis_counter++;
 29503   00A362  0E01               	movlw	1
 29504   00A364  263E               	addwf	_millis_counter^0,f,c	;volatile
 29505   00A366  0E00               	movlw	0
 29506   00A368  223F               	addwfc	(_millis_counter+1)^0,f,c	;volatile
 29507   00A36A  2240               	addwfc	(_millis_counter+2)^0,f,c	;volatile
 29508   00A36C  2241               	addwfc	(_millis_counter+3)^0,f,c	;volatile
 29509   00A36E                     i2l125:
 29510   00A36E  0012               	return		;funcret
 29511   00A370                     __end_of_timer0_handle_interrupt:
 29512                           	callstack 0
 29513                           
 29514 ;; *************** function _can_handle_interrupt *****************
 29515 ;; Defined at:
 29516 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
 29517 ;; Parameters:    Size  Location     Type
 29518 ;;		None
 29519 ;; Auto vars:     Size  Location     Type
 29520 ;;  rcvd_msg       11   31[COMRAM] struct .
 29521 ;;  rcvd_msg       11   20[COMRAM] struct .
 29522 ;; Return value:  Size  Location     Type
 29523 ;;                  1    wreg      void 
 29524 ;; Registers used:
 29525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 29526 ;; Tracked objects:
 29527 ;;		On entry : 0/0
 29528 ;;		On exit  : 0/0
 29529 ;;		Unchanged: 0/0
 29530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29532 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29534 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29535 ;;Total ram usage:       26 bytes
 29536 ;; Hardware stack levels used: 1
 29537 ;; Hardware stack levels required when called: 3
 29538 ;; This function calls:
 29539 ;;		NULL
 29540 ;;		_can_msg_handler
 29541 ;;		i2_memcpy
 29542 ;; This function is called by:
 29543 ;;		_interrupt_handler
 29544 ;; This function uses a non-reentrant model
 29545 ;;
 29546                           
 29547                           	psect	text118
 29548   006E44                     __ptext118:
 29549                           	callstack 0
 29550   006E44                     _can_handle_interrupt:
 29551                           	callstack 12
 29552   006E44                     
 29553                           ;canlib/pic18f26k83/pic18f26k83_can.c: 124:     if (COMSTATbits.RXB0OVFL || COMSTATbits.
      +                          RXB1OVFL) {
 29554   006E44  BE90               	btfsc	144,7,c	;volatile
 29555   006E46  EF27  F037         	goto	i2u1423_41
 29556   006E4A  EF29  F037         	goto	i2u1423_40
 29557   006E4E                     i2u1423_41:
 29558   006E4E  EF30  F037         	goto	i2l86
 29559   006E52                     i2u1423_40:
 29560   006E52  AC90               	btfss	144,6,c	;volatile
 29561   006E54  EF2E  F037         	goto	i2u1424_41
 29562   006E58  EF30  F037         	goto	i2u1424_40
 29563   006E5C                     i2u1424_41:
 29564   006E5C  EF32  F037         	goto	i2l84
 29565   006E60                     i2u1424_40:
 29566   006E60                     i2l86:
 29567                           
 29568                           ;canlib/pic18f26k83/pic18f26k83_can.c: 125:         COMSTATbits.RXB0OVFL = 0;
 29569   006E60  9E90               	bcf	144,7,c	;volatile
 29570                           
 29571                           ;canlib/pic18f26k83/pic18f26k83_can.c: 126:         COMSTATbits.RXB1OVFL = 0;
 29572   006E62  9C90               	bcf	144,6,c	;volatile
 29573   006E64                     i2l84:
 29574                           
 29575                           ;canlib/pic18f26k83/pic18f26k83_can.c: 129:     if (TXB0CONbits.TXREQ && TXB0CONbits.TXE
      +                          RR && PIR5bits.IRXIF) {
 29576   006E64  0137               	movlb	55	; () banked
 29577   006E66  A7E0               	btfss	224,3,b	;volatile
 29578   006E68  EF38  F037         	goto	i2u1425_41
 29579   006E6C  EF3A  F037         	goto	i2u1425_40
 29580   006E70                     i2u1425_41:
 29581   006E70  EF4D  F037         	goto	i2l87
 29582   006E74                     i2u1425_40:
 29583   006E74                     
 29584                           ; BSR set to: 55
 29585   006E74  A9E0               	btfss	224,4,b	;volatile
 29586   006E76  EF3F  F037         	goto	i2u1426_41
 29587   006E7A  EF41  F037         	goto	i2u1426_40
 29588   006E7E                     i2u1426_41:
 29589   006E7E  EF4D  F037         	goto	i2l87
 29590   006E82                     i2u1426_40:
 29591   006E82                     
 29592                           ; BSR set to: 55
 29593   006E82  0139               	movlb	57	; () banked
 29594   006E84  AFA5               	btfss	165,7,b	;volatile
 29595   006E86  EF47  F037         	goto	i2u1427_41
 29596   006E8A  EF49  F037         	goto	i2u1427_40
 29597   006E8E                     i2u1427_41:
 29598   006E8E  EF4D  F037         	goto	i2l87
 29599   006E92                     i2u1427_40:
 29600   006E92                     
 29601                           ; BSR set to: 57
 29602                           ;canlib/pic18f26k83/pic18f26k83_can.c: 131:         TXB0CONbits.TXREQ = 0;
 29603   006E92  0137               	movlb	55	; () banked
 29604   006E94  97E0               	bcf	224,3,b	;volatile
 29605                           
 29606                           ;canlib/pic18f26k83/pic18f26k83_can.c: 132:         return;
 29607   006E96  EF1E  F038         	goto	i2l88
 29608   006E9A                     i2l87:
 29609                           
 29610                           ;canlib/pic18f26k83/pic18f26k83_can.c: 137:     if (PIR5bits.RXB0IF) {
 29611   006E9A  0139               	movlb	57	; () banked
 29612   006E9C  A1A5               	btfss	165,0,b	;volatile
 29613   006E9E  EF53  F037         	goto	i2u1428_41
 29614   006EA2  EF55  F037         	goto	i2u1428_40
 29615   006EA6                     i2u1428_41:
 29616   006EA6  EF9C  F037         	goto	i2l89
 29617   006EAA                     i2u1428_40:
 29618   006EAA                     
 29619                           ; BSR set to: 57
 29620                           ;canlib/pic18f26k83/pic18f26k83_can.c: 138:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 139:         rcvd_msg.sid = (((uint16_t)RXB0SIDH) << 3) | (RXB0SID
      +                          L >> 5);
 29621   006EAA  006F FE08  F011    	movff	16258,??_can_handle_interrupt	;volatile
 29622   006EB0  0E05               	movlw	5
 29623   006EB2  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 29624   006EB4                     i2u1429_45:
 29625   006EB4  90D8               	bcf	status,0,c
 29626   006EB6  3211               	rrcf	??_can_handle_interrupt^0,f,c
 29627   006EB8  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 29628   006EBA  EF5A  F037         	goto	i2u1429_45
 29629   006EBE  5011               	movf	??_can_handle_interrupt^0,w,c
 29630   006EC0  006F FE04  F013    	movff	16257,??_can_handle_interrupt+2	;volatile
 29631   006EC6  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 29632   006EC8  90D8               	bcf	status,0,c
 29633   006ECA  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29634   006ECC  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29635   006ECE  90D8               	bcf	status,0,c
 29636   006ED0  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29637   006ED2  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29638   006ED4  90D8               	bcf	status,0,c
 29639   006ED6  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29640   006ED8  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29641   006EDA  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 29642   006EDC  6E15               	movwf	can_handle_interrupt@rcvd_msg^0,c
 29643   006EDE  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 29644   006EE0  6E16               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
 29645                           
 29646                           ;canlib/pic18f26k83/pic18f26k83_can.c: 140:         rcvd_msg.data_len = RXB0DLCbits.DLC;
 29647   006EE2  5085               	movf	133,w,c	;volatile
 29648   006EE4  0B0F               	andlw	15
 29649   006EE6  6E17               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
 29650   006EE8                     
 29651                           ; BSR set to: 57
 29652                           ;canlib/pic18f26k83/pic18f26k83_can.c: 141:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB0D0, rcvd_msg.data_len);
 29653   006EE8  0E18               	movlw	low (can_handle_interrupt@rcvd_msg+3)
 29654   006EEA  6E01               	movwf	i2memcpy@d1^0,c
 29655   006EEC  6A02               	clrf	(i2memcpy@d1+1)^0,c
 29656   006EEE  0E86               	movlw	134
 29657   006EF0  6E03               	movwf	i2memcpy@s1^0,c
 29658   006EF2  0E3F               	movlw	63
 29659   006EF4  6E04               	movwf	(i2memcpy@s1+1)^0,c
 29660   006EF6  C017  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
 29661   006EFA  6A06               	clrf	(i2memcpy@n+1)^0,c
 29662   006EFC  ECA9  F04E         	call	i2_memcpy	;wreg free
 29663   006F00                     
 29664                           ;canlib/pic18f26k83/pic18f26k83_can.c: 144:         if (((void*)0) != can_rcv_cb) {
 29665   006F00  5046               	movf	_can_rcv_cb^0,w,c
 29666   006F02  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 29667   006F04  B4D8               	btfsc	status,2,c
 29668   006F06  EF87  F037         	goto	i2u1430_41
 29669   006F0A  EF89  F037         	goto	i2u1430_40
 29670   006F0E                     i2u1430_41:
 29671   006F0E  EF97  F037         	goto	i2l12319
 29672   006F12                     i2u1430_40:
 29673   006F12                     
 29674                           ;canlib/pic18f26k83/pic18f26k83_can.c: 145:             can_rcv_cb(&rcvd_msg);
 29675   006F12  0E15               	movlw	low can_handle_interrupt@rcvd_msg
 29676   006F14  6E0A               	movwf	can_msg_handler@msg^0,c
 29677   006F16  D802               	call	i2u1431_48
 29678   006F18  EF97  F037         	goto	i2u1431_49
 29679   006F1C                     i2u1431_48:
 29680   006F1C  0005               	push	
 29681   006F1E  6EFA               	movwf	pclath,c
 29682   006F20  5046               	movf	_can_rcv_cb^0,w,c
 29683   006F22  6EFD               	movwf	tosl,c
 29684   006F24  5047               	movf	(_can_rcv_cb+1)^0,w,c
 29685   006F26  6EFE               	movwf	tosh,c
 29686   006F28  6AFF               	clrf	tosu,c
 29687   006F2A  50FA               	movf	pclath,w,c
 29688   006F2C  0012               	return		;indir
 29689   006F2E                     i2u1431_49:
 29690   006F2E                     i2l12319:
 29691                           
 29692                           ;canlib/pic18f26k83/pic18f26k83_can.c: 148:         PIR5bits.RXB0IF = 0;
 29693   006F2E  0139               	movlb	57	; () banked
 29694   006F30  91A5               	bcf	165,0,b	;volatile
 29695   006F32                     
 29696                           ; BSR set to: 57
 29697                           ;canlib/pic18f26k83/pic18f26k83_can.c: 149:         RXB0CONbits.RXFUL = 0;
 29698   006F32  9E80               	bcf	128,7,c	;volatile
 29699   006F34  EF1E  F038         	goto	i2l88
 29700   006F38                     i2l89:
 29701                           
 29702                           ; BSR set to: 57
 29703   006F38  A3A5               	btfss	165,1,b	;volatile
 29704   006F3A  EFA1  F037         	goto	i2u1432_41
 29705   006F3E  EFA3  F037         	goto	i2u1432_40
 29706   006F42                     i2u1432_41:
 29707   006F42  EFEC  F037         	goto	i2l92
 29708   006F46                     i2u1432_40:
 29709   006F46                     
 29710                           ; BSR set to: 57
 29711                           ;canlib/pic18f26k83/pic18f26k83_can.c: 153:         can_msg_t rcvd_msg;;canlib/pic18f26k
      +                          83/pic18f26k83_can.c: 154:         rcvd_msg.sid = (((uint16_t)RXB1SIDH) << 3) | (RXB1SID
      +                          L >> 5);
 29712   006F46  006D FFC8  F011    	movff	14322,??_can_handle_interrupt	;volatile
 29713   006F4C  0E05               	movlw	5
 29714   006F4E  6E12               	movwf	(??_can_handle_interrupt+1)^0,c
 29715   006F50                     i2u1433_45:
 29716   006F50  90D8               	bcf	status,0,c
 29717   006F52  3211               	rrcf	??_can_handle_interrupt^0,f,c
 29718   006F54  2E12               	decfsz	(??_can_handle_interrupt+1)^0,f,c
 29719   006F56  EFA8  F037         	goto	i2u1433_45
 29720   006F5A  5011               	movf	??_can_handle_interrupt^0,w,c
 29721   006F5C  006D FFC4  F013    	movff	14321,??_can_handle_interrupt+2	;volatile
 29722   006F62  6A14               	clrf	(??_can_handle_interrupt+3)^0,c
 29723   006F64  90D8               	bcf	status,0,c
 29724   006F66  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29725   006F68  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29726   006F6A  90D8               	bcf	status,0,c
 29727   006F6C  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29728   006F6E  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29729   006F70  90D8               	bcf	status,0,c
 29730   006F72  3613               	rlcf	(??_can_handle_interrupt+2)^0,f,c
 29731   006F74  3614               	rlcf	(??_can_handle_interrupt+3)^0,f,c
 29732   006F76  1013               	iorwf	(??_can_handle_interrupt+2)^0,w,c
 29733   006F78  6E20               	movwf	can_handle_interrupt@rcvd_msg_753^0,c
 29734   006F7A  5014               	movf	(??_can_handle_interrupt+3)^0,w,c
 29735   006F7C  6E21               	movwf	(can_handle_interrupt@rcvd_msg_753+1)^0,c
 29736                           
 29737                           ;canlib/pic18f26k83/pic18f26k83_can.c: 155:         rcvd_msg.data_len = RXB1DLCbits.DLC;
 29738   006F7E  0137               	movlb	55	; () banked
 29739   006F80  51F5               	movf	245,w,b	;volatile
 29740   006F82  0B0F               	andlw	15
 29741   006F84  6E22               	movwf	(can_handle_interrupt@rcvd_msg_753+2)^0,c
 29742   006F86                     
 29743                           ; BSR set to: 55
 29744                           ;canlib/pic18f26k83/pic18f26k83_can.c: 156:         memcpy(rcvd_msg.data, (const void *)
      +                           &RXB1D0, rcvd_msg.data_len);
 29745   006F86  0E23               	movlw	low (can_handle_interrupt@rcvd_msg_753+3)
 29746   006F88  6E01               	movwf	i2memcpy@d1^0,c
 29747   006F8A  6A02               	clrf	(i2memcpy@d1+1)^0,c
 29748   006F8C  0EF6               	movlw	246
 29749   006F8E  6E03               	movwf	i2memcpy@s1^0,c
 29750   006F90  0E37               	movlw	55
 29751   006F92  6E04               	movwf	(i2memcpy@s1+1)^0,c
 29752   006F94  C022  F005         	movff	can_handle_interrupt@rcvd_msg_753+2,i2memcpy@n
 29753   006F98  6A06               	clrf	(i2memcpy@n+1)^0,c
 29754   006F9A  ECA9  F04E         	call	i2_memcpy	;wreg free
 29755   006F9E                     
 29756                           ;canlib/pic18f26k83/pic18f26k83_can.c: 159:         if (((void*)0) != can_rcv_cb) {
 29757   006F9E  5046               	movf	_can_rcv_cb^0,w,c
 29758   006FA0  1047               	iorwf	(_can_rcv_cb+1)^0,w,c
 29759   006FA2  B4D8               	btfsc	status,2,c
 29760   006FA4  EFD6  F037         	goto	i2u1434_41
 29761   006FA8  EFD8  F037         	goto	i2u1434_40
 29762   006FAC                     i2u1434_41:
 29763   006FAC  EFE6  F037         	goto	i2l12335
 29764   006FB0                     i2u1434_40:
 29765   006FB0                     
 29766                           ;canlib/pic18f26k83/pic18f26k83_can.c: 160:             can_rcv_cb(&rcvd_msg);
 29767   006FB0  0E20               	movlw	low can_handle_interrupt@rcvd_msg_753
 29768   006FB2  6E0A               	movwf	can_msg_handler@msg^0,c
 29769   006FB4  D802               	call	i2u1435_48
 29770   006FB6  EFE6  F037         	goto	i2u1435_49
 29771   006FBA                     i2u1435_48:
 29772   006FBA  0005               	push	
 29773   006FBC  6EFA               	movwf	pclath,c
 29774   006FBE  5046               	movf	_can_rcv_cb^0,w,c
 29775   006FC0  6EFD               	movwf	tosl,c
 29776   006FC2  5047               	movf	(_can_rcv_cb+1)^0,w,c
 29777   006FC4  6EFE               	movwf	tosh,c
 29778   006FC6  6AFF               	clrf	tosu,c
 29779   006FC8  50FA               	movf	pclath,w,c
 29780   006FCA  0012               	return		;indir
 29781   006FCC                     i2u1435_49:
 29782   006FCC                     i2l12335:
 29783                           
 29784                           ;canlib/pic18f26k83/pic18f26k83_can.c: 163:         PIR5bits.RXB1IF = 0;
 29785   006FCC  0139               	movlb	57	; () banked
 29786   006FCE  93A5               	bcf	165,1,b	;volatile
 29787   006FD0                     
 29788                           ; BSR set to: 57
 29789                           ;canlib/pic18f26k83/pic18f26k83_can.c: 164:         RXB1CONbits.RXFUL = 0;
 29790   006FD0  0137               	movlb	55	; () banked
 29791   006FD2  9FF0               	bcf	240,7,b	;volatile
 29792                           
 29793                           ;canlib/pic18f26k83/pic18f26k83_can.c: 165:     }
 29794   006FD4  EF1E  F038         	goto	i2l88
 29795   006FD8                     i2l92:
 29796                           
 29797                           ; BSR set to: 57
 29798   006FD8  A5A5               	btfss	165,2,b	;volatile
 29799   006FDA  EFF1  F037         	goto	i2u1436_41
 29800   006FDE  EFF3  F037         	goto	i2u1436_40
 29801   006FE2                     i2u1436_41:
 29802   006FE2  EFF6  F037         	goto	i2l95
 29803   006FE6                     i2u1436_40:
 29804   006FE6                     
 29805                           ; BSR set to: 57
 29806                           ;canlib/pic18f26k83/pic18f26k83_can.c: 170:         PIR5bits.TXB0IF = 0;
 29807   006FE6  95A5               	bcf	165,2,b	;volatile
 29808                           
 29809                           ;canlib/pic18f26k83/pic18f26k83_can.c: 171:         return;
 29810   006FE8  EF1E  F038         	goto	i2l88
 29811   006FEC                     i2l95:
 29812                           
 29813                           ; BSR set to: 57
 29814   006FEC  A7A5               	btfss	165,3,b	;volatile
 29815   006FEE  EFFB  F037         	goto	i2u1437_41
 29816   006FF2  EFFD  F037         	goto	i2u1437_40
 29817   006FF6                     i2u1437_41:
 29818   006FF6  EF00  F038         	goto	i2l97
 29819   006FFA                     i2u1437_40:
 29820   006FFA                     
 29821                           ; BSR set to: 57
 29822                           ;canlib/pic18f26k83/pic18f26k83_can.c: 173:         PIR5bits.TXB1IF = 0;
 29823   006FFA  97A5               	bcf	165,3,b	;volatile
 29824                           
 29825                           ;canlib/pic18f26k83/pic18f26k83_can.c: 174:         return;
 29826   006FFC  EF1E  F038         	goto	i2l88
 29827   007000                     i2l97:
 29828                           
 29829                           ; BSR set to: 57
 29830   007000  A9A5               	btfss	165,4,b	;volatile
 29831   007002  EF05  F038         	goto	i2u1438_41
 29832   007006  EF07  F038         	goto	i2u1438_40
 29833   00700A                     i2u1438_41:
 29834   00700A  EF0A  F038         	goto	i2l99
 29835   00700E                     i2u1438_40:
 29836   00700E                     
 29837                           ; BSR set to: 57
 29838                           ;canlib/pic18f26k83/pic18f26k83_can.c: 176:         PIR5bits.TXB2IF = 0;
 29839   00700E  99A5               	bcf	165,4,b	;volatile
 29840                           
 29841                           ;canlib/pic18f26k83/pic18f26k83_can.c: 177:         return;
 29842   007010  EF1E  F038         	goto	i2l88
 29843   007014                     i2l99:
 29844                           
 29845                           ; BSR set to: 57
 29846   007014  AFA5               	btfss	165,7,b	;volatile
 29847   007016  EF0F  F038         	goto	i2u1439_41
 29848   00701A  EF11  F038         	goto	i2u1439_40
 29849   00701E                     i2u1439_41:
 29850   00701E  EF14  F038         	goto	i2l101
 29851   007022                     i2u1439_40:
 29852   007022                     
 29853                           ; BSR set to: 57
 29854                           ;canlib/pic18f26k83/pic18f26k83_can.c: 181:         PIR5bits.IRXIF = 0;
 29855   007022  9FA5               	bcf	165,7,b	;volatile
 29856                           
 29857                           ;canlib/pic18f26k83/pic18f26k83_can.c: 182:         return;
 29858   007024  EF1E  F038         	goto	i2l88
 29859   007028                     i2l101:
 29860                           
 29861                           ; BSR set to: 57
 29862   007028  ABA5               	btfss	165,5,b	;volatile
 29863   00702A  EF19  F038         	goto	i2u1440_41
 29864   00702E  EF1B  F038         	goto	i2u1440_40
 29865   007032                     i2u1440_41:
 29866   007032  EF1E  F038         	goto	i2l98
 29867   007036                     i2u1440_40:
 29868   007036                     
 29869                           ; BSR set to: 57
 29870                           ;canlib/pic18f26k83/pic18f26k83_can.c: 186:         PIR5bits.ERRIF = 0;
 29871   007036  9BA5               	bcf	165,5,b	;volatile
 29872                           
 29873                           ;canlib/pic18f26k83/pic18f26k83_can.c: 187:         return;
 29874   007038  EF1E  F038         	goto	i2l88
 29875   00703C                     i2l98:
 29876   00703C                     i2l88:
 29877   00703C  0012               	return		;funcret
 29878   00703E                     __end_of_can_handle_interrupt:
 29879                           	callstack 0
 29880                           
 29881 ;; *************** function i2_memcpy *****************
 29882 ;; Defined at:
 29883 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 29884 ;; Parameters:    Size  Location     Type
 29885 ;;  d1              2    0[COMRAM] PTR void 
 29886 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 29887 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 29888 ;;  s1              2    2[COMRAM] PTR const void 
 29889 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 29890 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 29891 ;;  n               2    4[COMRAM] unsigned int 
 29892 ;; Auto vars:     Size  Location     Type
 29893 ;;  s               2    8[COMRAM] PTR const unsigned char 
 29894 ;;		 -> send_status_err@board_stat_msg(11), send_status_ok@board_stat_msg(11), tx_pool(150), SD_SendCmd@address(4), 
 29895 ;;		 -> txb_heartbeat@msg_sent(11), RXB1D0(1), RXB0D0(1), 
 29896 ;;  d               2    6[COMRAM] PTR unsigned char 
 29897 ;;		 -> tx_pool(150), SD_SendCmd@address_bytes(4), txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_753(11), 
 29898 ;;		 -> can_handle_interrupt@rcvd_msg(11), TXB0D0(1), 
 29899 ;;  tmp             1   10[COMRAM] unsigned char 
 29900 ;; Return value:  Size  Location     Type
 29901 ;;                  2    0[COMRAM] PTR void 
 29902 ;; Registers used:
 29903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29904 ;; Tracked objects:
 29905 ;;		On entry : 0/0
 29906 ;;		On exit  : 0/0
 29907 ;;		Unchanged: 0/0
 29908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29910 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29913 ;;Total ram usage:       11 bytes
 29914 ;; Hardware stack levels used: 1
 29915 ;; This function calls:
 29916 ;;		Nothing
 29917 ;; This function is called by:
 29918 ;;		_can_handle_interrupt
 29919 ;; This function uses a non-reentrant model
 29920 ;;
 29921                           
 29922                           	psect	text119
 29923   009D52                     __ptext119:
 29924                           	callstack 0
 29925   009D52                     i2_memcpy:
 29926                           	callstack 14
 29927   009D52  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 29928   009D56  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 29929   009D5A  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 29930   009D5E  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 29931   009D62  EFC8  F04E         	goto	i2l12237
 29932   009D66                     i2l12229:
 29933   009D66  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 29934   009D6C  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 29935   009D72  50DF               	movf	indf2,w,c
 29936   009D74  6E0B               	movwf	i2memcpy@tmp^0,c
 29937   009D76  4A09               	infsnz	i2memcpy@s^0,f,c
 29938   009D78  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 29939   009D7A  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 29940   009D80  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 29941   009D86  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 29942   009D8C  4A07               	infsnz	i2memcpy@d^0,f,c
 29943   009D8E  2A08               	incf	(i2memcpy@d+1)^0,f,c
 29944   009D90                     i2l12237:
 29945   009D90  0605               	decf	i2memcpy@n^0,f,c
 29946   009D92  A0D8               	btfss	status,0,c
 29947   009D94  0606               	decf	(i2memcpy@n+1)^0,f,c
 29948   009D96  2805               	incf	i2memcpy@n^0,w,c
 29949   009D98  E106               	bnz	i2u1420_41
 29950   009D9A  2806               	incf	(i2memcpy@n+1)^0,w,c
 29951   009D9C  A4D8               	btfss	status,2,c
 29952   009D9E  EFD3  F04E         	goto	i2u1420_41
 29953   009DA2  EFD5  F04E         	goto	i2u1420_40
 29954   009DA6                     i2u1420_41:
 29955   009DA6  EFB3  F04E         	goto	i2l12229
 29956   009DAA                     i2u1420_40:
 29957   009DAA  0012               	return		;funcret
 29958   009DAC                     __end_ofi2_memcpy:
 29959                           	callstack 0
 29960                           
 29961 ;; *************** function _can_msg_handler *****************
 29962 ;; Defined at:
 29963 ;;		line 205 in file "main.c"
 29964 ;; Parameters:    Size  Location     Type
 29965 ;;  msg             1    9[COMRAM] PTR const struct .
 29966 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 29967 ;; Auto vars:     Size  Location     Type
 29968 ;;  dest_id         2   14[COMRAM] int 
 29969 ;;  msg_type        2   12[COMRAM] unsigned short 
 29970 ;;  cmd_type        2    0        int 
 29971 ;; Return value:  Size  Location     Type
 29972 ;;                  1    wreg      void 
 29973 ;; Registers used:
 29974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29975 ;; Tracked objects:
 29976 ;;		On entry : 0/0
 29977 ;;		On exit  : 0/0
 29978 ;;		Unchanged: 0/0
 29979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29980 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29984 ;;Total ram usage:        7 bytes
 29985 ;; Hardware stack levels used: 1
 29986 ;; Hardware stack levels required when called: 2
 29987 ;; This function calls:
 29988 ;;		_BLUE_LED_OFF
 29989 ;;		_BLUE_LED_ON
 29990 ;;		_GREEN_LED_OFF
 29991 ;;		_GREEN_LED_ON
 29992 ;;		_RED_LED_OFF
 29993 ;;		_RED_LED_ON
 29994 ;;		_get_board_unique_id
 29995 ;;		_get_message_type
 29996 ;;		_get_reset_board_id
 29997 ;; This function is called by:
 29998 ;;		_main
 29999 ;;		_can_handle_interrupt
 30000 ;; This function uses a non-reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text120
 30004   008E88                     __ptext120:
 30005                           	callstack 0
 30006   008E88                     _can_msg_handler:
 30007                           	callstack 12
 30008   008E88                     
 30009                           ;main.c: 206:     seen_can_message = 1;
 30010   008E88  0E01               	movlw	1
 30011   008E8A  6E49               	movwf	_seen_can_message^0,c	;volatile
 30012   008E8C                     
 30013                           ;main.c: 207:     uint16_t msg_type = get_message_type(msg);
 30014   008E8C  C00A  F001         	movff	can_msg_handler@msg,get_message_type@msg
 30015   008E90  EC69  F050         	call	_get_message_type	;wreg free
 30016   008E94  C001  F00D         	movff	?_get_message_type,can_msg_handler@msg_type
 30017   008E98  C002  F00E         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
 30018   008E9C                     
 30019                           ;main.c: 211:     if (get_board_unique_id(msg) == 0x0C) {
 30020   008E9C  C00A  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
 30021   008EA0  ECDB  F051         	call	_get_board_unique_id	;wreg free
 30022   008EA4  0A0C               	xorlw	12
 30023   008EA6  A4D8               	btfss	status,2,c
 30024   008EA8  EF58  F047         	goto	i2u1358_41
 30025   008EAC  EF5A  F047         	goto	i2u1358_40
 30026   008EB0                     i2u1358_41:
 30027   008EB0  EF8A  F047         	goto	i2l11847
 30028   008EB4                     i2u1358_40:
 30029   008EB4  EFAB  F047         	goto	i2l2220
 30030   008EB8                     i2l11835:
 30031                           
 30032                           ;main.c: 217:             BLUE_LED_ON();
 30033   008EB8  EC86  F052         	call	_BLUE_LED_ON	;wreg free
 30034                           
 30035                           ;main.c: 218:             GREEN_LED_ON();
 30036   008EBC  EC82  F052         	call	_GREEN_LED_ON	;wreg free
 30037                           
 30038                           ;main.c: 219:             RED_LED_ON();
 30039   008EC0  EC7E  F052         	call	_RED_LED_ON	;wreg free
 30040                           
 30041                           ;main.c: 220:             break;
 30042   008EC4  EFAB  F047         	goto	i2l2220
 30043   008EC8                     i2l11837:
 30044                           
 30045                           ;main.c: 223:             BLUE_LED_OFF();
 30046   008EC8  EC88  F052         	call	_BLUE_LED_OFF	;wreg free
 30047                           
 30048                           ;main.c: 224:             GREEN_LED_OFF();
 30049   008ECC  EC84  F052         	call	_GREEN_LED_OFF	;wreg free
 30050                           
 30051                           ;main.c: 225:             RED_LED_OFF();
 30052   008ED0  EC80  F052         	call	_RED_LED_OFF	;wreg free
 30053                           
 30054                           ;main.c: 226:             break;
 30055   008ED4  EFAB  F047         	goto	i2l2220
 30056   008ED8                     i2l11839:
 30057                           
 30058                           ;main.c: 229:             dest_id = get_reset_board_id(msg);
 30059   008ED8  C00A  F005         	movff	can_msg_handler@msg,get_reset_board_id@msg
 30060   008EDC  EC57  F04F         	call	_get_reset_board_id	;wreg free
 30061   008EE0  C005  F00F         	movff	?_get_reset_board_id,can_msg_handler@dest_id
 30062   008EE4  C006  F010         	movff	?_get_reset_board_id+1,can_msg_handler@dest_id+1
 30063   008EE8                     
 30064                           ;main.c: 230:             if (dest_id == 0x0C || dest_id == 0) {
 30065   008EE8  0E0C               	movlw	12
 30066   008EEA  180F               	xorwf	can_msg_handler@dest_id^0,w,c
 30067   008EEC  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 30068   008EEE  B4D8               	btfsc	status,2,c
 30069   008EF0  EF7C  F047         	goto	i2u1359_41
 30070   008EF4  EF7E  F047         	goto	i2u1359_40
 30071   008EF8                     i2u1359_41:
 30072   008EF8  EF87  F047         	goto	i2l2228
 30073   008EFC                     i2u1359_40:
 30074   008EFC  500F               	movf	can_msg_handler@dest_id^0,w,c
 30075   008EFE  1010               	iorwf	(can_msg_handler@dest_id+1)^0,w,c
 30076   008F00  A4D8               	btfss	status,2,c
 30077   008F02  EF85  F047         	goto	i2u1360_41
 30078   008F06  EF87  F047         	goto	i2u1360_40
 30079   008F0A                     i2u1360_41:
 30080   008F0A  EFAB  F047         	goto	i2l2220
 30081   008F0E                     i2u1360_40:
 30082   008F0E                     i2l2228:
 30083   008F0E  00FF               	reset		;# 
 30084   008F10  EFAB  F047         	goto	i2l2220
 30085   008F14                     i2l11847:
 30086   008F14  C00D  F00B         	movff	can_msg_handler@msg_type,??_can_msg_handler
 30087   008F18  C00E  F00C         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
 30088                           
 30089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 30090                           ; Switch size 1, requested type "simple"
 30091                           ; Number of cases is 2, Range of values is 1 to 7
 30092                           ; switch strategies available:
 30093                           ; Name         Instructions Cycles
 30094                           ; simple_byte            7     4 (average)
 30095                           ;	Chosen strategy is simple_byte
 30096   008F1C  500C               	movf	(??_can_msg_handler+1)^0,w,c
 30097   008F1E  0A01               	xorlw	1	; case 1
 30098   008F20  B4D8               	btfsc	status,2,c
 30099   008F22  EF99  F047         	goto	i2l19189
 30100   008F26  0A06               	xorlw	6	; case 7
 30101   008F28  B4D8               	btfsc	status,2,c
 30102   008F2A  EFA0  F047         	goto	i2l19191
 30103   008F2E  EFAB  F047         	goto	i2l2220
 30104   008F32                     i2l19189:
 30105                           
 30106                           ; Switch size 1, requested type "simple"
 30107                           ; Number of cases is 1, Range of values is 96 to 96
 30108                           ; switch strategies available:
 30109                           ; Name         Instructions Cycles
 30110                           ; simple_byte            4     3 (average)
 30111                           ;	Chosen strategy is simple_byte
 30112   008F32  500B               	movf	??_can_msg_handler^0,w,c
 30113   008F34  0A60               	xorlw	96	; case 96
 30114   008F36  B4D8               	btfsc	status,2,c
 30115   008F38  EF6C  F047         	goto	i2l11839
 30116   008F3C  EFAB  F047         	goto	i2l2220
 30117   008F40                     i2l19191:
 30118                           
 30119                           ; Switch size 1, requested type "simple"
 30120                           ; Number of cases is 2, Range of values is 192 to 224
 30121                           ; switch strategies available:
 30122                           ; Name         Instructions Cycles
 30123                           ; simple_byte            7     4 (average)
 30124                           ;	Chosen strategy is simple_byte
 30125   008F40  500B               	movf	??_can_msg_handler^0,w,c
 30126   008F42  0AC0               	xorlw	192	; case 192
 30127   008F44  B4D8               	btfsc	status,2,c
 30128   008F46  EF64  F047         	goto	i2l11837
 30129   008F4A  0A20               	xorlw	32	; case 224
 30130   008F4C  B4D8               	btfsc	status,2,c
 30131   008F4E  EF5C  F047         	goto	i2l11835
 30132   008F52  EFAB  F047         	goto	i2l2220
 30133   008F56                     i2l2220:
 30134   008F56  0012               	return		;funcret
 30135   008F58                     __end_of_can_msg_handler:
 30136                           	callstack 0
 30137                           
 30138 ;; *************** function _get_reset_board_id *****************
 30139 ;; Defined at:
 30140 ;;		line 490 in file "canlib/can_common.c"
 30141 ;; Parameters:    Size  Location     Type
 30142 ;;  msg             1    4[COMRAM] PTR const struct .
 30143 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30144 ;; Auto vars:     Size  Location     Type
 30145 ;;  msg_type        2    7[COMRAM] unsigned short 
 30146 ;; Return value:  Size  Location     Type
 30147 ;;                  2    4[COMRAM] int 
 30148 ;; Registers used:
 30149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30150 ;; Tracked objects:
 30151 ;;		On entry : 0/0
 30152 ;;		On exit  : 0/0
 30153 ;;		Unchanged: 0/0
 30154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30158 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30159 ;;Total ram usage:        5 bytes
 30160 ;; Hardware stack levels used: 1
 30161 ;; Hardware stack levels required when called: 1
 30162 ;; This function calls:
 30163 ;;		_get_message_type
 30164 ;; This function is called by:
 30165 ;;		_can_msg_handler
 30166 ;; This function uses a non-reentrant model
 30167 ;;
 30168                           
 30169                           	psect	text121
 30170   009EAE                     __ptext121:
 30171                           	callstack 0
 30172   009EAE                     _get_reset_board_id:
 30173                           	callstack 12
 30174   009EAE                     
 30175                           ;canlib/can_common.c: 491:     if (!msg) { return -1; }
 30176   009EAE  5005               	movf	get_reset_board_id@msg^0,w,c
 30177   009EB0  A4D8               	btfss	status,2,c
 30178   009EB2  EF5D  F04F         	goto	i2u1174_41
 30179   009EB6  EF5F  F04F         	goto	i2u1174_40
 30180   009EBA                     i2u1174_41:
 30181   009EBA  EF63  F04F         	goto	i2l10723
 30182   009EBE                     i2u1174_40:
 30183   009EBE                     i2l10721:
 30184   009EBE  6805               	setf	?_get_reset_board_id^0,c
 30185   009EC0  6806               	setf	(?_get_reset_board_id+1)^0,c
 30186   009EC2  EF80  F04F         	goto	i2l363
 30187   009EC6                     i2l10723:
 30188                           
 30189                           ;canlib/can_common.c: 493:     uint16_t msg_type = get_message_type(msg);
 30190   009EC6  C005  F001         	movff	get_reset_board_id@msg,get_message_type@msg
 30191   009ECA  EC69  F050         	call	_get_message_type	;wreg free
 30192   009ECE  C001  F008         	movff	?_get_message_type,get_reset_board_id@msg_type
 30193   009ED2  C002  F009         	movff	?_get_message_type+1,get_reset_board_id@msg_type+1
 30194   009ED6                     
 30195                           ;canlib/can_common.c: 494:     if (msg_type == 0x160) {
 30196   009ED6  0E60               	movlw	96
 30197   009ED8  1808               	xorwf	get_reset_board_id@msg_type^0,w,c
 30198   009EDA  E106               	bnz	i2u1175_41
 30199   009EDC  0409               	decf	(get_reset_board_id@msg_type+1)^0,w,c
 30200   009EDE  A4D8               	btfss	status,2,c
 30201   009EE0  EF74  F04F         	goto	i2u1175_41
 30202   009EE4  EF76  F04F         	goto	i2u1175_40
 30203   009EE8                     i2u1175_41:
 30204   009EE8  EF5F  F04F         	goto	i2l10721
 30205   009EEC                     i2u1175_40:
 30206   009EEC                     
 30207                           ;canlib/can_common.c: 495:         return msg->data[3];
 30208   009EEC  5005               	movf	get_reset_board_id@msg^0,w,c
 30209   009EEE  6ED9               	movwf	fsr2l,c
 30210   009EF0  6ADA               	clrf	fsr2h,c
 30211   009EF2  0E06               	movlw	6
 30212   009EF4  26D9               	addwf	fsr2l,f,c
 30213   009EF6  50DF               	movf	indf2,w,c
 30214   009EF8  6E07               	movwf	??_get_reset_board_id^0,c
 30215   009EFA  5007               	movf	??_get_reset_board_id^0,w,c
 30216   009EFC  6E05               	movwf	?_get_reset_board_id^0,c
 30217   009EFE  6A06               	clrf	(?_get_reset_board_id+1)^0,c
 30218   009F00                     i2l363:
 30219   009F00  0012               	return		;funcret
 30220   009F02                     __end_of_get_reset_board_id:
 30221                           	callstack 0
 30222                           
 30223 ;; *************** function _get_message_type *****************
 30224 ;; Defined at:
 30225 ;;		line 584 in file "canlib/can_common.c"
 30226 ;; Parameters:    Size  Location     Type
 30227 ;;  msg             1    0[COMRAM] PTR const struct .
 30228 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30229 ;; Auto vars:     Size  Location     Type
 30230 ;;		None
 30231 ;; Return value:  Size  Location     Type
 30232 ;;                  2    0[COMRAM] unsigned short 
 30233 ;; Registers used:
 30234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30235 ;; Tracked objects:
 30236 ;;		On entry : 0/0
 30237 ;;		On exit  : 0/0
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30244 ;;Total ram usage:        4 bytes
 30245 ;; Hardware stack levels used: 1
 30246 ;; This function calls:
 30247 ;;		Nothing
 30248 ;; This function is called by:
 30249 ;;		_get_reset_board_id
 30250 ;;		_can_msg_handler
 30251 ;;		_get_fill_info
 30252 ;;		_get_general_cmd_type
 30253 ;;		_get_actuator_id
 30254 ;;		_get_curr_actuator_state
 30255 ;;		_get_req_actuator_state
 30256 ;;		_get_req_actuator_state_analog
 30257 ;;		_get_curr_arm_state
 30258 ;;		_get_req_arm_state
 30259 ;;		_get_timestamp
 30260 ;;		_is_sensor_data
 30261 ;;		_get_imu_data
 30262 ;;		_get_state_est_data
 30263 ;;		_get_analog_data
 30264 ;;		_get_temp_data
 30265 ;;		_get_altitude_data
 30266 ;;		_get_pyro_voltage_data
 30267 ;;		_get_gps_time
 30268 ;;		_get_gps_lat
 30269 ;;		_get_gps_lon
 30270 ;;		_get_gps_alt
 30271 ;;		_get_gps_info
 30272 ;;		_get_state_est_calibration_msg
 30273 ;;		_message_debug_level
 30274 ;; This function uses a non-reentrant model
 30275 ;;
 30276                           
 30277                           	psect	text122
 30278   00A0D2                     __ptext122:
 30279                           	callstack 0
 30280   00A0D2                     _get_message_type:
 30281                           	callstack 12
 30282   00A0D2                     
 30283                           ;canlib/can_common.c: 584: uint16_t get_message_type(const can_msg_t *msg);canlib/can_co
      +                          mmon.c: 585: {;canlib/can_common.c: 587:     if (!msg) { return 0; }
 30284   00A0D2  5001               	movf	get_message_type@msg^0,w,c
 30285   00A0D4  A4D8               	btfss	status,2,c
 30286   00A0D6  EF6F  F050         	goto	i2u1095_41
 30287   00A0DA  EF71  F050         	goto	i2u1095_40
 30288   00A0DE                     i2u1095_41:
 30289   00A0DE  EF77  F050         	goto	i2l10239
 30290   00A0E2                     i2u1095_40:
 30291   00A0E2  0E00               	movlw	0
 30292   00A0E4  6E02               	movwf	(?_get_message_type+1)^0,c
 30293   00A0E6  0E00               	movlw	0
 30294   00A0E8  6E01               	movwf	?_get_message_type^0,c
 30295   00A0EA  EF86  F050         	goto	i2l416
 30296   00A0EE                     i2l10239:
 30297                           
 30298                           ;canlib/can_common.c: 589:     return (msg->sid & 0x7E0);
 30299   00A0EE  5001               	movf	get_message_type@msg^0,w,c
 30300   00A0F0  6ED9               	movwf	fsr2l,c
 30301   00A0F2  6ADA               	clrf	fsr2h,c
 30302   00A0F4  006F FF78  F003    	movff	postinc2,??_get_message_type
 30303   00A0FA  006F FF74  F004    	movff	postdec2,??_get_message_type+1
 30304   00A100  0EE0               	movlw	224
 30305   00A102  1403               	andwf	??_get_message_type^0,w,c
 30306   00A104  6E01               	movwf	?_get_message_type^0,c
 30307   00A106  0E07               	movlw	7
 30308   00A108  1404               	andwf	(??_get_message_type+1)^0,w,c
 30309   00A10A  6E02               	movwf	(?_get_message_type+1)^0,c
 30310   00A10C                     i2l416:
 30311   00A10C  0012               	return		;funcret
 30312   00A10E                     __end_of_get_message_type:
 30313                           	callstack 0
 30314                           
 30315 ;; *************** function _get_board_unique_id *****************
 30316 ;; Defined at:
 30317 ;;		line 592 in file "canlib/can_common.c"
 30318 ;; Parameters:    Size  Location     Type
 30319 ;;  msg             1    0[COMRAM] PTR const struct .
 30320 ;;		 -> can_handle_interrupt@rcvd_msg_753(11), can_handle_interrupt@rcvd_msg(11), 
 30321 ;; Auto vars:     Size  Location     Type
 30322 ;;		None
 30323 ;; Return value:  Size  Location     Type
 30324 ;;                  1    wreg      unsigned char 
 30325 ;; Registers used:
 30326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30327 ;; Tracked objects:
 30328 ;;		On entry : 0/0
 30329 ;;		On exit  : 0/0
 30330 ;;		Unchanged: 0/0
 30331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30332 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30336 ;;Total ram usage:        1 bytes
 30337 ;; Hardware stack levels used: 1
 30338 ;; This function calls:
 30339 ;;		Nothing
 30340 ;; This function is called by:
 30341 ;;		_can_msg_handler
 30342 ;; This function uses a non-reentrant model
 30343 ;;
 30344                           
 30345                           	psect	text123
 30346   00A3B6                     __ptext123:
 30347                           	callstack 0
 30348   00A3B6                     _get_board_unique_id:
 30349                           	callstack 13
 30350   00A3B6                     
 30351                           ;canlib/can_common.c: 592: uint8_t get_board_unique_id(const can_msg_t *msg);canlib/can_
      +                          common.c: 593: {;canlib/can_common.c: 595:     if (!msg) { return 0; }
 30352   00A3B6  5001               	movf	get_board_unique_id@msg^0,w,c
 30353   00A3B8  A4D8               	btfss	status,2,c
 30354   00A3BA  EFE1  F051         	goto	i2u1176_41
 30355   00A3BE  EFE3  F051         	goto	i2u1176_40
 30356   00A3C2                     i2u1176_41:
 30357   00A3C2  EFE6  F051         	goto	i2l10739
 30358   00A3C6                     i2u1176_40:
 30359   00A3C6  0E00               	movlw	0
 30360   00A3C8  EFEB  F051         	goto	i2l420
 30361   00A3CC                     i2l10739:
 30362                           
 30363                           ;canlib/can_common.c: 597:     return ((uint8_t) (msg->sid & 0x1F));
 30364   00A3CC  5001               	movf	get_board_unique_id@msg^0,w,c
 30365   00A3CE  6ED9               	movwf	fsr2l,c
 30366   00A3D0  6ADA               	clrf	fsr2h,c
 30367   00A3D2  50DF               	movf	indf2,w,c
 30368   00A3D4  0B1F               	andlw	31
 30369   00A3D6                     i2l420:
 30370   00A3D6  0012               	return		;funcret
 30371   00A3D8                     __end_of_get_board_unique_id:
 30372                           	callstack 0
 30373                           
 30374 ;; *************** function _RED_LED_ON *****************
 30375 ;; Defined at:
 30376 ;;		line 60 in file "./common.h"
 30377 ;; Parameters:    Size  Location     Type
 30378 ;;		None
 30379 ;; Auto vars:     Size  Location     Type
 30380 ;;		None
 30381 ;; Return value:  Size  Location     Type
 30382 ;;                  1    wreg      void 
 30383 ;; Registers used:
 30384 ;;		None
 30385 ;; Tracked objects:
 30386 ;;		On entry : 0/0
 30387 ;;		On exit  : 0/0
 30388 ;;		Unchanged: 0/0
 30389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30394 ;;Total ram usage:        0 bytes
 30395 ;; Hardware stack levels used: 1
 30396 ;; This function calls:
 30397 ;;		Nothing
 30398 ;; This function is called by:
 30399 ;;		_can_msg_handler
 30400 ;; This function uses a non-reentrant model
 30401 ;;
 30402                           
 30403                           	psect	text124
 30404   00A4FC                     __ptext124:
 30405                           	callstack 0
 30406   00A4FC                     _RED_LED_ON:
 30407                           	callstack 13
 30408   00A4FC                     
 30409                           ;./common.h: 61:     LATA4 = 0;
 30410   00A4FC  98BA               	bcf	16314,4,c	;volatile
 30411   00A4FE  0012               	return		;funcret
 30412   00A500                     __end_of_RED_LED_ON:
 30413                           	callstack 0
 30414                           
 30415 ;; *************** function _RED_LED_OFF *****************
 30416 ;; Defined at:
 30417 ;;		line 64 in file "./common.h"
 30418 ;; Parameters:    Size  Location     Type
 30419 ;;		None
 30420 ;; Auto vars:     Size  Location     Type
 30421 ;;		None
 30422 ;; Return value:  Size  Location     Type
 30423 ;;                  1    wreg      void 
 30424 ;; Registers used:
 30425 ;;		None
 30426 ;; Tracked objects:
 30427 ;;		On entry : 0/0
 30428 ;;		On exit  : 0/0
 30429 ;;		Unchanged: 0/0
 30430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30435 ;;Total ram usage:        0 bytes
 30436 ;; Hardware stack levels used: 1
 30437 ;; This function calls:
 30438 ;;		Nothing
 30439 ;; This function is called by:
 30440 ;;		_can_msg_handler
 30441 ;; This function uses a non-reentrant model
 30442 ;;
 30443                           
 30444                           	psect	text125
 30445   00A500                     __ptext125:
 30446                           	callstack 0
 30447   00A500                     _RED_LED_OFF:
 30448                           	callstack 13
 30449   00A500                     
 30450                           ;./common.h: 65:     LATA4 = 1;
 30451   00A500  88BA               	bsf	16314,4,c	;volatile
 30452   00A502  0012               	return		;funcret
 30453   00A504                     __end_of_RED_LED_OFF:
 30454                           	callstack 0
 30455                           
 30456 ;; *************** function _GREEN_LED_ON *****************
 30457 ;; Defined at:
 30458 ;;		line 48 in file "./common.h"
 30459 ;; Parameters:    Size  Location     Type
 30460 ;;		None
 30461 ;; Auto vars:     Size  Location     Type
 30462 ;;		None
 30463 ;; Return value:  Size  Location     Type
 30464 ;;                  1    wreg      void 
 30465 ;; Registers used:
 30466 ;;		None
 30467 ;; Tracked objects:
 30468 ;;		On entry : 0/0
 30469 ;;		On exit  : 0/0
 30470 ;;		Unchanged: 0/0
 30471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30476 ;;Total ram usage:        0 bytes
 30477 ;; Hardware stack levels used: 1
 30478 ;; This function calls:
 30479 ;;		Nothing
 30480 ;; This function is called by:
 30481 ;;		_can_msg_handler
 30482 ;; This function uses a non-reentrant model
 30483 ;;
 30484                           
 30485                           	psect	text126
 30486   00A504                     __ptext126:
 30487                           	callstack 0
 30488   00A504                     _GREEN_LED_ON:
 30489                           	callstack 13
 30490   00A504                     
 30491                           ;./common.h: 49:     LATA3 = 0;
 30492   00A504  96BA               	bcf	16314,3,c	;volatile
 30493   00A506  0012               	return		;funcret
 30494   00A508                     __end_of_GREEN_LED_ON:
 30495                           	callstack 0
 30496                           
 30497 ;; *************** function _GREEN_LED_OFF *****************
 30498 ;; Defined at:
 30499 ;;		line 52 in file "./common.h"
 30500 ;; Parameters:    Size  Location     Type
 30501 ;;		None
 30502 ;; Auto vars:     Size  Location     Type
 30503 ;;		None
 30504 ;; Return value:  Size  Location     Type
 30505 ;;                  1    wreg      void 
 30506 ;; Registers used:
 30507 ;;		None
 30508 ;; Tracked objects:
 30509 ;;		On entry : 0/0
 30510 ;;		On exit  : 0/0
 30511 ;;		Unchanged: 0/0
 30512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30517 ;;Total ram usage:        0 bytes
 30518 ;; Hardware stack levels used: 1
 30519 ;; This function calls:
 30520 ;;		Nothing
 30521 ;; This function is called by:
 30522 ;;		_can_msg_handler
 30523 ;; This function uses a non-reentrant model
 30524 ;;
 30525                           
 30526                           	psect	text127
 30527   00A508                     __ptext127:
 30528                           	callstack 0
 30529   00A508                     _GREEN_LED_OFF:
 30530                           	callstack 13
 30531   00A508                     
 30532                           ;./common.h: 53:     LATA3 = 1;
 30533   00A508  86BA               	bsf	16314,3,c	;volatile
 30534   00A50A  0012               	return		;funcret
 30535   00A50C                     __end_of_GREEN_LED_OFF:
 30536                           	callstack 0
 30537                           
 30538 ;; *************** function _BLUE_LED_ON *****************
 30539 ;; Defined at:
 30540 ;;		line 36 in file "./common.h"
 30541 ;; Parameters:    Size  Location     Type
 30542 ;;		None
 30543 ;; Auto vars:     Size  Location     Type
 30544 ;;		None
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  1    wreg      void 
 30547 ;; Registers used:
 30548 ;;		None
 30549 ;; Tracked objects:
 30550 ;;		On entry : 0/0
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30558 ;;Total ram usage:        0 bytes
 30559 ;; Hardware stack levels used: 1
 30560 ;; This function calls:
 30561 ;;		Nothing
 30562 ;; This function is called by:
 30563 ;;		_can_msg_handler
 30564 ;; This function uses a non-reentrant model
 30565 ;;
 30566                           
 30567                           	psect	text128
 30568   00A50C                     __ptext128:
 30569                           	callstack 0
 30570   00A50C                     _BLUE_LED_ON:
 30571                           	callstack 13
 30572   00A50C                     
 30573                           ;./common.h: 37:     LATA2 = 0;
 30574   00A50C  94BA               	bcf	16314,2,c	;volatile
 30575   00A50E  0012               	return		;funcret
 30576   00A510                     __end_of_BLUE_LED_ON:
 30577                           	callstack 0
 30578                           
 30579 ;; *************** function _BLUE_LED_OFF *****************
 30580 ;; Defined at:
 30581 ;;		line 40 in file "./common.h"
 30582 ;; Parameters:    Size  Location     Type
 30583 ;;		None
 30584 ;; Auto vars:     Size  Location     Type
 30585 ;;		None
 30586 ;; Return value:  Size  Location     Type
 30587 ;;                  1    wreg      void 
 30588 ;; Registers used:
 30589 ;;		None
 30590 ;; Tracked objects:
 30591 ;;		On entry : 0/0
 30592 ;;		On exit  : 0/0
 30593 ;;		Unchanged: 0/0
 30594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30599 ;;Total ram usage:        0 bytes
 30600 ;; Hardware stack levels used: 1
 30601 ;; This function calls:
 30602 ;;		Nothing
 30603 ;; This function is called by:
 30604 ;;		_can_msg_handler
 30605 ;; This function uses a non-reentrant model
 30606 ;;
 30607                           
 30608                           	psect	text129
 30609   00A510                     __ptext129:
 30610                           	callstack 0
 30611   00A510                     _BLUE_LED_OFF:
 30612                           	callstack 13
 30613   00A510                     
 30614                           ;./common.h: 41:     LATA2 = 1;
 30615   00A510  84BA               	bsf	16314,2,c	;volatile
 30616   00A512  0012               	return		;funcret
 30617   00A514                     __end_of_BLUE_LED_OFF:
 30618                           	callstack 0
 30619                           
 30620                           ;
 30621                           ; H/W Interrupt Vector Table @ 0x8
 30622                           ;
 30623                           
 30624                           	psect	ivt0x8
 30625   000008                     __pivt0x8:
 30626                           	callstack 0
 30627   000008                     ivt0x8_base:
 30628                           	callstack 0
 30629                           
 30630                           ; high-priority vector
 30631   000008  EF02  F04F         	goto	_interrupt_handler
 30632   000018                     	org	16
 30633                           
 30634                           ; low-priority vector
 30635   000018  00FF               	reset	
 30636                           
 30637                           	psect	rparam
 30638   000000                     
 30639                           	psect	config
 30640                           
 30641                           ;Config register CONFIG1L @ 0x300000
 30642                           ;	External Oscillator Selection
 30643                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 30644                           ;	Reset Oscillator Selection
 30645                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 30646   300000                     	org	3145728
 30647   300000  FA                 	db	250
 30648                           
 30649                           ;Config register CONFIG1H @ 0x300001
 30650                           ;	Clock out Enable bit
 30651                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 30652                           ;	PRLOCKED One-Way Set Enable bit
 30653                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 30654                           ;	Clock Switch Enable bit
 30655                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30656                           ;	Fail-Safe Clock Monitor Enable bit
 30657                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 30658   300001                     	org	3145729
 30659   300001  FF                 	db	255
 30660                           
 30661                           ;Config register CONFIG2L @ 0x300002
 30662                           ;	MCLR Enable bit
 30663                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 30664                           ;	Power-up timer selection bits
 30665                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 30666                           ;	Multi-vector enable bit
 30667                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 30668                           ;	IVTLOCK bit One-way set enable bit
 30669                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 30670                           ;	Low Power BOR Enable bit
 30671                           ;	LPBOREN = OFF, ULPBOR disabled
 30672                           ;	Brown-out Reset Enable bits
 30673                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 30674   300002                     	org	3145730
 30675   300002  F7                 	db	247
 30676                           
 30677                           ;Config register CONFIG2H @ 0x300003
 30678                           ;	Brown-out Reset Voltage Selection bits
 30679                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 30680                           ;	ZCD Disable bit
 30681                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 30682                           ;	PPSLOCK bit One-Way Set Enable bit
 30683                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 30684                           ;	Stack Full/Underflow Reset Enable bit
 30685                           ;	STVREN = ON, Stack full/underflow will cause Reset
 30686                           ;	Debugger Enable bit
 30687                           ;	DEBUG = OFF, Background debugger disabled
 30688                           ;	Extended Instruction Set Enable bit
 30689                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 30690   300003                     	org	3145731
 30691   300003  FF                 	db	255
 30692                           
 30693                           ;Config register CONFIG3L @ 0x300004
 30694                           ;	WDT Period selection bits
 30695                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30696                           ;	WDT operating mode
 30697                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 30698   300004                     	org	3145732
 30699   300004  9F                 	db	159
 30700                           
 30701                           ;Config register CONFIG3H @ 0x300005
 30702                           ;	WDT Window Select bits
 30703                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30704                           ;	WDT input clock selector
 30705                           ;	WDTCCS = SC, Software Control
 30706   300005                     	org	3145733
 30707   300005  FF                 	db	255
 30708                           
 30709                           ;Config register CONFIG4L @ 0x300006
 30710                           ;	Boot Block Size selection bits
 30711                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 30712                           ;	Boot Block enable bit
 30713                           ;	BBEN = OFF, Boot block disabled
 30714                           ;	Storage Area Flash enable bit
 30715                           ;	SAFEN = OFF, SAF disabled
 30716                           ;	Application Block write protection bit
 30717                           ;	WRTAPP = OFF, Application Block not write protected
 30718   300006                     	org	3145734
 30719   300006  FF                 	db	255
 30720                           
 30721                           ;Config register CONFIG4H @ 0x300007
 30722                           ;	Boot Block Write Protection bit
 30723                           ;	WRTB = OFF, Boot Block not write-protected
 30724                           ;	Configuration Register Write Protection bit
 30725                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 30726                           ;	Data EEPROM Write Protection bit
 30727                           ;	WRTD = OFF, Data EEPROM not write-protected
 30728                           ;	SAF Write protection bit
 30729                           ;	WRTSAF = OFF, SAF not Write Protected
 30730                           ;	Low Voltage Programming Enable bit
 30731                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 30732   300007                     	org	3145735
 30733   300007  FF                 	db	255
 30734                           
 30735                           ;Config register CONFIG5L @ 0x300008
 30736                           ;	PFM and Data EEPROM Code Protection bit
 30737                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 30738   300008                     	org	3145736
 30739   300008  FF                 	db	255
 30740                           
 30741                           ;Config register CONFIG5H @ 0x300009
 30742                           ;	unspecified, using default values
 30743   300009                     	org	3145737
 30744   300009  FF                 	db	255
 30745                           tosu	equ	0x3FFF
 30746                           tosh	equ	0x3FFE
 30747                           tosl	equ	0x3FFD
 30748                           stkptr	equ	0x3FFC
 30749                           pclatu	equ	0x3FFB
 30750                           pclath	equ	0x3FFA
 30751                           pcl	equ	0x3FF9
 30752                           tblptru	equ	0x3FF8
 30753                           tblptrh	equ	0x3FF7
 30754                           tblptrl	equ	0x3FF6
 30755                           tablat	equ	0x3FF5
 30756                           prodh	equ	0x3FF4
 30757                           prodl	equ	0x3FF3
 30758                           indf0	equ	0x3FEF
 30759                           postinc0	equ	0x3FEE
 30760                           postdec0	equ	0x3FED
 30761                           preinc0	equ	0x3FEC
 30762                           plusw0	equ	0x3FEB
 30763                           fsr0h	equ	0x3FEA
 30764                           fsr0l	equ	0x3FE9
 30765                           wreg	equ	0x3FE8
 30766                           indf1	equ	0x3FE7
 30767                           postinc1	equ	0x3FE6
 30768                           postdec1	equ	0x3FE5
 30769                           preinc1	equ	0x3FE4
 30770                           plusw1	equ	0x3FE3
 30771                           fsr1h	equ	0x3FE2
 30772                           fsr1l	equ	0x3FE1
 30773                           bsr	equ	0x3FE0
 30774                           indf2	equ	0x3FDF
 30775                           postinc2	equ	0x3FDE
 30776                           postdec2	equ	0x3FDD
 30777                           preinc2	equ	0x3FDC
 30778                           plusw2	equ	0x3FDB
 30779                           fsr2h	equ	0x3FDA
 30780                           fsr2l	equ	0x3FD9
 30781                           status	equ	0x3FD8

Data Sizes:
    Strings     53
    Constant    263
    Data        9
    BSS         1369
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      88
    BANK0           160    160     160
    BANK1           256    207     250
    BANK2           256      0     182
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    buf$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    build_analog_data_msg@output	PTR struct . size(2) Largest target is 11
		 -> main@msg(BANK1[11]), 

    build_board_stat_msg@error_data	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK1[7]), 

    can_msg_handler@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), NULL(), 

    can_rcv_cb$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    can_send@message	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_send_fp$0	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK1[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    ctx$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> bw(BANK1[2]), putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 71
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), 

    FatFs@ff$F2407	PTR struct .[1] size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    Fil$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_mount@path(BANK0[2]), f_open@path(BANK1[2]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_chdir@fs(COMRAM[2]), f_mount@fs(BANK0[2]), f_open@fs(BANK1[2]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fxls_read_accel_data@x	PTR short  size(2) Largest target is 2
		 -> main@x(BANK1[2]), 

    fxls_read_accel_data@y	PTR short  size(2) Largest target is 2
		 -> main@y(BANK1[2]), 

    fxls_read_accel_data@z	PTR short  size(2) Largest target is 2
		 -> main@z(BANK1[2]), 

    get_board_unique_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 
		 -> f_open@path(BANK1[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[1]), STR_12(CODE[9]), STR_7(CODE[1]), STR_8(CODE[9]), 

    get_message_type@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    get_offset_bytes@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    get_offset_bytes@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    get_reset_board_id@msg	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    i2c_read@data	PTR unsigned char  size(1) Largest target is 9
		 -> i2c_read_reg16@data(COMRAM[2]), i2c_read_reg8@data(BANK0[1]), read_flow_sensor_data@data(COMRAM[9]), 

    i2c_read_reg8@value	PTR unsigned char  size(2) Largest target is 1
		 -> data_ready@status(BANK0[1]), fxls_get_prod_rev@res(BANK0[1]), fxls_get_whoami@res(BANK0[1]), fxls_init@sys_mode(BANK0[1]), 
		 -> fxls_read_accel_data@status(BANK0[1]), fxls_read_accel_data@x_lsb(BANK0[1]), fxls_read_accel_data@x_msb(BANK0[1]), fxls_read_accel_data@y_lsb(BANK0[1]), 
		 -> fxls_read_accel_data@y_msb(BANK0[1]), fxls_read_accel_data@z_lsb(BANK0[1]), fxls_read_accel_data@z_msb(BANK0[1]), main@buf_status(BANK1[1]), 
		 -> main@rev(BANK1[1]), main@status(BANK1[1]), main@sys_mode(BANK1[1]), main@who(BANK1[1]), 

    i2c_write@data	PTR const unsigned char  size(1) Largest target is 3
		 -> i2c_read_reg16@reg(COMRAM[1]), i2c_read_reg8@reg(BANK0[1]), i2c_write_reg16@data(COMRAM[3]), i2c_write_reg8@data(BANK0[2]), 
		 -> read_flow_sensor_data@start_cmd(COMRAM[2]), read_flow_sensor_data@stop_cmd(COMRAM[2]), 

    info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), pb$fp(COMRAM[3]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    ioInfo$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), STR_4(CODE[4]), 
		 -> STR_6(CODE[6]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 71
		 -> dj$fn(COMRAM[12]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), pb$buf(COMRAM[64]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> dj$fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 150
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[150]), txb_heartbeat@msg_sent(BANK0[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 150
		 -> RXB0D0(BITBIGSFRlhhhhh[1]), RXB1D0(BITBIGSFRlhhhllhhhhl[1]), SD_SendCmd@address(BANK0[4]), send_status_err@board_stat_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK1[11]), tx_pool(BANK2[150]), txb_heartbeat@msg_sent(BANK0[11]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    receive_callback$0	PTR const struct . size(1) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S1056$0$0	PTR const struct . size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    S1056$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S1056$can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2136$3$0	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    S2136$4$0	PTR void  size(2) Largest target is 0

    S2136$5$0	PTR void  size(2) Largest target is 0

    S2136$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S2136$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S2136$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S2136$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S2136$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S2136$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2136$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    S2136$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S2136$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S2367$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2374$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2383$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    S2393$fp	PTR struct . size(2) Largest target is 0

    S3656SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    S5783$buffer	PTR unsigned char  size(2) Largest target is 0

    S5783$source	PTR const unsigned char  size(2) Largest target is 0

    S978$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorRead@info(BANK0[13]), 

    SD_SPI_AsyncReadTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(1) Largest target is 14
		 -> SD_SPI_SectorWrite@info(BANK0[13]), 

    SD_SPI_AsyncWriteTasks@info$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), FatFs(BIGRAM[563]), Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), FatFs(BIGRAM[563]), 
		 -> FatFs$win(COMRAM[512]), Fil(BIGRAM[546]), Fil$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> send_status_ok@text(BANK1[3]), STR_13(CODE[2]), STR_9(CODE[12]), NULL(NULL[0]), 

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 150
		 -> can_handle_interrupt@rcvd_msg(COMRAM[11]), can_handle_interrupt@rcvd_msg_753(COMRAM[11]), SD_SendCmd@address_bytes(BANK0[4]), tx_pool(BANK2[150]), 
		 -> TXB0D0(BITBIGSFRlhhhllhhl[1]), txb_heartbeat@msg_sent(BANK0[11]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> f_gets@s(COMRAM[4]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> FatFs(BIGRAM[563]), Fil(BIGRAM[546]), send_status_ok@text(BANK1[3]), STR_13(CODE[2]), 
		 -> STR_9(CODE[12]), NULL(NULL[0]), 

    spiMaster$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDFAST_open(), SDSLOW_open(), 

    spiMaster$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> send_status_ok@text(BANK1[3]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_init@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_init@pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_is_empty@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_is_empty@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_is_full@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_is_full@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_peek@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_pop@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_pop@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_pop@element	PTR void  size(1) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_push@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK1[10]), buf@can_tx_buffer$F1072(BANK1[10]), 

    srb_push@ctx$memory_pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    srb_push@element	PTR const void  size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), FatFs$win(COMRAM[512]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    txb_enqueue@msg	PTR const struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    txb_init@can_tx_ready	PTR FTN()_Bool  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@pool	PTR void  size(2) Largest target is 150
		 -> tx_pool(BANK2[150]), 

    validate$3131	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb$fp(COMRAM[3]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK0[2]), f_read@fs(COMRAM[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK1[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    write_timestamp_2bytes@output	PTR struct . size(2) Largest target is 11
		 -> main@msg(BANK1[11]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> send_status_err@board_stat_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_reset_board_id
    _get_reset_board_id->_get_message_type

Critical Paths under _main in BANK0

    _txb_init->_srb_init
    _srb_init->___lwdiv
    _txb_heartbeat->_srb_pop
    _srb_pop->_get_offset_bytes
    _can_send->_memcpy
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lldiv
    _f_write->_create_chain
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _ld_clust->_ld_word
    _dir_find->_dir_next
    _create_name->_mem_set
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _send_status_err->_txb_enqueue
    _txb_enqueue->_srb_push
    _srb_push->_get_offset_bytes
    _get_offset_bytes->___wmul
    _build_board_stat_msg->_millis
    _fxls_read_accel_data->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _fxls_init->_i2c_read_reg8
    _i2c_write_reg8->_i2c_write
    _fxls_get_whoami->_i2c_read_reg8
    _fxls_get_prod_rev->_i2c_read_reg8
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open
    _data_ready->_i2c_read_reg8
    _i2c_read_reg8->_i2c_read
    _i2c_read_reg8->_i2c_write
    _build_analog_data_msg->_millis

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_send_status_ok
    _send_status_ok->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0 1662795
                                            166 BANK1     41    41      0
           _ADCC_GetSingleConversion
                    _ADCC_Initialize
                 _SET_ACCEL_I2C_ADDR
                  _SYSTEM_Initialize
              _build_analog_data_msg
         _can_generate_timing_params
                           _can_init
                         _data_ready
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
                  _fxls_get_prod_rev
                    _fxls_get_whoami
                          _fxls_init
               _fxls_read_accel_data
                           _i2c_init
                      _i2c_read_reg8
                             _millis
                    _send_status_err
                     _send_status_ok
                        _timer0_init
                      _txb_heartbeat
                           _txb_init
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    2084
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1600
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _txb_heartbeat                                       11    11      0    8279
                                             21 BANK0     11    11      0
                           _can_send *
                       _can_send_rdy *
                       _srb_is_empty
                            _srb_pop
 ---------------------------------------------------------------------------------
 (2) _srb_pop                                              9     6      3    5049
                                             12 BANK0      9     6      3
                   _get_offset_bytes
                             _memcpy
                       _srb_is_empty
 ---------------------------------------------------------------------------------
 (3) _srb_is_empty                                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _can_send_rdy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _can_send                                             3     2      1    2710
                                             11 BANK0      3     2      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      21    21      0  771236
                                            145 BANK1     21    21      0
                    _BLUE_LED_TOGGLE
               _build_board_stat_msg
                            _f_close
                             _f_open
                            _f_write
                             _millis
                            _sprintf
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    4267
                                             31 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    3775
                                             25 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3314
                                             13 BANK0     12     9      3
                            ___lldiv
                            ___llmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     592
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8   87116
                                             23 BANK1     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5  602758
                                             65 BANK1     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10   57970
                                            148 BANK0     10     0     10
                                              0 BANK1     15    15      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4  209880
                                             51 BANK1     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2060
                                              7 BANK0     12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2  170784
                                            158 BANK0      2     2      0
                                             45 BANK1      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         22    18      4    4355
                                              8 BANK0     22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     307
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2  195407
                                             57 BANK1      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    1008
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4  169739
                                             45 BANK1     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             30    24      6   31380
                                            141 BANK0     16    10      6
                                              0 BANK1     10    10      0
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            30    26      4  115254
                                            154 BANK0      4     0      4
                                             23 BANK1     22    22      0
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (6) _dir_clear                                           18    12      6   24662
                                            104 BANK0     18    12      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (3) _clst2sect                                           12     6      6    2234
                                             12 BANK0     12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        29    23      6   59336
                                            148 BANK0      6     0      6
                                              0 BANK1     23    23      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             33    23     10   29410
                                            115 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6   27404
                                            115 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_close                                              5     3      2   65928
                                            122 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                              11     9      2   64396
                                            115 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4    1147
                                              2 BANK0     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   25589
                                            104 BANK0     11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _st_dword                                             6     0      6    1889
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _mem_set                                              8     2      6    1750
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                           5     2      3     245
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    1728
                                              4 BANK0      9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (5) _st_word                                              4     0      4    1033
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BLUE_LED_TOGGLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_err                                     11    11      0   10871
                                             24 BANK0     11    11      0
                     _RED_LED_TOGGLE
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _txb_enqueue                                          2     0      2    5688
                                             22 BANK0      2     0      2
                        _srb_is_full
                           _srb_push
 ---------------------------------------------------------------------------------
 (3) _srb_push                                            10     6      4    5052
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                        _srb_is_full
 ---------------------------------------------------------------------------------
 (4) _srb_is_full                                          6     4      2     425
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _get_offset_bytes                                     6     2      4    1526
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     862
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _millis                                               8     4      4      34
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5039
                                              8 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3606
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RED_LED_TOGGLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _fxls_read_accel_data                                15     9      6   11623
                                             74 BANK0     15     9      6
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             64 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1703
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fxls_init                                            8     8      0    8691
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
                     _i2c_write_reg8
 ---------------------------------------------------------------------------------
 (2) _i2c_write_reg8                                       5     3      2    2891
                                              6 BANK0      5     3      2
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _fxls_get_whoami                                      1     1      0    5593
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _fxls_get_prod_rev                                    1     1      0    5593
                                             12 BANK0      1     1      0
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5   67694
                                            135 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   65786
                                            122 BANK0     13     8      5
                                              0 BANK1     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1250
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     892
                                              0 BANK0     13    11      2
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          2     2      0      74
                                              0 BANK0      2     2      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                      2     2      0    7954
                                             84 BANK0      2     2      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_MediaInitialize                              50    50      0    7883
                                             34 BANK0     50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     996
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_DelayMilliseconds                             5     5      0      96
                                              1 BANK0      5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (4) _check_fs                                             7     1      6   25395
                                            115 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   22470
                                            104 BANK0     11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2   10333
                                             85 BANK0     19    17      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8    9623
                                             75 BANK0     10     2      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorWrite                                  27    19      8    7299
                                             48 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncWriteTasks                              14    13      1    6165
                                             34 BANK0     14    13      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           10     2      8    9115
                                             72 BANK0     10     2      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorRead                                   27    19      8    7601
                                             45 BANK0     27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncReadTasks                               11    10      1    6479
                                             34 BANK0     11    10      1
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     407
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeBlock                                   6     2      4     390
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SD_SendCmd                                          23    18      5    5084
                                             11 BANK0     23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    2428
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SDSLOW_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SDFAST_open                                          0     0      0     155
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (6) _SPI1_Open                                            2     2      0     155
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6    1045
                                              0 BANK0     14     8      6
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1210
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     721
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _data_ready                                           3     1      2    5593
                                             12 BANK0      3     1      2
                      _i2c_read_reg8
 ---------------------------------------------------------------------------------
 (1) _i2c_read_reg8                                        6     3      3    5525
                                              6 BANK0      6     3      3
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            6     4      2    1461
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             6     4      2     921
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6     862
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _build_analog_data_msg                                9     0      9    1905
                                              8 BANK0      9     0      9
                             _millis (ARG)
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (2) _write_timestamp_2bytes                               4     0      4     484
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_ACCEL_I2C_ADDR                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _interrupt_handler                                   2     2      0    4912
                                             42 COMRAM     2     2      0
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (16) _timer0_handle_interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _can_handle_interrupt                               26    26      0    4912
                                             16 COMRAM    26    26      0
                                NULL *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (17) i2_memcpy                                           11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (17) _can_msg_handler                                     9     8      1    4415
                                              9 COMRAM     7     6      1
                       _BLUE_LED_OFF
                        _BLUE_LED_ON
                      _GREEN_LED_OFF
                       _GREEN_LED_ON
                        _RED_LED_OFF
                         _RED_LED_ON
                _get_board_unique_id
                   _get_message_type
                 _get_reset_board_id
 ---------------------------------------------------------------------------------
 (18) _get_reset_board_id                                  5     3      2    2109
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (19) _get_message_type                                    4     2      2    1944
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) _get_board_unique_id                                 1     0      1     120
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (18) _RED_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _RED_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_ON                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _GREEN_LED_OFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_ON                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _BLUE_LED_OFF                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _ADCC_Initialize
   _SET_ACCEL_I2C_ADDR
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _build_analog_data_msg
     _millis (ARG)
     _write_timestamp_2bytes (ARG)
   _can_generate_timing_params
   _can_init
   _data_ready
     _i2c_read_reg8
       _i2c_read
       _i2c_write
   _f_close
     _f_sync
       _disk_write
         _SD_SPI_SectorWrite
           _SDFAST_open *
             _SPI1_Open
           _SDSLOW_open *
             _SPI1_Open
           _SD_SPI_AsyncWriteTasks *
             _SD_SendCmd
               _SPI1_ExchangeByte *
               _memcpy *
             _SPI1_ExchangeBlock *
             _SPI1_ExchangeByte *
           _SPI1_Close *
       _move_window
         _disk_read
           _SD_SPI_SectorRead
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_AsyncReadTasks *
               _SD_SendCmd
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
               _memset *
             _SPI1_Close *
         _sync_window
           _disk_write
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
         _disk_write
         _mem_set
         _st_dword
         _st_word
         _sync_window
       _validate
         _disk_status
           _SD_SPI_IsMediaInitialized
           _SD_SPI_IsMediaPresent
           _SD_SPI_IsWriteProtected
     _validate
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _ld_word
         _mem_cmp
         _move_window
       _disk_initialize
         _SD_SPI_MediaInitialize
           _SDFAST_open *
           _SDSLOW_open *
           _SD_SPI_DelayMilliseconds *
             _SPI1_ExchangeByte *
           _SD_SendCmd *
           _SPI1_Close *
           _SPI1_ExchangeByte *
           ___lmul *
       _disk_status
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
     _get_ldnumber
   _f_open
     _clst2sect
       ___lmul
     _dir_register
       _dir_alloc
         _dir_next
           _clst2sect
           _create_chain
             _get_fat
               _ld_dword
               _ld_word
               _move_window
             _put_fat
               _ld_dword
               _move_window
               _st_dword
               _st_word
           _dir_clear
             _clst2sect
             _disk_write
             _mem_set
             _sync_window
           _get_fat
         _dir_sdi
           _clst2sect
           _get_fat
         _move_window
       _mem_cpy
       _mem_set
       _move_window
     _disk_read
     _find_volume
     _follow_path
       _create_name
         _chk_chr
         _dbc_1st
         _dbc_2nd
         _mem_set
       _dir_find
         _dir_next
         _dir_sdi
         _mem_cmp
         _move_window
       _dir_sdi
       _ld_clust
         _ld_word
     _get_fat
     _ld_clust
     _ld_dword
     _mem_set
     _move_window
     _remove_chain
       _get_fat
       _put_fat
     _st_clust
     _st_dword
   _f_write
     _clst2sect
     _create_chain
     _disk_read
     _disk_write
     _mem_cpy
     _validate
   _fxls_get_prod_rev
     _i2c_read_reg8
   _fxls_get_whoami
     _i2c_read_reg8
   _fxls_init
     _i2c_read_reg8
     _i2c_write_reg8
       _i2c_write
   _fxls_read_accel_data
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _i2c_read_reg8
   _i2c_init
   _i2c_read_reg8
   _millis
   _send_status_err
     _RED_LED_TOGGLE
     _build_board_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _millis
     _txb_enqueue
       _srb_is_full
       _srb_push
         _get_offset_bytes
           ___wmul
         _memcpy
         _srb_is_full
   _send_status_ok
     _BLUE_LED_TOGGLE
     _build_board_stat_msg
     _f_close
     _f_open
     _f_write
     _millis
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___lldiv
           ___llmod
           _fputc
             _putch
     _txb_enqueue
   _timer0_init
   _txb_heartbeat
     _can_send *
       _memcpy
     _can_send_rdy *
     _srb_is_empty *
     _srb_pop *
       _get_offset_bytes
       _memcpy
       _srb_is_empty
   _txb_init
     _srb_init
       ___lwdiv

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     NULL(Fake) *
     _can_msg_handler *
       _BLUE_LED_OFF
       _BLUE_LED_ON
       _GREEN_LED_OFF
       _GREEN_LED_ON
       _RED_LED_OFF
       _RED_LED_ON
       _get_board_unique_id
       _get_message_type
       _get_reset_board_id
         _get_message_type
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     455      83       27.1%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhlh    1F7      0       0      54        0.0%
BITBIGSFRlhhhll    19C      0       0      74        0.0%
BITBIGSFRlhhhlh    162      0       0      44        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B6       9       71.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CF      FA       7       97.7%
BITBIGSFRlhl        B2      0       0      80        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhhhlh     80      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      58       1       92.6%
BITBIGSFRlhhhlh     5B      0       0      57        0.0%
BITBIGSFRlhhhlh     4D      0       0      49        0.0%
BITBIGSFRhhh        2D      0       0      36        0.0%
BITBIGSFRlhhhlh     2A      0       0      62        0.0%
BITBIGSFRlhhhlh     29      0       0      53        0.0%
BITBIGSFRlhhhlh     29      0       0      66        0.0%
BITBIGSFRhhll       26      0       0      39        0.0%
BITBIGSFRlhhhll     22      0       0      78        0.0%
BITBIGSFRlhhhlh     1C      0       0      59        0.0%
BITBIGSFRlhhhlh     1A      0       0      70        0.0%
BITBIGSFRlhhhlh     11      0       0      69        0.0%
BITBIGSFRhhlhh       D      0       0      37        0.0%
BITBIGSFRlhhhlh      B      0       0      61        0.0%
BITBIGSFRlhhhlh      B      0       0      60        0.0%
BITBIGSFRlhhhlh      B      0       0      72        0.0%
BITBIGSFRlhhhll      9      0       0      76        0.0%
BITBIGSFRlhhhlh      8      0       0      55        0.0%
BITBIGSFRlhhhhh      7      0       0      40        0.0%
BITBIGSFRlhhhlh      6      0       0      65        0.0%
BITBIGSFRhhlhl       5      0       0      38        0.0%
BITBIGSFRlhhhlh      4      0       0      47        0.0%
BITBIGSFRlhhhlh      2      0       0      50        0.0%
BITBIGSFRlhhhlh      2      0       0      51        0.0%
BITBIGSFRlhhhlh      2      0       0      58        0.0%
BITBIGSFRlhhhll      2      0       0      75        0.0%
BITBIGSFRlhhhll      2      0       0      77        0.0%
BITBIGSFRlhhhhl      2      0       0      41        0.0%
BITBIGSFRlhhl        2      0       0      79        0.0%
BITBIGSFRll          2      0       0      81        0.0%
BITBIGSFRlhhhlh      1      0       0      64        0.0%
BITBIGSFRlhhhlh      1      0       0      48        0.0%
BITBIGSFRlhhhlh      1      0       0      45        0.0%
BITBIGSFRlhhhlh      1      0       0      46        0.0%
BITBIGSFRlhhhlh      1      0       0      52        0.0%
BITBIGSFRlhhhlh      1      0       0      63        0.0%
BITBIGSFRlhhhlh      1      0       0      56        0.0%
BITBIGSFRlhhhlh      1      0       0      67        0.0%
BITBIGSFRlhhhlh      1      0       0      68        0.0%
BITBIGSFRlhhhlh      1      0       0      71        0.0%
BITBIGSFRlhhhlh      1      0       0      43        0.0%
BITBIGSFRlhhhll      1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A8      82        0.0%
DATA                 0      0     6FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 20:58:13 2024

                SD_SPI_SectorWrite@result 009A                        ??_get_message_type 0003  
                       _SPI1_ExchangeByte A2FE                              srb_init@pool 0069  
                             get_fat@clst 00D5                  SD_SPI_SectorWrite@status 009B  
                            ___fldiv@aexp 009F                              ___fldiv@bexp 009E  
           SD_SPI_MediaInitialize@timeout 00B2                        _SPI1_ExchangeBlock 918E  
                            ___fldiv@sign 0097                              create_name@c 007D  
                            create_name@d 0072                              create_name@i 0077  
                            create_name@p 0075                          get_ldnumber@path 0060  
          SD_SPI_MediaInitialize@response 00AD                                        l71 78D4  
                                      l81 A48A                                        l75 8942  
                      ?_SPI1_ExchangeByte 0001                                        _bw 01F8  
                     ___wmul@multiplicand 0062     timer0_handle_interrupt@internal_count 004F  
                          ??_dir_register 00FE                   ??_SD_SPI_IsMediaPresent 0060  
                        disk_write@sector 00AD                             create_name@dp 0068  
                           create_name@ni 0073                             create_name@si 007B  
                          create_chain@cs 0113                            create_chain@fs 0111  
                   build_board_stat_msg@i 0075                                       l200 9CF4  
                                     l203 9698                                       l116 A2D6  
                                     l310 950C                                       l214 918C  
                                     l207 8B14                                       l119 A3F4  
                                     l224 8BF6                                       l234 7230  
                                     l219 A094                                       l245 A348  
                                     l183 A1F2                                       l248 A1BA  
                                     l192 9794                                       l187 A180  
                                     l292 8434                                       l802 9F94  
                                     l811 9B08                                       l820 9AA0  
                                     l653 9C96                 SD_SPI_AsyncReadTasks@info 0082  
                                     l903 73FA                                       l824 A39C  
                                     l912 6C14                                       l665 A0A6  
                                     l825 A3B4                                       l762 A4E4  
                                     l922 503A                                       l915 6C18  
                                     l668 A0D0                                       l852 A058  
                                     l940 53DE                                       l909 8E86  
                                     l861 9592                                       l925 53CE  
                                     l759 A4DC                                       l855 90DA  
                                     l927 5046                                       l919 8DB2  
                                     l872 A146                                       l793 98F2  
                                     l961 3874                                       l945 342E  
                                     l858 A228                                       l970 69DE  
                                     l867 9718                                       l891 A4CA  
                                     l964 3902                                       l878 9368  
                                     l879 9370                                       l887 987E  
                                     l895 A4BE                                       l993 33DE  
                                     l898 73F6                                       l995 2F5A  
                     ?_SPI1_ExchangeBlock 0060                                       _Fil 04E9  
                                     _buf 01EE                                       _ctx 01D3  
                     ??_SPI1_ExchangeByte 0060                              disk_read@res 00B1  
                          ??_create_chain 0100              write_timestamp_3bytes@output 0064  
                                     tosl 3FFD                                       wreg 3FE8  
                 __end_of_fxls_get_whoami A446                get_reset_board_id@msg_type 0008  
                            ___flmul@aexp 007F                              ___flmul@bexp 0080  
                 SPI1_ExchangeBlock@block 0060                              ___flmul@sign 007A  
                            ___flmul@temp 0085                              ___flmul@prod 0081  
                  main@last_status_millis 01B3                               _txb_enqueue A148  
              SD_SPI_AsyncReadTasks@bData 008C                            create_name@sfn 0079  
                          srb_is_full@ctx 0060                           create_chain@obj 00F4  
                         create_chain@ncl 010D                  ??_write_timestamp_2bytes 0064  
                         create_chain@scl 0109                           create_chain@res 0108  
                             ld_clust@dir 0069                  ??_write_timestamp_3bytes 0066  
                          ??_GREEN_LED_ON 0001                     main@last_accel_millis 01AA  
                            ___fltol@exp1 00A9                                      l1102 9EAC  
                                    l1016 338E                                      l1201 7D16  
                                    l1017 33CE                                      l1025 7E6E  
                                    l1042 5BE2                                      l1106 775A  
                                    l2011 8720                                      l2003 86AA  
                                    l1211 0ED0                                      l1019 33C6  
                                    l2012 8744                                      l1116 8846  
                                    l1126 42B2                                      l1310 2708  
                                    l1302 224A                                      l2023 A2FC  
                                    l2032 9B6E                                      l1048 5AA4  
                                    l1304 222A                                      l1251 0860  
                                    l1075 4658                                      l1067 4724  
                                    l2211 56FA                                      l2300 92C8  
                                    l1245 06B2                                      l1093 7BB4  
                                    l1173 6466                                      l2213 5712  
                                    l1094 7BB6                                      l1182 6512  
                                    l1175 6450                                      l1256 0C06  
                                    l1272 8202                                      l3016 9F4C  
                                    l2208 55DA                                      l1273 821C  
                                    l3009 679C                                      l2233 832C  
                                    l1186 7A46                                      l1098 9484  
                                    l1362 1560                                      l2307 92D8  
                                    l1611 1F3E                                      l1195 7A38  
                                    l2251 A45C                                      l1267 81CE  
                                    l1363 124C                                      l1355 1722  
                                    l2260 625E                                      l2236 A01A  
                                    l1284 272C                                      l3028 901C  
                                    l1605 9960                                      l1621 1838  
                                    l1277 8CD6                                      l2165 A4EE  
                                    l2254 A444                                      l1551 A4FA  
                                    l2183 A4F2                                      l1391 6E42  
                                    l1295 204C                                      l3039 A514  
                                    l2248 9616                                      l1296 203A  
                                    l1384 16DA                                      l2257 A2B0  
                                    l2273 A284                                      l1289 2708  
                                    l2186 A412                                      l1810 A4B2  
                                    l1563 80F2                                      l1651 1B50  
                                    l1572 809E                                      l1564 8062  
                                    l1580 7FB0                                      l2284 9A28  
                                    l2700 93FA                                      l1813 A474  
                                    l1717 2DF2                                      l1581 7F20  
                                    l2285 9A38                                      l1397 9E02  
                                    l1910 A4EA                                      l1903 A42C  
                                    l1816 A392                                      l1680 4774  
                                    l1648 1AD2                                      l1913 A30E  
                                    l1921 91CE                                      l1745 2D00  
                                    l1762 3D8A                                      l1754 3908  
                                    l1738 2C26                                      l1594 A4A0  
                                    l2570 853C                                      l1907 8A30  
                                    l1915 A31E                                      l1771 3DF2  
                                    l1916 A322                                      l1773 3E08  
                                    l1925 9232                                      l1589 7F5C  
                                    l1597 A4F6                                      l1678 4B76  
                                    l2904 4F88                                      l1873 9BD2  
                                    l2931 75B2                                      l2771 980A  
                                    l2860 5DA2                                      l2764 9802  
                                    l2693 93EA                                      l2950 9D50  
                                    l2942 754A                                      l2855 5F7E  
                                    l2935 74EE                                      l2928 7456  
                                    l2857 5DDE                                      l1994 861C  
                                    l1986 85B6                                      l2866 5E24  
                                    l1978 A258                                      l1995 8640  
                                    l2891 4FC6                                      l2963 9FD8  
                                    l2956 9C34                                      l2868 5E9C  
                                    l2869 5E8A                                      l2894 4E58  
                                    l2887 4C3E                                      l2896 4ED0  
                                    l2897 4EBE                                      STR_1 FFCA  
                                    STR_2 FFCA                                      STR_3 FFFB  
                                    STR_4 FFFB                                      STR_5 FFF5  
                                    STR_6 FFF5                                      STR_7 FFE4  
                                    STR_8 FFE5                                      STR_9 FFD9  
                                    _LATA 3FBA                                      _LATB 3FBB  
                                    _LATC 3FBC                                      _PMD0 39C0  
                                    _PMD1 39C1                                      _PMD2 39C2  
                                    _PMD3 39C3                                      _PMD4 39C4  
                                    _PMD5 39C5                                      _PMD6 39C6  
                                    _PMD7 39C7                                      _PIR5 39A5  
                                    i2l92 6FD8                                      i2l84 6E64  
                                    i2l86 6E60                                      i2l95 6FEC  
                                    i2l87 6E9A                                      i2l88 703C  
                                    i2l97 7000                                      i2l89 6F38  
                                    i2l98 703C                                      i2l99 7014  
                                    _WPUA 3A41                                      _WPUB 3A51  
                                    _WPUC 3A61                                      _WPUE 3A81  
                                    _Fsid 01E0              __end_of_build_board_stat_msg 8436  
                             ?_RED_LED_ON 0001                             _i2c_read_reg8 9B0A  
       SD_SPI_MediaInitialize@CSDResponse 008D                                      _dbuf 0200  
                                    _main 53E0                              find_volume@i 0135  
                                    _prec 01DC                             srb_pop@offset 0073  
                                    fsr0h 3FEA                                      fsr1h 3FE2  
                                    indf0 3FEF                                      fsr2h 3FDA  
                                    fsr0l 3FE9                                      indf1 3FE7  
                                    indf2 3FDF                                      fsr1l 3FE1  
                                    fsr2l 3FD9                      ??_SPI1_ExchangeBlock 0064  
                             ld_dword@ptr 0060                             disk_ioctl@cmd 0060  
                           disk_read@buff 00A8                             disk_read@pdrv 00B0  
                                    prodh 3FF4                                      prodl 3FF3  
                          ??_get_ldnumber 0062                          ??_RED_LED_TOGGLE 0060  
                                    start 001A                           ___fldiv@new_exp 0098  
               __end_of_SPI1_ExchangeByte A324                              ?_follow_path 0133  
             build_analog_data_msg@output 006F                              ___param_bank 0000  
                         srb_is_empty@ctx 0060                       get_offset_bytes@ctx 0066  
                         create_name@path 006A                          create_chain@clst 00F6  
                         ??_GREEN_LED_OFF 0001                         i2c_write_reg8@reg 0066  
                       i2c_write_reg8@val 0067                               _sync_window 7232  
                            ?_SDFAST_open 0001             __end_of_OSCILLATOR_Initialize A476  
                                   l12011 4B94                                     l12101 4E88  
                                   l12021 4BCC                                     l12013 4B96  
                                   l12111 4EFA                                     l12103 4EB6  
                                   l12031 4BF8                                     l12023 4BDC  
                                   l12015 4BA6                                     l12007 4B78  
                                   l12121 4F70                                     l12113 4F24  
                                   l12041 4C4E                                     l12033 4C08  
                                   l12025 4BE2                                     l12017 4BB6  
                                   l12009 4B86                                     l12123 4F8C  
                                   l12131 4FB2                                     l12107 4EE0  
                                   l12115 4F28                                     l12051 4C8C  
                                   l12043 4C5E                                     l12035 4C18  
                                   l12027 4BE8                                     l12019 4BC6  
                                   l12133 4FB6                                     l12125 4F9C  
                                   l12117 4F42                                     l12109 4EEC  
                                   l12061 4CE6                                     l12053 4CA6  
                                   l12037 4C28                                     l12029 4BF6  
                                   l12127 4FAA                                     l12119 4F56  
                                   l12071 4D34                                     l12063 4CF4  
                                   l12055 4CB2                                     l12047 4C72  
                                   l12039 4C2E                                     l12129 4FAC  
                                   l12081 4DB2                                     l12073 4D52  
                                   l12065 4D04                                     l12057 4CCE  
                                   l12049 4C82                                     l12091 4E48  
                                   l12083 4DDC                                     l12075 4D62  
                                   l12067 4D14                                     l12059 4CDA  
                                   l12093 4E56                                     l12085 4E12  
                                   l12077 4D82                                     l12069 4D24  
                                   l12095 4E68                                     l12087 4E20  
                                   l12079 4D92                                     l12097 4E76  
                                   l12089 4E3E                                     l15001 9534  
                                   l12099 4E7A                                     l15011 957C  
                                   l15003 9546                                     l15021 8E0A  
                                   l15013 8DB4                                     l11901 5C98  
                                   l15005 9558                                     l15101 52C6  
                                   l15023 8E50                                     l15015 8DBA  
                                   l11911 5CD8                                     l11903 5C9A  
                                   l15007 956A                                     l15111 33E0  
                                   l15025 8E5A                                     l15017 8DEA  
                                   l15041 9A08                                     l15033 99CE  
                                   l11921 5D08                                     l11913 5CE0  
                                   l11905 5CA2                                     l15009 956E  
                                   l15105 5348                                     l15121 3448  
                                   l15113 33E6                                     l15201 2E0C  
                                   l16001 772C                                     l14411 9D30  
                                   l14403 9CF6                                     l15027 8E5E  
                                   l15019 8DFA                                     l15035 99E0  
                                   l11931 5D46                                     l11923 5D08  
                                   l11915 5CE4                                     l11907 5CB2  
                                   l15043 A10E                                     l15131 34E8  
                                   l15123 34AC                                     l15115 3400  
                                   l15203 2E24                                     l15211 2E9E  
                                   l15051 8CD8                                     l16011 3E22  
                                   l16003 7746                                     l14421 8958  
                                   l14405 9D0A                                     l14413 9D34  
                                   l14501 9216                                     l15029 8E84  
                                   l15037 99EE                                     l11941 5D92  
                                   l11933 5D56                                     l11909 5CC8  
                                   l15045 A116                                     l15109 53A4  
                                   l15141 355A                                     l15133 34F6  
                                   l15301 32F4                                     l15221 2F18  
                                   l15213 2ECA                                     l15205 2E4A  
                                   l15053 8CE6                                     l16101 4152  
                                   l16021 3E94                                     l16013 3E30  
                                   l14423 8A24                                     l14503 A4D6  
                                   l14415 A302                                     l14407 9D1A  
                                   l14511 272E                                     l15039 99FE  
                                   l11951 5DDC                                     l11943 5DA0  
                                   l11935 5D66                                     l11927 5D1C  
                                   l11919 5CF8                                     l11871 5BF2  
                                   l15047 A128                                     l15071 504E  
                                   l15063 4FC8                                     l15151 3604  
                                   l15143 35BE                                     l15135 3500  
                                   l15127 34C0                                     l15119 3436  
                                   l15311 33B2                                     l15303 3306  
                                   l15223 2F2C                                     l15215 2EE6  
                                   l15207 2E60                                     l15055 8D28  
                                   l16111 418E                                     l16031 3EF8  
                                   l16023 3EB6                                     l16015 3E4C  
                                   l14425 8A28                                     l14417 A308  
                                   l14409 9D1E                                     l14441 39E0  
                                   l14433 390A                                     l14521 275A  
                                   l14513 2732                                     l15401 183A  
                                   l11961 5E22                                     l11953 5DEE  
                                   l11945 5DAC                                     l11937 5D6E  
                                   l11929 5D36                                     l11881 5C32  
                                   l11873 5C00                                     l17001 832E  
                                   l15049 A12E                                     l15081 5108  
                                   l15073 5060                                     l15065 4FE0  
                                   l15153 3644                                     l15137 3538  
                                   l15129 34E4                                     l15305 332A  
                                   l15241 3028                                     l15233 2FA2  
                                   l15209 2E8A                                     l15321 7D66  
                                   l15313 7D18                                     l16121 41E2  
                                   l16113 41A8                                     l16033 3F00  
                                   l16025 3EBA                                     l16017 3E5E  
                                   l16009 3E0A                                     l14419 8948  
                                   l14507 A4DE                                     l14451 3AEA  
                                   l14443 3A16                                     l14435 3924  
                                   l14611 2AF2                                     l14531 27CC  
                                   l14523 2774                                     l16211 7C66  
                                   l16203 7C16                                     l15411 18C2  
                                   l15403 186E                                     l11971 5E82  
                                   l11955 5E04                                     l11963 5E34  
                                   l11947 5DCA                                     l11939 5D7E  
                                   l11891 5C58                                     l11883 5C34  
                                   l11875 5C02                                     l17011 836C  
                                   l17003 8340                                     l15091 51D2  
                                   l15067 4FFC                                     l15163 3714  
                                   l15155 3670                                     l15147 35D2  
                                   l15139 354A                                     l15307 3378  
                                   l15251 30B2                                     l15243 3038  
                                   l15235 2FB2                                     l15219 2EFC  
                                   l15227 2F6A                                     l15059 8D3C  
                                   l15331 7DCE                                     l15323 7D8C  
                                   l15315 7D34                                     l16131 4234  
                                   l16123 41F2                                     l16107 4178  
                                   l16051 3F82                                     l16035 3F12  
                                   l16043 3F3A                                     l16027 3ECC  
                                   l16019 3E66                                     l14429 8A2E  
                                   l14461 3B54                                     l14453 3AF4  
                                   l14445 3A4C                                     l14437 3974  
                                   l14701 9BD4                                     l14621 2B94  
                                   l14613 2B26                                     l14541 2836  
                                   l14533 27D8                                     l14525 277C  
                                   l14517 2738                                     l16221 7CDC  
                                   l16213 7C84                                     l16205 7C42  
                                   l15341 98F8                                     l15501 1BBE  
                                   l15413 18C6                                     l15405 1870  
                                   l11981 5EF0                                     l11965 5E42  
                                   l11957 5E0A                                     l11949 5DCC  
                                   l11893 5C66                                     l11877 5C12  
                                   l11885 5C3C                                     l11869 5BE4  
                                   l17021 83C4                                     l15093 51F2  
                                   l15085 517C                                     l15077 50D4  
                                   l15069 5026                                     l15165 3752  
                                   l15157 3696                                     l15149 35F6  
                                   l15181 38D6                                     l15309 33A2  
                                   l15253 30D6                                     l15245 3064  
                                   l15237 2FE6                                     l15261 313A  
                                   l15229 2F8C                                     l15333 7DD8  
                                   l15325 7DAC                                     l16141 4278  
                                   l16125 41F6                                     l16109 418A  
                                   l16061 3FC0                                     l16053 3F94  
                                   l16045 3F5E                                     l16037 3F24  
                                   l16029 3EE6                                     l17101 2214  
                                   l16301 672E                                     l14471 3C08  
                                   l14463 3B86                                     l14455 3B2C  
                                   l14447 3AA2                                     l14439 39AA  
                                   l14703 9BE0                                     l14623 2BA6  
                                   l14615 2B5E                                     l14607 2AD2  
                                   l14543 2848                                     l14535 27FE  
                                   l14527 2780                                     l14519 2744  
                                   l14711 7E70                                     l16215 7CA2  
                                   l15343 990A                                     l15503 1BC2  
                                   l15511 1BFC                                     l15431 1982  
                                   l15415 18C8                                     l15407 1888  
                                   l15423 1900                                     l15191 A48C  
                                   l15351 988E                                     l11991 5F5A  
                                   l11975 5EAC                                     l11983 5EF4  
                                   l11967 5E46                                     l11959 5E14  
                                   l11895 5C68                                     l11887 5C4C  
                                   l11879 5C22                                     l17023 83D0  
                                   l17015 8380                                     l17007 8356  
                                   l16231 80F4                                     l15095 5202  
                                   l15087 51B4                                     l15079 5104  
                                   l15175 37EE                                     l15167 3768  
                                   l15159 3700                                     l15183 3900  
                                   l15271 31A6                                     l15263 3150  
                                   l15255 30F0                                     l15247 307C  
                                   l15239 2FFE                                     l15335 7DFA  
                                   l15327 7DBA                                     l15319 7D3A  
                                   l16143 4288                                     l16127 4208  
                                   l16119 41D2                                     l16071 4000  
                                   l16047 3F6E                                     l16039 3F34  
                                   l17111 2268                                     l17103 2222  
                                   l16311 6774                                     l14473 3C40  
                                   l14481 3C78                                     l14465 3B8A  
                                   l14457 3B32                                     l14449 3AB6  
                                   l14705 9C12                                     l14633 2C28  
                                   l14625 2C12                                     l14617 2B6E  
                                   l14609 2AE8                                     l14561 28A8  
                                   l14545 286E                                     l14537 2810  
                                   l14529 27B6                                     l14721 7F1A  
                                   l14713 7E82                                     l16217 7CD6  
                                   l16209 7C48                                     l15345 9910  
                                   l15521 1C46                                     l15505 1BC4  
                                   l15425 1926                                     l15409 18B0  
                                   l15361 98D8                                     l15353 98A2  
                                   l16161 7916                                     l16153 78D6  
                                   l11993 5F5E                                     l11985 5F0E  
                                   l11977 5EB8                                     l11969 5E54  
                                   l11897 5C78                                     l11889 5C52  
                                   l17025 83FA                                     l17017 8394  
                                   l16241 819A                                     l16233 80FA  
                                   l15089 51C2                                     l15177 38C0  
                                   l15169 37DA                                     l15265 3160  
                                   l15257 311A                                     l15249 309C  
                                   l15337 7E44                                     l15329 7DC2  
                                   l15601 A4C0                                     l16145 4294  
                                   l16137 424A                                     l16081 409C  
                                   l16073 402E                                     l16129 4210  
                                   l16065 3FD4                                     l16049 3F7A  
                                   l16057 3F9A                                     l17121 233E  
                                   l17113 226A                                     l17105 2238  
                                   l17033 1F40                                     l17201 0F54  
                                   l16305 6744                                     l14483 3CAA  
                                   l14475 3C4A                                     l14467 3BC6  
                                   l14459 3B42                                     l14491 918E  
                                   l14707 9C18                                     l14803 48C4  
                                   l14635 2C5E                                     l14619 2B84  
                                   l14643 2C74                                     l14571 294E  
                                   l14563 28BC                                     l14547 2880  
                                   l14555 2894                                     l14539 2826  
                                   l14715 7E9A                                     l16227 7D14  
                                   l15347 9944                                     l15531 1C7E  
                                   l15523 1C56                                     l15451 1A10  
                                   l15443 19E0                                     l15427 195E  
                                   l15371 1724                                     l15187 A4F8  
                                   l15195 A4F4                                     l15355 98AC  
                                   l16171 7940                                     l16163 792C  
                                   l16155 78DC                                     l11995 5F6C  
                                   l11987 5F24                                     l11979 5EC6  
                                   l11899 5C88                                     l17027 83FE  
                                   l17019 83B0                                     l16331 8B12  
                                   l16323 8A54                                     l16243 81CA  
                                   l16235 810C                                     l15099 527C  
                                   l15283 320C                                     l15267 316C  
                                   l15259 312A                                     l15603 A4C0  
                                   l15611 A4B4                                     l16147 429C  
                                   l16139 4268                                     l16091 40D6  
                                   l16075 4060                                     l16067 3FE6  
                                   l16059 3FBC                                     l16411 69DC  
                                   l17131 23B0                                     l17123 2356  
                                   l17115 229A                                     l17107 2246  
                                   l17051 1F94                                     l17043 1F5A  
                                   l17035 1F54                                     l17211 0FE4  
                                   l16307 6762                                     l14485 3DBE  
                                   l14477 3C5A                                     l14469 3BF8  
                                   l14493 919A                                     l14821 4900  
                                   l14813 48D6                                     l14709 A4E6  
                                   l14901 8064                                     l14661 2C9A  
                                   l14637 2C6C                                     l14581 29DC  
                                   l14573 2964                                     l14565 28CE  
                                   l14557 28A2                                     l14549 288E  
                                   l14733 7F48                                     l14725 7F22  
                                   l14717 7EBC                                     l14741 7F98  
                                   l15541 1E4E                                     l15533 1C86  
                                   l15525 1C68                                     l15517 1C04  
                                   l15461 1A5C                                     l15453 1A36  
                                   l15445 19E4                                     l15437 198C  
                                   l15429 196C                                     l15381 178C  
                                   l15373 1740                                     l15357 98C0  
                                   l15365 98E0                                     l15349 9884  
                                   l16181 79AC                                     l16173 7952  
                                   l16165 7930                                     l16157 78FC  
                                   l16501 0052                                     l11997 5F72  
                                   l11989 5F3E                                     l17029 8422  
                                   l16325 8A82                                     l16317 8A32  
                                   l16245 81DE                                     l16237 812A  
                                   l15285 3222                                     l15269 3196  
                                   l15277 31C4                                     l15293 326A  
                                   l15621 57E2                                     l16421 8788  
                                   l15613 A4B4                                     l16093 40F8  
                                   l16077 4072                                     l16069 3FFC  
                                   l16405 692C                                     l17141 244C  
                                   l17133 23C4                                     l17125 237C  
                                   l17109 225A                                     l17117 22B2  
                                   l17061 1FE4                                     l17053 1FAC  
                                   l17045 1F5E                                     l17221 10E0  
                                   l17213 101E                                     l16261 655C  
                                   l16253 6514                                     l14487 3DF4  
                                   l14479 3C70                                     l14495 91A0  
                                   l14831 4966                                     l14823 4912  
                                   l14911 809A                                     l14903 8072  
                                   l14671 2D38                                     l14663 2CB0  
                                   l14655 2C88                                     l14591 2AA8  
                                   l14583 29E4                                     l14575 2980  
                                   l14567 2906                                     l14743 7FAE  
                                   l14735 7F58                                     l14727 7F30  
                                   l14719 7ED8                                     l15551 1EC4  
                                   l15543 1E88                                     l15535 1C9C  
                                   l15527 1C6C                                     l15519 1C42  
                                   l15471 1A98                                     l15463 1A5E  
                                   l15455 1A46                                     l15447 19F8  
                                   l15439 19CA                                     l15391 17D4  
                                   l15383 1792                                     l15375 1742  
                                   l15367 98EE                                     l15359 98C4  
                                   l16191 7A2C                                     l16183 79D0  
                                   l16175 7964                                     l16159 790E  
                                   l11999 5F74                                     l16327 8ACC  
                                   l16319 8A4E                                     l16247 81EA  
                                   l16239 815E                                     l15295 329C  
                                   l15287 3242                                     l15279 31F0  
                                   l15199 2DF4                                     l15703 4330  
                                   l15631 5812                                     l16423 87BC  
                                   l16431 8844                                     l16415 8746  
                                   l16095 4112                                     l16087 40B2  
                                   l16079 4088                                     l16407 697A  
                                   l16351 679E                                     l17151 2526  
                                   l17143 2492                                     l17135 23EA  
                                   l17127 238E                                     l17119 22C2  
                                   l17071 2032                                     l17063 1FF4  
                                   l17055 1FBC                                     l17047 1F7C  
                                   l17039 1F5A                                     l17311 1608  
                                   l17303 153A                                     l17231 1184  
                                   l17223 10F6                                     l17215 1088  
                                   l17207 0F5A                                     l16263 6570  
                                   l16255 653E                                     l16343 A092  
                                   l16335 A05A                                     l15801 9264  
                                   l14497 91DE                                     l14841 4A4E  
                                   l14833 49AA                                     l14825 4928  
                                   l14761 478E                                     l14753 4730  
                                   l14913 80A0                                     l14905 8082  
                                   l14665 2CBA                                     l14585 2A1A  
                                   l14577 2988                                     l14569 293A  
                                   l14737 7F5E                                     l14729 7F40  
                                   l15553 1EC8                                     l15545 1E9E  
                                   l15537 1D28                                     l15529 1C6E  
                                   l15481 1AD4                                     l15473 1AA8  
                                   l15465 1A62                                     l15457 1A4E  
                                   l15449 1A0C                                     l15393 17DC  
                                   l15385 179C                                     l15377 1786  
                                   l16185 79F2                                     l16177 796C  
                                   l16169 7930                                     l16601 0384  
                                   l16521 00DE                                     l16513 008E  
                                   l16505 0058                                     l17401 A2E6  
                                   l16329 8B02                                     l16249 821A  
                                   l15297 32AC                                     l15713 434E  
                                   l15641 58A6                                     l15633 5840  
                                   l15625 57FA                                     l16425 87CC  
                                   l16417 875E                                     l16097 4134  
                                   l16089 40C6                                     l16441 62BC  
                                   l16409 69A0                                     l16361 6806  
                                   l16353 67B6                                     l17161 256A  
                                   l17153 252A                                     l17145 24B6  
                                   l17137 23FA                                     l17129 239C  
                                   l17081 20C8                                     l17073 2048  
                                   l17065 2006                                     l17057 1FCA  
                                   l17049 1F8C                                     l17321 1658  
                                   l17305 1594                                     l17313 161A  
                                   l17241 11CC                                     l17233 119A  
                                   l17225 1128                                     l17217 109A  
                                   l17209 0FC0                                     l16265 658A  
                                   l16273 65A2                                     l16257 654A  
                                   l16337 A08C                                     l17411 9B22  
                                   l15811 92B6                                     l15803 9270  
                                   l14499 9210                                     l14835 49BC  
                                   l14827 4944                                     l14819 48EA  
                                   l14771 47F8                                     l14763 4792  
                                   l14755 473C                                     l14747 4726  
                                   l14915 80D4                                     l14691 2DA8  
                                   l14667 2CF0                                     l14683 2D4A  
                                   l14595 2AAE                                     l14587 2A50  
                                   l14579 29CA                                     l14739 7F92  
                                   l14923 9A3E                                     l16195 7BB8  
                                   l15555 1EFE                                     l15547 1EB2  
                                   l15539 1DF2                                     l15491 1B5C  
                                   l15483 1B08                                     l15475 1ABA  
                                   l15467 1A6A                                     l15459 1A56  
                                   l15395 1802                                     l15387 179E  
                                   l16187 7A0C                                     l16179 798C  
                                   l16611 03C6                                     l16603 0394  
                                   l16531 0114                                     l16523 00EC  
                                   l16515 00A6                                     l16507 0076  
                                   l17403 A2EA                                     l16347 A182  
                                   l15571 A3B2                                     l15299 32C4  
                                   l15731 4512                                     l15715 437C  
                                   l15707 4330                                     l15643 58C2  
                                   l16427 87FA                                     l16419 8778  
                                   l16099 4138                                     l16443 62F2  
                                   l16451 6352                                     l16435 6260  
                                   l16371 684C                                     l16355 67D2  
                                   l17171 262E                                     l17163 2588  
                                   l17155 2546                                     l17147 24DE  
                                   l17139 241C                                     l17091 2162  
                                   l17083 20EE                                     l17075 205C  
                                   l17067 2016                                     l17059 1FCE  
                                   l17331 1720                                     l17323 168E  
                                   l17315 1622                                     l17307 15AA  
                                   l17251 1266                                     l17243 11DC  
                                   l17235 11AA                                     l17227 1168  
                                   l17219 10BC                                     l16291 66AC  
                                   l16283 6636                                     l16267 6592  
                                   l16275 65B8                                     l16259 6558  
                                   l17421 9B5C                                     l15813 92B8  
                                   l15805 927E                                     l15581 9336  
                                   l14861 4AB8                                     l14837 4A28  
                                   l14829 494C                                     l14853 4A5A  
                                   l14773 4806                                     l14765 47BC  
                                   l14757 4752                                     l14749 472A  
                                   l14909 808A                                     l14917 80DA  
                                   l14941 9AB0                                     l14685 2D60  
                                   l14669 2D02                                     l14597 2ABE  
                                   l14589 2A98                                     l14925 9A48  
                                   l14933 9A90                                     l16197 7BE4  
                                   l15549 1EB4                                     l15493 1B82  
                                   l15477 1ACC                                     l15469 1A90  
                                   l15397 1814                                     l15389 17D2  
                                   l16189 7A14                                     l16701 085C  
                                   l16613 03D6                                     l16605 03AE  
                                   l16541 0152                                     l16525 00FE  
                                   l16517 00AA                                     l16509 0088  
                                   l17405 A2EE                                     l17501 74A4  
                                   l15565 A398                                     l15901 69F0  
                                   l17341 9DE2                                     l15741 453A  
                                   l15717 43B6                                     l15725 443A  
                                   l15709 4348                                     l15661 5A1A  
                                   l15637 5846                                     l15629 57FA  
                                   l16429 8832                                     l16453 6372  
                                   l16445 62F8                                     l16437 6278  
                                   l16373 685C                                     l16357 6800  
                                   l16349 679E                                     l17181 272A  
                                   l17173 2636                                     l17165 25AC  
                                   l17157 254A                                     l17149 250A  
                                   l17093 2194                                     l17085 2116  
                                   l17077 206A                                     l17069 201C  
                                   l17325 16B6                                     l17317 1636  
                                   l17309 15B2                                     l17253 12CC  
                                   l17261 12F4                                     l15821 9392  
                                   l16293 66E0                                     l16285 664C  
                                   l16277 65DE                                     l16269 659A  
                                   l17415 9B36                                     l15815 92C2  
                                   l15807 9288                                     l15583 933A  
                                   l15575 92DA                                     l14871 4ADC  
                                   l14863 4AC6                                     l14855 4A6A  
                                   l14839 4A3E                                     l14791 488E  
                                   l14767 47C0                                     l14759 4762  
                                   l14919 80F0                                     l14951 9B06  
                                   l14943 9AE4                                     l14687 2D62  
                                   l14935 9A9E                                     l14927 9A7C  
                                   l16199 7C10                                     l15559 1F04  
                                   l15495 1B8A                                     l15479 1AD0  
                                   l15399 1826                                     l16711 098E  
                                   l16631 0496                                     l16623 040C  
                                   l16607 03C0                                     l16543 0160  
                                   l16527 010E                                     l16519 00C6  
                                   l16535 011A                                     l17511 752C  
                                   l17503 74D6                                     l15911 6B86  
                                   l15903 6A00                                     l17343 9DF2  
                                   l17335 9DAC                                     l15751 4590  
                                   l15743 4564                                     l15735 4518  
                                   l15727 44B4                                     l15719 4420  
                                   l15663 5A38                                     l15655 596A  
                                   l15647 58E6                                     l15639 588E  
                                   l15591 9810                                     l16471 6418  
                                   l16463 63D6                                     l16455 6382  
                                   l16447 631A                                     l16439 629A  
                                   l16391 68E0                                     l16383 68AA  
                                   l17175 2698                                     l17167 25BC  
                                   l17159 255A                                     l17095 21A4  
                                   l17087 2128                                     l17079 20B6  
                                   l17319 163E                                     l17271 1360  
                                   l17263 1334                                     l17247 11E2  
                                   l17239 11B0                                     l17327 16FE  
                                   l17191 0F04                                     l15831 93E4  
                                   l15823 939E                                     l16295 66F8  
                                   l16287 666E                                     l16279 660A  
                                   l17431 9FA4                                     l17417 9B48  
                                   l17409 9B0E                                     l15809 92A6  
                                   l15585 933E                                     l15577 92EA  
                                   l14873 4AF2                                     l14857 4A80  
                                   l14793 489E                                     l14785 4832  
                                   l14777 480C                                     l14769 47E6  
                                   l14945 9AEE                                     l14689 2D98  
                                   l14929 9A86                                     l14961 72AE  
                                   l15497 1B9A                                     l15489 1B52  
                                   l16641 04F2                                     l16633 04B4  
                                   l16625 0434                                     l16617 03DC  
                                   l16537 0128                                     l17441 8436  
                                   l17521 7582                                     l17513 753A  
                                   l17505 74D8                                     l17425 A4EC  
                                   l15569 A3A2                                     l15913 6BD0  
                                   l15905 6A1E                                     l16801 6D9C  
                                   l17337 9DBC                                     l15753 45D0  
                                   l15745 4578                                     l15737 4534  
                                   l15729 44F6                                     l15681 5B38  
                                   l15649 58FC                                     l15657 59A2  
                                   l15921 7A48                                     l15593 9814  
                                   l16481 645E                                     l16473 6426  
                                   l16465 63E6                                     l16457 63A8  
                                   l16449 633C                                     l16369 681C  
                                   l16377 6862                                     l17177 26FE  
                                   l17169 25EA                                     l17097 21C4  
                                   l17089 213E                                     l17281 13F4  
                                   l17273 1370                                     l17265 134C  
                                   l17249 1228                                     l17329 1710  
                                   l17193 0F14                                     l17185 0ED2  
                                   l15825 93AC                                     l15817 9372  
                                   l15841 8FA0                                     l15833 8F58  
                                   l16297 670C                                     l16289 6672  
                                   l17433 9FAC                                     l17601 A1BC  
                                   l17531 775C                                     l15587 9356  
                                   l15579 92EA                                     l14875 4AF4  
                                   l14859 4A82                                     l14795 48B0  
                                   l14787 484A                                     l14779 481E  
                                   l14891 7FDC                                     l14939 9AA6  
                                   l14699 2DB0                                     l14963 72BE  
                                   l14955 7232                                     l15499 1BAC  
                                   l16723 09E0                                     l16707 0874  
                                   l16643 0532                                     l16635 04D0  
                                   l16627 044A                                     l16571 01F6  
                                   l16555 018C                                     l16547 0166  
                                   l16539 013C                                     l17451 848E  
                                   l17443 844E                                     l17523 7592  
                                   l17515 7558                                     l17507 74E4  
                                   l17427 A4F0                                     l15851 9166  
                                   l15907 6A3A                                     l15915 6BE0  
                                   l16803 6DD2                                     l16811 6E40  
                                   l17339 9DCC                                     l15771 4628  
                                   l15755 45E8                                     l15675 5A86  
                                   l15667 5A3E                                     l15659 59EE  
                                   l15931 7ACE                                     l15923 7A60  
                                   l15595 9836                                     l16467 63F6  
                                   l16459 63C2                                     l16491 6510  
                                   l16379 688E                                     l17179 271A  
                                   l17099 2204                                     l17283 1436  
                                   l17291 1470                                     l17275 1390  
                                   l17259 12E2                                     l17195 0F34  
                                   l17187 0EDA                                     l15827 93CA  
                                   l15819 938A                                     l15843 8FD2  
                                   l15835 8F6A                                     l16299 672A  
                                   l17435 9FB4                                     l17611 9774  
                                   l17603 A1CC                                     l17381 9BB2  
                                   l17621 7072                                     l17613 703E  
                                   l17541 778A                                     l17533 7764  
                                   l16821 8554                                     l14973 A01C  
                                   l14877 4B2A                                     l14869 4ACE  
                                   l14797 48BE                                     l14789 4854  
                                   l14885 4B34                                     l14893 7FFE  
                                   l14949 9AF8                                     l14965 7348  
                                   l14957 7238                                     l14981 90CA  
                                   l16733 0A8E                                     l16725 0A1E  
                                   l16717 09BC                                     l16709 097C  
                                   l16661 064E                                     l16653 05E0  
                                   l16645 0562                                     l16629 0470  
                                   l16581 02CC                                     l16573 0238  
                                   l16565 01D4                                     l16557 019E  
                                   l16549 0178                                     l17453 849E  
                                   l17525 75A0                                     l17517 755A  
                                   l17509 7520                                     l15853 9184  
                                   l15917 6C0E                                     l15909 6B24  
                                   l16805 6DF4                                     l15765 4608  
                                   l15781 46C0                                     l15693 42B4  
                                   l15677 5AD2                                     l15669 5A58  
                                   l15925 7A82                                     l15597 9866  
                                   l15589 980C                                     l16485 6478  
                                   l16477 6438                                     l16469 6406  
                                   l16397 68E6                                     l16389 68C4  
                                   l17293 14A0                                     l17277 13A2  
                                   l17189 0EEA                                     l15829 93DA  
                                   l15837 8F7A                                     l17437 9FC8  
                                   l17429 9F96                                     l17605 971A  
                             ?_SPI1_Close 0001                                     l17391 9BBC  
                                   l17383 9BB4                                     l17631 70B2  
                                   l17623 7080                                     l17615 7042  
                                   l17551 784A                                     l17543 77B2  
                                   l17535 776C                                     l16831 8578  
                                   l16823 8556                                     l16815 8542  
                                   l14975 A050                                     l14879 4B2E  
                                   l14895 801A                                     l14887 7FB2  
                                   l14967 7366                                     l14959 7254  
                                   l16751 0CDE                                     l16735 0AFE  
                                   l16727 0A6C                                     l16663 0676  
                                   l16655 0614                                     l16647 0580  
                                   l16591 02F6                                     l16575 0254  
                                   l16567 01DC                                     l16559 01BE  
                                   l16495 001E                                     l17463 84C8  
                                   l17455 84A2                                     l17447 8462  
                                   l17527 75A2                                     l17519 755E  
                                   l15791 A27C                                     l15863 9C98  
                                   l15847 90DC                                     l14991 A212  
                                   l16807 6E20                                     l15783 46E6  
                                   l15759 45EE                                     l15695 42CC  
                                   l15687 5B5E                                     l15679 5B14  
                                   l15951 7BB0                                     l15943 7B6C  
                                   l15935 7AE2                                     l15927 7A92  
                                   l16479 6448                                     l16399 6918  
                                   l17295 14D6                                     l17279 13D0  
                                   l17199 0F3A                                     l15839 8F84  
                                   l17607 9738                                     l16911 97C2  
                                   l16903 9796                                     l17393 A45E  
                                   l17385 9BB6                                     l17377 A370  
                                   l17721 94B2                                     l17641 7100  
                                   l17633 70C2                                     l17625 7090  
                                   l17617 7052                                     l17561 7896  
                                   l17553 786C                                     l17545 77D4  
                                   l17537 7782                                     l16825 855C  
                                   l16817 854C                                     l14897 805C  
                                   l14889 7FC4                                     l14969 73F0  
                                   l15873 9F52                                     l16761 0DCA  
                                   l16753 0D08                                     l16745 0C76  
                                   l16737 0B10                                     l16681 077C  
                                   l16673 06EA                                     l16665 068C  
                                   l16593 0334                                     l16577 0268  
                                   l16585 02D6                                     l16497 002E  
                                   l17481 852C                                     l17473 84F0  
                                   l17465 84D2                                     l17457 84B0  
                                   l17449 848C                                     l15865 9CBC  
                                   l15849 9122                                     l14993 A224  
                                   l14985 A1F4                                     l16809 6E30  
                                   l15785 4722                                     l15697 430C  
                                   l15689 5BE0                                     l15945 7B74  
                                   l15937 7B18                                     l15929 7A9A  
                                   l15961 9474                                     l16489 6496  
                                   l17297 1524                                     l17289 144C  
                                   l17609 9762                                     l16921 97F6  
                                   l16913 97D0                                     l16905 97A0  
                                   l17387 9BB8                                     l17379 9B70  
                                   l17395 A414                                     l17723 94C6  
                                   l17715 9486                                     l17651 7140  
                                   l17643 710E                                     l17635 70D2  
                                   l17627 709E                                     l17619 7062  
                                   l17571 78A6                                     l17563 789A  
                                   l17555 788E                                     l17547 77FA  
                                   l17539 7786                                     l16851 8608  
                                   l16835 8594                                     l16827 8568  
                                   l16843 85CA                                     l16819 8552  
                                   l15795 9234                                     l15875 9F5C  
                                   l15883 9F84                                     l14979 901E  
                                   l16763 0E08                                     l16755 0D4C  
                                   l16747 0CBC                                     l16739 0BC0  
                                   l16691 07FE                                     l16683 07DE  
                                   l16675 075A                                     l16667 06D2  
                                   l16595 034C                                     l16587 02DE  
                                   l16579 028E                                     l16499 0042  
                                   l17475 84FC                                     l17467 84DC  
                                   l17491 7466                                     l15859 918A  
                                   l14987 A206                                     l14995 950E  
                                   l15779 467E                                     l15947 7B8E  
                                   l15939 7B4C                                     l15891 96BE  
                                   l15971 75B4                                     l15955 93FC  
                                   l16931 9F42                                     l16923 97FC  
                                   l16915 97D6                                     l16907 97B2  
                                   l17741 A0A0                                     l17733 9C36  
                                   l17389 9BBA                                     l17397 A42A  
                                   l17725 94DA                                     l19173 71B8  
                                   l19181 7222                                     l17653 7150  
                                   l17637 70E2                                     l17581 78B2  
                                   l17573 78A8                                     l17565 789E  
                                   l17557 7890                                     l17549 7822  
                                   l16861 8650                                     l16853 860C  
                                   l16845 85DE                                     l16837 8598  
                                   l16829 856C                                     l15797 9246  
                                   l15885 9F92                                     l15877 9F70  
                                   l16757 0D5C                                     l16765 0E88  
                                   l16749 0CCC                                     l16693 081C  
                                   l16597 0358                                     l16589 02F0  
                                   l17477 850C                                     l17493 747C  
                                   l17485 7400                                     l15789 A25A  
                                   l15869 9CC8                                     l14989 A20C  
                                   l15965 9E5A                                     l14997 9520  
                                   l16781 6C5C                                     l15949 7B9E  
                                   l15893 96F6                                     l15981 7606  
                                   l15973 75CC                                     l15957 941C  
                                   l16925 9F02                                     l16941 8878  
                                   l16917 97EC                                     l16909 97BA  
                                   l17743 A0A4                                     l17735 9C90  
                                   l17727 94EA                                     l17719 949E  
                                   l19175 71D4                                     l19183 71C6  
                                   l17655 715E                                     l17647 7122  
                                   l17639 70F0                                     l17591 78BE  
                                   l17583 78B4                                     l17575 78AC  
                                   l17567 78A2                                     l17559 7892  
                                   l16871 866C                                     l16863 8656  
                                   l16855 8622                                     l16847 85EC  
                                   l16839 85A8                                     l15799 925C  
                                   l15879 9F7A                                     l16767 0E9A  
                                   l16759 0D8C                                     l16695 0820  
                                   l16599 0380                                     l17751 8C00  
                                   l17399 A2DC                                     l17479 851C  
                                   l17487 7412                                     l17911 A246  
                                   l15967 9E74                                     l14999 9526  
                                   l16783 6C76                                     l16791 6CE8  
                                   l16775 6C1A                                     l15895 96FC  
                                   l15991 7686                                     l15983 763A  
                                   l15975 75EE                                     l15959 943A  
                                   l16927 9F0E                                     l16951 88EE  
                                   l16943 8896                                     l16935 8848  
                                   l16919 97F4                                     l17745 A0B4  
                                   l17737 9C94                                     l17905 A4A2  
                                   l17729 94FC                                     l19177 71F0  
                                   l19185 71E2                                     l17657 716E  
                                   l17649 7130                                     l17665 7190  
                                   l17585 78B6                                     l17577 78AE  
                                   l17569 78A4                                     l16865 8658  
                                   l16769 0EB8                                     l16697 083C  
                                   l16689 07FA                                     l17761 8C48  
                                   l17753 8C14                                     l17921 A42E  
                                   l17497 7490                                     l17489 7420  
                                   l17913 A24A                                     l16961 A2B2  
                                   l15969 9E92                                     l16793 6CE8  
                                   l16785 6CD0                                     l16777 6C32  
                                   l15897 9700                                     l15889 969A  
                                   l15993 768E                                     l15977 75FE  
                                   l16929 9F20                                     l17593 A3D8  
                                   l16953 890E                                     l16945 889C  
                                   l18801 5488                                     l17739 A09A  
                                   l19187 71FE                                     l19179 720C  
                                   l17659 717C                                     l17587 78B8  
                                   l17579 78B0                                     l16891 86F0  
                                   l16883 86BE                                     l16875 8688  
                                   l16867 865A                                     l16859 8646  
                                   l16699 0840                                     l17771 8CA6  
                                   l17763 8C5A                                     l17755 8C24  
                                   l17923 A440                                     l17499 7498  
                                   l17915 A250                                     l17907 A22E  
                                   l15899 69E0                                     l16795 6D1C  
                                   l16779 6C42                                     l15995 76B8  
                                   l15987 764E                                     l17595 A3E0  
                                   l16955 893E                                     l16947 88C8  
                                   l16939 885C                                     l16971 9688  
                                   l16963 9618                                     l18811 54A0  
                                   l18803 548E                                     l17589 78BA  
                                   l16885 86CC                                     l16877 868C  
                                   l16869 8660                                     l17773 8CB6  
                                   l17765 8C68                                     l17749 8BF8  
                                   l17917 A254                                     l17909 A23C  
                                   l17933 9FDA                                     l16797 6D2C  
                                   l16789 6CD6                                     l15997 76DE  
                                   l15989 7676                                     l17941 8250  
                                   l17597 A3F0                                     l16949 88EC  
                                   l16957 A476                                     l16981 8B66  
                                   l16973 8B16                                     l16965 9630  
                                   l18821 54B2                                     l18813 54A6  
                                   l18805 5492                                     l17919 A3FA  
                                   l16895 870C                                     l16879 869C  
                                   l16887 86CE                                     l17767 8C7A  
                                   l17759 8C2A                                     l17927 A446  
                                   l16991 A148                                     l17935 A00A  
                                   l16799 6D54                                     l17951 827E  
                                   l17943 825E                                     l17599 A3F2  
                                   l16983 8BAE                                     l16975 8B32  
                                   l16967 964A                                     l18831 54BC  
                                   l18823 54B4                                     l18815 54A8  
                                   l18807 5496                                     l16897 8710  
                                   l16889 86E2                                     l17777 8CBC  
                                   l17769 8C88                                     l17929 A458  
                                   l17961 95A6                                     l17937 A016  
                                   l17953 82A4                                     l17945 8272  
                                   l16985 8BE4                                     l16969 9678  
                                   l18841 5594                                     l18833 54BE  
                                   l18825 54B6                                     l18817 54AA  
                                   l18809 549A                                     l16899 8726  
                                   l17779 8CD4                                     l17971 95D6  
                                   l17963 95A6                                     l16995 A16A  
                                   l17955 82CE                                     l17947 8276  
                                   l17939 821E                                     l16987 8BF4  
                                   l16979 8B38                                     l18851 562C  
                                   l18843 55A8                                     l18835 54E8  
                                   l18827 54B8                                     l18819 54AE  
                                   l17981 A286                                     l17973 95E6  
                                   l17965 95B6                                     l17957 8328  
                                   l17949 827A                                     l18861 5698  
                                   l18853 5640                                     l18845 55AC  
                                   l18837 5512                                     l18829 54BA  
                                   l18781 5416                                     l18773 53E0  
                                   l16999 A324                                     l17983 A298  
                                   l17975 95F6                                     l17967 95C6  
                                   l17959 9594                                     l17991 602C  
                                   l18871 57A8                                     l18863 5714  
                                   l18855 5644                                     l18839 554A  
                                   l18847 55B0                                     l18791 5428  
                                   l18783 541A                                     l18775 53E8  
                           ___fltol@sign1 00A8                                     l17977 9606  
                                   l17969 95D6                                     l17993 6058  
                                   l18865 572E                                     l18857 568E  
                                   l18873 57D6                                     l18849 55DC  
                                   l18793 542A                                     l18785 541E  
                                   l18777 53EE                                     l17979 9606  
                                   l17995 6084                                     l17987 5F80  
                                   l18867 574C                                     l18859 5692  
                                   l18795 542E                                     l18787 5420  
                                   l18779 5402                                     l17997 6122  
                                   l17989 5FFE                                     l18869 577A  
                                   l18797 544C                                     l18789 5426  
                                   l17999 61C0                                     l18799 5462  
                                   _ADACT 3EFE                                     _ADCAP 3EF5  
                                   ?_main 0001                                     _ADCLK 3EFF  
                                   _ADCNT 3EEB                                     _ADPCH 3EF1  
                         __end_of___fldiv 5F80                                     _ADREF 3EFD  
                                   STR_10 FFE4                                     STR_11 FFEE  
                                   STR_12 FFE5                                     STR_13 FFE3  
                                   _ADRPT 3EEC                           __end_of___flmul 4FC8  
                         __end_of_dbc_2nd A4C0          SPI1_Open@spi1UniqueConfiguration 0061  
                         __end_of___fltol 853E                           __end_of_dbc_1st A4CC  
                    __end_of_BLUE_LED_OFF A514                           __end_of___lldiv 92DA  
                                   u20000 69DC                                     u20001 69D8  
                                   u20010 8788                                     u20011 8784  
                                   u20020 87CC                                     u20100 6418  
                                   u20021 87C8                                     u20101 6414  
                                   u20110 6426                                     u20030 629A  
                                   u20111 6422                                     u20031 6296  
                                   u20200 00FE                                     u21000 8340  
                                   u20120 6434                                     u20040 62BC  
                                   u20201 00FA                                     u21001 833C  
                                   u20121 6430                                     u20041 62B8  
                                   u20210 010E                                     u21010 8352  
                                   u20130 645E                                     u20050 631A  
                                   u20211 010A                                     u21011 834E  
                                   u20131 645A                                     u20051 6316  
                                   u20300 0394                                     u20220 0160  
                                   u21020 8368                                     u20140 6474  
                                   u20060 633C                                     u21100 1FF4  
                                   u20301 0390                                     u20221 015C  
                                   u21021 8364                                     u20141 6470  
                                   u20061 6338                                     u21101 1FF0  
                                   u20310 03AE                                     u20230 0178  
                                   u21030 837C                                     u20150 6492  
                                   u20070 6372                                     u21110 2006  
                                   u20311 03AA                                     u20231 0174  
                                   u21031 8378                                     u20151 648E  
                                   u20071 636E                                     u21111 2002  
                                   u20400 064A                                     u20320 03C0  
                                   u20240 0188                                     u20160 0052  
                                   u22000 8CB6                                     u14000 4F42  
                                   u21040 8422                                     u20080 63D2  
                                   u21200 2238                                     u21120 2032  
                                   u20401 0646                                     u20321 03BC  
                                   u20241 0184                                     u20161 004E  
                                   u22001 8CB2                                     u14001 4F3E  
                                   u21041 841E                                     u20081 63CE  
                                   u21201 2234                                     u21121 202E  
                         __end_of___llmod 93FC                                     u20410 068C  
                                   u20330 03D6                                     u20250 01D0  
                                   u20170 0088                                     u14010 4F70  
                                   u20090 6406                                     u21210 2246  
                                   u21130 2048                                     u21050 1F54  
                                   u20411 0688                                     u20331 03D2  
                                   u20251 01CC                                     u20171 0084  
                                   u14011 4F6C                                     u20091 6402  
                                   u21211 2242                                     u21131 2044  
                                   u21051 1F50                                     u20500 098E  
                                   u20420 06E6                                     u20340 0408  
                                   u20260 01F2                                     u20180 00C6  
                                   u14020 4FAA                                     u21300 256A  
                                   u21220 225A                                     u21140 205C  
                                   u21060 1F8C                                     u20501 098A  
                                   u20421 06E2                                     u20341 0404  
                                   u20261 01EE                                     u20181 00C2  
                                   u14021 4FA6                                     u21301 2566  
                                   u21221 2256                                     u21141 2058  
                                   u21061 1F88                                     u20510 09B8  
                                   u20350 044A                                     u20270 0254  
                                   u20190 00EC                                     u21310 2588  
                                   u21230 2268                                     u21150 206A  
                                   u21070 1FBC                                     u20511 09B4  
                                   u20351 0446                                     u20271 0250  
                                   u20191 00E8                                     u21311 2584  
                                   u21231 2264                                     u21151 2066  
                                   u21071 1FB8                                     u20600 0D4C  
                                   u20520 09DC                                     u20440 0778  
                                   u20360 04D0                                     u20280 02F0  
                                   u21320 25BC                                     u21240 22C2  
                                   u21160 213E                                     u21080 1FCA  
                                   u21400 0F54                                     u20601 0D48  
                                   u20521 09D8                                     u20441 0774  
                                   u20361 04CC                                     u20281 02EC  
                                   u21321 25B8                                     u21241 22BE  
                                   u21161 213A                                     u21081 1FC6  
                                   u21401 0F50                                     u20610 0D8C  
                                   u20450 07F6                                     u20370 04EE  
                                   u20290 034C                                     u21330 25EA  
                                   u21250 23FA                                     u21170 21A4  
                                   u21090 1FE4                                     u21410 0FC0  
                                   u20611 0D88                                     u20451 07F2  
                                   u20435 0708                                     u20371 04EA  
                                   u20291 0348                                     u21331 25E6  
                                   u21251 23F6                                     u21171 21A0  
                                   u21091 1FE0                                     u21411 0FBC  
                                   u20700 85A8                                     u22300 A2AC  
                                   u20620 0DCA                                     u20540 0A8A  
                                   u20460 081C                                     u20380 0580  
                                   u21340 262E                                     u21260 241C  
                                   u21180 2214                                     u21500 1228  
                                   u21420 101E                                     u23100 562C  
                                   _LATA2 1FDD2                                     u20701 85A4  
                                   u20621 0DC6                                     u20541 0A86  
                                   u20461 0818                                     u20381 057C  
                                   u21341 262A                                     u21261 2418  
                                   u21181 2210                                     u21501 1224  
                                   u21421 101A                                     u23101 5628  
                                   _LATA3 1FDD3                                     u20710 85B6  
                                   u20630 0E08                                     u20550 0B10  
                                   u20470 083C                                     u20390 05DC  
                                   u21350 2656                                     u21190 2222  
                                   u21510 1266                                     u21430 1052  
                                   u23110 568E                                     _LATA4 1FDD4  
                                   u20711 85B2                                     u20631 0E04  
                                   u20551 0B0C                                     u20535 0A46  
                                   u20471 0838                                     u20391 05D8  
                                   u21191 221E                                     u21511 1262  
                                   u23111 568A                                     _LATB3 1FDDB  
                                   u20800 86AA                                     u20720 85C6  
                                   u20560 0C3E                                     u20480 085C  
                                   u20640 6C42                                     u21360 26FE  
                                   u21280 2526                                     u21600 14D6  
                                   u21520 12CC                                     u21440 109A  
                                   u23120 5712                                     _LATC2 1FDE2  
                                   u20801 86A6                                     u20721 85C2  
                                   u20481 0858                                     u20641 6C3E  
                                   u21361 26FA                                     u21281 2522  
                                   u21601 14D2                                     u21521 12C8  
                                   u21441 1096                                     u23121 570E  
                                   u20810 86BA                                     u20730 85DE  
                                   u20570 0C72                                     u20490 0870  
                                   u13610 5C00                                     u20650 6C5C  
                                   u21370 271A                                     u21290 2546  
                                   u21610 1524                                     u21530 134C  
                                   u21450 10BC                                     u20811 86B6  
                                   u20731 85DA                                     u20571 0C6E  
                                   u20491 086C                                     u13611 5BFC  
                                   u20651 6C58                                     u21371 2716  
                                   u21355 264C                                     u21291 2542  
                                   u21275 2472                                     u21611 1520  
                                   u21531 1348                                     u21451 10B8  
                                   u21435 1048                                     u22260 A410  
                                   u20820 86E2                                     u20740 8604  
                                   u21700 9B32                                     u20580 0CDE  
                                   u13700 5DA0                                     u13620 5C12  
                                   u20660 6C76                                     u21620 15AA  
                                   u21460 10F6                                     u21380 0F14  
                                   u20900 9F42                                     u23060 54E8  
                                   _LATC6 1FDE6                                     u22261 A40A  
                                   u20821 86DE                                     u20741 8600  
                                   u21701 9B2E                                     u20581 0CDA  
                                   u20565 0C34                                     u13701 5D9C  
                                   u13621 5C0E                                     u20661 6C72  
                                   u21621 15A6                                     u21461 10F2  
                                   u21381 0F10                                     u20901 9F3E  
                                   u23061 54E4                                     u20830 8708  
                                   u20750 861C                                     u21710 9B58  
                                   u20590 0D08                                     u13710 5DCA  
                                   u13630 5C22                                     u20670 6CD0  
                                   u21630 168E                                     u21550 13A2  
                                   u21470 1180                                     u21390 0F34  
                                   u20910 8858                                     u23070 5512  
                                   u20831 8704                                     u20751 8618  
                                   u21711 9B54                                     u20591 0D04  
                                   u13711 5DC6                                     u13631 5C1E  
                                   u20671 6CCC                                     u21631 168A  
                                   u21551 139E                                     u21471 117C  
                                   u21391 0F30                                     u20911 8854  
                                   u23071 550E                                     u20840 8720  
                                   u20760 863E                                     u17000 2BA6  
                                   u13800 5EC6                                     u13720 5DEE  
                                   u13640 5C66                                     u21720 844E  
                                   u21800 7420                                     u20680 6D2C  
                                   u21640 1710                                     u21560 13D0  
                                   u21480 119A                                     u22280 82CE  
                                   u20920 8878                                     u23080 5594  
                                   u20841 871C                                     u20761 8638  
                                   u17001 2BA2                                     u13801 5EC2  
                                   u13721 5DEA                                     u13641 5C62  
                                   u21721 844A                                     u21801 741C  
                                   u20681 6D28                                     u21641 170C  
                                   u21561 13CC                                     u21545 137C  
                                   u21481 1196                                     u22281 82CA  
                                   u20921 8874                                     u23081 5590  
                                   u20850 8742                                     u20770 8640  
                                   u20690 8590                                     u22290 A2AA  
                                   u13810 5F0E                                     u13730 5E04  
                                   u13650 5C78                                     u21730 8482  
                                   u21810 747C                                     u21650 9DCC  
                                   u21570 1436                                     u21490 11CC  
                                   u20930 8892                                     u23090 55DA  
                             i2c_read@len 0061                                     u22275 A412  
                                   u20851 873C                                     u20691 858C  
                                   u22291 A2A4                                     u13811 5F0A  
                                   u13731 5E00                                     u13651 5C74  
                                   u21811 7478                                     u21651 9DC8  
                                   u21571 1432                                     u21491 11C8  
                                   u20931 888E                                     u23091 55D6  
                                   u21900 78D4                                     u20860 8744  
                                   u20780 8684                                     u17100 9C34  
                                   u13820 5F3E                                     u13740 5E22  
                                   u13660 5C88                                     u13900 4C4E  
                                   u21740 84B0                                     u21820 74D2  
                                   u21660 9DF2                                     u21901 78D0  
                                   u20781 8680                                     u17101 9C30  
                                   u13821 5F3A                                     u13741 5E1E  
                                   u13661 5C84                                     u13901 4C4A  
                                   u21741 84AC                                     u21821 74CE  
                                   u21661 9DEE                                     u20790 869C  
                                   u13830 5F6C                                     u13750 5E42  
                                   u13670 5CC8                                     u13910 4C5E  
                                   u21750 84C4                                     u21830 751C  
                                   u21590 14A0                                     u20950 A488  
                                   u21910 9738                                     u20870 97B2  
                                   u20791 8698                                     u13831 5F68  
                                   u13751 5E3E                                     u13671 5CC4  
                                   u13911 4C5A                                     u21751 84C0  
                                   u21735 8478                                     u21831 7518  
                                   u21591 149C                                     u20951 A482  
                                   u21911 9734                                     u20871 97AE  
                                   u17040 2CB0                                     u13760 5E54  
                                   u13680 5D08                                     u13920 4DFC  
                                   u13840 4B94                                     u21760 84EC  
                                   u21840 753A                                     u18000 3208  
                                   u20960 A48A                                     u20880 97D0  
                                   u17041 2CAC                                     u13761 5E50  
                                   u13681 5D04                                     u13841 4B90  
                                   u21761 84E8                                     u21841 7536  
                                   u18001 3204                                     u21585 1456  
                                   u20945 88DC                                     u20881 97CC  
                                   u17210 478E                                     u17018 2BC6  
                                   u17130 7F1A                                     u13770 5E82  
                                   u13690 5D7E                                     u13930 4E56  
                                   u13850 4BA6                                     u21770 850C  
                                   u21850 754A                                     u18010 3222  
                                   u20970 8B32                                     u21930 9762  
                                   u20890 97EC                                     u17211 478A  
                                   u17019 2BDC                                     u17131 7F16  
                                   u17115 7EA4                                     u13771 5E7E  
                                   u13691 5D7A                                     u13931 4E52  
                                   u13851 4BA2                                     u21771 8508  
                                   u21851 7546                                     u18011 321E  
                                   u20971 8B2E                                     u21931 975E  
                                   u20891 97E8                                     u17060 2D00  
                                   u17028 2BFC                                     u17140 7F40  
                                   u13780 5E98                                     u13940 4E76  
                                   u13860 4BB6                                     u21780 851C  
                                   u21860 7558                                     u18020 323E  
                                   u18100 7DFA                                     u20980 8BE4  
                                   u17221 47AE                                     u17205 4764  
                                   u17061 2CFC                                     u17029 2C12  
                                   u17141 7F3C                                     u13781 5E94  
                                   u13941 4E72                                     u13925 4DF2  
                                   u13861 4BB2                                     u21781 8518  
                                   u21861 7554                                     u18021 323A  
                                   u18101 7DF6                                     u20981 8BE0  
                                   u21950 949A                                     u16430 9D50  
                                   u17310 49BC                                     u17038 2C48  
                                   u17150 7F58                                     u13790 5EAC  
                                   u13950 4E88                                     u13870 4BF6  
                                   u21870 7592                                     u21790 7412  
                                   u20990 A166                                     u18030 3266  
                                   u18110 7E44                                     u21951 9496  
                                   u16431 9D4C                                     u17311 49B8  
                                   u17231 47DC                                     u17039 2C5E  
                                   u17151 7F54                                     u13791 5EA8  
                                   u13951 4E84                                     u13871 4BF2  
                                   u21871 758E                                     u21791 740E  
                                   u20991 A162                                     u18031 3262  
                                   u18111 7E40                                     u21960 A0B4  
                                   u19000 927E                                     u16440 A31E  
                                   u16520 3AB6                                     u17240 47F8  
                                   u17400 805C                                     u17128 7EF8  
                                   u18200 1786                                     u13960 4EB6  
                                   u13880 4C08                                     u21880 75A0  
                                   u18040 32AC                                     u18120 7E6C  
                                   u21928 973E                                     u21961 A0B0  
                                   u19001 927A                                     u16441 A31A  
                                   u16521 3AB2                                     u17241 47F4  
                                   u17401 8058                                     u17129 7F0A  
                                   u18201 1782                                     u13961 4EB2  
                                   u13881 4C04                                     u21881 759C  
                                   u18041 32A8                                     u18121 7E66  
                                   u21929 9752                                     u21890 7782  
                                   u19010 92A6                                     u16450 8958  
                                   u16610 3C5A                                     u17090 9C12  
                                   u17250 484A                                     u17410 8082  
                                   u17058 2CDA                                     u17170 7FAE  
                                   u21970 8C24                                     u13970 4ECC  
                                   u13890 4C18                                     u18050 32C4  
                                   u18130 7E6E                                     u21891 777E  
                                   u19011 92A2                                     u16451 8954  
                                   u16611 3C56                                     u17251 4846  
                                   u17411 807E                                     u17059 2CEE  
                                   u17171 7FAA                                     u21971 8C20  
                                   u13971 4EC8                                     u13891 4C14  
                                   u18051 32C0                                     u16620 3C70  
                                   u16508 3A36                                     u17340 4A3E  
                                   u17308 4996                                     u17420 809A  
                                   u17500 7366                                     u21980 8C5A  
                                   u13980 4EE0                                     u19100 9166  
                                   u18060 3306                                     u19020 938A  
                                   u21948 9780                                     u16701 3DFE  
                                   u16621 3C6C                                     u16509 3A4C  
                                   u17341 4A3A                                     u17309 49AA  
                                   u17181 4748                                     u17421 8096  
                                   u17501 7362                                     u18301 191C  
                                   u18221 17F8                                     u21981 8C56  
                                   u13981 4EDC                                     u19101 9162  
                                   u18061 3302                                     u19021 9386  
                                   u21949 9794                                     u16630 3CAA  
                                   u16550 3B42                                     u16518 3A6C  
                                   u16710 91CA                                     u17350 4A6A  
                                   u17270 489E                                     u17190 4762  
                                   u17078 2D22                                     u17510 8DEA  
                                   u18150 9960                                     u18310 195E  
                                   u18230 1814                                     u21990 8C7A  
                                   u13990 4EFA                                     u19110 9184  
                                   u18070 3378                                     u19030 93AC  
                                   u16631 3CA6                                     u16551 3B3E  
                                   u16519 3AA2                                     u17351 4A66  
                                   u17271 489A                                     u17191 475E  
                                   u17079 2D38                                     u17511 8DE6  
                                   u18151 995C                                     u18311 195A  
                                   u18231 1810                                     u21991 8C76  
                                   u13991 4EF6                                     u19111 9180  
                                   u18071 3374                                     u19031 93A8  
                                   u16608 3C28                                     u16560 3B54  
                                   u16720 91DE                                     u17328 49DC  
                                   u17280 48B0                                     u17440 80F0  
                                   u17088 2D82                                     u16800 2810  
                                   u17168 7F80                                     u17520 8E0A  
                                   u18400 1AA8                                     u18320 196C  
                                   u18240 1826                                     u18160 98A2  
                                   u19120 9CBC                                     u19200 6C0E  
                                   u18080 33B2                                     u19040 93CA  
                                   u16609 3C3C                                     u16561 3B50  
                                   u16721 91DA                                     u17097 9C00  
                                   u17329 49F2                                     u17281 48AC  
                                   u17441 80EC                                     u17089 2D98  
                                   u16801 280C                                     u17169 7F92  
                                   u17521 8E06                                     u18401 1AA4  
                                   u18321 1968                                     u18241 1822  
                                   u18161 989E                                     u19121 9CB8  
                                   u19201 6C0A                                     u18081 33AE  
                                   u19041 93C6                                     u16570 3B86  
                                   u16538 3AD6                                     u16730 9210  
                                   u17338 4A12                                     u17290 4900  
                                   u16810 2836                                     u17450 9A7C  
                                   u17530 8E50                                     u18410 1ABA  
                                   u18250 1838                                     u18218 17BE  
                                   u19130 9F70                                     u18170 98C0  
                                   u17610 50D0                                     u18090 7D34  
                                   u19210 7A92                                     u19050 8F6A  
                                   u16571 3B82                                     u16539 3AEA  
                                   u17339 4A28                                     u17291 48FC  
                                   u16811 2832                                     u17451 9A78  
                                   u17531 8E4C                                     u18411 1AB6  
                                   u18331 19C0                                     u18251 1834  
                                   u18219 17D2                                     u19131 9F6C  
                                   u18171 98BC                                     u17611 50CC  
                                   u18091 7D30                                     u19211 7A8E  
                                   u19051 8F66                                     u16548 3B14  
                                   u16468 3944                                     u16740 9232  
                                   u17268 4874                                     u17460 9AE4  
                                   u16900 29DC                                     u18148 9930  
                                   u17540 99EE                                     u18420 1ACC  
                                   u18340 19DC                                     u18180 98D8  
                                   u17700 342A                                     u19220 7ADE  
                                   u19140 96BE                                     u19300 75FE  
                                   u19060 8F7A                                     u16549 3B28  
                                   u16469 3974                                     u16741 922E  
                                   u16717 91BC                                     u17269 488A  
                                   u17461 9AE0                                     u16901 29D8  
                                   u18149 9944                                     u17541 99EA  
                                   u18421 1AC8                                     u18341 19D8  
                                   u18181 98D4                                     u17605 5098  
                                   u17701 3426                                     u19221 7ADA  
                                   u19141 96BA                                     u19301 75FA  
                                   u19061 8F76                                     u16590 3BF8  
                                   u16478 3994                                     u17438 80C2  
                                   u17470 7254                                     u17550 9A28  
                                   u18350 19F8                                     u17630 5178  
                                   u19230 7B18                                     u19150 96F4  
                                   u19310 764A                                     u19070 8FA0  
                                   u16591 3BF4                                     u16479 39AA  
                                   u17439 80D4                                     u16831 2864  
                                   u16751 2750                                     u17471 7250  
                                   u17551 9A24                                     u18351 19F4  
                                   u18271 18A6                                     u17631 5174  
                                   u19231 7B14                                     u19311 7646  
                                   u19071 8F9C                                     u16648 3CCA  
                                   u16488 39CA                                     u17368 4AA2  
                                   u16840 2880                                     u16760 2774  
                                   u17480 72AE                                     u18520 1C56  
                                   u18360 1A0C                                     u18280 18C2  
                                   u17560 A146                                     u17640 51C2  
                                   u17800 37EA                                     u17720 34BC  
                                   u19240 7B4C                                     u19160 9718  
                                   u19400 3F24                                     u19320 7686  
                                   u19080 8FD2                                     u16649 3CDE  
                                   u16489 39E0                                     u16737 91FE  
                                   u17369 4AB8                                     u17385 7FE6  
                                   u16841 287C                                     u16825 2838  
                                   u16761 2770                                     u17481 72AA  
                                   u18521 1C52                                     u18361 1A08  
                                   u18281 18BE                                     u17561 A142  
                                   u17641 51BE                                     u17625 5140  
                                   u17801 37E6                                     u17721 34B8  
                                   u19241 7B48                                     u19161 9714  
                                   u19401 3F20                                     u19321 7682  
                                   u19081 8FCE                                     u16690 3DF2  
                                   u16658 3D02                                     u16498 3A00  
                                   u17378 4B14                                     u16850 28BC  
                                   u16770 27A0                                     u17490 7348  
                                   u18610 1EC4                                     u18530 1C68  
                                   u18450 1B4C                                     u17810 A49E  
                                   u19090 9122                                     u19170 6A00  
                                   u17730 34F6                                     u17570 8D28  
                                   u19250 7B68                                     u19410 3F34  
                                   u19330 76DE                                     u16691 3DEE  
                                   u16659 3D16                                     u16499 3A16  
                                   u17379 4B2A                                     u16851 28B8  
                                   u17491 7344                                     u18611 1EC0  
                                   u18531 1C64                                     u18451 1B48  
                                   u18371 1A2C                                     u17811 A498  
                                   u19091 911E                                     u19171 69FC  
                                   u17731 34F2                                     u17715 3480  
                                   u17571 8D24                                     u19251 7B64  
                                   u19411 3F30                                     u19331 76DA  
                         __end_of___lwdiv 980C                                     u16668 3D3A  
                                   u16588 3BAA                                     u16940 2A98  
                                   u16860 28CE                                     u16780 27CC  
                                   u18604 1E26                                     u18540 1C7E  
                                   u18508 1BE6                                     u18380 1A46  
                                   u18268 185A                                     u17820 A4A0  
                                   u19180 6A1E                                     u17660 5278  
                                   u17580 4FFC                                     u17900 2FE6  
                                   u18700 5840                                     u19260 7B9E  
                                   u19500 409C                                     u19420 3F6E  
                                   u19340 7728                                     u16669 3D4E  
                                   u16589 3BBE                                     u16941 2A94  
                                   u16861 28CA                                     u16781 27C8  
                                   u18605 1E20                                     u18541 1C7A  
                                   u18509 1BF8                                     u18461 1B78  
                                   u18381 1A42                                     u18269 186E  
                                   u19181 6A1A                                     u17661 5274  
                                   u17581 4FF8                                     u17901 2FE2  
                                   u18701 583C                                     u19261 7B9A  
                                   u19157 96E6                                     u19501 4098  
                                   u19421 3F6A                                     u19341 7724  
                                   u16678 3D72                                     u17398 803A  
                                   u16950 2AE8                                     u16918 2A04  
                                   u18550 1C9C                                     u18518 1C2C  
                                   u18470 1B9A                                     u18438 1AF6  
                                   u18198 1762                                     u19190 6A3A  
                                   u17670 5312                                     u17590 5026  
                                   u17750 35CE                                     u17910 3028  
                                   u17830 2E24                                     u18710 58A6  
                                   u19270 7BB0                                     u19510 40AE  
                                   u19430 3FD0                                     u19350 7756  
                                   u16679 3D86                                     u17399 804C  
                                   u16951 2AE4                                     u16919 2A1A  
                                   u16791 27F4                                     u16775 2796  
                                   u18551 1C98                                     u18519 1C40  
                                   u18471 1B96                                     u18439 1B08  
                                   u18391 1A86                                     u18199 1776  
                                   u19191 6A36                                     u17655 51DE  
                                   u17591 5022                                     u17751 35CA  
                                   u17911 3024                                     u17831 2E20  
                                   u18711 58A2                                     u19271 7BAC  
                                   u19511 40AA                                     u19431 3FCC  
                                   u19351 7752                                     u18640 9326  
                                   u16688 3DAA                                     u16928 2A3A  
                                   u18480 1BAC                                     u18448 1B28  
                                   u17680 5344                                     u17760 3604  
                                   u17920 307C                                     u17840 2E60  
                                   u18800 5AD2                                     u18720 58C2  
                                   u19600 4268                                     u19520 40D6  
                                   u19440 3FE6                                     u19360 3E94  
                                   u19280 943A                                     u16689 3DBE  
                                   u16929 2A50                                     u18481 1BA8  
                                   u18449 1B3C                                     u17681 5340  
                                   u17761 3600                                     u17745 3592  
                                   u17921 3078                                     u17841 2E5C  
                                   u18801 5ACE                                     u18721 58BE  
                                   u19601 4264                                     u19521 40D2  
                                   u19441 3FE2                                     u19361 3E90  
                                   u19281 9436                                     u18650 9356  
                                   u16938 2A70                                     u18570 1D9E  
                                   u18490 1BBE                                     u18298 18EA  
                                   u19290 9E92                                     u17770 3664  
                                   u17690 3400                                     u17930 3098  
                                   u17850 2E8A                                     u18810 5B5A  
                                   u18730 58FC                                     u19610 4288  
                                   u19530 4112                                     u19450 3FF8  
                                   u19370 3ECC                                     u18651 9352  
                                   u16939 2A86                                     u18491 1BBA  
                                   u18299 18FC                                     u19291 9E8E  
                                   u17675 5308                                     u17691 33FC  
                                   u17931 3094                                     u17851 2E86  
                                   u18811 5B56                                     u18731 58F8  
                                   u19611 4284                                     u19531 410E  
                                   u19451 3FF4                                     u19371 3EC8  
                                   u18660 9368                                     u16980 2B6E  
                                   u19700 7C10                                     u18628 1EEA  
                                   u19620 790E                                     u17780 3710  
                                   u17940 30B2                                     u17860 2EE6  
                                   u18900 44B4                                     u18820 5B7E  
                                   u18740 5942                                     u19540 4152  
                                   u19460 402E                                     u19380 3EE2  
                                   u18661 9364                                     u16981 2B6A  
                                   u19701 7C0C                                     u18629 1EFE  
                                   u18565 1CFC                                     u19621 790A  
                                   u17781 370C                                     u17941 30AE  
                                   u17861 2EE2                                     u18901 44B0  
                                   u19541 414E                                     u19461 402A  
                                   u19381 3EDE                                     u16990 2B84  
                                   u16878 28EE                                     u19710 7C42  
                                   u18638 1F26                                     u19630 7940  
                                   u17790 37B4                                     u17950 30F0  
                                   u17870 2F18                                     u18910 4512  
                                   u18830 4330                                     u18750 5966  
                                   u18670 9836                                     u19550 4174  
                                   u19470 405C                                     u19390 3F12  
                                   u18647 9318                                     u16991 2B80  
                                   u16879 2902                                     u19711 7C3E  
                                   u18639 1F3A                                     u18575 1D94  
                                   u19631 793C                                     u17775 365A  
                                   u17951 30EC                                     u17871 2F14  
                                   u18911 450E                                     u18831 432C  
                                   u18751 5962                                     u18671 9832  
                                   u19551 4170                                     u19471 4058  
                                   u19391 3F0E                                     u16968 2B12  
                                   u16888 2926                                     u19720 7C66  
                                   u19640 7952                                     u19800 819A  
                                   u17960 311A                                     u17880 2F56  
                                   u18920 4534                                     u18840 4348  
                                   u18680 9866                                     u19560 41CE  
                                   u19480 4072                                     u16969 2B26  
                                   u16889 293A                                     u19721 7C62  
                                   u18585 1DC4                                     u19641 794E  
                                   u19801 8196                                     u17961 3116  
                                   u17881 2F52                                     u18921 4530  
                                   u18841 4344                                     u18825 5B74  
                                   u18745 5938                                     u18681 9862  
                                   u19561 41CA                                     u19481 406E  
                                   u16978 2B46                                     u16898 29B8  
                                   u19730 7C84                                     u18594 1DE6  
                                   u19650 7964                                     u19810 81CA  
                                   u17970 3150                                     u17890 2F8C  
                                   u18930 4564                                     u18850 437C  
                                   u18770 5A38                                     u18690 5812  
                                   u19570 41E2                                     u19490 4088  
                                   u16979 2B5C                                     u16899 29CA  
                                   u19731 7C80                                     u18595 1DE2  
                                   u19651 7960                                     u19811 81C6  
                                   u17795 37AA                                     u17971 314C  
                                   u17891 2F88                                     u18931 4560  
                                   u18851 4378                                     u18771 5A34  
                                   u18691 580E                                     u19571 41DE  
                                   u19491 4084                                     u19740 7CA2  
                                   u19660 798C                                     u19820 81DE  
                                   u17980 3196                                     u18940 4578  
                                   u18860 43B6                                     u18780 5A58  
                                   u19580 41F2                                     u19900 A08C  
                                   u19741 7C9E                                     u19661 7988  
                                   u19821 81DA                                     u17981 3192  
                                   u18941 4574                                     u18861 43B2  
                                   u18781 5A54                                     u18765 59CA  
                                   u19581 41EE                                     u19901 A088  
                                   u19750 7CD6                                     u19670 79AC  
                                   u17990 31C0                                     u18950 45E8  
                                   u18870 43FC                                     u18790 5A82  
                                   u19590 4246                                     u19910 67D2  
                                   u19830 653E                                     u19751 7CD2  
                                   u19671 79A8                                     u17991 31BC  
                                   u18951 45E4                                     u18791 5A7E  
                                   u19591 4242                                     u19911 67CE  
                                   u19831 653A                                     u19760 7D10  
                                   u19680 79D0                                     u18960 4604  
                                   u18880 4420                                     u19920 6800  
                                   u19840 65DA                                     u19761 7D0C  
                                   u19681 79CC                                     u18961 4600  
                                   u18881 441C                                     u19921 67FC  
                                   u19841 65D6                                     u19690 7A0C  
                                   u19770 810C                                     u18970 4624  
                                   u18890 4480                                     u19930 681C  
                                   u19850 66F8                                     u19691 7A08  
                                   u19771 8108                                     u18971 4620  
                                   u18875 43F2                                     u19931 6818  
                                   u19851 66F4                                     u19780 812A  
                                   u18980 4654                                     u19940 685C  
                                   u19860 6708                                     i2l101 7028  
                                   u19781 8126                                     u18981 4650  
                                   u19941 6858                                     u19861 6704  
                                   u18990 925C                                     u19790 815E  
                                   u19950 68A6                                     u19870 6740  
                                   u18991 9258                                     u19791 815A  
                                   u18895 4476                                     u19951 68A2  
                                   u19871 673C                                     u19880 8A4E  
                                   u19960 68C0                                     u19881 8A4A  
                                   u19961 68BC                                     u19890 8B02  
                                   u19970 68E0                                     u19891 8AFE  
                                   u19971 68DC                                     u19980 6928  
                                   i2l125 A36E                                     u19981 6924  
                                   u19990 697A                                     u19991 6976  
                                   i2l420 A3D6                                     i2l416 A10C  
                                   i2l363 9F00                                     _OSCEN 39DD  
                            vfpfcnvrt@fmt 006E                    ?_build_analog_data_msg 0068  
                                   _TRISA 3FC2                                     _TRISB 3FC3  
                                   _TRISC 3FC4                           __end_of_f_close 9E04  
                                   _FatFs 02B6                           __end_of_chk_chr 9880  
           SD_SPI_SectorRead@sector_count 0093                                     _ExCvt FEC3  
                     ___lmul@multiplicand 0064                           __end_of_f_mount 8CD8  
                              i2memcpy@d1 0001                                i2memcpy@s1 0003  
                         __end_of_dir_sdi 5BE4                     _SD_SPI_AsyncReadTasks 4726  
                         __end_of_f_write 1724                            srb_pop@element 006E  
                         __end_of_get_fat 53E0                              ?_RED_LED_OFF 0001  
                ??_SD_SPI_AsyncWriteTasks 0083                           __end_of_ld_word A05A  
                          txb_enqueue@msg 0076                                     _flags 0048  
                         __end_of_mem_cmp 9372                           __end_of_mem_cpy 971A  
                         __end_of_mem_set A148                                     _fputc 8F58  
                           find_volume@br 0100                             find_volume@fs 0138  
                           find_volume@pt 011A                                     _width 01DA  
                                   _putch A514                                     main@x 01B7  
                                   main@y 01B9                                     main@z 01BB  
                          disk_ioctl@buff 0061                                     pclath 3FFA  
                                   pclatu 3FFB                            disk_read@count 00AE  
                                   tablat 3FF5                            disk_ioctl@pdrv 0063  
                          ?_i2c_read_reg8 0066                           __end_of_srb_pop 8BF8  
                                   plusw0 3FEB                                     plusw1 3FE3  
                                   plusw2 3FDB                           __end_of_put_fat 3904  
                           _txb_heartbeat 971A                                     status 3FD8  
                         __end_of_st_word A22A                           __end_of_sprintf 9FDA  
                        data_ready@status 006E                           __end_of_sync_fs 6C1A  
                        __end_ofi2_memcpy 9DAC                             get_ldnumber@i 0064  
                           disk_write@res 00B4                               ?_SD_SendCmd 006B  
                     _get_board_unique_id A3B6                              main@sys_mode 01AE  
                         __initialization 9962                       disk_initialize@pdrv 00B4  
                           main@can_setup 01C8                       disk_initialize@stat 00B5  
                            __end_of_main 57E2                          __end_of_i2c_init A25A  
                        __end_of_i2c_read 8746                     i2c_write_reg16@F22833 01D7  
        can_generate_timing_params@timing 0064                                    ??_main 01A6  
                           __activetblptr 0003                       get_message_type@msg 0001  
                       srb_init@pool_size 006B                              ?_SDSLOW_open 0001  
                      i2c_write_reg8@data 0069                      ?_get_board_unique_id 0001  
                        ?_fxls_get_whoami 0001                   _SD_SPI_IsWriteProtected A4F4  
                                  _ADACCH 3EE9                                    _ADACCL 3EE8  
                                  _ADACCU 3EEA                                    _ADACQH 3EF4  
                                  _ADACQL 3EF3                                    _ADCON0 3EF8  
                                  _ADCON1 3EF9                                    _ADCON2 3EFA  
                                  _ADCON3 3EFB                                    _ADERRH 3EE3  
                                  _ADERRL 3EE2                                    ?_fputc 0060  
                        ___llmod@dividend 0060                                    _ADLTHH 3EDF  
                                  _ADLTHL 3EDE                                    _ADRESH 3EF0  
                                  _ADRESL 3EEF                                    _ADPREH 3EF7  
                                  _ADPREL 3EF6                             SD_SendCmd@cmd 007C  
                                  _ADSTAT 3EFC                                    _ADUTHH 3EE1  
                                  _ADUTHL 3EE0                                    _ANSELA 3A40  
                                  ?_putch 0001                                    _ANSELB 3A50  
                                  _ANSELC 3A60                              i2c_read@data 0060  
                      SD_SPI_SectorRead@i 0099                                    _RB1PPS 3A09  
                                  _RB2PPS 3A0A                                    _RC1PPS 3A11  
                                  _RC3PPS 3A13                                    _RC5PPS 3A15  
                                  _ODCONA 3A42                                    _ODCONB 3A52  
                                  _ODCONC 3A62                                    i2l2220 8F56  
                                  i2l2241 9E4C                                    i2l2162 A512  
                                  i2l2171 A50A                                    i2l2180 A502  
                                  i2l2228 8F0E                                    i2l2159 A50E  
                                  i2l2168 A506                                    i2l2177 A4FE  
                                  i2l2950 9DAA                                    _INLVLA 3A44  
                                  _INLVLB 3A54                                    _INLVLC 3A64  
                                  _INLVLE 3A84                                    i2l5581 A508  
                                  i2l5575 A50C                                    i2l5583 A4FC  
                                  i2l5577 A510                                    i2l5585 A500  
                                  i2l5579 A504                                    i2l6655 A34A  
                                  i2l6657 A35E                            ?_txb_heartbeat 0001  
                                  _OSCFRQ 39DF           SD_SPI_AsyncWriteTasks@data_byte 004B  
                                  _RXB0D0 3F86                                    _RXB1D0 37F6  
                                  _TXB0D0 37E6                          __end_of_can_init 78D6  
                                  _TRISA2 1FE12                                    _TRISA3 1FE13  
                                  _TRISC0 1FE20                                    _TRISA4 1FE14  
                                  _TRISC1 1FE21                                    _TRISB3 1FE1B  
                                  _TRISC2 1FE22                                    _TRISC6 1FE26  
                        __end_of_can_send 8944                      __end_of_dir_register 8848  
                        __end_of___xxtofl 75B4                          __end_of_check_fs 7D18  
                 ?_SD_SPI_MediaInitialize 0001        build_board_stat_msg@error_data_len 006F  
                          can_init@timing 0060   can_generate_timing_params@can_frequency 0060  
                        __end_of_dir_find 775C                         __end_of_SPI1_Open 8A32  
                        __end_of_dir_next 4726                              ?_move_window 00C8  
                    __end_of_create_chain 33E0                               i2memcpy@tmp 000B  
                            vfprintf@cfmt 007D                          __end_of_ld_clust 9486  
                        __end_of_ld_dword 90DC                                    ___lmul 99CE  
                                  ___wmul A25A                                 ??___fldiv 008F  
                               ??___flmul 0076                                 ??_dbc_2nd 0062  
                               ??___fltol 00A4                                 ??_dbc_1st 0062  
                               ??___lldiv 0068                                    _f_open 1F40  
                            ?_timer0_init 0001                                 ??___llmod 0068  
                                  _ioInfo 002D                                 ??___lwdiv 0064  
                    __end_of_GREEN_LED_ON A508                                    _f_sync 6C1A  
                          srb_push@offset 0074                                    _memcpy 9CF6  
                                  _memset 9BD4                                 ??_f_close 00DC  
                          find_volume@fmt 0137                                    _millis A2B2  
                                  clear_0 998C                                    clear_1 999E  
                                  clear_2 99AA                                    clear_3 99B6  
                          find_volume@rfs 00DC                                 ??_chk_chr 0064  
                          find_volume@vol 0120                   SD_SendCmd@address_bytes 0078  
                                  isa$std 0001                                 ??_f_mount 00EC  
                               ??_dir_sdi 00F3                                 ??_f_write 011F  
                               ??_get_fat 00D9                      _build_board_stat_msg 832E  
                            _can_send_rdy A476                                 ??_ld_word 0062  
    SD_SPI_DelayMilliseconds@milliseconds 0063                     ??_get_board_unique_id 0002  
                         _ADCC_Initialize 9C36                                 ??_mem_cmp 0066  
                               ??_mem_cpy 0066                                    fputc@c 0060  
                               ??_mem_set 0066                            _PMD_Initialize A370  
                        __end_of_validate 821E                              __pdataCOMRAM 0050  
                  ?_SD_SPI_AsyncReadTasks 0082                      __end_of_get_ldnumber 7A48  
              ?_SD_SPI_IsMediaInitialized 0001                              __mediumconst FEC2  
                         disk_read@sector 00AA                          __end_of_srb_init 969A  
                                  tblptrh 3FF7                                    tblptrl 3FF6  
                        __end_of_srb_push 8B16                                    tblptru 3FF8  
                        __end_of_st_clust 9EAE                              ?_srb_is_full 0060  
                          _i2c_write_reg8 A2D8                          __end_of_st_dword 9594  
                               ??_srb_pop 006F                                    putch@c 0001  
                        __end_of_vfprintf 9F4E                 ?_ADCC_GetSingleConversion 0060  
                               ??_put_fat 00DD                                 ??_st_word 0064  
                        __end_of_txb_init A1F4                __end_of_get_reset_board_id 9F02  
                               ??_sprintf 0087                           ??_i2c_read_reg8 0069  
                               ??_sync_fs 00CA        SD_SPI_AsyncWriteTasks@WriteTimeout 003A  
                            ___xxtofl@arg 006A                              ___xxtofl@exp 0069  
                       _SYSTEM_Initialize A4A2                              i2c_write@len 0061  
                            ___xxtofl@val 0060            __end_of_SD_SPI_MediaInitialize 1F40  
                              __accesstop 0060            build_board_stat_msg@error_data 006D  
                 __end_of__initialization 99C8            build_board_stat_msg@error_code 006C  
                          get_ldnumber@tc 0066                            disk_write@buff 00AB  
                          get_ldnumber@tp 006B                            get_ldnumber@tt 0067  
                          _SPI1_ReadBlock 0000                            disk_write@pdrv 00B3  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 0001  
                              ___fltol@f1 00A0                        fxls_get_whoami@res 006C  
                           __end_of_ExCvt FF43                            __pcstackCOMRAM 0001  
                  can_msg_handler@dest_id 000F                    _write_timestamp_2bytes A324  
                  _write_timestamp_3bytes A182                       ??_SYSTEM_Initialize 0060  
                      _SD_SPI_SectorWrite 7E70                     i2c_write_reg8@address 0068  
                            txb_init@pool 006F                             __end_of_fputc 901E  
                       ??_SPI1_Initialize 0060                             __end_of_putch A516  
                ?_timer0_handle_interrupt 0001                     ?_build_board_stat_msg 0068  
                  __end_of_PMD_Initialize A394                            _sdmmc_cmdtable FF43  
                   SPI1_ExchangeByte@data 0060                     get_offset_bytes@index 0068  
                     ?_SD_SPI_SectorWrite 0090                         __end_of_i2c_write 8642  
                      _spi1_configuration FFBB             __end_of_SD_SPI_IsMediaPresent A4FC  
               ??_SD_SPI_IsWriteProtected 0060                    __end_of_i2c_write_reg8 A2FE  
                               ?i2_memcpy 0001                          _seen_can_message 0049  
       __end_of_SD_SPI_IsMediaInitialized A4A2                              ?_txb_enqueue 0076  
           SD_SPI_AsyncWriteTasks@command 004A                                _can_rcv_cb 0046  
                                 ??_fputc 0063                 __end_of_SYSTEM_Initialize A4B4  
                         ??_txb_heartbeat 0075                                   ??_putch 0060  
                              __pbssBANK1 01CF                                __pbssBANK2 0200  
              __end_of_SET_ACCEL_I2C_ADDR A414                                 ?_i2c_init 0001  
                               ?_i2c_read 0060                              ??_RED_LED_ON 0001  
                          _send_status_ok 821E                                _data_ready A286  
                        _mediaInformation 0050                      ??_SD_SPI_SectorWrite 0098  
                            _BLUE_LED_OFF A510                            _SPI1_WriteByte 0000  
                                 IVTBASEH 3FD6                                   IVTBASEL 3FD5  
                                 IVTBASEU 3FD7                          _find_volume$3100 0114  
                        _find_volume$3099 0110                    get_board_unique_id@msg 0001  
                 _buf@can_tx_buffer$F1072 01E4                    _SD_SPI_AsyncWriteTasks 272E  
                          main@buf_status 01AF                                   ?___lmul 0060  
                                 _I2C1CLK 3D7B                                   _I2C1CNT 3D6C  
                                 _I2C1ERR 3D76                                   ?___wmul 0060  
                                 _I2C1PIR 3D79                                   _I2C1RXB 3D6A  
                                 _I2C1TXB 3D6B                   __end_of_ADCC_Initialize 9C98  
                                 ?_f_open 0141                    __end_of_sdmmc_cmdtable FF93  
                                 ?_f_sync 00D3                         ??_disk_initialize 00B4  
                                 _ADFLTRH 3EE7                                   _ADFLTRL 3EE6  
                                 ?_memcpy 0060                                   ?_memset 0060  
                       ??_BLUE_LED_TOGGLE 0060                              ?_sync_window 00B5  
                          ___lmul@product 0068                                   ?_millis 0060  
                                 _ADPREVH 3EEE                                   _ADPREVL 3EED  
                 ??_build_analog_data_msg 0071                                   _ADSTPTH 3EE5  
                                 _ADSTPTL 3EE4                              ??_SPI1_Close 0060  
                         ?_PMD_Initialize 0001                                   _ANSELC0 1D300  
                                 _CLKRCLK 3CE6                                   _CLKRCON 3CE5  
                               ?_can_init 0060                        __end_of_RED_LED_ON A500  
                                 i2l10233 A0D2                                   i2l10235 A0E2  
                                 i2l10239 A0EE                                   i2l12301 6E44  
                                 i2l12231 9D76                                   i2l12311 6EAA  
                                 i2l12303 6E52                                   i2l10721 9EBE  
                                 i2l12233 9D7A                                   i2l12321 6F32  
                                 i2l12313 6EE8                                   i2l12305 6E74  
                                 i2l10723 9EC6                                   i2l12235 9D8C  
                                 i2l12227 9D52                                   i2l12331 6F9E  
                                 i2l12315 6F00                                   i2l12307 6E82  
                                 i2l10733 A3B6                                   i2l10725 9ED6  
                                 i2l12229 9D66                                   i2l12237 9D90  
                                 i2l12333 6FB0                                   i2l12317 6F12  
                                 i2l12309 6E92                                   i2l14101 9E44  
                                 i2l10735 A3C6                                   i2l10727 9EEC  
                                 i2l10719 9EAE                                   i2l12351 7022  
                                 i2l12343 6FFA                                   i2l12335 6FCC  
                                 i2l12327 6F46                                   i2l12319 6F2E  
                                 i2l14103 9E48                                   i2l12337 6FD0  
                                 i2l12329 6F86                                   i2l10739 A3CC  
                                 i2l12355 7036                                   i2l12347 700E  
                                 i2l12339 6FE6                                   i2l11831 8E9C  
                                 i2l11823 8E88                                 ?_can_send 006B  
                                 i2l11841 8EE8                                   i2l11825 8E8C  
                                 i2l11843 8EFC                                   i2l11835 8EB8  
                                 i2l11827 8E9C                                   i2l11837 8EC8  
                                 i2l11829 8E9C                                   i2l14093 9E10  
                                 i2l11839 8ED8                                   i2l11847 8F14  
                                 i2l14095 9E22                                   i2l14097 9E26  
                                 i2l14099 9E36         SD_SPI_AsyncReadTasks@blockCounter 0044  
                                 i2l19191 8F40                                   i2l19189 8F32  
                         ?_i2c_write_reg8 0066                                 ?___xxtofl 0060  
                               ?_check_fs 00D3                                _disk_ioctl A394  
                              ??i2_memcpy 0007                 ?_SD_SPI_DelayMilliseconds 0001  
                                 _OSCCON1 39D9                                   _OSCCON3 39DB  
                          follow_path@res 0140                                _disk_write 9A3A  
                                 _SPI1CLK 3D1C                                   _SPI1RXB 3D10  
                                 _SPI1TXB 3D11                SD_SPI_AsyncWriteTasks@info 0082  
                                 _OSCTUNE 39DE                                   _SLRCONA 3A43  
                                 _SLRCONB 3A53                                   _SLRCONC 3A63  
                          remove_chain@fs 010D                                 ?_dir_find 012D  
                               ?_dir_next 00FA           SD_SPI_SectorRead@sector_address 008D  
                     SD_SPI_SectorWrite@i 009C                                 ?_ld_clust 0067  
                               ?_ld_dword 0060                    __end_of_send_status_ok 832E  
                              ??_i2c_init 0060                                ??_i2c_read 0062  
                           ?_remove_chain 00F4                                   _CurrVol 004D  
                       ??_send_status_err 0078                              ??_SD_SendCmd 0070  
                      __end_of_SPI1_Close A4EC                         __end_of_dir_clear 7E70  
                       __end_of_dir_alloc 7BB8                                   __Hparam 0000  
                       __end_of_clst2sect 8DB4                                   __Lparam 0000  
                               ?_validate 0062           write_timestamp_3bytes@timestamp 0060  
                       __end_of_disk_read 9B0A                                 ?_srb_init 0067  
                            _f_write$3415 012B                                 ?_srb_push 006C  
                              f_close@res 00DE                                   ___fldiv 5BE4  
                               ?_st_clust 0064                                   ___flmul 4B78  
                                 _dbc_2nd A4B4                                   ___fltol 8436  
                                 _dbc_1st A4C0                                 ?_st_dword 0060  
                                 ___lldiv 9234                                   ___llmod 9372  
                              check_fs@fs 00D3                                   ___lwdiv 9796  
                               ?_vfprintf 0079                    ??_build_board_stat_msg 0072  
                               ?_txb_init 006F                           srb_push@element 006E  
                                 _f_close 9DAC                                   __pcinit 9962  
                                 _chk_chr 980C                                   __ramtop 1000  
                            _get_fat$2577 00E1                                   _f_mount 8BF8  
                         i2c_read@address 0063              __end_of_fxls_read_accel_data 6260  
                   __end_of_GREEN_LED_OFF A50C                                   __ptext0 53E0  
                                 __ptext1 A1BC                                   __ptext2 9618  
                                 __ptext3 9796                                   __ptext4 971A  
                                 __ptext5 8B16                                   __ptext6 A05A  
                                 __ptext7 A476                                   __ptext8 8848  
                                 __ptext9 A3D8                                   _dir_sdi 57E2  
                                 _f_write 0ED2                               validate@obj 0062  
                                 _get_fat 4FC8                               validate@res 006C  
                             validate@rfs 0064                                chk_chr@chr 0062  
                            _dir_register 8746                                chk_chr@str 0060  
                                 _ld_word A01C                                   _mem_cmp 92DA  
                                 _mem_cpy 969A                                ??_can_init 0064  
                   _OSCILLATOR_Initialize A45E                                   _mem_set A10E  
                              ??_can_send 006C                               _I2C1ERRbits 3D76  
                              ??___xxtofl 0064                                ??_check_fs 00D9  
                         find_volume@mode 00DE                           find_volume@path 00DA  
                   SD_SPI_SectorRead@info 009B                           find_volume@nrsv 0122  
                         find_volume@stat 0128                  ??_PIN_MANAGER_Initialize 0060  
                             _I2C1PIRbits 3D79                              _create_chain 2DF4  
                      __end_of_SD_SendCmd 3E0A                                   _srb_pop 8B16  
                              ??_dir_find 00FE                build_board_stat_msg@output 0070  
                                 _put_fat 33E0                                ??_dir_next 0117  
                       __end_of_fxls_init 9618                                   _st_word A1F4  
                                 _sprintf 9F96                                   main@msg 01BD  
                                 main@rev 01B2                                   main@who 01B1  
                                 _tx_pool 0220                                ??_ld_clust 006B  
                         i2c_read@timeout 0064                                   _sync_fs 69E0  
                              ??_ld_dword 0064                      end_of_initialization 99C8  
                         ?_send_status_ok 0001                              _GREEN_LED_ON A504  
                              f_open@clst 0162                                f_open@mode 0145  
                              f_open@path 0143                            ??_remove_chain 0100  
                                 memcpy@d 0067                                   memcpy@n 0064  
                                 memcpy@s 0069                                   fputc@fp 0062  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                               ?_data_ready 006C  
                       __end_of_spiMaster FFBB                           disk_status@pdrv 0060  
                         disk_status@stat 0061                                 i2u1420_40 9DAA  
                               i2u1420_41 9DA6                                 i2u1174_40 9EBE  
                               i2u1430_40 6F12                                 i2u1174_41 9EBA  
                               i2u1430_41 6F0E                                 i2u1095_40 A0E2  
                               i2u1175_40 9EEC                                 i2u1423_40 6E52  
                               i2u1095_41 A0DE                                 i2u1175_41 9EE8  
                               i2u1423_41 6E4E                                 i2u1176_40 A3C6  
                               i2u1360_40 8F0E                                 i2u1440_40 7036  
                               i2u1432_40 6F46                                 i2u1431_48 6F1C  
                               i2u1424_40 6E60                                 i2u1176_41 A3C2  
                               i2u1360_41 8F0A                                 i2u1440_41 7032  
                               i2u1432_41 6F42                                 i2u1431_49 6F2E  
                               i2u1424_41 6E5C                                 i2u1425_40 6E74  
                               i2u1425_41 6E70                                 i2u1433_45 6F50  
                               i2u1434_40 6FB0                                 i2u1426_40 6E82  
                               i2u1434_41 6FAC                                 i2u1426_41 6E7E  
                               i2u1427_40 6E92                                 i2u1427_41 6E8E  
                               i2u1436_40 6FE6                                 i2u1435_48 6FBA  
                               i2u1428_40 6EAA                                 i2u1436_41 6FE2  
                               i2u1435_49 6FCC                                 i2u1428_41 6EA6  
                               i2u1437_40 6FFA                                 i2u1437_41 6FF6  
                               i2u1429_45 6EB4                                 i2u1358_40 8EB4  
                               i2u1438_40 700E                                 i2u1358_41 8EB0  
                               i2u1438_41 700A                                 i2u1359_40 8EFC  
                               i2u1439_40 7022                                 i2u1359_41 8EF8  
                               i2u1439_41 701E                                 i2u1640_40 9E36  
                               i2u1640_41 9E32                                 i2u1641_40 9E44  
                               i2u1641_41 9E40                             ??_BLUE_LED_ON 0001  
                               i2u1639_40 9E22                                 i2u1639_41 9E1E  
                         ___lldiv@divisor 0064                                f_mount@cfs 00EF  
                              f_mount@res 00EC                                f_mount@opt 00EB  
                              f_mount@vol 00F1                           ___lldiv@counter 006C  
                            _get_ldnumber 78D6                                ??_validate 0066  
                       __end_of_vfpfcnvrt 679E                             ?_srb_is_empty 0060  
                               _SPI1TCNTL 3D12                                ??_srb_init 006F  
                                 postdec1 3FE5                                   postdec2 3FDD  
                              ??_srb_push 0070                                   postinc0 3FEE  
                                 postinc1 3FE6                                   postinc2 3FDE  
                        vfpfcnvrt@convarg 0072                                ??_st_clust 006C  
                          move_window@res 00D2                                ??_st_dword 0066  
                        ?_ADCC_Initialize 0001                                ??_vfprintf 007D  
                               _SPI1_Open 8944          __end_of_ADCC_GetSingleConversion A0D2  
                              ??_txb_init 0077                                dir_clear@n 00D8  
                              dir_alloc@n 0136                          remove_chain@clst 00F6  
                              dir_find@dp 012D                                dir_find@fs 012F  
                 ??_SD_SPI_AsyncReadTasks 0083                          _get_offset_bytes 9C98  
        SD_SPI_SectorWrite@sector_address 0090                                dir_sdi@csz 0100  
                              dir_sdi@ofs 00EF                          _get_message_type A0D2  
                              dir_next@dp 00FA              SD_SPI_MediaInitialize@c_size 00A9  
                              dir_next@fs 0127                               ?_disk_ioctl 0060  
      SD_SPI_AsyncWriteTasks@blockCounter 0042                             i2c_write@data 0060  
                              f_write@btw 011B                             ___xxtofl@sign 0068  
                              f_write@res 0131               ??_SD_SPI_IsMediaInitialized 0060  
                   fxls_read_accel_data@x 00AA                     fxls_read_accel_data@y 00AC  
                   fxls_read_accel_data@z 00AE                               ?_disk_write 00AB  
                               _TRISCbits 3FC4                               srb_init@ctx 0067  
                       ??_can_msg_handler 000B                                get_fat@obj 00D3  
                              get_fat@val 00E5                               ___fldiv@grs 009A  
                             ___fldiv@rem 0093                           get_ldnumber@vol 0069  
                         disk_write@count 00B1                            _FatFs@ff$F2407 01E2  
        build_analog_data_msg@sensor_data 006D                    SPI1_ExchangeBlock@data 0064  
                           ??_create_name 006C                               ___flmul@grs 007B  
                              ld_clust@cl 006F                                ld_clust@fs 0067  
                         _SPI1_Initialize A414                               srb_push@ctx 006C  
                 ?_write_timestamp_2bytes 0060                             ??_find_volume 00DF  
                 ?_write_timestamp_3bytes 0060                                ld_dword@rv 0069  
                           ??_disk_status 0060                                main@status 01B0  
                          ??_srb_is_empty 0062              __end_of_can_handle_interrupt 703E  
                      _get_reset_board_id 9EAE               __end_of_get_board_unique_id A3D8  
                              ?_SPI1_Open 0001                       __end_of_BLUE_LED_ON A510  
                          __end_of___lmul 9A3A                               vfpfcnvrt@ap 006F  
                             st_clust@dir 0066                               vfpfcnvrt@cp 0076  
                             vfpfcnvrt@fp 006D                            __end_of___wmul A286  
                         can_send@message 006B                   send_status_ok@timestamp 0191  
                          __end_of_f_open 272E                             __pidataCOMRAM A4CC  
                     ?_get_reset_board_id 0005                            __end_of_f_sync 6E44  
                               i2memcpy@d 0007                                 i2memcpy@n 0005  
                               i2memcpy@s 0009                               _ECANCONbits 3F91  
                          __end_of_memcpy 9D52                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 9C36                            __end_of_millis A2D8  
                              ld_word@ptr 0060                       start_initialization 9962  
                             st_dword@val 0062                               st_dword@ptr 0060  
                 can_msg_handler@msg_type 000D                                 _i2c_write 853E  
               fxls_read_accel_data@x_lsb 00B3                 fxls_read_accel_data@x_msb 00B4  
               fxls_read_accel_data@y_lsb 00B5                 fxls_read_accel_data@y_msb 00B6  
               fxls_read_accel_data@z_lsb 00B7                 fxls_read_accel_data@z_msb 00B8  
                              mem_cmp@cnt 0064                                mem_cmp@dst 0060  
                              ivt0x8_base 0008                                mem_cmp@src 0062  
                             _CANSTATbits 3F8E                        can_msg_handler@msg 000A  
                              mem_cpy@cnt 0064                               put_fat@clst 00D5  
                              mem_cpy@dst 0060                      ??_get_reset_board_id 0007  
                   __end_of_i2c_read_reg8 9B70                                mem_cpy@src 0062  
          __end_of_write_timestamp_2bytes A34A            __end_of_write_timestamp_3bytes A1BC  
                         ___llmod@divisor 0064                           _disk_initialize 9F4E  
                 ?_SD_SPI_AsyncWriteTasks 0082                      _fxls_read_accel_data 5F80  
                              mem_set@cnt 0064                                mem_set@dst 0060  
                         ___llmod@counter 0068                                mem_set@val 0062  
                         _BLUE_LED_TOGGLE A4EC                 _SD_SPI_IsMediaInitialized A48C  
                    i2c_write_reg8@F22827 01DE                             ??_follow_path 0137  
                     __end_of_create_name 42B4                               vfprintf@fmt 007A  
      __end_of_can_generate_timing_params 7232                _can_generate_timing_params 703E  
                        ??_PMD_Initialize 0060          __end_of_SD_SPI_DelayMilliseconds 9962  
                                ??___lmul 0068                                  ??___wmul 0064  
                      _SET_ACCEL_I2C_ADDR A3F6                                  ??_f_open 0146  
                                ??_f_sync 00D5                       __end_of_find_volume 0ED2  
                     __end_of_disk_status 98F4                                  ??_memcpy 0066  
                        ??_i2c_write_reg8 0068                                  ??_memset 0066  
                           ??_SDFAST_open 0062                                  ??_millis 0064  
                      SD_SendCmd@response 007D                                memset@dest 0060  
                    __end_of_remove_chain 69E0             __end_of_build_analog_data_msg 950E  
                     ?_SET_ACCEL_I2C_ADDR 0001                  _ADCC_GetSingleConversion A096  
                               ___fldiv@a 008B                                 ___fldiv@b 0087  
                             __pbssBIGRAM 02B6                             _SPI1_ReadByte 0000  
                               ___flmul@a 0072                                 ___flmul@b 006E  
                             __pbssCOMRAM 002D            SD_SPI_AsyncWriteTasks@response 0087  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           ??_RED_LED_OFF 0001                     _SD_SPI_IsMediaPresent A4F8  
                       _SD_SPI_SectorRead 7FB2                               _BRGCON1bits 3703  
                             _BRGCON2bits 3704                               _BRGCON3bits 3705  
                              ?_i2c_write 0060                           _send_status_err 9FDA  
                 __end_of_SPI1_Initialize A42E                              check_fs@sect 00D5  
                      ?_SD_SPI_SectorRead 008D                           _SPI1_WriteBlock 0000  
                   __end_of_txb_heartbeat 9796            __end_of_SD_SPI_AsyncWriteTasks 2DF4  
                       _fxls_get_prod_rev A446                     ?_fxls_read_accel_data 00AA  
                    ??_SET_ACCEL_I2C_ADDR 0060                       ??_SD_SPI_SectorRead 0095  
                      ?_fxls_get_prod_rev 0001                               _BLUE_LED_ON A50C  
           build_board_stat_msg@timestamp 0068           SD_SPI_DelayMilliseconds@timeout 0064  
                   get_reset_board_id@msg 0005                          ___lwdiv@dividend 0060  
                  _PIN_MANAGER_Initialize 9B70                         ??_fxls_get_whoami 006C  
                           __pmediumconst FEC2           ADCC_GetSingleConversion@channel 0064  
                                ?___fldiv 0087                                 __ptext100 A286  
                               __ptext101 9B0A                                 __ptext110 A370  
                               __ptext102 853E                                 __ptext111 9B70  
                               __ptext103 8642                                 __ptext120 8E88  
                               __ptext112 A45E                                 __ptext104 775C  
                               __ptext121 9EAE                                 __ptext113 A3F6  
                               __ptext105 703E                                 __ptext122 A0D2  
                               __ptext114 9C36                                 __ptext106 9486  
                               __ptext123 A3B6                                 __ptext115 A096  
                               __ptext107 A324                                 __ptext124 A4FC  
                               __ptext116 9E04                                 __ptext108 A4A2  
                               __ptext125 A500                                 __ptext117 A34A  
                               __ptext109 A414                                 __ptext126 A504  
                               __ptext118 6E44                                 __ptext127 A508  
                               __ptext119 9D52                                 __ptext128 A50C  
                               __ptext129 A510                                  ?___flmul 006E  
                               _dir_clear 7D18                                  ?_dbc_2nd 0060  
                               _dir_alloc 7A48                                  ?___fltol 00A0  
                                ?_dbc_1st 0060                                  ?___lldiv 0060  
                                ?___llmod 0060                                  _I2C1ADB1 3D6E  
                     ??_fxls_get_prod_rev 006C                                  ?___lwdiv 0060  
                               _clst2sect 8CD8                               ??_SPI1_Open 0060  
                                _I2C1CON0 3D73                                  _I2C1CON1 3D74  
                                _I2C1CON2 3D75                  ?_SD_SPI_IsWriteProtected 0001  
                                ?_f_close 00DA                            _RED_LED_TOGGLE A4F0  
                               _disk_read 9AA2                                  ?_chk_chr 0060  
                           follow_path@dp 0133                             follow_path@fs 013D  
                           follow_path@ns 013F                             _validate$3131 006A  
                     __end_of_follow_path 6514                                  ?_f_mount 00E7  
                                ?_dir_sdi 00ED                                  ?_f_write 0117  
                                ?_get_fat 00D3                         _interrupt_handler 9E04  
                           ??_SDSLOW_open 0062                                  ?_ld_word 0060  
                                ?_mem_cmp 0060                                  ?_mem_cpy 0060  
                                ?_mem_set 0060                 __end_of_SD_SPI_SectorRead 80F4  
                             _COMSTATbits 3F90                          ??_send_status_ok 0100  
                      ?_interrupt_handler 0001                                  _CANRXPPS 3AED  
                     __end_of_SDFAST_open A4DE                  ??_SD_SPI_MediaInitialize 0082  
                    __end_of_srb_is_empty A096                                  ?_srb_pop 006C  
                               f_close@fp 00DA                                 f_close@fs 00DC  
                    _can_handle_interrupt 6E44                            i2c_init@clkdiv 0060  
                                ?_put_fat 00D3                          ___lwdiv@quotient 0065  
                                ?_st_word 0060                   __end_of_disk_initialize 9F96  
                                ?_sprintf 007F                   __end_of_BLUE_LED_TOGGLE A4F0  
                                ?_sync_fs 00C8                 __end_of_fxls_get_prod_rev A45E  
                       find_volume@fasize 012D                    SET_ACCEL_I2C_ADDR@addr 0060  
SD_SPI_AsyncWriteTasks@preEraseBlockCount 008C                                _I2C1SDAPPS 3AE4  
                     ??_interrupt_handler 002B                                _I2C1SCLPPS 3AE3  
              __end_of_SPI1_ExchangeBlock 9234                       __end_of_RED_LED_OFF A504  
                 SD_SPI_SectorRead@buffer 0091                                 _fxls_init 9594  
                             _create_name 3E0A                              ??_data_ready 006E  
                          ___wmul@product 0064                                  _LATAbits 3FBA  
                __end_of_get_offset_bytes 9CF6                         find_volume@szbfat 0116  
                               f_open@bcs 0156                                 f_open@ofs 015E  
                               f_open@res 0168                         find_volume@sysect 011C  
                 SD_SPI_SectorRead@result 0097                                  _PIE3bits 3993  
                                _PIE5bits 3995                  __end_of_get_message_type A10E  
                 SD_SPI_SectorRead@status 0098            SD_SPI_SectorWrite@sector_count 0096  
                            _SPI1CON0bits 3D14                               _find_volume 001E  
                             _disk_status 9880                             ??_move_window 00CE  
                               f_mount@fs 00E7                                 f_mount@rp 00ED  
                         follow_path@path 0135                             _I2C1STAT1bits 3D78  
                                _PIR1bits 39A1                                  _PIR2bits 39A2  
                                _SPI1BAUD 3D19                                  _PIR3bits 39A3  
                                _SPI1CON0 3D14                                  _SPI1CON1 3D15  
                                _SPI1CON2 3D16                                  i2u617_40 A35E  
                                i2u617_41 A35A                                  _PIR5bits 39A5  
           SD_SPI_AsyncReadTasks@response 0087                fxls_read_accel_data@status 00B2  
                               _spiMaster FF93                      i2c_read_reg8@address 0069  
                           move_window@fs 00C8                                  _RXB0SIDH 3F81  
                                _RXB0SIDL 3F82                                  _RXB1SIDH 37F1  
                                _RXB1SIDL 37F2                    __end_of_RED_LED_TOGGLE A4F4  
                           ??_timer0_init 0060                                ?_dir_clear 00C8  
                               dir_find@c 0131                                ?_dir_alloc 012D  
                         remove_chain@obj 00F4                           remove_chain@res 010C  
                                _TXB0SIDH 37E1                                  _TXB0SIDL 37E2  
                         remove_chain@nxt 0108                                ?_clst2sect 006C  
                                _RXM0SIDH 37B8                                  _RXM0SIDL 37B9  
                               f_sync@dir 00D6                                  _RXM1SIDH 37BC  
                                _RXM1SIDL 37BD                                 f_sync@res 00D5  
                               dir_sdi@dp 00ED                                 dir_sdi@fs 0108  
                         _can_msg_handler 8E88                                ?_disk_read 00A8  
                               _vfpfcnvrt 6514                 __end_of_interrupt_handler 9E5A  
                               f_write@cc 0134                                 f_write@bw 011D  
                               f_write@fp 0117                                 f_write@fs 0140  
             SD_SPI_MediaInitialize@count 00A8               SD_SPI_MediaInitialize@index 00A6  
                               get_fat@bc 00E9                                 get_fat@fs 00EB  
                               get_fat@wc 00E3                  _SD_SPI_DelayMilliseconds 98F4  
                           ?_can_send_rdy 0001                                _ADCON0bits 3EF8  
                              _ADCON1bits 3EF9                                _ADCON2bits 3EFA  
                              _ADCON3bits 3EFB                         ___wmul@multiplier 0060  
                 __end_of_send_status_err A01C                                srb_pop@ctx 006C  
           __end_of_SD_SPI_AsyncReadTasks 4B78                              ??_disk_ioctl 0063  
                    i2c_read_reg8@success 006A                        __end_of_data_ready A2B2  
                  ?_SD_SPI_IsMediaPresent 0001                                  i2_memcpy 9D52  
                            ??_disk_write 00B3                             ??_srb_is_full 0062  
                   ?_can_handle_interrupt 0001                      srb_init@element_size 006D  
                 _timer0_handle_interrupt A34A                               ??_i2c_write 0062  
                              st_clust@cl 0068                                vfpfcnvrt@c 0078  
                              st_clust@fs 0064                          ?_SPI1_Initialize 0001  
                             _INTCON0bits 3FD2                         ___lmul@multiplier 0060  
                     __end_of_SDSLOW_open A4E6                                 copy_data0 9976  
                              _CANCONbits 3F8F                                 ld_word@rv 0065  
                  ??_fxls_read_accel_data 00B0                                  _i2c_init A22A  
                                _i2c_read 8642                                ?_fxls_init 0001  
                       SD_SendCmd@address 006B             send_status_err@board_stat_msg 0078  
                              put_fat@res 00F3                                put_fat@val 00D9  
                       move_window@sector 00CA              send_status_ok@board_stat_msg 019B  
                         dir_next@stretch 00FC                                _ADSTATbits 3EFC  
                                __Hrparam 0000                                 memcpy@tmp 0066  
         __end_of_SD_SPI_IsWriteProtected A4F8                                vfprintf@ap 007C  
                                __Lrparam 0000                                vfprintf@fp 0079  
        can_handle_interrupt@rcvd_msg_753 0020                               _follow_path 6260  
                      __end_of_disk_ioctl A3B6                           ?_RED_LED_TOGGLE 0001  
                      __end_of_disk_write 9AA2                         SD_SendCmd@timeout 0076  
                 ??_OSCILLATOR_Initialize 0060                                st_word@val 0062  
                              st_word@ptr 0060                                _CIOCONbits 3700  
                              ?_vfpfcnvrt 006D                            ??_can_send_rdy 0060  
                     __end_of_move_window 8E88                               _SDFAST_open A4D6  
            ??_can_generate_timing_params 0066                                 millis@res 0064  
                       txb_init@pool_size 0071                       __end_of_timer0_init A3F6  
                                dbc_2nd@c 0062                                  _can_init 775C  
                                _can_send 8848                                sprintf@fmt 0081  
                                dbc_1st@c 0062               _SD_SPI_MediaInitialize$6582 00A1  
                                ___xxtofl 73FC                                  _check_fs 7BB8  
                              _T0CON0bits 3FB8                     SD_SendCmd@longTimeout 0072  
                              _T0CON1bits 3FB9                        send_status_ok@time 0197  
                      send_status_ok@text 0194                              _I2C1CON0bits 3D73  
                           ??_txb_enqueue 0078                                  __pivt0x8 0008  
                         ___lwdiv@divisor 0062                           dir_register@res 013D  
                             _RED_LED_OFF A500                             dir_clear@ibuf 00D0  
                           dir_clear@clst 00CA                           ___lwdiv@counter 0064  
                           dir_clear@sect 00D2                                  __ptext10 821E  
                                __ptext11 9F96                                  __ptext20 6260  
                                __ptext12 9F02                                  __ptext21 93FC  
                                __ptext13 6514                                  __ptext30 57E2  
                                __ptext22 75B4                                  __ptext14 8F58  
                                __ptext31 42B4                                  __ptext23 3E0A  
                                __ptext15 A514                                  __ptext40 69E0  
                                __ptext32 7D18                                  __ptext24 A4B4  
                                __ptext16 9372                                  __ptext41 950E  
                                __ptext33 8CD8                                  __ptext25 A4C0  
                                __ptext17 0ED2                                  __ptext50 90DC  
                                __ptext42 A10E                                  __ptext34 2DF4  
                                __ptext26 980C                                  __ptext18 1F40  
                                __ptext51 9C98                                  __ptext43 A394  
                                __ptext35 33E0                                  __ptext27 8746  
                                __ptext19 679E                                  __ptext60 8436  
                                __ptext52 A25A                                  __ptext44 9E5A  
                                __ptext36 4FC8                                  __ptext28 969A  
                                __ptext61 4B78                                  __ptext53 A2B2  
                                __ptext45 A1F4                                  __ptext37 9DAC  
                                __ptext29 7A48                                  __ptext70 78D6  
                                __ptext62 5BE4                                  __ptext54 832E  
                                __ptext46 A4EC                                  __ptext38 6C1A  
                                __ptext71 9880                                  __ptext63 9594  
                                __ptext55 A182                                  __ptext47 9FDA  
                                __ptext39 80F4                                  __ptext80 8DB4  
                                __ptext72 A4F4                                  __ptext64 A2D8  
                                __ptext56 A4F0                                  __ptext48 A148  
                                __ptext81 7232                                  __ptext73 A4F8  
                                __ptext65 A42E                                  __ptext57 A22A  
                                __ptext49 8A32                                  __ptext90 918E  
                                __ptext82 9A3A                                  __ptext74 A48C  
                                __ptext66 A446                                  __ptext58 5F80  
                                __ptext91 3904                                  __ptext83 7E70  
                                __ptext75 9F4E                                  __ptext67 8BF8  
                                __ptext59 73FC                                  __ptext92 9CF6  
                                __ptext84 272E                                  __ptext76 1724  
                                __ptext68 001E                                  _dir_find 75B4  
                                __ptext93 A2FE                                  __ptext85 9AA2  
                                __ptext77 99CE                                  __ptext69 901E  
                                __ptext94 A4D6                                  __ptext86 7FB2  
                                __ptext78 98F4                                  __ptext95 A4DE  
                                __ptext87 A4E6                                  __ptext79 7BB8  
                                __ptext96 8944                                  __ptext88 4726  
                                __ptext97 92DA                                  __ptext89 9BD4  
                                __ptext98 A01C                                  __ptext99 9234  
                                _dir_next 42B4                             dir_alloc@nent 012F  
                        ?_disk_initialize 0001                                  _ld_clust 93FC  
                        ?_BLUE_LED_TOGGLE 0001                                  _ld_dword 901E  
                          sync_window@res 00C7                     txb_heartbeat@msg_sent 0075  
                     __end_of_srb_is_full 918E                                sync_fs@res 00D2  
                            _remove_chain 679E                             ?_BLUE_LED_OFF 0001  
                        find_volume@bsect 0131                          find_volume@nclst 0129  
         write_timestamp_2bytes@timestamp 0060   SD_SPI_AsyncReadTasks@longTimeoutCounter 01CF  
                        find_volume@tsect 0124                                  f_open@dj 0169  
                                f_open@cl 015A                                  f_open@fp 0141  
                                f_open@fs 0166                                  f_open@dw 014E  
                                f_open@sc 0152                   __end_of_can_msg_handler 8F58  
                                _validate 80F4                                  isa$xinst 0000  
                                _srb_init 9618                  can_init@receive_callback 0062  
                                f_sync@fp 00D3                                  f_sync@fs 00D8  
             ?_can_generate_timing_params 0060                ??_ADCC_GetSingleConversion 0062  
                                _srb_push 8A32                         fxls_init@sys_mode 006C  
                             ??_dir_clear 00CE                               ??_dir_alloc 0131  
                                _st_clust 9E5A                                  _st_dword 950E  
                             ??_clst2sect 0072                                  _vfprintf 9F02  
          build_analog_data_msg@sensor_id 006C                             ??_sync_window 00B7  
                                _txb_init A1BC                               ??_disk_read 00B0  
          build_analog_data_msg@timestamp 0068               SPI1_ExchangeBlock@blockSize 0062  
                          _millis_counter 003E                               _RXB0DLCbits 3F85  
                        ?_send_status_err 0001                               _RXB1DLCbits 37F5  
                           _GREEN_LED_OFF A508                               _RXB0CONbits 3F80  
               ??_timer0_handle_interrupt 0001                               _SDSLOW_open A4DE  
                             _RXB1CONbits 37F0                                  mem_cmp@d 0068  
                                mem_cmp@r 006C                                  mem_cmp@s 006A  
                  ??_can_handle_interrupt 0011                                 put_fat@bc 00F1  
                                mem_cpy@d 0066                                 put_fat@fs 00D3  
                                mem_cpy@s 0068                                  mem_set@d 0066  
                                memcpy@d1 0060                                  memcpy@s1 0062  
                    txb_init@can_tx_ready 0075                             clst2sect@clst 006E  
                                intlevel2 0000                                 sprintf@ap 0087  
                         _fxls_get_whoami A42E                            dir_register@dp 0139  
                          dir_register@fs 013B              can_handle_interrupt@rcvd_msg 0015  
                             ??_fxls_init 006C                       __end_of_txb_enqueue A182  
                              _RED_LED_ON A4FC                            ??_BLUE_LED_OFF 0001  
                            dir_clear@szb 00D6                          ___lldiv@dividend 0060  
                 ?_PIN_MANAGER_Initialize 0001                              dir_alloc@res 0138  
                             _TXB0DLCbits 37E5                             sync_window@fs 00B5  
    SD_SPI_AsyncReadTasks@SingleBlockRead 004C                               f_mount@path 00E9  
                             _TXB0CONbits 37E0                                 sync_fs@fs 00C8  
                            ?_BLUE_LED_ON 0001                               _move_window 8DB4  
                  _SD_SPI_MediaInitialize 1724                              _srb_is_empty A05A  
                              _SPI1SDIPPS 3AE1                                _SPI1SCKPPS 3AE0  
                      i2c_read_reg8@value 0067                       txb_init@can_send_fp 0073  
                             _timer0_init A3D8                             _overflow_flag 004E  
                             ??_vfpfcnvrt 0070                                  put_fat@p 00EF  
                              _SPI1_Close A4E6                            ?_GREEN_LED_OFF 0001  
       SD_SPI_MediaInitialize@c_size_mult 00A5                             ?_dir_register 0139  
         SD_SPI_MediaInitialize@block_len 00A7                                  sprintf@f 0088  
                                sprintf@s 007F                               dir_clear@fs 00C8  
                             dir_alloc@dp 012D                               dir_alloc@fs 0134  
                        ___lldiv@quotient 0068              write_timestamp_2bytes@output 0062  
                     __end_of_sync_window 73FC                               dir_find@res 0132  
                       remove_chain@pclst 00FA                     _build_analog_data_msg 9486  
                        i2c_write@address 0063                             ?_create_chain 00F4  
                       i2c_read_reg8@data 006B                               _srb_is_full 90DC  
                            dir_next@clst 0129                          _create_name$2961 006E  
                        _create_name$2966 0070                             ?_GREEN_LED_ON 0001  
                             clst2sect@fs 006C                               dir_sdi@clst 0104  
              __end_of_SD_SPI_SectorWrite 7FB2            __end_of_PIN_MANAGER_Initialize 9BD4  
                       ??_ADCC_Initialize 0060                          i2c_read_reg8@reg 0066  
                            ?_create_name 0068                      __end_of_can_send_rdy A48C  
                             dir_next@ofs 0123                              f_write@csect 0132  
                        i2c_write@timeout 0064           __end_of_timer0_handle_interrupt A370  
                       ?_get_offset_bytes 0066                              f_write@wbuff 012F  
                            _put_fat$2606 00EB                              _put_fat$2607 00ED  
                    fxls_get_prod_rev@res 006C                               f_write@buff 0119  
                             f_write@clst 013A                                _SD_SendCmd 3904  
                             f_write@sect 0136                              ?_find_volume 00DA  
                             f_write@wcnt 013E                             ?_get_ldnumber 0060  
                SD_SPI_SectorWrite@buffer 0094                         ?_get_message_type 0001  
                            ?_disk_status 0001                __end_of_spi1_configuration FFCA  
              ??_SD_SPI_DelayMilliseconds 0061                          ?_can_msg_handler 000A  
                      ??_get_offset_bytes 006A                    SD_SPI_SectorWrite@info 009E  
